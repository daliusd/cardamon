{"version":3,"sources":["components/SidebarImage.module.css","components/ConfirmedDelete.module.css","components/EditableTitle.module.css","components/FontSelector.module.css","components/SidebarText.module.css","components/image.svg","components/ImageField.module.css","components/ContentEditable.module.css","components/text.svg","components/SidebarGeneratePng.module.css","components/SidebarGeneratePdf.module.css","components/SidebarMeasurements.module.css","components/SidebarSettings.module.css","components/SidebarUpload.module.css","components/CardSets.module.css","components/FieldController.module.css","actions.ts","constants.ts","requests.ts","utils.ts","types.ts","workerController.ts","storage.ts","fontLoader.tsx","sagas.ts","reducers.ts","components/KawaiiMessage.tsx","AboutPage.tsx","components/FieldController.tsx","components/ImageField.tsx","components/ContentEditable.tsx","components/TextField.tsx","components/Card.tsx","components/EditableTitle.tsx","components/Loader.tsx","components/SidebarDetails.tsx","components/SidebarGeneratePng.tsx","components/PDFGenerator.tsx","components/SidebarGeneratePdf.tsx","components/ColorButton.tsx","components/SidebarImage.tsx","components/SidebarImportExport.tsx","components/SidebarMeasurements.tsx","components/SidebarSettings.tsx","components/FontSelector.tsx","components/SidebarText.tsx","components/SidebarUpload.tsx","components/Sidebar.tsx","components/CardSet.tsx","CardSetPage.tsx","ChangelogPage.tsx","ErrorBoundry.tsx","components/ConfirmedDelete.tsx","components/CardSets.tsx","GamePage.tsx","components/Login.tsx","LoginPage.tsx","components/Games.tsx","Main.tsx","selectors.ts","components/Logout.tsx","components/Navbar.tsx","NotFoundPage.tsx","components/SignUp.tsx","SignUpPage.tsx","App.tsx","serviceWorker.ts","index.tsx","store.ts","components/Sidebar.module.css","components/Navbar.module.css","components/Loader.module.css","components/SidebarDetails.module.css","components/CardSet.module.css","components/pan.svg","components/zoom.svg","components/resize.svg","components/rotate.svg","components/Card.module.css"],"names":["module","exports","view","disabled","images","button","answer","input","fontFamily","fontVariant","__webpack_require__","p","over","content","cardsets","fieldcontroller","fieldcontrolleractivefield","fieldcontrolleractive","controller","touchactivated","SidebarState","CURRENT_CARDSET_VERSION","DEFAULT_FONT_SIZE","DEFAULT_LINE_HEIGHT","BLEED_WIDTH","INIT_REQUEST","MESSAGE_DISPLAY","MESSAGE_HIDE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_REQUEST","LOGOUT_FAILURE","LOGOUT_SUCCESS","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_FAILURE","GAME_CREATE_REQUEST","GAME_CREATE_SUCCESS","GAME_DELETE_REQUEST","GAME_RENAME_REQUEST","GAME_LIST_SUCCESS","GAME_LIST_REQUEST","GAME_LIST_FAILURE","GAME_LIST_RESET","GAME_SELECT_REQUEST","GAME_SELECT_SUCCESS","GAME_SELECT_FAILURE","GAME_CREATE_PDF_REQUEST","GAME_CREATE_PDF_SUCCESS","GAME_CREATE_PDF_FAILURE","GAME_CREATE_PNG_REQUEST","GAME_CREATE_PNG_SUCCESS","GAME_CREATE_PNG_FAILURE","CARDSETS_SELECT_SUCCESS","CARDSET_CREATE_REQUEST","CARDSET_CREATE_SUCCESS","CARDSET_CREATE_FAILURE","CARDSET_DELETE_REQUEST","CARDSET_RENAME_REQUEST","CARDSET_IMPORT_DATA","CARDSET_LIST_SUCCESS","CARDSET_LIST_RESET","CARDSET_SELECT_REQUEST","CARDSET_SELECT_SUCCESS","CARDSET_CREATE_CARD","CARDSET_CLONE_CARD","CARDSET_REMOVE_CARD","CARDSET_UPDATE_CARD_COUNT","CARDSET_ADD_TEXT_FIELD","CARDSET_ADD_IMAGE_FIELD","CARDSET_CHANGE_ACTIVE_FIELD_NAME","CARDSET_REMOVE_ACTIVE_FIELD","CARDSET_RAISE_ACTIVE_FIELD","CARDSET_RAISE_ACTIVE_FIELD_TO_TOP","CARDSET_LOWER_ACTIVE_FIELD","CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM","CARDSET_LOCK_ACTIVE_FIELD","CARDSET_UNLOCK_ACTIVE_FIELD","CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD","CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD","CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD","CARDSET_CHANGE_WIDTH","CARDSET_CHANGE_HEIGHT","CARDSET_CHANGE_IS_TWO_SIDED","CARDSET_CHANGE_SNAPPING_DISTANCE","CARDSET_CHANGE_FIELD_POSITION","CARDSET_CHANGE_FIELD_PAN","CARDSET_CHANGE_FIELD_ZOOM","CARDSET_CHANGE_FIELD_SIZE","CARDSET_CHANGE_FIELD_ANGLE","CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN","CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR","CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY","CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT","CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT","CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE","CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT","CARDSET_CHANGE_TEXT","CARDSET_CHANGE_IMAGE","CARDSET_CHANGE_IMAGE_BASE64","CARDSET_SET_ACTIVE_CARD_AND_FIELD","CARDSET_CHANGE_APPLY_TO_ALLCARDS","CARDSET_SELECT_FAILURE","CARDSET_SET_SIDEBAR_STATE","CARDSET_SET_ZOOM","CARDSET_UPLOAD_IMAGE","CARDSET_UPLOAD_IMAGE_SUCCESS","CARDSET_UPLOAD_IMAGE_FAILURE","CARDSET_DELETE_IMAGE","CARDSET_UNDO","CARDSET_REDO","IMAGE_LIST_REQUEST","IMAGE_LIST_SUCCESS","IMAGE_LIST_FAILURE","messageDisplay","type","text","id","message","shortid","generate","gameCreateRequest","gamename","gameDeleteRequest","gameId","gameRenameRequest","newName","gameSelectRequest","updateCardSets","gameCreatePdfRequest","collectionType","collectionId","pageWidth","pageHeight","topBottomMargin","leftRightMargin","verticalSpace","horizontalSpace","includeBleedingArea","cutMarksForScissors","cutMarksForGuillotine","cutMarksInMarginArea","cutMarksOnFrontSideOnly","gameCreatePngRequest","dpi","cardSetCreateRequest","cardsetname","width","height","cardSetDeleteRequest","cardSetId","cardSetRenameRequest","cardSetImportData","data","cardSetCreateCard","card","cardSetCloneCard","cardSetRemoveCard","cardSetUpdateCardCount","count","cardSetAddTextField","cardSetAddImageField","cardSetChangeActiveFieldName","name","cardSetRemoveActiveField","cardSetRaiseActiveField","cardSetRaiseActiveFieldToTop","cardSetLowerActiveField","cardSetLowerActiveFieldToBottom","cardSetLockActiveField","cardSetUnlockActiveField","cardSetChangeFitForActiveField","fit","cardSetChangeCropForActiveField","crop","cardSetChangeUnclickableForActiveField","unclickable","cardSetChangeWidth","maintainAspectRatio","resizeContent","cardSetChangeHeight","cardSetChangeIsTwoSided","isTwoSided","cardSetChangeSnappingDistance","snappingDistance","cardSetChangeFieldPosition","cardId","fieldId","x","y","group","cardSetChangeFieldPan","cx","cy","cardSetChangeFieldZoom","zoom","cardSetChangeFieldSize","cardSetChangeFieldAngle","angle","cardSetChangeActiveTextFieldAlign","align","cardSetChangeActiveTextFieldColor","color","cardSetChangeActiveTextFieldFontVariant","cardSetChangeActiveTextFieldFontFamilyAndVariant","cardSetChangeActiveTextFieldFontSize","fontSize","cardSetChangeActiveTextFieldLineHeight","lineHeight","cardSetChangeText","textInfo","cardSetChangeImage","imageInfo","cardSetChangeImageBase64","base64","cardSetActiveCardAndField","isBackActive","cardSetChangeApplyToAllCards","applyToAllCards","cardSetSetSidebarState","sidebarState","cardSetSetZoom","cardSetUploadImage","file","load","error","progress","abort","cancelToken","cardSetDeleteImage","imageId","cardSetUndo","cardSetRedo","imageListRequest","filter","location","handleAxiosError","response","Error","request","console","log","getTokens","creds","axios","post","then","resp","catch","refreshToken","refreshTokenValue","config","headers","Authorization","concat","accessToken","deleteAccessToken","token","delete","status","deleteRefreshToken","registerUser","getRequest","url","get","postRequest","postRequestFormDataCancelable","progressCallback","cancelCallback","Content-Type","onUploadProgress","isCancel","putRequest","put","deleteRequest","downloadBlob","blobURL","filename","resolve","tempLink","document","createElement","style","display","href","setAttribute","download","body","appendChild","click","removeChild","setTimeout","window","URL","revokeObjectURL","rotateVec","a","sinA","Math","sin","cosA","cos","rx","ry","calculateImageDimensions","imageFieldInfo","calculatedImageWidth","calculatedImageHeight","imageWidth","imageHeight","reportError","ImageType","generatePdfUsingWorker","Worker","Promise","reject","worker","addEventListener","event","stack","postMessage","e","loadImage","img","Image","onload","onerror","src","prepareImageToDrawSpace","context","imageToDraw","ptpmm","save","translate","rotate","ax","ay","rect","clip","fixWidthAndHeightInSvg","doc","XmlDocument","attr","viewBox","split","btoa","toString","compressed","PNGGenerator","_this","this","Object","classCallCheck","tasksQueue","push","cardSetData","cardIdx","isBack","cardsetFolder","offscreenCanvas","calculatedWidth","round","calculatedHeight","getContext","fillStyle","fillRect","stopped","length","task","shift","SVG_PATH","scale","Path2D","fill","restore","IMAGE","SVG","undefined","dim","image","svgData","atob","drawImage","BLOCK_START","BLOCK_END","subType","delay","dataUrl","toDataURL","slice","padStart","zip","cardsetsList","cardsetInfo","generateCardset","cardsetId","JSON","parse","folder","cardsAllIds","entries","generateCard","generatePngUsingWorker","_ref4","asyncToGenerator","regenerator_default","mark","_callee4","pngGenerator","blob","wrap","_context4","prev","next","JSZip","generateGame","generateAsync","sent","createObjectURL","stop","_x15","_x16","_x17","_x18","apply","arguments","saveTokens","localStorage","setItem","saveAccessToken","cleanTokens","removeItem","getTokenFromStorage","getItem","getRefreshTokenFromStorage","loadFontsUsedInPlaceholders","fontsToLoad","Set","add","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","fieldsAllIds","Symbol","iterator","done","value","field","fields","fontToLoad","err","return","WebFont","objectSpread","active","inactive","webFontsLoadPromise","google","families","toConsumableArray","Array","from","putError","putInfo","putProgress","hideProgress","handleMessageDisplay","getToken","handleLoginRequest","handleLoginSuccess","logoutToken","logoutRefreshToken","handleLogoutRequest","handleSignupRequest","handleInitRequest","authorizedGetRequest","authorizedPostRequest","authorizedDeleteRequest","authorizedPostFormDataRequest","authorizedPutRequest","handleGameCreateRequest","handleGameDeleteRequest","handleGameRenameRequest","handleGameListRequest","handleGameSelectRequest","handleGameCreatePdfRequest","handleGameCreatePngRequest","handleCardSetCreateRequest","handleCardSetDeleteRequest","handleCardSetRenameRequest","handleCardSetSelectRequest","handleCardSetUploadImage","handleCardSetDeleteImage","handleCardSetFitChange","handleCardSetChangeImage","handleCardSetChange","handleImageListRequest","rootSaga","_context","call","_marked","_context2","_marked2","_context3","abrupt","_marked3","messageId","_marked4","action","_context5","_marked5","validateToken","jwtDecode","exp","Date","getTime","withErrorIfMissing","getFreshToken","newToken","_args6","_context6","_marked6","_context7","t0","_marked7","_context8","_marked8","_context9","_marked9","_context10","_marked10","_context11","_marked11","_context12","_marked12","_context13","_marked13","_context14","_marked14","_context15","_marked15","_context16","_marked16","_context17","_marked17","_context18","_marked18","_context19","_marked19","_context20","_marked20","_context21","_marked21","allIds","byId","_context22","games","map","g","reduce","obj","_marked22","_context23","_marked23","progressId","_context24","_marked24","_context25","_marked25","_context26","stringify","version","_marked26","state","_context27","select","_marked27","_context28","_marked28","loadImageInfo","naturalWidth","naturalHeight","processData","_x","_processData","_callee","processedData","plId","placeholder","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_iterator4","_step4","_placeholder","_cardId","_fieldId","fieldInfo","info","_context37","placeholdersAllIds","keys","placeholders","global","texts","finish","t1","cardsById","t2","t3","t4","t5","parsedData","_context29","ActionCreators","clearHistory","_marked29","formData","_context30","FormData","set","append","lengthComputable","loaded","total","_marked30","_context31","_marked31","adjustSvg","preserveAspectRatio","walkChildren","node","children","child","imageResp","svg","_svg","_context32","cardset","present","activeFieldId","_marked32","cardsToFix","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","cardFields","_svg2","_context33","_marked33","closeHandler","preventDefault","returnValue","allowWindowClose","removeEventListener","_context34","_marked34","game","_context35","encodeURIComponent","_marked35","_context36","all","takeEvery","takeLatest","_marked36","ACTIVITY_SELECTING","ACTIVITY_CREATING_PDF","ACTIVITY_CREATING_PNG","DefaultMessageState","messages","DefaultAuthState","isAuthenticated","user","DefaultSignUpState","signingup","DefaultGameState","activity","DefaultCardSetsState","DefaultCardSetState","activeCardId","textSettings","activeSidebar","DefaultImageState","resizeFields","widthRatio","heightRatio","newFields","undoableCardset","undoable","assign","defineProperty","newCard","index","indexOf","isOnBack","fieldIndex","splice","locked","unshift","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","fitImageWidth","fitImageHeight","min","max","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","oldZoom","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","nx","ny","_rotateVec","ratio","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","testFieldInfo","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","Measurements","Details","Text","ignoreInitialState","undoType","redoType","groupBy","startsWith","reducers","combineReducers","find","m","auth","username","signup","Character","AboutPage","react_default","Component","FieldController","props","possibleConstructorReturn","getPrototypeOf","cDiv","panDiv","zoomDiv","resizeDiv","rotateDiv","originalBodyCursor","handleBrowserDragStart","stopPropagation","handleMouseDown","handleDragStart","handleMouseMove","handleMouseUp","handleTouchStart","touches","changedTouches","handleTouchMove","passive","handleTouchEnd","co","current","cursor","setState","startX","clientX","startY","clientY","handleDragMove","ctrlKey","disableSnapping","_this$props","isLocked","_this$props2","ppmm","onDrag","handleComplete","isTouchEvent","_this$props3","activatedUsingTouch","handlePanMouseDown","handlePanStart","handlePanMouseMove","handlePanMouseUp","handlePanTouchStart","handlePanTouchMove","handlePanTouchEnd","panIcon","handlePanMove","_this$props4","onPan","newCx","newCy","handlePanComplete","_this$props5","handleZoomMouseDown","handleZoomStart","handleZoomMouseMove","handleZoomMouseUp","handleZoomTouchStart","handleZoomTouchMove","handleZoomTouchEnd","zoomIcon","handleZoomMove","_this$props6","onZoom","dx","dy","z","abs","newZoom","handleZoomComplete","handleResizeMouseDown","handleResizeStart","handleResizeMouseMove","handleResizeMouseUp","handleResizeTouchStart","handleResizeTouchMove","handleResizeTouchEnd","resizeIcon","handleResizeMove","_this$props7","onResize","_rotateVec2","newWidth","newHeight","handleResizeComplete","_this$props8","handleRotateMouseDown","handleRotateStart","handleRotateMouseMove","handleRotateMouseUp","handleRotateTouchStart","handleRotateTouchMove","handleRotateTouchEnd","_this$props9","rotateIcon","getBoundingClientRect","left","clientWidth","top","clientHeight","originalAngle","atan2","handleRotateMove","_this$props10","onRotate","_this$state","newAngle","PI","handleRotateComplete","React","createRef","_this$props11","isActive","isActiveField","isUnclickable","ref","onDragStart","className","position","transform","pointerEvents","alt","right","bottom","connect","ImageField","handleDrag","cardOnly","dispatch","handlePan","handleZoom","handleResize","handleRotate","wasMoved","handleDragOver","dragIsOver","handleDragLeave","handleDrop","dataTransfer","getData","imagefilesPos","ii","substr","imageUrl","cardWidth","cardHeight","components_FieldController","overflow","onMouseDown","onTouchStart","onMouseMove","onTouchMove","onMouseUp","onTouchEnd","onDragOver","onDragLeave","onDrop","opacity","emptyImageImage","PureComponent","ContentEditable","editDiv","currentText","currentAlign","currentColor","currentFontFamily","currentFontVariant","currentFontSize","currentLineHeight","timeout","handleStart","handleMove","focus","onFocus","textValue","range","createRange","selectNodeContents","collapse","selection","getSelection","removeAllRanges","addRange","updateContent","timeoutInMiliseconds","innerHTML","imgUrlIdx","clearTimeout","handleBlur","handleInput","handlePaste","clipboardData","s","replace","join","execCommand","nextProps","isItalic","fontWeight","parseInt","contentEditable","onBlur","onInput","onPaste","textAlign","DEFAULT_FONT","fontStyle","outline","overflowWrap","dangerouslySetInnerHTML","__html","TextField","textFieldInfo","zIndex","emptyTextImage","components_ContentEditable","Card","dimensions","handleFieldDeselect","target","getAttribute","_this2","fieldsIds","isActiveCard","widthWithBleeds","heightWithBleeds","index_esm","client","contentRect","_ref","measureRef","components_ImageField","key","components_TextField","border","borderRadius","title","EditableTitle","titleIsEdited","handleClick","handleChange","onChange","Fragment","onClick","autoFocus","KawaiiMessage","character","mood","marginTop","marginBottom","padding","backgroundColor","grid","Ghost","size","Browser","marginLeft","Loader","fixed","small","loader","relative","SidebarDetails","_Component","_getPrototypeOf2","_len","args","_key","handleCloneCardClick","activeCard","handleRemoveCardClick","handleCountChange","inherits","createClass","visible","SidebarGeneratePng","handleDpiChange","handleGenerate","activeCardset","isCreatingPng","htmlFor","step","PDFGenerator","handleGeneratePdfClick","handlePageWidthChange","parseFloat","handlePageHeightChange","handleTopBottomMarginChange","handleLeftRightMarginChange","handleVerticalSpaceChange","handleHorizontalSpaceChange","handleIncludeBleedingAreaChange","checked","handleCutMarksForScissors","handleCutMarksForGuillotine","handleCutMarksInMarginArea","handleCutMarksOnFrontSideOnly","isCreatingPdf","withHelp","KawaiiMessage_KawaiiMessage","SidebarGeneratePdf","activeCardSetId","components_PDFGenerator","ColorButton","displayColorPicker","handleClose","react_color_lib","disableAlpha","SidebarImage","handleAddImageClick","changeImage","activeFieldInfo","handleRemoveImageFromFieldClick","handleRemoveClick","handleNameChange","trim","handleFilterChange","handleImageSelect","imageName","handleRaise","handleLower","handleLockField","handleUnlockField","handleFitOptionChange","handleOptionChange","handleColorChange","hex","handleRemoveColorClick","handleApplyToAllCardChange","handleChangeCrop","ColorButton_ColorButton","im","data-width","data-height","registerPlugin","FilePondPluginFileValidateType","SidebarImportExport","prepareImagePaths","activeGame","ending","md5","preparedImages","fieldsByCard","endsWith","handleExportJson","json","Blob","handleExportCsv","preparedFields","csvData","header","usedNames","dataRow","written","fieldIndo","csv","Papa","unparse","handleProcess","fieldName","metadata","reader","FileReader","readAsText","result","isGlobal","newCardsAllIds","newCardsById","row","handleRevert","uniqueFileId","react_filepond","server","process","revert","acceptedFileTypes","SidebarMeasurements","handlePrevField","activeField","prevField","idx","handleNextField","nextField","handleWidthChange","handleHeightChange","handleXChange","handleYChange","handleAngleChange","_this$props12","handleChangeUnclickable","_this$props13","_this$props14","SidebarSettings","_this$state2","handleIsTwoSidedChange","handleSnappingDistance","_this$state3","options","webfonts","sort","fi","label","FontSelector","getFontStringForLoad","family","variant","stringForLoad","selectedOption","activeFontVariant","wf","handleFontVariantChange","activeFont","handleFontSizeChange","handleLineHeightChange","selectedFontFamily","f","fontVariantOptions","fv","selectedFontVariant","activeFontSize","react_select_esm","activeLineHeight","SidebarText","handleAddTextClick","handleSetTextAlignLeft","getRangeAt","rangeCount","collapsed","handleSetTextAlignCenter","handleSetTextAlignRight","handleSetTextBold","handleSetTextItalic","components_FontSelector","FilePondPluginFileValidateSize","SidebarUpload","source","CancelToken","cancel","allowMultiple","allowFileSizeValidation","maxFileSize","SIDEBARS","Settings","icon","component","Upload","ImportExport","Png","Pdf","Sidebar","handleSidebar","sidebar","controls","sb","hidden","CardSet","keyDown","shiftKey","handleCreateCardClick","handleClickOutsideOfCard","handleCardSetNameChange","activeCardSet","EditableTitle_EditableTitle","cardsetview","components_Sidebar","Loader_Loader","gridTemplateColumns","components_Card","createCard","CardSetPage","match","params","components_CardSet","ChangelogPage","evt","ErrorBoundary","hasError","ConfirmedDelete","deleteClicked","handleRemove","handleYes","onDelete","handleNo","question","CardSets","cardSetName","handleGameNameChange","handleCreateCardSetClick","handleCardSetDelete","b","cardsetItems","Link","to","ConfirmedDelete_ConfirmedDelete","GamePage","components_CardSets","Login","password","handleUsernameChange","handlePasswordChange","handleSubmit","onLogin","onLoginFailure","onSubmit","LoginPage","Login_Login","loginRequest","msg","Redirect","Games","gameName","handleCreateGameClick","handleGameDelete","gameItems","Main","components_Games","getActiveGame","getActiveCardSet","Logout","onLogout","Navbar","menu","components_Logout","NotFoundPage","SignUp","passwordRepeat","handlePasswordRepeatChange","onSignUp","SignUpPage","components_SignUp","signupRequest","App","isIE","BrowserRouter","ErrorBoundry_ErrorBoundary","components_Navbar","Switch","Route","exact","path","getFullYear","Boolean","hostname","store","sagaMiddleware","createSagaMiddleware","createStore","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","run","createAppStore","ReactDOM","render","es","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister","loader-small"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,KAAA,2BAAAC,SAAA,+BAAAC,OAAA,yjyNCAlBJ,EAAAC,QAAA,CAAkBI,OAAA,gCAAAC,OAAA,sDCAlBN,EAAAC,QAAA,CAAkBM,MAAA,mDCAlBP,EAAAC,QAAA,CAAkBO,WAAA,iCAAAC,YAAA,wDCAlBT,EAAAC,QAAA,CAAkBC,KAAA,0BAAAC,SAAA,oDCDlBH,EAAAC,QAAiBS,EAAAC,EAAuB,uDCCxCX,EAAAC,QAAA,CAAkBW,KAAA,+CCAlBZ,EAAAC,QAAA,CAAkBY,QAAA,uDCDlBb,EAAAC,QAAiBS,EAAAC,EAAuB,sDCCxCX,EAAAC,QAAA,CAAkBC,KAAA,uDCAlBF,EAAAC,QAAA,CAAkBC,KAAA,6ECAlBF,EAAAC,QAAA,CAAkBC,KAAA,kCAAAC,SAAA,4DCAlBH,EAAAC,QAAA,CAAkBC,KAAA,oDCAlBF,EAAAC,QAAA,CAAkBC,KAAA,kDCAlBF,EAAAC,QAAA,CAAkBa,SAAA,0KCAlBd,EAAAC,QAAA,CAAkBc,gBAAA,yCAAAC,2BAAA,oDAAAC,sBAAA,+CAAAC,WAAA,oCAAAC,eAAA,mHCggBNC,4ICjgBCC,EAA0B,EAG1BC,EAAoB,EACpBC,EAAsB,KAEtBC,EAAc,uBDedC,EAAe,eACfC,EAAkB,kBAClBC,EAAe,eACfC,EAAgB,gBAChBC,EAAgB,gBAChBC,EAAgB,gBAChBC,EAAiB,iBACjBC,EAAiB,iBACjBC,EAAiB,iBACjBC,EAAiB,iBACjBC,EAAiB,iBACjBC,EAAiB,iBACjBC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAoB,oBACpBC,EAAoB,oBACpBC,EAAoB,oBACpBC,EAAkB,kBAClBC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAA0B,0BAC1BC,EAA0B,0BAC1BC,EAA0B,0BAC1BC,EAA0B,0BAC1BC,GAA0B,0BAC1BC,GAA0B,0BAC1BC,GAA0B,0BAC1BC,GAAyB,yBACzBC,GAAyB,yBACzBC,GAAyB,yBACzBC,GAAyB,yBACzBC,GAAyB,yBACzBC,GAAsB,sBACtBC,GAAuB,uBAGvBC,GAAqB,qBACrBC,GAAyB,yBACzBC,GAAyB,yBACzBC,GAAsB,sBACtBC,GAAqB,qBACrBC,GAAsB,sBACtBC,GAA4B,4BAC5BC,GAAyB,yBACzBC,GAA0B,0BAC1BC,GAAmC,mCACnCC,GAA8B,8BAC9BC,GAA6B,6BAC7BC,GAAoC,oCACpCC,GAA6B,uBAC7BC,GAAuC,uCACvCC,GAA4B,4BAC5BC,GAA8B,8BAC9BC,GAAsC,sCACtCC,GAAuC,uCACvCC,GAA8C,8CAC9CC,GAAuB,uBACvBC,GAAwB,wBACxBC,GAA8B,8BAC9BC,GAAmC,mCACnCC,GAAgC,gCAChCC,GAA2B,2BAC3BC,GAA4B,4BAC5BC,GAA4B,4BAC5BC,GAA6B,6BAC7BC,GAAyC,yCACzCC,GAAyC,yCACzCC,GAA+C,+CAC/CC,GAAgD,gDAChDC,GACT,2DACSC,GAA6C,6CAC7CC,GAA+C,+CAC/CC,GAAsB,sBACtBC,GAAuB,uBACvBC,GAA8B,8BAC9BC,GAAoC,oCACpCC,GAAmC,mCACnCC,GAAyB,yBACzBC,GAA4B,4BAC5BC,GAAmB,mBACnBC,GAAuB,uBACvBC,GAA+B,+BAC/BC,GAA+B,+BAC/BC,GAAuB,uBACvBC,GAAe,eACfC,GAAe,eACfC,GAAqB,qBACrBC,GAAqB,qBACrBC,GAAqB,+BAgZtB9F,0OAuIL,IAAM+F,GAAiB,SAACC,EAAcC,EAAcC,GACvD,MAAO,CACHF,KAAM1F,EACN6F,QAAS,CACLD,GAAIA,GAAME,IAAQC,WAClBL,KAAMA,EACNC,KAAMA,KA6BLK,GAAoB,SAACC,GAC9B,MAAO,CACHP,KAAM/E,EACNsF,SAAUA,IAILC,GAAoB,SAACC,GAC9B,MAAO,CACHT,KAAM7E,EACNsF,WAIKC,GAAoB,SAACD,EAAgBE,GAC9C,MAAO,CACHX,KAAM5E,EACNqF,SACAE,YAUKC,GAAoB,SAACV,EAAYW,GAC1C,MAAO,CACHb,KAAMvE,EACNyE,KACAW,mBAIKC,GAAuB,SAChCC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,MAAO,CACH3B,KAAMpE,EACNmF,iBACAC,eACAC,YACAC,aACAC,kBACAC,kBACAC,gBACAC,kBACAC,sBACAC,sBACAC,wBACAC,uBACAC,4BAIKC,GAAuB,SAChCC,EACAd,EACAC,GAEA,MAAO,CACHhB,KAAMjE,EACN8F,MACAd,iBACAC,iBAIKc,GAAuB,SAChCC,EACAC,EACAC,EACAxB,GAEA,MAAO,CACHT,KAAM7D,GACN4F,YAAaA,EACbC,QACAC,SACAxB,WAIKyB,GAAuB,SAACC,GACjC,MAAO,CACHnC,KAAM1D,GACN6F,cAIKC,GAAuB,SAACD,EAAmBxB,GACpD,MAAO,CACHX,KAAMzD,GACN4F,YACAxB,YAIK0B,GAAoB,SAACC,GAC9B,MAAO,CACHtC,KAAMxD,GACN8F,SAWKC,GAAoB,SAACC,GAC9B,MAAO,CACHxC,KAAMnD,GACN2F,SAIKC,GAAmB,SAACD,GAC7B,MAAO,CACHxC,KAAMlD,GACN0F,SAIKE,GAAoB,SAACF,GAC9B,MAAO,CACHxC,KAAMjD,GACNyF,SAIKG,GAAyB,SAACH,EAAgBI,GACnD,MAAO,CACH5C,KAAMhD,GACNwF,OACAI,UAIKC,GAAsB,WAC/B,MAAO,CACH7C,KAAM/C,KAID6F,GAAuB,WAChC,MAAO,CACH9C,KAAM9C,KAID6F,GAA+B,SAACC,GACzC,MAAO,CACHhD,KAAM7C,GACN6F,SAIKC,GAA2B,WACpC,MAAO,CACHjD,KAAM5C,KAID8F,GAA0B,WACnC,MAAO,CACHlD,KAAM3C,KAID8F,GAA+B,WACxC,MAAO,CACHnD,KAAM1C,KAID8F,GAA0B,WACnC,MAAO,CACHpD,KAAMzC,KAID8F,GAAkC,WAC3C,MAAO,CACHrD,KAAMxC,KAID8F,GAAyB,WAClC,MAAO,CACHtD,KAAMvC,KAID8F,GAA2B,WACpC,MAAO,CACHvD,KAAMtC,KAID8F,GAAiC,SAACC,GAC3C,MAAO,CACHzD,KAAMrC,GACN8F,QAIKC,GAAkC,SAACC,GAC5C,MAAO,CACH3D,KAAMpC,GACN+F,SAIKC,GAAyC,SAClDC,GAEA,MAAO,CACH7D,KAAMnC,GACNgG,gBAIKC,GAAqB,SAC9B9B,EACA+B,EACAC,GAEA,MAAO,CACHhE,KAAMlC,GACNkE,QACA+B,sBACAC,kBAIKC,GAAsB,SAC/BhC,EACA8B,EACAC,GAEA,MAAO,CACHhE,KAAMjC,GACNkE,SACA8B,sBACAC,kBAIKE,GAA0B,SAACC,GACpC,MAAO,CACHnE,KAAMhC,GACNmG,eAIKC,GAAgC,SAACC,GAC1C,MAAO,CACHrE,KAAM/B,GACNoG,qBAIKC,GAA6B,SACtCC,EACAC,EACAC,EACAC,EACAC,GAEA,MAAO,CACH3E,KAAM9B,GACNqG,SACAC,UACAC,IACAC,IACAC,UAIKC,GAAwB,SACjCL,EACAC,EACAK,EACAC,EACAH,GAEA,MAAO,CACH3E,KAAM7B,GACNoG,SACAC,UACAK,KACAC,KACAH,UAIKI,GAAyB,SAClCR,EACAC,EACAQ,EACAL,GAEA,MAAO,CACH3E,KAAM5B,GACNmG,SACAC,UACAQ,OACAL,UAIKM,GAAyB,SAClCV,EACAC,EACAxC,EACAC,EACA0C,GAEA,MAAO,CACH3E,KAAM3B,GACNkG,SACAC,UACAxC,QACAC,SACA0C,UAIKO,GAA0B,SACnCX,EACAC,EACAW,EACAR,GAEA,MAAO,CACH3E,KAAM1B,GACNiG,SACAC,UACAW,QACAR,UAIKS,GAAoC,SAACC,GAC9C,MAAO,CACHrF,KAAMzB,GACN8G,UAIKC,GAAoC,SAACC,GAC9C,MAAO,CACHvF,KAAMxB,GACN+G,UAWKC,GAA0C,SACnDnM,GAEA,MAAO,CACH2G,KAAMtB,GACNrF,gBAIKoM,GAAmD,SAC5DrM,EACAC,GAEA,MAAO,CACH2G,KAAMrB,GACNvF,aACAC,gBAIKqM,GAAuC,SAACC,GACjD,MAAO,CACH3F,KAAMpB,GACN+G,aAIKC,GAAyC,SAACC,GACnD,MAAO,CACH7F,KAAMnB,GACNgH,eAIKC,GAAoB,SAACvB,EAAgBC,EAAiBuB,GAC/D,MAAO,CACH/F,KAAMlB,GACNyF,SACAC,UACAuB,aAIKC,GAAqB,SAC9BzB,EACAC,EACAyB,GAEA,MAAO,CACHjG,KAAMjB,GACNwF,SACAC,UACAyB,cAIKC,GAA2B,SACpC3B,EACAC,EACA2B,GAEA,MAAO,CACHnG,KAAMhB,GACNuF,SACAC,UACA2B,WAIKC,GAA4B,SACrC7B,EACA8B,EACA7B,GAEA,MAAO,CACHxE,KAAMf,GACNsF,SACA8B,eACA7B,YAIK8B,GAA+B,SAACC,GACzC,MAAO,CACHvG,KAAMd,GACNqH,oBAIKC,GAAyB,SAACC,GACnC,MAAO,CACHzG,KAAMZ,GACNqH,iBAIKC,GAAiB,SAAC1B,GAC3B,MAAO,CACHhF,KAAMX,GACN2F,SAIK2B,GAAqB,SAC9BlG,EACAmG,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,MAAO,CACHjH,KAAMV,GACNmB,SACAmG,OACAC,OACAC,QACAC,WACAC,QACAC,gBAIKC,GAAqB,SAC9BC,EACAN,EACAC,GAEA,MAAO,CACH9G,KAAMP,GACN0H,UACAN,OACAC,UAIKM,GAAc,WACvB,MAAO,CACHpH,KAAMN,KAID2H,GAAc,WACvB,MAAO,CACHrH,KAAML,KAID2H,GAAmB,SAACC,EAAgBC,GAC7C,MAAO,CACHxH,KAAMJ,GACN2H,SACAC,iCE7rCD,SAASC,GAAiBX,GAC7B,MAAIA,EAAMY,SAIA,IAAIC,MAAMb,EAAMY,SAASpF,KAAKnC,SAC7B2G,EAAMc,SACbC,QAAQC,IAAIhB,EAAMc,SACZ,IAAID,MAAMb,EAAMc,UAEhB,IAAID,MAAM,oBAIjB,SAASI,GAAUC,GACtB,OAAOC,KACFC,KAAK,cAAeF,GACpBG,KAAK,SAAAC,GACF,OAAOA,EAAK9F,OAEf+F,MAAM,SAAAvB,GACHW,GAAiBX,KAItB,SAASwB,GAAaC,GACzB,IAAIC,EAAS,CACTC,QAAS,CAAEC,cAAa,UAAAC,OAAYJ,KAExC,OAAON,KACFC,KAAK,qBAAsB,GAAIM,GAC/BL,KAAK,SAAAC,GACF,OAAOA,EAAK9F,KAAKsG,cAEpBP,MAAM,SAAAvB,GACHW,GAAiBX,KAItB,SAAS+B,GAAkBC,GAC9B,IAAIN,EAAS,CACTC,QAAS,CAAEC,cAAa,UAAAC,OAAYG,KAExC,OAAOb,KACFc,OAAO,qBAAsBP,GAC7BL,KAAK,SAAAC,GACF,OAAOA,EAAK9F,OAEf+F,MAAM,SAAAvB,GACH,GAA8B,MAA1BA,EAAMY,SAASsB,OAAgB,MAAO,GAC1CvB,GAAiBX,KAItB,SAASmC,GAAmBH,GAC/B,IAAIN,EAAS,CACTC,QAAS,CAAEC,cAAa,UAAAC,OAAYG,KAExC,OAAOb,KACFc,OAAO,sBAAuBP,GAC9BL,KAAK,SAAAC,GACF,OAAOA,EAAK9F,OAEf+F,MAAM,SAAAvB,GACH,GAA8B,MAA1BA,EAAMY,SAASsB,OAAgB,MAAO,GAC1CvB,GAAiBX,KAItB,SAASoC,GAAalB,GACzB,OAAOC,KACFC,KAAK,aAAcF,GACnBG,KAAK,SAAAC,GACF,OAAOA,EAAK9F,OAEf+F,MAAM,SAAAvB,GACHW,GAAiBX,KAItB,SAASqC,GAAWC,EAAaN,GACpC,IAAIN,EAAS,CACTC,QAAS,CAAEC,cAAa,UAAAC,OAAYG,KAExC,OAAOb,KACFoB,IAAID,EAAKZ,GACTL,KAAK,SAAAC,GACF,OAAOA,IAEVC,MAAM,SAAAvB,GACHW,GAAiBX,KAItB,SAASwC,GAAYF,EAAaN,EAAexG,GACpD,IAAIkG,EAAS,CACTC,QAAS,CAAEC,cAAa,UAAAC,OAAYG,KAExC,OAAOb,KACFC,KAAKkB,EAAK9G,EAAMkG,GAChBL,KAAK,SAAAC,GACF,OAAOA,EAAK9F,OAEf+F,MAAM,SAAAvB,GACHW,GAAiBX,KAItB,SAASyC,GACZH,EACAN,EACAxG,EACAkH,EACAvC,EACAwC,GAEA,IAAIjB,EAAS,CACTC,QAAS,CACLC,cAAa,UAAAC,OAAYG,GACzBY,eAAgB,uBAEpBzC,cACA0C,iBAAkBH,GAGtB,OAAOvB,KACFC,KAAKkB,EAAK9G,EAAMkG,GAChBL,KAAK,SAAAC,GACF,OAAOA,EAAK9F,OAEf+F,MAAM,SAAAvB,GACCmB,KAAM2B,SAAS9C,GACf2C,IAEAhC,GAAiBX,KAK1B,SAAS+C,GAAWT,EAAaN,EAAexG,GACnD,IAAIkG,EAAS,CACTC,QAAS,CAAEC,cAAa,UAAAC,OAAYG,KAExC,OAAOb,KACF6B,IAAIV,EAAK9G,EAAMkG,GACfL,KAAK,SAAAC,GACF,OAAOA,EAAK9F,OAEf+F,MAAM,SAAAvB,GACHW,GAAiBX,KAItB,SAASiD,GAAcX,EAAaN,GACvC,IAAIN,EAAS,CACTC,QAAS,CAAEC,cAAa,UAAAC,OAAYG,KAExC,OAAOb,KACFc,OAAOK,EAAKZ,GACZL,KAAK,SAAAC,GACF,OAAOA,EAAK9F,OAEf+F,MAAM,SAAAvB,GACHW,GAAiBX,mCCpKtB,SAASkD,GAAaC,EAAiBC,EAAkBC,GAC5D,IAAMC,EAAWC,SAASC,cAAc,KACxCF,EAASG,MAAMC,QAAU,OACzBJ,EAASK,KAAOR,EAChBG,EAASM,aAAa,WAAYR,GACD,qBAAtBE,EAASO,UAChBP,EAASM,aAAa,SAAU,UAEpCL,SAASO,KAAKC,YAAYT,GAC1BA,EAASU,QACTT,SAASO,KAAKG,YAAYX,GAC1BY,WAAW,WACPC,OAAOC,IAAIC,gBAAgBlB,GACvBE,GAASA,KACd,KAGA,SAASiB,GAAU3G,EAAWC,EAAW2G,GAC5C,IAAMC,EAAOC,KAAKC,IAAIH,GAChBI,EAAOF,KAAKG,IAAIL,GAItB,MAAO,CAAEM,GAHEF,EAAOhH,EAAI6G,EAAO5G,EAGhBkH,GAFFN,EAAO7G,EAAIgH,EAAO/G,GAK1B,SAASmH,GAAyBC,GACrC,IAAIC,EAAsBC,EACtBC,EAAaH,EAAeG,YAAc,EAC1CC,EAAcJ,EAAeI,aAAe,EAiBhD,OAfKJ,EAAerI,KAA8B,UAAvBqI,EAAerI,IAGR,WAAvBqI,EAAerI,KACtBsI,EAAwBD,EAAe7J,OAASgK,EAAcC,EAC9DF,EAAwBF,EAAe7J,SAGvC8J,EAAuBD,EAAe9J,MACtCgK,EAAwBF,EAAe7J,SARvC8J,EAAuBD,EAAe9J,MACtCgK,EAAyBF,EAAe9J,MAAQkK,EAAeD,GAa5D,CAAEjK,MAHT+J,GAAwBD,EAAe9G,MAAQ,EAGT/C,OAFtC+J,GAAyBF,EAAe9G,MAAQ,GAK7C,SAASmH,GAAYrF,GACxB,OAAOmB,KAAMC,KAAK,eAAgB,CAAEpB,cCsI5BsF,kLCnLZ,IAEaC,GAAyB,SAClCzD,EACA7H,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAGA,IAAKsJ,OAAOqB,OACR,MAAM,IAAI3E,MAAM,mFAGpB,OAAO,IAAI4E,QAAQ,SAACpC,EAASqC,GACzB,IACI,IAAMC,EAAS,IAAIH,OAAO,iBAC1BG,EAAOC,iBAAiB,UAAW,SAAAC,GAC/B,GAAwB,gBAApBA,EAAMrK,KAAKtC,KAEXgK,GADgB2C,EAAMrK,KAAK8G,IACL,WAAYe,QAC/B,GAAwB,kBAApBwC,EAAMrK,KAAKtC,KAA0B,CAC5C,IAAM8G,EAAQ6F,EAAMrK,KAAKwE,MACzB0F,EAAO,CAAErM,QAAS,wBAAyByM,MAAO9F,EAAM8F,WAIhEH,EAAOI,YAAY,CACf7M,KAAM,cACN4I,cACA7H,iBACAC,eACAC,YACAC,aACAC,kBACAC,kBACAC,gBACAC,kBACAC,sBACAC,sBACAC,wBACAC,uBACAC,4BAEN,MAAOmL,GACLN,EAAOM,OAKnB,SAASC,GAAU3D,GACf,OAAO,IAAImD,QAAQ,SAACpC,EAASqC,GACzB,IAAMQ,EAAM,IAAIC,MAChBD,EAAIE,OAAS,kBAAM/C,EAAQ6C,IAC3BA,EAAIG,QAAU,kBAAMX,KAEpBQ,EAAII,IAAMhE,IAIlB,SAASiE,GAAwBC,EAAmCC,EAA0BC,GAC1FF,EAAQG,OACR,IAAIhJ,GAAK8I,EAAY9I,EAAI8I,EAAYvL,MAAQ,GAAKwL,EAC9C9I,GAAK6I,EAAY7I,EAAI6I,EAAYtL,OAAS,GAAKuL,EACnDF,EAAQI,UAAUjJ,EAAGC,GACrB4I,EAAQK,OAAOJ,EAAYpI,OAC3B,IAAIyI,GAAOL,EAAYvL,MAAQ,EAAKwL,EAChCK,GAAON,EAAYtL,OAAS,EAAKuL,EACrCF,EAAQI,UAAUE,EAAIC,GAClBN,EAAY5J,OACZ2J,EAAQQ,KAAK,EAAG,EAAGP,EAAYvL,MAAQwL,EAAOD,EAAYtL,OAASuL,GACnEF,EAAQS,QAIhB,SAASC,GAAuB1L,GAC5B,IAAM2L,EAAM,IAAIC,cAAY5L,GAC5B,KAAM,UAAW2L,EAAIE,SAAW,WAAYF,EAAIE,MAAO,CACnD,IAAMC,EAAUH,EAAIE,KAAJ,QAAoBE,MAAM,KAC1CJ,EAAIE,KAAJ,MAAoBC,EAAQ,GAC5BH,EAAIE,KAAJ,OAAqBC,EAAQ,GAGjC,OAAOE,KAAKL,EAAIM,SAAS,CAAEC,YAAY,SAGrCC,cASF,SAAAA,IAAc,IAAAC,EAAAC,KAEV,GAFUC,OAAAC,GAAA,EAAAD,CAAAD,KAAAF,GAAAE,KARdG,WAKM,GAGQH,KAFdlC,YAEc,GAELxB,OAAOqB,OACR,MAAM,IAAI3E,MAAM,mFAGpBgH,KAAKlC,OAAS,IAAIH,OAAO,iBACzBqC,KAAKlC,OAAOC,iBAAiB,UAAW,SAAAC,GACZ,iBAApBA,EAAMrK,KAAKtC,MAA+C,kBAApB2M,EAAMrK,KAAKtC,MACjD0O,EAAKI,WAAWC,KAAKpC,EAAMrK,0GAMnC0M,EACAzK,EACA0K,EACApN,EACAqN,EACAC,0GAEAR,KAAKlC,OAAOI,YAAY,CACpB7M,KAAM,eACNgP,cACAzK,SACA2K,WAGAE,EAAkB/E,SAASC,cAAc,UAEvC+E,EAAkB9D,KAAK+D,MAAMzN,GAAOmN,EAAYhN,MAAQ,KAAO,MAC/DuN,EAAmBhE,KAAK+D,MAAMzN,GAAOmN,EAAY/M,OAAS,KAAO,MAEvEmN,EAAgBpN,MAAQqN,EACxBD,EAAgBnN,OAASsN,EAET,QADZjC,EAAU8B,EAAgBI,WAAW,6BAE/B,IAAI7H,MAAM,mFAEpB2F,EAAQmC,UAAY,QACpBnC,EAAQoC,SAAS,EAAG,EAAGL,EAAiBE,GAEpCI,GAAU,EAERnC,EAAQ3L,EAAM,gBAEZ8N,gCACGhB,KAAKG,WAAWc,OAAS,yBACxBC,EAAOlB,KAAKG,WAAWgB,WAEfD,EAAKtC,iCACPA,EAAcsC,EAAKtC,aAETvN,OAASoM,GAAU2D,0BAC/B1C,GAAwBC,EAASC,EAAaC,GAC1CD,EAAYyC,OAASzC,EAAYhI,QACjC+H,EAAQmC,UAAYlC,EAAYhI,MAChC+H,EAAQ0C,MAAMzC,EAAYyC,MAAQxC,EAAOD,EAAYyC,MAAQxC,GACzDjU,EAAI,IAAI0W,OAAO1C,EAAYjL,MAC/BgL,EAAQ4C,KAAK3W,IAEjB+T,EAAQ6C,qCACD5C,EAAYvN,OAASoM,GAAUgE,OAAS7C,EAAYvN,OAASoM,GAAUiE,wBAC9EhD,GAAwBC,EAASC,EAAaC,QAEvB8C,IAAnB/C,EAAY1I,SAAuCyL,IAAnB/C,EAAYzI,IAC5CwI,EAAQI,UAAUH,EAAY1I,GAAK2I,EAAOD,EAAYzI,GAAK0I,GAE3D+C,EAAM1E,GAAyB0B,GAE/BiD,SACAjD,EAAYvN,OAASoM,GAAUiE,4BAC3BI,EAAUzC,GAAuB0C,KAAKnD,EAAYjL,iBACxCyK,GAlLpB,6BAkL8C0D,WAAxCD,kDAEiBvI,KAAMoB,IAAIkE,EAAYjL,iBACF,mBADjC8F,UACKK,QAAQ,wCACTgI,EAAUzC,GAAuB5F,EAAK9F,gBAC5ByK,GAvLxB,6BAuLkD0D,WAAxCD,kDAEczD,GAAUQ,EAAYjL,cAApCkO,iBAIRlD,EAAQqD,UAAUH,EAAO,EAAG,EAAGD,EAAIvO,MAAQwL,EAAO+C,EAAItO,OAASuL,GAE/DF,EAAQ6C,kCACD5C,EAAYvN,OAASoM,GAAUwE,YACtCvD,GAAwBC,EAASC,EAAaC,GACvCD,EAAYvN,OAASoM,GAAUyE,WACtCvD,EAAQ6C,qBAIZN,GAAyB,SAAjBA,EAAKiB,UACbnB,GAAU,IAGVE,GAAsB,kBAAdA,EAAK7P,OAA4B6P,EAAK/I,6BAC1CA,EAAQa,MAAM,2BACZiF,MAAQiD,EAAK/I,MAAM8F,MACnB9F,qCAGT6I,oCACKoB,YAAM,qCAKpBC,GADIA,EAAU5B,EAAgB6B,aACZC,MAAM,yBAAyBtB,QACjDT,EAAcvI,KAAd,GAAA+B,OACOsG,EAAQV,WAAW4C,SAAS,EAAG,KADtC,KAAAxI,OAC8CpE,EAD9C,KAAAoE,OACwDuG,EAAS,OAAS,QAD1E,QAEI8B,EACA,CAAE7K,QAAQ,+LAICyC,EAAqBnI,EAAgBoB,EAAauP,uGAChDjI,GAAW,cAAgB1I,EAAQmI,aAAhDR,0DAGEiJ,EAAejJ,EAAK9F,KAAK5I,uCACL2X,4EAAfC,oBACD3C,KAAK4C,gBAAgB3I,EAAa0I,EAAYpR,GAAI2B,EAAKuP,8dAI/CxI,EAAqB4I,EAAmB3P,EAAauP,+GACpDjI,GAAW,iBAAmBqI,EAAW5I,aAAtDR,0DAGF4G,EAA2ByC,KAAKC,MAAMtJ,EAAK9F,KAAKA,MAEhD6M,EAAgBiC,EAAIO,OAAOvJ,EAAK9F,KAAKU,qCAETgM,EAAY4C,YAAYC,kHAA5C5C,OAAS1K,iBACXoK,KAAKmD,aAAa9C,EAAazK,EAAQ0K,EAASpN,GAAK,EAAOsN,eAC9DH,EAAY7K,6CACNwK,KAAKmD,aAAa9C,EAAazK,EAAQ0K,EAASpN,GAAK,EAAMsN,yZAMpE4C,GAAsB,eAAAC,EAAApD,OAAAqD,EAAA,EAAArD,CAAAsD,EAAA7G,EAAA8G,KAAG,SAAAC,EAClCxJ,EACA7H,EACAC,EACAa,GAJkC,IAAAwQ,EAAAjB,EAAAkB,EAAA,OAAAJ,EAAA7G,EAAAkH,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAM5BL,EAAe,IAAI5D,GAErB2C,EAAM,IAAIuB,KAES,UAAnB5R,EAV8B,CAAAyR,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAWxBL,EAAaO,aAAahK,EAAa5H,EAAca,EAAKuP,GAXlC,OAAAoB,EAAAE,KAAA,mBAYJ,aAAnB3R,EAZuB,CAAAyR,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAaxBL,EAAad,gBAAgB3I,EAAa5H,EAAca,EAAKuP,GAbrC,eAAAoB,EAAAE,KAAA,GAgBjBtB,EAAIyB,cAAc,CAAE7S,KAAM,SAhBT,QAgB9BsS,EAhB8BE,EAAAM,KAkBlC9I,GADUiB,OAAOC,IAAI6H,gBAAgBT,GACnB,aAlBgB,yBAAAE,EAAAQ,SAAAZ,MAAH,gBAAAa,EAAAC,EAAAC,EAAAC,GAAA,OAAApB,EAAAqB,MAAA1E,KAAA2E,YAAA,GClQ5B,SAASC,GAAWjR,GACvBkR,aAAaC,QAAQ,cAAenR,EAAKsG,aACzC4K,aAAaC,QAAQ,eAAgBnR,EAAKgG,cAGvC,SAASoL,GAAgB9K,GAC5B4K,aAAaC,QAAQ,cAAe7K,GAGjC,SAAS+K,KACZH,aAAaI,WAAW,eACxBJ,aAAaI,WAAW,gBAGrB,SAASC,KAEZ,OADYL,aAAaM,QAAQ,gBAAkB,KAIhD,SAASC,KAEZ,OADYP,aAAaM,QAAQ,iBAAmB,sCCV3CE,GAA8B,SAAC1R,GACxC,GAAM,iBAAkBA,EAAxB,CAIA,IAAI2R,EAA2B,IAAIC,IACnCD,EAAYE,INfY,UMSqD,IAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAAhE,EAAA,IAO7E,QAAAiE,EAAAC,EAAsBlS,EAAKmS,aAA3BC,OAAAC,cAAAP,GAAAG,EAAAC,EAAA9B,QAAAkC,MAAAR,GAAA,EAAyC,KAA9B5P,EAA8B+P,EAAAM,MAC/BC,EAAQxS,EAAKyS,OAAOzS,EAAKsP,YAAY,IAAIpN,GAC/C,GAAIsQ,GAAwB,SAAfA,EAAM9U,MAAmB8U,EAAM1b,WAAY,CACpD,IAAI4b,EAAaF,EAAM1b,WACnB0b,EAAMzb,aAAqC,YAAtByb,EAAMzb,cAC3B2b,GAAc,IAAMF,EAAMzb,aAG9B4a,EAAYE,IAAIa,KAfqD,MAAAC,GAAAZ,GAAA,EAAAC,EAAAW,EAAA,YAAAb,GAAA,MAAAI,EAAAU,QAAAV,EAAAU,SAAA,WAAAb,EAAA,MAAAC,GAyB7E,OA9BwB,SAAC9L,GAAD,OACxB,IAAI+D,QAAQ,SAACpC,EAASqC,GAClB2I,KAAQtO,KAAR+H,OAAAwG,EAAA,EAAAxG,CAAA,GAAkBpG,EAAlB,CAA0B6M,OAAQlL,EAASmL,SAAU9I,OA4BlD+I,CANwB,CAC3BC,OAAQ,CACJC,SAAS7G,OAAA8G,GAAA,EAAA9G,CAAK+G,MAAMC,KAAK3B,qBC6GpB4B,gBASAC,gBAIAC,gBAMAC,gBAIAC,gBAoBAC,gBA2BAC,gBAWAC,gBAMAC,gBAUAC,gBAUAC,gBAiBAC,gBAaAC,gBAUAC,gBAKAC,gBAKAC,gBAKAC,gBAWAC,gBAMAC,gBAYAC,gBASAC,gBASAC,gBAmBAC,gBA0BAC,gBAoCAC,gBAsBAC,gBAiBAC,gBAYAC,gBA8HAC,gBAwBAC,gBAiCAC,gBAkCAC,gBA+BAC,gBAuDAC,gBAwCAC,gBAqBAC,IAjsBV,SAAUnC,GAAS/I,GAAnB,OAAAoF,EAAA7G,EAAAkH,KAAA,SAAA0F,GAAA,cAAAA,EAAAxF,KAAAwF,EAAAvF,MAAA,OACH,OADGuF,EAAAvF,KAAA,EACG5I,YAAI/J,GAAe,QAAS+M,EAAE3M,UADjC,OAAA8X,EAAAvF,KAAA,eAAAuF,EAAAvF,KAAA,eAKC,OALDuF,EAAAvF,KAAA,EAKOwF,YAAK/L,GAAaW,EAAEF,OAASE,EAAE3M,SALtC,wBAAA8X,EAAAjF,SAAAmF,IASA,SAAUrC,GAAQ3V,GAAlB,OAAA+R,EAAA7G,EAAAkH,KAAA,SAAA6F,GAAA,cAAAA,EAAA3F,KAAA2F,EAAA1F,MAAA,OACH,OADG0F,EAAA1F,KAAA,EACG5I,YAAI/J,GAAe,OAAQI,IAD9B,wBAAAiY,EAAApF,SAAAqF,IAIA,SAAUtC,GAAY9V,GAAtB,IAAAE,EAAA,OAAA+R,EAAA7G,EAAAkH,KAAA,SAAA+F,GAAA,cAAAA,EAAA7F,KAAA6F,EAAA5F,MAAA,OAEH,OADMvS,EAAUJ,GAAe,WAAYE,EAAMA,GAD9CqY,EAAA5F,KAAA,EAEG5I,YAAI3J,GAFP,cAAAmY,EAAAC,OAAA,SAGIpY,EAAQA,QAAQD,IAHpB,wBAAAoY,EAAAtF,SAAAwF,IAMA,SAAUxC,GAAayC,GAAvB,OAAAvG,EAAA7G,EAAAkH,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACH,OADGF,EAAAE,KAAA,EACG5I,YAAI,CAAE9J,KAAMzF,EAAcke,cAD7B,wBAAAjG,EAAAQ,SAAA0F,IAIA,SAAUzC,GAAqB0C,GAA/B,OAAAzG,EAAA7G,EAAAkH,KAAA,SAAAqG,GAAA,cAAAA,EAAAnG,KAAAmG,EAAAlG,MAAA,UACyB,aAAxBiG,EAAOxY,QAAQH,KADhB,CAAA4Y,EAAAlG,KAAA,eAAAkG,EAAAL,OAAA,iBAGH,OAHGK,EAAAlG,KAAA,EAGGwF,YAAKnH,IAAO,KAHf,OAIH,OAJG6H,EAAAlG,KAAA,EAIG5I,YAAI,CAAE9J,KAAMzF,EAAcke,UAAWE,EAAOxY,QAAQD,KAJvD,wBAAA0Y,EAAA5F,SAAA6F,IAUA,SAASC,GAAchQ,GAC1B,IAGI,OAFgBiQ,IAA2BjQ,GACrBkQ,KAAM,IAAIC,MAAOC,UAAY,IAAO,EAE5D,MAAOpM,GACL,OAAO,GAIR,SAAUoJ,GAASiD,GAAnB,IAAAC,EAAAtQ,EAAAP,EAAA8Q,EAAAC,EAAAhG,UAAA,OAAApB,EAAA7G,EAAAkH,KAAA,SAAAgH,GAAA,cAAAA,EAAA9G,KAAA8G,EAAA7G,MAAA,OACW,OADqC0G,EAAhDE,EAAA1J,OAAA,QAAAU,IAAAgJ,EAAA,IAAAA,EAAA,GAAAC,EAAA7G,KAAA,EACiBwF,YAAKrE,IADtB,YACG/K,EADHyQ,EAAAzG,OAEWsG,EAFX,CAAAG,EAAA7G,KAAA,SAGoB,OAHpB6G,EAAA7G,KAAA,EAG0BwF,YAAKY,GAAehQ,GAH9C,WAAAyQ,EAAAzG,KAAA,CAAAyG,EAAA7G,KAAA,gBAAA6G,EAAAhB,OAAA,SAIwBzP,GAJxB,QAOuB,OAPvByQ,EAAA7G,KAAA,GAO6BwF,YAAKnE,IAPlC,WAOGxL,EAPHgR,EAAAzG,KAAA,CAAAyG,EAAA7G,KAAA,aASKyG,EATL,CAAAI,EAAA7G,KAAA,eAS+B,IAAI/K,MAAM,oBATzC,eAAA4R,EAAAhB,OAAA,SAUQ,MAVR,QAauB,OAbvBgB,EAAA7G,KAAA,GAa6BwF,YAAKY,GAAevQ,GAbjD,WAAAgR,EAAAzG,KAAA,CAAAyG,EAAA7G,KAAA,SAeC,OAfD6G,EAAA7G,KAAA,GAeO5I,YAAI,CAAE9J,KAAMrF,IAfnB,YAgBKwe,EAhBL,CAAAI,EAAA7G,KAAA,eAgB+B,IAAI/K,MAAM,oBAhBzC,eAAA4R,EAAAhB,OAAA,SAiBQ,MAjBR,QAoBc,OApBdgB,EAAA7G,KAAA,GAoBoBwF,YAAK5P,GAAcC,GApBvC,QAqBH,OADM8Q,EApBHE,EAAAzG,KAAAyG,EAAA7G,KAAA,GAqBGwF,YAAKxE,GAAiB2F,GArBzB,eAAAE,EAAAhB,OAAA,SAsBIc,GAtBJ,yBAAAE,EAAAvG,SAAAwG,IA2BA,SAAUrD,GAAmBwC,GAA7B,IAAArW,EAAA,OAAA4P,EAAA7G,EAAAkH,KAAA,SAAAkH,GAAA,cAAAA,EAAAhH,KAAAgH,EAAA/G,MAAA,OAEc,OAFd+G,EAAAhH,KAAA,EAAAgH,EAAA/G,KAAA,EAEoBwF,YAAKnQ,GAAW4Q,EAAO3Q,OAF3C,OAGC,OADM1F,EAFPmX,EAAA3G,KAAA2G,EAAA/G,KAAA,EAGOwF,YAAK3E,GAAYjR,GAHxB,OAIC,OAJDmX,EAAA/G,KAAA,EAIO5I,YAAI,CAAE9J,KAAMvF,IAJnB,OAAAgf,EAAA/G,KAAA,iBAMC,OAND+G,EAAAhH,KAAA,GAAAgH,EAAAC,GAAAD,EAAA,SAAAA,EAAA/G,KAAA,GAMO5I,YAAI,CAAE9J,KAAMtF,IANnB,QAOC,OAPD+e,EAAA/G,KAAA,GAOOwF,YAAKrC,GAAD4D,EAAAC,IAPX,yBAAAD,EAAAzG,SAAA2G,GAAA,eAWA,SAAUvD,KAAV,OAAAlE,EAAA7G,EAAAkH,KAAA,SAAAqH,GAAA,cAAAA,EAAAnH,KAAAmH,EAAAlH,MAAA,OACH,OADGkH,EAAAlH,KAAA,EACG5I,YAAI,CAAE9J,KAAM1E,IADf,wBAAAse,EAAA5G,SAAA6G,IAMA,SAAUxD,KAAV,IAAAvN,EAAA,OAAAoJ,EAAA7G,EAAAkH,KAAA,SAAAuH,GAAA,cAAAA,EAAArH,KAAAqH,EAAApH,MAAA,OACW,OADXoH,EAAApH,KAAA,EACiBwF,YAAKrE,IADtB,YACG/K,EADHgR,EAAAhH,MAAA,CAAAgH,EAAApH,KAAA,SAGoB,OAHpBoH,EAAApH,KAAA,EAG0BwF,YAAKY,GAAehQ,GAH9C,WAAAgR,EAAAhH,KAAA,CAAAgH,EAAApH,KAAA,SAKK,OALLoH,EAAApH,KAAA,GAKWwF,YAAKrP,GAAmBC,GALnC,yBAAAgR,EAAA9G,SAAA+G,IAUA,SAAUzD,KAAV,IAAA/N,EAAA,OAAA2J,EAAA7G,EAAAkH,KAAA,SAAAyH,GAAA,cAAAA,EAAAvH,KAAAuH,EAAAtH,MAAA,OACuB,OADvBsH,EAAAtH,KAAA,EAC6BwF,YAAKnE,IADlC,YACGxL,EADHyR,EAAAlH,MAAA,CAAAkH,EAAAtH,KAAA,SAG2B,OAH3BsH,EAAAtH,KAAA,EAGiCwF,YAAKY,GAAevQ,GAHrD,WAAAyR,EAAAlH,KAAA,CAAAkH,EAAAtH,KAAA,SAKK,OALLsH,EAAAtH,KAAA,GAKWwF,YAAKjP,GAAoBV,GALpC,yBAAAyR,EAAAhH,SAAAiH,IAUA,SAAU1D,KAAV,OAAArE,EAAA7G,EAAAkH,KAAA,SAAA2H,GAAA,cAAAA,EAAAzH,KAAAyH,EAAAxH,MAAA,OAEC,OAFDwH,EAAAzH,KAAA,EAAAyH,EAAAxH,KAAA,EAEOwF,YAAK7B,IAFZ,OAGC,OAHD6D,EAAAxH,KAAA,EAGOwF,YAAK5B,IAHZ,OAIC,OAJD4D,EAAAxH,KAAA,EAIOwF,YAAKvE,IAJZ,OAMC,OANDuG,EAAAxH,KAAA,EAMO5I,YAAI,CAAE9J,KAAMtD,KANnB,OAOC,OAPDwd,EAAAxH,KAAA,GAOO5I,YAAI,CAAE9J,KAAMxE,IAPnB,QAQC,OARD0e,EAAAxH,KAAA,GAQO5I,YAAI,CAAE9J,KAAMnF,IARnB,QAAAqf,EAAAxH,KAAA,iBAUC,OAVDwH,EAAAzH,KAAA,GAAAyH,EAAAR,GAAAQ,EAAA,SAAAA,EAAAxH,KAAA,GAUO5I,YAAI,CAAE9J,KAAMpF,IAVnB,QAWC,OAXDsf,EAAAxH,KAAA,GAWOwF,YAAKrC,GAADqE,EAAAR,IAXX,yBAAAQ,EAAAlH,SAAAmH,GAAA,eAiBA,SAAU3D,GAAoBmC,GAA9B,IAAArW,EAAA,OAAA4P,EAAA7G,EAAAkH,KAAA,SAAA6H,GAAA,cAAAA,EAAA3H,KAAA2H,EAAA1H,MAAA,OAEc,OAFd0H,EAAA3H,KAAA,EAAA2H,EAAA1H,KAAA,EAEoBwF,YAAKhP,GAAcyP,EAAO3Q,OAF9C,OAGC,OADM1F,EAFP8X,EAAAtH,KAAAsH,EAAA1H,KAAA,EAGOwF,YAAK3E,GAAYjR,GAHxB,OAIC,OAJD8X,EAAA1H,KAAA,EAIO5I,YAAI,CAAE9J,KAAMjF,IAJnB,OAKC,OALDqf,EAAA1H,KAAA,GAKO5I,YAAI,CAAE9J,KAAMvF,IALnB,QAAA2f,EAAA1H,KAAA,iBAOC,OAPD0H,EAAA3H,KAAA,GAAA2H,EAAAV,GAAAU,EAAA,SAAAA,EAAA1H,KAAA,GAOO5I,YAAI,CAAE9J,KAAMhF,IAPnB,QAQC,OARDof,EAAA1H,KAAA,GAQOwF,YAAKrC,GAADuE,EAAAV,IARX,yBAAAU,EAAApH,SAAAqH,GAAA,eAaA,SAAU5D,KAAV,OAAAvE,EAAA7G,EAAAkH,KAAA,SAAA+H,GAAA,cAAAA,EAAA7H,KAAA6H,EAAA5H,MAAA,OAEa,OAFb4H,EAAA7H,KAAA,EAAA6H,EAAA5H,KAAA,EAEmBwF,YAAKhC,IAAU,GAFlC,WAAAoE,EAAAxH,KAAA,CAAAwH,EAAA5H,KAAA,QAIK,OAJL4H,EAAA5H,KAAA,EAIW5I,YAAI,CAAE9J,KAAMvF,IAJvB,OAAA6f,EAAA5H,KAAA,gBAAA4H,EAAA7H,KAAA,EAAA6H,EAAAZ,GAAAY,EAAA,kCAAAA,EAAAtH,SAAAuH,GAAA,cAUA,SAAU7D,GAAqBtN,GAA/B,IAAAN,EAAA,OAAAoJ,EAAA7G,EAAAkH,KAAA,SAAAiI,GAAA,cAAAA,EAAA/H,KAAA+H,EAAA9H,MAAA,OACW,OADX8H,EAAA9H,KAAA,EACiBwF,YAAKhC,IAAU,GADhC,OAEI,OADDpN,EADH0R,EAAA1H,KAAA0H,EAAA9H,KAAA,EAEUwF,YAAK/O,GAAYC,EAAKN,GAFhC,cAAA0R,EAAAjC,OAAA,SAAAiC,EAAA1H,MAAA,wBAAA0H,EAAAxH,SAAAyH,IAKA,SAAU9D,GAAsBvN,EAAa9G,GAA7C,IAAAwG,EAAA,OAAAoJ,EAAA7G,EAAAkH,KAAA,SAAAmI,GAAA,cAAAA,EAAAjI,KAAAiI,EAAAhI,MAAA,OACW,OADXgI,EAAAhI,KAAA,EACiBwF,YAAKhC,IAAU,GADhC,OAEI,OADDpN,EADH4R,EAAA5H,KAAA4H,EAAAhI,KAAA,EAEUwF,YAAK5O,GAAaF,EAAKN,EAAOxG,GAFxC,cAAAoY,EAAAnC,OAAA,SAAAmC,EAAA5H,MAAA,wBAAA4H,EAAA1H,SAAA2H,IAKA,SAAU/D,GAAwBxN,GAAlC,IAAAN,EAAA,OAAAoJ,EAAA7G,EAAAkH,KAAA,SAAAqI,GAAA,cAAAA,EAAAnI,KAAAmI,EAAAlI,MAAA,OACW,OADXkI,EAAAlI,KAAA,EACiBwF,YAAKhC,IAAU,GADhC,OAEI,OADDpN,EADH8R,EAAA9H,KAAA8H,EAAAlI,KAAA,EAEUwF,YAAKnO,GAAeX,EAAKN,GAFnC,cAAA8R,EAAArC,OAAA,SAAAqC,EAAA9H,MAAA,wBAAA8H,EAAA5H,SAAA6H,IAKA,SAAUhE,GACbzN,EACA9G,EACAkH,EACAvC,EACAwC,GALG,IAAAX,EAAA,OAAAoJ,EAAA7G,EAAAkH,KAAA,SAAAuI,GAAA,cAAAA,EAAArI,KAAAqI,EAAApI,MAAA,OAOW,OAPXoI,EAAApI,KAAA,EAOiBwF,YAAKhC,IAAU,GAPhC,OAQI,OADDpN,EAPHgS,EAAAhI,KAAAgI,EAAApI,KAAA,EAQUwF,YAAK3O,GAA+BH,EAAKN,EAAOxG,EAAMkH,EAAkBvC,EAAawC,GAR/F,cAAAqR,EAAAvC,OAAA,SAAAuC,EAAAhI,MAAA,wBAAAgI,EAAA9H,SAAA+H,IAWA,SAAUjE,GAAqB1N,EAAa9G,GAA5C,IAAAwG,EAAA,OAAAoJ,EAAA7G,EAAAkH,KAAA,SAAAyI,GAAA,cAAAA,EAAAvI,KAAAuI,EAAAtI,MAAA,OACW,OADXsI,EAAAtI,KAAA,EACiBwF,YAAKhC,IAAU,GADhC,OAEI,OADDpN,EADHkS,EAAAlI,KAAAkI,EAAAtI,KAAA,EAEUwF,YAAKrO,GAAYT,EAAKN,EAAOxG,GAFvC,cAAA0Y,EAAAzC,OAAA,SAAAyC,EAAAlI,MAAA,wBAAAkI,EAAAhI,SAAAiI,IAMA,SAAUlE,GAAwB4B,GAAlC,OAAAzG,EAAA7G,EAAAkH,KAAA,SAAA2I,GAAA,cAAAA,EAAAzI,KAAAyI,EAAAxI,MAAA,OAEC,OAFDwI,EAAAzI,KAAA,EAAAyI,EAAAxI,KAAA,EAEOwF,YAAKvB,GAAuB,aAAc,CAAE3T,KAAM2V,EAAOpY,WAFhE,OAGC,OAHD2a,EAAAxI,KAAA,EAGO5I,YAAI,CACN9J,KAAM9E,IAJX,OAMC,OANDggB,EAAAxI,KAAA,EAMO5I,YAAI,CAAE9J,KAAM1E,IANnB,OAAA4f,EAAAxI,KAAA,gBAQC,OARDwI,EAAAzI,KAAA,EAAAyI,EAAAxB,GAAAwB,EAAA,SAAAA,EAAAxI,KAAA,GAQOwF,YAAKrC,GAADqF,EAAAxB,IARX,yBAAAwB,EAAAlI,SAAAmI,GAAA,cAYA,SAAUnE,GAAwB2B,GAAlC,OAAAzG,EAAA7G,EAAAkH,KAAA,SAAA6I,GAAA,cAAAA,EAAA3I,KAAA2I,EAAA1I,MAAA,OAEC,OAFD0I,EAAA3I,KAAA,EAAA2I,EAAA1I,KAAA,EAEOwF,YAAKtB,GAAyB,cAAgB+B,EAAOlY,QAF5D,OAGC,OAHD2a,EAAA1I,KAAA,EAGO5I,YAAI,CAAE9J,KAAM1E,IAHnB,OAAA8f,EAAA1I,KAAA,gBAKC,OALD0I,EAAA3I,KAAA,EAAA2I,EAAA1B,GAAA0B,EAAA,SAAAA,EAAA1I,KAAA,GAKOwF,YAAKrC,GAADuF,EAAA1B,IALX,yBAAA0B,EAAApI,SAAAqI,GAAA,cASA,SAAUpE,GAAwB0B,GAAlC,OAAAzG,EAAA7G,EAAAkH,KAAA,SAAA+I,GAAA,cAAAA,EAAA7I,KAAA6I,EAAA5I,MAAA,OAEC,OAFD4I,EAAA7I,KAAA,EAAA6I,EAAA5I,KAAA,EAEOwF,YAAKnH,IAAO,KAFnB,OAGC,OAHDuK,EAAA5I,KAAA,EAGOwF,YAAKpB,GAAsB,cAAgB6B,EAAOlY,OAAQ,CAAEuC,KAAM2V,EAAOhY,UAHhF,OAAA2a,EAAA5I,KAAA,gBAKC,OALD4I,EAAA7I,KAAA,EAAA6I,EAAA5B,GAAA4B,EAAA,SAAAA,EAAA5I,KAAA,GAKOwF,YAAKrC,GAADyF,EAAA5B,IALX,yBAAA4B,EAAAtI,SAAAuI,GAAA,cASA,SAAUrE,KAAV,IAAA9O,EAAAoT,EAAAC,EAAA,OAAAvJ,EAAA7G,EAAAkH,KAAA,SAAAmJ,GAAA,cAAAA,EAAAjJ,KAAAiJ,EAAAhJ,MAAA,OAEc,OAFdgJ,EAAAjJ,KAAA,EAAAiJ,EAAAhJ,KAAA,EAEoBwF,YAAKxB,GAAsB,cAF/C,OAQC,OANMtO,EAFPsT,EAAA5I,KAGO0I,EAASpT,EAAK9F,KAAKqZ,MAAMC,IAAI,SAACC,GAAD,OAAiBA,EAAE3b,KAChDub,EAAOrT,EAAK9F,KAAKqZ,MAAMG,OAAO,SAACC,EAAsBF,GAEvD,OADAE,EAAIF,EAAE3b,IAAM2b,EACLE,GACR,IAPJL,EAAAhJ,KAAA,EAQO5I,YAAI,CACN9J,KAAM3E,EACNmgB,SACAC,SAXL,OAAAC,EAAAhJ,KAAA,iBAcC,OAdDgJ,EAAAjJ,KAAA,GAAAiJ,EAAAhC,GAAAgC,EAAA,SAAAA,EAAAhJ,KAAA,GAcO5I,YAAI,CAAE9J,KAAMzE,IAdnB,QAeC,OAfDmgB,EAAAhJ,KAAA,GAeOwF,YAAKrC,GAAD6F,EAAAhC,IAfX,yBAAAgC,EAAA1I,SAAAgJ,GAAA,eAmBA,SAAU7E,GAAwBwB,GAAlC,IAAAvQ,EAAAoT,EAAAC,EAAA,OAAAvJ,EAAA7G,EAAAkH,KAAA,SAAA0J,GAAA,cAAAA,EAAAxJ,KAAAwJ,EAAAvJ,MAAA,OAEc,OAFduJ,EAAAxJ,KAAA,EAAAwJ,EAAAvJ,KAAA,EAEoBwF,YAAKxB,GAAsB,cAAgBiC,EAAOzY,IAFtE,OAGC,OADMkI,EAFP6T,EAAAnJ,KAAAmJ,EAAAvJ,KAAA,EAGO5I,YAAI,CACN9J,KAAMtE,EACNwE,GAAIyY,EAAOzY,KALhB,WAQKyY,EAAO9X,eARZ,CAAAob,EAAAvJ,KAAA,SAcK,OALM8I,EAASpT,EAAK9F,KAAK5I,SAASkiB,IAAI,SAACC,GAAD,OAAoBA,EAAE3b,KACtDub,EAAOrT,EAAK9F,KAAK5I,SAASoiB,OAAO,SAACC,EAAyBF,GAE7D,OADAE,EAAIF,EAAE3b,IAAM2b,EACLE,GACR,IAbRE,EAAAvJ,KAAA,GAcW5I,YAAI,CACN9J,KAAMvD,GACN+e,SACAC,SAjBT,QAAAQ,EAAAvJ,KAAA,iBAqBC,OArBDuJ,EAAAxJ,KAAA,GAAAwJ,EAAAvC,GAAAuC,EAAA,SAAAA,EAAAvJ,KAAA,GAqBO5I,YAAI,CAAE9J,KAAMrE,IArBnB,QAsBC,OAtBDsgB,EAAAvJ,KAAA,GAsBOwF,YAAKrC,GAADoG,EAAAvC,IAtBX,yBAAAuC,EAAAjJ,SAAAkJ,GAAA,eA0BA,SAAU9E,GAA2BuB,GAArC,IAAAwD,EAAArT,EAAA,OAAAoJ,EAAA7G,EAAAkH,KAAA,SAAA6J,GAAA,cAAAA,EAAA3J,KAAA2J,EAAA1J,MAAA,OAGc,OAFbyJ,EAAa,KADdC,EAAA3J,KAAA,EAAA2J,EAAA1J,KAAA,EAGoBwF,YAAKnC,GAAa,kBAHtC,OAKe,OAFdoG,EAHDC,EAAAtJ,KAAAsJ,EAAA1J,KAAA,EAKqBwF,YAAKhC,IAAU,GAAM,GAL1C,OAOC,OAFMpN,EALPsT,EAAAtJ,KAAAsJ,EAAA1J,KAAA,GAOOwF,YACF7L,GACAvD,EACA6P,EAAO5X,eACP4X,EAAO3X,aACP2X,EAAO1X,UACP0X,EAAOzX,WACPyX,EAAOxX,gBACPwX,EAAOvX,gBACPuX,EAAOtX,cACPsX,EAAOrX,gBACPqX,EAAOpX,oBACPoX,EAAOnX,oBACPmX,EAAOlX,sBACPkX,EAAOjX,qBACPiX,EAAOhX,yBAtBZ,QAwBC,OAxBDya,EAAA1J,KAAA,GAwBOwF,YAAKlC,GAAcmG,GAxB1B,QAyBC,OAzBDC,EAAA1J,KAAA,GAyBOwF,YAAKpC,GAAS,kBAzBrB,QA0BC,OA1BDsG,EAAA1J,KAAA,GA0BO5I,YAAI,CACN9J,KAAMnE,IA3BX,QAAAugB,EAAA1J,KAAA,iBA8BC,OA9BD0J,EAAA3J,KAAA,GAAA2J,EAAA1C,GAAA0C,EAAA,SAAAA,EAAA1J,KAAA,GA8BO5I,YAAI,CAAE9J,KAAMlE,IA9BnB,WA+BoB,OAAfqgB,EA/BL,CAAAC,EAAA1J,KAAA,SA+B0B,OA/B1B0J,EAAA1J,KAAA,GA+BgCwF,YAAKlC,GAAcmG,GA/BnD,QAgCC,OAhCDC,EAAA1J,KAAA,GAgCOwF,YAAKrC,GAADuG,EAAA1C,IAhCX,yBAAA0C,EAAApJ,SAAAqJ,GAAA,eAoCA,SAAUhF,GAA2BsB,GAArC,IAAAwD,EAAArT,EAAA,OAAAoJ,EAAA7G,EAAAkH,KAAA,SAAA+J,GAAA,cAAAA,EAAA7J,KAAA6J,EAAA5J,MAAA,OAGc,OAFbyJ,EAAa,KADdG,EAAA7J,KAAA,EAAA6J,EAAA5J,KAAA,EAGoBwF,YAAKnC,GAAa,kBAHtC,OAKe,OAFdoG,EAHDG,EAAAxJ,KAAAwJ,EAAA5J,KAAA,EAKqBwF,YAAKhC,IAAU,GAAM,GAL1C,OAOC,OAFMpN,EALPwT,EAAAxJ,KAAAwJ,EAAA5J,KAAA,GAOOwF,YAAKnG,GAAwBjJ,EAAO6P,EAAO5X,eAAgB4X,EAAO3X,aAAc2X,EAAO9W,KAP9F,QAQC,OARDya,EAAA5J,KAAA,GAQOwF,YAAKlC,GAAcmG,GAR1B,QASC,OATDG,EAAA5J,KAAA,GASOwF,YAAKpC,GAAS,kBATrB,QAUC,OAVDwG,EAAA5J,KAAA,GAUO5I,YAAI,CACN9J,KAAMhE,KAXX,QAAAsgB,EAAA5J,KAAA,iBAcC,OAdD4J,EAAA7J,KAAA,GAAA6J,EAAA5C,GAAA4C,EAAA,SAAAA,EAAA5J,KAAA,GAcO5I,YAAI,CAAE9J,KAAM/D,KAdnB,WAeoB,OAAfkgB,EAfL,CAAAG,EAAA5J,KAAA,SAe0B,OAf1B4J,EAAA5J,KAAA,GAegCwF,YAAKlC,GAAcmG,GAfnD,QAgBC,OAhBDG,EAAA5J,KAAA,GAgBOwF,YAAKrC,GAADyG,EAAA5C,IAhBX,yBAAA4C,EAAAtJ,SAAAuJ,GAAA,eAsBA,SAAUjF,GAA2BqB,GAArC,OAAAzG,EAAA7G,EAAAkH,KAAA,SAAAiK,GAAA,cAAAA,EAAA/J,KAAA+J,EAAA9J,MAAA,OAEC,OAFD8J,EAAA/J,KAAA,EAAA+J,EAAA9J,KAAA,EAEOwF,YAAKvB,GAAuB,gBAAiB,CAC/C3T,KAAM2V,EAAO5W,YACbtB,OAAQkY,EAAOlY,OACf6B,KAAMmP,KAAKgL,UAAU,CAAEza,MAAO2W,EAAO3W,MAAOC,OAAQ0W,EAAO1W,OAAQya,QAASziB,MALjF,OAOC,OAPDuiB,EAAA9J,KAAA,EAOO5I,YAAI,CACN9J,KAAM5D,KARX,OAUC,OAVDogB,EAAA9J,KAAA,EAUO5I,YAAIlJ,GAAkB+X,EAAOlY,QAAQ,IAV5C,OAAA+b,EAAA9J,KAAA,gBAYC,OAZD8J,EAAA/J,KAAA,EAAA+J,EAAA9C,GAAA8C,EAAA,SAAAA,EAAA9J,KAAA,GAYO5I,YAAI,CAAE9J,KAAM3D,KAZnB,QAaC,OAbDmgB,EAAA9J,KAAA,GAaOwF,YAAKrC,GAAD2G,EAAA9C,IAbX,yBAAA8C,EAAAxJ,SAAA2J,GAAA,cAiBA,SAAUpF,GAA2BoB,GAArC,IAAAiE,EAAA,OAAA1K,EAAA7G,EAAAkH,KAAA,SAAAsK,GAAA,cAAAA,EAAApK,KAAAoK,EAAAnK,MAAA,OAEC,OAFDmK,EAAApK,KAAA,EAAAoK,EAAAnK,KAAA,EAEOwF,YAAKtB,GAAyB,iBAAmB+B,EAAOxW,WAF/D,OAGC,OAHD0a,EAAAnK,KAAA,EAGO5I,YAAI,CAAE9J,KAAM1E,IAHnB,OAKe,OALfuhB,EAAAnK,KAAA,EAKqBoK,cALrB,OAMC,OADMF,EALPC,EAAA/J,KAAA+J,EAAAnK,KAAA,GAMO5I,YAAIlJ,GAAkBgc,EAAMjB,MAAMtG,QAAQ,IANjD,QAAAwH,EAAAnK,KAAA,iBAQC,OARDmK,EAAApK,KAAA,GAAAoK,EAAAnD,GAAAmD,EAAA,SAAAA,EAAAnK,KAAA,GAQOwF,YAAKrC,GAADgH,EAAAnD,IARX,yBAAAmD,EAAA7J,SAAA+J,GAAA,eAYA,SAAUvF,GAA2BmB,GAArC,OAAAzG,EAAA7G,EAAAkH,KAAA,SAAAyK,GAAA,cAAAA,EAAAvK,KAAAuK,EAAAtK,MAAA,OAEC,OAFDsK,EAAAvK,KAAA,EAAAuK,EAAAtK,KAAA,EAEOwF,YAAKnH,IAAO,KAFnB,OAGC,OAHDiM,EAAAtK,KAAA,EAGOwF,YAAKpB,GAAsB,iBAAmB6B,EAAOxW,UAAW,CAAEa,KAAM2V,EAAOhY,UAHtF,OAAAqc,EAAAtK,KAAA,gBAKC,OALDsK,EAAAvK,KAAA,EAAAuK,EAAAtD,GAAAsD,EAAA,SAAAA,EAAAtK,KAAA,GAKOwF,YAAKrC,GAADmH,EAAAtD,IALX,yBAAAsD,EAAAhK,SAAAiK,GAAA,cASP,SAASC,GAAc9T,GACnB,OAAO,IAAImD,QAAQ,SAACpC,EAASqC,GACzB,IACI,IAAIQ,EAAM,IAAIC,MAEdD,EAAIN,iBAAiB,OAAQ,WACzBvC,EAAQ,CACJnI,MAAO2M,KAAKwO,aACZlb,OAAQ0M,KAAKyO,kBAGrBpQ,EAAII,IAAMhE,EACZ,MAAO0D,GACLN,EAAOM,MAKZ,SAAeuQ,GAAtBC,GAAA,OAAAC,GAAAlK,MAAA1E,KAAA2E,wDAAO,SAAAkK,EAA2Blb,GAA3B,IAAAmb,EAAAC,EAAAC,EAAAlJ,EAAAM,EAAA6I,EAAAC,EAAAC,EAAAC,EAAAC,EAAAzZ,EAAA0Z,EAAAC,EAAAC,EAAAC,EAAAC,EAAA7Z,EAAA8Z,EAAArY,EAAAsY,EAAAC,EAAAC,EAAAC,EAAA,OAAAxM,EAAA7G,EAAAkH,KAAA,SAAAoM,GAAA,cAAAA,EAAAlM,KAAAkM,EAAAjM,MAAA,OAGH,KAAM,YAFF+K,EAAgBnb,IAUhB,IAAWob,MAPL,uBAAwBD,IAAkB,iBAAkBA,IAC7DA,EAA6CmB,mBAAqBhQ,OAAOiQ,KACrEpB,EAA6CqB,eAIrDrB,EAA6Cf,QAAU,EACpCe,EAA6CqB,cACvDnB,EAAeF,EAA6CqB,aAAapB,IACnEjZ,GAAKrK,EACjBujB,EAAYjZ,GAAKtK,EAdtB,GAkB2B,IAA1BqjB,EAAcf,QAlBf,CAAAiC,EAAAjM,KAAA,SAmBK+B,EAAegJ,EAAcmB,mBAC7B7J,EAAoC,GApBzC6I,GAAA,EAAAC,GAAA,EAAAC,OAAAxN,EAAAqO,EAAAlM,KAAA,EAAAsL,EAsBsBN,EAAc7L,YAtBpC8C,OAAAC,YAAA,WAAAiJ,GAAAI,EAAAD,EAAArL,QAAAkC,KAAA,CAAA+J,EAAAjM,KAAA,SAyBK,IAHOnO,EAtBZyZ,EAAAnJ,MAuBKE,EAAOxQ,GAAU,GAvBtB0Z,GAAA,EAAAC,GAAA,EAAAC,OAAA7N,EAAAqO,EAAAlM,KAAA,GAyBK2L,EAAsB3J,EAAtBC,OAAAC,cAAAsJ,GAAAI,EAAAD,EAAA1L,QAAAkC,MAAAqJ,GAAA,EAAWzZ,EAAyB6Z,EAAAxJ,MAEP,WADrB8I,EAAcF,EAAcqB,aAAata,IAC7BxE,KACRuE,KAAUkZ,EAAczkB,QAAUwL,KAAWiZ,EAAczkB,OAAOuL,IAC9D0B,EAAYwX,EAAczkB,OAAOuL,GAAQC,GAC7CuQ,EAAOxQ,GAAQC,GAAfoK,OAAAwG,EAAA,EAAAxG,CAAA,CACI5O,KAAM,SACH2d,EAFP,CAGIvU,IAAKnD,GAAaA,EAAUmD,IAC5B2V,OAAQ9Y,GAAaA,EAAU8Y,OAC/B5Y,OAAQF,GAAaA,EAAUE,OAC/BZ,MAAOU,GAAaA,EAAUV,MAC9B0G,WAAYhG,GAAaA,EAAUjE,MACnCkK,YAAajG,GAAaA,EAAUhE,UAGxC8S,EAAOxQ,GAAQC,GAAfoK,OAAAwG,EAAA,EAAAxG,CAAA,CACI5O,KAAM,SACH2d,GAGiB,SAArBA,EAAY3d,OACfuE,KAAUkZ,EAAcuB,OAASxa,KAAWiZ,EAAcuB,MAAMza,GAChEwQ,EAAOxQ,GAAQC,GAAfoK,OAAAwG,EAAA,EAAAxG,CAAA,CACI5O,KAAM,QACH2d,EACAF,EAAcuB,MAAMza,GAAQC,IAGnCuQ,EAAOxQ,GAAQC,GAAfoK,OAAAwG,EAAA,EAAAxG,CAAA,CACI5O,KAAM,QACH2d,EAFP,CAGI9I,MAAO,MAzD5B8J,EAAAjM,KAAA,iBAAAiM,EAAAlM,KAAA,GAAAkM,EAAAjF,GAAAiF,EAAA,UAAAT,GAAA,EAAAC,EAAAQ,EAAAjF,GAAA,QAAAiF,EAAAlM,KAAA,GAAAkM,EAAAlM,KAAA,GAAAwL,GAAA,MAAAG,EAAAlJ,QAAAkJ,EAAAlJ,SAAA,WAAAyJ,EAAAlM,KAAA,IAAAyL,EAAA,CAAAS,EAAAjM,KAAA,eAAAyL,EAAA,eAAAQ,EAAAM,OAAA,mBAAAN,EAAAM,OAAA,YAAArB,GAAA,EAAAe,EAAAjM,KAAA,iBAAAiM,EAAAjM,KAAA,iBAAAiM,EAAAlM,KAAA,GAAAkM,EAAAO,GAAAP,EAAA,SAAAd,GAAA,EAAAC,EAAAa,EAAAO,GAAA,QAAAP,EAAAlM,KAAA,GAAAkM,EAAAlM,KAAA,GAAAmL,GAAA,MAAAG,EAAA7I,QAAA6I,EAAA7I,SAAA,WAAAyJ,EAAAlM,KAAA,IAAAoL,EAAA,CAAAc,EAAAjM,KAAA,eAAAoL,EAAA,eAAAa,EAAAM,OAAA,mBAAAN,EAAAM,OAAA,YAgECxB,EAAgB,CACZf,QAAS,EACT1a,MAAOyb,EAAczb,MACrBC,OAAQwb,EAAcxb,OACtBkC,WAAYsZ,EAActZ,WAC1BE,iBAAkBoZ,EAAcpZ,iBAChCuN,YAAa6L,EAAc7L,YAC3BuN,UAAW1B,EAAc0B,UACzBpK,SACAN,eACAzP,KAAMyY,EAAczY,MA1EzB,QAAA2Z,EAAAS,GAAAlN,EAAA7G,EAAAwT,KAgFkBpB,EAAc1I,QAhFhC,YAAA4J,EAAAU,GAAAV,EAAAS,MAAAxK,KAAA,CAAA+J,EAAAjM,KAAA,SAgFQnO,EAhFRoa,EAAAU,GAAAxK,MAAA8J,EAAAW,GAAApN,EAAA7G,EAAAwT,KAiFuBpB,EAAc1I,OAAOxQ,IAjF5C,YAAAoa,EAAAY,GAAAZ,EAAAW,MAAA1K,KAAA,CAAA+J,EAAAjM,KAAA,YAiFYlO,EAjFZma,EAAAY,GAAA1K,MAmF4B,WADjB4J,EAAYhB,EAAc1I,OAAOxQ,GAAQC,IACjCxE,OAAoBye,EAAUrV,IAnFjD,CAAAuV,EAAAjM,KAAA,gBAAAiM,EAAAjM,KAAA,GAoF0BwK,GAAcuB,EAAUrV,KApFlD,SAoFasV,EApFbC,EAAA7L,MAqFkB9Q,QAAUyc,EAAUxS,YAAcyS,EAAKzc,SAAWwc,EAAUvS,cACjEuS,EAAUxS,WAAayS,EAAK1c,MAC5Byc,EAAUvS,YAAcwS,EAAKzc,OAC7Bwc,EAAU5Z,GAAK,EACf4Z,EAAU3Z,GAAK,EACf2Z,EAAUzZ,KAAO,GA1F9B,QAAA2Z,EAAAjM,KAAA,iBAAAiM,EAAAjM,KAAA,wBAAAiM,EAAApG,OAAA,SAgGIkF,GAhGJ,yBAAAkB,EAAA3L,SAAAwK,EAAA,qFAmGA,SAAU/F,GAA2BkB,GAArC,IAAAvQ,EAAAoX,EAAA/B,EAAA,OAAAvL,EAAA7G,EAAAkH,KAAA,SAAAkN,GAAA,cAAAA,EAAAhN,KAAAgN,EAAA/M,MAAA,OAEc,OAFd+M,EAAAhN,KAAA,EAAAgN,EAAA/M,KAAA,EAEoBwF,YAAKxB,GAAsB,iBAAmBiC,EAAOzY,IAFzE,OAIiD,OAF1CkI,EAFPqX,EAAA3M,KAGK0M,EAAa/N,KAAKC,MAAMtJ,EAAK9F,KAAKA,MAHvCmd,EAAA/M,KAAA,EAIuDwF,YAAKmF,GAAamC,GAJzE,OAMC,OAFI/B,EAJLgC,EAAA3M,KAAA2M,EAAA/M,KAAA,GAMOwF,YAAKlE,GAA6ByJ,GANzC,QAOC,OAPDgC,EAAA/M,KAAA,GAOO5I,YAAI,CACN9J,KAAM9D,GACNgE,GAAIkI,EAAK9F,KAAKpC,GACd8C,KAAMoF,EAAK9F,KAAKU,OAVrB,QAYC,OAZDyc,EAAA/M,KAAA,GAYO5I,YAAI,CACN9J,KAAMpD,GACN0F,KAAMmb,IAdX,QAgBC,OAhBDgC,EAAA/M,KAAA,GAgBO5I,YAAIlJ,GAAkBwH,EAAK9F,KAAK7B,QAAQ,IAhB/C,QAiBC,OAjBDgf,EAAA/M,KAAA,GAiBO5I,YAAI4V,iBAAeC,gBAjB1B,QAAAF,EAAA/M,KAAA,iBAmBC,OAnBD+M,EAAAhN,KAAA,GAAAgN,EAAA/F,GAAA+F,EAAA,SAAAA,EAAA/M,KAAA,GAmBO5I,YAAI,CAAE9J,KAAMb,KAnBnB,QAoBC,OApBDsgB,EAAA/M,KAAA,GAoBOwF,YAAKrC,GAAD4J,EAAA/F,IApBX,yBAAA+F,EAAAzM,SAAA4M,GAAA,eAwBA,SAAUlI,GAAyBiB,GAAnC,IAAAwD,EAAA0D,EAAAvd,EAAA,OAAA4P,EAAA7G,EAAAkH,KAAA,SAAAuN,GAAA,cAAAA,EAAArN,KAAAqN,EAAApN,MAAA,OAGc,OAFbyJ,EAAa,KADd2D,EAAArN,KAAA,EAAAqN,EAAApN,KAAA,EAGoBwF,YAAKnC,GAAD,aAAApN,OAA2BgQ,EAAO/R,KAAK5D,OAH/D,OAQc,OALbmZ,EAHD2D,EAAAhN,MAIO+M,EAAW,IAAIE,UACZC,IAAI,SAAUrH,EAAOlY,QAC9Bof,EAASI,OAAO,QAAStH,EAAO/R,KAAM+R,EAAO/R,KAAK5D,MANnD8c,EAAApN,KAAA,GAQoBwF,YACfrB,GACA,cACAgJ,EACA,SAAClT,GAAD,OAA0BgM,EAAO5R,SAAS4F,EAAMuT,iBAAkBvT,EAAMwT,OAAQxT,EAAMyT,QACtFzH,EAAO1R,YACP,WACI0R,EAAO3R,UAfhB,gBAkBcsJ,KAVPhO,EARPwd,EAAAhN,MAAA,CAAAgN,EAAApN,KAAA,SAqBK,OADAiG,EAAO9R,KAAKvE,EAAK6E,QAAQoH,YApB9BuR,EAAApN,KAAA,GAqBW5I,YAAI,CAAE9J,KAAMT,KArBvB,QAsBK,OAtBLugB,EAAApN,KAAA,GAsBWwF,YAAKpC,GAAD,GAAAnN,OAAagQ,EAAO/R,KAAK5D,KAAzB,cAtBf,QAwBC,OAxBD8c,EAAApN,KAAA,GAwBOwF,YAAKlC,GAAcmG,GAxB1B,QAAA2D,EAAApN,KAAA,iBA0BC,OA1BDoN,EAAArN,KAAA,GAAAqN,EAAApG,GAAAoG,EAAA,SAAAA,EAAApN,KAAA,GA0BO5I,YAAI,CAAE9J,KAAMR,KA1BnB,WA2BoB,OAAf2c,EA3BL,CAAA2D,EAAApN,KAAA,SA2B0B,OA3B1BoN,EAAApN,KAAA,GA2BgCwF,YAAKlC,GAAcmG,GA3BnD,QA4BC,OA5BD2D,EAAApN,KAAA,GA4BOwF,YAAKrC,GAADiK,EAAApG,IA5BX,QA6BCf,EAAO7R,MAAMgZ,EAAApG,GAAEvZ,SA7BhB,yBAAA2f,EAAA9M,SAAAqN,GAAA,eAiCA,SAAU1I,GAAyBgB,GAAnC,OAAAzG,EAAA7G,EAAAkH,KAAA,SAAA+N,GAAA,cAAAA,EAAA7N,KAAA6N,EAAA5N,MAAA,OAEC,OAFD4N,EAAA7N,KAAA,EAAA6N,EAAA5N,KAAA,EAEOwF,YAAKtB,GAAyB,eAAiB+B,EAAOxR,SAF7D,OAGCwR,EAAO9R,OAHRyZ,EAAA5N,KAAA,eAAA4N,EAAA7N,KAAA,EAAA6N,EAAA5G,GAAA4G,EAAA,SAKC3H,EAAO7R,MAAMwZ,EAAA5G,GAAEvZ,SALhB,wBAAAmgB,EAAAtN,SAAAuN,GAAA,cAqBP,SAASC,GAAUle,EAAcme,EAA8Blb,GAC3D,IAAM0I,EAAM,IAAIC,cAAY5L,GAS5B,OARKme,IACDxS,EAAIE,KAAJ,oBAAkC,QAGlC5I,GAlBR,SAASmb,EAAaC,EAAepb,GACjC,GAAkB,YAAdob,EAAK3gB,KAAoB,KAAAoU,GAAA,EAAAC,GAAA,EAAAC,OAAAhE,EAAA,IACzB,QAAAiE,EAAAC,EAAkBmM,EAAKC,SAAvBlM,OAAAC,cAAAP,GAAAG,EAAAC,EAAA9B,QAAAkC,MAAAR,GAAA,EAAiC,KAAxByM,EAAwBtM,EAAAM,MACV,YAAfgM,EAAM7gB,MACa,SAAf6gB,EAAM7d,OACN6d,EAAM1S,KAAN,KAAqB5I,GAE7Bmb,EAAaG,EAAOtb,IANC,MAAA0P,GAAAZ,GAAA,EAAAC,EAAAW,EAAA,YAAAb,GAAA,MAAAI,EAAAU,QAAAV,EAAAU,SAAA,WAAAb,EAAA,MAAAC,KAkBzBoM,CAAazS,EAAK1I,GAGf+I,KAAKL,EAAIM,SAAS,CAAEC,YAAY,KAGpC,SAAUoJ,GAAuBe,GAAjC,IAAAiE,EAAArY,EAAAka,EAAAqC,EAAAC,EAAAC,EAAA,OAAA9O,EAAA7G,EAAAkH,KAAA,SAAA0O,GAAA,cAAAA,EAAAxO,KAAAwO,EAAAvO,MAAA,OAEC,OAFDuO,EAAAxO,KAAA,EAAAwO,EAAAvO,KAAA,EAEOwF,YAAKnH,IAAO,KAFnB,OAGsB,OAHtBkQ,EAAAvO,KAAA,EAG4BoK,cAH5B,eAK6CxM,KAFtCsM,EAHPqE,EAAAnO,MAKWoO,QAAQC,QAAQC,cAL3B,CAAAH,EAAAvO,KAAA,eAAAuO,EAAA1I,OAAA,iBAAA0I,EAAAvH,GAAAxH,EAAA7G,EAAAwT,KASsBjC,EAAMsE,QAAQC,QAAQhC,WAT5C,WAAA8B,EAAA/B,GAAA+B,EAAAvH,MAAA9E,KAAA,CAAAqM,EAAAvO,KAAA,YASYnO,EATZ0c,EAAA/B,GAAArK,MAW4B,WADjB4J,EAAY7B,EAAMsE,QAAQC,QAAQpM,OAAOxQ,GAAQqY,EAAMsE,QAAQC,QAAQC,gBAC/DphB,OAAoBye,EAAUrV,IAXjD,CAAA6X,EAAAvO,KAAA,SAY2B,OAZ3BuO,EAAAvO,KAAA,GAYiCwF,YAAKxB,GAAsB+H,EAAUrV,KAZtE,WAamD,mBADpC0X,EAZfG,EAAAnO,MAauBrK,QAAQ,gBAb/B,CAAAwY,EAAAvO,KAAA,YAcgC,YAAfiG,EAAOlV,IAdxB,CAAAwd,EAAAvO,KAAA,SAgBiB,OADMqO,EAAMP,GAAUM,EAAUxe,MAAM,EAAOmc,EAAUlZ,OAfxE0b,EAAAvO,KAAA,GAgBuB5I,YAAI5D,GAAyB3B,EAAQqY,EAAMsE,QAAQC,QAAQC,cAAeL,IAhBjG,QAAAE,EAAAvO,KAAA,qBAiBwB+L,EAAUlZ,MAjBlC,CAAA0b,EAAAvO,KAAA,SAmBiB,OADMqO,EAAMP,GAAUM,EAAUxe,MAAM,EAAMmc,EAAUlZ,OAlBvE0b,EAAAvO,KAAA,GAmBuB5I,YAAI5D,GAAyB3B,EAAQqY,EAAMsE,QAAQC,QAAQC,cAAeL,IAnBjG,QAAAE,EAAAvO,KAAA,iBAqBiB,OArBjBuO,EAAAvO,KAAA,GAqBuB5I,YAAI5D,GAAyB3B,EAAQqY,EAAMsE,QAAQC,QAAQC,mBAAe9Q,IArBjG,QAAA2Q,EAAAvO,KAAA,gBAAAuO,EAAAvO,KAAA,iBA2BC,OA3BDuO,EAAAxO,KAAA,GAAAwO,EAAA7B,GAAA6B,EAAA,SAAAA,EAAAvO,KAAA,GA2BOwF,YAAKrC,GAADoL,EAAA7B,IA3BX,yBAAA6B,EAAAjO,SAAAqO,GAAA,eA+BA,SAAUxJ,GAAyBc,GAAnC,IAAAiE,EAAA0E,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAApd,EAAAqd,EAAA3b,EAAA6a,EAAA9d,EAAAwB,EAAAia,EAAAsC,EAAAc,EAAA,OAAA3P,EAAA7G,EAAAkH,KAAA,SAAAuP,GAAA,cAAAA,EAAArP,KAAAqP,EAAApP,MAAA,OAEC,OAFDoP,EAAArP,KAAA,EAAAqP,EAAApP,KAAA,EAEOwF,YAAKnH,IAAO,KAFnB,OAGsB,OAHtB+Q,EAAApP,KAAA,EAG4BoK,cAH5B,OAGOF,EAHPkF,EAAAhP,KAKKwO,EACA1E,EAAMsE,QAAQC,QAAQ5a,sBAAqC+J,IAAlBqI,EAAOpU,OAC1CqY,EAAMsE,QAAQC,QAAQvP,YACtB,CAAC+G,EAAOpU,QARnBgd,GAAA,EAAAC,GAAA,EAAAC,OAAAnR,EAAAwR,EAAArP,KAAA,GAAAiP,EAUsBJ,EAVtB5M,OAAAC,YAAA,WAAA4M,GAAAI,EAAAD,EAAAhP,QAAAkC,KAAA,CAAAkN,EAAApP,KAAA,YAUYnO,EAVZod,EAAA9M,MAWW+M,EAAahF,EAAMsE,QAAQC,QAAQpM,OAAOxQ,GAEzB,WADjB0B,EAAY2b,EAAWjJ,EAAOnU,UACtBxE,OAAoBiG,EAAUmD,IAbjD,CAAA0Y,EAAApP,KAAA,SAc2B,OAd3BoP,EAAApP,KAAA,GAciCwF,YAAKxB,GAAsBzQ,EAAUmD,KAdtE,WAgBmD,mBAFpC0X,EAdfgB,EAAAhP,MAgBuBrK,QAAQ,gBAhB/B,CAAAqZ,EAAApP,KAAA,SAiBmB1P,EAAOiD,EAAUjD,MAAQiD,EAAU/F,GAjBtD4hB,EAAApI,GAAAxH,EAAA7G,EAAAwT,KAmBmC+C,GAnBnC,YAAAE,EAAA5C,GAAA4C,EAAApI,MAAA9E,KAAA,CAAAkN,EAAApP,KAAA,YAmBwBlO,EAnBxBsd,EAAA5C,GAAArK,OAoBuB4J,EAAYmD,EAAWpd,IAEdxB,OAASA,GAAQyb,EAAUve,KAAO8C,GAA4B,UAAnByb,EAAUze,KAtBrF,CAAA8hB,EAAApP,KAAA,YAuB2C,YAAlB+L,EAAUhb,IAvBnC,CAAAqe,EAAApP,KAAA,SAyByB,OADMqO,EAAMP,GAAUM,EAAUxe,MAAM,EAAO2D,EAAUV,OAxBhFuc,EAAApP,KAAA,GAyB+B5I,YAAI5D,GAAyB3B,EAAQC,EAASuc,IAzB7E,QAAAe,EAAApP,KAAA,qBA0BgCzM,EAAUV,MA1B1C,CAAAuc,EAAApP,KAAA,SA4ByB,OADMqO,EAAMP,GAAUM,EAAUxe,MAAM,EAAM2D,EAAUV,OA3B/Euc,EAAApP,KAAA,GA4B+B5I,YAAI5D,GAAyB3B,EAAQC,EAASuc,IA5B7E,QAAAe,EAAApP,KAAA,iBA8ByB,OA9BzBoP,EAAApP,KAAA,GA8B+B5I,YAAI5D,GAAyB3B,EAAQC,OAAS8L,IA9B7E,QAAAwR,EAAApP,KAAA,iBAAA6O,GAAA,EAAAO,EAAApP,KAAA,iBAAAoP,EAAApP,KAAA,iBAAAoP,EAAArP,KAAA,GAAAqP,EAAA1C,GAAA0C,EAAA,UAAAN,GAAA,EAAAC,EAAAK,EAAA1C,GAAA,QAAA0C,EAAArP,KAAA,GAAAqP,EAAArP,KAAA,GAAA8O,GAAA,MAAAG,EAAAxM,QAAAwM,EAAAxM,SAAA,WAAA4M,EAAArP,KAAA,IAAA+O,EAAA,CAAAM,EAAApP,KAAA,eAAA+O,EAAA,eAAAK,EAAA7C,OAAA,mBAAA6C,EAAA7C,OAAA,YAAA6C,EAAApP,KAAA,iBAsCC,OAtCDoP,EAAArP,KAAA,GAAAqP,EAAAzC,GAAAyC,EAAA,SAAAA,EAAApP,KAAA,GAsCOwF,YAAKrC,GAADiM,EAAAzC,IAtCX,yBAAAyC,EAAA9O,SAAA+O,GAAA,yCA0CP,SAASC,GAAalV,GAClBA,EAAEmV,iBACFnV,EAAEoV,aAAc,EAOpB,SAASC,KACLlX,OAAOmX,oBAAoB,eAAgBJ,IAGxC,SAAUlK,KAAV,IAAAqE,EAAAS,EAAApL,EAAAlP,EAAA,OAAA4P,EAAA7G,EAAAkH,KAAA,SAAA8P,GAAA,cAAAA,EAAA5P,KAAA4P,EAAA3P,MAAA,OAKc,OAJbyJ,EAAa,KADdkG,EAAA5P,KAAA,EAPHxH,OAAOyB,iBAAiB,eAAgBsV,IAOrCK,EAAA3P,KAAA,EAKoBwF,YAAKnC,GAAa,mBALtC,OAOC,OAFAoG,EALDkG,EAAAvP,KAAAuP,EAAA3P,KAAA,EAOOwF,YAAKnH,IAAO,KAPnB,OAQsB,OARtBsR,EAAA3P,KAAA,GAQ4BoK,cAR5B,WAQOF,EARPyF,EAAAvP,KAWmB,QADZtB,EAAYoL,EAAMljB,SAAS2b,QAVlC,CAAAgN,EAAA3P,KAAA,eAW+B/K,MAAM,gBAXrC,QAyBC,OAbMrF,EAAO,CACTN,MAAO4a,EAAMsE,QAAQC,QAAQnf,MAC7BC,OAAQ2a,EAAMsE,QAAQC,QAAQlf,OAC9BkC,WAAYyY,EAAMsE,QAAQC,QAAQhd,WAClCE,iBAAkBuY,EAAMsE,QAAQC,QAAQ9c,iBACxCqY,QAASE,EAAMsE,QAAQC,QAAQzE,QAC/B9K,YAAagL,EAAMsE,QAAQC,QAAQvP,YACnCuN,UAAWvC,EAAMsE,QAAQC,QAAQhC,UACjC1K,aAAcmI,EAAMsE,QAAQC,QAAQ1M,aACpCM,OAAQ6H,EAAMsE,QAAQC,QAAQpM,OAC9B/P,KAAM4X,EAAMsE,QAAQC,QAAQnc,MAtBjCqd,EAAA3P,KAAA,GAyBOwF,YAAKpB,GAAsB,iBAAmBtF,EAAW,CAC3DxO,KAAM4Z,EAAMljB,SAAS+hB,KAAKjK,GAAWxO,KACrCV,KAAMmP,KAAKgL,UAAUna,KA3B1B,QA6BC,OA7BD+f,EAAA3P,KAAA,GA6BOwF,YAAKlC,GAAcmG,GA7B1B,QA8BC,OA9BDkG,EAAA3P,KAAA,GA8BOwF,YAAKpC,GAAS,kBA9BrB,QA+BCqM,KA/BDE,EAAA3P,KAAA,oBAAA2P,EAAA5P,KAAA,GAAA4P,EAAA3I,GAAA2I,EAAA,SAiCoB,OAAflG,EAjCL,CAAAkG,EAAA3P,KAAA,SAiC0B,OAjC1B2P,EAAA3P,KAAA,GAiCgCwF,YAAKlC,GAAcmG,GAjCnD,QAkCC,OAlCDkG,EAAA3P,KAAA,GAkCOwF,YAAKrC,GAADwM,EAAA3I,IAlCX,QAmCCyI,KAnCD,yBAAAE,EAAArP,SAAAsP,GAAA,eAwCA,SAAUvK,GAAuBY,GAAjC,IAAAiE,EAAArV,EAAAC,EAAA+a,EAAAna,EAAApP,EAAA,OAAAkZ,EAAA7G,EAAAkH,KAAA,SAAAiQ,GAAA,cAAAA,EAAA/P,KAAA+P,EAAA9P,MAAA,OAEC,OAFD8P,EAAA/P,KAAA,EAAA+P,EAAA9P,KAAA,EAEOwF,YAAKnH,IAAO,KAFnB,OAGe,OAHfyR,EAAA9P,KAAA,EAGqBoK,cAHrB,OAQc,OALPF,EAHP4F,EAAA1P,KAKOvL,EAASkb,mBAAmB9J,EAAOpR,QACnCC,EAAWib,mBAAmB9J,EAAOnR,UACrC+a,EAAOE,mBAAmB7F,EAAMjB,MAAMtG,QAP7CmN,EAAA9P,KAAA,GAQoBwF,YAAKxB,GAAD,oBAAA/N,OAA2CpB,EAA3C,cAAAoB,OAA8DnB,EAA9D,UAAAmB,OAA+E4Z,IARvG,QAUC,OAFMna,EARPoa,EAAA1P,KASO9Z,EAASoP,EAAK9F,KAAKtJ,OAT1BwpB,EAAA9P,KAAA,GAUO5I,YAAI,CACN9J,KAAMH,GACN7G,WAZL,QAAAwpB,EAAA9P,KAAA,iBAeC,OAfD8P,EAAA/P,KAAA,GAAA+P,EAAA9I,GAAA8I,EAAA,SAAAA,EAAA9P,KAAA,GAeO5I,YAAI,CAAE9J,KAAMF,KAfnB,QAgBC,OAhBD0iB,EAAA9P,KAAA,GAgBOwF,YAAKrC,GAAD2M,EAAA9I,IAhBX,yBAAA8I,EAAAxP,SAAA0P,GAAA,eAqBA,SAAU1K,KAAV,OAAA9F,EAAA7G,EAAAkH,KAAA,SAAAoQ,GAAA,cAAAA,EAAAlQ,KAAAkQ,EAAAjQ,MAAA,OACH,OADGiQ,EAAAjQ,KAAA,EACGkQ,YAAI,CACNC,YAAUvoB,EAAiB2b,IAC3B6M,YAAWtoB,EAAe2b,IAC1B2M,YAAWroB,EAAe2b,IAC1B0M,YAAWnoB,EAAgB4b,IAC3BuM,YAAWhoB,EAAgB0b,IAC3BsM,YAAW7nB,EAAqB8b,IAChC+L,YAAW3nB,EAAqB6b,IAChC8L,YAAW1nB,EAAqB6b,IAChC6L,YAAWxnB,EAAmB4b,IAC9B4L,YAAWrnB,EAAqB0b,IAChC2L,YAAWlnB,EAAyBwb,IACpC0L,YAAW/mB,EAAyBsb,IACpCyL,YAAW3mB,GAAwBmb,IACnCwL,YAAWxmB,GAAwBib,IACnCuL,YAAWvmB,GAAwBib,IACnCsL,YAAWnmB,GAAwB8a,IACnCoL,YAAUvjB,GAAsBoY,IAChCmL,YAAUpjB,GAAsBkY,IAChCkL,YAAUllB,GAAqCia,IAC/CiL,YAAU9jB,GAAsB8Y,IAEhCiL,YAAWjmB,GAAqBib,IAChCgL,YAAWhmB,GAAoBgb,IAC/BgL,YAAW/lB,GAAqB+a,IAChCgL,YAAW9lB,GAA2B8a,IACtCgL,YAAW7lB,GAAwB6a,IACnCgL,YAAW5lB,GAAyB4a,IACpCgL,YAAW3lB,GAAkC2a,IAC7CgL,YAAW1lB,GAA6B0a,IACxCgL,YAAWzlB,GAA4Bya,IACvCgL,YAAWxlB,GAAmCwa,IAC9CgL,YAAWvlB,GAA4Bua,IACvCgL,YAAWtlB,GAAsCsa,IACjDgL,YAAWrlB,GAA2Bqa,IACtCgL,YAAWplB,GAA6Boa,IACxCgL,YAAWnlB,GAAqCma,IAChDgL,YAAWllB,GAAsCka,IACjDgL,YAAWjlB,GAA6Cia,IACxDgL,YAAWhlB,GAAsBga,IACjCgL,YAAW/kB,GAAuB+Z,IAClCgL,YAAW9kB,GAA6B8Z,IACxCgL,YAAW7kB,GAAkC6Z,IAC7CgL,YAAW5kB,GAA+B4Z,IAC1CgL,YAAW3kB,GAA0B2Z,IACrCgL,YAAW1kB,GAA2B0Z,IACtCgL,YAAWzkB,GAA2ByZ,IACtCgL,YAAWxkB,GAA4BwZ,IACvCgL,YAAWvkB,GAAwCuZ,IACnDgL,YAAWtkB,GAAwCsZ,IACnDgL,YAAWrkB,GAA8CqZ,IACzDgL,YAAWpkB,GAA+CoZ,IAC1DgL,YAAWnkB,GAA0DmZ,IACrEgL,YAAWlkB,GAA4CkZ,IACvDgL,YAAWjkB,GAA8CiZ,IACzDgL,YAAWhkB,GAAqBgZ,IAChCgL,YAAW/jB,GAAsB+Y,IACjCgL,YAAWzjB,GAAkByY,IAC7BgL,YAAWtmB,GAAqBsb,IAChCgL,YAAWpjB,GAAcoY,IACzBgL,YAAWnjB,GAAcmY,IAEzBgL,YAAWljB,GAAoBmY,IAE/B+K,YAAWzoB,EAAcoc,MAjE1B,wBAAAkM,EAAA3P,SAAA+P,iBCjuBMC,GAAqB,EACrBC,GAAwB,EACxBC,GAAwB,EAMxBC,GAAoC,CAC7CC,SAAU,IAQDC,GAA8B,CACvCC,iBAAiB,EACjBC,KAAM,IAOGC,GAAkC,CAC3CC,WAAW,GAUFC,GAA8B,CACvCjI,KAAM,GACND,OAAQ,GACRmI,SAAU,EACVtO,OAAQ,MAkBCuO,GAAsC,CAC/CnI,KAAM,GACND,OAAQ,GACRnG,OAAQ,MAuBCwO,GAAoC,CAC7C7hB,MAAO,KACPC,OAAQ,KACRkC,YAAY,EACZE,iBAAkB,EAClBqY,QAASziB,EACT0pB,SAAU,EACVxE,UAAW,GACXvN,YAAa,GACbkS,kBAAcxT,EACdjK,cAAc,EACd+a,mBAAe9Q,EACfmE,aAAc,GACdM,OAAQ,GACRgP,aAAc,CACV1e,MAAO,OACPE,MAAO,UACPnM,WRjNoB,SQkNpBC,YRjN4B,UQkN5BsM,SAAUzL,EACV2L,WAAY1L,GAEhB6pB,cAAe,KACfhf,KAAM,EACNuB,iBAAiB,GASR0d,GAAgC,CACzCN,SAAU,EACVpc,OAAQ,GACRvO,OAAQ,IAsMZ,SAASkrB,GAAanP,EAAmCoP,EAAoBC,GACzE,IAAIC,EAASzV,OAAAwG,EAAA,EAAAxG,CAAA,GAAQmG,GACrB,IAAK,IAAMxQ,KAAU8f,EAAW,CAC5B,IAAIzC,EAAUhT,OAAAwG,EAAA,EAAAxG,CAAA,GAAQmG,EAAOxQ,IAC7B,IAAK,IAAMC,KAAWod,EAAY,CAC9B,IAAInD,EAAS7P,OAAAwG,EAAA,EAAAxG,CAAA,GAAQgT,EAAWpd,IAChCia,EAAUha,GAAKga,EAAUha,EAAIrK,GAAe+pB,EAAa/pB,EACzDqkB,EAAU/Z,GAAK+Z,EAAU/Z,EAAItK,GAAegqB,EAAchqB,EAC1DqkB,EAAUzc,OAASmiB,EACnB1F,EAAUxc,QAAUmiB,EACG,UAAnB3F,EAAUze,MACNye,EAAU5Z,KACV4Z,EAAU5Z,IAAMsf,GAEhB1F,EAAU3Z,KACV2Z,EAAU3Z,IAAMsf,IAEM,SAAnB3F,EAAUze,OACjBye,EAAU9Y,UAAYye,GAE1BxC,EAAWpd,GAAWia,EAE1B4F,EAAU9f,GAAUqd,EAExB,OAAOyC,EAulCX,IAAMC,GAAkBC,IAplCjB,WAAiG,IAAhF3H,EAAgFtJ,UAAA1D,OAAA,QAAAU,IAAAgD,UAAA,GAAAA,UAAA,GAA1DuQ,GAAqBlL,EAAqCrF,UAAA1D,OAAA,EAAA0D,UAAA,QAAAhD,EACpG,OAAQqI,EAAO3Y,MACX,KAAKrD,GACD,OAAOiS,OAAO4V,OAAO,GAAI5H,EAAO,CAC5B+G,SAAU/G,EAAM+G,SAAWX,KAEnC,KAAKpmB,GACD,OAAOgS,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEI+G,SAAU/G,EAAM+G,UAAYX,GAC5BhhB,MAAO2W,EAAOrW,KAAKN,OAAS,KAC5BC,OAAQ0W,EAAOrW,KAAKL,QAAU,KAC9BkC,WAAYwU,EAAOrW,KAAK6B,aAAc,EACtCE,iBAAkBsU,EAAOrW,KAAK+B,kBAAoB,EAClDqY,QAAS/D,EAAOrW,KAAKoa,QACrB9K,YAAa+G,EAAOrW,KAAKsP,aAAe,GACxCuN,UAAWxG,EAAOrW,KAAK6c,WAAa,GACpCpK,OAAQ4D,EAAOrW,KAAKyS,QAAU,GAC9BN,aAAckE,EAAOrW,KAAKmS,cAAgB,GAC1CqP,kBAAcxT,EACd8Q,mBAAe9Q,EACfjK,cAAc,EACdrB,KAAM2T,EAAOrW,KAAK0C,MAAQ,IAGlC,KAAK7F,GACD,OAAOyP,OAAO4V,OAAO,GAAI5H,EAAO,CAC5B+G,SAAU/G,EAAM+G,UAAYX,KAEpC,KAAKnmB,GACD,IAAI+kB,EAAkC,GACtC,GAAIhF,EAAMhL,YAAYhC,OAAS,EAAG,CAC9BgS,EAAUhT,OAAAwG,EAAA,EAAAxG,CAAA,GACHgO,EAAM7H,OAAO6H,EAAMhL,YAAY,KAFR,IAAAwC,GAAA,EAAAC,GAAA,EAAAC,OAAAhE,EAAA,IAK9B,QAAAiE,EAAAC,EAAsBoI,EAAMnI,aAA5BC,OAAAC,cAAAP,GAAAG,EAAAC,EAAA9B,QAAAkC,MAAAR,GAAA,EAA0C,KAA/B5P,EAA+B+P,EAAAM,MAClC4J,EAAS7P,OAAAwG,EAAA,EAAAxG,CAAA,GAAQgT,EAAWpd,IACT,SAAnBia,EAAUze,KACVye,EAAU5J,MAAQ,GACQ,UAAnB4J,EAAUze,cACVye,EAAUrV,WACVqV,EAAUtY,QAErByb,EAAWpd,GAAWia,GAbI,MAAAxJ,IAAAZ,GAAA,EAAAC,EAAAW,GAAA,YAAAb,GAAA,MAAAI,EAAAU,QAAAV,EAAAU,SAAA,WAAAb,EAAA,MAAAC,IAgBlC,OAAO1F,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEIuC,UAAUvQ,OAAAwG,EAAA,EAAAxG,CAAA,GACHgO,EAAMuC,UADJvQ,OAAA6V,GAAA,EAAA7V,CAAA,GAEJ+J,EAAOnW,KAAKtC,GAAKyY,EAAOnW,OAE7BoP,YAAagL,EAAMhL,YAAcgL,EAAMhL,YAAYjJ,OAAOgQ,EAAOnW,KAAKtC,IAAM,CAACyY,EAAOnW,KAAKtC,IACzF6U,OAAOnG,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EAAM7H,OADPnG,OAAA6V,GAAA,EAAA7V,CAAA,GAED+J,EAAOnW,KAAKtC,GAAK0hB,MAI9B,KAAK9kB,GACD,IAAI4nB,EAAO9V,OAAAwG,EAAA,EAAAxG,CAAA,GAAQ+J,EAAOnW,KAAf,CAAqBtC,GAAIE,IAAQC,aAEtCskB,EAAQ/H,EAAMhL,YAAYgT,QAAQjM,EAAOnW,KAAKtC,IAAM,EACpD0R,EAAW,GAAAjJ,OAAAiG,OAAA8G,GAAA,EAAA9G,CAAOgO,EAAMhL,YAAYV,MAAM,EAAGyT,IAAlC,CAA0CD,EAAQxkB,IAAlD0O,OAAA8G,GAAA,EAAA9G,CAAyDgO,EAAMhL,YAAYV,MAAMyT,KAElG,OAAO/V,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEIuC,UAAUvQ,OAAAwG,EAAA,EAAAxG,CAAA,GACHgO,EAAMuC,UADJvQ,OAAA6V,GAAA,EAAA7V,CAAA,GAEJ8V,EAAQxkB,GAAKwkB,IAElB9S,cACAmD,OAAOnG,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EAAM7H,OADPnG,OAAA6V,GAAA,EAAA7V,CAAA,GAED8V,EAAQxkB,GAFP0O,OAAAwG,EAAA,EAAAxG,CAAA,GAGKgO,EAAM7H,OAAO4D,EAAOnW,KAAKtC,SAK5C,KAAKnD,GACD,IAAMwH,EAASoU,EAAOnW,KAAKtC,GACvBif,EAASvQ,OAAAwG,EAAA,EAAAxG,CAAA,GAAQgO,EAAMuC,kBACpBA,EAAU5a,GAEjB,IAAIwQ,EAAMnG,OAAAwG,EAAA,EAAAxG,CAAA,GAAQgO,EAAM7H,QACpBxQ,KAAUwQ,UACHA,EAAOxQ,GAGlB,IAAIuf,EAAelH,EAAMkH,eAAiBvf,OAAS+L,EAAYsM,EAAMkH,aAE/DlS,EAAcgL,EAAMhL,YAAYrK,OAAO,SAAArH,GAAE,OAAIA,IAAOqE,IAEtDkQ,EAAemI,EAAMnI,aAKzB,OAJ2B,IAAvB7C,EAAYhC,SACZ6E,EAAe,IAGZ7F,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEIuC,YACAvN,cACA6C,eACAM,SACA+O,iBAGR,KAAK9mB,GACD,IAAMuH,EAASoU,EAAOnW,KAAKtC,GACvBsC,EAAIoM,OAAAwG,EAAA,EAAAxG,CAAA,GAAQgO,EAAMuC,UAAU5a,IAGhC,OAFA/B,EAAKI,MAAQ+V,EAAO/V,MAEbgM,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEIuC,UAAUvQ,OAAAwG,EAAA,EAAAxG,CAAA,GACHgO,EAAMuC,UADJvQ,OAAA6V,GAAA,EAAA7V,CAAA,GAEJrK,EAAS/B,MAItB,KAAKvF,GACD,IAAI8mB,EAAYnV,OAAAwG,EAAA,EAAAxG,CAAA,GAAQgO,EAAMmH,cACxB7jB,EAAKE,IAAQC,WACf0U,EAAoC,GAHfwM,GAAA,EAAAC,GAAA,EAAAC,OAAAnR,EAAA,IAIzB,QAAAqR,EAAAD,EAAqB9E,EAAMhL,YAA3B8C,OAAAC,cAAA4M,GAAAI,EAAAD,EAAAhP,QAAAkC,MAAA2M,GAAA,EAAwC,KAA7Bhd,EAA6Bod,EAAA9M,MACpCE,EAAOxQ,GAAPqK,OAAAwG,EAAA,EAAAxG,CAAA,GACOgO,EAAM7H,OAAOxQ,GADpBqK,OAAA6V,GAAA,EAAA7V,CAAA,GAEK1O,EAAK,CACFF,KAAM,OACNE,KACAuE,EAAG,EACHC,EAAG,EACH1C,MAAO,GACPC,OAAQ,GACRkD,MAAO,EACP0f,SAAUjI,EAAMvW,aAChBwO,MAAO,GACPxP,MAAO0e,EAAa1e,MACpBE,MAAOwe,EAAaxe,MACpBnM,WAAY2qB,EAAa3qB,WACzBC,YAAa0qB,EAAa1qB,YAC1BsM,SAAUoe,EAAape,SACvBE,WAAYke,EAAale,YAAc1L,MAtB1B,MAAA8a,IAAAuM,GAAA,EAAAC,EAAAxM,GAAA,YAAAsM,GAAA,MAAAG,EAAAxM,QAAAwM,EAAAxM,SAAA,WAAAsM,EAAA,MAAAC,GA2BzB,OAAO7S,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEInI,aAAY,GAAA9L,OAAAiG,OAAA8G,GAAA,EAAA9G,CAAMgO,EAAMnI,cAAZ,CAA0BvU,IACtC6U,WAGR,KAAK7X,GACD,IAAMgD,EAAKE,IAAQC,WACf0U,EAAoC,GAFd6I,GAAA,EAAAC,GAAA,EAAAC,OAAAxN,EAAA,IAG1B,QAAA0N,EAAAD,EAAqBnB,EAAMhL,YAA3B8C,OAAAC,cAAAiJ,GAAAI,EAAAD,EAAArL,QAAAkC,MAAAgJ,GAAA,EAAwC,KAA7BrZ,EAA6ByZ,EAAAnJ,MACpCE,EAAOxQ,GAAPqK,OAAAwG,EAAA,EAAAxG,CAAA,GACOgO,EAAM7H,OAAOxQ,GADpBqK,OAAA6V,GAAA,EAAA7V,CAAA,GAEK1O,EAAK,CACFF,KAAM,QACNE,KACAuE,EAAG,EACHC,EAAG,EACH1C,MAAO,GACPC,OAAQ,GACRkD,MAAO,EACP0f,SAAUjI,EAAMvW,aAChB1C,MAAM,MAfQ,MAAAsR,IAAA4I,GAAA,EAAAC,EAAA7I,GAAA,YAAA2I,GAAA,MAAAG,EAAA7I,QAAA6I,EAAA7I,SAAA,WAAA2I,EAAA,MAAAC,GAoB1B,OAAOlP,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEInI,aAAY,GAAA9L,OAAAiG,OAAA8G,GAAA,EAAA9G,CAAMgO,EAAMnI,cAAZ,CAA0BvU,IACtC6U,WAGR,KAAK5X,GACD,QAA4BmT,IAAxBsM,EAAMwE,cAA6B,CACnC,IAAIrM,EAAoC,GACpC7U,EAAK0c,EAAMwE,cAFoBnD,GAAA,EAAAC,GAAA,EAAAC,OAAA7N,EAAA,IAInC,QAAA+N,EAAAD,EAAqBxB,EAAMhL,YAA3B8C,OAAAC,cAAAsJ,GAAAI,EAAAD,EAAA1L,QAAAkC,MAAAqJ,GAAA,EAAwC,KAA7B1Z,EAA6B8Z,EAAAxJ,MACpCE,EAAOxQ,GAAPqK,OAAAwG,EAAA,EAAAxG,CAAA,GACOgO,EAAM7H,OAAOxQ,GADpBqK,OAAA6V,GAAA,EAAA7V,CAAA,GAEK1O,EAFL0O,OAAAwG,EAAA,EAAAxG,CAAA,GAGWgO,EAAM7H,OAAOxQ,GAAQrE,GAHhC,CAIQ8C,KAAM2V,EAAO3V,UATU,MAAAiS,IAAAiJ,GAAA,EAAAC,EAAAlJ,GAAA,YAAAgJ,GAAA,MAAAG,EAAAlJ,QAAAkJ,EAAAlJ,SAAA,WAAAgJ,EAAA,MAAAC,GAcnC,OAAOvP,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEI7H,WAIR,OAAO6H,EAGX,KAAKxf,GACD,IAAMoH,EAAUoY,EAAMwE,cACtB,QAAgB9Q,IAAZ9L,EAAuB,CACvB,IAAIiQ,EAAY7F,OAAA8G,GAAA,EAAA9G,CAAOgO,EAAMnI,cACzBqQ,EAAarQ,EAAamQ,QAAQpgB,IAClB,IAAhBsgB,GACArQ,EAAasQ,OAAOD,EAAY,GAGpC,IAAI/P,EAAMnG,OAAAwG,EAAA,EAAAxG,CAAA,GAAQgO,EAAM7H,QACxB,IAAK,IAAMxQ,MAAUwQ,EACjB,GAAIvQ,KAAWuQ,EAAOxQ,MAAYwQ,EAAOxQ,IAAQC,GAASwgB,OAAQ,CAC9D,IAAIpD,GAAUhT,OAAAwG,EAAA,EAAAxG,CAAA,GAAQmG,EAAOxQ,YACtBqd,GAAWpd,GAClBuQ,EAAOxQ,IAAUqd,GAIzB,OAAOhT,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEInI,eACAM,SACAqM,mBAAe9Q,IAGvB,OAAOsM,EAEX,KAAKvf,GACD,IAAIoX,GAAY7F,OAAA8G,GAAA,EAAA9G,CAAOgO,EAAMnI,cAE7B,QAA4BnE,IAAxBsM,EAAMwE,cAA6B,CACnC,IAAIuD,GAAQlQ,GAAamQ,QAAQhI,EAAMwE,gBACxB,IAAXuD,IAAgBA,GAAQlQ,GAAa7E,OAAS,GAC9C6E,GAAasQ,OAAOJ,GAAQ,EAAG,EAAGlQ,GAAasQ,OAAOJ,GAAO,GAAG,IAIxE,OAAO/V,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEInI,kBAGR,KAAKnX,GACD,IAAImX,GAAY7F,OAAA8G,GAAA,EAAA9G,CAAOgO,EAAMnI,cAE7B,QAA4BnE,IAAxBsM,EAAMwE,cAA6B,CACnC,IAAIuD,GAAQlQ,GAAamQ,QAAQhI,EAAMwE,gBACxB,IAAXuD,IACAlQ,GAAa1F,KAAK0F,GAAasQ,OAAOJ,GAAO,GAAG,IAIxD,OAAO/V,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEInI,kBAGR,KAAKlX,GACD,IAAIkX,GAAY7F,OAAA8G,GAAA,EAAA9G,CAAOgO,EAAMnI,cAE7B,QAA4BnE,IAAxBsM,EAAMwE,cAA6B,CACnC,IAAIuD,GAAQlQ,GAAamQ,QAAQhI,EAAMwE,eACnCuD,GAAQ,GACRlQ,GAAasQ,OAAOJ,GAAQ,EAAG,EAAGlQ,GAAasQ,OAAOJ,GAAO,GAAG,IAIxE,OAAO/V,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEInI,kBAGR,KAAKjX,GACD,IAAIiX,GAAY7F,OAAA8G,GAAA,EAAA9G,CAAOgO,EAAMnI,cAE7B,QAA4BnE,IAAxBsM,EAAMwE,cAA6B,CACnC,IAAIuD,GAAQlQ,GAAamQ,QAAQhI,EAAMwE,gBACxB,IAAXuD,IACAlQ,GAAawQ,QAAQxQ,GAAasQ,OAAOJ,GAAO,GAAG,IAI3D,OAAO/V,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEInI,kBAGR,KAAKhX,GACD,GAAImf,EAAMwE,cAAe,CACrB,IAAIrM,GAAMnG,OAAAwG,EAAA,EAAAxG,CAAA,GAAQgO,EAAM7H,QACpBvQ,GAAUoY,EAAMwE,cACpB,IAAK,IAAM7c,MAAUwQ,GAAQ,CACzB,IAAI6M,GAAUhT,OAAAwG,EAAA,EAAAxG,CAAA,GAAQmG,GAAOxQ,KACzBC,MAAWod,KACXA,GAAWpd,IAAXoK,OAAAwG,EAAA,EAAAxG,CAAA,GACOgT,GAAWpd,IADlB,CAEIwgB,QAAQ,KAGhBjQ,GAAOxQ,IAAUqd,GAGrB,OAAOhT,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEI7H,YAIR,OAAO6H,EAEX,KAAKlf,GACD,GAAIkf,EAAMwE,cAAe,CACrB,IAAIrM,GAAMnG,OAAAwG,EAAA,EAAAxG,CAAA,GAAQgO,EAAM7H,QACpBvQ,GAAUoY,EAAMwE,cACpB,IAAK,IAAM7c,MAAUwQ,GAAQ,CACzB,IAAI6M,GAAUhT,OAAAwG,EAAA,EAAAxG,CAAA,GAAQmG,GAAOxQ,KACzBC,MAAWod,KACXA,GAAWpd,IAAXoK,OAAAwG,EAAA,EAAAxG,CAAA,GACOgT,GAAWpd,IADlB,CAEIwgB,QAAQ,KAGhBjQ,GAAOxQ,IAAUqd,GAGrB,OAAOhT,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEI7H,YAIR,OAAO6H,EAEX,KAAKjf,GACD,GAAIif,EAAMwE,cAAe,CACrB,IAAIrM,GAAMnG,OAAAwG,EAAA,EAAAxG,CAAA,GAAQgO,EAAM7H,QACpBvQ,GAAUoY,EAAMwE,cACpB,IAAK,IAAM7c,MAAUwQ,GAAQ,CACzB,IAAI6M,GAAUhT,OAAAwG,EAAA,EAAAxG,CAAA,GAAQmG,GAAOxQ,KAC7B,GAAIC,MAAWod,GAAY,CACvB,IAAInD,GAAS7P,OAAAwG,EAAA,EAAAxG,CAAA,GAAQgT,GAAWpd,KACT,UAAnBia,GAAUze,OACVye,GAAUhb,IAAMkV,EAAOlV,KAE3Bme,GAAWpd,IAAWia,GAE1B1J,GAAOxQ,IAAUqd,GAGrB,OAAOhT,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEI7H,YAIR,OAAO6H,EAEX,KAAKhf,GACD,GAAIgf,EAAMwE,cAAe,CACrB,IAAIrM,GAAMnG,OAAAwG,EAAA,EAAAxG,CAAA,GAAQgO,EAAM7H,QACpBvQ,GAAUoY,EAAMwE,cACpB,IAAK,IAAM7c,MAAUwQ,GAAQ,CACzB,IAAI6M,GAAUhT,OAAAwG,EAAA,EAAAxG,CAAA,GAAQmG,GAAOxQ,KAC7B,GAAIC,MAAWod,GAAY,CACvB,IAAInD,GAAS7P,OAAAwG,EAAA,EAAAxG,CAAA,GAAQgT,GAAWpd,KACT,UAAnBia,GAAUze,OACVye,GAAU9a,KAAOgV,EAAOhV,MAE5Bie,GAAWpd,IAAWia,GAE1B1J,GAAOxQ,IAAUqd,GAGrB,OAAOhT,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEI7H,YAIR,OAAO6H,EAEX,KAAK/e,GACD,GAAI+e,EAAMwE,cAAe,CACrB,IAAIrM,GAAMnG,OAAAwG,EAAA,EAAAxG,CAAA,GAAQgO,EAAM7H,QACpBvQ,GAAUoY,EAAMwE,cACpB,IAAK,IAAM7c,MAAUwQ,GAAQ,CACzB,IAAI6M,GAAUhT,OAAAwG,EAAA,EAAAxG,CAAA,GAAQmG,GAAOxQ,KAC7B,GAAIC,MAAWod,GAAY,CACvB,IAAInD,GAAS7P,OAAAwG,EAAA,EAAAxG,CAAA,GAAQgT,GAAWpd,KAChCia,GAAU5a,YAAc8U,EAAO9U,YAC/B+d,GAAWpd,IAAWia,GAE1B1J,GAAOxQ,IAAUqd,GAGrB,OAAOhT,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEI7H,YAIR,OAAO6H,EAEX,KAAK9e,GACD,IAAK6a,EAAO3W,OAAS2W,EAAO3W,OAAS,EACjC,OAAO4a,EAGX,IAAI3a,GAAS2a,EAAM3a,OACf0W,EAAO5U,sBACP9B,GAAS0W,EAAO3W,OAAS4a,EAAM3a,OAAS2a,EAAM5a,QAGlD,IAAI+S,GAAS6H,EAAM7H,OAKnB,OAJI4D,EAAO3U,gBACP+Q,GAASmP,GAAanP,GAAQ4D,EAAO3W,MAAQ4a,EAAM5a,MAAOC,GAAS2a,EAAM3a,SAGtE2M,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEI5a,MAAO2W,EAAO3W,MACdC,UACA8S,YAGR,KAAKhX,GACD,IAAK4a,EAAO1W,QAAU0W,EAAO1W,QAAU,EACnC,OAAO2a,EAGX,IAAI5a,GAAQ4a,EAAM5a,MACd2W,EAAO5U,sBACP/B,GAAQ2W,EAAO1W,QAAU2a,EAAM5a,MAAQ4a,EAAM3a,SAGjD,IAAI8S,GAAS6H,EAAM7H,OAKnB,OAJI4D,EAAO3U,gBACP+Q,GAASmP,GAAanP,GAAQ/S,GAAQ4a,EAAM5a,MAAO2W,EAAO1W,OAAS2a,EAAM3a,SAGtE2M,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEI3a,OAAQ0W,EAAO1W,OACfD,SACA+S,YAGR,KAAK/W,GACD,OAAO4Q,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEIzY,WAAYwU,EAAOxU,aAG3B,KAAKlG,GACD,OAAO2Q,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEIvY,iBAAkBsU,EAAOtU,mBAGjC,KAAKnG,GACD,IAAIuG,GAAIkU,EAAOlU,EACXC,GAAIiU,EAAOjU,EACXL,GAAmBuY,EAAMvY,iBAEJ,IAArBA,KACAI,GAAI8G,KAAK+D,MAAM7K,GAAIJ,IAAoBA,GACvCK,GAAI6G,KAAK+D,MAAM5K,GAAIL,IAAoBA,IAG3C,IAAI0Q,GAAMnG,OAAAwG,EAAA,EAAAxG,CAAA,GAAQgO,EAAM7H,QACpBvQ,GAAUmU,EAAOnU,QACjB8c,GAAa3I,EAAOpU,OAAS,CAACoU,EAAOpU,QAAUqY,EAAMhL,YAZzBsT,IAAA,EAAAC,IAAA,EAAAC,QAAA9U,EAAA,IAchC,QAAA+U,GAAAC,GAAqBhE,GAArB5M,OAAAC,cAAAuQ,IAAAG,GAAAC,GAAA5S,QAAAkC,MAAAsQ,IAAA,EAAiC,KAAtB3gB,GAAsB8gB,GAAAxQ,MACzB+M,GAAUhT,OAAAwG,EAAA,EAAAxG,CAAA,GAAQmG,GAAOxQ,KACzBC,MAAWod,KACXA,GAAWpd,IAAXoK,OAAAwG,EAAA,EAAAxG,CAAA,GACOgT,GAAWpd,IADlB,CAEIC,KACAC,QAGRqQ,GAAOxQ,IAAUqd,IAvBW,MAAA3M,IAAAkQ,IAAA,EAAAC,GAAAnQ,GAAA,YAAAiQ,IAAA,MAAAI,GAAApQ,QAAAoQ,GAAApQ,SAAA,WAAAiQ,GAAA,MAAAC,IA0BhC,OAAOxW,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEI7H,YAGR,KAAK5W,GAA0B,IACrB0G,GAAW8T,EAAX9T,GAAIC,GAAO6T,EAAP7T,GAENiQ,GAAMnG,OAAAwG,EAAA,EAAAxG,CAAA,GAAQgO,EAAM7H,QACpBvQ,GAAUmU,EAAOnU,QACjB8c,GAAa1E,EAAMrW,sBAAqC+J,IAAlBqI,EAAOpU,OAAuBqY,EAAMhL,YAAc,CAAC+G,EAAOpU,QALzEghB,IAAA,EAAAC,IAAA,EAAAC,QAAAnV,EAAA,IAO3B,QAAAoV,GAAAC,GAAqBrE,GAArB5M,OAAAC,cAAA4Q,IAAAG,GAAAC,GAAAjT,QAAAkC,MAAA2Q,IAAA,EAAiC,KAAtBhhB,GAAsBmhB,GAAA7Q,MACzB+M,GAAUhT,OAAAwG,EAAA,EAAAxG,CAAA,GAAQmG,GAAOxQ,KAC7B,GAAIC,MAAWod,GAAY,CACvB,IAAInD,GAAYmD,GAAWpd,IAC3B,GAAuB,UAAnBia,GAAUze,KAAkB,KACtBgC,GAAsDyc,GAAtDzc,MAAOC,GAA+Cwc,GAA/Cxc,OAAQ+C,GAAuCyZ,GAAvCzZ,KAAMvB,GAAiCgb,GAAjChb,IAAKwI,GAA4BwS,GAA5BxS,WAAYC,GAAgBuS,GAAhBvS,YAC5ClH,GAAOA,IAAQ,EACfkH,GAAcA,IAAe,EAC7BD,GAAaA,IAAc,EAE3B,IAAI2Z,GAAgB5jB,GAChB6jB,GAAiB5jB,GACT,UAARwB,SAA2B6M,IAAR7M,GACnBoiB,GAAiB7jB,IAASkK,GAAcD,IACzB,WAARxI,KACPmiB,GAAgB3jB,IAAUgK,GAAaC,KAE3CrH,GAAK0G,KAAKua,IAAIva,KAAKwa,IAAI/jB,GAAQgD,GAAO4gB,GAAe/gB,IAAK,GAC1DC,GAAKyG,KAAKua,IAAIva,KAAKwa,IAAI9jB,GAAS+C,GAAO6gB,GAAgB/gB,IAAK,GAE5D8c,GAAWpd,IAAXoK,OAAAwG,EAAA,EAAAxG,CAAA,GACO6P,GADP,CAEI5Z,MACAC,SAIZiQ,GAAOxQ,IAAUqd,IAlCM,MAAA3M,IAAAuQ,IAAA,EAAAC,GAAAxQ,GAAA,YAAAsQ,IAAA,MAAAI,GAAAzQ,QAAAyQ,GAAAzQ,SAAA,WAAAsQ,GAAA,MAAAC,IAqC3B,OAAO7W,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEI7H,YAGR,KAAK3W,GACD,IAAI4G,GAAO2T,EAAO3T,KAEd+P,GAAMnG,OAAAwG,EAAA,EAAAxG,CAAA,GAAQgO,EAAM7H,QACpBvQ,GAAUmU,EAAOnU,QAEjB8c,GAAa1E,EAAMrW,sBAAqC+J,IAAlBqI,EAAOpU,OAAuBqY,EAAMhL,YAAc,CAAC+G,EAAOpU,QANxEyhB,IAAA,EAAAC,IAAA,EAAAC,QAAA5V,EAAA,IAQ5B,QAAA6V,GAAAC,GAAqB9E,GAArB5M,OAAAC,cAAAqR,IAAAG,GAAAC,GAAA1T,QAAAkC,MAAAoR,IAAA,EAAiC,KAAtBzhB,GAAsB4hB,GAAAtR,MACzB+M,GAAUhT,OAAAwG,EAAA,EAAAxG,CAAA,GAAQmG,GAAOxQ,KAC7B,GAAIC,MAAWod,GAAY,CACvB,IAAInD,GAAYmD,GAAWpd,IAC3B,GAAuB,UAAnBia,GAAUze,KAAkB,KACtByD,GAAgDgb,GAAhDhb,IAAKzB,GAA2Cyc,GAA3Czc,MAAOC,GAAoCwc,GAApCxc,OAAQgK,GAA4BwS,GAA5BxS,WAAYC,GAAgBuS,GAAhBvS,YAEtCA,GAAcA,IAAe,EAC7BD,GAAaA,IAAc,EAE3B,IAAI2Z,GAAgB5jB,GAChB6jB,GAAiB5jB,GACT,UAARwB,SAA2B6M,IAAR7M,GACnBoiB,GAAiB7jB,IAASkK,GAAcD,IACzB,WAARxI,KACPmiB,GAAgB3jB,IAAUgK,GAAaC,KAG3C,IAAIrH,GAAK4Z,GAAU5Z,IAAM,EACrBC,GAAK2Z,GAAU3Z,IAAM,EACrBuhB,GAAU5H,GAAUzZ,MAAQ,EAChCH,KAAYwhB,GAAUrhB,IAAQ4gB,GAAiB,EAC/C9gB,KAAYuhB,GAAUrhB,IAAQ6gB,GAAkB,EAEhDhhB,GAAK0G,KAAKua,IAAIva,KAAKwa,IAAI/jB,GAAQgD,GAAO4gB,GAAe/gB,IAAK,GAC1DC,GAAKyG,KAAKua,IAAIva,KAAKwa,IAAI9jB,GAAS+C,GAAO6gB,GAAgB/gB,IAAK,GAE5D8c,GAAWpd,IAAXoK,OAAAwG,EAAA,EAAAxG,CAAA,GACO6P,GADP,CAEIzZ,QACAH,MACAC,SAIZiQ,GAAOxQ,IAAUqd,IA3CO,MAAA3M,IAAAgR,IAAA,EAAAC,GAAAjR,GAAA,YAAA+Q,IAAA,MAAAI,GAAAlR,QAAAkR,GAAAlR,SAAA,WAAA+Q,GAAA,MAAAC,IA8C5B,OAAOtX,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEI7H,YAGR,KAAK1W,GACD,IAAI2D,GAAQ2W,EAAO3W,MACfC,GAAS0W,EAAO1W,OAChBoC,GAAmBuY,EAAMvY,iBAEJ,IAArBA,KACArC,GAAQuJ,KAAK+D,MAAMtN,GAAQqC,IAAoBA,GAC/CpC,GAASsJ,KAAK+D,MAAMrN,GAASoC,IAAoBA,IAGrD,IAAI0Q,GAAMnG,OAAAwG,EAAA,EAAAxG,CAAA,GAAQgO,EAAM7H,QACpBvQ,GAAUmU,EAAOnU,QACjB8c,GAAa3I,EAAOpU,OAAS,CAACoU,EAAOpU,QAAUqY,EAAMhL,YAZ7B0U,IAAA,EAAAC,IAAA,EAAAC,QAAAlW,EAAA,IAc5B,QAAAmW,GAAAC,GAAqBpF,GAArB5M,OAAAC,cAAA2R,IAAAG,GAAAC,GAAAhU,QAAAkC,MAAA0R,IAAA,EAAiC,KAAtB/hB,GAAsBkiB,GAAA5R,MACzB+M,GAAUhT,OAAAwG,EAAA,EAAAxG,CAAA,GAAQmG,GAAOxQ,KAC7B,GAAIC,MAAWod,GAAY,CACvB,IAAInD,GAAS7P,OAAAwG,EAAA,EAAAxG,CAAA,GAAQgT,GAAWpd,KAE5BmiB,GAAKlI,GAAUha,EAAIga,GAAUzc,MAAQ,EACrC4kB,GAAKnI,GAAU/Z,EAAI+Z,GAAUxc,OAAS,EAJnB4kB,GAKNzb,IACZpJ,GAAQyc,GAAUzc,OAAS,GAC3BC,GAASwc,GAAUxc,QAAU,EAC9Bwc,GAAUtZ,OAHRwG,GALiBkb,GAKjBlb,GAAIC,GALaib,GAKbjb,GASV,GAHA+a,GAAKA,GAAKhb,GAAK3J,GAAQ,EACvB4kB,GAAKA,GAAKhb,GAAK3J,GAAS,EAED,UAAnBwc,GAAUze,MAAoBye,GAAU5Z,IAAM4Z,GAAU3Z,GACxD,GAAsB,UAAlB2Z,GAAUhb,UAAqC6M,IAAlBmO,GAAUhb,IAAmB,CAC1D,IAAIqjB,GAAQ9kB,GAAQyc,GAAUzc,MAC9Byc,GAAU5Z,IAAMiiB,GAChBrI,GAAU3Z,IAAMgiB,QACb,GAAsB,WAAlBrI,GAAUhb,IAAkB,CACnC,IAAIqjB,GAAQ7kB,GAASwc,GAAUxc,OAC/Bwc,GAAU5Z,IAAMiiB,GAChBrI,GAAU3Z,IAAMgiB,QAEhBrI,GAAU5Z,IAAM7C,GAAQyc,GAAUzc,MAClCyc,GAAU3Z,IAAM7C,GAASwc,GAAUxc,OAI3Cwc,GAAUha,EAAIkiB,GACdlI,GAAU/Z,EAAIkiB,GACdnI,GAAUzc,MAAQA,GAClByc,GAAUxc,OAASA,GACnB2f,GAAWpd,IAAWia,GAE1B1J,GAAOxQ,IAAUqd,IAnDO,MAAA3M,IAAAsR,IAAA,EAAAC,GAAAvR,GAAA,YAAAqR,IAAA,MAAAI,GAAAxR,QAAAwR,GAAAxR,SAAA,WAAAqR,GAAA,MAAAC,IAsD5B,OAAO5X,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEI7H,YAGR,KAAKzW,GACD,IAAI6G,GAAQwT,EAAOxT,MAEf4P,GAAMnG,OAAAwG,EAAA,EAAAxG,CAAA,GAAQgO,EAAM7H,QACpBvQ,GAAUmU,EAAOnU,QAEjB8c,GAAa3I,EAAOpU,OAAS,CAACoU,EAAOpU,QAAUqY,EAAMhL,YAN5BmV,IAAA,EAAAC,IAAA,EAAAC,QAAA3W,EAAA,IAQ7B,QAAA4W,GAAAC,GAAqB7F,GAArB5M,OAAAC,cAAAoS,IAAAG,GAAAC,GAAAzU,QAAAkC,MAAAmS,IAAA,EAAiC,KAAtBxiB,GAAsB2iB,GAAArS,MACzB+M,GAAUhT,OAAAwG,EAAA,EAAAxG,CAAA,GAAQmG,GAAOxQ,KACzBC,MAAWod,KACXA,GAAWpd,IAAXoK,OAAAwG,EAAA,EAAAxG,CAAA,GACOgT,GAAWpd,IADlB,CAEIW,YAGR4P,GAAOxQ,IAAUqd,IAhBQ,MAAA3M,IAAA+R,IAAA,EAAAC,GAAAhS,GAAA,YAAA8R,IAAA,MAAAI,GAAAjS,QAAAiS,GAAAjS,SAAA,WAAA8R,GAAA,MAAAC,IAmB7B,OAAOrY,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEI7H,YAGR,KAAKxW,GACD,IAAIwlB,GAAYnV,OAAAwG,EAAA,EAAAxG,CAAA,GACTgO,EAAMmH,aADG,CAEZ1e,MAAOsT,EAAOtT,QAGlB,GAAIuX,EAAMwE,cAAe,CACrB,IAAI/b,GAAQsT,EAAOtT,MAEf0P,GAAMnG,OAAAwG,EAAA,EAAAxG,CAAA,GAAQgO,EAAM7H,QACpBvQ,GAAUoY,EAAMwE,cACpB,IAAK,IAAM7c,MAAUwQ,GAAQ,CACzB,IAAI6M,GAAUhT,OAAAwG,EAAA,EAAAxG,CAAA,GAAQmG,GAAOxQ,KAC7B,GAAIC,MAAWod,GAAY,CACvB,IAAInD,GAAYmD,GAAWpd,IACJ,SAAnBia,GAAUze,OACV4hB,GAAWpd,IAAXoK,OAAAwG,EAAA,EAAAxG,CAAA,GACO6P,GADP,CAEIpZ,YAIZ0P,GAAOxQ,IAAUqd,GAGrB,OAAOhT,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEI7H,UACAgP,kBAGJ,OAAOnV,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEImH,kBAIZ,KAAKvlB,GACD,IAAIulB,GAAYnV,OAAAwG,EAAA,EAAAxG,CAAA,GACTgO,EAAMmH,aADG,CAEZxe,MAAOoT,EAAOpT,QAGlB,GAAIqX,EAAMwE,cAAe,CACrB,IAAI7b,GAAQoT,EAAOpT,MAEfwP,GAAMnG,OAAAwG,EAAA,EAAAxG,CAAA,GAAQgO,EAAM7H,QACpBvQ,GAAUoY,EAAMwE,cACpB,IAAK,IAAM7c,MAAUwQ,GAAQ,CACzB,IAAI6M,GAAUhT,OAAAwG,EAAA,EAAAxG,CAAA,GAAQmG,GAAOxQ,KAC7B,GAAIC,MAAWod,GAAY,CACvB,IAAInD,GAAYmD,GAAWpd,IACJ,SAAnBia,GAAUze,OACV4hB,GAAWpd,IAAXoK,OAAAwG,EAAA,EAAAxG,CAAA,GACO6P,GADP,CAEIlZ,YAIZwP,GAAOxQ,IAAUqd,GAGrB,OAAOhT,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEI7H,UACAgP,kBAGJ,OAAOnV,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEImH,kBAIZ,KAAKtlB,GACD,IAAIslB,GAAYnV,OAAAwG,EAAA,EAAAxG,CAAA,GACTgO,EAAMmH,aADG,CAEZxe,MAAOoT,EAAOvf,aAGlB,GAAIwjB,EAAMwE,cAAe,CACrB,IAAIhoB,GAAauf,EAAOvf,WAEpB2b,GAAMnG,OAAAwG,EAAA,EAAAxG,CAAA,GAAQgO,EAAM7H,QACpBvQ,GAAUoY,EAAMwE,cACpB,IAAK,IAAM7c,MAAUwQ,GAAQ,CACzB,IAAI6M,GAAUhT,OAAAwG,EAAA,EAAAxG,CAAA,GAAQmG,GAAOxQ,KAC7B,GAAIC,MAAWod,GAAY,CACvB,IAAInD,GAAYmD,GAAWpd,IACJ,SAAnBia,GAAUze,OACV4hB,GAAWpd,IAAXoK,OAAAwG,EAAA,EAAAxG,CAAA,GACO6P,GADP,CAEIrlB,iBAIZ2b,GAAOxQ,IAAUqd,GAGrB,OAAOhT,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEI7H,UACAgP,kBAGJ,OAAOnV,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEImH,kBAIZ,KAAKrlB,GACD,IAAIqlB,GAAYnV,OAAAwG,EAAA,EAAAxG,CAAA,GACTgO,EAAMmH,aADG,CAEZxe,MAAOoT,EAAOtf,cAGlB,GAAIujB,EAAMwE,cAAe,CACrB,IAAI/nB,GAAcsf,EAAOtf,YAErB0b,GAAMnG,OAAAwG,EAAA,EAAAxG,CAAA,GAAQgO,EAAM7H,QACpBvQ,GAAUoY,EAAMwE,cACpB,IAAK,IAAM7c,MAAUwQ,GAAQ,CACzB,IAAI6M,GAAUhT,OAAAwG,EAAA,EAAAxG,CAAA,GAAQmG,GAAOxQ,KAC7B,GAAIC,MAAWod,GAAY,CACvB,IAAInD,GAAYmD,GAAWpd,IACJ,SAAnBia,GAAUze,OACV4hB,GAAWpd,IAAXoK,OAAAwG,EAAA,EAAAxG,CAAA,GACO6P,GADP,CAEIplB,kBAIZ0b,GAAOxQ,IAAUqd,GAGrB,OAAOhT,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEI7H,UACAgP,kBAGJ,OAAOnV,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEImH,kBAIZ,KAAKplB,GACD,IAAIolB,GAAYnV,OAAAwG,EAAA,EAAAxG,CAAA,GACTgO,EAAMmH,aADG,CAEZ3qB,WAAYuf,EAAOvf,WACnBC,YAAasf,EAAOtf,cAGxB,GAAIujB,EAAMwE,cAAe,CACrB,IAAIhoB,GAAauf,EAAOvf,WACpBC,GAAcsf,EAAOtf,YAErB0b,GAAMnG,OAAAwG,EAAA,EAAAxG,CAAA,GAAQgO,EAAM7H,QACpBvQ,GAAUoY,EAAMwE,cACpB,IAAK,IAAM7c,MAAUwQ,GAAQ,CACzB,IAAI6M,GAAUhT,OAAAwG,EAAA,EAAAxG,CAAA,GAAQmG,GAAOxQ,KAC7B,GAAIC,MAAWod,GAAY,CACvB,IAAInD,GAAYmD,GAAWpd,IACJ,SAAnBia,GAAUze,OACV4hB,GAAWpd,IAAXoK,OAAAwG,EAAA,EAAAxG,CAAA,GACO6P,GADP,CAEIrlB,cACAC,kBAIZ0b,GAAOxQ,IAAUqd,GAGrB,OAAOhT,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEI7H,UACAgP,kBAGJ,OAAOnV,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEImH,kBAIZ,KAAKnlB,GACD,IAAImlB,GAAYnV,OAAAwG,EAAA,EAAAxG,CAAA,GACTgO,EAAMmH,aADG,CAEZpe,SAAUgT,EAAOhT,WAGrB,GAAIiX,EAAMwE,cAAe,CACrB,IAAIzb,GAAWgT,EAAOhT,SAElBoP,GAAMnG,OAAAwG,EAAA,EAAAxG,CAAA,GAAQgO,EAAM7H,QACpBvQ,GAAUoY,EAAMwE,cACpB,IAAK,IAAM7c,MAAUwQ,GAAQ,CACzB,IAAI6M,GAAUhT,OAAAwG,EAAA,EAAAxG,CAAA,GAAQmG,GAAOxQ,KAC7B,GAAIC,MAAWod,GAAY,CACvB,IAAInD,GAAYmD,GAAWpd,IACJ,SAAnBia,GAAUze,OACV4hB,GAAWpd,IAAXoK,OAAAwG,EAAA,EAAAxG,CAAA,GACO6P,GADP,CAEI9Y,eAIZoP,GAAOxQ,IAAUqd,GAGrB,OAAOhT,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEI7H,UACAgP,kBAGJ,OAAOnV,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEImH,kBAIZ,KAAKllB,GACD,IAAIklB,GAAYnV,OAAAwG,EAAA,EAAAxG,CAAA,GACTgO,EAAMmH,aADG,CAEZle,WAAY8S,EAAO9S,aAGvB,GAAI+W,EAAMwE,cAAe,CACrB,IAAIvb,GAAa8S,EAAO9S,WAEpBkP,GAAMnG,OAAAwG,EAAA,EAAAxG,CAAA,GAAQgO,EAAM7H,QACpBvQ,GAAUoY,EAAMwE,cACpB,IAAK,IAAM7c,MAAUwQ,GAAQ,CACzB,IAAI6M,GAAUhT,OAAAwG,EAAA,EAAAxG,CAAA,GAAQmG,GAAOxQ,KAC7B,GAAIC,MAAWod,GAAY,CACvB,IAAInD,GAAYmD,GAAWpd,IACJ,SAAnBia,GAAUze,OACV4hB,GAAWpd,IAAXoK,OAAAwG,EAAA,EAAAxG,CAAA,GACO6P,GADP,CAEI5Y,iBAIZkP,GAAOxQ,IAAUqd,GAGrB,OAAOhT,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEI7H,UACAgP,kBAGJ,OAAOnV,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEImH,kBAIZ,KAAKjlB,GACD,IAAI8iB,GAAUhT,OAAAwG,EAAA,EAAAxG,CAAA,GAAQgO,EAAM7H,OAAO4D,EAAOpU,SAEpCka,GAAYmD,GAAWjJ,EAAOnU,SAC9BxB,GAAOyb,GAAUzb,MAAQyb,GAAUve,GAEzC,IAAK,IAAMsE,MAAWod,GAAY,CAC9B,IAAMwF,GAAgBxF,GAAWpd,IAE5B4iB,GAAcpkB,OAASA,IAAQokB,GAAclnB,KAAO8C,IAAgC,SAAvBokB,GAAcpnB,OAC5E4hB,GAAWpd,IAAXoK,OAAAwG,EAAA,EAAAxG,CAAA,GACOwY,GADP,CAEIvS,MAAO8D,EAAO5S,SAAS8O,SAKnC,OAAOjG,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEI7H,OAAOnG,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EAAM7H,OADPnG,OAAA6V,GAAA,EAAA7V,CAAA,GAED+J,EAAOpU,OAASqd,OAI7B,KAAK7iB,GACD,IAAIuiB,GAAa1E,EAAMrW,sBAAqC+J,IAAlBqI,EAAOpU,OAAuBqY,EAAMhL,YAAc,CAAC+G,EAAOpU,QAEhGwQ,GAAMnG,OAAAwG,EAAA,EAAAxG,CAAA,GAAQgO,EAAM7H,QAHDsS,IAAA,EAAAC,IAAA,EAAAC,QAAAjX,EAAA,IAKvB,QAAAkX,GAAAC,GAAqBnG,GAArB5M,OAAAC,cAAA0S,IAAAG,GAAAC,GAAA/U,QAAAkC,MAAAyS,IAAA,EAAiC,KAAtB9iB,GAAsBijB,GAAA3S,MACzB+M,GAAUhT,OAAAwG,EAAA,EAAAxG,CAAA,GAAQgO,EAAM7H,OAAOxQ,KAE7Bka,GAAYmD,GAAWjJ,EAAOnU,SAC9BxB,GAAOyb,GAAUzb,MAAQyb,GAAUve,GAEzC,IAAK,IAAMsE,MAAWod,GAAY,CAC9B,IAAMwF,GAAgBxF,GAAWpd,IAE5B4iB,GAAcpkB,OAASA,IAAQokB,GAAclnB,KAAO8C,IAAgC,UAAvBokB,GAAcpnB,OAC5E4hB,GAAWpd,IAAXoK,OAAAwG,EAAA,EAAAxG,CAAA,GACOwY,GADP,CAEIhe,IAAK,QAASuP,EAAO1S,UAAY0S,EAAO1S,UAAUmD,IAAMge,GAAche,IACtEjD,OAAQ,WAAYwS,EAAO1S,UAAY0S,EAAO1S,UAAUE,OAASihB,GAAcjhB,OAC/EZ,MAAO,UAAWoT,EAAO1S,UAAY0S,EAAO1S,UAAUV,MAAQ6hB,GAAc7hB,MAC5E0G,WAAY,UAAW0M,EAAO1S,UAAY0S,EAAO1S,UAAUjE,MAAQolB,GAAcnb,WACjFC,YACI,WAAYyM,EAAO1S,UAAY0S,EAAO1S,UAAUhE,OAASmlB,GAAclb,YAC3ErH,GAAI,EACJC,GAAI,EACJE,KAAM,KAKlB+P,GAAOxQ,IAAUqd,IA9BE,MAAA3M,IAAAqS,IAAA,EAAAC,GAAAtS,GAAA,YAAAoS,IAAA,MAAAI,GAAAvS,QAAAuS,GAAAvS,SAAA,WAAAoS,GAAA,MAAAC,IAiCvB,OAAO3Y,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEI7H,YAGR,KAAK/V,GACD,IAAI4iB,GAAUhT,OAAAwG,EAAA,EAAAxG,CAAA,GAAQgO,EAAM7H,OAAO4D,EAAOpU,SAEpCka,GAAYmD,GAAWjJ,EAAOnU,SAC9BxB,GAAOyb,GAAUzb,MAAQyb,GAAUve,GAEzC,IAAK,IAAMsE,MAAWod,GAAY,CAC9B,IAAMwF,GAAgBxF,GAAWpd,IAE5B4iB,GAAcpkB,OAASA,IAAQokB,GAAclnB,KAAO8C,IAAgC,UAAvBokB,GAAcpnB,OAC5E4hB,GAAWpd,IAAXoK,OAAAwG,EAAA,EAAAxG,CAAA,GACOwY,GADP,CAEIjhB,OAAQwS,EAAOxS,OACftB,GAAI,EACJC,GAAI,EACJE,KAAM,KAKlB,OAAO4J,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEI7H,OAAOnG,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EAAM7H,OADPnG,OAAA6V,GAAA,EAAA7V,CAAA,GAED+J,EAAOpU,OAASqd,OAI7B,KAAK3iB,GACD,IAAI8kB,GAAYnV,OAAAwG,EAAA,EAAAxG,CAAA,GAAQgO,EAAMmH,cAC1BC,GAAgBpH,EAAMoH,cAM1B,GAJIA,KAAkBhqB,EAAa0tB,mBAAkCpX,IAAlBqI,EAAOpU,SACtDyf,GAAgBhqB,EAAa2tB,cAGXrX,IAAlBqI,EAAOpU,aAA2C+L,IAAnBqI,EAAOnU,QAAuB,CAC7D,IAAMia,GAAY7B,EAAM7H,OAAO4D,EAAOpU,QAAQoU,EAAOnU,SAE9B,SAAnBia,GAAUze,MACV+jB,GAAa1e,MAAQoZ,GAAUpZ,MAC/B0e,GAAaxe,MAAQkZ,GAAUlZ,MAC/Bwe,GAAa3qB,WAAaqlB,GAAUrlB,WACpC2qB,GAAa1qB,YAAcolB,GAAUplB,YACrC0qB,GAAape,SAAW8Y,GAAU9Y,SAClCoe,GAAale,WAAa4Y,GAAU5Y,WAEhCme,KAAkBhqB,EAAa0tB,eAC/B1D,GAAgBhqB,EAAa4tB,OAG7B5D,KAAkBhqB,EAAa0tB,eAC/B1D,GAAgBhqB,EAAaiT,OAKzC,OAAO2B,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEIkH,aAAcnL,EAAOpU,OACrB8B,aAAcsS,EAAOtS,aACrB+a,cAAezI,EAAOnU,QACtBuf,gBACAC,mBAIR,KAAK9kB,GACD,OAAO0P,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEIrW,gBAAiBoS,EAAOpS,kBAIhC,KAAKnH,GACD,OAAOwP,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEIoH,cAAerL,EAAOlS,eAG9B,KAAKpH,GACD,OAAOuP,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEI5X,KAAM2T,EAAO3T,OAGrB,KAAKxI,GACD,OAAOoS,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EACAjE,EAAOrW,MAGlB,QACI,OAAOsa,IAmBuB,CACtCiL,oBAAoB,EACpBC,SAAUpoB,GACVqoB,SAAUpoB,GACVqoB,QAAS,SAACrP,GACN,MACoB,8BAAhBA,EAAO3Y,MACS,kCAAhB2Y,EAAO3Y,MACS,+BAAhB2Y,EAAO3Y,MACS,8BAAhB2Y,EAAO3Y,MACS,6BAAhB2Y,EAAO3Y,KAEA2Y,EAAOhU,MAEX,MAEX4C,OAAQ,SAACoR,GACL,QAAKA,EAAO3Y,KAAKioB,WAAW,cAIxBtP,EAAO3Y,OAASrD,IAA0Bgc,EAAO3Y,OAASf,OAiBvDipB,GAVEC,YAAgB,CAC7BhoB,QAvzCG,WAAiG,IAAhFyc,EAAgFtJ,UAAA1D,OAAA,QAAAU,IAAAgD,UAAA,GAAAA,UAAA,GAA1D6P,GAAqBxK,EAAqCrF,UAAA1D,OAAA,EAAA0D,UAAA,QAAAhD,EACpG,OAAQqI,EAAO3Y,MACX,KAAK1F,EAED,OADcsiB,EAAMwG,SAASgF,KAAK,SAAAC,GAAC,OAAIA,EAAEnoB,KAAOyY,EAAOxY,QAAQD,KAC7C0c,EAEXhO,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEIwG,SAAUxG,EAAMwG,SAASza,OAAOgQ,EAAOxY,WAE/C,KAAK5F,EACD,OAAOqU,OAAO4V,OAAO,GAAI5H,EAAO,CAC5BwG,SAAUxG,EAAMwG,SAAS7b,OAAO,SAAA8gB,GAAC,OAAIA,EAAEnoB,KAAOyY,EAAOF,cAE7D,QACI,OAAOmE,IAyyCf0L,KAryCG,WAAmF,IAArE1L,EAAqEtJ,UAAA1D,OAAA,QAAAU,IAAAgD,UAAA,GAAAA,UAAA,GAAlD+P,GAAkB1K,EAAgCrF,UAAA1D,OAAA,EAAA0D,UAAA,QAAAhD,EACtF,OAAQqI,EAAO3Y,MACX,KAAKxF,EACD,OAAOoU,OAAO4V,OAAO,GAAI5H,EAAO,CAC5B0G,iBAAiB,EACjBC,KAAM5K,EAAO3Q,MAAMugB,WAE3B,KAAK9tB,EACD,OAAOmU,OAAO4V,OAAO,GAAI5H,EAAO,CAC5B0G,iBAAiB,IAEzB,KAAK5oB,EAIL,KAAKG,EACD,OAAO+T,OAAO4V,OAAO,GAAI5H,EAAO,CAC5B0G,iBAAiB,IAEzB,QACI,OAAO1G,IAkxCf4L,OA9wCG,WAA4F,IAA5E5L,EAA4EtJ,UAAA1D,OAAA,QAAAU,IAAAgD,UAAA,GAAAA,UAAA,GAAvDkQ,GACxC,QAD+FlQ,UAAA1D,OAAA,EAAA0D,UAAA,QAAAhD,GAChFtQ,MACX,KAAKlF,EACD,OAAO8T,OAAO4V,OAAO,GAAI5H,EAAO,CAC5B6G,WAAW,IAEnB,KAAK1oB,EAIL,KAAKC,EACD,OAAO4T,OAAO4V,OAAO,GAAI5H,EAAO,CAC5B6G,WAAW,IAEnB,QACI,OAAO7G,IAgwCfjB,MA5vCG,WAAmF,IAApEiB,EAAoEtJ,UAAA1D,OAAA,QAAAU,IAAAgD,UAAA,GAAAA,UAAA,GAAjDoQ,GAAkB/K,EAA+BrF,UAAA1D,OAAA,EAAA0D,UAAA,QAAAhD,EACtF,OAAQqI,EAAO3Y,MACX,KAAK5E,EACD,IAAMmnB,EAAO3F,EAAMnB,KAAK9C,EAAOlY,QAE/B,OAAOmO,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEInB,KAAK7M,OAAAwG,EAAA,EAAAxG,CAAA,GACEgO,EAAMnB,KADT7M,OAAA6V,GAAA,EAAA7V,CAAA,GAEC2T,EAAKriB,GAFN0O,OAAAwG,EAAA,EAAAxG,CAAA,GAGO2T,EAHP,CAIIvf,KAAM2V,EAAOhY,cAI7B,KAAKtF,EACD,OAAOuT,OAAO4V,OAAO,GAAI5H,EAAO,CAC5BnB,KAAM9C,EAAO8C,KACbD,OAAQ7C,EAAO6C,SAEvB,KAAKhgB,EACD,OAAOoT,OAAO4V,OAAO,GAAI5H,EAAO,CAC5B+G,SAAU,EACVlI,KAAM,GACND,OAAQ,KAEhB,KAAK/f,EACD,OAAOmT,OAAO4V,OAAO,GAAI5H,EAAO,CAC5B+G,SAAUX,KAElB,KAAKtnB,EACD,OAAOkT,OAAO4V,OAAO,GAAI5H,EAAO,CAC5B+G,SAAU/G,EAAM+G,UAAYX,GAC5B3N,OAAQsD,EAAOzY,KAEvB,KAAKvE,EACD,OAAOiT,OAAO4V,OAAO,GAAI5H,EAAO,CAC5B+G,SAAU/G,EAAM+G,UAAYX,KAEpC,KAAKpnB,EACD,OAAOgT,OAAO4V,OAAO,GAAI5H,EAAO,CAC5B+G,SAAU/G,EAAM+G,SAAWV,KAEnC,KAAKpnB,EAIL,KAAKC,EACD,OAAO8S,OAAO4V,OAAO,GAAI5H,EAAO,CAC5B+G,SAAU/G,EAAM+G,UAAYV,KAEpC,KAAKlnB,EACD,OAAO6S,OAAO4V,OAAO,GAAI5H,EAAO,CAC5B+G,SAAU/G,EAAM+G,SAAWT,KAEnC,KAAKlnB,GAIL,KAAKC,GACD,OAAO2S,OAAO4V,OAAO,GAAI5H,EAAO,CAC5B+G,SAAU/G,EAAM+G,UAAYT,KAEpC,QACI,OAAOtG,IA6rCfljB,SAzrCG,WAAsG,IAApFkjB,EAAoFtJ,UAAA1D,OAAA,QAAAU,IAAAgD,UAAA,GAAAA,UAAA,GAA7DsQ,GAAsBjL,EAAuCrF,UAAA1D,OAAA,EAAA0D,UAAA,QAAAhD,EACzG,OAAQqI,EAAO3Y,MACX,KAAK9D,GACD,OAAO0S,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEIvH,OAAQsD,EAAOzY,GACfub,KAAM7M,OAAO4V,OAAO,GAAI5H,EAAMnB,KAAxB7M,OAAA6V,GAAA,EAAA7V,CAAA,GACD+J,EAAOzY,GAAK,CACTA,GAAIyY,EAAOzY,GACX8C,KAAM2V,EAAO3V,UAI7B,KAAKzG,GACD,IAAM2kB,EAAUtE,EAAMnB,KAAK9C,EAAOxW,WAElC,OAAOyM,OAAAwG,EAAA,EAAAxG,CAAA,GACAgO,EADP,CAEInB,KAAK7M,OAAAwG,EAAA,EAAAxG,CAAA,GACEgO,EAAMnB,KADT7M,OAAA6V,GAAA,EAAA7V,CAAA,GAECsS,EAAQhhB,GAFT0O,OAAAwG,EAAA,EAAAxG,CAAA,GAGOsS,EAHP,CAIIle,KAAM2V,EAAOhY,cAI7B,KAAKlE,GACD,OAAOmS,OAAO4V,OAAO,GAAI5H,EAAO,CAC5BnB,KAAM9C,EAAO8C,KACbD,OAAQ7C,EAAO6C,SAEvB,KAAK9e,GACD,OAAOkS,OAAO4V,OAAO,GAAI5H,EAAO,CAC5BnB,KAAM,GACND,OAAQ,KAEhB,QACI,OAAOoB,IAqpCfsE,QAASoD,GACTtrB,OAlDG,WAA4F,IAA5E4jB,EAA4EtJ,UAAA1D,OAAA,QAAAU,IAAAgD,UAAA,GAAAA,UAAA,GAAxD2Q,GAAmBtL,EAAqCrF,UAAA1D,OAAA,EAAA0D,UAAA,QAAAhD,EAC/F,OAAQqI,EAAO3Y,MACX,KAAKJ,GACD,OAAOgP,OAAO4V,OAAO,GAAI5H,EAAO,CAC5BrV,OAAQoR,EAAOpR,SAEvB,KAAK1H,GACD,OAAO+O,OAAO4V,OAAO,GAAI5H,EAAO,CAC5B5jB,OAAQ2f,EAAO3f,SAEvB,QACI,OAAO4jB,UCnhDP6L,6ECDSC,yLAEb,OACIC,EAAAtd,EAAAf,cAAA,WACIqe,EAAAtd,EAAAf,cAAA,mBACAqe,EAAAtd,EAAAf,cAAA,sUAIiBqe,EAAAtd,EAAAf,cAAA,KAAGG,KAAK,yBAAR,kBAJjB,KAMAke,EAAAtd,EAAAf,cAAA,qBARJ,0FAUIqe,EAAAtd,EAAAf,cAAA,UACIqe,EAAAtd,EAAAf,cAAA,UACIqe,EAAAtd,EAAAf,cAAA,KAAGG,KAAK,wBAAR,SADJ,qCAGAke,EAAAtd,EAAAf,cAAA,UACIqe,EAAAtd,EAAAf,cAAA,KAAGG,KAAK,6BAAR,iBAEJke,EAAAtd,EAAAf,cAAA,UACIqe,EAAAtd,EAAAf,cAAA,KAAGG,KAAK,uCAAR,eAEJke,EAAAtd,EAAAf,cAAA,UACIqe,EAAAtd,EAAAf,cAAA,KAAGG,KAAK,sBAAR,YAGRke,EAAAtd,EAAAf,cAAA,uCA3BuBse,2HCuDjCC,eAQF,SAAAA,EAAYC,GAAc,IAAApa,EAAA,OAAAE,OAAAC,GAAA,EAAAD,CAAAD,KAAAka,IACtBna,EAAAE,OAAAma,GAAA,EAAAna,CAAAD,KAAAC,OAAAoa,GAAA,EAAApa,CAAAia,GAAA3Q,KAAAvJ,KAAMma,KARVG,UAO0B,EAAAva,EAN1Bwa,YAM0B,EAAAxa,EAL1Bya,aAK0B,EAAAza,EAJ1B0a,eAI0B,EAAA1a,EAH1B2a,eAG0B,EAAA3a,EAF1B4a,wBAE0B,EAAA5a,EAsC1B6a,uBAAyB,SAAC5c,GACtBA,EAAM6c,kBACN7c,EAAMsV,kBAxCgBvT,EA6C1B+a,gBAAkB,SAAC9c,GACf+B,EAAKgb,gBAAgB/c,GAErBtC,SAASqC,iBAAiB,YAAagC,EAAKib,iBAC5Ctf,SAASqC,iBAAiB,UAAWgC,EAAKkb,gBAjDpBlb,EAoD1Bmb,iBAAmB,SAACld,GACZA,EAAMmd,QAAQla,OAAS,IAI3BlB,EAAKgb,gBAAgB/c,EAAMod,eAAe,IAE1C1f,SAASqC,iBAAiB,YAAagC,EAAKsb,gBAAiB,CAAEC,SAAS,IACxE5f,SAASqC,iBAAiB,WAAYgC,EAAKwb,eAAgB,CAAED,SAAS,MA5DhDvb,EA+D1Bgb,gBAAkB,SAACS,GACW,OAAtBzb,EAAKua,KAAKmB,UAEd1b,EAAKua,KAAKmB,QAAQ7f,MAAM8f,OAAS,WAEjC3b,EAAK4b,SAAS,CAAEC,OAAQJ,EAAGK,QAASC,OAAQN,EAAGO,QAAS/lB,MAAOvE,IAAQC,eApEjDqO,EAuE1Bib,gBAAkB,SAAChd,GACf+B,EAAKic,eAAehe,EAAOA,EAAMie,UAxEXlc,EA2E1Bsb,gBAAkB,SAACrd,GACXA,EAAMmd,QAAQla,OAAS,IAI3BjD,EAAMsV,iBACNvT,EAAKic,eAAehe,EAAMod,eAAe,GAAIpd,EAAMie,WAjF7Blc,EAoF1Bic,eAAiB,SAACR,EAAwBU,GAA6B,IAAAC,EACxCpc,EAAKoa,MAAxBiC,EAD2DD,EAC3DC,SAAUtmB,EADiDqmB,EACjDrmB,EAAGC,EAD8ComB,EAC9CpmB,EAErB,IAAIqmB,EAAJ,CAHmE,IAAAC,EAKhCtc,EAAKoa,MAAhCmC,EAL2DD,EAK3DC,KAAM5mB,EALqD2mB,EAKrD3mB,iBAEVsiB,EAAKliB,EAAI0lB,EAAGK,QAAU9b,EAAKkO,MAAM2N,OACjC3D,EAAKliB,EAAIylB,EAAGO,QAAUhc,EAAKkO,MAAM6N,OAEhCI,GAAwC,IAArBxmB,IACpBsiB,EAAKpb,KAAK+D,MAAMqX,EAAKsE,EAAO5mB,GAAoBA,EAAmB4mB,EACnErE,EAAKrb,KAAK+D,MAAMsX,EAAKqE,EAAO5mB,GAAoBA,EAAmB4mB,GAGvEvc,EAAK4b,SAAS,CAAEC,OAAQJ,EAAGK,QAASC,OAAQN,EAAGO,UAC/Chc,EAAKoa,MAAMoC,OAAOvE,EAAIC,GAAI,EAAMlY,EAAKkO,MAAMjY,SApGrB+J,EAuG1Bkb,cAAgB,SAACjd,GACb+B,EAAKyc,eAAexe,GAAO,GAE3BtC,SAAS+X,oBAAoB,YAAa1T,EAAKib,iBAC/Ctf,SAAS+X,oBAAoB,UAAW1T,EAAKkb,gBA3GvBlb,EA8G1Bwb,eAAiB,SAACvd,GACVA,EAAMmd,QAAQla,OAAS,IAI3BlB,EAAKyc,eAAexe,GAAO,GAE3BtC,SAAS+X,oBAAoB,YAAa1T,EAAKsb,iBAC/C3f,SAAS+X,oBAAoB,WAAY1T,EAAKwb,kBAtHxBxb,EAyH1Byc,eAAiB,SAACxe,EAAgCye,GAA0B,IAAAC,EAC7C3c,EAAKoa,MAAxBiC,EADgEM,EAChEN,SAAUtmB,EADsD4mB,EACtD5mB,EAAGC,EADmD2mB,EACnD3mB,EAEK,OAAtBgK,EAAKua,KAAKmB,UAETW,GACDrc,EAAKoa,MAAMoC,OAAOzmB,EAAGC,GAAG,EAAOgK,EAAKkO,MAAMjY,OAE9C+J,EAAK4b,SAAS,CAAEgB,oBAAqBF,IAErC1c,EAAKua,KAAKmB,QAAQ7f,MAAM8f,OAAS,SAnIX3b,EAwI1B6c,mBAAqB,SAAC5e,GAClB+B,EAAK8c,eAAe7e,GAEpBtC,SAASqC,iBAAiB,YAAagC,EAAK+c,oBAC5CphB,SAASqC,iBAAiB,UAAWgC,EAAKgd,kBAC1C/e,EAAM6c,mBA7IgB9a,EAgJ1Bid,oBAAsB,SAAChf,GACfA,EAAMmd,QAAQla,OAAS,IAI3BlB,EAAK8c,eAAe7e,EAAMod,eAAe,IAEzC1f,SAASqC,iBAAiB,YAAagC,EAAKkd,mBAAoB,CAAE3B,SAAS,IAC3E5f,SAASqC,iBAAiB,WAAYgC,EAAKmd,kBAAmB,CAAE5B,SAAS,IACzEtd,EAAM6c,kBACN7c,EAAMsV,mBA1JgBvT,EA6J1B8c,eAAiB,SAACrB,GACd9f,SAASO,KAAKL,MAAM8f,OAApB,OAAA1hB,OAAoCmjB,KAApC,WAEApd,EAAK4b,SAAS,CAAEC,OAAQJ,EAAGK,QAASC,OAAQN,EAAGO,QAAS/lB,MAAOvE,IAAQC,cAhKjDqO,EAmK1B+c,mBAAqB,SAAC9e,GAClB+B,EAAKqd,cAAcpf,GACnBA,EAAMsV,kBArKgBvT,EAwK1Bkd,mBAAqB,SAACjf,GACdA,EAAMmd,QAAQla,OAAS,IAI3BlB,EAAKqd,cAAcpf,EAAMod,eAAe,IACxCpd,EAAMsV,mBA9KgBvT,EAiL1Bqd,cAAgB,SAAC5B,GAA2B,IAAA6B,EACPtd,EAAKoa,MAA9BjkB,EADgCmnB,EAChCnnB,GAAIC,EAD4BknB,EAC5BlnB,GAAIK,EADwB6mB,EACxB7mB,MAAO8mB,EADiBD,EACjBC,MACvB,GAAKA,QAAgB3b,IAAPzL,QAA2ByL,IAAPxL,EAAlC,CAEA,IAJwC+hB,EAMrBzb,GAFV+e,EAAGK,QAAU9b,EAAKkO,MAAM2N,OACxBJ,EAAGO,QAAUhc,EAAKkO,MAAM6N,QACKtlB,GAEhC+mB,EAAQrnB,EAR0BgiB,EAMhClb,GAGFwgB,EAAQrnB,EAT0B+hB,EAM5Bjb,GAKZ8C,EAAK4b,SAAS,CAAEC,OAAQJ,EAAGK,QAASC,OAAQN,EAAGO,UAE/CuB,EAAMC,EAAOC,GAAO,EAAMzd,EAAKkO,MAAMjY,SA9Lf+J,EAiM1Bgd,iBAAmB,SAAC/e,GAChB+B,EAAK0d,kBAAkBzf,GAEvBtC,SAAS+X,oBAAoB,YAAa1T,EAAK+c,oBAC/CphB,SAAS+X,oBAAoB,UAAW1T,EAAKgd,mBArMvBhd,EAwM1Bmd,kBAAoB,SAAClf,GACbA,EAAMmd,QAAQla,OAAS,IAI3BlB,EAAK0d,kBAAkBzf,GAEvBtC,SAAS+X,oBAAoB,YAAa1T,EAAKkd,oBAC/CvhB,SAAS+X,oBAAoB,WAAY1T,EAAKmd,qBAhNxBnd,EAmN1B0d,kBAAoB,SAACzf,GAAmC,IAAA0f,EAC1B3d,EAAKoa,MAAvBjkB,EAD4CwnB,EAC5CxnB,GAAIC,EADwCunB,EACxCvnB,GAAImnB,EADoCI,EACpCJ,MACZA,QAAgB3b,IAAPzL,QAA2ByL,IAAPxL,GAC7BmnB,EAAMpnB,EAAIC,GAAI,EAAM4J,EAAKkO,MAAMjY,OAGnC0F,SAASO,KAAKL,MAAM8f,OAAS3b,EAAK4a,mBAClC3c,EAAMsV,kBA1NgBvT,EA+N1B4d,oBAAsB,SAAC3f,GACnB+B,EAAK6d,gBAAgB5f,GAErBtC,SAASqC,iBAAiB,YAAagC,EAAK8d,qBAC5CniB,SAASqC,iBAAiB,UAAWgC,EAAK+d,mBAC1C9f,EAAM6c,mBApOgB9a,EAuO1Bge,qBAAuB,SAAC/f,GAChBA,EAAMmd,QAAQla,OAAS,IAI3BlB,EAAK6d,gBAAgB5f,EAAMod,eAAe,IAE1C1f,SAASqC,iBAAiB,YAAagC,EAAKie,oBAAqB,CAAE1C,SAAS,IAC5E5f,SAASqC,iBAAiB,WAAYgC,EAAKke,mBAAoB,CAAE3C,SAAS,IAC1Etd,EAAM6c,kBACN7c,EAAMsV,mBAjPgBvT,EAoP1B6d,gBAAkB,SAACpC,GACf9f,SAASO,KAAKL,MAAM8f,OAApB,OAAA1hB,OAAoCkkB,KAApC,WAEAne,EAAK4b,SAAS,CAAEC,OAAQJ,EAAGK,QAASC,OAAQN,EAAGO,QAAS/lB,MAAOvE,IAAQC,cAvPjDqO,EA0P1B8d,oBAAsB,SAAC7f,GACnB+B,EAAKoe,eAAengB,GACpBA,EAAMsV,kBA5PgBvT,EA+P1Bie,oBAAsB,SAAChgB,GACfA,EAAMmd,QAAQla,OAAS,IAI3BlB,EAAKoe,eAAengB,EAAMod,eAAe,IACzCpd,EAAMsV,mBArQgBvT,EAwQ1Boe,eAAiB,SAAC3C,GAA2B,IAAA4C,EAChBre,EAAKoa,MAAtB9jB,EADiC+nB,EACjC/nB,KAAMgoB,EAD2BD,EAC3BC,OACd,GAAKA,QAAmB1c,IAATtL,EAAf,CAEA,IAAMioB,EAAK9C,EAAGK,QAAU9b,EAAKkO,MAAM2N,OAC7B2C,EAAK/C,EAAGO,QAAUhc,EAAKkO,MAAM6N,OAE/B0C,EAAI5hB,KAAK6hB,IAAIH,GAAM1hB,KAAK6hB,IAAIF,GAAMD,EAAKC,EAEvCG,EAAU9hB,KAAKwa,IAAI/gB,EAAOmoB,EAAI,GAAI,GACtCze,EAAK4b,SAAS,CAAEC,OAAQJ,EAAGK,QAASC,OAAQN,EAAGO,UAE/CsC,EAAOK,GAAS,EAAM3e,EAAKkO,MAAMjY,SApRX+J,EAuR1B+d,kBAAoB,SAAC9f,GACjB+B,EAAK4e,mBAAmB3gB,GAExBtC,SAAS+X,oBAAoB,YAAa1T,EAAK8d,qBAC/CniB,SAAS+X,oBAAoB,UAAW1T,EAAK+d,oBA3RvB/d,EA8R1Bke,mBAAqB,SAACjgB,GACdA,EAAMmd,QAAQla,OAAS,IAI3BlB,EAAK4e,mBAAmB3gB,GAExBtC,SAAS+X,oBAAoB,YAAa1T,EAAKie,qBAC/CtiB,SAAS+X,oBAAoB,WAAY1T,EAAKke,sBAtSxBle,EAyS1B4e,mBAAqB,SAAC3gB,GAClBtC,SAASO,KAAKL,MAAM8f,OAAS3b,EAAK4a,mBAClC3c,EAAMsV,kBA3SgBvT,EAgT1B6e,sBAAwB,SAAC5gB,GACrB+B,EAAK8e,kBAAkB7gB,GAEvBtC,SAASqC,iBAAiB,YAAagC,EAAK+e,uBAC5CpjB,SAASqC,iBAAiB,UAAWgC,EAAKgf,qBAC1C/gB,EAAM6c,mBArTgB9a,EAwT1Bif,uBAAyB,SAAChhB,GAClBA,EAAMmd,QAAQla,OAAS,IAI3BlB,EAAK8e,kBAAkB7gB,EAAMod,eAAe,IAE5C1f,SAASqC,iBAAiB,YAAagC,EAAKkf,sBAAuB,CAAE3D,SAAS,IAC9E5f,SAASqC,iBAAiB,WAAYgC,EAAKmf,qBAAsB,CAAE5D,SAAS,IAC5Etd,EAAM6c,kBACN7c,EAAMsV,mBAlUgBvT,EAqU1B8e,kBAAoB,SAACrD,GACIzb,EAAKoa,MAAlBiC,WAIR1gB,SAASO,KAAKL,MAAM8f,OAApB,OAAA1hB,OAAoCmlB,KAApC,WAEApf,EAAK4b,SAAS,CAAEC,OAAQJ,EAAGK,QAASC,OAAQN,EAAGO,QAAS/lB,MAAOvE,IAAQC,eA5UjDqO,EA+U1B+e,sBAAwB,SAAC9gB,GACrB+B,EAAKqf,iBAAiBphB,EAAOA,EAAMie,SACnCje,EAAMsV,kBAjVgBvT,EAoV1Bkf,sBAAwB,SAACjhB,GACjBA,EAAMmd,QAAQla,OAAS,IAI3BlB,EAAKqf,iBAAiBphB,EAAMod,eAAe,GAAIpd,EAAMie,SACrDje,EAAMsV,mBA1VgBvT,EA6V1Bqf,iBAAmB,SAAC5D,EAA0CU,GAA6B,IAAAmD,EACVtf,EAAKoa,MAA1EiC,EAD+EiD,EAC/EjD,SAAUE,EADqE+C,EACrE/C,KAAMjpB,EAD+DgsB,EAC/DhsB,MAAOC,EADwD+rB,EACxD/rB,OAAQkD,EADgD6oB,EAChD7oB,MAAOd,EADyC2pB,EACzC3pB,iBAAkB4pB,EADuBD,EACvBC,SAEhE,IAAIlD,EAAJ,CAEA,IALuFmD,EAQpE9iB,GAHR+e,EAAGK,QAAU9b,EAAKkO,MAAM2N,OACxBJ,EAAGO,QAAUhc,EAAKkO,MAAM6N,QAEGtlB,GAElCgpB,EAAWnsB,EAVwEksB,EAQ/EviB,GAGJyiB,EAAYnsB,EAXuEisB,EAQ3EtiB,GAKPif,GAAwC,IAArBxmB,IACpB8pB,EAAW5iB,KAAK+D,MAAM6e,EAAWlD,EAAO5mB,GAAoBA,EAAmB4mB,EAC/EmD,EAAY7iB,KAAK+D,MAAM8e,EAAYnD,EAAO5mB,GAAoBA,EAAmB4mB,GAGrFvc,EAAK4b,SAAS,CAAEC,OAAQJ,EAAGK,QAASC,OAAQN,EAAGO,UAE/CuD,EAASE,EAAUC,GAAW,EAAM1f,EAAKkO,MAAMjY,SAjXzB+J,EAoX1Bgf,oBAAsB,SAAC/gB,GACnB+B,EAAK2f,qBAAqB1hB,GAE1BtC,SAAS+X,oBAAoB,YAAa1T,EAAK+e,uBAC/CpjB,SAAS+X,oBAAoB,UAAW1T,EAAKgf,sBAxXvBhf,EA2X1Bmf,qBAAuB,SAAClhB,GAChBA,EAAMmd,QAAQla,OAAS,IAI3BlB,EAAK2f,qBAAqB1hB,GAE1BtC,SAAS+X,oBAAoB,YAAa1T,EAAKkf,uBAC/CvjB,SAAS+X,oBAAoB,WAAY1T,EAAKmf,wBAnYxBnf,EAsY1B2f,qBAAuB,SAAC1hB,GAGpB,IAFqB+B,EAAKoa,MAAlBiC,SAEO,KAAAuD,EACyB5f,EAAKoa,MAAjC9mB,EADGssB,EACHtsB,MAAOC,EADJqsB,EACIrsB,QACfgsB,EAFWK,EACYL,UACdjsB,EAAOC,GAAQ,EAAOyM,EAAKkO,MAAMjY,OAG9C0F,SAASO,KAAKL,MAAM8f,OAAS3b,EAAK4a,mBAElC3c,EAAMsV,kBAhZgBvT,EAqZ1B6f,sBAAwB,SAAC5hB,GACrB+B,EAAK8f,kBAAkB7hB,GAEvBtC,SAASqC,iBAAiB,YAAagC,EAAK+f,uBAC5CpkB,SAASqC,iBAAiB,UAAWgC,EAAKggB,qBAC1C/hB,EAAM6c,mBA1ZgB9a,EA6Z1BigB,uBAAyB,SAAChiB,GAClBA,EAAMmd,QAAQla,OAAS,IAI3BlB,EAAK8f,kBAAkB7hB,EAAMod,eAAe,IAE5C1f,SAASqC,iBAAiB,YAAagC,EAAKkgB,sBAAuB,CAAE3E,SAAS,IAC9E5f,SAASqC,iBAAiB,WAAYgC,EAAKmgB,qBAAsB,CAAE5E,SAAS,IAC5Etd,EAAM6c,kBACN7c,EAAMsV,mBAvagBvT,EA0a1B8f,kBAAoB,SAACrE,GAA6C,IAAA2E,EAClCpgB,EAAKoa,MAAzBiC,EADsD+D,EACtD/D,SAAU5lB,EAD4C2pB,EAC5C3pB,MAElB,IAAI4lB,GAAkC,OAAtBrc,EAAKua,KAAKmB,QAA1B,CAEA/f,SAASO,KAAKL,MAAM8f,OAApB,OAAA1hB,OAAoComB,KAApC,WAEA,IAAMjhB,EAAOY,EAAKua,KAAKmB,QAAQ4E,wBAC3BzE,EAASzc,EAAKmhB,KAAOvgB,EAAKua,KAAKmB,QAAQ8E,YAAc,EACrDzE,EAAS3c,EAAKqhB,IAAMzgB,EAAKua,KAAKmB,QAAQgF,aAAe,EAErDC,EAAgBlqB,EAAQoG,KAAK+jB,MAAM/E,EAASJ,EAAGK,QAASC,EAASN,EAAGO,SAExEhc,EAAK4b,SAAS,CAAEC,SAAQE,SAAQ4E,gBAAe1qB,MAAOvE,IAAQC,eAvbxCqO,EA0b1B+f,sBAAwB,SAAC9hB,GACrB+B,EAAK6gB,iBAAiB5iB,EAAOA,EAAMie,SACnCje,EAAMsV,kBA5bgBvT,EA+b1BkgB,sBAAwB,SAACjiB,GACjBA,EAAMmd,QAAQla,OAAS,IAI3BlB,EAAK6gB,iBAAiB5iB,EAAMod,eAAe,GAAIpd,EAAMie,SACrDje,EAAMsV,mBArcgBvT,EAwc1B6gB,iBAAmB,SAACpF,EAAwBU,GAA6B,IAAA2E,EACtC9gB,EAAKoa,MAA5BiC,EAD6DyE,EAC7DzE,SAAU0E,EADmDD,EACnDC,SAElB,IAAI1E,EAAJ,CAHqE,IAAA2E,EAK3BhhB,EAAKkO,MAAvCyS,EAL6DK,EAK7DL,cAAe9E,EAL8CmF,EAK9CnF,OAAQE,EALsCiF,EAKtCjF,OAG3BkF,EAAWN,EADA9jB,KAAK+jB,MAAM/E,EAASJ,EAAGK,QAASC,EAASN,EAAGO,SAGtDG,IACD8E,EAA4D,EAA/CpkB,KAAK+D,MAAQqgB,EAAWpkB,KAAKqkB,GAAM,IAAO,GAAU,IAAOrkB,KAAKqkB,IAGjFH,EAASE,GAAU,EAAMjhB,EAAKkO,MAAMjY,SAtdd+J,EAyd1BggB,oBAAsB,SAAC/hB,GACnB+B,EAAKmhB,qBAAqBljB,GAE1BtC,SAAS+X,oBAAoB,YAAa1T,EAAK+f,uBAC/CpkB,SAAS+X,oBAAoB,UAAW1T,EAAKggB,sBA7dvBhgB,EAge1BmgB,qBAAuB,SAACliB,GAChBA,EAAMmd,QAAQla,OAAS,IAI3BlB,EAAKmhB,qBAAqBljB,GAE1BtC,SAAS+X,oBAAoB,YAAa1T,EAAKkgB,uBAC/CvkB,SAAS+X,oBAAoB,WAAY1T,EAAKmgB,wBAxexBngB,EA2e1BmhB,qBAAuB,SAACljB,GAGpB,IAFqB+B,EAAKoa,MAAlBiC,SAEO,KACH5lB,EAAUuJ,EAAKoa,MAAf3jB,MACRuJ,EAAKoa,MAAM2G,SAAStqB,GAAO,EAAOuJ,EAAKkO,MAAMjY,OAGjD0F,SAASO,KAAKL,MAAM8f,OAAS3b,EAAK4a,mBAElC3c,EAAMsV,kBAnfNvT,EAAKua,KAAO6G,IAAMC,YAClBrhB,EAAKwa,OAAS4G,IAAMC,YACpBrhB,EAAKya,QAAU2G,IAAMC,YACrBrhB,EAAK0a,UAAY0G,IAAMC,YACvBrhB,EAAK2a,UAAYyG,IAAMC,YACvBrhB,EAAK4a,mBAAqB,KAC1B5a,EAAKkO,MAAQ,CACT0O,qBAAqB,EACrBf,OAAQ,EACRE,OAAQ,EACR4E,cAAe,EACf1qB,MAAO,IAbW+J,qFAkBI,OAAtBC,KAAKsa,KAAKmB,SACc,OAAxBzb,KAAKua,OAAOkB,SACa,OAAzBzb,KAAKwa,QAAQiB,SACc,OAA3Bzb,KAAKya,UAAUgB,SACY,OAA3Bzb,KAAK0a,UAAUe,UAEnBzb,KAAK2a,mBAAqBjf,SAASO,KAAKL,MAAM8f,OAE9C1b,KAAKsa,KAAKmB,QAAQ1d,iBAAiB,YAAaiC,KAAK8a,iBACrD9a,KAAKsa,KAAKmB,QAAQ1d,iBAAiB,aAAciC,KAAKkb,kBACtDlb,KAAKua,OAAOkB,QAAQ1d,iBAAiB,YAAaiC,KAAK4c,oBACvD5c,KAAKua,OAAOkB,QAAQ1d,iBAAiB,aAAciC,KAAKgd,qBACxDhd,KAAKwa,QAAQiB,QAAQ1d,iBAAiB,YAAaiC,KAAK2d,qBACxD3d,KAAKwa,QAAQiB,QAAQ1d,iBAAiB,aAAciC,KAAK+d,sBACzD/d,KAAKya,UAAUgB,QAAQ1d,iBAAiB,YAAaiC,KAAK4e,uBAC1D5e,KAAKya,UAAUgB,QAAQ1d,iBAAiB,aAAciC,KAAKgf,wBAC3Dhf,KAAK0a,UAAUe,QAAQ1d,iBAAiB,YAAaiC,KAAK4f,uBAC1D5f,KAAK0a,UAAUe,QAAQ1d,iBAAiB,aAAciC,KAAKggB,0DAudtD,IAAAqB,EAcDrhB,KAAKma,MAZLrkB,EAFCurB,EAEDvrB,EACAC,EAHCsrB,EAGDtrB,EACA1C,EAJCguB,EAIDhuB,MACAC,EALC+tB,EAKD/tB,OACAkD,EANC6qB,EAMD7qB,MACAH,EAPCgrB,EAODhrB,KACAH,EARCmrB,EAQDnrB,GACA+b,EATCoP,EASDpP,SACAqP,EAVCD,EAUDC,SACAC,EAXCF,EAWDE,cACAnF,EAZCiF,EAYDjF,SACAoF,EAbCH,EAaDG,cAGJ,OACIxH,EAAAtd,EAAAf,cAAA,OACI8lB,IAAKzhB,KAAKsa,KACVoH,YAAa1hB,KAAK4a,uBAClB+G,UAAS,GAAA3nB,OAAK4B,KAAM5Q,gBAAX,KAAAgP,OAA8BunB,EAAgB3lB,KAAM3Q,2BAA6B,GAAjF,KAAA+O,OACLsnB,EAAW1lB,KAAM1Q,sBAAwB,GADpC,KAAA8O,OAELsnB,GAAYthB,KAAKiO,MAAM0O,oBAAsB/gB,KAAMxQ,eAAiB,GAF/D,KAGTwQ,MAAO,CACHgmB,SAAU,WACVtB,KAAMxqB,EACN0qB,IAAKzqB,EACL1C,MAAOA,EACPC,OAAQA,EACRooB,OAAQ,OACRmG,UAAS,UAAA7nB,OAAYxD,EAAZ,QACTsrB,cAAeN,EAAgB,OAAS,YAG3CvP,EACD+H,EAAAtd,EAAAf,cAAA,OACI8C,IAAK0e,KACL4E,IAAI,MACJN,IAAKzhB,KAAKua,OACVoH,UAAW/lB,KAAMzQ,WACjByQ,MAAO,CACHgmB,SAAU,WACVtB,KAAM,EACNE,IAAK,EACL9E,OAAM,OAAA1hB,OAASmjB,KAAT,WACNthB,aAAgB8F,IAAPzL,QAA6ByL,IAATtL,EAAqB,UAAY,UAItE2jB,EAAAtd,EAAAf,cAAA,OACI8C,IAAKyf,KACL6D,IAAI,OACJN,IAAKzhB,KAAKwa,QACVmH,UAAW/lB,KAAMzQ,WACjByQ,MAAO,CACHgmB,SAAU,WACVI,MAAO,EACPxB,IAAK,EACL9E,OAAM,OAAA1hB,OAASkkB,KAAT,WACNriB,aAAkB8F,IAATtL,EAAqB,UAAY,UAIlD2jB,EAAAtd,EAAAf,cAAA,OACI8C,IAAK0gB,KACL4C,IAAI,SACJN,IAAKzhB,KAAKya,UACVkH,UAAW/lB,KAAMzQ,WACjByQ,MAAO,CACHgmB,SAAU,WACVI,MAAO,EACPC,OAAQ,EACRvG,OAAM,OAAA1hB,OAASmlB,KAAT,WACNtjB,QAASugB,EAAW,OAAS,aAGrCpC,EAAAtd,EAAAf,cAAA,OACI8C,IAAK2hB,KACL2B,IAAI,SACJN,IAAKzhB,KAAK0a,UACViH,UAAW/lB,KAAMzQ,WACjByQ,MAAO,CACHgmB,SAAU,WACVtB,KAAM,EACN2B,OAAQ,EACRvG,OAAM,OAAA1hB,OAASomB,KAAT,WACNvkB,QAASugB,EAAW,OAAS,qBAxlBvB+E,IAAMlH,WAinBrBiI,eAjBS,SAACjU,EAAckM,GACnC,IAAMoH,EAAgBpH,EAAMtkB,UAAYoY,EAAMsE,QAAQC,QAAQC,cACxD6O,EACFnH,EAAMvkB,SAAWqY,EAAMsE,QAAQC,QAAQ2C,cAAgBgF,EAAMtkB,UAAYoY,EAAMsE,QAAQC,QAAQC,cAC7F3C,EAAY7B,EAAMsE,QAAQC,QAAQpM,OAAO+T,EAAMvkB,QAAQukB,EAAMtkB,SAInE,MAAO,CACHyrB,WACAC,gBACAnF,UANkC,IAArBtM,EAAUuG,OAOvBmL,eAN4C,IAA1B1R,EAAU5a,YAO5BQ,iBAAkBuY,EAAMsE,QAAQC,QAAQ9c,mBAIjCwsB,CAAqEhI,8CC5nB9EiI,eACF,SAAAA,EAAYhI,GAAc,IAAApa,EAAA,OAAAE,OAAAC,GAAA,EAAAD,CAAAD,KAAAmiB,IACtBpiB,EAAAE,OAAAma,GAAA,EAAAna,CAAAD,KAAAC,OAAAoa,GAAA,EAAApa,CAAAkiB,GAAA5Y,KAAAvJ,KAAMma,KASViI,WAAa,SAACtsB,EAAWC,EAAWssB,EAAmBrsB,GAAkB,IAAAmmB,EAClBpc,EAAKoa,MAAhDmI,EAD6DnG,EAC7DmG,SAAU1sB,EADmDumB,EACnDvmB,OAAQuH,EAD2Cgf,EAC3Chf,eAAgBmf,EAD2BH,EAC3BG,KAC1CgG,EACI3sB,GAA2B0sB,EAAWzsB,OAAS+L,EAAWxE,EAAe5L,GAAIuE,EAAIwmB,EAAMvmB,EAAIumB,EAAMtmB,KAb/E+J,EAiB1BwiB,UAAY,SAACrsB,EAAYC,EAAYksB,EAAmBrsB,GAAkB,IAAAqmB,EACnBtc,EAAKoa,MAAhDmI,EAD8DjG,EAC9DiG,SAAU1sB,EADoDymB,EACpDzmB,OAAQuH,EAD4Ckf,EAC5Clf,eAAgBmf,EAD4BD,EAC5BC,KAC1CgG,EAASrsB,GAAsBosB,EAAWzsB,OAAS+L,EAAWxE,EAAe5L,GAAI2E,EAAKomB,EAAMnmB,EAAKmmB,EAAMtmB,KAnBjF+J,EAsB1ByiB,WAAa,SAACnsB,EAAcgsB,EAAmBrsB,GAAkB,IAAA0mB,EAChB3c,EAAKoa,MAA1CmI,EADqD5F,EACrD4F,SAAU1sB,EAD2C8mB,EAC3C9mB,OAAQuH,EADmCuf,EACnCvf,eAC1BmlB,EAASlsB,GAAuBisB,EAAWzsB,OAAS+L,EAAWxE,EAAe5L,GAAI8E,EAAML,KAxBlE+J,EA2B1B0iB,aAAe,SAACpvB,EAAeC,EAAgB+uB,EAAmBrsB,GAAkB,IAAAqnB,EAC7Btd,EAAKoa,MAAhDmI,EADwEjF,EACxEiF,SAAUnlB,EAD8DkgB,EAC9DlgB,eAAgBvH,EAD8CynB,EAC9CznB,OAAQ0mB,EADsCe,EACtCf,KAC1CgG,EACIhsB,GACI+rB,EAAWzsB,OAAS+L,EACpBxE,EAAe5L,GACf8B,EAAQipB,EACRhpB,EAASgpB,EACTtmB,KAnCc+J,EAwC1B2iB,aAAe,SAAClsB,EAAe6rB,EAAmBrsB,GAAkB,IAAA0nB,EACnB3d,EAAKoa,MAA1CmI,EADwD5E,EACxD4E,SAAU1sB,EAD8C8nB,EAC9C9nB,OAAQuH,EADsCugB,EACtCvgB,eAC1BmlB,EAAS/rB,GAAwB8rB,EAAWzsB,OAAS+L,EAAWxE,EAAe5L,GAAIiF,EAAOR,KA1CpE+J,EA6C1B+a,gBAAkB,WACd/a,EAAK4b,SAAS,CAAEgH,UAAU,KA9CJ5iB,EAiD1Bmb,iBAAmB,SAACld,GACZA,EAAMmd,QAAQla,OAAS,GAI3BlB,EAAK4b,SAAS,CAAEgH,UAAU,EAAO7sB,EAAGkI,EAAMod,eAAe,GAAGS,QAAS9lB,EAAGiI,EAAMod,eAAe,GAAGW,WAtD1Ehc,EAyD1Bib,gBAAkB,WACdjb,EAAK4b,SAAS,CAAEgH,UAAU,KA1DJ5iB,EA6D1Bsb,gBAAkB,SAACrd,GACf,KAAIA,EAAMmd,QAAQla,OAAS,GAA3B,CAD2C,IAAA8f,EAK1BhhB,EAAKkO,MAAdnY,EALmCirB,EAKnCjrB,EAAGC,EALgCgrB,EAKhChrB,GACP6G,KAAK6hB,IAAIzgB,EAAMod,eAAe,GAAGS,QAAU/lB,GAAK,GAAK8G,KAAK6hB,IAAIzgB,EAAMod,eAAe,GAAGW,QAAUhmB,GAAK,IACrGgK,EAAK4b,SAAS,CAAEgH,UAAU,MApER5iB,EAwE1Bkb,cAAgB,WACZlb,EAAKyc,kBAzEiBzc,EA4E1Bwb,eAAiB,SAACvd,GACVA,EAAMmd,QAAQla,OAAS,GAI3BlB,EAAKyc,kBAjFiBzc,EAoF1Byc,eAAiB,WAAM,IAAA4B,EACoCre,EAAKoa,MAApDmI,EADWlE,EACXkE,SAAU1sB,EADCwoB,EACDxoB,OAAQsgB,EADPkI,EACOlI,SAAU/Y,EADjBihB,EACiBjhB,eAC/B4C,EAAKkO,MAAM0U,UACZL,EAAS7qB,GAA0B7B,EAAQsgB,EAAU/Y,EAAe5L,MAvFlDwO,EA2F1B6iB,eAAiB,SAAC5kB,GACd+B,EAAK4b,SAAS,CAAEkH,YAAY,IAC5B7kB,EAAMsV,iBACNtV,EAAM6c,mBA9FgB9a,EAiG1B+iB,gBAAkB,SAAC9kB,GACf+B,EAAK4b,SAAS,CAAEkH,YAAY,IAC5B7kB,EAAMsV,iBACNtV,EAAM6c,mBApGgB9a,EAuG1BgjB,WAAa,SAAC/kB,GACV+B,EAAK4b,SAAS,CAAEkH,YAAY,IAC5B7kB,EAAMsV,iBACNtV,EAAM6c,kBAEN,IAAMpgB,EAAMuD,EAAMglB,aAAaC,QAAQ,OACjCC,EAAgBzoB,EAAIwb,QAAQ,oBAElC,IAAuB,IAAnBiN,EAAsB,KAAA7D,EACuBtf,EAAKoa,MAA1CvkB,EADcypB,EACdzpB,OAAQuH,EADMkiB,EACNliB,eAAgBmlB,EADVjD,EACUiD,SAC5BjkB,EAAM,IAAIC,MAEdD,EAAIN,iBAAiB,OAAQ,WACzB,IAAMolB,EAAgB,CAClB1oB,IAAKA,EAAI2oB,OAAOF,GAChB7vB,MAAO2M,KAAKwO,aACZlb,OAAQ0M,KAAKyO,eAEjB6T,EAASjrB,GAAmBzB,EAAQuH,EAAe5L,GAAI4xB,MAE3D9kB,EAAII,IAAMhE,IAzHdsF,EAAKkO,MAAQ,CACT4U,YAAY,EACZF,UAAU,EACV7sB,EAAG,EACHC,EAAG,GANegK,0EA+HjB,IAAA4f,EAC6D3f,KAAKma,MAA/Dhd,EADHwiB,EACGxiB,eAAgBkmB,EADnB1D,EACmB0D,SAAU/G,EAD7BqD,EAC6BrD,KAAMgH,EADnC3D,EACmC2D,UAAWC,EAD9C5D,EAC8C4D,WAE/C3hB,EAAM1E,GAAyBC,GAC/BC,EAAuBwE,EAAIvO,MAAQipB,EACnCjf,EAAwBuE,EAAItO,OAASgpB,EAEzC,OACItC,EAAAtd,EAAAf,cAAC6nB,GAAD,CACI5tB,OAAQoK,KAAKma,MAAMvkB,OACnBC,QAASsH,EAAe5L,GACxBuE,EAAGqH,EAAerH,EAAIwmB,EACtBvmB,EAAGoH,EAAepH,EAAIumB,EACtBjpB,MAAO8J,EAAe9J,MAAQipB,EAC9BhpB,OAAQ6J,EAAe7J,OAASgpB,EAChCpmB,IAAKiH,EAAejH,IAAM,GAAKomB,EAC/BnmB,IAAKgH,EAAehH,IAAM,GAAKmmB,EAC/BjmB,KAAM8G,EAAe9G,MAAQ,EAC7BG,MAAO2G,EAAe3G,MACtB+lB,OAAQvc,KAAKoiB,WACb9E,MAAOtd,KAAKuiB,UACZlE,OAAQre,KAAKwiB,WACblD,SAAUtf,KAAKyiB,aACf3B,SAAU9gB,KAAK0iB,aACfY,UAAWA,EACXC,WAAYA,EACZjH,KAAMA,GAENtC,EAAAtd,EAAAf,cAAA,OACIC,MAAO,CACHvI,MAAO,OACPC,OAAQ,OACRsuB,SAAU,WACV6B,SAAUtmB,EAAenI,KAAO,SAAW,WAE/C2sB,UAAW3hB,KAAKiO,MAAM4U,WAAajnB,KAAM/Q,KAAO,GAChD64B,YAAa1jB,KAAK8a,gBAClB6I,aAAc3jB,KAAKkb,iBACnB0I,YAAa5jB,KAAKgb,gBAClB6I,YAAa7jB,KAAKqb,gBAClByI,UAAW9jB,KAAKib,cAChB8I,WAAY/jB,KAAKub,eACjByI,WAAYhkB,KAAK4iB,eACjBqB,YAAajkB,KAAK8iB,gBAClBoB,OAAQlkB,KAAK+iB,YAEb/I,EAAAtd,EAAAf,cAAA,OACIC,MAAO,CACHgmB,SAAU,WACVuC,QAASd,GAAYA,EAASpiB,OAAS,EAAI,EAAI,GAC/Cqf,MAAOnjB,EAAejH,IAAM,GAAKomB,EACjCkE,KAAMrjB,EAAehH,IAAM,GAAKmmB,EAChCjpB,MAAO+J,EACP9J,OAAQ+J,GAEZoB,IAAK4kB,GAAYe,KACjBrC,IAAI,cAxLHsC,iBA+MVnC,eAfS,SAACjU,EAAckM,GACnC,IAAIkJ,EAA+B,GASnC,OARIlJ,EAAMhd,gBAAgD,UAA9Bgd,EAAMhd,eAAe9L,OAEzCgyB,EADAlJ,EAAMhd,eAAe3F,OACV,6BAA+B2iB,EAAMhd,eAAe3F,OAEpD2iB,EAAMhd,gBAAkBgd,EAAMhd,eAAe1C,KAIzD,CACH4oB,aAIOnB,CAAqEC,yBC7N9EmC,eAcF,SAAAA,EAAYnK,GAAc,IAAApa,EAAA,OAAAE,OAAAC,GAAA,EAAAD,CAAAD,KAAAskB,IACtBvkB,EAAAE,OAAAma,GAAA,EAAAna,CAAAD,KAAAC,OAAAoa,GAAA,EAAApa,CAAAqkB,GAAA/a,KAAAvJ,KAAMma,KAdVoK,aAa0B,EAAAxkB,EAZ1BykB,iBAY0B,EAAAzkB,EAX1B0kB,kBAW0B,EAAA1kB,EAV1B2kB,kBAU0B,EAAA3kB,EAT1B4kB,uBAS0B,EAAA5kB,EAR1B6kB,wBAQ0B,EAAA7kB,EAP1B8kB,qBAO0B,EAAA9kB,EAN1B+kB,uBAM0B,EAAA/kB,EAL1BglB,aAK0B,EAAAhlB,EAJ1B4iB,cAI0B,EAAA5iB,EAH1BjK,OAG0B,EAAAiK,EAF1BhK,OAE0B,EAAAgK,EA0D1B+a,gBAAkB,SAAC9c,GACf+B,EAAKilB,YAAYhnB,IA3DK+B,EA8D1Bmb,iBAAmB,SAACld,GACZA,EAAMmd,QAAQla,OAAS,IAI3BlB,EAAKjK,EAAIkI,EAAMod,eAAe,GAAGS,QACjC9b,EAAKhK,EAAIiI,EAAMod,eAAe,GAAGW,QACjChc,EAAKilB,YAAYhnB,KArEK+B,EAwE1BilB,YAAc,SAAChnB,GACU+B,EAAKoa,MAAlBmH,SAEJtjB,EAAM6c,mBAEN9a,EAAK4iB,UAAW,EAChB3kB,EAAMsV,mBA9EYvT,EAkF1Bib,gBAAkB,SAAChd,GACf+B,EAAKklB,WAAWjnB,IAnFM+B,EAsF1Bsb,gBAAkB,SAACrd,GACXA,EAAMmd,QAAQla,OAAS,IAKvBrE,KAAK6hB,IAAIzgB,EAAMod,eAAe,GAAGS,QAAU9b,EAAKjK,GAAK,GACrD8G,KAAK6hB,IAAIzgB,EAAMod,eAAe,GAAGW,QAAUhc,EAAKhK,GAAK,IAErDgK,EAAKklB,WAAWjnB,IA/FE+B,EAmG1BklB,WAAa,SAACjnB,GACW+B,EAAKoa,MAAlBmH,SAEJtjB,EAAM6c,mBAEN9a,EAAK4iB,UAAW,EAChB3kB,EAAMsV,mBAzGYvT,EA6G1Bkb,cAAgB,SAACjd,GACb+B,EAAKyc,eAAexe,IA9GE+B,EAiH1Bwb,eAAiB,SAACvd,GACVA,EAAMmd,QAAQla,OAAS,GAI3BlB,EAAKyc,eAAexe,IAtHE+B,EAyH1Byc,eAAiB,SAACxe,GAAiB,IAAAme,EAC2Bpc,EAAKoa,MAAvDmI,EADuBnG,EACvBmG,SAAU1sB,EADaumB,EACbvmB,OAAQsgB,EADKiG,EACLjG,SAAUrgB,EADLsmB,EACKtmB,QACpC,GAF+BsmB,EACcmF,SAEzCtjB,EAAM6c,uBACH,IAAK9a,EAAK4iB,SAAU,CAIvB,GAHA3kB,EAAMsV,iBACNgP,EAAS7qB,GAA0B7B,EAAQsgB,EAAUrgB,KAEhDkK,EAAKwkB,QAAQ9I,QAAS,OAC3B1b,EAAKwkB,QAAQ9I,QAAQyJ,UAlIHnlB,EAsI1BolB,QAAU,WACN,GAAKplB,EAAKwkB,QAAQ9I,QAAlB,CADY,IAAAY,EAG2Dtc,EAAKoa,MAApEiL,EAHI/I,EAGJ+I,UAAW1uB,EAHP2lB,EAGO3lB,MAAOE,EAHdylB,EAGczlB,MAAOnM,EAHrB4xB,EAGqB5xB,WAAYC,EAHjC2xB,EAGiC3xB,YAAasM,EAH9CqlB,EAG8CrlB,SAC1D+I,EAAKykB,YAAcY,EACnBrlB,EAAK0kB,aAAe/tB,EACpBqJ,EAAK2kB,aAAe9tB,EACpBmJ,EAAK4kB,kBAAoBl6B,EACzBsV,EAAK6kB,mBAAqBl6B,EAC1BqV,EAAK8kB,gBAAkB7tB,EAEvB,IAAMquB,EAAQ3pB,SAAS4pB,cACvBD,EAAME,mBAAmBxlB,EAAKwkB,QAAQ9I,SACtC4J,EAAMG,UAAS,GACf,IAAMC,EAAYnpB,OAAOopB,eACzBD,EAAUE,kBACVF,EAAUG,SAASP,KAtJGtlB,EAyJ1B8lB,cAAgB,SAACC,GACb,GAAK/lB,EAAKwkB,QAAQ9I,QAAlB,CAIA,IAHA,IAAIvV,EAAQnG,EAAKwkB,QAAQ9I,QAAQsK,UAE7BC,GAAa,GACyC,KAAlDA,EAAY9f,EAAM+P,QAAQ,oBAC9B/P,EAAQA,EAAM3D,MAAM,EAAGyjB,EAAY,IAAM9f,EAAM3D,MAAM2D,EAAM+P,QAAQ,IAAK+P,EAAY,KAGpF9f,IAAUnG,EAAKykB,cACfzkB,EAAKykB,YAActe,EAEfnG,EAAKglB,SACLkB,aAAalmB,EAAKglB,SAGtBhlB,EAAKglB,QAAU1oB,WAAW,WAAM,IAAAqgB,EACU3c,EAAKoa,MAAnCmI,EADoB5F,EACpB4F,SAAU1sB,EADU8mB,EACV9mB,OAAQC,EADE6mB,EACF7mB,QAG1BysB,EAASnrB,GAAkBvB,EAAQC,EAFR,CAAEqQ,YAG9B4f,MA9Ke/lB,EAkL1BmmB,WAAa,WACTnmB,EAAK8lB,cAAc,IAnLG9lB,EAsL1BomB,YAAc,WACVpmB,EAAK8lB,cAAc,MAvLG9lB,EA0L1BqmB,YAAc,SAACpoB,GAUXA,EAAMsV,iBAEN,IAAIhiB,EAAO,GAGXA,GAFAA,EAAO0M,EAAMqoB,cAAcpD,QAAQ,eAG9BvjB,MAAM,MACNuN,IAAI,SAACqZ,GAAD,cAAAtsB,OAAkCssB,EAdlCC,QAAQ,KAAM,SACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,UACdA,QAAQ,KAAM,UAUd,YACJC,KAAK,IACV9qB,SAAS+qB,YAAY,cAAc,EAAOn1B,IA3M1CyO,EAAKwkB,QAAUpD,IAAMC,YACrBrhB,EAAKykB,YAAc,GACnBzkB,EAAK0kB,aAAe,GACpB1kB,EAAK2kB,aAAe,GACpB3kB,EAAK4kB,kBAAoB,GACzB5kB,EAAK6kB,mBAAqB,GAC1B7kB,EAAK8kB,gBAAkBt5B,EACvBwU,EAAK+kB,kBAAoBt5B,EACzBuU,EAAKglB,QAAU,KACfhlB,EAAK4iB,UAAW,EAChB5iB,EAAKjK,EAAI,EACTiK,EAAKhK,EAAI,EAbagK,qFAgBN,IACRuhB,EAAathB,KAAKma,MAAlBmH,SAEHthB,KAAKukB,QAAQ9I,UAElBzb,KAAKukB,QAAQ9I,QAAQ1d,iBAAiB,YAAaiC,KAAK8a,iBACxD9a,KAAKukB,QAAQ9I,QAAQ1d,iBAAiB,aAAciC,KAAKkb,kBACzDlb,KAAKukB,QAAQ9I,QAAQ1d,iBAAiB,YAAaiC,KAAKgb,iBACxDhb,KAAKukB,QAAQ9I,QAAQ1d,iBAAiB,YAAaiC,KAAKqb,gBAAiB,CAAEC,SAAS,IACpFtb,KAAKukB,QAAQ9I,QAAQ1d,iBAAiB,UAAWiC,KAAKib,eACtDjb,KAAKukB,QAAQ9I,QAAQ1d,iBAAiB,WAAYiC,KAAKub,eAAgB,CAAED,SAAS,IAE9EgG,GACAthB,KAAKukB,QAAQ9I,QAAQyJ,uDAIPwB,GAWlB,OATIA,EAAUtB,YAAcplB,KAAKwkB,aAC7BkC,EAAUhwB,QAAUsJ,KAAKykB,cACzBiC,EAAU9vB,QAAUoJ,KAAK0kB,cACzBgC,EAAUj8B,aAAeuV,KAAK2kB,mBAC9B+B,EAAUh8B,cAAgBsV,KAAK4kB,oBAC/B8B,EAAU1vB,WAAagJ,KAAK6kB,iBAC5B6B,EAAUxvB,aAAe8I,KAAK8kB,mBAC9B9kB,KAAKma,MAAMmH,WAAaoF,EAAUpF,sDAKrB,IAAAjE,EACkErd,KAAKma,MAAhFiL,EADS/H,EACT+H,UAAW1uB,EADF2mB,EACE3mB,MAAOE,EADTymB,EACSzmB,MAAOnM,EADhB4yB,EACgB5yB,WAAYC,EAD5B2yB,EAC4B3yB,YAAasM,EADzCqmB,EACyCrmB,SAAUE,EADnDmmB,EACmDnmB,WACpE8I,KAAKwkB,YAAcY,EACnBplB,KAAKykB,aAAe/tB,EACpBsJ,KAAK0kB,aAAe9tB,EACpBoJ,KAAK2kB,kBAAoBl6B,EACzBuV,KAAK4kB,mBAAqBl6B,EAC1BsV,KAAK6kB,gBAAkB7tB,EACvBgJ,KAAK8kB,kBAAoB5tB,mCAyJpB,IAAAwmB,EACmE1d,KAAKma,MAArEvjB,EADH8mB,EACG9mB,MAAOF,EADVgnB,EACUhnB,MAAOjM,EADjBizB,EACiBjzB,WAAYC,EAD7BgzB,EAC6BhzB,YAAasM,EAD1C0mB,EAC0C1mB,SAAUE,EADpDwmB,EACoDxmB,WACnDyvB,EAAWj8B,IAAkD,IAAnCA,EAAYurB,QAAQ,UAC9C2Q,EAAaD,EACG,WAAhBj8B,EACI,IACAm8B,SAASn8B,EAAY6X,MAAM,EAAG,IAClB,YAAhB7X,EACA,IACAm8B,SAASn8B,GAEf,OACIsvB,EAAAtd,EAAAf,cAAA,OACI8lB,IAAKzhB,KAAKukB,QACV5C,UAAW/lB,KAAM9Q,QACjBg8B,iBAAiB,EACjB3B,QAASnlB,KAAKmlB,QACd4B,OAAQ/mB,KAAKkmB,WACbc,QAAShnB,KAAKmmB,YACdc,QAASjnB,KAAKomB,YACdxqB,MAAO,CACHvI,MAAO,OACPC,OAAQ,OACR4zB,UAAqB,SAAVxwB,EAAmB,OAAmB,UAAVA,EAAoB,QAAU,SACrEE,MAAOA,EACPnM,WAAY,IAAAuP,OAAIvP,EAAJ,OAAqB08B,EACjCC,UAAWT,EAAW,SAAW,SACjCC,aACA5vB,SAAQ,GAAAgD,OAAKhD,EAAL,MACRqwB,QAAS,OACTC,aAAc,aACdpwB,cAEJqwB,wBAAyB,CAAEC,OAAQxnB,KAAKma,MAAMiL,oBA/PhCnL,aAgRfiI,eAXS,SAACjU,EAAckM,GACnC,IAAIrK,EAAY7B,EAAMsE,QAAQC,QAAQpM,OAAO+T,EAAMvkB,QAAQukB,EAAMtkB,SAEjE,MAAO,CACHuvB,UAFiC,SAAnBtV,EAAUze,KAAkBye,EAAU5J,MAAQ,GAG5Dob,SACInH,EAAMvkB,SAAWqY,EAAMsE,QAAQC,QAAQ2C,cACvCgF,EAAMtkB,UAAYoY,EAAMsE,QAAQC,QAAQC,gBAIrCyP,CAAqEoC,yBClR9EmD,iNACFrF,WAAa,SAACtsB,EAAWC,EAAWssB,EAAmBrsB,GAAkB,IAAAmmB,EACnBpc,EAAKoa,MAA/CmI,EAD6DnG,EAC7DmG,SAAU1sB,EADmDumB,EACnDvmB,OAAQ8xB,EAD2CvL,EAC3CuL,cAAepL,EAD4BH,EAC5BG,KACzCgG,EACI3sB,GAA2B0sB,EAAWzsB,OAAS+L,EAAW+lB,EAAcn2B,GAAIuE,EAAIwmB,EAAMvmB,EAAIumB,EAAMtmB,OAIxGysB,aAAe,SAACpvB,EAAeC,EAAgB+uB,EAAmBrsB,GAAkB,IAAAqmB,EAC9Btc,EAAKoa,MAA/CmI,EADwEjG,EACxEiG,SAAUoF,EAD8DrL,EAC9DqL,cAAe9xB,EAD+CymB,EAC/CzmB,OAAQ0mB,EADuCD,EACvCC,KACzCgG,EACIhsB,GAAuB+rB,EAAWzsB,OAAS+L,EAAW+lB,EAAcn2B,GAAI8B,EAAQipB,EAAMhpB,EAASgpB,EAAMtmB,OAI7G0sB,aAAe,SAAClsB,EAAe6rB,EAAmBrsB,GAAkB,IAAA0mB,EACpB3c,EAAKoa,MAAzCmI,EADwD5F,EACxD4F,SAAUoF,EAD8ChL,EAC9CgL,cAAe9xB,EAD+B8mB,EAC/B9mB,OACjC0sB,EAAS/rB,GAAwB8rB,EAAWzsB,OAAS+L,EAAW+lB,EAAcn2B,GAAIiF,EAAOR,+EAGpF,IAAAqnB,EACwDrd,KAAKma,MAA1DuN,EADHrK,EACGqK,cAAep2B,EADlB+rB,EACkB/rB,KAAMgrB,EADxBe,EACwBf,KAAMgH,EAD9BjG,EAC8BiG,UAAWC,EADzClG,EACyCkG,WAE9C,OACIvJ,EAAAtd,EAAAf,cAAC6nB,GAAD,CACI5tB,OAAQoK,KAAKma,MAAMvkB,OACnBC,QAAS6xB,EAAcn2B,GACvBuE,EAAG4xB,EAAc5xB,EAAIwmB,EACrBvmB,EAAG2xB,EAAc3xB,EAAIumB,EACrBjpB,MAAOq0B,EAAcr0B,MAAQipB,EAC7BhpB,OAAQo0B,EAAcp0B,OAASgpB,EAC/B9lB,MAAOkxB,EAAclxB,MACrB+lB,OAAQvc,KAAKoiB,WACb9C,SAAUtf,KAAKyiB,aACf3B,SAAU9gB,KAAK0iB,aACfY,UAAWA,EACXC,WAAYA,EACZjH,KAAMA,GAEI,KAAThrB,GACG0oB,EAAAtd,EAAAf,cAAA,OACIC,MAAO,CACHvI,MAAO,OACPC,OAAQ,OACRsuB,SAAU,QACVtB,KAAM,EACNE,IAAK,EACLmH,QAAS,EACTT,UAC4B,SAAxBQ,EAAchxB,MACR,OACwB,UAAxBgxB,EAAchxB,MACd,QACA,WAGdsjB,EAAAtd,EAAAf,cAAA,OAAKC,MAAO,CAAEuoB,QAAS,GAAK9wB,MAAO,OAAQC,OAAQ,QAAUmL,IAAKmpB,KAAgB7F,IAAI,MAI9F/H,EAAAtd,EAAAf,cAACksB,GAAD,CACIjyB,OAAQoK,KAAKma,MAAMvkB,OACnBsgB,SAAUlW,KAAKma,MAAMjE,SACrBrgB,QAAS6xB,EAAcn2B,GACvBmF,MAAOgxB,EAAchxB,MACrBE,MAAO8wB,EAAc9wB,MACrBnM,WAAYi9B,EAAcj9B,WAC1BC,YAAag9B,EAAch9B,YAC3BsM,SAAU0wB,EAAc1wB,SAAWslB,EACnCplB,WAAYwwB,EAAcxwB,YAAc1L,YArEpC64B,iBAoFTnC,eARS,SAACjU,EAAckM,GACnC,IAAIrK,EAAY7B,EAAMsE,QAAQC,QAAQpM,OAAO+T,EAAMvkB,QAAQukB,EAAMuN,cAAcn2B,IAE/E,MAAO,CACHD,KAF0B,SAAnBwe,EAAUze,KAAkBye,EAAU5J,MAAQ,KAM9Cgc,CAAqEuF,wBC1E9EK,iNACF7Z,MAAQ,CACJ8Z,WAAY,CACR10B,OAAQ,EACRC,QAAS,MAIjB00B,oBAAsB,SAAChqB,GAA+C,IAAAme,EAC/Bpc,EAAKoa,MAAhCmI,EAD0DnG,EAC1DmG,SAAUzuB,EADgDsoB,EAChDtoB,KAAM0M,EAD0C4b,EAC1C5b,OACbvC,EAAMiqB,OACVC,aAAa,QAAhB,QAAAluB,OAAkCnG,EAAKtC,MACvC+wB,EAAS7qB,GAA0B5D,EAAKtC,GAAIgP,OAAQoB,IACpD3D,EAAM6c,8FAIL,IAAAsN,EAAAnoB,KAAAqc,EAC0Frc,KAAKma,MAA5FlH,EADHoJ,EACGpJ,WAAYmV,EADf/L,EACe+L,UAAWv0B,EAD1BwoB,EAC0BxoB,KAAM0M,EADhC8b,EACgC9b,OAAQlN,EADxCgpB,EACwChpB,MAAOC,EAD/C+oB,EAC+C/oB,OAAQ+0B,EADvDhM,EACuDgM,aAAchyB,EADrEgmB,EACqEhmB,KAAMb,EAD3E6mB,EAC2E7mB,WAC1E8yB,EAAkBj1B,EAAsB,EAAd5H,EAC1B88B,EAAmBj1B,EAAuB,EAAd7H,EAE5B6wB,EAAOtc,KAAKiO,MAAM8Z,WAAW10B,MAAQi1B,EAE3C,OACItO,EAAAtd,EAAAf,cAAA,WACIqe,EAAAtd,EAAAf,cAAC6sB,GAAA,EAAD,CACIC,QAAM,EACNnJ,SAAU,SAAAoJ,GACDA,EAAYD,QAGjBN,EAAKxM,SAAS,CAAEoM,WAAYW,EAAYD,WAG3C,SAAAE,GAAA,IAAGC,EAAHD,EAAGC,WAAH,OACG5O,EAAAtd,EAAAf,cAAA,OACIgmB,UAAS,GAAA3nB,OAAK4B,KAAM/H,KAAX,KAAAmG,OAAmBquB,EAAezsB,KAAM8K,OAAS,IAC1DnV,GAAE,QAAAyI,OAAUnG,EAAKtC,IACjBkwB,IAAKmH,EACLhtB,MAAO,CACHvI,MAAK,GAAA2G,OAAKsuB,EAAkBjyB,EAAvB,MACL/C,OAAM,GAAA0G,OAAKuuB,EAAmBlyB,EAAxB,MACNurB,SAAU,WACV6B,SAAU,UAEdC,YAAayE,EAAKH,oBAClBrE,aAAcwE,EAAKH,qBAElBI,EAAUnb,IAAI,SAAA1b,GACX,KAAMA,KAAM0hB,GACR,OAAO,KAEX,IAAMroB,EAAIqoB,EAAW1hB,GACrB,MAAe,UAAX3G,EAAEyG,KAEE2oB,EAAAtd,EAAAf,cAACktB,GAAD,CACIC,IAAKl+B,EAAE2G,GACPqE,OAAQ/B,EAAKtC,GACb2kB,SAAU3V,EACVpD,eAAgBvS,EAChB0xB,KAAMA,EACNgH,UAAW6E,EAAKla,MAAM8Z,WAAW10B,MACjCkwB,WAAY4E,EAAKla,MAAM8Z,WAAWz0B,SAGxB,SAAX1I,EAAEyG,KAEL2oB,EAAAtd,EAAAf,cAACotB,GAAD,CACID,IAAKl+B,EAAE2G,GACPqE,OAAQ/B,EAAKtC,GACb2kB,SAAU3V,EACVmnB,cAAe98B,EACf0xB,KAAMA,EACNgH,UAAW6E,EAAKla,MAAM8Z,WAAW10B,MACjCkwB,WAAY4E,EAAKla,MAAM8Z,WAAWz0B,SAIvC,OAGX0mB,EAAAtd,EAAAf,cAAA,OACIC,MAAO,CACHgmB,SAAU,WACVvuB,MAAK,GAAA2G,OAAK3G,EAAQgD,EAAb,MACL/C,OAAM,GAAA0G,OAAK1G,EAAS+C,EAAd,MACNiqB,KAAI,GAAAtmB,OAAKvO,EAAc4K,EAAnB,MACJmqB,IAAG,GAAAxmB,OAAKvO,EAAc4K,EAAnB,MACH2yB,OAAQ,mBACRC,aAAc,MACdnH,cAAe,UAIvB9H,EAAAtd,EAAAf,cAAA,OACIC,MAAO,CACHgmB,SAAU,WACVvuB,MAAK,GAAA2G,QAAM3G,EAAsB,EAAd5H,GAAmB4K,EAAjC,MACL/C,OAAM,GAAA0G,QAAM1G,EAAuB,EAAd7H,GAAmB4K,EAAlC,MACNiqB,KAAI,GAAAtmB,OAAmB,EAAdvO,EAAkB4K,EAAvB,MACJmqB,IAAG,GAAAxmB,OAAmB,EAAdvO,EAAkB4K,EAAvB,MACH2yB,OAAQ,iBACRC,aAAc,MACdnH,cAAe,aAMlCtsB,GACGwkB,EAAAtd,EAAAf,cAAA,OACIgmB,UAAW/lB,KAAMstB,MACjBttB,MAAO,CACHvI,MAAK,GAAA2G,OAAKsuB,EAAkBjyB,EAAvB,MACLurB,SAAU,aAGbrhB,EAAS,OAAS,iBAtHxB0Z,aA+IJiI,eAjBS,SAACjU,EAAckM,GACnC,IAAIlH,EAAahF,EAAMsE,QAAQC,QAAQpM,OAAO+T,EAAMtmB,KAAKtC,KAAO,GAEhE,MAAO,CACH0hB,aACAmV,UAAWna,EAAMsE,QAAQC,QAAQ1M,aAAalN,OAC1C,SAAArH,GAAE,OAAMA,KAAM0hB,GAAcA,EAAW1hB,GAAI2kB,WAAa,KAAWiE,EAAM5Z,SAE7ElN,MAAO4a,EAAMsE,QAAQC,QAAQnf,MAC7BC,OAAQ2a,EAAMsE,QAAQC,QAAQlf,OAC9BkC,WAAYyY,EAAMsE,QAAQC,QAAQhd,WAClC6yB,aACIpa,EAAMsE,QAAQC,QAAQ2C,eAAiBgF,EAAMtmB,KAAKtC,IAAM0c,EAAMsE,QAAQC,QAAQ9a,eAAiByiB,EAAM5Z,OACzGlK,KAAM4X,EAAMsE,QAAQC,QAAQnc,OAIrB6rB,CAAqE4F,yBC/K/DqB,iNACjBlb,MAAQ,CACJmb,eAAe,KAGnBC,YAAc,WACVtpB,EAAK4b,SAAS,CAAEyN,eAAe,OAGnCE,aAAe,SAACtrB,GACZ+B,EAAKoa,MAAMoP,SAASvrB,EAAMiqB,OAAO/hB,UAGrCggB,WAAa,WACTnmB,EAAK4b,SAAS,CAAEyN,eAAe,+EAG1B,IACGA,EAAkBppB,KAAKiO,MAAvBmb,cACAF,EAAUlpB,KAAKma,MAAf+O,MAER,OACIlP,EAAAtd,EAAAf,cAAAqe,EAAAtd,EAAA8sB,SAAA,MACMJ,GACEpP,EAAAtd,EAAAf,cAAA,MAAIgmB,UAAW/lB,KAAMpR,MAAOi/B,QAASzpB,KAAKqpB,aACrCH,GAGRE,GACGpP,EAAAtd,EAAAf,cAAA,SACI+tB,WAAS,EACTr4B,KAAK,OACLswB,UAAW/lB,KAAMpR,MACjB0b,MAAOgjB,EACPK,SAAUvpB,KAAKspB,aACfvC,OAAQ/mB,KAAKkmB,qBAnCMjM,2CPL/BH,mEASS6P,yLACR,IAAAxN,EACuBnc,KAAKma,MAAzByP,EADHzN,EACGyN,UAAWC,EADd1N,EACc0N,KAEnB,OACI7P,EAAAtd,EAAAf,cAAA,OACIC,MAAO,CACHkuB,UAAW,MACXC,aAAc,MACdC,QAAS,MACTf,aAAc,MACdgB,gBAAiB,iBACjBpuB,QAAS,OACTquB,KAAM,wCAGTN,IAAc9P,GAAUqQ,OAASnQ,EAAAtd,EAAAf,cAACwuB,GAAA,EAAD,CAAOC,KAAM,IAAKP,KAAMA,GAAQ,WAAYjzB,MAAM,YACnFgzB,IAAc9P,GAAUuQ,SAAWrQ,EAAAtd,EAAAf,cAAC0uB,GAAA,EAAD,CAASD,KAAM,IAAKP,KAAMA,GAAQ,WAAYjzB,MAAM,YACxFojB,EAAAtd,EAAAf,cAAA,OAAKC,MAAO,CAAE0uB,WAAY,QAAUtqB,KAAKma,MAAMlI,kBAlBpBgI,iCQHtBsQ,yLACR,IAAApO,EACoBnc,KAAKma,MAAtBqQ,EADHrO,EACGqO,MAAOC,EADVtO,EACUsO,MAEf,OACIzQ,EAAAtd,EAAAf,cAAA,OAAKgmB,UAAS,GAAA3nB,OAAK4B,KAAM8uB,OAAX,KAAA1wB,OAAqBwwB,EAAQ5uB,KAAM4uB,MAAQ5uB,KAAM+uB,SAAjD,KAAA3wB,OAA6DywB,EAAQ7uB,KAAM6uB,MAAQ,KAC7FzQ,EAAAtd,EAAAf,cAAA,YACAqe,EAAAtd,EAAAf,cAAA,oBAPoBse,iCCMvB2Q,GAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAA/qB,EAAAE,OAAAC,GAAA,EAAAD,CAAAD,KAAA4qB,GAAA,QAAAG,EAAApmB,UAAA1D,OAAA+pB,EAAA,IAAAhkB,MAAA+jB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAAtmB,UAAAsmB,GAAA,OAAAlrB,EAAAE,OAAAma,GAAA,EAAAna,CAAAD,MAAA8qB,EAAA7qB,OAAAoa,GAAA,EAAApa,CAAA2qB,IAAArhB,KAAA7E,MAAAomB,EAAA,CAAA9qB,MAAAhG,OAAAgxB,MACIE,qBAAuB,WAAM,IAAA/O,EACQpc,EAAKoa,MAA9BgR,EADiBhP,EACjBgP,WAAY7I,EADKnG,EACLmG,SACD,OAAf6I,GACA7I,EAASxuB,GAAiBq3B,KAJtCprB,EAQIqrB,sBAAwB,WAAM,IAAA/O,EACOtc,EAAKoa,MAA9BgR,EADkB9O,EAClB8O,WAAY7I,EADMjG,EACNiG,SACD,OAAf6I,GACA7I,EAASvuB,GAAkBo3B,KAXvCprB,EAeIsrB,kBAAoB,SAACrtB,GAA+C,IAAA0e,EAC/B3c,EAAKoa,MAA9BgR,EADwDzO,EACxDyO,WAAY7I,EAD4C5F,EAC5C4F,SACD,OAAf6I,GACA7I,EAAStuB,GAAuBm3B,EAAYtE,SAAS7oB,EAAMiqB,OAAO/hB,UAlB9EnG,EAAA,OAAAE,OAAAqrB,GAAA,EAAArrB,CAAA2qB,EAAAC,GAAA5qB,OAAAsrB,GAAA,EAAAtrB,CAAA2qB,EAAA,EAAA9B,IAAA,SAAA5iB,MAAA,WAsBa,IAAAmX,EAC2Brd,KAAKma,MAA7BgR,EADH9N,EACG8N,WAAYK,EADfnO,EACemO,QAEpB,OACIxR,EAAAtd,EAAAf,cAAA,OAAKgmB,UAAW/lB,KAAMzR,KAAMyR,MAAO,CAAEC,QAAS2vB,EAAU,UAAY,SAChExR,EAAAtd,EAAAf,cAAA,UACI8tB,QAASzpB,KAAKkrB,qBACdhC,MAAM,aACNvH,UAA0B,OAAfwJ,EAAsBvvB,KAAMxR,SAAW,IAElD4vB,EAAAtd,EAAAf,cAAA,KAAGgmB,UAAU,kBAAb,cAGJ3H,EAAAtd,EAAAf,cAAA,SACItK,KAAK,SACL6U,MAAsB,OAAfilB,EAAsBA,EAAWl3B,MAAM2L,WAAa,EAC3D2pB,SAAUvpB,KAAKqrB,kBACfnC,MAAM,0BACNvH,UAA0B,OAAfwJ,EAAsBvvB,KAAMxR,SAAW,KAEtD4vB,EAAAtd,EAAAf,cAAA,UACI8tB,QAASzpB,KAAKorB,sBACdlC,MAAM,cACNvH,UAA0B,OAAfwJ,EAAsBvvB,KAAMxR,SAAW,IAElD4vB,EAAAtd,EAAAf,cAAA,KAAGgmB,UAAU,kBAAb,gBA/CpBiJ,EAAA,CAAoC3Q,aAgErBiI,eAVS,SAACjU,GACrB,MAAO,CACH0G,gBAAiB1G,EAAM0L,KAAKhF,gBAC5BwW,gBAC2CxpB,IAAvCsM,EAAMsE,QAAQC,QAAQ2C,aAChBlH,EAAMsE,QAAQC,QAAQhC,UAAUvC,EAAMsE,QAAQC,QAAQ2C,cACtD,OAIH+M,CAA4E0I,yBC1D9Ea,GAAb,SAAAZ,GAAA,SAAAY,IAAA,IAAAX,EAAA/qB,EAAAE,OAAAC,GAAA,EAAAD,CAAAD,KAAAyrB,GAAA,QAAAV,EAAApmB,UAAA1D,OAAA+pB,EAAA,IAAAhkB,MAAA+jB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAAtmB,UAAAsmB,GAAA,OAAAlrB,EAAAE,OAAAma,GAAA,EAAAna,CAAAD,MAAA8qB,EAAA7qB,OAAAoa,GAAA,EAAApa,CAAAwrB,IAAAliB,KAAA7E,MAAAomB,EAAA,CAAA9qB,MAAAhG,OAAAgxB,MACI/c,MAAoB,CAChB/a,IAAK,KAFb6M,EAKI2rB,gBAAkB,SAAC1tB,GACf+B,EAAK4b,SAAS,CAAEzoB,IAAK2zB,SAAS7oB,EAAMiqB,OAAO/hB,UANnDnG,EASI4rB,eAAiB,WAAM,IAAAxP,EACiBpc,EAAKoa,MAAjCmI,EADWnG,EACXmG,SAAUsJ,EADCzP,EACDyP,cACV14B,EAAQ6M,EAAKkO,MAAb/a,IAEc,OAAlB04B,GACAtJ,EAASrvB,GAAqBC,EAAK,WAAY04B,KAd3D7rB,EAAA,OAAAE,OAAAqrB,GAAA,EAAArrB,CAAAwrB,EAAAZ,GAAA5qB,OAAAsrB,GAAA,EAAAtrB,CAAAwrB,EAAA,EAAA3C,IAAA,SAAA5iB,MAAA,WAkBa,IAAAmW,EAC6Crc,KAAKma,MAA/CqR,EADHnP,EACGmP,QAASn4B,EADZgpB,EACYhpB,MAAOC,EADnB+oB,EACmB/oB,OAAQu4B,EAD3BxP,EAC2BwP,cACxB34B,EAAQ8M,KAAKiO,MAAb/a,IAEFwN,EAAkB9D,KAAK+D,MAAMzN,GAAOG,EAAQ,KAAO,MACnDuN,EAAmBhE,KAAK+D,MAAMzN,GAAOI,EAAS,KAAO,MAE3D,OACI0mB,EAAAtd,EAAAf,cAAA,OAAKgmB,UAAW/lB,KAAMzR,KAAMyR,MAAO,CAAEC,QAAS2vB,EAAU,OAAS,SAC7DxR,EAAAtd,EAAAf,cAAA,8DACAqe,EAAAtd,EAAAf,cAAA,SAAOmwB,QAAQ,OAAf,QACA9R,EAAAtd,EAAAf,cAAA,SACIpK,GAAG,MACHF,KAAK,SACL8lB,IAAI,IACJ4U,KAAK,IACLxC,SAAUvpB,KAAK0rB,gBACf/J,UAAU,eACV3S,YAAY,MACZ9I,MAAOhT,IAGX8mB,EAAAtd,EAAAf,cAAA,+BAAuB+E,GACvBsZ,EAAAtd,EAAAf,cAAA,gCAAwBiF,GAExBoZ,EAAAtd,EAAAf,cAAA,UAAQvR,SAAUyhC,EAAepC,QAASzpB,KAAK2rB,gBAA/C,iBA3ChBF,EAAA,CAAwCxR,aA4DzBiI,eATS,SAACjU,GACrB,MAAO,CACH5a,MAAO4a,EAAMsE,QAAQC,QAAQnf,MAC7BC,OAAQ2a,EAAMsE,QAAQC,QAAQlf,OAC9Bu4B,eAAgB5d,EAAMjB,MAAMgI,SAAWT,MAA2BA,GAClEqX,cAAe3d,EAAMljB,SAAS2b,SAIvBwb,CAA4EuJ,IC5C9EO,GAAb,SAAAnB,GAAA,SAAAmB,IAAA,IAAAlB,EAAA/qB,EAAAE,OAAAC,GAAA,EAAAD,CAAAD,KAAAgsB,GAAA,QAAAjB,EAAApmB,UAAA1D,OAAA+pB,EAAA,IAAAhkB,MAAA+jB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAAtmB,UAAAsmB,GAAA,OAAAlrB,EAAAE,OAAAma,GAAA,EAAAna,CAAAD,MAAA8qB,EAAA7qB,OAAAoa,GAAA,EAAApa,CAAA+rB,IAAAziB,KAAA7E,MAAAomB,EAAA,CAAA9qB,MAAAhG,OAAAgxB,MACI/c,MAAQ,CACJ3b,UAAW,IACXC,WAAY,IACZC,gBAAiB,GACjBC,gBAAiB,EACjBC,cAAe,EACfC,gBAAiB,EACjBC,qBAAqB,EACrBC,qBAAqB,EACrBC,uBAAuB,EACvBC,sBAAsB,EACtBC,yBAAyB,GAZjC+M,EAeIksB,uBAAyB,WAAM,IACnB3J,EAAaviB,EAAKoa,MAAlBmI,SADmBvB,EAcvBhhB,EAAKkO,MAXL3b,EAHuByuB,EAGvBzuB,UACAC,EAJuBwuB,EAIvBxuB,WACAC,EALuBuuB,EAKvBvuB,gBACAC,EANuBsuB,EAMvBtuB,gBACAC,EAPuBquB,EAOvBruB,cACAC,EARuBouB,EAQvBpuB,gBACAC,EATuBmuB,EASvBnuB,oBACAC,EAVuBkuB,EAUvBluB,oBACAC,EAXuBiuB,EAWvBjuB,sBACAC,EAZuBguB,EAYvBhuB,qBACAC,EAbuB+tB,EAavB/tB,wBAGJsvB,EACInwB,GACI4N,EAAKoa,MAAM9oB,KACX0O,EAAKoa,MAAM5oB,GACXe,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,KA7ChB+M,EAkDImsB,sBAAwB,SAACluB,GACrB+B,EAAK4b,SAAS,CAAErpB,UAAW65B,WAAWnuB,EAAMiqB,OAAO/hB,UAnD3DnG,EAsDIqsB,uBAAyB,SAACpuB,GACtB+B,EAAK4b,SAAS,CAAEppB,WAAY45B,WAAWnuB,EAAMiqB,OAAO/hB,UAvD5DnG,EA0DIssB,4BAA8B,SAACruB,GAC3B+B,EAAK4b,SAAS,CAAEnpB,gBAAiB25B,WAAWnuB,EAAMiqB,OAAO/hB,UA3DjEnG,EA8DIusB,4BAA8B,SAACtuB,GAC3B+B,EAAK4b,SAAS,CAAElpB,gBAAiB05B,WAAWnuB,EAAMiqB,OAAO/hB,UA/DjEnG,EAkEIwsB,0BAA4B,SAACvuB,GACzB+B,EAAK4b,SAAS,CAAEjpB,cAAey5B,WAAWnuB,EAAMiqB,OAAO/hB,UAnE/DnG,EAsEIysB,4BAA8B,SAACxuB,GAC3B+B,EAAK4b,SAAS,CAAEhpB,gBAAiBw5B,WAAWnuB,EAAMiqB,OAAO/hB,UAvEjEnG,EA0EI0sB,gCAAkC,SAACzuB,GAC/B+B,EAAK4b,SAAS,CAAE/oB,oBAAqBoL,EAAMiqB,OAAOyE,WA3E1D3sB,EA8EI4sB,0BAA4B,SAAC3uB,GACzB+B,EAAK4b,SAAS,CAAE9oB,oBAAqBmL,EAAMiqB,OAAOyE,WA/E1D3sB,EAkFI6sB,4BAA8B,SAAC5uB,GAC3B+B,EAAK4b,SAAS,CAAE7oB,sBAAuBkL,EAAMiqB,OAAOyE,WAnF5D3sB,EAsFI8sB,2BAA6B,SAAC7uB,GAC1B+B,EAAK4b,SAAS,CAAE5oB,qBAAsBiL,EAAMiqB,OAAOyE,WAvF3D3sB,EA0FI+sB,8BAAgC,SAAC9uB,GAC7B+B,EAAK4b,SAAS,CAAE3oB,wBAAyBgL,EAAMiqB,OAAOyE,WA3F9D3sB,EAAA,OAAAE,OAAAqrB,GAAA,EAAArrB,CAAA+rB,EAAAnB,GAAA5qB,OAAAsrB,GAAA,EAAAtrB,CAAA+rB,EAAA,EAAAlD,IAAA,SAAA5iB,MAAA,WA8Fa,IAAAiW,EAC+Bnc,KAAKma,MAAjC4S,EADH5Q,EACG4Q,cAAeC,EADlB7Q,EACkB6Q,SAEvB,OACIhT,EAAAtd,EAAAf,cAAAqe,EAAAtd,EAAA8sB,SAAA,KACKwD,GACGhT,EAAAtd,EAAAf,cAACsxB,GAAD,CAAerD,UAAW9P,GAAUqQ,MAAON,KAAK,WAC5C7P,EAAAtd,EAAAf,cAAA,uCACAqe,EAAAtd,EAAAf,cAAA,2FACAqe,EAAAtd,EAAAf,cAAA,iDAIRqe,EAAAtd,EAAAf,cAAA,OAAKgmB,UAAU,QACX3H,EAAAtd,EAAAf,cAAA,SAAOmwB,QAAQ,cAAf,oBACA9R,EAAAtd,EAAAf,cAAA,SACIpK,GAAG,aACHF,KAAK,SACL06B,KAAK,MACLxC,SAAUvpB,KAAKksB,sBACfld,YAAY,aACZ9I,MAAOlG,KAAKiO,MAAM3b,YAEtB0nB,EAAAtd,EAAAf,cAAA,SAAOmwB,QAAQ,eAAf,qBACA9R,EAAAtd,EAAAf,cAAA,SACIpK,GAAG,cACHF,KAAK,SACL06B,KAAK,MACLxC,SAAUvpB,KAAKosB,uBACfpd,YAAY,cACZ9I,MAAOlG,KAAKiO,MAAM1b,aAEtBynB,EAAAtd,EAAAf,cAAA,SAAOmwB,QAAQ,yBAAf,gCACA9R,EAAAtd,EAAAf,cAAA,SACIpK,GAAG,wBACHF,KAAK,SACL06B,KAAK,MACLxC,SAAUvpB,KAAKqsB,4BACfrd,YAAY,oBACZ9I,MAAOlG,KAAKiO,MAAMzb,kBAEtBwnB,EAAAtd,EAAAf,cAAA,SAAOmwB,QAAQ,yBAAf,gCACA9R,EAAAtd,EAAAf,cAAA,SACIpK,GAAG,wBACHF,KAAK,SACL06B,KAAK,MACLxC,SAAUvpB,KAAKssB,4BACftd,YAAY,oBACZ9I,MAAOlG,KAAKiO,MAAMxb,kBAGtBunB,EAAAtd,EAAAf,cAAA,SAAOmwB,QAAQ,uBAAf,sCACA9R,EAAAtd,EAAAf,cAAA,SACIpK,GAAG,sBACHF,KAAK,SACL06B,KAAK,MACLxC,SAAUvpB,KAAKusB,0BACfvd,YAAY,iBACZ9I,MAAOlG,KAAKiO,MAAMvb,gBAGtBsnB,EAAAtd,EAAAf,cAAA,SAAOmwB,QAAQ,yBAAf,wCACA9R,EAAAtd,EAAAf,cAAA,SACIpK,GAAG,wBACHF,KAAK,SACL06B,KAAK,MACLxC,SAAUvpB,KAAKwsB,4BACfxd,YAAY,mBACZ9I,MAAOlG,KAAKiO,MAAMtb,kBAGtBqnB,EAAAtd,EAAAf,cAAA,SACIutB,MAAM,gKAGNlP,EAAAtd,EAAAf,cAAA,SACItK,KAAK,WACLq7B,QAAS1sB,KAAKiO,MAAMrb,oBACpB22B,SAAUvpB,KAAKysB,kCAPvB,gCAYAzS,EAAAtd,EAAAf,cAAA,aACIqe,EAAAtd,EAAAf,cAAA,SACItK,KAAK,WACLq7B,QAAS1sB,KAAKiO,MAAMpb,oBACpB02B,SAAUvpB,KAAK2sB,4BAJvB,+CASA3S,EAAAtd,EAAAf,cAAA,aACIqe,EAAAtd,EAAAf,cAAA,SACItK,KAAK,WACLq7B,QAAS1sB,KAAKiO,MAAMnb,sBACpBy2B,SAAUvpB,KAAK4sB,8BAJvB,iDASA5S,EAAAtd,EAAAf,cAAA,aACIqe,EAAAtd,EAAAf,cAAA,SACItK,KAAK,WACLq7B,QAAS1sB,KAAKiO,MAAMlb,qBACpBw2B,SAAUvpB,KAAK6sB,6BAJvB,gEASA7S,EAAAtd,EAAAf,cAAA,aACIqe,EAAAtd,EAAAf,cAAA,SACItK,KAAK,WACLq7B,QAAS1sB,KAAKiO,MAAMjb,wBACpBu2B,SAAUvpB,KAAK8sB,gCAJvB,8EASA9S,EAAAtd,EAAAf,cAAA,UAAQvR,SAAU2iC,EAAetD,QAASzpB,KAAKisB,wBAA/C,sBArNpBD,EAAA,CAAkC/R,aAoOnBiI,eANS,SAACjU,GACrB,MAAO,CACH8e,eAAgB9e,EAAMjB,MAAMgI,SAAWV,MAA2BA,KAI3D4N,CAAqE8J,yBC3PvEkB,GAAb,SAAArC,GAAA,SAAAqC,IAAA,OAAAjtB,OAAAC,GAAA,EAAAD,CAAAD,KAAAktB,GAAAjtB,OAAAma,GAAA,EAAAna,CAAAD,KAAAC,OAAAoa,GAAA,EAAApa,CAAAitB,GAAAxoB,MAAA1E,KAAA2E,YAAA,OAAA1E,OAAAqrB,GAAA,EAAArrB,CAAAitB,EAAArC,GAAA5qB,OAAAsrB,GAAA,EAAAtrB,CAAAitB,EAAA,EAAApE,IAAA,SAAA5iB,MAAA,WACa,IAAAiW,EACgCnc,KAAKma,MAAlCgT,EADHhR,EACGgR,gBAAiB3B,EADpBrP,EACoBqP,QAEzB,OACIxR,EAAAtd,EAAAf,cAAA,OAAKgmB,UAAW/lB,KAAMzR,KAAMyR,MAAO,CAAEC,QAAS2vB,EAAU,OAAS,SACxC,OAApB2B,GAA4BnT,EAAAtd,EAAAf,cAACyxB,GAAD,CAAc/7B,KAAK,WAAWE,GAAI47B,SAN/ED,EAAA,CAAwCjT,aAkBzBiI,eANS,SAACjU,GACrB,MAAO,CACHkf,gBAAiBlf,EAAMljB,SAAS2b,SAIzBwb,CAA4EgL,cCpBtEG,iNACjBpf,MAAQ,CACJqf,oBAAoB,KAGxBjE,YAAc,WACVtpB,EAAK4b,SAAS,CAAE2R,oBAAqBvtB,EAAKkO,MAAMqf,wBAGpDC,YAAc,WACVxtB,EAAK4b,SAAS,CAAE2R,oBAAoB,OAGxChE,aAAe,SAAC1yB,GACZmJ,EAAKoa,MAAMoP,SAAS3yB,8EAepB,OACIojB,EAAAtd,EAAAf,cAAAqe,EAAAtd,EAAA8sB,SAAA,KACIxP,EAAAtd,EAAAf,cAAA,UAAQ8tB,QAASzpB,KAAKqpB,YAAaH,MAAM,gBACrClP,EAAAtd,EAAAf,cAAA,KAAGgmB,UAAU,kBAAb,eAEH3hB,KAAKiO,MAAMqf,mBACRtT,EAAAtd,EAAAf,cAAA,OAAKC,MAjBoB,CACjCgmB,SAAU,WACV+F,OAAQ,IAgBI3N,EAAAtd,EAAAf,cAAA,OAAKC,MAdc,CAC/BgmB,SAAU,QACVpB,IAAK,MACLwB,MAAO,MACPC,OAAQ,MACR3B,KAAM,OASyBmJ,QAASzpB,KAAKutB,cACjCvT,EAAAtd,EAAAf,cAAC6xB,GAAA,aAAD,CAAc52B,MAAOoJ,KAAKma,MAAMvjB,MAAO62B,cAAc,EAAMlE,SAAUvpB,KAAKspB,gBAE9E,aAvCqBrP,kCC8B5ByT,GAAb,SAAA7C,GAAA,SAAA6C,IAAA,IAAA5C,EAAA/qB,EAAAE,OAAAC,GAAA,EAAAD,CAAAD,KAAA0tB,GAAA,QAAA3C,EAAApmB,UAAA1D,OAAA+pB,EAAA,IAAAhkB,MAAA+jB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAAtmB,UAAAsmB,GAAA,OAAAlrB,EAAAE,OAAAma,GAAA,EAAAna,CAAAD,MAAA8qB,EAAA7qB,OAAAoa,GAAA,EAAApa,CAAAytB,IAAAnkB,KAAA7E,MAAAomB,EAAA,CAAA9qB,MAAAhG,OAAAgxB,MACI/c,MAAQ,CACJpV,SAAU,OAFlBkH,EAKI4tB,oBAAsB,YAElBrL,EADqBviB,EAAKoa,MAAlBmI,UACCnuB,OAPjB4L,EAUI6tB,YAAc,SAACzK,GAAkB,IAAAhH,EACuBpc,EAAKoa,MAAjDhF,EADqBgH,EACrBhH,aAAc0Y,EADO1R,EACP0R,gBAAiBvL,EADVnG,EACUmG,SAEnCuL,GACAvL,EAASjrB,GAAmB8d,QAA8BxT,EAAWksB,EAAgBt8B,GAAI4xB,KAdrGpjB,EAkBI+tB,gCAAkC,WAC9B,IAAM3K,EAAgB,CAAE1oB,SAAKkH,EAAWnK,YAAQmK,GAChD5B,EAAK6tB,YAAYzK,IApBzBpjB,EAuBIguB,kBAAoB,WAAM,IAAA1R,EACgBtc,EAAKoa,MAAnC0T,EADcxR,EACdwR,gBAAiBvL,EADHjG,EACGiG,cACD3gB,IAApBksB,GACAvL,EAAShuB,OA1BrByL,EA8BIiuB,iBAAmB,SAAChwB,GAA+C,IAAA0e,EACzB3c,EAAKoa,MAAnC0T,EADuDnR,EACvDmR,gBAAiBvL,EADsC5F,EACtC4F,SACnBjuB,EAAO2J,EAAMiqB,OAAO/hB,MAAM+nB,YACRtsB,IAApBksB,GACAvL,EAASluB,GAA6BC,KAlClD0L,EAsCImuB,mBAAqB,SAAClwB,GAA+C,IACzDskB,EAAaviB,EAAKoa,MAAlBmI,SACAzpB,EAAakH,EAAKkO,MAAlBpV,SACFD,EAASoF,EAAMiqB,OAAO/hB,MAC5Boc,EAAS3pB,GAAiBC,EAAQC,KA1C1CkH,EA6CIouB,kBAAoB,SAACC,EAAmB/6B,EAAeC,GAAmB,IAC9Du6B,EAAoB9tB,EAAKoa,MAAzB0T,gBAER,QAAwBlsB,IAApBksB,EAA+B,CAC/B,IAAMj3B,EAAQi3B,GAAmBA,EAAgBj3B,MAE3CusB,EAAgB,CAAE1oB,IAAG,mBAAAT,OAAqBo0B,GAAax3B,QAAOvD,QAAOC,SAAQkE,YAAQmK,GAC3F5B,EAAK6tB,YAAYzK,KApD7BpjB,EAwDIsuB,YAAc,SAACrwB,GAA4B,IAAAqf,EACDtd,EAAKoa,MAAnC0T,EAD+BxQ,EAC/BwQ,gBAAiBvL,EADcjF,EACdiF,cACD3gB,IAApBksB,IACI7vB,EAAMie,QACNqG,EAAS9tB,MAET8tB,EAAS/tB,QA9DzBwL,EAmEIuuB,YAAc,SAACtwB,GAA4B,IAAA0f,EACD3d,EAAKoa,MAAnC0T,EAD+BnQ,EAC/BmQ,gBAAiBvL,EADc5E,EACd4E,cACD3gB,IAApBksB,IACI7vB,EAAMie,QACNqG,EAAS5tB,MAET4tB,EAAS7tB,QAzEzBsL,EA8EIwuB,gBAAkB,WAAM,IAAAnQ,EACkBre,EAAKoa,MAAnC0T,EADYzP,EACZyP,gBAAiBvL,EADLlE,EACKkE,cACD3gB,IAApBksB,GACAvL,EAAS3tB,OAjFrBoL,EAqFIyuB,kBAAoB,WAAM,IAAAnP,EACgBtf,EAAKoa,MAAnC0T,EADcxO,EACdwO,gBAAiBvL,EADHjD,EACGiD,cACD3gB,IAApBksB,GACAvL,EAAS1tB,OAxFrBmL,EA4FI0uB,sBAAwB,SAACzwB,GAA+C,IAC5DskB,EAAaviB,EAAKoa,MAAlBmI,SACFxtB,EAAMkJ,EAAMiqB,OAAO/hB,MAEzBoc,EAASztB,GAA+BC,KAhGhDiL,EAmGI2uB,mBAAqB,SAAC1wB,GAA+C,IAAA2hB,EACpC5f,EAAKoa,MAA1BvhB,EADyD+mB,EACzD/mB,OAAQ0pB,EADiD3C,EACjD2C,SACVzpB,EAAWmF,EAAMiqB,OAAO/hB,MAE9BnG,EAAK4b,SAAS,CAAE9iB,aAChBypB,EAAS3pB,GAAiBC,EAAQC,KAxG1CkH,EA2GI4uB,kBAAoB,SAAC/3B,GACjB,IAAMusB,EAAgB,CAAEvsB,MAAOA,EAAMg4B,KACrC7uB,EAAK6tB,YAAYzK,IA7GzBpjB,EAgHI8uB,uBAAyB,WACrB,IAAM1L,EAAgB,CAAEvsB,WAAO+K,GAC/B5B,EAAK6tB,YAAYzK,IAlHzBpjB,EAqHI+uB,2BAA6B,SAAC9wB,IAE1BskB,EADqBviB,EAAKoa,MAAlBmI,UACC3qB,GAA6BqG,EAAMiqB,OAAOyE,WAvH3D3sB,EA0HIgvB,iBAAmB,SAAC/wB,GAA+C,IAAAmiB,EACzBpgB,EAAKoa,MAAnC0T,EADuD1N,EACvD0N,gBAAiBvL,EADsCnC,EACtCmC,cACD3gB,IAApBksB,GACAvL,EAASvtB,GAAgCiJ,EAAMiqB,OAAOyE,WA7HlE3sB,EAAA,OAAAE,OAAAqrB,GAAA,EAAArrB,CAAAytB,EAAA7C,GAAA5qB,OAAAsrB,GAAA,EAAAtrB,CAAAytB,EAAA,EAAA5E,IAAA,SAAA5iB,MAAA,WAiIa,IAAAiiB,EAAAnoB,KAAA6gB,EAC+D7gB,KAAKma,MAAjE0T,EADHhN,EACGgN,gBAAiB74B,EADpB6rB,EACoB7rB,KAAM4D,EAD1BioB,EAC0BjoB,OAAQ4yB,EADlC3K,EACkC2K,QAAS5zB,EAD3CipB,EAC2CjpB,gBACxCiB,EAAamH,KAAKiO,MAAlBpV,SAER,OACImhB,EAAAtd,EAAAf,cAAA,OAAKgmB,UAAW/lB,KAAMzR,KAAMyR,MAAO,CAAEC,QAAS2vB,EAAU,OAAS,SAC7DxR,EAAAtd,EAAAf,cAAA,WACIqe,EAAAtd,EAAAf,cAAA,UAAQ8tB,QAASzpB,KAAK2tB,oBAAqBzE,MAAM,mBAC7ClP,EAAAtd,EAAAf,cAAA,KAAGgmB,UAAU,kBAAb,6BAGiBhgB,IAApBksB,GACG7T,EAAAtd,EAAAf,cAAAqe,EAAAtd,EAAA8sB,SAAA,KACIxP,EAAAtd,EAAAf,cAAA,UAAQ8tB,QAASzpB,KAAKquB,YAAanF,MAAM,0CACrClP,EAAAtd,EAAAf,cAAA,KAAGgmB,UAAU,kBAAb,iBAEJ3H,EAAAtd,EAAAf,cAAA,UAAQ8tB,QAASzpB,KAAKsuB,YAAapF,MAAM,6CACrClP,EAAAtd,EAAAf,cAAA,KAAGgmB,UAAU,kBAAb,oBAKXkM,GAC4B,UAAzBA,EAAgBx8B,OACfw8B,EAAgBpzB,KAAOozB,EAAgBr2B,SACpCwiB,EAAAtd,EAAAf,cAAA,UAAQ8tB,QAASzpB,KAAK8tB,gCAAiC5E,MAAM,2BACzDlP,EAAAtd,EAAAf,cAAA,KAAGgmB,UAAU,kBAAb,+BAIShgB,IAApBksB,IAAkCA,EAAgBxX,QAC/C2D,EAAAtd,EAAAf,cAAA,UACI8tB,QAASzpB,KAAKuuB,gBACdrF,MAAM,kFAENlP,EAAAtd,EAAAf,cAAA,KAAGgmB,UAAU,kBAAb,mBAIahgB,IAApBksB,GAAiCA,EAAgBxX,QAC9C2D,EAAAtd,EAAAf,cAAA,UACI8tB,QAASzpB,KAAKwuB,kBACdtF,MAAM,yFAENlP,EAAAtd,EAAAf,cAAA,KAAGgmB,UAAU,kBAAb,SAIR3H,EAAAtd,EAAAf,cAAA,UACIgmB,eAA+BhgB,IAApBksB,GAAiCA,EAAgBxX,OAASza,KAAMxR,SAAW,GACtFq/B,QAASzpB,KAAK+tB,kBACd7E,MAAM,gBAENlP,EAAAtd,EAAAf,cAAA,KAAGgmB,UAAU,kBAAb,gBAGiBhgB,IAApBksB,GACG7T,EAAAtd,EAAAf,cAAA,SACItK,KAAK,OACL6U,MAAO2nB,EAAgBx5B,MAAQ,GAC/B2a,YAAa6e,EAAgBt8B,GAC7Bg4B,SAAUvpB,KAAKguB,iBACf9E,MAAM,gCAIb2E,GAA4C,UAAzBA,EAAgBx8B,MAChC2oB,EAAAtd,EAAAf,cAAA,YACIqe,EAAAtd,EAAAf,cAAA,kBAEIqe,EAAAtd,EAAAf,cAAA,aACIqe,EAAAtd,EAAAf,cAAA,SACItK,KAAK,QACL6U,MAAM,QACNwmB,SAAUmB,EAAgB/4B,KAA+B,UAAxB+4B,EAAgB/4B,IACjDy0B,SAAUvpB,KAAKyuB,wBALvB,SASAzU,EAAAtd,EAAAf,cAAA,aACIqe,EAAAtd,EAAAf,cAAA,SACItK,KAAK,QACL6U,MAAM,SACNwmB,QAAiC,WAAxBmB,EAAgB/4B,IACzBy0B,SAAUvpB,KAAKyuB,wBALvB,UASAzU,EAAAtd,EAAAf,cAAA,aACIqe,EAAAtd,EAAAf,cAAA,SACItK,KAAK,QACL6U,MAAM,UACNwmB,QAAiC,YAAxBmB,EAAgB/4B,IACzBy0B,SAAUvpB,KAAKyuB,wBALvB,cAcfZ,GAA4C,UAAzBA,EAAgBx8B,MAChC2oB,EAAAtd,EAAAf,cAAAqe,EAAAtd,EAAA8sB,SAAA,KACIxP,EAAAtd,EAAAf,cAAA,WACIqe,EAAAtd,EAAAf,cAAA,aACIqe,EAAAtd,EAAAf,cAAA,SAAOtK,KAAK,WAAWq7B,QAAS13B,EAAMu0B,SAAUvpB,KAAK+uB,mBADzD,QAIA/U,EAAAtd,EAAAf,cAACqzB,GAAD,CACIp4B,MAAQi3B,GAAmBA,EAAgBj3B,OAAU,UACrD2yB,SAAUvpB,KAAK2uB,oBAElBd,GAAmBA,EAAgBj3B,OAChCojB,EAAAtd,EAAAf,cAAA,UAAQ8tB,QAASzpB,KAAK6uB,uBAAwB3F,MAAM,gBAChDlP,EAAAtd,EAAAf,cAAA,KAAGgmB,UAAU,kBAAb,kBAGR3H,EAAAtd,EAAAf,cAAA,aACIqe,EAAAtd,EAAAf,cAAA,SACItK,KAAK,WACLq7B,QAAS90B,EACT2xB,SAAUvpB,KAAK8uB,6BAJvB,wBAWZ9U,EAAAtd,EAAAf,cAAA,WACIqe,EAAAtd,EAAAf,cAAA,sBAEIqe,EAAAtd,EAAAf,cAAA,aACIqe,EAAAtd,EAAAf,cAAA,SACItK,KAAK,QACL6U,MAAM,MACNwmB,QAAsB,QAAb7zB,EACT0wB,SAAUvpB,KAAK0uB,qBALvB,OASA1U,EAAAtd,EAAAf,cAAA,aACIqe,EAAAtd,EAAAf,cAAA,SACItK,KAAK,QACL6U,MAAM,OACNwmB,QAAsB,SAAb7zB,EACT0wB,SAAUvpB,KAAK0uB,qBALvB,QASA1U,EAAAtd,EAAAf,cAAA,aACIqe,EAAAtd,EAAAf,cAAA,SACItK,KAAK,QACL6U,MAAM,OACNwmB,QAAsB,SAAb7zB,EACT0wB,SAAUvpB,KAAK0uB,qBALvB,UAYR1U,EAAAtd,EAAAf,cAAA,WACIqe,EAAAtd,EAAAf,cAAA,SAAOtK,KAAK,OAAO2d,YAAY,YAAY9I,MAAOtN,EAAQ2wB,SAAUvpB,KAAKkuB,sBAE7ElU,EAAAtd,EAAAf,cAAA,OAAKgmB,UAAW/lB,KAAMvR,QACjB2V,KAAKma,MAAM9vB,OAAO4iB,IAAI,SAAAgiB,GACnB,OACIjV,EAAAtd,EAAAf,cAAA,OACImtB,IAAKmG,EAAG19B,GACRkN,IAAG,mBAAAzE,OAAqBi1B,EAAG56B,MAC3B66B,aAAYD,EAAG57B,MACf87B,cAAaF,EAAG37B,OAChBm2B,QAAS,kBAAMtB,EAAKgG,kBAAkBc,EAAG56B,KAAM46B,EAAG57B,MAAO47B,EAAG37B,SAC5DyuB,IAAKkN,EAAG56B,eA/SxCq5B,EAAA,CAAkCzT,aA6UnBiI,eApBS,SAACjU,GACrB,IAAM4f,OACqClsB,IAAvCsM,EAAMsE,QAAQC,QAAQ2C,mBAAsExT,IAAxCsM,EAAMsE,QAAQC,QAAQC,cACpExE,EAAMsE,QAAQC,QAAQpM,OAAO6H,EAAMsE,QAAQC,QAAQ2C,cAAclH,EAAMsE,QAAQC,QAAQC,oBACvF9Q,EAEJwT,EAAelH,EAAMsE,QAAQC,QAAQ2C,aAE3C,MAAO,CACHR,gBAAiB1G,EAAM0L,KAAKhF,gBAC5BkZ,kBACA74B,KAAM64B,GAA4C,UAAzBA,EAAgBx8B,MAAmBw8B,EAAgB74B,OAAgB,EAC5FmgB,eACA9qB,OAAQ4jB,EAAM5jB,OAAOA,OACrBuO,OAAQqV,EAAM5jB,OAAOuO,OACrBqK,YAAagL,EAAMsE,QAAQC,QAAQvP,YACnCrL,gBAAiBqW,EAAMsE,QAAQC,QAAQ5a,kBAIhCsqB,CAA4EwL,yGC/V3F0B,0BAAeC,MAeR,IAAMC,GAAb,SAAAzE,GAAA,SAAAyE,IAAA,IAAAxE,EAAA/qB,EAAAE,OAAAC,GAAA,EAAAD,CAAAD,KAAAsvB,GAAA,QAAAvE,EAAApmB,UAAA1D,OAAA+pB,EAAA,IAAAhkB,MAAA+jB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAAtmB,UAAAsmB,GAAA,OAAAlrB,EAAAE,OAAAma,GAAA,EAAAna,CAAAD,MAAA8qB,EAAA7qB,OAAAoa,GAAA,EAAApa,CAAAqvB,IAAA/lB,KAAA7E,MAAAomB,EAAA,CAAA9qB,MAAAhG,OAAAgxB,MACIuE,kBAAoB,SAACnpB,GAAsC,IAC/CopB,EAAezvB,EAAKoa,MAApBqV,WACR,GAAmB,OAAfA,EAAqB,OAAOppB,EAEhC,IAAMqpB,EAAS,IAAMC,KAAIF,GAErBG,EAA4C,GAEhD,IAAK,IAAM/5B,KAAUwQ,EAAQ,CACzB,IAAIwpB,EAAY3vB,OAAAwG,EAAA,EAAAxG,CAAA,GAAQmG,EAAOxQ,IAC/B,IAAK,IAAMC,KAAW+5B,EAAc,CAChC,IAAIt4B,EAAS2I,OAAAwG,EAAA,EAAAxG,CAAA,GAAQ2vB,EAAa/5B,IAClC,GAAuB,UAAnByB,EAAUjG,KAAkB,CAC5B,IAAIoJ,EAAMnD,EAAUmD,KAAO,GACvBA,EAAIo1B,SAASJ,GACbh1B,EAAMA,EAAI8rB,QAAQkJ,EAAQ,IAE1Bn4B,EAAU8Y,QAAS,EAGvB9Y,EAAUmD,IAAMA,EAAI8rB,QAAQ,mBAAoB,IAEpDqJ,EAAa/5B,GAAWyB,EAE5Bq4B,EAAe/5B,GAAUg6B,EAG7B,OAAOD,GA5Bf5vB,EA+BI+vB,iBAAmB,WAAM,IAAA3T,EAC+Dpc,EAAKoa,MAAjF9mB,EADa8oB,EACb9oB,MAAOC,EADM6oB,EACN7oB,OAAQkC,EADF2mB,EACE3mB,WAAYyN,EADdkZ,EACclZ,YAAauN,EAD3B2L,EAC2B3L,UAAWpK,EADtC+V,EACsC/V,OAAQN,EAD9CqW,EAC8CrW,aAI7DnS,EAAO,CACTN,QACAC,SACAkC,aACAyN,cACAuN,YACApK,OARmBrG,EAAKwvB,kBAAkBnpB,GAS1CN,gBAGAiqB,EAAOjtB,KAAKgL,UAAUna,EAAM,KAAM,GAClCgQ,EAAO,IAAIqsB,KAAK,CAACD,GAAO,CAAE1+B,KAAM,iBAEpCgK,GADUiB,OAAOC,IAAI6H,gBAAgBT,GACnB,iBAjD1B5D,EAoDIkwB,gBAAkB,WAAM,IAAA5T,EACqCtc,EAAKoa,MAAtDlX,EADYoZ,EACZpZ,YAAauN,EADD6L,EACC7L,UAAWpK,EADZiW,EACYjW,OAAQN,EADpBuW,EACoBvW,aAElCoqB,EAAiBnwB,EAAKwvB,kBAAkBnpB,GAE1C+pB,EAAiC,GACjCC,EAAS,CAAC,UAAW,cACrBC,EAAwC,GAPxB5qB,GAAA,EAAAC,GAAA,EAAAC,OAAAhE,EAAA,IAQpB,QAAAiE,EAAAC,EAAmBC,EAAnBC,OAAAC,cAAAP,GAAAG,EAAAC,EAAA9B,QAAAkC,MAAAR,GAAA,EAAiC,KAAtBsJ,EAAsBnJ,EAAAM,MACvB4J,EAAY1J,EAAOnD,EAAY,IAAI8L,GACnC1a,EAAOyb,EAAUzb,MAAQyb,EAAUve,GACnC8C,KAAQg8B,IACVD,EAAOhwB,KAAK/L,GACW,UAAnByb,EAAUze,MACV++B,EAAOhwB,KAAP,GAAApG,OAAe3F,EAAf,YAEJg8B,EAAUh8B,IAAQ,IAhBN,MAAAiS,GAAAZ,GAAA,EAAAC,EAAAW,EAAA,YAAAb,GAAA,MAAAI,EAAAU,QAAAV,EAAAU,SAAA,WAAAb,EAAA,MAAAC,GAmBpBwqB,EAAQ/vB,KAAKgwB,GAnBO,IAAAxd,GAAA,EAAAC,GAAA,EAAAC,OAAAnR,EAAA,IAqBpB,QAAAqR,EAAAD,EAAqB9P,EAArB8C,OAAAC,cAAA4M,GAAAI,EAAAD,EAAAhP,QAAAkC,MAAA2M,GAAA,EAAkC,KAAvBhd,EAAuBod,EAAA9M,MAG1BoqB,EAA+B,CAAC16B,EAFzB4a,EAAU5a,GAE4B3B,OAE7Cs8B,EAAOtwB,OAAAwG,EAAA,EAAAxG,CAAA,GAAQowB,GALWphB,GAAA,EAAAC,GAAA,EAAAC,OAAAxN,EAAA,IAM9B,QAAA0N,EAAAD,EAAsBtJ,EAAtBC,OAAAC,cAAAiJ,GAAAI,EAAAD,EAAArL,QAAAkC,MAAAgJ,GAAA,EAAoC,KAAzBpZ,EAAyBwZ,EAAAnJ,MAC1BsqB,EAAYpqB,EAAOxQ,GAAQC,GAC3BxB,EAAOm8B,EAAUn8B,MAAQm8B,EAAUj/B,GAEzC,IAAKg/B,EAAQl8B,GAAO,CAChB,IAAIyb,EAAYogB,EAAet6B,GAAQC,GAChB,SAAnBia,EAAUze,KACVi/B,EAAQlwB,KAAK0P,EAAU5J,OACG,UAAnB4J,EAAUze,OACjBi/B,EAAQlwB,KAAK0P,EAAUrV,KAAO,IAC9B61B,EAAQlwB,KAAK0P,EAAUM,OAAS,IAAM,MAE1CmgB,EAAQl8B,IAAQ,IAlBM,MAAAiS,GAAA4I,GAAA,EAAAC,EAAA7I,EAAA,YAAA2I,GAAA,MAAAG,EAAA7I,QAAA6I,EAAA7I,SAAA,WAAA2I,EAAA,MAAAC,GAqB9BghB,EAAQ/vB,KAAKkwB,IA1CG,MAAAhqB,GAAAuM,GAAA,EAAAC,EAAAxM,EAAA,YAAAsM,GAAA,MAAAG,EAAAxM,QAAAwM,EAAAxM,SAAA,WAAAsM,EAAA,MAAAC,GA6CpB,IAAI2d,EAAMC,KAAKC,QAAQR,GACnBxsB,EAAO,IAAIqsB,KAAK,CAACS,GAAM,CAAEp/B,KAAM,iBAEnCgK,GADUiB,OAAOC,IAAI6H,gBAAgBT,GACnB,gBApG1B5D,EAuGI6wB,cAAgB,SAACC,EAAmB54B,EAAY64B,EAA0C54B,GAAyB,IAAAwkB,EAChC3c,EAAKoa,MAA5EmI,EADuG5F,EACvG4F,SAAUkN,EAD6F9S,EAC7F8S,WAAYppB,EADiFsW,EACjFtW,OAAQN,EADyE4W,EACzE5W,aAAc0K,EAD2DkM,EAC3DlM,UAAWvN,EADgDyZ,EAChDzZ,YAC/D,GAAmB,OAAfusB,EAAJ,CAEA,IAAIuB,EAAS,IAAIC,WACjBD,EAAOE,WAAWh5B,EAAM,SACxB84B,EAAOxyB,OAAS,SAASJ,GACrB,GAAiB,OAAbA,EAAE8pB,OAAN,CAEA,IAAIt0B,EAAO,KACL87B,EAAS,IAAMC,KAAIF,GAEzB,GAAkB,qBAAdv3B,EAAK5G,KAIL,IAAK,IAAMuE,KAFXjC,EAAOmP,KAAKC,MAAO5E,EAAE8pB,OAAeiJ,SAEV9qB,OAAQ,CAC9B,IAAM6M,EAAkCtf,EAAKyS,OAAOxQ,GACpD,IAAK,IAAMC,KAAWod,EAAY,CAC9B,IAAInD,EAAYmD,EAAWpd,GAC3B,GAAuB,UAAnBia,EAAUze,KAAkB,CAC5B,IAAI8/B,EAAWrhB,EAAUM,SAAU,EAEnCN,EAAUrV,IAAV,mBAAAT,OAAmC8V,EAAUrV,KAA7CT,OAAmDm3B,EAAW,GAAK1B,UAC5D3f,EAAUM,cAI1B,GAAkB,aAAdnY,EAAK5G,KAAqB,CAEjC,IAAM8+B,EAAUO,KAAK3tB,MAAO5E,EAAE8pB,OAAeiJ,OAAQ,CAAEd,QAAQ,IAE3DgB,EAA2B,GAC3BC,EAAgC,GAChC3b,EAAuC,GANVpG,GAAA,EAAAC,GAAA,EAAAC,OAAA7N,EAAA,IAQjC,QAAA+N,EAAAD,EAAkB0gB,EAAQx8B,KAA1BoS,OAAAC,cAAAsJ,GAAAI,EAAAD,EAAA1L,QAAAkC,MAAAqJ,GAAA,EAAgC,KAArBgiB,EAAqB5hB,EAAAxJ,MACtBrS,EAAiB,CACnBtC,GAAI+/B,EAAG,SAAe7/B,IAAQC,WAC9BuC,MAAOq9B,EAAG,YAAkB,GAGhC5b,EAAU7hB,EAAKtC,IAAf0O,OAAAwG,EAAA,EAAAxG,CAAA,GACOmG,EAAOvS,EAAKtC,MAAMif,EAAY3c,EAAKtC,GAAK0R,EAAY,KAG3DmuB,EAAehxB,KAAKvM,EAAKtC,IACzB8/B,EAAax9B,EAAKtC,IAAMsC,EAXI,IAAA0iB,GAAA,EAAAC,GAAA,EAAAC,OAAA9U,EAAA,IAa5B,QAAA+U,EAAAC,EAAsB7Q,EAAtBC,OAAAC,cAAAuQ,GAAAG,EAAAC,EAAA5S,QAAAkC,MAAAsQ,GAAA,EAAoC,KAAzB1gB,EAAyB6gB,EAAAxQ,MAC1B4J,EAAY4F,EAAU7hB,EAAKtC,IAAIsE,GAC/BxB,EAAOyb,EAAUzb,MAAQyb,EAAUve,GAEzC,GAAI+/B,EAAIj9B,GACJ,GAAuB,UAAnByb,EAAUze,KAAkB,CAC5B,IAAM8/B,EAAqC,MAA1BG,EAAG,GAAAt3B,OAAI3F,EAAJ,YACdoG,EAAM62B,EAAIj9B,GAEhBqhB,EAAU7hB,EAAKtC,IAAIsE,GAAnBoK,OAAAwG,EAAA,EAAAxG,CAAA,GACO6P,EADP,CAEIrV,IAAG,mBAAAT,OAAqBS,GAArBT,OAA2Bm3B,EAAW,GAAK1B,SAExB,SAAnB3f,EAAUze,OACjBqkB,EAAU7hB,EAAKtC,IAAIsE,GAAnBoK,OAAAwG,EAAA,EAAAxG,CAAA,GACO6P,EADP,CAEI5J,MAAOorB,EAAIj9B,OA7BC,MAAAiS,GAAAkQ,GAAA,EAAAC,EAAAnQ,EAAA,YAAAiQ,GAAA,MAAAI,EAAApQ,QAAAoQ,EAAApQ,SAAA,WAAAiQ,EAAA,MAAAC,KARC,MAAAnQ,GAAAiJ,GAAA,EAAAC,EAAAlJ,EAAA,YAAAgJ,GAAA,MAAAG,EAAAlJ,QAAAkJ,EAAAlJ,SAAA,WAAAgJ,EAAA,MAAAC,GA4CjC7b,EAAO,CACHsP,YAAamuB,EACb5gB,UAAW6gB,EACXjrB,OAAQsP,GAIH,OAAT/hB,GACA2uB,EAAS5uB,GAAkBC,MAGnCo9B,EAAOvyB,QAAU,WACb8jB,EAASlxB,GAAe,QAAS,4BAGrC8G,EAAKD,EAAK5D,QA9LlB0L,EAiMIwxB,aAAe,SAACC,EAAsBt5B,GAClCA,KAlMR6H,EAAA,OAAAE,OAAAqrB,GAAA,EAAArrB,CAAAqvB,EAAAzE,GAAA5qB,OAAAsrB,GAAA,EAAAtrB,CAAAqvB,EAAA,EAAAxG,IAAA,SAAA5iB,MAAA,WAqMa,IACGslB,EAAYxrB,KAAKma,MAAjBqR,QAER,OACIxR,EAAAtd,EAAAf,cAAA,OAAKgmB,UAAW/lB,KAAMzR,KAAMyR,MAAO,CAAEC,QAAS2vB,EAAU,OAAS,SAC7DxR,EAAAtd,EAAAf,cAAA,yLAIAqe,EAAAtd,EAAAf,cAAA,UAAQ8tB,QAASzpB,KAAK8vB,kBAClB9V,EAAAtd,EAAAf,cAAA,KAAGgmB,UAAU,kBAAb,kBADJ,aAGA3H,EAAAtd,EAAAf,cAAA,UAAQ8tB,QAASzpB,KAAKiwB,iBAClBjW,EAAAtd,EAAAf,cAAA,KAAGgmB,UAAU,kBAAb,kBADJ,YAIA3H,EAAAtd,EAAAf,cAAA,gEAEAqe,EAAAtd,EAAAf,cAAC81B,GAAA,SAAD,CACIC,OAAQ,CACJC,QAAS3xB,KAAK4wB,cACdgB,OAAQ5xB,KAAKuxB,cAEjBM,kBAAmB,CAAC,WAAY,2BA5NpDvC,EAAA,CAAyCrV,aAgP1BiI,eAbS,SAACjU,GACrB,MAAO,CACHuhB,WAAYvhB,EAAMjB,MAAMtG,OACxBrT,MAAO4a,EAAMsE,QAAQC,QAAQnf,MAC7BC,OAAQ2a,EAAMsE,QAAQC,QAAQlf,OAC9BkC,WAAYyY,EAAMsE,QAAQC,QAAQhd,WAClCyN,YAAagL,EAAMsE,QAAQC,QAAQvP,YACnCuN,UAAWvC,EAAMsE,QAAQC,QAAQhC,UACjC1K,aAAcmI,EAAMsE,QAAQC,QAAQ1M,aACpCM,OAAQ6H,EAAMsE,QAAQC,QAAQpM,SAIvB8b,CAA4EoN,yBCxP9EwC,GAAb,SAAAjH,GAAA,SAAAiH,IAAA,IAAAhH,EAAA/qB,EAAAE,OAAAC,GAAA,EAAAD,CAAAD,KAAA8xB,GAAA,QAAA/G,EAAApmB,UAAA1D,OAAA+pB,EAAA,IAAAhkB,MAAA+jB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAAtmB,UAAAsmB,GAAA,OAAAlrB,EAAAE,OAAAma,GAAA,EAAAna,CAAAD,MAAA8qB,EAAA7qB,OAAAoa,GAAA,EAAApa,CAAA6xB,IAAAvoB,KAAA7E,MAAAomB,EAAA,CAAA9qB,MAAAhG,OAAAgxB,MACI+G,gBAAkB,WAAM,IAAA5V,EAC0Cpc,EAAKoa,MAA3DhF,EADYgH,EACZhH,aAAc6c,EADF7V,EACE6V,YAAalsB,EADfqW,EACerW,aAAcwc,EAD7BnG,EAC6BmG,SACjD,GAA4B,IAAxBxc,EAAa7E,QAAiC,OAAjBkU,EAAjC,CAEA,IAAI8c,EAAYnsB,EAAaA,EAAa7E,OAAS,GACnD,QAAoBU,IAAhBqwB,EAA2B,CAC3B,IAAIE,EAAMpsB,EAAamQ,QAAQ+b,EAAYzgC,IACvC2gC,EAAM,IAAGD,EAAYnsB,EAAaosB,EAAM,IAGhD5P,EAAS7qB,GAA0B0d,EAAe6c,GAAeA,EAAY9b,WAAa,EAAO+b,MAXzGlyB,EAcIoyB,gBAAkB,WAAM,IAAA9V,EAC0Ctc,EAAKoa,MAA3DhF,EADYkH,EACZlH,aAAc6c,EADF3V,EACE2V,YAAalsB,EADfuW,EACevW,aAAcwc,EAD7BjG,EAC6BiG,SACjD,GAA4B,IAAxBxc,EAAa7E,QAAiC,OAAjBkU,EAAjC,CAEA,IAAIid,EAAYtsB,EAAa,GAC7B,QAAoBnE,IAAhBqwB,EAA2B,CAC3B,IAAIE,EAAMpsB,EAAamQ,QAAQ+b,EAAYzgC,KAC9B,IAAT2gC,GAAcA,IAAQpsB,EAAa7E,OAAS,IAAGmxB,EAAYtsB,EAAaosB,EAAM,IAGtF5P,EAAS7qB,GAA0B0d,EAAe6c,GAAeA,EAAY9b,WAAa,EAAOkc,MAxBzGryB,EA2BIsuB,YAAc,SAACrwB,GAA4B,IAAA0e,EACL3c,EAAKoa,MAA/B6X,EAD+BtV,EAC/BsV,YAAa1P,EADkB5F,EAClB4F,cACD3gB,IAAhBqwB,IACIh0B,EAAMie,QACNqG,EAAS9tB,MAET8tB,EAAS/tB,QAjCzBwL,EAsCIuuB,YAAc,SAACtwB,GAA4B,IAAAqf,EACLtd,EAAKoa,MAA/B6X,EAD+B3U,EAC/B2U,YAAa1P,EADkBjF,EAClBiF,cACD3gB,IAAhBqwB,IACIh0B,EAAMie,QACNqG,EAAS5tB,MAET4tB,EAAS7tB,QA5CzBsL,EAiDIwuB,gBAAkB,WAAM,IAAA7Q,EACc3d,EAAKoa,MAA/B6X,EADYtU,EACZsU,YAAa1P,EADD5E,EACC4E,cACD3gB,IAAhBqwB,GACA1P,EAAS3tB,OApDrBoL,EAwDIyuB,kBAAoB,WAAM,IAAApQ,EACYre,EAAKoa,MAA/B6X,EADc5T,EACd4T,YAAa1P,EADClE,EACDkE,cACD3gB,IAAhBqwB,GACA1P,EAAS1tB,OA3DrBmL,EA+DIiuB,iBAAmB,SAAChwB,GAA+C,IAAAqhB,EAC7Btf,EAAKoa,MAA/B6X,EADuD3S,EACvD2S,YAAa1P,EAD0CjD,EAC1CiD,SACfjuB,EAAO2J,EAAMiqB,OAAO/hB,MAAM+nB,YACZtsB,IAAhBqwB,GACA1P,EAASluB,GAA6BC,KAnElD0L,EAuEIsyB,kBAAoB,SAACr0B,GAA+C,IAAA2hB,EAC9B5f,EAAKoa,MAA/B6X,EADwDrS,EACxDqS,YAAa1P,EAD2C3C,EAC3C2C,SACfjvB,EAAQ84B,WAAWnuB,EAAMiqB,OAAO/hB,YAClBvE,IAAhBqwB,GACA1P,EAAShsB,QAAuBqL,EAAWqwB,EAAYzgC,GAAI8B,EAAO2+B,EAAY1+B,OAAQ7B,IAAQC,cA3E1GqO,EA+EIuyB,mBAAqB,SAACt0B,GAA+C,IAAAmiB,EAC/BpgB,EAAKoa,MAA/B6X,EADyD7R,EACzD6R,YAAa1P,EAD4CnC,EAC5CmC,SACfhvB,EAAS64B,WAAWnuB,EAAMiqB,OAAO/hB,YACnBvE,IAAhBqwB,GACA1P,EAAShsB,QAAuBqL,EAAWqwB,EAAYzgC,GAAIygC,EAAY3+B,MAAOC,EAAQ7B,IAAQC,cAnF1GqO,EAuFIwyB,cAAgB,SAACv0B,GAA+C,IAAA6iB,EAC1B9gB,EAAKoa,MAA/B6X,EADoDnR,EACpDmR,YAAa1P,EADuCzB,EACvCyB,SACfxsB,EAAIq2B,WAAWnuB,EAAMiqB,OAAO/hB,YACdvE,IAAhBqwB,GACA1P,EAAS3sB,QAA2BgM,EAAWqwB,EAAYzgC,GAAIuE,EAAGk8B,EAAYj8B,EAAGtE,IAAQC,cA3FrGqO,EA+FIyyB,cAAgB,SAACx0B,GAA+C,IAAAqjB,EAC1BthB,EAAKoa,MAA/B6X,EADoD3Q,EACpD2Q,YAAa1P,EADuCjB,EACvCiB,SACfvsB,EAAIo2B,WAAWnuB,EAAMiqB,OAAO/hB,YACdvE,IAAhBqwB,GACA1P,EAAS3sB,QAA2BgM,EAAWqwB,EAAYzgC,GAAIygC,EAAYl8B,EAAGC,EAAGtE,IAAQC,cAnGrGqO,EAuGI0yB,kBAAoB,SAACz0B,GAA+C,IAAA00B,EAC9B3yB,EAAKoa,MAA/B6X,EADwDU,EACxDV,YAAa1P,EAD2CoQ,EAC3CpQ,SACf9rB,EAAS21B,WAAWnuB,EAAMiqB,OAAO/hB,OAAStJ,KAAKqkB,GAAM,SACvCtf,IAAhBqwB,GACA1P,EAAS/rB,QAAwBoL,EAAWqwB,EAAYzgC,GAAIiF,EAAO/E,IAAQC,cA3GvFqO,EA+GI4yB,wBAA0B,SAAC30B,GAA+C,IAAA40B,EACpC7yB,EAAKoa,MAA/B6X,EAD8DY,EAC9DZ,YAAa1P,EADiDsQ,EACjDtQ,cACD3gB,IAAhBqwB,GACA1P,EAASrtB,GAAuC+I,EAAMiqB,OAAOyE,WAlHzE3sB,EAAA,OAAAE,OAAAqrB,GAAA,EAAArrB,CAAA6xB,EAAAjH,GAAA5qB,OAAAsrB,GAAA,EAAAtrB,CAAA6xB,EAAA,EAAAhJ,IAAA,SAAA5iB,MAAA,WAsHa,IAAA2sB,EAC0C7yB,KAAKma,MAA5ChF,EADH0d,EACG1d,aAAc6c,EADjBa,EACiBb,YAAaxG,EAD9BqH,EAC8BrH,QAEnC,OACIxR,EAAAtd,EAAAf,cAAA,OAAKgmB,UAAW/lB,KAAMzR,KAAMyR,MAAO,CAAEC,QAAS2vB,EAAU,UAAY,cAC9C7pB,IAAjBwT,GACG6E,EAAAtd,EAAAf,cAAAqe,EAAAtd,EAAA8sB,SAAA,KACIxP,EAAAtd,EAAAf,cAAA,UAAQ8tB,QAASzpB,KAAK+xB,gBAAiB7I,MAAM,kBACzClP,EAAAtd,EAAAf,cAAA,KAAGgmB,UAAU,kBAAb,eAEJ3H,EAAAtd,EAAAf,cAAA,UAAQ8tB,QAASzpB,KAAKmyB,gBAAiBjJ,MAAM,cACzClP,EAAAtd,EAAAf,cAAA,KAAGgmB,UAAU,kBAAb,wBAKKhgB,IAAhBqwB,GACGhY,EAAAtd,EAAAf,cAAAqe,EAAAtd,EAAA8sB,SAAA,KACIxP,EAAAtd,EAAAf,cAAA,UAAQ8tB,QAASzpB,KAAKquB,YAAanF,MAAM,yCACrClP,EAAAtd,EAAAf,cAAA,KAAGgmB,UAAU,kBAAb,iBAEJ3H,EAAAtd,EAAAf,cAAA,UAAQ8tB,QAASzpB,KAAKsuB,YAAapF,MAAM,4CACrClP,EAAAtd,EAAAf,cAAA,KAAGgmB,UAAU,kBAAb,yBAKKhgB,IAAhBqwB,IAA8BA,EAAY3b,QACvC2D,EAAAtd,EAAAf,cAAA,UACI8tB,QAASzpB,KAAKuuB,gBACdrF,MAAM,4EAENlP,EAAAtd,EAAAf,cAAA,KAAGgmB,UAAU,kBAAb,mBAIShgB,IAAhBqwB,GAA6BA,EAAY3b,QACtC2D,EAAAtd,EAAAf,cAAA,UACI8tB,QAASzpB,KAAKwuB,kBACdtF,MAAM,8EAENlP,EAAAtd,EAAAf,cAAA,KAAGgmB,UAAU,kBAAb,cAIShgB,IAAhBqwB,GACGhY,EAAAtd,EAAAf,cAAA,WACIqe,EAAAtd,EAAAf,cAAA,kCACuB,IACnBqe,EAAAtd,EAAAf,cAAA,SACItK,KAAK,WACLk4B,SAAUvpB,KAAK2yB,wBACfhR,UAAU,eACV+K,UAASsF,EAAY98B,qBAMpByM,IAAhBqwB,GACGhY,EAAAtd,EAAAf,cAAA,WACIqe,EAAAtd,EAAAf,cAAA,2BAEIqe,EAAAtd,EAAAf,cAAA,SACItK,KAAK,OACL6U,MAAO8rB,EAAY39B,MAAQ,GAC3B2a,YAAagjB,EAAYzgC,GACzBg4B,SAAUvpB,KAAKguB,iBACf9E,MAAM,2BAIdlP,EAAAtd,EAAAf,cAAA,sBAEIqe,EAAAtd,EAAAf,cAAA,SACItK,KAAK,SACL06B,KAAK,MACL7lB,MAAO8rB,EAAY3+B,MACnB2b,YAAY,QACZua,SAAUvpB,KAAKqyB,kBACfnJ,MAAM,4BAIdlP,EAAAtd,EAAAf,cAAA,uBAEIqe,EAAAtd,EAAAf,cAAA,SACItK,KAAK,SACL06B,KAAK,MACL7lB,MAAO8rB,EAAY1+B,OACnB0b,YAAY,SACZua,SAAUvpB,KAAKsyB,mBACfpJ,MAAM,4BAIdlP,EAAAtd,EAAAf,cAAA,kBAEIqe,EAAAtd,EAAAf,cAAA,SACItK,KAAK,SACL06B,KAAK,MACL7lB,MAAO8rB,EAAYl8B,EACnBkZ,YAAY,QACZua,SAAUvpB,KAAKuyB,cACfrJ,MAAM,mCAIdlP,EAAAtd,EAAAf,cAAA,kBAEIqe,EAAAtd,EAAAf,cAAA,SACItK,KAAK,SACL06B,KAAK,MACL7lB,MAAO8rB,EAAYj8B,EACnBiZ,YAAY,SACZua,SAAUvpB,KAAKwyB,cACftJ,MAAM,mCAIdlP,EAAAtd,EAAAf,cAAA,sBAEIqe,EAAAtd,EAAAf,cAAA,SACItK,KAAK,SACL06B,KAAK,MACL7lB,MAA4B,IAApB8rB,EAAYx7B,MAAeoG,KAAKqkB,GACxCjS,YAAY,QACZua,SAAUvpB,KAAKyyB,kBACfvJ,MAAM,2CAtPtC4I,EAAA,CAAyC7X,aA8Q1BiI,eAdS,SAACjU,GAMrB,MAAO,CACH+jB,iBALuCrwB,IAAvCsM,EAAMsE,QAAQC,QAAQ2C,mBAAsExT,IAAxCsM,EAAMsE,QAAQC,QAAQC,cACpExE,EAAMsE,QAAQC,QAAQpM,OAAO6H,EAAMsE,QAAQC,QAAQ2C,cAAclH,EAAMsE,QAAQC,QAAQC,oBACvF9Q,EAINwT,aAAclH,EAAMsE,QAAQC,QAAQ2C,aACpC/O,OAAQ6H,EAAMsE,QAAQC,QAAQpM,OAC9BN,aAAcmI,EAAMsE,QAAQC,QAAQ1M,eAI7Boc,CAA4E4P,yBChR9EgB,GAAb,SAAAjI,GAAA,SAAAiI,IAAA,IAAAhI,EAAA/qB,EAAAE,OAAAC,GAAA,EAAAD,CAAAD,KAAA8yB,GAAA,QAAA/H,EAAApmB,UAAA1D,OAAA+pB,EAAA,IAAAhkB,MAAA+jB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAAtmB,UAAAsmB,GAAA,OAAAlrB,EAAAE,OAAAma,GAAA,EAAAna,CAAAD,MAAA8qB,EAAA7qB,OAAAoa,GAAA,EAAApa,CAAA6yB,IAAAvpB,KAAA7E,MAAAomB,EAAA,CAAA9qB,MAAAhG,OAAAgxB,MACI/c,MAAoB,CAChB7Y,qBAAqB,EACrBC,eAAe,GAHvB0K,EAMIsyB,kBAAoB,SAACr0B,GAA+C,IACxDskB,EAAaviB,EAAKoa,MAAlBmI,SADwDvB,EAEjBhhB,EAAKkO,MAA5C7Y,EAFwD2rB,EAExD3rB,oBAAqBC,EAFmC0rB,EAEnC1rB,cAC7BitB,EAASntB,GAAmBg3B,WAAWnuB,EAAMiqB,OAAO/hB,OAAQ9Q,EAAqBC,KATzF0K,EAYIuyB,mBAAqB,SAACt0B,GAA+C,IACzDskB,EAAaviB,EAAKoa,MAAlBmI,SADyDyQ,EAElBhzB,EAAKkO,MAA5C7Y,EAFyD29B,EAEzD39B,oBAAqBC,EAFoC09B,EAEpC19B,cAC7BitB,EAAShtB,GAAoB62B,WAAWnuB,EAAMiqB,OAAO/hB,OAAQ9Q,EAAqBC,KAf1F0K,EAkBIizB,uBAAyB,SAACh1B,IAEtBskB,EADqBviB,EAAKoa,MAAlBmI,UACC/sB,GAAwByI,EAAMiqB,OAAOyE,WApBtD3sB,EAuBIyiB,WAAa,SAACxkB,IAEVskB,EADqBviB,EAAKoa,MAAlBmI,UACCvqB,GAAeo0B,WAAWnuB,EAAMiqB,OAAO/hB,UAzBxDnG,EA4BIkzB,uBAAyB,SAACj1B,IAEtBskB,EADqBviB,EAAKoa,MAAlBmI,UACC7sB,GAA8B02B,WAAWnuB,EAAMiqB,OAAO/hB,UA9BvEnG,EAAA,OAAAE,OAAAqrB,GAAA,EAAArrB,CAAA6yB,EAAAjI,GAAA5qB,OAAAsrB,GAAA,EAAAtrB,CAAA6yB,EAAA,EAAAhK,IAAA,SAAA5iB,MAAA,WAiCa,IAAAiiB,EAAAnoB,KAAAmc,EACkEnc,KAAKma,MAApE9mB,EADH8oB,EACG9oB,MAAOC,EADV6oB,EACU7oB,OAAQkC,EADlB2mB,EACkB3mB,WAAYE,EAD9BymB,EAC8BzmB,iBAAkB81B,EADhDrP,EACgDqP,QAASn1B,EADzD8lB,EACyD9lB,KADzD68B,EAE0ClzB,KAAKiO,MAA5C7Y,EAFH89B,EAEG99B,oBAAqBC,EAFxB69B,EAEwB79B,cAE7B,OACI2kB,EAAAtd,EAAAf,cAAA,OAAKgmB,UAAW/lB,KAAMzR,KAAMyR,MAAO,CAAEC,QAAS2vB,EAAU,UAAY,SAChExR,EAAAtd,EAAAf,cAAA,SAAOmwB,QAAQ,cAAf,oBACA9R,EAAAtd,EAAAf,cAAA,SACIpK,GAAG,aACHF,KAAK,SACL8lB,IAAI,IACJ4U,KAAK,MACLxC,SAAUvpB,KAAKqyB,kBACf1Q,UAAU,eACV3S,YAAY,QACZ9I,MAAO7S,IAEX2mB,EAAAtd,EAAAf,cAAA,SAAOmwB,QAAQ,eAAf,qBACA9R,EAAAtd,EAAAf,cAAA,SACIpK,GAAG,cACHF,KAAK,SACL8lB,IAAI,IACJ4U,KAAK,MACLxC,SAAUvpB,KAAKsyB,mBACf3Q,UAAU,eACV3S,YAAY,SACZ9I,MAAO5S,IAEX0mB,EAAAtd,EAAAf,cAAA,WACIqe,EAAAtd,EAAAf,cAAA,sCAC2B,IACvBqe,EAAAtd,EAAAf,cAAA,SACItK,KAAK,WACLk4B,SAAU,WACNpB,EAAKxM,SAAS,CAAEvmB,qBAAsBA,KAE1CusB,UAAU,eACV+K,QAASt3B,MAKrB4kB,EAAAtd,EAAAf,cAAA,WACIqe,EAAAtd,EAAAf,cAAA,+BACoB,IAChBqe,EAAAtd,EAAAf,cAAA,SACItK,KAAK,WACLk4B,SAAU,WACNpB,EAAKxM,SAAS,CAAEtmB,eAAgBA,KAEpCssB,UAAU,eACV+K,QAASr3B,MAKrB2kB,EAAAtd,EAAAf,cAAA,qCAC0B,IACtBqe,EAAAtd,EAAAf,cAAA,SACItK,KAAK,WACLk4B,SAAUvpB,KAAKgzB,uBACfrR,UAAU,eACV+K,QAASl3B,KAGjBwkB,EAAAtd,EAAAf,cAAA,WACIqe,EAAAtd,EAAAf,cAAA,SAAOmwB,QAAQ,QAAf,oDACA9R,EAAAtd,EAAAf,cAAA,SACIpK,GAAG,OACHF,KAAK,SACL8lB,IAAI,MACJ4U,KAAK,MACLxC,SAAUvpB,KAAKwiB,WACfb,UAAU,eACV3S,YAAY,OACZ9I,MAAO7P,KAGf2jB,EAAAtd,EAAAf,cAAA,WACIqe,EAAAtd,EAAAf,cAAA,SAAOmwB,QAAQ,QAAf,0CACA9R,EAAAtd,EAAAf,cAAA,SACIpK,GAAG,OACHF,KAAK,SACL8lB,IAAI,IACJ4U,KAAK,MACLxC,SAAUvpB,KAAKizB,uBACftR,UAAU,eACV3S,YAAY,oBACZ9I,MAAOxQ,UAzH/Bo9B,EAAA,CAAqC7Y,aA2ItBiI,eAVS,SAACjU,GACrB,MAAO,CACH5a,MAAO4a,EAAMsE,QAAQC,QAAQnf,MAC7BC,OAAQ2a,EAAMsE,QAAQC,QAAQlf,OAC9BkC,WAAYyY,EAAMsE,QAAQC,QAAQhd,WAClCE,iBAAkBuY,EAAMsE,QAAQC,QAAQ9c,iBACxCW,KAAM4X,EAAMsE,QAAQC,QAAQnc,OAIrB6rB,CAA4E4Q,6CC5IrFK,GAAwBlzB,OAAOiQ,KAAKkjB,IACrCC,OACApmB,IAAI,SAAAqmB,GAAE,MAAK,CAAEptB,MAAOotB,EAAIC,MAAOD,KAe9BE,iNACFC,qBAAuB,SAACC,EAAgBC,GACpC,IAAIC,EAAgBF,EAIpB,MAHgB,YAAZC,IACAC,GAAiB,IAAMD,GAEpBC,KAGXtK,aAAe,SAACuK,GACZ,GAAKA,EAAL,CAEA,IAAMppC,EAAcopC,EAA8B3tB,MAE9Cxb,EAAcqV,EAAKoa,MAAM2Z,kBACvBC,EAAmBX,GACnB1oC,KAAeqpC,EAAGtpC,KACpBC,EAAcuV,OAAOiQ,KAAK6jB,EAAGtpC,IAAa4oC,OAAO,IAGrD7sB,KAAQtO,KAAK,CACT2O,OAAQ,CACJC,SAAU,CAAC/G,EAAK0zB,qBAAqBhpC,EAAYC,KAErDgc,OAAQ,YAEJ4b,EADqBviB,EAAKoa,MAAlBmI,UACCxrB,GAAiDrM,EAAYC,WAKlFspC,wBAA0B,SAACH,GACvB,GAAKA,EAAL,CAEA,IAAM3tB,EAAS2tB,EAA8B3tB,MAC7CM,KAAQtO,KAAK,CACT2O,OAAQ,CACJC,SAAU,CAAC/G,EAAK0zB,qBAAqB1zB,EAAKoa,MAAM8Z,WAAY/tB,KAEhEQ,OAAQ,YAEJ4b,EADqBviB,EAAKoa,MAAlBmI,UACCzrB,GAAwCqP,WAK7DguB,qBAAuB,SAACl2B,IAEpBskB,EADqBviB,EAAKoa,MAAlBmI,UACCvrB,GAAqCo1B,WAAWnuB,EAAMiqB,OAAO/hB,YAG1EiuB,uBAAyB,SAACn2B,IAEtBskB,EADqBviB,EAAKoa,MAAlBmI,UACCrrB,GAAuCk1B,WAAWnuB,EAAMiqB,OAAO/hB,oFAGnE,IAAAiiB,EAAAnoB,KACCo0B,EAAqBjB,GAAQ1Z,KAAK,SAAA4a,GAAC,OAAIA,EAAEnuB,QAAUiiB,EAAKhO,MAAM8Z,aAE9DK,EAAmCr0B,OAAOiQ,KAAMkjB,GAA0BpzB,KAAKma,MAAM8Z,aACtFZ,OACApmB,IAAI,SAAAsnB,GAAE,MAAK,CAAEruB,MAAOquB,EAAIhB,MAAOgB,KAE9BC,EAAsBF,EAAmB7a,KAAK,SAAA4a,GAAC,OAAIA,EAAEnuB,QAAUiiB,EAAKhO,MAAM2Z,oBAEhF,OACI9Z,EAAAtd,EAAAf,cAAAqe,EAAAtd,EAAA8sB,SAAA,KACIxP,EAAAtd,EAAAf,cAAA,SACItK,KAAK,SACL6U,MAAOlG,KAAKma,MAAMsa,eAClBlL,SAAUvpB,KAAKk0B,qBACfhL,MAAM,cAEVlP,EAAAtd,EAAAf,cAAC+4B,GAAA,EAAD,CACI/S,UAAW/lB,KAAMnR,WACjByb,MAAOkuB,EACP7K,SAAUvpB,KAAKspB,aACf6J,QAASA,KAEbnZ,EAAAtd,EAAAf,cAAC+4B,GAAA,EAAD,CACI/S,UAAW/lB,KAAMlR,YACjBwb,MAAOsuB,EACPjL,SAAUvpB,KAAKg0B,wBACfb,QAASmB,IAEbta,EAAAtd,EAAAf,cAAA,SACItK,KAAK,SACL6U,MAAOlG,KAAKma,MAAMwa,iBAClBpL,SAAUvpB,KAAKm0B,uBACfjL,MAAM,cACN6C,KAAK,iBA1FE9R,aA+GZiI,eAdS,SAACjU,GAMrB,MAAO,CACHgmB,WANahmB,EAAMsE,QAAQC,QAAQ4C,aAAa3qB,WAOhDqpC,kBANoB7lB,EAAMsE,QAAQC,QAAQ4C,aAAa1qB,YAOvD+pC,eANiBxmB,EAAMsE,QAAQC,QAAQ4C,aAAape,SAOpD29B,iBANmB1mB,EAAMsE,QAAQC,QAAQ4C,aAAale,YAAc1L,IAU7D02B,CAA+DsR,yBC9HjEoB,GAAb,SAAA/J,GAAA,SAAA+J,IAAA,IAAA9J,EAAA/qB,EAAAE,OAAAC,GAAA,EAAAD,CAAAD,KAAA40B,GAAA,QAAA7J,EAAApmB,UAAA1D,OAAA+pB,EAAA,IAAAhkB,MAAA+jB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAAtmB,UAAAsmB,GAAA,OAAAlrB,EAAAE,OAAAma,GAAA,EAAAna,CAAAD,MAAA8qB,EAAA7qB,OAAAoa,GAAA,EAAApa,CAAA20B,IAAArrB,KAAA7E,MAAAomB,EAAA,CAAA9qB,MAAAhG,OAAAgxB,MACI6J,mBAAqB,YAEjBvS,EADqBviB,EAAKoa,MAAlBmI,UACCpuB,OAHjB6L,EAMI+0B,uBAAyB,WACrB,IAAMrP,EAAYnpB,OAAOopB,eACnBL,EAAQI,EAAUsP,WAAW,GACN,IAAzBtP,EAAUuP,YAAoB3P,EAAM4P,WAEpC3S,EADqBviB,EAAKoa,MAAlBmI,UACC7rB,GAAkC,SAE3CiF,SAAS+qB,YAAY,gBAbjC1mB,EAiBIm1B,yBAA2B,WACvB,IAAMzP,EAAYnpB,OAAOopB,eACnBL,EAAQI,EAAUsP,WAAW,GACN,IAAzBtP,EAAUuP,YAAoB3P,EAAM4P,WAEpC3S,EADqBviB,EAAKoa,MAAlBmI,UACC7rB,GAAkC,WAE3CiF,SAAS+qB,YAAY,kBAxBjC1mB,EA4BIo1B,wBAA0B,WACtB,IAAM1P,EAAYnpB,OAAOopB,eACnBL,EAAQI,EAAUsP,WAAW,GACN,IAAzBtP,EAAUuP,YAAoB3P,EAAM4P,WAEpC3S,EADqBviB,EAAKoa,MAAlBmI,UACC7rB,GAAkC,UAE3CiF,SAAS+qB,YAAY,iBAnCjC1mB,EAuCIq1B,kBAAoB,WAChB15B,SAAS+qB,YAAY,SAxC7B1mB,EA2CIs1B,oBAAsB,WAClB35B,SAAS+qB,YAAY,WA5C7B1mB,EA+CIguB,kBAAoB,WAAM,IAAA5R,EACYpc,EAAKoa,MAA/B6X,EADc7V,EACd6V,YAAa1P,EADCnG,EACDmG,cACD3gB,IAAhBqwB,GACA1P,EAAShuB,OAlDrByL,EAsDIsuB,YAAc,SAACrwB,GAA4B,IAAAqe,EACLtc,EAAKoa,MAA/B6X,EAD+B3V,EAC/B2V,YAAa1P,EADkBjG,EAClBiG,cACD3gB,IAAhBqwB,IACIh0B,EAAMie,QACNqG,EAAS9tB,MAET8tB,EAAS/tB,QA5DzBwL,EAiEIuuB,YAAc,SAACtwB,GAA4B,IAAA0e,EACL3c,EAAKoa,MAA/B6X,EAD+BtV,EAC/BsV,YAAa1P,EADkB5F,EAClB4F,cACD3gB,IAAhBqwB,IACIh0B,EAAMie,QACNqG,EAAS5tB,MAET4tB,EAAS7tB,QAvEzBsL,EA4EIwuB,gBAAkB,WAAM,IAAAlR,EACctd,EAAKoa,MAA/B6X,EADY3U,EACZ2U,YAAa1P,EADDjF,EACCiF,cACD3gB,IAAhBqwB,GACA1P,EAAS3tB,OA/ErBoL,EAmFIyuB,kBAAoB,WAAM,IAAA9Q,EACY3d,EAAKoa,MAA/B6X,EADctU,EACdsU,YAAa1P,EADC5E,EACD4E,cACD3gB,IAAhBqwB,GACA1P,EAAS1tB,OAtFrBmL,EA0FIiuB,iBAAmB,SAAChwB,GAA+C,IAAAogB,EAC7Bre,EAAKoa,MAA/B6X,EADuD5T,EACvD4T,YAAa1P,EAD0ClE,EAC1CkE,SACfjuB,EAAO2J,EAAMiqB,OAAO/hB,MAAM+nB,YACZtsB,IAAhBqwB,GACA1P,EAASluB,GAA6BC,KA9FlD0L,EAkGI4uB,kBAAoB,SAAC/3B,GACjB,IAAM6uB,EAAYnpB,OAAOopB,eACnBL,EAAQI,EAAUsP,WAAW,GACN,IAAzBtP,EAAUuP,YAAoB3P,EAAM4P,WAEpC3S,EADqBviB,EAAKoa,MAAlBmI,UACC3rB,GAAkCC,EAAMg4B,MAEjDlzB,SAAS+qB,YAAY,aAAa,EAAO7vB,EAAMg4B,MAzG3D7uB,EAAA,OAAAE,OAAAqrB,GAAA,EAAArrB,CAAA20B,EAAA/J,GAAA5qB,OAAAsrB,GAAA,EAAAtrB,CAAA20B,EAAA,EAAA9L,IAAA,SAAA5iB,MAAA,WA6Ga,IAAAmZ,EAC4Brf,KAAKma,MAA9B6X,EADH3S,EACG2S,YAAaxG,EADhBnM,EACgBmM,QAEjB50B,EAAQ,UAKZ,OAJIo7B,GAAoC,SAArBA,EAAY3gC,MAAmB2gC,EAAYp7B,QAC1DA,EAAQo7B,EAAYp7B,OAIpBojB,EAAAtd,EAAAf,cAAA,OAAKgmB,UAAW/lB,KAAMzR,KAAMyR,MAAO,CAAEC,QAAS2vB,EAAU,UAAY,SAChExR,EAAAtd,EAAAf,cAAA,UAAQ8tB,QAASzpB,KAAK60B,mBAAoB3L,MAAM,kBAC5ClP,EAAAtd,EAAAf,cAAA,KAAGgmB,UAAU,kBAAb,qBAEahgB,IAAhBqwB,GACGhY,EAAAtd,EAAAf,cAAAqe,EAAAtd,EAAA8sB,SAAA,KACIxP,EAAAtd,EAAAf,cAAA,UAAQ8tB,QAASzpB,KAAKquB,YAAanF,MAAM,yCACrClP,EAAAtd,EAAAf,cAAA,KAAGgmB,UAAU,kBAAb,iBAEJ3H,EAAAtd,EAAAf,cAAA,UAAQ8tB,QAASzpB,KAAKsuB,YAAapF,MAAM,4CACrClP,EAAAtd,EAAAf,cAAA,KAAGgmB,UAAU,kBAAb,yBAKKhgB,IAAhBqwB,IAA8BA,EAAY3b,QACvC2D,EAAAtd,EAAAf,cAAA,UACI8tB,QAASzpB,KAAKuuB,gBACdrF,MAAM,iFAENlP,EAAAtd,EAAAf,cAAA,KAAGgmB,UAAU,kBAAb,mBAIShgB,IAAhBqwB,GAA6BA,EAAY3b,QACtC2D,EAAAtd,EAAAf,cAAA,UACI8tB,QAASzpB,KAAKwuB,kBACdtF,MAAM,wFAENlP,EAAAtd,EAAAf,cAAA,KAAGgmB,UAAU,kBAAb,SAIR3H,EAAAtd,EAAAf,cAAA,UACIgmB,eAA2BhgB,IAAhBqwB,GAA6BA,EAAY3b,OAASza,KAAMxR,SAAW,GAC9Eq/B,QAASzpB,KAAK+tB,kBACd7E,MAAM,gBAENlP,EAAAtd,EAAAf,cAAA,KAAGgmB,UAAU,kBAAb,gBAGahgB,IAAhBqwB,GACGhY,EAAAtd,EAAAf,cAAA,SACItK,KAAK,OACL6U,MAAO8rB,EAAY39B,MAAQ,GAC3B2a,YAAagjB,EAAYzgC,GACzBg4B,SAAUvpB,KAAKguB,iBACf9E,MAAM,+BAIdlP,EAAAtd,EAAAf,cAAA,WACIqe,EAAAtd,EAAAf,cAAA,UAAQ8tB,QAASzpB,KAAK80B,uBAAwB5L,MAAM,mBAChDlP,EAAAtd,EAAAf,cAAA,KAAGgmB,UAAU,kBAAb,sBAEJ3H,EAAAtd,EAAAf,cAAA,UAAQ8tB,QAASzpB,KAAKk1B,yBAA0BhM,MAAM,qBAClDlP,EAAAtd,EAAAf,cAAA,KAAGgmB,UAAU,kBAAb,wBAEJ3H,EAAAtd,EAAAf,cAAA,UAAQ8tB,QAASzpB,KAAKm1B,wBAAyBjM,MAAM,oBACjDlP,EAAAtd,EAAAf,cAAA,KAAGgmB,UAAU,kBAAb,uBAEJ3H,EAAAtd,EAAAf,cAAA,UAAQ8tB,QAASzpB,KAAKo1B,kBAAmBlM,MAAM,4BAC3ClP,EAAAtd,EAAAf,cAAA,KAAGgmB,UAAU,kBAAb,gBAEJ3H,EAAAtd,EAAAf,cAAA,UAAQ8tB,QAASzpB,KAAKq1B,oBAAqBnM,MAAM,8BAC7ClP,EAAAtd,EAAAf,cAAA,KAAGgmB,UAAU,kBAAb,kBAEJ3H,EAAAtd,EAAAf,cAACqzB,GAAD,CAAap4B,MAAOA,EAAO2yB,SAAUvpB,KAAK2uB,oBAC1C3U,EAAAtd,EAAAf,cAAC25B,GAAD,YA1LpBV,EAAA,CAAiC3a,aA6MlBiI,eAZS,SAACjU,GACrB,IAAM+jB,OACqCrwB,IAAvCsM,EAAMsE,QAAQC,QAAQ2C,mBAAsExT,IAAxCsM,EAAMsE,QAAQC,QAAQC,cACpExE,EAAMsE,QAAQC,QAAQpM,OAAO6H,EAAMsE,QAAQC,QAAQ2C,cAAclH,EAAMsE,QAAQC,QAAQC,oBACvF9Q,EAEV,MAAO,CACHgT,gBAAiB1G,EAAM0L,KAAKhF,gBAC5Bqd,gBAIO9P,CAA4E0S,uDCnN3FxF,0BAAemG,MACfnG,0BAAeC,MAQR,IAAMmG,GAAb,SAAA3K,GAAA,SAAA2K,IAAA,IAAA1K,EAAA/qB,EAAAE,OAAAC,GAAA,EAAAD,CAAAD,KAAAw1B,GAAA,QAAAzK,EAAApmB,UAAA1D,OAAA+pB,EAAA,IAAAhkB,MAAA+jB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAAtmB,UAAAsmB,GAAA,OAAAlrB,EAAAE,OAAAma,GAAA,EAAAna,CAAAD,MAAA8qB,EAAA7qB,OAAAoa,GAAA,EAAApa,CAAAu1B,IAAAjsB,KAAA7E,MAAAomB,EAAA,CAAA9qB,MAAAhG,OAAAgxB,MACI4F,cAAgB,SACZC,EACA54B,EACA64B,EACA54B,EACAC,EACAC,EACAC,GACC,IAAA8jB,EACgCpc,EAAKoa,MAA9BmI,EADPnG,EACOmG,SAAUkN,EADjBrT,EACiBqT,WAElB,GAAmB,OAAfA,EAAJ,CAKA,IAAIiG,EAASn8B,KAAMo8B,YAAYD,SAI/B,OAFAnT,EAAStqB,GAAmBw3B,EAAYv3B,EAAMC,EAAMC,EAAOC,EAAUC,EAAOo9B,EAAOt7B,QAE5E,CAAE9B,MAAOo9B,EAAOE,QARnBt9B,KAbZ0H,EAwBIwxB,aAAe,SAACC,EAAsBt5B,EAA4BC,IAE9DmqB,EADqBviB,EAAKoa,MAAlBmI,UACC/pB,GAAmBi5B,EAAct5B,EAAMC,KA1BxD4H,EAAA,OAAAE,OAAAqrB,GAAA,EAAArrB,CAAAu1B,EAAA3K,GAAA5qB,OAAAsrB,GAAA,EAAAtrB,CAAAu1B,EAAA,EAAA1M,IAAA,SAAA5iB,MAAA,WA6Ba,IACGslB,EAAYxrB,KAAKma,MAAjBqR,QAER,OACIxR,EAAAtd,EAAAf,cAAA,OAAKgmB,UAAW/lB,KAAMzR,KAAMyR,MAAO,CAAEC,QAAS2vB,EAAU,OAAS,SAC7DxR,EAAAtd,EAAAf,cAAA,+GAGAqe,EAAAtd,EAAAf,cAAC81B,GAAA,SAAD,CACImE,eAAe,EACflE,OAAQ,CACJC,QAAS3xB,KAAK4wB,cACdgB,OAAQ5xB,KAAKuxB,cAEjBM,kBAAmB,CAAC,YAAa,aAAc,iBAC/CgE,yBAAyB,EACzBC,YAAY,eA7ChCN,EAAA,CAAmCvb,aA0DpBiI,eANS,SAACjU,GACrB,MAAO,CACHuhB,WAAYvhB,EAAMjB,MAAMtG,SAIjBwb,CAA4EsT,wBC5DrFO,GAA0B,CAC5B,CACI9nB,MAAO5iB,EAAa2qC,SACpB9M,MAAO,WACP+M,KAAM,WACNC,UAAWpD,IAEf,CACI7kB,MAAO5iB,EAAa2tB,QACpBkQ,MAAO,UACP+M,KAAM,UACNC,UAAWtL,IAEf,CACI3c,MAAO5iB,EAAa0tB,aACpBmQ,MAAO,eACP+M,KAAM,gBACNC,UAAWpE,IAEf,CACI7jB,MAAO5iB,EAAaiT,MACpB4qB,MAAO,SACP+M,KAAM,QACNC,UAAWxI,IAEf,CACIzf,MAAO5iB,EAAa4tB,KACpBiQ,MAAO,QACP+M,KAAM,cACNC,UAAWtB,IAEf,CACI3mB,MAAO5iB,EAAa8qC,OACpBjN,MAAO,SACP+M,KAAM,eACNC,UAAWV,IAEf,CACIvnB,MAAO5iB,EAAa+qC,aACpBlN,MAAO,gBACP+M,KAAM,gBACNC,UAAW5G,IAEf,CACIrhB,MAAO5iB,EAAagrC,IACpBnN,MAAO,kBACP+M,KAAM,gBACNC,UAAWzK,IAEf,CACIxd,MAAO5iB,EAAairC,IACpBpN,MAAO,kBACP+M,KAAM,iBACNC,UAAWhJ,KAINqJ,GAAb,SAAA1L,GAAA,SAAA0L,IAAA,IAAAzL,EAAA/qB,EAAAE,OAAAC,GAAA,EAAAD,CAAAD,KAAAu2B,GAAA,QAAAxL,EAAApmB,UAAA1D,OAAA+pB,EAAA,IAAAhkB,MAAA+jB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAAtmB,UAAAsmB,GAAA,OAAAlrB,EAAAE,OAAAma,GAAA,EAAAna,CAAAD,MAAA8qB,EAAA7qB,OAAAoa,GAAA,EAAApa,CAAAs2B,IAAAhtB,KAAA7E,MAAAomB,EAAA,CAAA9qB,MAAAhG,OAAAgxB,MACIwL,cAAgB,SAACvoB,GAAwB,IAAAkO,EACDpc,EAAKoa,MAAjC9E,EAD6B8G,EAC7B9G,cAAeiN,EADcnG,EACdmG,SAEnBA,EAASzqB,GADTwd,IAAkBpH,EACc,KAEAA,KAN5ClO,EAAA,OAAAE,OAAAqrB,GAAA,EAAArrB,CAAAs2B,EAAA1L,GAAA5qB,OAAAsrB,GAAA,EAAAtrB,CAAAs2B,EAAA,EAAAzN,IAAA,SAAA5iB,MAAA,WAUa,IAAAiiB,EAAAnoB,KACGqV,EAAkBrV,KAAKma,MAAvB9E,cACR,OACI2E,EAAAtd,EAAAf,cAAA,OAAKgmB,UAAW/lB,KAAM66B,SAClBzc,EAAAtd,EAAAf,cAAA,OAAKgmB,UAAW/lB,KAAM86B,UACjBX,GAAS9oB,IAAI,SAAA0pB,GAAE,OACZ3c,EAAAtd,EAAAf,cAAA,KACImtB,IAAK6N,EAAG1oB,MACRib,MAAOyN,EAAGzN,MACVvH,UAAS,kBAAA3nB,OAAoBqb,IAAkBshB,EAAG1oB,MAAQrS,KAAM8K,OAAS,IACzE+iB,QAAS,kBAAMtB,EAAKqO,cAAcG,EAAG1oB,SAEpC0oB,EAAGV,SAIhBjc,EAAAtd,EAAAf,cAAA,OAAKgmB,UAAS,GAAA3nB,OAAK4B,KAAMzR,KAAX,KAAA6P,OAAqC,OAAlBqb,EAAyBzZ,KAAMg7B,OAAS,KACpEb,GAAS9oB,IAAI,SAAA0pB,GAAE,OACZ3c,EAAAtd,EAAAf,cAACg7B,EAAGT,UAAJ,CAAcpN,IAAK6N,EAAG1oB,MAAOud,QAASnW,IAAkBshB,EAAG1oB,gBA5BnFsoB,EAAA,CAA6Btc,aA2CdiI,eAPS,SAACjU,GACrB,MAAO,CACH0G,gBAAiB1G,EAAM0L,KAAKhF,gBAC5BU,cAAepH,EAAMsE,QAAQC,QAAQ6C,gBAI9B6M,CAA+DqU,wBCpFjEM,GAAb,SAAAhM,GAAA,SAAAgM,IAAA,IAAA/L,EAAA/qB,EAAAE,OAAAC,GAAA,EAAAD,CAAAD,KAAA62B,GAAA,QAAA9L,EAAApmB,UAAA1D,OAAA+pB,EAAA,IAAAhkB,MAAA+jB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAAtmB,UAAAsmB,GAAA,OAAAlrB,EAAAE,OAAAma,GAAA,EAAAna,CAAAD,MAAA8qB,EAAA7qB,OAAAoa,GAAA,EAAApa,CAAA42B,IAAAttB,KAAA7E,MAAAomB,EAAA,CAAA9qB,MAAAhG,OAAAgxB,MACI/c,MAAQ,CACJ3b,UAAW,IACXC,WAAY,IACZC,gBAAiB,GACjBC,gBAAiB,GALzBsN,EAgBI+2B,QAAU,SAAC94B,GAAyB,IACxBskB,EAAaviB,EAAKoa,MAAlBmI,SAER,OAAQtkB,EAAM8qB,KACV,IAAK,IACL,IAAK,IACG9qB,EAAMie,SAAWje,EAAM+4B,SACvBzU,EAAS5pB,MACFsF,EAAMie,SACbqG,EAAS7pB,MAEb,MAEJ,IAAK,IACL,IAAK,IACGuF,EAAMie,SACNqG,EAAS5pB,QAhC7BqH,EAwCIi3B,sBAAwB,WAAM,IAClB1U,EAAaviB,EAAKoa,MAAlBmI,SAEFvM,EAAoB,CAAExkB,GAAIE,IAAQC,WAAYuC,MAAO,GAE3DquB,EAAS1uB,GAAkBmiB,KA7CnChW,EAgDIk3B,yBAA2B,YAEvB3U,EADqBviB,EAAKoa,MAAlBmI,UACC7qB,QAA0BkK,GAAW,OAAOA,KAlD7D5B,EAqDIm3B,wBAA0B,SAACllC,GAAoB,IAAAmqB,EACPpc,EAAKoa,MAAjCmI,EADmCnG,EACnCmG,SAAU6U,EADyBhb,EACzBgb,cACI,OAAlBA,GACA7U,EAAS7uB,GAAqB0jC,EAAc5lC,GAAIS,KAxD5D+N,EAAA,OAAAE,OAAAqrB,GAAA,EAAArrB,CAAA42B,EAAAhM,GAAA5qB,OAAAsrB,GAAA,EAAAtrB,CAAA42B,EAAA,EAAA/N,IAAA,oBAAA5iB,MAAA,WASQ5J,OAAOyB,iBAAiB,UAAWiC,KAAK82B,WAThD,CAAAhO,IAAA,uBAAA5iB,MAAA,WAaQ5J,OAAOmX,oBAAoB,UAAWzT,KAAK82B,WAbnD,CAAAhO,IAAA,SAAA5iB,MAAA,WA4Da,IAAAmW,EAWDrc,KAAKma,MATLxF,EAFC0H,EAED1H,gBACA1R,EAHCoZ,EAGDpZ,YACAuN,EAJC6L,EAID7L,UACAnd,EALCgpB,EAKDhpB,MACAC,EANC+oB,EAMD/oB,OACAkC,EAPC6mB,EAOD7mB,WACAwf,EARCqH,EAQDrH,SACA3e,EATCgmB,EASDhmB,KACA8gC,EAVC9a,EAUD8a,cAGE7O,EAAkBj1B,EAAsB,EAAd5H,EAC1B88B,EAAmBj1B,EAAuB,EAAd7H,EAElC,OACIkpB,GACIqF,EAAAtd,EAAAf,cAAA,WACIqe,EAAAtd,EAAAf,cAACsxB,GAAD,CAAerD,UAAW9P,GAAUqQ,OAChCnQ,EAAAtd,EAAAf,cAAA,6CAGe,OAAlBw7B,GACGnd,EAAAtd,EAAAf,cAACy7B,GAAD,CAAelO,MAAOiO,EAAc9iC,KAAMk1B,SAAUvpB,KAAKk3B,0BAG7Dld,EAAAtd,EAAAf,cAAA,OAAKgmB,UAAW/lB,KAAMy7B,aAClBrd,EAAAtd,EAAAf,cAAA,OAAKgmB,UAAW/lB,KAAM66B,SAClBzc,EAAAtd,EAAAf,cAAC27B,GAAD,OAEJtd,EAAAtd,EAAAf,cAAA,OAAK+nB,YAAa1jB,KAAKi3B,yBAA0BtT,aAAc3jB,KAAKi3B,2BAC9DjiB,EAAWX,MAAwBA,IAAsB2F,EAAAtd,EAAAf,cAAC47B,GAAD,MAC3Dvd,EAAAtd,EAAAf,cAAA,OAAKgmB,UAAW/lB,KAAM2W,SAClByH,EAAAtd,EAAAf,cAAA,MACIC,MAAO,CACH47B,oBAAmB,4BAAAx9B,OAA8BsuB,EAC7CjyB,EADe,eAItB4M,GACGA,EAAYgK,IAAI,SAAArX,GAAM,MAAI,CACtBokB,EAAAtd,EAAAf,cAAA,MAAImtB,IAAKlzB,GACLokB,EAAAtd,EAAAf,cAAC87B,GAAD,CAAM5jC,KAAM2c,EAAU5a,GAAS2K,QAAQ,KAE3C/K,GACIwkB,EAAAtd,EAAAf,cAAA,MAAImtB,IAAG,GAAA9uB,OAAKpE,EAAL,SACHokB,EAAAtd,EAAAf,cAAC87B,GAAD,CAAM5jC,KAAM2c,EAAU5a,GAAS2K,QAAQ,QAIvDyZ,EAAAtd,EAAAf,cAAA,MAAImtB,IAAI,WACJ9O,EAAAtd,EAAAf,cAAA,OACIpK,GAAG,UACHowB,UAAW/lB,KAAM87B,WACjB97B,MAAO,CACHvI,MAAK,GAAA2G,OAAKsuB,EAAkBjyB,EAAvB,MACL/C,OAAM,GAAA0G,OAAKuuB,EAAmBlyB,EAAxB,MACNurB,SAAU,WACV6B,SAAU,UAEdgG,QAASzpB,KAAKg3B,uBAEdhd,EAAAtd,EAAAf,cAAA,WACIqe,EAAAtd,EAAAf,cAAA,KAAGgmB,UAAU,kBAAb,OACA3H,EAAAtd,EAAAf,cAAA,mCA7HhDk7B,EAAA,CAA6B5c,aA4JdiI,eAjBS,SAACjU,GACrB,MAAO,CACH+G,SAAU/G,EAAMsE,QAAQC,QAAQwC,SAChC3hB,MAAO4a,EAAMsE,QAAQC,QAAQnf,MAC7BC,OAAQ2a,EAAMsE,QAAQC,QAAQlf,OAC9BkC,WAAYyY,EAAMsE,QAAQC,QAAQhd,WAClCa,KAAM4X,EAAMsE,QAAQC,QAAQnc,KAC5Bse,gBAAiB1G,EAAM0L,KAAKhF,gBAC5B1R,YAAagL,EAAMsE,QAAQC,QAAQvP,YACnCuN,UAAWvC,EAAMsE,QAAQC,QAAQhC,UACjC2mB,cACIlpB,EAAMljB,SAAS2b,QAAUuH,EAAMljB,SAAS+hB,KAAKmB,EAAMljB,SAAS2b,QACtDuH,EAAMljB,SAAS+hB,KAAKmB,EAAMljB,SAAS2b,QACnC,OAIHwb,CAA+D2U,IC9LjEc,GAAb,SAAA9M,GAAA,SAAA8M,IAAA,OAAA13B,OAAAC,GAAA,EAAAD,CAAAD,KAAA23B,GAAA13B,OAAAma,GAAA,EAAAna,CAAAD,KAAAC,OAAAoa,GAAA,EAAApa,CAAA03B,GAAAjzB,MAAA1E,KAAA2E,YAAA,OAAA1E,OAAAqrB,GAAA,EAAArrB,CAAA03B,EAAA9M,GAAA5qB,OAAAsrB,GAAA,EAAAtrB,CAAA03B,EAAA,EAAA7O,IAAA,oBAAA5iB,MAAA,WACwB,IjCoxBa3U,EiCpxBb4qB,EACYnc,KAAKma,MAAzBmI,EADQnG,EACRmG,SAAUsV,EADFzb,EACEyb,MAClBtV,GjCkxB6B/wB,EiClxBCqmC,EAAMC,OAAOtmC,GjCmxBxC,CACHF,KAAMrD,GACNuD,UiCxxBR,CAAAu3B,IAAA,SAAA5iB,MAAA,WAOQ,OAAO8T,EAAAtd,EAAAf,cAACm8B,GAAD,UAPfH,EAAA,CAAiC1d,aAalBiI,eAFS,SAACjU,GAAD,MAAmB,CAAE0G,gBAAiB1G,EAAM0L,KAAKhF,kBAE1DuN,CAAyByV,ICxBnBI,yLAEb,OACI/d,EAAAtd,EAAAf,cAAA,WACIqe,EAAAtd,EAAAf,cAAA,sFACAqe,EAAAtd,EAAAf,cAAA,0BACAqe,EAAAtd,EAAAf,cAAA,UACIqe,EAAAtd,EAAAf,cAAA,8EACAqe,EAAAtd,EAAAf,cAAA,6BACAqe,EAAAtd,EAAAf,cAAA,iCACAqe,EAAAtd,EAAAf,cAAA,4FAEJqe,EAAAtd,EAAAf,cAAA,wBACAqe,EAAAtd,EAAAf,cAAA,UACIqe,EAAAtd,EAAAf,cAAA,gEACAqe,EAAAtd,EAAAf,cAAA,0DACAqe,EAAAtd,EAAAf,cAAA,iCAEJqe,EAAAtd,EAAAf,cAAA,wBACAqe,EAAAtd,EAAAf,cAAA,UACIqe,EAAAtd,EAAAf,cAAA,0DACAqe,EAAAtd,EAAAf,cAAA,kEACAqe,EAAAtd,EAAAf,cAAA,qDAEJqe,EAAAtd,EAAAf,cAAA,wBACAqe,EAAAtd,EAAAf,cAAA,UACIqe,EAAAtd,EAAAf,cAAA,mCAGAqe,EAAAtd,EAAAf,cAAA,qEAGAqe,EAAAtd,EAAAf,cAAA,2CAIJqe,EAAAtd,EAAAf,cAAA,wBACAqe,EAAAtd,EAAAf,cAAA,UACIqe,EAAAtd,EAAAf,cAAA,mDAIJqe,EAAAtd,EAAAf,cAAA,wBACAqe,EAAAtd,EAAAf,cAAA,UACIqe,EAAAtd,EAAAf,cAAA,6GACqG,IACjGqe,EAAAtd,EAAAf,cAAA,KAAGG,KAAK,mCAAR,oBAFJ,IAEoE,IAChEke,EAAAtd,EAAAf,cAAA,KAAGG,KAAK,wBAAR,sBAHJ,yBAMJke,EAAAtd,EAAAf,cAAA,wBACAqe,EAAAtd,EAAAf,cAAA,UACIqe,EAAAtd,EAAAf,cAAA,kEACAqe,EAAAtd,EAAAf,cAAA,sDACAqe,EAAAtd,EAAAf,cAAA,gJAIAqe,EAAAtd,EAAAf,cAAA,yCAEJqe,EAAAtd,EAAAf,cAAA,wBACAqe,EAAAtd,EAAAf,cAAA,UACIqe,EAAAtd,EAAAf,cAAA,4EACAqe,EAAAtd,EAAAf,cAAA,oDACAqe,EAAAtd,EAAAf,cAAA,6JAIAqe,EAAAtd,EAAAf,cAAA,oDACAqe,EAAAtd,EAAAf,cAAA,iCAEJqe,EAAAtd,EAAAf,cAAA,wBACAqe,EAAAtd,EAAAf,cAAA,UACIqe,EAAAtd,EAAAf,cAAA,8BACAqe,EAAAtd,EAAAf,cAAA,8CACAqe,EAAAtd,EAAAf,cAAA,+CACAqe,EAAAtd,EAAAf,cAAA,+FACAqe,EAAAtd,EAAAf,cAAA,oCACAqe,EAAAtd,EAAAf,cAAA,wCACAqe,EAAAtd,EAAAf,cAAA,uCACAqe,EAAAtd,EAAAf,cAAA,iCAEJqe,EAAAtd,EAAAf,cAAA,wBACAqe,EAAAtd,EAAAf,cAAA,UACIqe,EAAAtd,EAAAf,cAAA,yDACAqe,EAAAtd,EAAAf,cAAA,+KAMJqe,EAAAtd,EAAAf,cAAA,wBACAqe,EAAAtd,EAAAf,cAAA,UACIqe,EAAAtd,EAAAf,cAAA,qEACAqe,EAAAtd,EAAAf,cAAA,8GAGAqe,EAAAtd,EAAAf,cAAA,kEAGJqe,EAAAtd,EAAAf,cAAA,wBACAqe,EAAAtd,EAAAf,cAAA,UACIqe,EAAAtd,EAAAf,cAAA,iEACAqe,EAAAtd,EAAAf,cAAA,oFAEJqe,EAAAtd,EAAAf,cAAA,wBACAqe,EAAAtd,EAAAf,cAAA,UACIqe,EAAAtd,EAAAf,cAAA,wEACAqe,EAAAtd,EAAAf,cAAA,4CACAqe,EAAAtd,EAAAf,cAAA,qCAEJqe,EAAAtd,EAAAf,cAAA,wBACAqe,EAAAtd,EAAAf,cAAA,4CAhH2Bse,aCG3C3d,OAAOyB,iBAAiB,QAAS,SAASi6B,GAElC,IAAI7/B,EAAQ6/B,EAAI7/B,MAChBqF,GAAW,GAAAxD,OAAI7B,EAAM3G,QAAV,KAAAwI,OAAqB7B,EAAM8F,cAYzBg6B,eACjB,SAAAA,EAAY9d,GAAc,IAAApa,EAAA,OAAAE,OAAAC,GAAA,EAAAD,CAAAD,KAAAi4B,IACtBl4B,EAAAE,OAAAma,GAAA,EAAAna,CAAAD,KAAAC,OAAAoa,GAAA,EAAApa,CAAAg4B,GAAA1uB,KAAAvJ,KAAMma,KACDlM,MAAQ,CAAEiqB,UAAU,GAFHn4B,mFAKR5H,EAAqB4X,GACnC/P,KAAK2b,SAAS,CAAEuc,UAAU,IAGlB16B,GADU,OAAVrF,EACW,GAAA6B,OAAI7B,EAAM3G,QAAV,KAAAwI,OAAqB7B,EAAM8F,OAE3B,aAAAjE,OAAc+V,qCAMjC,OAAI/P,KAAKiO,MAAMiqB,SAEPle,EAAAtd,EAAAf,cAACsxB,GAAD,CAAerD,UAAW9P,GAAUuQ,QAASR,KAAK,MAAlD,sFACwF,IACpF7P,EAAAtd,EAAAf,cAAA,KAAGG,KAAK,yBAAR,kBAFJ,KAMDkE,KAAKma,MAAMlI,gBA1BiBgI,4CCZtBke,iNACjBlqB,MAAQ,CACJmqB,eAAe,KAGnBC,aAAe,WACXt4B,EAAK4b,SAAS,CAAEyc,eAAgBr4B,EAAKkO,MAAMmqB,mBAG/CE,UAAY,WACRv4B,EAAK4b,SAAS,CAAEyc,eAAe,IAC/Br4B,EAAKoa,MAAMoe,cAGfC,SAAW,WACPz4B,EAAK4b,SAAS,CAAEyc,eAAe,+EAG1B,IACGA,EAAkBp4B,KAAKiO,MAAvBmqB,cACAK,EAAaz4B,KAAKma,MAAlBse,SAER,OACIze,EAAAtd,EAAAf,cAAAqe,EAAAtd,EAAA8sB,SAAA,KACIxP,EAAAtd,EAAAf,cAAA,KAAGutB,MAAM,SAASvH,UAAS,kBAAA3nB,OAAoB4B,KAAMtR,QAAUm/B,QAASzpB,KAAKq4B,cAA7E,yBAEK,IACJD,GACGpe,EAAAtd,EAAAf,cAAAqe,EAAAtd,EAAA8sB,SAAA,KACKiP,EAAU,IACXze,EAAAtd,EAAAf,cAAA,QAAMgmB,UAAW/lB,KAAMrR,OAAQk/B,QAASzpB,KAAKs4B,WAA7C,OAEQ,IAJZ,IAKM,IACFte,EAAAtd,EAAAf,cAAA,QAAMgmB,UAAW/lB,KAAMrR,OAAQk/B,QAASzpB,KAAKw4B,UAA7C,eAlCqBve,kCC4BhCye,GAAb,SAAA7N,GAAA,SAAA6N,IAAA,IAAA5N,EAAA/qB,EAAAE,OAAAC,GAAA,EAAAD,CAAAD,KAAA04B,GAAA,QAAA3N,EAAApmB,UAAA1D,OAAA+pB,EAAA,IAAAhkB,MAAA+jB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAAtmB,UAAAsmB,GAAA,OAAAlrB,EAAAE,OAAAma,GAAA,EAAAna,CAAAD,MAAA8qB,EAAA7qB,OAAAoa,GAAA,EAAApa,CAAAy4B,IAAAnvB,KAAA7E,MAAAomB,EAAA,CAAA9qB,MAAAhG,OAAAgxB,MACI/c,MAAoB,CAChB0qB,YAAa,GACbtlC,MAAO,KACPC,OAAQ,KACRJ,IAAK,KALb6M,EAQI64B,qBAAuB,SAAC5mC,GAAoB,IAAAmqB,EACPpc,EAAKoa,MAA9BmI,EADgCnG,EAChCmG,SAAUkN,EADsBrT,EACtBqT,WACC,OAAfA,GACAlN,EAASvwB,GAAkBy9B,EAAWj+B,GAAIS,KAXtD+N,EAeIupB,aAAe,SAACtrB,GACZ+B,EAAK4b,SAAS,CAAEgd,YAAa36B,EAAMiqB,OAAO/hB,SAhBlDnG,EAmBIsyB,kBAAoB,SAACr0B,GACjB+B,EAAK4b,SAAS,CAAEtoB,MAAO84B,WAAWnuB,EAAMiqB,OAAO/hB,UApBvDnG,EAuBIuyB,mBAAqB,SAACt0B,GAClB+B,EAAK4b,SAAS,CAAEroB,OAAQ64B,WAAWnuB,EAAMiqB,OAAO/hB,UAxBxDnG,EA2BI84B,yBAA2B,WAAM,IAAAxc,EACItc,EAAKoa,MAA9BmI,EADqBjG,EACrBiG,SAAUkN,EADWnT,EACXmT,WAElB,GAAmB,OAAfA,EAAJ,CAIA,IAAMmJ,EAAc54B,EAAKkO,MAAM0qB,YAAY1K,OAGvC3L,EADAqW,EACSxlC,GAAqBwlC,EAAa54B,EAAKkO,MAAM5a,MAAO0M,EAAKkO,MAAM3a,OAAQk8B,EAAWj+B,IAElFH,GAAe,QAAS,yCAvC7C2O,EA2CI+4B,oBAAsB,SAACtlC,IAEnB8uB,EADqBviB,EAAKoa,MAAlBmI,UACC/uB,GAAqBC,KA7CtCuM,EAgDI2rB,gBAAkB,SAAC1tB,GACf+B,EAAK4b,SAAS,CAAEzoB,IAAK2zB,SAAS7oB,EAAMiqB,OAAO/hB,UAjDnDnG,EAoDI4rB,eAAiB,WAAM,IAAAjP,EACc3c,EAAKoa,MAA9BmI,EADW5F,EACX4F,SAAUkN,EADC9S,EACD8S,WACVt8B,EAAQ6M,EAAKkO,MAAb/a,IAEW,OAAfs8B,GACAlN,EAASrvB,GAAqBC,EAAK,QAASs8B,EAAWj+B,MAzDnEwO,EAAA,OAAAE,OAAAqrB,GAAA,EAAArrB,CAAAy4B,EAAA7N,GAAA5qB,OAAAsrB,GAAA,EAAAtrB,CAAAy4B,EAAA,EAAA5P,IAAA,SAAA5iB,MAAA,WA6Da,IAAAiiB,EAAAnoB,KAAAqd,EACgErd,KAAKma,MAAlExF,EADH0I,EACG1I,gBAAiB6a,EADpBnS,EACoBmS,WAAY3iB,EADhCwQ,EACgCxQ,OAAQC,EADxCuQ,EACwCvQ,KAAM+e,EAD9CxO,EAC8CwO,cAC3C34B,EAAQ8M,KAAKiO,MAAb/a,IAEJnI,EAAW8hB,EAAOI,IAAI,SAAApK,GAAS,OAAIiK,EAAKjK,KAC5C9X,EAASsoC,KAAK,SAAC32B,EAAGq8B,GAAJ,OAAWr8B,EAAErI,KAAO0kC,EAAE1kC,MAAQ,EAAI,IAEhD,IAAM2kC,EAAejuC,EAASkiB,IAAI,SAAAsF,GAAO,OACrCyH,EAAAtd,EAAAf,cAAA,MAAImtB,IAAKvW,EAAQhhB,IACbyoB,EAAAtd,EAAAf,cAACs9B,GAAA,EAAD,CAAMC,GAAE,YAAAl/B,OAAcuY,EAAQhhB,KAAOghB,EAAQle,MAAa,IAC1D2lB,EAAAtd,EAAAf,cAACw9B,GAAD,CACIV,SAAS,8CACTF,SAAU,kBAAMpQ,EAAK2Q,oBAAoBvmB,EAAQhhB,UAK7D,OACIojB,GACe,OAAf6a,GACIxV,EAAAtd,EAAAf,cAAA,OAAKgmB,UAAW/lB,KAAM7Q,UAClBivB,EAAAtd,EAAAf,cAACsxB,GAAD,CAAerD,UAAW9P,GAAUqQ,OAApC,wIAKAnQ,EAAAtd,EAAAf,cAACy7B,GAAD,CAAelO,MAAOsG,EAAWn7B,KAAMk1B,SAAUvpB,KAAK44B,uBAEtD5e,EAAAtd,EAAAf,cAAA,UAAKq9B,GAELhf,EAAAtd,EAAAf,cAAA,OAAKgmB,UAAU,QACX3H,EAAAtd,EAAAf,cAAA,SAAOmwB,QAAQ,gBAAf,kBACA9R,EAAAtd,EAAAf,cAAA,SACIpK,GAAG,eACHF,KAAK,OACLk4B,SAAUvpB,KAAKspB,aACf3H,UAAU,eACV3S,YAAY,kBAEhBgL,EAAAtd,EAAAf,cAAA,SAAOmwB,QAAQ,cAAf,eACA9R,EAAAtd,EAAAf,cAAA,SACIpK,GAAG,aACHF,KAAK,SACL8lB,IAAI,IACJ4U,KAAK,MACLxC,SAAUvpB,KAAKqyB,kBACf1Q,UAAU,eACV3S,YAAY,aACZ9I,MAAOlG,KAAKiO,MAAM5a,QAEtB2mB,EAAAtd,EAAAf,cAAA,SAAOmwB,QAAQ,eAAf,gBACA9R,EAAAtd,EAAAf,cAAA,SACIpK,GAAG,cACHF,KAAK,SACL8lB,IAAI,IACJ4U,KAAK,MACLxC,SAAUvpB,KAAKsyB,mBACf3Q,UAAU,eACV3S,YAAY,cACZ9I,MAAOlG,KAAKiO,MAAM3a,SAEtB0mB,EAAAtd,EAAAf,cAAA,UAAQ8tB,QAASzpB,KAAK64B,0BAAtB,oBAGJ7e,EAAAtd,EAAAf,cAACsxB,GAAD,CAAerD,UAAW9P,GAAUqQ,MAAON,KAAK,WAAhD,iHAKA7P,EAAAtd,EAAAf,cAACyxB,GAAD,CAAc/7B,KAAK,QAAQE,GAAIi+B,EAAWj+B,GAAIy7B,UAAU,IAExDhT,EAAAtd,EAAAf,cAAA,OAAKgmB,UAAU,QAAf,kDAEI3H,EAAAtd,EAAAf,cAAA,SAAOmwB,QAAQ,OAAf,QACA9R,EAAAtd,EAAAf,cAAA,SACIpK,GAAG,MACHF,KAAK,SACL8lB,IAAI,IACJ4U,KAAK,IACLxC,SAAUvpB,KAAK0rB,gBACf/J,UAAU,eACV3S,YAAY,MACZ9I,MAAOhT,IAEX8mB,EAAAtd,EAAAf,cAAA,UAAQvR,SAAUyhC,EAAepC,QAASzpB,KAAK2rB,gBAA/C,4BAjJxB+M,EAAA,CAA8Bze,aAsKfiI,eAXS,SAACjU,GACrB,MAAO,CACH0G,gBAAiB1G,EAAM0L,KAAKhF,gBAC5B6a,WACIvhB,EAAMjB,MAAMtG,QAAUuH,EAAMjB,MAAMF,KAAKmB,EAAMjB,MAAMtG,QAAUuH,EAAMjB,MAAMF,KAAKmB,EAAMjB,MAAMtG,QAAU,KACxGmG,OAAQoB,EAAMljB,SAAS8hB,OACvBC,KAAMmB,EAAMljB,SAAS+hB,KACrB+e,eAAgB5d,EAAMjB,MAAMgI,SAAWT,MAA2BA,KAI3D2N,CAAyBwW,IC7L3BU,GAAb,SAAAvO,GAAA,SAAAuO,IAAA,OAAAn5B,OAAAC,GAAA,EAAAD,CAAAD,KAAAo5B,GAAAn5B,OAAAma,GAAA,EAAAna,CAAAD,KAAAC,OAAAoa,GAAA,EAAApa,CAAAm5B,GAAA10B,MAAA1E,KAAA2E,YAAA,OAAA1E,OAAAqrB,GAAA,EAAArrB,CAAAm5B,EAAAvO,GAAA5qB,OAAAsrB,GAAA,EAAAtrB,CAAAm5B,EAAA,EAAAtQ,IAAA,oBAAA5iB,MAAA,WACwB,IAAAiW,EACYnc,KAAKma,MAAzBmI,EADQnG,EACRmG,SAAUsV,EADFzb,EACEyb,MAClBtV,EAASrwB,GAAkB2lC,EAAMC,OAAOtmC,IAAI,MAHpD,CAAAu3B,IAAA,SAAA5iB,MAAA,WAOQ,OAAO8T,EAAAtd,EAAAf,cAAC09B,GAAD,UAPfD,EAAA,CAA8Bnf,aAafiI,eAFS,SAACjU,GAAD,MAAmB,CAAE0G,gBAAiB1G,EAAM0L,KAAKhF,kBAE1DuN,CAAyBkX,cCdnBE,iNACjBrrB,MAAQ,CACJ2L,SAAU,GACV2f,SAAU,MAGdC,qBAAuB,SAACx7B,GACpB+B,EAAK4b,SAAS,CAAE/B,SAAU5b,EAAMiqB,OAAO/hB,WAG3CuzB,qBAAuB,SAACz7B,GACpB+B,EAAK4b,SAAS,CAAE4d,SAAUv7B,EAAMiqB,OAAO/hB,WAG3CwzB,aAAe,SAAC17B,GACZ,IAAM4b,EAAW7Z,EAAKkO,MAAM2L,SAASqU,OAC/BsL,EAAWx5B,EAAKkO,MAAMsrB,SAAStL,OACrC,GAAIrU,GAAY2f,EAAU,CACtB,IAAMlgC,EAAQ,CAAEugB,WAAU2f,YAC1Bx5B,EAAKoa,MAAMwf,QAAQtgC,QAEnB0G,EAAKoa,MAAMyf,eAAe,qCAE9B57B,EAAMsV,4FAIN,OACI0G,EAAAtd,EAAAf,cAAA,WACIqe,EAAAtd,EAAAf,cAAA,QAAMgmB,UAAU,OAAOkY,SAAU75B,KAAK05B,cAClC1f,EAAAtd,EAAAf,cAAA,SACItK,KAAK,OACLk4B,SAAUvpB,KAAKw5B,qBACf7X,UAAU,eACV3S,YAAY,aAEhBgL,EAAAtd,EAAAf,cAAA,SACItK,KAAK,WACLk4B,SAAUvpB,KAAKy5B,qBACf9X,UAAU,eACV3S,YAAY,aAEhBgL,EAAAtd,EAAAf,cAAA,SAAOtK,KAAK,SAAS6U,MAAM,mBA1CZ+T,aCEtB6f,GAAb,SAAAjP,GAAA,SAAAiP,IAAA,OAAA75B,OAAAC,GAAA,EAAAD,CAAAD,KAAA85B,GAAA75B,OAAAma,GAAA,EAAAna,CAAAD,KAAAC,OAAAoa,GAAA,EAAApa,CAAA65B,GAAAp1B,MAAA1E,KAAA2E,YAAA,OAAA1E,OAAAqrB,GAAA,EAAArrB,CAAA65B,EAAAjP,GAAA5qB,OAAAsrB,GAAA,EAAAtrB,CAAA65B,EAAA,EAAAhR,IAAA,SAAA5iB,MAAA,WACa,IAAAiW,EACiCnc,KAAKma,MAAnCmI,EADHnG,EACGmG,SAAU3N,EADbwH,EACaxH,gBAElB,OACIqF,EAAAtd,EAAAf,cAAA,OAAKgmB,UAAU,QACThN,GACEqF,EAAAtd,EAAAf,cAAAqe,EAAAtd,EAAA8sB,SAAA,KACIxP,EAAAtd,EAAAf,cAACsxB,GAAD,CAAerD,UAAW9P,GAAUqQ,OAApC,uGAEcnQ,EAAAtd,EAAAf,cAAA,KAAGG,KAAK,WAAR,WAFd,KAKAke,EAAAtd,EAAAf,cAACo+B,GAAD,CACIJ,QAAS,SAAAtgC,GAAK,OAAIipB,ExC2nBlB,SAACjpB,GACzB,MAAO,CACHhI,KAAMxF,EACNwN,MAAOA,GwC9nBwC2gC,CAAa3gC,KACxCugC,eAAgB,SAAAK,GAAG,OAAI3X,EAASlxB,GAAe,QAAS6oC,QAInEtlB,GAAmBqF,EAAAtd,EAAAf,cAACu+B,GAAA,EAAD,CAAUhB,GAAG,WAnBjDY,EAAA,CAA+B7f,aA2BhBiI,eAFS,SAACjU,GAAD,MAAmB,CAAE0G,gBAAiB1G,EAAM0L,KAAKhF,kBAE1DuN,CAAyB4X,ICpB3BK,GAAb,SAAAtP,GAAA,SAAAsP,IAAA,IAAArP,EAAA/qB,EAAAE,OAAAC,GAAA,EAAAD,CAAAD,KAAAm6B,GAAA,QAAApP,EAAApmB,UAAA1D,OAAA+pB,EAAA,IAAAhkB,MAAA+jB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAAtmB,UAAAsmB,GAAA,OAAAlrB,EAAAE,OAAAma,GAAA,EAAAna,CAAAD,MAAA8qB,EAAA7qB,OAAAoa,GAAA,EAAApa,CAAAk6B,IAAA5wB,KAAA7E,MAAAomB,EAAA,CAAA9qB,MAAAhG,OAAAgxB,MACI/c,MAAoB,CAChBmsB,SAAU,IAFlBr6B,EAKIupB,aAAe,SAACtrB,GACZ+B,EAAK4b,SAAS,CAAEye,SAAUp8B,EAAMiqB,OAAO/hB,SAN/CnG,EASIs6B,sBAAwB,WAAM,IAClB/X,EAAaviB,EAAKoa,MAAlBmI,SAEF1wB,EAAWmO,EAAKkO,MAAMmsB,SAASnM,OAEjC3L,EADA1wB,EACSD,GAAkBC,GAElBR,GAAe,QAAS,oCAhB7C2O,EAoBIu6B,iBAAmB,SAACxoC,IAEhBwwB,EADqBviB,EAAKoa,MAAlBmI,UACCzwB,GAAkBC,KAtBnCiO,EAAA,OAAAE,OAAAqrB,GAAA,EAAArrB,CAAAk6B,EAAAtP,GAAA5qB,OAAAsrB,GAAA,EAAAtrB,CAAAk6B,EAAA,EAAArR,IAAA,SAAA5iB,MAAA,WAyBa,IAAAiiB,EAAAnoB,KAAAmc,EACqCnc,KAAKma,MAAvCxF,EADHwH,EACGxH,gBAAiB9H,EADpBsP,EACoBtP,OAAQC,EAD5BqP,EAC4BrP,KAE3BE,EAAQH,EAAOI,IAAI,SAAAnb,GAAM,OAAIgb,EAAKhb,KACxCkb,EAAMqmB,KAAK,SAAC32B,EAAGq8B,GAAJ,OAAWr8B,EAAErI,KAAO0kC,EAAE1kC,MAAQ,EAAI,IAE7C,IAAMkmC,EAAYvtB,EAAMC,IAAI,SAAA2G,GAAI,OAC5BoG,EAAAtd,EAAAf,cAAA,MAAImtB,IAAKlV,EAAKriB,IACVyoB,EAAAtd,EAAAf,cAACs9B,GAAA,EAAD,CAAMC,GAAE,SAAAl/B,OAAW4Z,EAAKriB,KAAOqiB,EAAKvf,MAAa,IACjD2lB,EAAAtd,EAAAf,cAACw9B,GAAD,CACIV,SAAS,0CACTF,SAAU,kBAAMpQ,EAAKmS,iBAAiB1mB,EAAKriB,UAKvD,OACIojB,GACIqF,EAAAtd,EAAAf,cAAA,WACIqe,EAAAtd,EAAAf,cAACsxB,GAAD,CAAerD,UAAW9P,GAAUqQ,OACb,IAAlBtd,EAAO5L,QACJ+Y,EAAAtd,EAAAf,cAAAqe,EAAAtd,EAAA8sB,SAAA,sFAEH3c,EAAO5L,OAAS,GACb+Y,EAAAtd,EAAAf,cAAAqe,EAAAtd,EAAA8sB,SAAA,kFAIRxP,EAAAtd,EAAAf,cAAA,UAAK4+B,GACLvgB,EAAAtd,EAAAf,cAAA,OAAKgmB,UAAU,QACX3H,EAAAtd,EAAAf,cAAA,SAAOmwB,QAAQ,aAAf,cACA9R,EAAAtd,EAAAf,cAAA,SACIpK,GAAG,YACHF,KAAK,OACLk4B,SAAUvpB,KAAKspB,aACf3H,UAAU,eACV3S,YAAY,cAEhBgL,EAAAtd,EAAAf,cAAA,UAAQ8tB,QAASzpB,KAAKq6B,uBAAtB,qBA/DxBF,EAAA,CAA2BlgB,aA+EZiI,eARS,SAACjU,GACrB,MAAO,CACH0G,gBAAiB1G,EAAM0L,KAAKhF,gBAC5B9H,OAAQoB,EAAMjB,MAAMH,OACpBC,KAAMmB,EAAMjB,MAAMF,OAIXoV,CAAyBiY,ICzF3BK,GAAb,SAAA3P,GAAA,SAAA2P,IAAA,OAAAv6B,OAAAC,GAAA,EAAAD,CAAAD,KAAAw6B,GAAAv6B,OAAAma,GAAA,EAAAna,CAAAD,KAAAC,OAAAoa,GAAA,EAAApa,CAAAu6B,GAAA91B,MAAA1E,KAAA2E,YAAA,OAAA1E,OAAAqrB,GAAA,EAAArrB,CAAAu6B,EAAA3P,GAAA5qB,OAAAsrB,GAAA,EAAAtrB,CAAAu6B,EAAA,EAAA1R,IAAA,SAAA5iB,MAAA,WAEQ,OAAIlG,KAAKma,MAAMxF,gBACJqF,EAAAtd,EAAAf,cAAC8+B,GAAD,MAGHzgB,EAAAtd,EAAAf,cAACsxB,GAAD,CAAerD,UAAW9P,GAAUqQ,OAApC,+DACgEnQ,EAAAtd,EAAAf,cAAA,KAAGG,KAAK,UAAR,SADhE,MAC8F,IAC1Fke,EAAAtd,EAAAf,cAAA,KAAGG,KAAK,WAAR,WAFJ,eANhB0+B,EAAA,CAA0BvgB,aAqBXiI,eANS,SAACjU,GACrB,MAAO,CACH0G,gBAAiB1G,EAAM0L,KAAKhF,kBAIrBuN,CAAyBsY,IC9B3BE,GAAgB,SAACzsB,GAAD,OAAmBA,EAAMjB,MAAMtG,OAASuH,EAAMjB,MAAMF,KAAKmB,EAAMjB,MAAMtG,QAAU,MAE/Fi0B,GAAmB,SAAC1sB,GAAD,OAC5BA,EAAMljB,SAAS2b,OAASuH,EAAMljB,SAAS+hB,KAAKmB,EAAMljB,SAAS2b,QAAU,MCS1Dk0B,OARf,SAAgBzgB,GACZ,OACIH,EAAAtd,EAAAf,cAAA,UAAQ8tB,QAAS,kBAAMtP,EAAM0gB,YAAYlZ,UAAU,mBAAnD,+BCoBKmZ,GAAb,SAAAjQ,GAAA,SAAAiQ,IAAA,OAAA76B,OAAAC,GAAA,EAAAD,CAAAD,KAAA86B,GAAA76B,OAAAma,GAAA,EAAAna,CAAAD,KAAAC,OAAAoa,GAAA,EAAApa,CAAA66B,GAAAp2B,MAAA1E,KAAA2E,YAAA,OAAA1E,OAAAqrB,GAAA,EAAArrB,CAAA66B,EAAAjQ,GAAA5qB,OAAAsrB,GAAA,EAAAtrB,CAAA66B,EAAA,EAAAhS,IAAA,SAAA5iB,MAAA,WACa,IAAAiW,EACsEnc,KAAKma,MAAxEmI,EADHnG,EACGmG,SAAU3N,EADbwH,EACaxH,gBAAiBF,EAD9B0H,EAC8B1H,SAAU+a,EADxCrT,EACwCqT,WAAY2H,EADpDhb,EACoDgb,cAEzD,OACInd,EAAAtd,EAAAf,cAAA,WACIqe,EAAAtd,EAAAf,cAAA,OAAKpK,GAAG,WAAWowB,UAAW/lB,KAAM6Y,UAChCuF,EAAAtd,EAAAf,cAAA,UACK8Y,EAASxH,IAAI,SAAAyM,GAAC,OACXM,EAAAtd,EAAAf,cAAA,MAAImtB,IAAKpP,EAAEnoB,GAAIowB,UAAsB,UAAXjI,EAAEroB,KAAmBuK,KAAMzD,MAAQyD,KAAMmU,MACnD,UAAX2J,EAAEroB,MACC2oB,EAAAtd,EAAAf,cAAAqe,EAAAtd,EAAA8sB,SAAA,KACIxP,EAAAtd,EAAAf,cAAA,KAAGgmB,UAAU,kBAAb,SADJ,IAC6CjI,EAAEpoB,MAGvC,SAAXooB,EAAEroB,MACC2oB,EAAAtd,EAAAf,cAAAqe,EAAAtd,EAAA8sB,SAAA,KACIxP,EAAAtd,EAAAf,cAAA,KAAGgmB,UAAU,kBAAb,QADJ,IAC4CjI,EAAEpoB,MAGtC,aAAXooB,EAAEroB,MACC2oB,EAAAtd,EAAAf,cAAAqe,EAAAtd,EAAA8sB,SAAA,KACIxP,EAAAtd,EAAAf,cAAC47B,GAAD,CAAQ9M,OAAO,IADnB,IAC6B/Q,EAAEpoB,WAOnD0oB,EAAAtd,EAAAf,cAAA,WACIqe,EAAAtd,EAAAf,cAAA,MAAIgmB,UAAW/lB,KAAMw0B,QACjBpW,EAAAtd,EAAAf,cAACs9B,GAAA,EAAD,CAAMC,GAAG,KAAT,eAEJlf,EAAAtd,EAAAf,cAAA,WACIqe,EAAAtd,EAAAf,cAAA,MAAIgmB,UAAW/lB,KAAMm/B,MAChBpmB,GACGqF,EAAAtd,EAAAf,cAAAqe,EAAAtd,EAAA8sB,SAAA,KACIxP,EAAAtd,EAAAf,cAAA,UACIqe,EAAAtd,EAAAf,cAACs9B,GAAA,EAAD,CAAMC,GAAG,KAAT,SAEH1J,GACGxV,EAAAtd,EAAAf,cAAA,UACIqe,EAAAtd,EAAAf,cAACs9B,GAAA,EAAD,CAAMC,GAAE,SAAAl/B,OAAWw1B,EAAWj+B,KAA9B,SAA2Ci+B,EAAWn7B,KAAtD,MAGP8iC,GACGnd,EAAAtd,EAAAf,cAAA,UACIqe,EAAAtd,EAAAf,cAACs9B,GAAA,EAAD,CAAMC,GAAE,YAAAl/B,OAAcm9B,EAAc5lC,KAApC,aACe4lC,EAAc9iC,KAD7B,OAOhB2lB,EAAAtd,EAAAf,cAAA,UACIqe,EAAAtd,EAAAf,cAACs9B,GAAA,EAAD,CAAMC,GAAG,cAAT,cAEJlf,EAAAtd,EAAAf,cAAA,UACIqe,EAAAtd,EAAAf,cAACs9B,GAAA,EAAD,CAAMC,GAAG,UAAT,UAEHvkB,GACGqF,EAAAtd,EAAAf,cAAA,UACIqe,EAAAtd,EAAAf,cAACq/B,GAAD,CAAQH,SAAU,kBAAMvY,E7CqkBjD,CACHjxB,KAAMrF,S6CnkBgB2oB,GACEqF,EAAAtd,EAAAf,cAAAqe,EAAAtd,EAAA8sB,SAAA,KACIxP,EAAAtd,EAAAf,cAAA,UACIqe,EAAAtd,EAAAf,cAACs9B,GAAA,EAAD,CAAMC,GAAG,UAAT,UAEJlf,EAAAtd,EAAAf,cAAA,UACIqe,EAAAtd,EAAAf,cAACs9B,GAAA,EAAD,CAAMC,GAAG,WAAT,qBAvExC4B,EAAA,CAA4B7gB,aA4FbiI,eATS,SAACjU,GACrB,MAAO,CACH0G,gBAAiB1G,EAAM0L,KAAKhF,gBAC5BF,SAAUxG,EAAMzc,QAAQijB,SACxB+a,WAAYkL,GAAczsB,GAC1BkpB,cAAewD,GAAiB1sB,KAIzBiU,CAAqE4Y,ICpH/DG,yLAEb,OACIjhB,EAAAtd,EAAAf,cAACsxB,GAAD,CAAerD,UAAW9P,GAAUuQ,QAASR,KAAK,OAAlD,iCAH8B5P,aCO7BihB,GAAb,SAAArQ,GAAA,SAAAqQ,IAAA,IAAApQ,EAAA/qB,EAAAE,OAAAC,GAAA,EAAAD,CAAAD,KAAAk7B,GAAA,QAAAnQ,EAAApmB,UAAA1D,OAAA+pB,EAAA,IAAAhkB,MAAA+jB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAAtmB,UAAAsmB,GAAA,OAAAlrB,EAAAE,OAAAma,GAAA,EAAAna,CAAAD,MAAA8qB,EAAA7qB,OAAAoa,GAAA,EAAApa,CAAAi7B,IAAA3xB,KAAA7E,MAAAomB,EAAA,CAAA9qB,MAAAhG,OAAAgxB,MACI/c,MAAQ,CACJ2L,SAAU,GACV2f,SAAU,GACV4B,eAAgB,IAJxBp7B,EAuBIy5B,qBAAuB,SAACx7B,GACpB+B,EAAK4b,SAAS,CAAE/B,SAAU5b,EAAMiqB,OAAO/hB,SAxB/CnG,EA2BI05B,qBAAuB,SAACz7B,GACpB+B,EAAK4b,SAAS,CAAE4d,SAAUv7B,EAAMiqB,OAAO/hB,SA5B/CnG,EA+BIq7B,2BAA6B,SAACp9B,GAC1B+B,EAAK4b,SAAS,CAAEwf,eAAgBn9B,EAAMiqB,OAAO/hB,SAhCrDnG,EAAA,OAAAE,OAAAqrB,GAAA,EAAArrB,CAAAi7B,EAAArQ,GAAA5qB,OAAAsrB,GAAA,EAAAtrB,CAAAi7B,EAAA,EAAApS,IAAA,eAAA5iB,MAAA,SAOiBlI,GAAwB,IAAAme,EACFnc,KAAKma,MAA5BmI,EADyBnG,EACzBmG,SAAU+Y,EADelf,EACfkf,SAEdr7B,KAAKiO,MAAMsrB,WAAav5B,KAAKiO,MAAMktB,eACnC7Y,EAASlxB,GAAe,QAAS,4BAMjCiqC,EAJc,CACVzhB,SAAU5Z,KAAKiO,MAAM2L,SAASqU,OAC9BsL,SAAUv5B,KAAKiO,MAAMsrB,SAAStL,SAKtCjwB,EAAMsV,mBApBd,CAAAwV,IAAA,SAAA5iB,MAAA,WAmCa,IAAAiiB,EAAAnoB,KACL,OACIga,EAAAtd,EAAAf,cAAA,WACIqe,EAAAtd,EAAAf,cAAA,QAAMgmB,UAAU,OAAOkY,SAAU,SAAA77B,GAAK,OAAImqB,EAAKuR,aAAa17B,KACxDgc,EAAAtd,EAAAf,cAAA,SACItK,KAAK,OACLk4B,SAAUvpB,KAAKw5B,qBACf7X,UAAU,eACV3S,YAAY,aAEhBgL,EAAAtd,EAAAf,cAAA,SACItK,KAAK,WACLk4B,SAAUvpB,KAAKy5B,qBACf9X,UAAU,eACV3S,YAAY,aAEhBgL,EAAAtd,EAAAf,cAAA,SACItK,KAAK,WACLk4B,SAAUvpB,KAAKo7B,2BACfzZ,UAAU,eACV3S,YAAY,yBAEhBgL,EAAAtd,EAAAf,cAAA,SAAOtK,KAAK,SAAS6U,MAAM,kBAzD/Cg1B,EAAA,CAA4BjhB,aA+DbiI,iBAAUgZ,IC5DZI,GAAb,SAAAzQ,GAAA,SAAAyQ,IAAA,OAAAr7B,OAAAC,GAAA,EAAAD,CAAAD,KAAAs7B,GAAAr7B,OAAAma,GAAA,EAAAna,CAAAD,KAAAC,OAAAoa,GAAA,EAAApa,CAAAq7B,GAAA52B,MAAA1E,KAAA2E,YAAA,OAAA1E,OAAAqrB,GAAA,EAAArrB,CAAAq7B,EAAAzQ,GAAA5qB,OAAAsrB,GAAA,EAAAtrB,CAAAq7B,EAAA,EAAAxS,IAAA,SAAA5iB,MAAA,WACa,IAAAiW,EACiCnc,KAAKma,MAAnCmI,EADHnG,EACGmG,SAAU3N,EADbwH,EACaxH,gBAElB,OACIqF,EAAAtd,EAAAf,cAAA,OAAKgmB,UAAU,QACThN,GACEqF,EAAAtd,EAAAf,cAAAqe,EAAAtd,EAAA8sB,SAAA,KACIxP,EAAAtd,EAAAf,cAACsxB,GAAD,CAAerD,UAAW9P,GAAUqQ,OAApC,gSAOAnQ,EAAAtd,EAAAf,cAAC4/B,GAAD,CAAQF,SAAU,SAAAhiC,GAAK,OAAIipB,EhDuoBtB,SAACjpB,GAC1B,MAAO,CACHhI,KAAMlF,EACNkN,MAAOA,GgD1oB6CmiC,CAAcniC,QAGzDsb,GAAmBqF,EAAAtd,EAAAf,cAACu+B,GAAA,EAAD,CAAUhB,GAAG,WAlBjDoC,EAAA,CAAgCrhB,aA0BjBiI,eAFS,SAACjU,GAAD,MAAmB,CAAE0G,gBAAiB1G,EAAM0L,KAAKhF,kBAE1DuN,CAAyBoZ,ICf3BG,GAAb,SAAA5Q,GAAA,SAAA4Q,IAAA,OAAAx7B,OAAAC,GAAA,EAAAD,CAAAD,KAAAy7B,GAAAx7B,OAAAma,GAAA,EAAAna,CAAAD,KAAAC,OAAAoa,GAAA,EAAApa,CAAAw7B,GAAA/2B,MAAA1E,KAAA2E,YAAA,OAAA1E,OAAAqrB,GAAA,EAAArrB,CAAAw7B,EAAA5Q,GAAA5qB,OAAAsrB,GAAA,EAAAtrB,CAAAw7B,EAAA,EAAA3S,IAAA,oBAAA5iB,MAAA,WAEQlG,KAAKma,MAAMmI,SjDynBR,CAAEjxB,KAAM3F,MiD3nBnB,CAAAo9B,IAAA,SAAA5iB,MAAA,WAMQ,GAAIw1B,QAAM,OAAO1hB,EAAAtd,EAAAf,cAAA,mEADZ,IAEGgZ,EAAoB3U,KAAKma,MAAzBxF,gBACR,OACIqF,EAAAtd,EAAAf,cAACggC,GAAA,EAAD,KACI3hB,EAAAtd,EAAAf,cAAA,OAAKgmB,UAAU,OACX3H,EAAAtd,EAAAf,cAACigC,GAAD,KACI5hB,EAAAtd,EAAAf,cAACkgC,GAAD,CAAQlnB,gBAAiBA,IACzBqF,EAAAtd,EAAAf,cAACmgC,GAAA,EAAD,KACI9hB,EAAAtd,EAAAf,cAACogC,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAI/F,UAAWsE,KACjCxgB,EAAAtd,EAAAf,cAACogC,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAAS/F,UAAW4D,KACtC9f,EAAAtd,EAAAf,cAACogC,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAU/F,UAAWoF,KACvCthB,EAAAtd,EAAAf,cAACogC,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAAY/F,UAAWkD,KACzCpf,EAAAtd,EAAAf,cAACogC,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,eAAe/F,UAAWyB,KAC5C3d,EAAAtd,EAAAf,cAACogC,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,aAAa/F,UAAW6B,KAC1C/d,EAAAtd,EAAAf,cAACogC,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAAS/F,UAAWnc,KACtCC,EAAAtd,EAAAf,cAACogC,GAAA,EAAD,CAAO7F,UAAW+E,MAEtBjhB,EAAAtd,EAAAf,cAAA,OAAKgmB,UAAU,cAAf,6BAAwD,IAAIrX,MAAO4xB,sBAvB3FT,EAAA,CAAyBxhB,aAwCViI,eATS,SAACjU,GAIrB,MAAO,CACH0G,gBAJa1G,EAAT0L,KACAhF,kBAOGuN,CAAyBuZ,ICrDpBU,QACa,cAA7B7/B,OAAOzD,SAASujC,UAEiB,UAA7B9/B,OAAOzD,SAASujC,UAEhB9/B,OAAOzD,SAASujC,SAASxE,MAAM,2DCPvC,IAAMyE,GCJC,WACH,IAAMC,EAAiBC,cACjBF,EAAQG,YACVjjB,GAEAjd,OAAOmgC,6BACDC,YACIC,YAAgBL,GAEhBhgC,OAAOmgC,gCAEXE,YAAgBL,IAG1B,OADAA,EAAeM,IAAIvzB,IACZgzB,EDVGQ,GAEdC,IAASC,OACL/iB,EAAAtd,EAAAf,cAACqhC,EAAA,EAAD,CAAUX,MAAOA,IACbriB,EAAAtd,EAAAf,cAACshC,GAAD,OAEJvhC,SAASwhC,eAAe,SD+GpB,kBAAmBC,WACnBA,UAAUC,cAAcC,MAAM7jC,KAAK,SAAA8jC,GAC/BA,EAAaC,mCGhIzBtzC,EAAAC,QAAA,CAAkBusC,QAAA,yBAAAC,SAAA,0BAAAhwB,OAAA,wBAAAvc,KAAA,sBAAAysC,OAAA,6CCAlB3sC,EAAAC,QAAA,CAAkBkmC,OAAA,uBAAA2K,KAAA,qBAAAtmB,SAAA,yBAAAtc,MAAA,sBAAA4X,KAAA,0CCAlB9lB,EAAAC,QAAA,CAAkBsgC,MAAA,sBAAAG,SAAA,yBAAAD,OAAA,uBAAAD,MAAA,sBAAA+S,eAAA,kDCAlBvzC,EAAAC,QAAA,CAAkBC,KAAA,6BAAAC,SAAA,sDCAlBH,EAAAC,QAAA,CAAkBqoB,QAAA,yBAAA8kB,YAAA,6BAAAZ,QAAA,yBAAAiB,WAAA,iDCDlBztC,EAAAC,QAAiBS,EAAAC,EAAuB,oDCAxCX,EAAAC,QAAiBS,EAAAC,EAAuB,qDCAxCX,EAAAC,QAAiBS,EAAAC,EAAuB,uDCAxCX,EAAAC,QAAiBS,EAAAC,EAAuB,uDCCxCX,EAAAC,QAAA,CAAkB2J,KAAA,mBAAAq1B,MAAA,oBAAAxiB,OAAA,qBAAAtc,SAAA","file":"static/js/main.242ec7c2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarImage_view__2LKQM\",\"disabled\":\"SidebarImage_disabled__1tNhN\",\"images\":\"SidebarImage_images__3zDK2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ConfirmedDelete_button__1o8h4\",\"answer\":\"ConfirmedDelete_answer__1OsVc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"EditableTitle_input__2Y_6m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fontFamily\":\"FontSelector_fontFamily__zlBcJ\",\"fontVariant\":\"FontSelector_fontVariant__2pA4n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarText_view__3s9r0\",\"disabled\":\"SidebarText_disabled__3efIG\"};","module.exports = __webpack_public_path__ + \"static/media/image.60f0926c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"over\":\"ImageField_over__3Q9AT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ContentEditable_content__1p7up\"};","module.exports = __webpack_public_path__ + \"static/media/text.f7f9443c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarGeneratePng_view__1_3fy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarGeneratePdf_view__10OR4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarMeasurements_view__3BCmn\",\"disabled\":\"SidebarMeasurements_disabled__2Rrd2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarSettings_view__DwnQN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarUpload_view__k69sP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardsets\":\"CardSets_cardsets__mQSav\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldcontroller\":\"FieldController_fieldcontroller__3ifWc\",\"fieldcontrolleractivefield\":\"FieldController_fieldcontrolleractivefield__9anIa\",\"fieldcontrolleractive\":\"FieldController_fieldcontrolleractive__3fSLl\",\"controller\":\"FieldController_controller__VCesw\",\"touchactivated\":\"FieldController_touchactivated__16s2w\"};","import { CancelToken } from 'axios';\nimport { Dispatch as ReduxDispatch } from 'redux';\nimport shortid from 'shortid';\n\nimport {\n    CardSetsCollection,\n    CardType,\n    CardsCollection,\n    Credentials,\n    GamesCollection,\n    IdsArray,\n    ImageArray,\n    ImageInfo,\n    MessageType,\n    PlaceholdersCollection,\n    PlaceholdersImageInfoByCardCollection,\n    PlaceholdersTextInfoByCardCollection,\n    TextInfo,\n    FieldInfoByCardCollection,\n} from './types';\n\nexport const INIT_REQUEST = 'INIT_REQUEST';\nexport const MESSAGE_DISPLAY = 'MESSAGE_DISPLAY';\nexport const MESSAGE_HIDE = 'MESSAGE_HIDE';\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\nexport const LOGOUT_FAILURE = 'LOGOUT_FAILURE';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const SIGNUP_REQUEST = 'SIGNUP_REQUEST';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAILURE = 'SIGNUP_FAILURE';\nexport const GAME_CREATE_REQUEST = 'GAME_CREATE_REQUEST';\nexport const GAME_CREATE_SUCCESS = 'GAME_CREATE_SUCCESS';\nexport const GAME_DELETE_REQUEST = 'GAME_DELETE_REQUEST';\nexport const GAME_RENAME_REQUEST = 'GAME_RENAME_REQUEST';\nexport const GAME_LIST_SUCCESS = 'GAME_LIST_SUCCESS';\nexport const GAME_LIST_REQUEST = 'GAME_LIST_REQUEST';\nexport const GAME_LIST_FAILURE = 'GAME_LIST_FAILURE';\nexport const GAME_LIST_RESET = 'GAME_LIST_RESET';\nexport const GAME_SELECT_REQUEST = 'GAME_SELECT_REQUEST';\nexport const GAME_SELECT_SUCCESS = 'GAME_SELECT_SUCCESS';\nexport const GAME_SELECT_FAILURE = 'GAME_SELECT_FAILURE';\nexport const GAME_CREATE_PDF_REQUEST = 'GAME_CREATE_PDF_REQUEST';\nexport const GAME_CREATE_PDF_SUCCESS = 'GAME_CREATE_PDF_SUCCESS';\nexport const GAME_CREATE_PDF_FAILURE = 'GAME_CREATE_PDF_FAILURE';\nexport const GAME_CREATE_PNG_REQUEST = 'GAME_CREATE_PNG_REQUEST';\nexport const GAME_CREATE_PNG_SUCCESS = 'GAME_CREATE_PNG_SUCCESS';\nexport const GAME_CREATE_PNG_FAILURE = 'GAME_CREATE_PNG_FAILURE';\nexport const CARDSETS_SELECT_SUCCESS = 'CARDSETS_SELECT_SUCCESS';\nexport const CARDSET_CREATE_REQUEST = 'CARDSET_CREATE_REQUEST';\nexport const CARDSET_CREATE_SUCCESS = 'CARDSET_CREATE_SUCCESS';\nexport const CARDSET_CREATE_FAILURE = 'CARDSET_CREATE_FAILURE';\nexport const CARDSET_DELETE_REQUEST = 'CARDSET_DELETE_REQUEST';\nexport const CARDSET_RENAME_REQUEST = 'CARDSET_RENAME_REQUEST';\nexport const CARDSET_IMPORT_DATA = 'CARDSET_IMPORT_DATA';\nexport const CARDSET_LIST_SUCCESS = 'CARDSET_LIST_SUCCESS';\nexport const CARDSET_LIST_REQUEST = 'CARDSET_LIST_REQUEST';\nexport const CARDSET_LIST_FAILURE = 'CARDSET_LIST_FAILURE';\nexport const CARDSET_LIST_RESET = 'CARDSET_LIST_RESET';\nexport const CARDSET_SELECT_REQUEST = 'CARDSET_SELECT_REQUEST';\nexport const CARDSET_SELECT_SUCCESS = 'CARDSET_SELECT_SUCCESS';\nexport const CARDSET_CREATE_CARD = 'CARDSET_CREATE_CARD';\nexport const CARDSET_CLONE_CARD = 'CARDSET_CLONE_CARD';\nexport const CARDSET_REMOVE_CARD = 'CARDSET_REMOVE_CARD';\nexport const CARDSET_UPDATE_CARD_COUNT = 'CARDSET_UPDATE_CARD_COUNT';\nexport const CARDSET_ADD_TEXT_FIELD = 'CARDSET_ADD_TEXT_FIELD';\nexport const CARDSET_ADD_IMAGE_FIELD = 'CARDSET_ADD_IMAGE_FIELD';\nexport const CARDSET_CHANGE_ACTIVE_FIELD_NAME = 'CARDSET_CHANGE_ACTIVE_FIELD_NAME';\nexport const CARDSET_REMOVE_ACTIVE_FIELD = 'CARDSET_REMOVE_ACTIVE_FIELD';\nexport const CARDSET_RAISE_ACTIVE_FIELD = 'CARDSET_RAISE_ACTIVE_FIELD';\nexport const CARDSET_RAISE_ACTIVE_FIELD_TO_TOP = 'CARDSET_RAISE_ACTIVE_FIELD_TO_TOP';\nexport const CARDSET_LOWER_ACTIVE_FIELD = 'CARDSET_LOWER_ACTIVE';\nexport const CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM = 'CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM';\nexport const CARDSET_LOCK_ACTIVE_FIELD = 'CARDSET_LOCK_ACTIVE_FIELD';\nexport const CARDSET_UNLOCK_ACTIVE_FIELD = 'CARDSET_UNLOCK_ACTIVE_FIELD';\nexport const CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD = 'CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD';\nexport const CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD = 'CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD';\nexport const CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD = 'CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD';\nexport const CARDSET_CHANGE_WIDTH = 'CARDSET_CHANGE_WIDTH';\nexport const CARDSET_CHANGE_HEIGHT = 'CARDSET_CHANGE_HEIGHT';\nexport const CARDSET_CHANGE_IS_TWO_SIDED = 'CARDSET_CHANGE_IS_TWO_SIDED';\nexport const CARDSET_CHANGE_SNAPPING_DISTANCE = 'CARDSET_CHANGE_SNAPPING_DISTANCE';\nexport const CARDSET_CHANGE_FIELD_POSITION = 'CARDSET_CHANGE_FIELD_POSITION';\nexport const CARDSET_CHANGE_FIELD_PAN = 'CARDSET_CHANGE_FIELD_PAN';\nexport const CARDSET_CHANGE_FIELD_ZOOM = 'CARDSET_CHANGE_FIELD_ZOOM';\nexport const CARDSET_CHANGE_FIELD_SIZE = 'CARDSET_CHANGE_FIELD_SIZE';\nexport const CARDSET_CHANGE_FIELD_ANGLE = 'CARDSET_CHANGE_FIELD_ANGLE';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN = 'CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR = 'CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY = 'CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT = 'CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT =\n    'CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE = 'CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT = 'CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT';\nexport const CARDSET_CHANGE_TEXT = 'CARDSET_CHANGE_TEXT';\nexport const CARDSET_CHANGE_IMAGE = 'CARDSET_CHANGE_IMAGE';\nexport const CARDSET_CHANGE_IMAGE_BASE64 = 'CARDSET_CHANGE_IMAGE_BASE64';\nexport const CARDSET_SET_ACTIVE_CARD_AND_FIELD = 'CARDSET_SET_ACTIVE_CARD_AND_FIELD';\nexport const CARDSET_CHANGE_APPLY_TO_ALLCARDS = 'CARDSET_CHANGE_APPLY_TO_ALLCARDS';\nexport const CARDSET_SELECT_FAILURE = 'CARDSET_SELECT_FAILURE';\nexport const CARDSET_SET_SIDEBAR_STATE = 'CARDSET_SET_SIDEBAR_STATE';\nexport const CARDSET_SET_ZOOM = 'CARDSET_SET_ZOOM';\nexport const CARDSET_UPLOAD_IMAGE = 'CARDSET_UPLOAD_IMAGE';\nexport const CARDSET_UPLOAD_IMAGE_SUCCESS = 'CARDSET_UPLOAD_IMAGE_SUCCESS';\nexport const CARDSET_UPLOAD_IMAGE_FAILURE = 'CARDSET_UPLOAD_IMAGE_FAILURE';\nexport const CARDSET_DELETE_IMAGE = 'CARDSET_DELETE_IMAGE';\nexport const CARDSET_UNDO = 'CARDSET_UNDO';\nexport const CARDSET_REDO = 'CARDSET_REDO';\nexport const IMAGE_LIST_REQUEST = 'IMAGE_LIST_REQUEST';\nexport const IMAGE_LIST_SUCCESS = 'IMAGE_LIST_SUCCESS';\nexport const IMAGE_LIST_FAILURE = 'IMAGE_LIST_FAILURE';\n\n// Actions\n\nexport interface InitAction {\n    type: typeof INIT_REQUEST;\n}\n\nexport interface MessageDisplay {\n    type: typeof MESSAGE_DISPLAY;\n    message: MessageType;\n}\nexport type MessageAction = MessageDisplay | { type: typeof MESSAGE_HIDE; messageId: string };\n\nexport interface LoginRequest {\n    type: typeof LOGIN_REQUEST;\n    creds: Credentials;\n}\nexport type LoginAction =\n    | LoginRequest\n    | { type: typeof LOGIN_SUCCESS }\n    | { type: typeof LOGIN_FAILURE; message: string }\n    | { type: typeof LOGOUT_REQUEST }\n    | { type: typeof LOGOUT_FAILURE }\n    | { type: typeof LOGOUT_SUCCESS };\n\nexport interface SignUpRequest {\n    type: typeof SIGNUP_REQUEST;\n    creds: Credentials;\n}\nexport type SignUpAction = SignUpRequest | { type: typeof SIGNUP_SUCCESS } | { type: typeof SIGNUP_FAILURE };\n\nexport interface GameCreateRequest {\n    type: typeof GAME_CREATE_REQUEST;\n    gamename: string;\n}\nexport type GameCreateAction = GameCreateRequest | { type: typeof GAME_CREATE_SUCCESS };\n\nexport interface GameDeleteRequest {\n    type: typeof GAME_DELETE_REQUEST;\n    gameId: string;\n}\n\nexport type GameDeleteAction = GameDeleteRequest;\n\nexport interface GameRenameRequest {\n    type: typeof GAME_RENAME_REQUEST;\n    gameId: string;\n    newName: string;\n}\n\nexport type GameRenameAction = GameRenameRequest;\n\nexport interface GameListSuccess {\n    type: typeof GAME_LIST_SUCCESS;\n    byId: GamesCollection;\n    allIds: IdsArray;\n}\nexport type GameListAction =\n    | { type: typeof GAME_LIST_REQUEST }\n    | GameListSuccess\n    | { type: typeof GAME_LIST_FAILURE }\n    | { type: typeof GAME_LIST_RESET };\n\nexport interface GameSelectRequest {\n    type: typeof GAME_SELECT_REQUEST;\n    id: string;\n    updateCardSets: boolean;\n}\nexport type GameSelectAction =\n    | GameSelectRequest\n    | { type: typeof GAME_SELECT_SUCCESS; id: string }\n    | { type: typeof GAME_SELECT_FAILURE };\n\nexport interface GameCreatePdfRequest {\n    type: typeof GAME_CREATE_PDF_REQUEST;\n    collectionType: string;\n    collectionId: string;\n    pageWidth: number;\n    pageHeight: number;\n    topBottomMargin: number;\n    leftRightMargin: number;\n    verticalSpace: number;\n    horizontalSpace: number;\n    includeBleedingArea: boolean;\n    cutMarksForScissors: boolean;\n    cutMarksForGuillotine: boolean;\n    cutMarksInMarginArea: boolean;\n    cutMarksOnFrontSideOnly: boolean;\n}\n\nexport type GameCreatePdfAction =\n    | GameCreatePdfRequest\n    | { type: typeof GAME_CREATE_PDF_SUCCESS }\n    | { type: typeof GAME_CREATE_PDF_FAILURE };\n\nexport interface GameCreatePngRequest {\n    type: typeof GAME_CREATE_PNG_REQUEST;\n    dpi: number;\n    collectionType: string;\n    collectionId: string;\n}\n\nexport type GameCreatePngAction =\n    | GameCreatePngRequest\n    | { type: typeof GAME_CREATE_PNG_SUCCESS }\n    | { type: typeof GAME_CREATE_PNG_FAILURE };\n\nexport type GameAction =\n    | GameCreateAction\n    | GameDeleteAction\n    | GameRenameAction\n    | GameListAction\n    | GameSelectAction\n    | GameCreatePdfAction\n    | GameCreatePngAction;\n\nexport interface CardSetCreateRequest {\n    type: typeof CARDSET_CREATE_REQUEST;\n    cardsetname: string;\n    width: number;\n    height: number;\n    gameId: string;\n}\nexport type CardSetCreateAction =\n    | CardSetCreateRequest\n    | { type: typeof CARDSET_CREATE_SUCCESS }\n    | { type: typeof CARDSET_CREATE_FAILURE };\n\nexport interface CardSetDeleteRequest {\n    type: typeof CARDSET_DELETE_REQUEST;\n    cardSetId: string;\n}\n\nexport interface CardSetRenameRequest {\n    type: typeof CARDSET_RENAME_REQUEST;\n    cardSetId: string;\n    newName: string;\n}\n\nexport interface CardSetsSelectSuccess {\n    type: typeof CARDSETS_SELECT_SUCCESS;\n    id: string;\n    name: string;\n}\n\nexport type CardSetsAction =\n    | CardSetsSelectSuccess\n    | CardSetCreateAction\n    | CardSetDeleteRequest\n    | CardSetRenameRequest\n    | CardSetListAction;\n\nexport interface CardSetImportData {\n    type: typeof CARDSET_IMPORT_DATA;\n    data: object;\n}\n\nexport interface CardSetListSuccess {\n    type: typeof CARDSET_LIST_SUCCESS;\n    byId: CardSetsCollection;\n    allIds: IdsArray;\n}\nexport type CardSetListAction =\n    | { type: typeof CARDSET_LIST_REQUEST }\n    | CardSetListSuccess\n    | { type: typeof CARDSET_LIST_FAILURE }\n    | { type: typeof CARDSET_LIST_RESET };\n\nexport interface CardSetSelectRequest {\n    type: typeof CARDSET_SELECT_REQUEST;\n    id: string;\n}\n\nexport interface CardSetSelectSuccessDataBase {\n    version: string;\n}\n\nexport interface CardSetSelectSuccessDataV2 {\n    version: 2;\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    snappingDistance: number;\n    cardsAllIds: IdsArray;\n    cardsById: CardsCollection;\n    placeholders: PlaceholdersCollection;\n    placeholdersAllIds: IdsArray;\n    texts: PlaceholdersTextInfoByCardCollection;\n    images: PlaceholdersImageInfoByCardCollection;\n    zoom: number;\n}\n\nexport interface CardSetSelectSuccessDataV3 {\n    version: 3;\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    snappingDistance: number;\n    cardsAllIds: IdsArray;\n    cardsById: CardsCollection;\n    fields: FieldInfoByCardCollection;\n    fieldsAllIds: IdsArray;\n    zoom: number;\n}\n\nexport type CardSetSelectSuccessData = CardSetSelectSuccessDataV2 | CardSetSelectSuccessDataV3;\n\nexport interface CardSetSelectSuccess {\n    type: typeof CARDSET_SELECT_SUCCESS;\n    id: string;\n    name: string;\n    data: CardSetSelectSuccessDataV3;\n    gameId: string;\n}\nexport interface CardSetCreateCard {\n    type: typeof CARDSET_CREATE_CARD;\n    card: CardType;\n}\nexport interface CardSetCloneCard {\n    type: typeof CARDSET_CLONE_CARD;\n    card: CardType;\n}\nexport interface CardSetRemoveCard {\n    type: typeof CARDSET_REMOVE_CARD;\n    card: CardType;\n}\nexport interface CardSetUpdateCardCount {\n    type: typeof CARDSET_UPDATE_CARD_COUNT;\n    card: CardType;\n    count: number;\n}\nexport interface CardSetAddTextField {\n    type: typeof CARDSET_ADD_TEXT_FIELD;\n}\nexport interface CardSetAddImageField {\n    type: typeof CARDSET_ADD_IMAGE_FIELD;\n}\nexport interface CardSetChangeActiveFieldName {\n    type: typeof CARDSET_CHANGE_ACTIVE_FIELD_NAME;\n    name: string;\n}\nexport interface CardSetRemoveActiveField {\n    type: typeof CARDSET_REMOVE_ACTIVE_FIELD;\n}\nexport interface CardSetRaiseActiveField {\n    type: typeof CARDSET_RAISE_ACTIVE_FIELD;\n}\nexport interface CardSetRaiseActiveFieldToTop {\n    type: typeof CARDSET_RAISE_ACTIVE_FIELD_TO_TOP;\n}\nexport interface CardSetLowerActiveField {\n    type: typeof CARDSET_LOWER_ACTIVE_FIELD;\n}\nexport interface CardSetLowerActiveFieldToBottom {\n    type: typeof CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM;\n}\nexport interface CardSetLockActiveField {\n    type: typeof CARDSET_LOCK_ACTIVE_FIELD;\n}\nexport interface CardSetUnlockActiveField {\n    type: typeof CARDSET_UNLOCK_ACTIVE_FIELD;\n}\nexport interface CardSetChangeFitForActiveField {\n    type: typeof CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD;\n    fit: string;\n}\nexport interface CardSetChangeCropForActiveField {\n    type: typeof CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD;\n    crop: boolean;\n}\n\nexport interface CardSetChangeUnclickableForActiveField {\n    type: typeof CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD;\n    unclickable: boolean;\n}\n\nexport interface CardSetChangeWidth {\n    type: typeof CARDSET_CHANGE_WIDTH;\n    width: number;\n    maintainAspectRatio: boolean;\n    resizeContent: boolean;\n}\n\nexport interface CardSetChangeHeight {\n    type: typeof CARDSET_CHANGE_HEIGHT;\n    height: number;\n    maintainAspectRatio: boolean;\n    resizeContent: boolean;\n}\n\nexport interface CardSetChangeIsTwoSided {\n    type: typeof CARDSET_CHANGE_IS_TWO_SIDED;\n    isTwoSided: boolean;\n}\n\nexport interface CardSetChangeSnappingDistance {\n    type: typeof CARDSET_CHANGE_SNAPPING_DISTANCE;\n    snappingDistance: number;\n}\n\nexport interface CardSetChangeFieldPosition {\n    type: typeof CARDSET_CHANGE_FIELD_POSITION;\n    cardId?: string;\n    fieldId: string;\n    x: number;\n    y: number;\n    group: string;\n}\n\nexport interface CardSetChangeFieldPan {\n    type: typeof CARDSET_CHANGE_FIELD_PAN;\n    cardId?: string;\n    fieldId: string;\n    cx: number;\n    cy: number;\n    group: string;\n}\n\nexport interface CardSetChangeFieldZoom {\n    type: typeof CARDSET_CHANGE_FIELD_ZOOM;\n    cardId?: string;\n    fieldId: string;\n    zoom: number;\n    group: string;\n}\n\nexport interface CardSetChangeFieldSize {\n    type: typeof CARDSET_CHANGE_FIELD_SIZE;\n    cardId?: string;\n    fieldId: string;\n    width: number;\n    height: number;\n    group: string;\n}\nexport interface CardSetChangeFieldAngle {\n    type: typeof CARDSET_CHANGE_FIELD_ANGLE;\n    cardId?: string;\n    fieldId: string;\n    angle: number;\n    group: string;\n}\nexport interface CardSetChangeActiveTextFieldAlign {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN;\n    align: string;\n}\nexport interface CardSetChangeActiveTextFieldColor {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR;\n    color: string;\n}\nexport interface CardSetChangeActiveTextFieldFontFamily {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY;\n    fontFamily: string;\n}\nexport interface CardSetChangeActiveTextFieldFontVariant {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT;\n    fontVariant: string;\n}\nexport interface CardSetChangeActiveTextFieldFontFamilyAndVariant {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT;\n    fontFamily: string;\n    fontVariant: string;\n}\nexport interface CardSetChangeActiveTextFieldFontSize {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE;\n    fontSize: number;\n}\nexport interface CardSetChangeActiveTextFieldLineHeight {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT;\n    lineHeight: number;\n}\nexport interface CardSetChangeText {\n    type: typeof CARDSET_CHANGE_TEXT;\n    cardId: string;\n    fieldId: string;\n    textInfo: TextInfo;\n}\nexport interface CardSetChangeImage {\n    type: typeof CARDSET_CHANGE_IMAGE;\n    cardId: string | undefined;\n    fieldId: string;\n    imageInfo: ImageInfo;\n}\nexport interface CardSetChangeImageBase64 {\n    type: typeof CARDSET_CHANGE_IMAGE_BASE64;\n    cardId: string;\n    fieldId: string;\n    base64?: string;\n}\nexport interface CardSetSetActiveCardAndField {\n    type: typeof CARDSET_SET_ACTIVE_CARD_AND_FIELD;\n    cardId?: string;\n    isBackActive: boolean;\n    fieldId?: string;\n}\nexport interface CardSetChangeApplyToAllCards {\n    type: typeof CARDSET_CHANGE_APPLY_TO_ALLCARDS;\n    applyToAllCards: boolean;\n}\n\nexport enum SidebarState {\n    Settings,\n    Details,\n    Measurements,\n    Image,\n    Text,\n    Upload,\n    ImportExport,\n    Png,\n    Pdf,\n}\nexport interface CardSetSetSidebarState {\n    type: typeof CARDSET_SET_SIDEBAR_STATE;\n    sidebarState: SidebarState | null;\n}\nexport interface CardSetSetZoom {\n    type: typeof CARDSET_SET_ZOOM;\n    zoom: number;\n}\n\nexport type FPLoadCallback = (id: string) => void;\nexport type FPErrorCallback = (error: string) => void;\nexport type FPProgressCallback = (computable: boolean, loaded: number, total: number) => void;\nexport type FPAbortCallback = () => void;\nexport type FPRevertLoadCallback = () => void;\n\nexport interface CardSetUploadImage {\n    type: typeof CARDSET_UPLOAD_IMAGE;\n    gameId: string;\n    file: File;\n    load: FPLoadCallback;\n    error: FPErrorCallback;\n    progress: FPProgressCallback;\n    abort: FPAbortCallback;\n    cancelToken: CancelToken;\n}\n\nexport interface CardSetDeleteImage {\n    type: typeof CARDSET_DELETE_IMAGE;\n    imageId: string;\n    load: FPRevertLoadCallback;\n    error: FPErrorCallback;\n}\n\nexport interface CardSetUndo {\n    type: typeof CARDSET_UNDO;\n}\n\nexport interface CardSetRedo {\n    type: typeof CARDSET_REDO;\n}\n\nexport interface CardSetUploadImageSuccess {\n    type: typeof CARDSET_UPLOAD_IMAGE_SUCCESS;\n}\n\nexport interface CardSetUploadImageFailure {\n    type: typeof CARDSET_UPLOAD_IMAGE_FAILURE;\n}\n\nexport type CardSetSelectAction = CardSetSelectRequest | CardSetSelectSuccess | { type: typeof CARDSET_SELECT_FAILURE };\n\nexport type CardSetModifyAction =\n    | CardSetCreateCard\n    | CardSetCloneCard\n    | CardSetRemoveCard\n    | CardSetUpdateCardCount\n    | CardSetAddTextField\n    | CardSetAddImageField\n    | CardSetChangeActiveFieldName\n    | CardSetRemoveActiveField\n    | CardSetRaiseActiveField\n    | CardSetRaiseActiveFieldToTop\n    | CardSetLowerActiveField\n    | CardSetLowerActiveFieldToBottom\n    | CardSetLockActiveField\n    | CardSetUnlockActiveField\n    | CardSetChangeFitForActiveField\n    | CardSetChangeCropForActiveField\n    | CardSetChangeUnclickableForActiveField\n    | CardSetChangeWidth\n    | CardSetChangeHeight\n    | CardSetChangeIsTwoSided\n    | CardSetChangeSnappingDistance\n    | CardSetChangeFieldPosition\n    | CardSetChangeFieldPan\n    | CardSetChangeFieldZoom\n    | CardSetChangeFieldSize\n    | CardSetChangeFieldAngle\n    | CardSetChangeActiveTextFieldAlign\n    | CardSetChangeActiveTextFieldColor\n    | CardSetChangeActiveTextFieldFontFamily\n    | CardSetChangeActiveTextFieldFontVariant\n    | CardSetChangeActiveTextFieldFontFamilyAndVariant\n    | CardSetChangeActiveTextFieldFontSize\n    | CardSetChangeActiveTextFieldLineHeight\n    | CardSetChangeText\n    | CardSetChangeImage\n    | CardSetChangeImageBase64\n    | CardSetSetActiveCardAndField\n    | CardSetChangeApplyToAllCards\n    | CardSetSetSidebarState\n    | CardSetSetZoom\n    | CardSetUploadImage\n    | CardSetDeleteImage\n    | CardSetUndo\n    | CardSetRedo\n    | CardSetUploadImageSuccess\n    | CardSetUploadImageFailure;\n\nexport type CardSetAction = CardSetImportData | CardSetSelectAction | CardSetModifyAction;\n\nexport interface ImageListRequest {\n    type: typeof IMAGE_LIST_REQUEST;\n    filter: string;\n    location: string;\n}\nexport interface ImageListSuccess {\n    type: typeof IMAGE_LIST_SUCCESS;\n    images: ImageArray;\n}\nexport type ImageListAction = ImageListRequest | ImageListSuccess | { type: typeof IMAGE_LIST_FAILURE };\n\nexport type Action =\n    | InitAction\n    | LoginAction\n    | SignUpAction\n    | GameAction\n    | CardSetsAction\n    | CardSetAction\n    | ImageListAction\n    | MessageAction;\n\nexport type Dispatch = ReduxDispatch<Action>;\n\nexport const messageDisplay = (type: string, text: string, id?: string): MessageDisplay => {\n    return {\n        type: MESSAGE_DISPLAY,\n        message: {\n            id: id || shortid.generate(),\n            type: type,\n            text: text,\n        },\n    };\n};\n\nexport const initRequest = (): InitAction => {\n    return { type: INIT_REQUEST };\n};\n\nexport const loginRequest = (creds: Credentials): LoginAction => {\n    return {\n        type: LOGIN_REQUEST,\n        creds: creds,\n    };\n};\n\nexport const logoutRequest = (): LoginAction => {\n    return {\n        type: LOGOUT_REQUEST,\n    };\n};\n\nexport const signupRequest = (creds: Credentials): SignUpAction => {\n    return {\n        type: SIGNUP_REQUEST,\n        creds: creds,\n    };\n};\n\nexport const gameCreateRequest = (gamename: string): GameAction => {\n    return {\n        type: GAME_CREATE_REQUEST,\n        gamename: gamename,\n    };\n};\n\nexport const gameDeleteRequest = (gameId: string): GameAction => {\n    return {\n        type: GAME_DELETE_REQUEST,\n        gameId,\n    };\n};\n\nexport const gameRenameRequest = (gameId: string, newName: string): GameAction => {\n    return {\n        type: GAME_RENAME_REQUEST,\n        gameId,\n        newName,\n    };\n};\n\nexport const gameListRequest = (): GameAction => {\n    return {\n        type: GAME_LIST_REQUEST,\n    };\n};\n\nexport const gameSelectRequest = (id: string, updateCardSets: boolean): GameAction => {\n    return {\n        type: GAME_SELECT_REQUEST,\n        id,\n        updateCardSets,\n    };\n};\n\nexport const gameCreatePdfRequest = (\n    collectionType: string,\n    collectionId: string,\n    pageWidth: number,\n    pageHeight: number,\n    topBottomMargin: number,\n    leftRightMargin: number,\n    verticalSpace: number,\n    horizontalSpace: number,\n    includeBleedingArea: boolean,\n    cutMarksForScissors: boolean,\n    cutMarksForGuillotine: boolean,\n    cutMarksInMarginArea: boolean,\n    cutMarksOnFrontSideOnly: boolean,\n): GameCreatePdfRequest => {\n    return {\n        type: GAME_CREATE_PDF_REQUEST,\n        collectionType,\n        collectionId,\n        pageWidth,\n        pageHeight,\n        topBottomMargin,\n        leftRightMargin,\n        verticalSpace,\n        horizontalSpace,\n        includeBleedingArea,\n        cutMarksForScissors,\n        cutMarksForGuillotine,\n        cutMarksInMarginArea,\n        cutMarksOnFrontSideOnly,\n    };\n};\n\nexport const gameCreatePngRequest = (\n    dpi: number,\n    collectionType: string,\n    collectionId: string,\n): GameCreatePngRequest => {\n    return {\n        type: GAME_CREATE_PNG_REQUEST,\n        dpi,\n        collectionType,\n        collectionId,\n    };\n};\n\nexport const cardSetCreateRequest = (\n    cardsetname: string,\n    width: number,\n    height: number,\n    gameId: string,\n): CardSetsAction => {\n    return {\n        type: CARDSET_CREATE_REQUEST,\n        cardsetname: cardsetname,\n        width,\n        height,\n        gameId,\n    };\n};\n\nexport const cardSetDeleteRequest = (cardSetId: string): CardSetsAction => {\n    return {\n        type: CARDSET_DELETE_REQUEST,\n        cardSetId,\n    };\n};\n\nexport const cardSetRenameRequest = (cardSetId: string, newName: string): CardSetsAction => {\n    return {\n        type: CARDSET_RENAME_REQUEST,\n        cardSetId,\n        newName,\n    };\n};\n\nexport const cardSetImportData = (data: object): CardSetImportData => {\n    return {\n        type: CARDSET_IMPORT_DATA,\n        data,\n    };\n};\n\nexport const cardSetSelectRequest = (id: string): CardSetSelectRequest => {\n    return {\n        type: CARDSET_SELECT_REQUEST,\n        id,\n    };\n};\n\nexport const cardSetCreateCard = (card: CardType): CardSetCreateCard => {\n    return {\n        type: CARDSET_CREATE_CARD,\n        card,\n    };\n};\n\nexport const cardSetCloneCard = (card: CardType): CardSetCloneCard => {\n    return {\n        type: CARDSET_CLONE_CARD,\n        card,\n    };\n};\n\nexport const cardSetRemoveCard = (card: CardType): CardSetRemoveCard => {\n    return {\n        type: CARDSET_REMOVE_CARD,\n        card,\n    };\n};\n\nexport const cardSetUpdateCardCount = (card: CardType, count: number): CardSetUpdateCardCount => {\n    return {\n        type: CARDSET_UPDATE_CARD_COUNT,\n        card,\n        count,\n    };\n};\n\nexport const cardSetAddTextField = (): CardSetAddTextField => {\n    return {\n        type: CARDSET_ADD_TEXT_FIELD,\n    };\n};\n\nexport const cardSetAddImageField = (): CardSetAddImageField => {\n    return {\n        type: CARDSET_ADD_IMAGE_FIELD,\n    };\n};\n\nexport const cardSetChangeActiveFieldName = (name: string): CardSetChangeActiveFieldName => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_FIELD_NAME,\n        name,\n    };\n};\n\nexport const cardSetRemoveActiveField = (): CardSetRemoveActiveField => {\n    return {\n        type: CARDSET_REMOVE_ACTIVE_FIELD,\n    };\n};\n\nexport const cardSetRaiseActiveField = (): CardSetRaiseActiveField => {\n    return {\n        type: CARDSET_RAISE_ACTIVE_FIELD,\n    };\n};\n\nexport const cardSetRaiseActiveFieldToTop = (): CardSetRaiseActiveFieldToTop => {\n    return {\n        type: CARDSET_RAISE_ACTIVE_FIELD_TO_TOP,\n    };\n};\n\nexport const cardSetLowerActiveField = (): CardSetLowerActiveField => {\n    return {\n        type: CARDSET_LOWER_ACTIVE_FIELD,\n    };\n};\n\nexport const cardSetLowerActiveFieldToBottom = (): CardSetLowerActiveFieldToBottom => {\n    return {\n        type: CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM,\n    };\n};\n\nexport const cardSetLockActiveField = (): CardSetLockActiveField => {\n    return {\n        type: CARDSET_LOCK_ACTIVE_FIELD,\n    };\n};\n\nexport const cardSetUnlockActiveField = (): CardSetUnlockActiveField => {\n    return {\n        type: CARDSET_UNLOCK_ACTIVE_FIELD,\n    };\n};\n\nexport const cardSetChangeFitForActiveField = (fit: string): CardSetChangeFitForActiveField => {\n    return {\n        type: CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD,\n        fit,\n    };\n};\n\nexport const cardSetChangeCropForActiveField = (crop: boolean): CardSetChangeCropForActiveField => {\n    return {\n        type: CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD,\n        crop,\n    };\n};\n\nexport const cardSetChangeUnclickableForActiveField = (\n    unclickable: boolean,\n): CardSetChangeUnclickableForActiveField => {\n    return {\n        type: CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD,\n        unclickable,\n    };\n};\n\nexport const cardSetChangeWidth = (\n    width: number,\n    maintainAspectRatio: boolean,\n    resizeContent: boolean,\n): CardSetChangeWidth => {\n    return {\n        type: CARDSET_CHANGE_WIDTH,\n        width,\n        maintainAspectRatio,\n        resizeContent,\n    };\n};\n\nexport const cardSetChangeHeight = (\n    height: number,\n    maintainAspectRatio: boolean,\n    resizeContent: boolean,\n): CardSetChangeHeight => {\n    return {\n        type: CARDSET_CHANGE_HEIGHT,\n        height,\n        maintainAspectRatio,\n        resizeContent,\n    };\n};\n\nexport const cardSetChangeIsTwoSided = (isTwoSided: boolean): CardSetChangeIsTwoSided => {\n    return {\n        type: CARDSET_CHANGE_IS_TWO_SIDED,\n        isTwoSided,\n    };\n};\n\nexport const cardSetChangeSnappingDistance = (snappingDistance: number): CardSetChangeSnappingDistance => {\n    return {\n        type: CARDSET_CHANGE_SNAPPING_DISTANCE,\n        snappingDistance,\n    };\n};\n\nexport const cardSetChangeFieldPosition = (\n    cardId: string | undefined,\n    fieldId: string,\n    x: number,\n    y: number,\n    group: string,\n): CardSetChangeFieldPosition => {\n    return {\n        type: CARDSET_CHANGE_FIELD_POSITION,\n        cardId,\n        fieldId,\n        x,\n        y,\n        group,\n    };\n};\n\nexport const cardSetChangeFieldPan = (\n    cardId: string | undefined,\n    fieldId: string,\n    cx: number,\n    cy: number,\n    group: string,\n): CardSetChangeFieldPan => {\n    return {\n        type: CARDSET_CHANGE_FIELD_PAN,\n        cardId,\n        fieldId,\n        cx,\n        cy,\n        group,\n    };\n};\n\nexport const cardSetChangeFieldZoom = (\n    cardId: string | undefined,\n    fieldId: string,\n    zoom: number,\n    group: string,\n): CardSetChangeFieldZoom => {\n    return {\n        type: CARDSET_CHANGE_FIELD_ZOOM,\n        cardId,\n        fieldId,\n        zoom,\n        group,\n    };\n};\n\nexport const cardSetChangeFieldSize = (\n    cardId: string | undefined,\n    fieldId: string,\n    width: number,\n    height: number,\n    group: string,\n): CardSetChangeFieldSize => {\n    return {\n        type: CARDSET_CHANGE_FIELD_SIZE,\n        cardId,\n        fieldId,\n        width,\n        height,\n        group,\n    };\n};\n\nexport const cardSetChangeFieldAngle = (\n    cardId: string | undefined,\n    fieldId: string,\n    angle: number,\n    group: string,\n): CardSetChangeFieldAngle => {\n    return {\n        type: CARDSET_CHANGE_FIELD_ANGLE,\n        cardId,\n        fieldId,\n        angle,\n        group,\n    };\n};\n\nexport const cardSetChangeActiveTextFieldAlign = (align: string): CardSetChangeActiveTextFieldAlign => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN,\n        align,\n    };\n};\n\nexport const cardSetChangeActiveTextFieldColor = (color: string): CardSetChangeActiveTextFieldColor => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR,\n        color,\n    };\n};\n\nexport const cardSetChangeActiveTextFieldFontFamily = (fontFamily: string): CardSetChangeActiveTextFieldFontFamily => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY,\n        fontFamily,\n    };\n};\n\nexport const cardSetChangeActiveTextFieldFontVariant = (\n    fontVariant: string,\n): CardSetChangeActiveTextFieldFontVariant => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT,\n        fontVariant,\n    };\n};\n\nexport const cardSetChangeActiveTextFieldFontFamilyAndVariant = (\n    fontFamily: string,\n    fontVariant: string,\n): CardSetChangeActiveTextFieldFontFamilyAndVariant => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT,\n        fontFamily,\n        fontVariant,\n    };\n};\n\nexport const cardSetChangeActiveTextFieldFontSize = (fontSize: number): CardSetChangeActiveTextFieldFontSize => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE,\n        fontSize,\n    };\n};\n\nexport const cardSetChangeActiveTextFieldLineHeight = (lineHeight: number): CardSetChangeActiveTextFieldLineHeight => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT,\n        lineHeight,\n    };\n};\n\nexport const cardSetChangeText = (cardId: string, fieldId: string, textInfo: TextInfo): CardSetChangeText => {\n    return {\n        type: CARDSET_CHANGE_TEXT,\n        cardId,\n        fieldId,\n        textInfo,\n    };\n};\n\nexport const cardSetChangeImage = (\n    cardId: string | undefined,\n    fieldId: string,\n    imageInfo: ImageInfo,\n): CardSetChangeImage => {\n    return {\n        type: CARDSET_CHANGE_IMAGE,\n        cardId,\n        fieldId,\n        imageInfo,\n    };\n};\n\nexport const cardSetChangeImageBase64 = (\n    cardId: string,\n    fieldId: string,\n    base64?: string,\n): CardSetChangeImageBase64 => {\n    return {\n        type: CARDSET_CHANGE_IMAGE_BASE64,\n        cardId,\n        fieldId,\n        base64,\n    };\n};\n\nexport const cardSetActiveCardAndField = (\n    cardId: string | undefined,\n    isBackActive: boolean,\n    fieldId: string | undefined,\n): CardSetSetActiveCardAndField => {\n    return {\n        type: CARDSET_SET_ACTIVE_CARD_AND_FIELD,\n        cardId,\n        isBackActive,\n        fieldId,\n    };\n};\n\nexport const cardSetChangeApplyToAllCards = (applyToAllCards: boolean): CardSetChangeApplyToAllCards => {\n    return {\n        type: CARDSET_CHANGE_APPLY_TO_ALLCARDS,\n        applyToAllCards,\n    };\n};\n\nexport const cardSetSetSidebarState = (sidebarState: SidebarState | null): CardSetSetSidebarState => {\n    return {\n        type: CARDSET_SET_SIDEBAR_STATE,\n        sidebarState,\n    };\n};\n\nexport const cardSetSetZoom = (zoom: number): CardSetSetZoom => {\n    return {\n        type: CARDSET_SET_ZOOM,\n        zoom,\n    };\n};\n\nexport const cardSetUploadImage = (\n    gameId: string,\n    file: File,\n    load: FPLoadCallback,\n    error: FPErrorCallback,\n    progress: FPProgressCallback,\n    abort: FPAbortCallback,\n    cancelToken: CancelToken,\n): CardSetUploadImage => {\n    return {\n        type: CARDSET_UPLOAD_IMAGE,\n        gameId,\n        file,\n        load,\n        error,\n        progress,\n        abort,\n        cancelToken,\n    };\n};\n\nexport const cardSetDeleteImage = (\n    imageId: string,\n    load: FPRevertLoadCallback,\n    error: FPErrorCallback,\n): CardSetDeleteImage => {\n    return {\n        type: CARDSET_DELETE_IMAGE,\n        imageId,\n        load,\n        error,\n    };\n};\n\nexport const cardSetUndo = (): CardSetUndo => {\n    return {\n        type: CARDSET_UNDO,\n    };\n};\n\nexport const cardSetRedo = (): CardSetRedo => {\n    return {\n        type: CARDSET_REDO,\n    };\n};\n\nexport const imageListRequest = (filter: string, location: string): ImageListAction => {\n    return {\n        type: IMAGE_LIST_REQUEST,\n        filter,\n        location,\n    };\n};\n","export const CURRENT_CARDSET_VERSION = 3;\nexport const DEFAULT_FONT = 'Roboto';\nexport const DEFAULT_FONT_VARIANT = 'regular';\nexport const DEFAULT_FONT_SIZE = 8;\nexport const DEFAULT_LINE_HEIGHT = 1.27;\n\nexport const BLEED_WIDTH = 25.4 / 8; // 1/8th of inch in mm\n","import axios, { AxiosError, CancelToken } from 'axios';\n\nimport { Credentials } from './types';\n\nexport function handleAxiosError(error: AxiosError) {\n    if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        // error.response.status);\n        throw new Error(error.response.data.message);\n    } else if (error.request) {\n        console.log(error.request);\n        throw new Error(error.request);\n    } else {\n        throw new Error('Unknown error :(');\n    }\n}\n\nexport function getTokens(creds: Credentials) {\n    return axios\n        .post('/api/tokens', creds)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function refreshToken(refreshTokenValue: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${refreshTokenValue}` },\n    };\n    return axios\n        .post('/api/access_tokens', {}, config)\n        .then(resp => {\n            return resp.data.accessToken;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function deleteAccessToken(token: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .delete('/api/access_tokens', config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            if (error.response.status === 401) return {};\n            handleAxiosError(error);\n        });\n}\n\nexport function deleteRefreshToken(token: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .delete('/api/refresh_tokens', config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            if (error.response.status === 401) return {};\n            handleAxiosError(error);\n        });\n}\n\nexport function registerUser(creds: Credentials) {\n    return axios\n        .post('/api/users', creds)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function getRequest(url: string, token: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .get(url, config)\n        .then(resp => {\n            return resp;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function postRequest(url: string, token: string, data: object) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .post(url, data, config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function postRequestFormDataCancelable(\n    url: string,\n    token: string,\n    data: FormData,\n    progressCallback: (event: ProgressEvent) => void,\n    cancelToken: CancelToken,\n    cancelCallback: () => void,\n) {\n    let config = {\n        headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'multipart/form-data',\n        },\n        cancelToken,\n        onUploadProgress: progressCallback,\n    };\n\n    return axios\n        .post(url, data, config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            if (axios.isCancel(error)) {\n                cancelCallback();\n            } else {\n                handleAxiosError(error);\n            }\n        });\n}\n\nexport function putRequest(url: string, token: string, data: object) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .put(url, data, config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function deleteRequest(url: string, token: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .delete(url, config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n","import axios from 'axios';\nimport { ImageFieldInfo, ImageToDraw } from './types';\n\nexport function downloadBlob(blobURL: string, filename: string, resolve?: () => void) {\n    const tempLink = document.createElement('a');\n    tempLink.style.display = 'none';\n    tempLink.href = blobURL;\n    tempLink.setAttribute('download', filename);\n    if (typeof tempLink.download === 'undefined') {\n        tempLink.setAttribute('target', '_blank');\n    }\n    document.body.appendChild(tempLink);\n    tempLink.click();\n    document.body.removeChild(tempLink);\n    setTimeout(() => {\n        window.URL.revokeObjectURL(blobURL);\n        if (resolve) resolve();\n    }, 100);\n}\n\nexport function rotateVec(x: number, y: number, a: number) {\n    const sinA = Math.sin(a);\n    const cosA = Math.cos(a);\n    const rx = cosA * x - sinA * y;\n    const ry = sinA * x + cosA * y;\n\n    return { rx, ry };\n}\n\nexport function calculateImageDimensions(imageFieldInfo: ImageFieldInfo | ImageToDraw) {\n    let calculatedImageWidth, calculatedImageHeight;\n    let imageWidth = imageFieldInfo.imageWidth || 1;\n    let imageHeight = imageFieldInfo.imageHeight || 1;\n\n    if (!imageFieldInfo.fit || imageFieldInfo.fit === 'width') {\n        calculatedImageWidth = imageFieldInfo.width;\n        calculatedImageHeight = (imageFieldInfo.width * imageHeight) / imageWidth;\n    } else if (imageFieldInfo.fit === 'height') {\n        calculatedImageWidth = (imageFieldInfo.height * imageWidth) / imageHeight;\n        calculatedImageHeight = imageFieldInfo.height;\n    } else {\n        // strech\n        calculatedImageWidth = imageFieldInfo.width;\n        calculatedImageHeight = imageFieldInfo.height;\n    }\n\n    calculatedImageWidth *= imageFieldInfo.zoom || 1;\n    calculatedImageHeight *= imageFieldInfo.zoom || 1;\n\n    return { width: calculatedImageWidth, height: calculatedImageHeight };\n}\n\nexport function reportError(error: string) {\n    return axios.post('/api/reports', { error });\n}\n","import { Dispatch } from './actions';\n\nexport interface SidebarOwnProps {\n    visible: boolean;\n}\n\nexport interface DispatchProps {\n    dispatch: Dispatch;\n}\n\nexport type IdsArray = string[];\n\nexport interface MessageType {\n    id: string;\n    type: string;\n    text: string;\n}\n\nexport interface GameType {\n    id: string;\n    name: string;\n}\n\nexport interface GamesCollection {\n    [propName: string]: GameType;\n}\n\nexport interface PlaceholderBase {\n    id: string;\n    type: string;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    angle: number;\n    locked?: boolean;\n    name?: string;\n    isOnBack?: boolean;\n}\n\nexport interface TextPlaceholderType extends PlaceholderBase {\n    type: 'text';\n    align: string;\n    color: string;\n    fontFamily: string;\n    fontVariant: string;\n    fontSize: number;\n    lineHeight?: number;\n}\n\nexport interface ImagePlaceholderType extends PlaceholderBase {\n    id: string;\n    type: 'image';\n    fit?: string;\n    zoom?: number;\n    cx?: number;\n    cy?: number;\n    crop?: boolean;\n}\n\nexport type PlaceholderType = TextPlaceholderType | ImagePlaceholderType;\n\nexport interface PlaceholdersCollection {\n    [propName: string]: PlaceholderType;\n}\n\nexport interface TextInfo {\n    value: string;\n}\n\nexport interface PlaceholdersTextInfoCollection {\n    [propName: string]: TextInfo;\n}\n\nexport interface PlaceholdersTextInfoByCardCollection {\n    [propName: string]: PlaceholdersTextInfoCollection;\n}\n\nexport interface ImageInfo {\n    url?: string;\n    global?: boolean;\n    base64?: string;\n    color?: string;\n    width?: number;\n    height?: number;\n}\n\nexport interface PlaceholdersImageInfoCollection {\n    [propName: string]: ImageInfo;\n}\n\nexport interface PlaceholdersImageInfoByCardCollection {\n    [propName: string]: PlaceholdersImageInfoCollection;\n}\n\nexport interface FieldBaseInfo {\n    id: string;\n    type: string;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    angle: number;\n    locked?: boolean;\n    name?: string;\n    isOnBack?: boolean;\n    unclickable?: boolean;\n}\n\nexport interface TextFieldInfo extends FieldBaseInfo {\n    type: 'text';\n    value: string;\n    align: string;\n    color: string;\n    fontFamily: string;\n    fontVariant: string;\n    fontSize: number;\n    lineHeight?: number;\n}\n\nexport interface ImageFieldInfo extends FieldBaseInfo {\n    type: 'image';\n    url?: string;\n    global?: boolean;\n    base64?: string;\n    color?: string;\n    imageWidth?: number;\n    imageHeight?: number;\n    fit?: string;\n    zoom?: number;\n    cx?: number;\n    cy?: number;\n    crop?: boolean;\n}\n\nexport type FieldInfo = TextFieldInfo | ImageFieldInfo;\n\nexport interface FieldInfoCollection {\n    [propName: string]: FieldInfo;\n}\n\nexport interface FieldInfoByCardCollection {\n    [propName: string]: FieldInfoCollection;\n}\n\nexport interface CardType {\n    id: string;\n    count: number;\n}\n\nexport interface CardsCollection {\n    [propName: string]: CardType;\n}\n\nexport interface CardSetType {\n    id: string;\n    name: string;\n}\n\nexport interface CardSetsCollection {\n    [propName: string]: CardSetType;\n}\n\nexport interface Credentials {\n    username: string;\n    password: string;\n}\n\nexport interface Image {\n    id: number;\n    name: string;\n    width: number;\n    height: number;\n}\n\nexport type ImageArray = Image[];\n\nexport interface CardSetData {\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    cardsAllIds: string[];\n    cardsById: CardsCollection;\n    fieldsAllIds: string[];\n    fields: FieldInfoByCardCollection;\n}\n\nexport enum ImageType {\n    SVG,\n    SVG_PATH,\n    IMAGE,\n    BLOCK_START,\n    BLOCK_END,\n}\n\nexport interface ImageToDraw {\n    type: ImageType;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    angle: number;\n    fit?: string;\n    data: string;\n    color?: string;\n    scale?: number;\n    imageWidth?: number;\n    imageHeight?: number;\n    zoom?: number;\n    cx?: number;\n    cy?: number;\n    crop?: boolean;\n}\n","import axios from 'axios';\nimport { downloadBlob, calculateImageDimensions } from './utils';\nimport { delay } from 'redux-saga';\nimport { XmlDocument } from 'xmldoc';\nimport JSZip from 'jszip';\nimport { getRequest } from './requests';\nimport { CardSetData, ImageToDraw, ImageType } from './types';\n\nconst SVG_B64_START = 'data:image/svg+xml;base64,';\n\nexport const generatePdfUsingWorker = (\n    accessToken: string,\n    collectionType: string,\n    collectionId: string,\n    pageWidth: number,\n    pageHeight: number,\n    topBottomMargin: number,\n    leftRightMargin: number,\n    verticalSpace: number,\n    horizontalSpace: number,\n    includeBleedingArea: boolean,\n    cutMarksForScissors: boolean,\n    cutMarksForGuillotine: boolean,\n    cutMarksInMarginArea: boolean,\n    cutMarksOnFrontSideOnly: boolean,\n) => {\n    // @ts-ignore\n    if (!window.Worker) {\n        throw new Error('We can not generate PDF because of browser you use. Try using different browser');\n    }\n\n    return new Promise((resolve, reject) => {\n        try {\n            const worker = new Worker('/js/worker.js');\n            worker.addEventListener('message', event => {\n                if (event.data.type === 'generatePdf') {\n                    const blobURL = event.data.url;\n                    downloadBlob(blobURL, 'card.pdf', resolve);\n                } else if (event.data.type === 'generateError') {\n                    const error = event.data.error;\n                    reject({ message: 'PDF generation failed', stack: error.stack });\n                }\n            });\n\n            worker.postMessage({\n                type: 'generatePdf',\n                accessToken,\n                collectionType,\n                collectionId,\n                pageWidth,\n                pageHeight,\n                topBottomMargin,\n                leftRightMargin,\n                verticalSpace,\n                horizontalSpace,\n                includeBleedingArea,\n                cutMarksForScissors,\n                cutMarksForGuillotine,\n                cutMarksInMarginArea,\n                cutMarksOnFrontSideOnly,\n            });\n        } catch (e) {\n            reject(e);\n        }\n    });\n};\n\nfunction loadImage(url: string): Promise<HTMLImageElement> {\n    return new Promise((resolve, reject) => {\n        const img = new Image();\n        img.onload = () => resolve(img);\n        img.onerror = () => reject();\n\n        img.src = url;\n    });\n}\n\nfunction prepareImageToDrawSpace(context: CanvasRenderingContext2D, imageToDraw: ImageToDraw, ptpmm: number) {\n    context.save();\n    let x = (imageToDraw.x + imageToDraw.width / 2) * ptpmm;\n    let y = (imageToDraw.y + imageToDraw.height / 2) * ptpmm;\n    context.translate(x, y);\n    context.rotate(imageToDraw.angle);\n    let ax = (-imageToDraw.width / 2) * ptpmm;\n    let ay = (-imageToDraw.height / 2) * ptpmm;\n    context.translate(ax, ay);\n    if (imageToDraw.crop) {\n        context.rect(0, 0, imageToDraw.width * ptpmm, imageToDraw.height * ptpmm);\n        context.clip();\n    }\n}\n\nfunction fixWidthAndHeightInSvg(data: string) {\n    const doc = new XmlDocument(data);\n    if (!('width' in doc.attr) || !('height' in doc.attr)) {\n        const viewBox = doc.attr['viewBox'].split(' ');\n        doc.attr['width'] = viewBox[2];\n        doc.attr['height'] = viewBox[3];\n    }\n\n    return btoa(doc.toString({ compressed: true }));\n}\n\nclass PNGGenerator {\n    tasksQueue: {\n        type: string;\n        subType: string;\n        imageToDraw?: ImageToDraw;\n        error?: { message: string; stack: string };\n    }[] = [];\n    worker: Worker;\n\n    constructor() {\n        // @ts-ignore\n        if (!window.Worker) {\n            throw new Error('We can not generate PNG because of browser you use. Try using different browser');\n        }\n\n        this.worker = new Worker('/js/worker.js');\n        this.worker.addEventListener('message', event => {\n            if (event.data.type === 'generateCard' || event.data.type === 'generateError') {\n                this.tasksQueue.push(event.data);\n            }\n        });\n    }\n\n    async generateCard(\n        cardSetData: CardSetData,\n        cardId: string,\n        cardIdx: number,\n        dpi: number,\n        isBack: boolean,\n        cardsetFolder: JSZip,\n    ) {\n        this.worker.postMessage({\n            type: 'generateCard',\n            cardSetData,\n            cardId,\n            isBack,\n        });\n\n        let offscreenCanvas = document.createElement('canvas');\n\n        const calculatedWidth = Math.round(dpi * (cardSetData.width / 25.4 + 1 / 4));\n        const calculatedHeight = Math.round(dpi * (cardSetData.height / 25.4 + 1 / 4));\n\n        offscreenCanvas.width = calculatedWidth;\n        offscreenCanvas.height = calculatedHeight;\n        var context = offscreenCanvas.getContext('2d');\n        if (context === null) {\n            throw new Error('We cannot generate PNG because of unknown reason. Try different browser.');\n        }\n        context.fillStyle = 'white';\n        context.fillRect(0, 0, calculatedWidth, calculatedHeight);\n\n        let stopped = false;\n\n        const ptpmm = dpi / 25.4;\n\n        while (!stopped) {\n            while (this.tasksQueue.length > 0) {\n                let task = this.tasksQueue.shift();\n\n                if (task && task.imageToDraw) {\n                    const imageToDraw = task.imageToDraw;\n\n                    if (imageToDraw.type === ImageType.SVG_PATH) {\n                        prepareImageToDrawSpace(context, imageToDraw, ptpmm);\n                        if (imageToDraw.scale && imageToDraw.color) {\n                            context.fillStyle = imageToDraw.color;\n                            context.scale(imageToDraw.scale * ptpmm, imageToDraw.scale * ptpmm);\n                            var p = new Path2D(imageToDraw.data);\n                            context.fill(p);\n                        }\n                        context.restore();\n                    } else if (imageToDraw.type === ImageType.IMAGE || imageToDraw.type === ImageType.SVG) {\n                        prepareImageToDrawSpace(context, imageToDraw, ptpmm);\n\n                        if (imageToDraw.cx !== undefined && imageToDraw.cy !== undefined) {\n                            context.translate(imageToDraw.cx * ptpmm, imageToDraw.cy * ptpmm);\n                        }\n                        let dim = calculateImageDimensions(imageToDraw);\n\n                        let image;\n                        if (imageToDraw.type === ImageType.SVG) {\n                            let svgData = fixWidthAndHeightInSvg(atob(imageToDraw.data));\n                            image = await loadImage(SVG_B64_START + svgData);\n                        } else {\n                            let resp = await axios.get(imageToDraw.data);\n                            if (resp.headers['content-type'] === 'image/svg+xml') {\n                                let svgData = fixWidthAndHeightInSvg(resp.data);\n                                image = await loadImage(SVG_B64_START + svgData);\n                            } else {\n                                image = await loadImage(imageToDraw.data);\n                            }\n                        }\n\n                        context.drawImage(image, 0, 0, dim.width * ptpmm, dim.height * ptpmm);\n\n                        context.restore();\n                    } else if (imageToDraw.type === ImageType.BLOCK_START) {\n                        prepareImageToDrawSpace(context, imageToDraw, ptpmm);\n                    } else if (imageToDraw.type === ImageType.BLOCK_END) {\n                        context.restore();\n                    }\n                }\n\n                if (task && task.subType === 'stop') {\n                    stopped = true;\n                }\n\n                if (task && task.type === 'generateError' && task.error) {\n                    let error = Error('Failed to generate PNG');\n                    error.stack = task.error.stack;\n                    throw error;\n                }\n            }\n            if (!stopped) {\n                await delay(100);\n            }\n        }\n\n        let dataUrl = offscreenCanvas.toDataURL();\n        dataUrl = dataUrl.slice('data:image/png;base64,'.length);\n        cardsetFolder.file(\n            `${cardIdx.toString().padStart(4, '0')}_${cardId}_${isBack ? 'back' : 'front'}.png`,\n            dataUrl,\n            { base64: true },\n        );\n    }\n\n    async generateGame(accessToken: string, gameId: string, dpi: number, zip: JSZip) {\n        let resp = await getRequest('/api/games/' + gameId, accessToken);\n        if (!resp) return;\n\n        const cardsetsList = resp.data.cardsets;\n        for (const cardsetInfo of cardsetsList) {\n            await this.generateCardset(accessToken, cardsetInfo.id, dpi, zip);\n        }\n    }\n\n    async generateCardset(accessToken: string, cardsetId: string, dpi: number, zip: JSZip) {\n        const resp = await getRequest('/api/cardsets/' + cardsetId, accessToken);\n        if (!resp) return;\n\n        let cardSetData: CardSetData = JSON.parse(resp.data.data);\n\n        let cardsetFolder = zip.folder(resp.data.name);\n\n        for (const [cardIdx, cardId] of cardSetData.cardsAllIds.entries()) {\n            await this.generateCard(cardSetData, cardId, cardIdx, dpi, false, cardsetFolder);\n            if (cardSetData.isTwoSided) {\n                await this.generateCard(cardSetData, cardId, cardIdx, dpi, true, cardsetFolder);\n            }\n        }\n    }\n}\n\nexport const generatePngUsingWorker = async (\n    accessToken: string,\n    collectionType: string,\n    collectionId: string,\n    dpi: number,\n) => {\n    const pngGenerator = new PNGGenerator();\n\n    let zip = new JSZip();\n\n    if (collectionType === 'games') {\n        await pngGenerator.generateGame(accessToken, collectionId, dpi, zip);\n    } else if (collectionType === 'cardsets') {\n        await pngGenerator.generateCardset(accessToken, collectionId, dpi, zip);\n    }\n\n    let blob = await zip.generateAsync({ type: 'blob' });\n    let url = window.URL.createObjectURL(blob);\n    downloadBlob(url, 'cards.zip');\n};\n","export function saveTokens(data: { accessToken: string; refreshToken: string }) {\n    localStorage.setItem('accessToken', data.accessToken);\n    localStorage.setItem('refreshToken', data.refreshToken);\n}\n\nexport function saveAccessToken(accessToken: string) {\n    localStorage.setItem('accessToken', accessToken);\n}\n\nexport function cleanTokens() {\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n}\n\nexport function getTokenFromStorage() {\n    let token = localStorage.getItem('accessToken') || null;\n    return token;\n}\n\nexport function getRefreshTokenFromStorage() {\n    let token = localStorage.getItem('refreshToken') || null;\n    return token;\n}\n","import WebFont from 'webfontloader';\n\nimport { DEFAULT_FONT } from './constants';\nimport { CardSetSelectSuccessDataV3 } from './actions';\n\nconst webFontsLoadPromise = (config: WebFont.Config) =>\n    new Promise((resolve, reject) => {\n        WebFont.load({ ...config, active: resolve, inactive: reject });\n    });\n\nexport const loadFontsUsedInPlaceholders = (data: CardSetSelectSuccessDataV3) => {\n    if (!('fieldsAllIds' in data)) {\n        return;\n    }\n\n    let fontsToLoad: Set<string> = new Set();\n    fontsToLoad.add(DEFAULT_FONT);\n    for (const fieldId of data.fieldsAllIds) {\n        const field = data.fields[data.cardsAllIds[0]][fieldId];\n        if (field && field.type === 'text' && field.fontFamily) {\n            let fontToLoad = field.fontFamily;\n            if (field.fontVariant && field.fontVariant !== 'regular') {\n                fontToLoad += ':' + field.fontVariant;\n            }\n\n            fontsToLoad.add(fontToLoad);\n        }\n    }\n\n    const config: WebFont.Config = {\n        google: {\n            families: [...Array.from(fontsToLoad)],\n        },\n    };\n\n    return webFontsLoadPromise(config);\n};\n","import { CancelToken } from 'axios';\nimport { XmlDocument, XmlNode } from 'xmldoc';\nimport { all, call, put, select, takeEvery, takeLatest } from 'redux-saga/effects';\nimport { delay, SagaIterator } from 'redux-saga';\nimport jwtDecode from 'jwt-decode';\nimport { ActionCreators } from 'redux-undo';\n\nimport { BLEED_WIDTH, CURRENT_CARDSET_VERSION } from './constants';\nimport {\n    CARDSET_ADD_IMAGE_FIELD,\n    CARDSET_ADD_TEXT_FIELD,\n    CARDSET_CHANGE_ACTIVE_FIELD_NAME,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT,\n    CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD,\n    CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD,\n    CARDSET_CHANGE_HEIGHT,\n    CARDSET_CHANGE_IMAGE,\n    CARDSET_CHANGE_IS_TWO_SIDED,\n    CARDSET_CHANGE_FIELD_ANGLE,\n    CARDSET_CHANGE_FIELD_SIZE,\n    CARDSET_CHANGE_SNAPPING_DISTANCE,\n    CARDSET_CHANGE_TEXT,\n    CARDSET_CHANGE_WIDTH,\n    CARDSET_CLONE_CARD,\n    CARDSET_CREATE_CARD,\n    CARDSET_CREATE_FAILURE,\n    CARDSET_CREATE_REQUEST,\n    CARDSET_CREATE_SUCCESS,\n    CARDSET_DELETE_IMAGE,\n    CARDSET_DELETE_REQUEST,\n    CARDSET_IMPORT_DATA,\n    CARDSET_LIST_RESET,\n    CARDSET_LIST_SUCCESS,\n    CARDSET_LOCK_ACTIVE_FIELD,\n    CARDSET_LOWER_ACTIVE_FIELD,\n    CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM,\n    CARDSET_RAISE_ACTIVE_FIELD,\n    CARDSET_RAISE_ACTIVE_FIELD_TO_TOP,\n    CARDSET_REMOVE_ACTIVE_FIELD,\n    CARDSET_REMOVE_CARD,\n    CARDSET_RENAME_REQUEST,\n    CARDSET_SELECT_FAILURE,\n    CARDSET_SELECT_REQUEST,\n    CARDSET_SELECT_SUCCESS,\n    CARDSET_SET_ZOOM,\n    CARDSET_UNLOCK_ACTIVE_FIELD,\n    CARDSET_UPDATE_CARD_COUNT,\n    CARDSET_UPLOAD_IMAGE,\n    CARDSET_UPLOAD_IMAGE_FAILURE,\n    CARDSET_UPLOAD_IMAGE_SUCCESS,\n    CardSetChangeFitForActiveField,\n    CardSetChangeImage,\n    CardSetCreateRequest,\n    CardSetDeleteImage,\n    CardSetDeleteRequest,\n    CardSetRenameRequest,\n    CardSetSelectRequest,\n    CardSetUploadImage,\n    GAME_CREATE_PDF_FAILURE,\n    GAME_CREATE_PDF_REQUEST,\n    GAME_CREATE_PDF_SUCCESS,\n    GAME_CREATE_PNG_FAILURE,\n    GAME_CREATE_PNG_REQUEST,\n    GAME_CREATE_PNG_SUCCESS,\n    GAME_CREATE_REQUEST,\n    GAME_CREATE_SUCCESS,\n    GAME_DELETE_REQUEST,\n    GAME_LIST_FAILURE,\n    GAME_LIST_REQUEST,\n    GAME_LIST_RESET,\n    GAME_LIST_SUCCESS,\n    GAME_RENAME_REQUEST,\n    GAME_SELECT_FAILURE,\n    GAME_SELECT_REQUEST,\n    GAME_SELECT_SUCCESS,\n    GameCreatePdfRequest,\n    GameCreatePngRequest,\n    GameCreateRequest,\n    GameDeleteRequest,\n    GameRenameRequest,\n    GameSelectRequest,\n    IMAGE_LIST_FAILURE,\n    IMAGE_LIST_REQUEST,\n    IMAGE_LIST_SUCCESS,\n    INIT_REQUEST,\n    ImageListRequest,\n    LOGIN_FAILURE,\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGOUT_FAILURE,\n    LOGOUT_REQUEST,\n    LOGOUT_SUCCESS,\n    LoginRequest,\n    MESSAGE_DISPLAY,\n    MESSAGE_HIDE,\n    MessageDisplay,\n    SIGNUP_FAILURE,\n    SIGNUP_REQUEST,\n    SIGNUP_SUCCESS,\n    SignUpRequest,\n    cardSetChangeImageBase64,\n    gameSelectRequest,\n    messageDisplay,\n    CARDSET_CHANGE_FIELD_PAN,\n    CARDSET_CHANGE_FIELD_ZOOM,\n    CARDSETS_SELECT_SUCCESS,\n    CARDSET_CHANGE_FIELD_POSITION,\n    CardSetSelectSuccessData,\n    CardSetSelectSuccessDataV2,\n    CardSetSelectSuccessDataV3,\n    CARDSET_UNDO,\n    CARDSET_REDO,\n    CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD,\n} from './actions';\nimport { CardSetType, CardSetsCollection, GameType, GamesCollection, FieldInfoByCardCollection } from './types';\nimport { State } from './reducers';\nimport {\n    deleteAccessToken,\n    deleteRefreshToken,\n    deleteRequest,\n    getRequest,\n    getTokens,\n    postRequest,\n    postRequestFormDataCancelable,\n    putRequest,\n    refreshToken,\n    registerUser,\n} from './requests';\nimport { generatePdfUsingWorker, generatePngUsingWorker } from './workerController';\nimport { getTokenFromStorage, getRefreshTokenFromStorage, saveAccessToken, saveTokens, cleanTokens } from './storage';\nimport { loadFontsUsedInPlaceholders } from './fontLoader';\nimport { reportError } from './utils';\n\n// Messages\nexport function* putError(e: Error): SagaIterator {\n    yield put(messageDisplay('error', e.message));\n    if (process.env.NODE_ENV === 'development') {\n        yield call(console.log, e.stack);\n    } else {\n        yield call(reportError, e.stack || e.message);\n    }\n}\n\nexport function* putInfo(message: string): SagaIterator {\n    yield put(messageDisplay('info', message));\n}\n\nexport function* putProgress(text: string): SagaIterator {\n    const message = messageDisplay('progress', text, text);\n    yield put(message);\n    return message.message.id;\n}\n\nexport function* hideProgress(messageId: string): SagaIterator {\n    yield put({ type: MESSAGE_HIDE, messageId });\n}\n\nexport function* handleMessageDisplay(action: MessageDisplay): SagaIterator {\n    if (action.message.type === 'progress') return;\n\n    yield call(delay, 5000);\n    yield put({ type: MESSAGE_HIDE, messageId: action.message.id });\n}\n\n// Login & Signup\n// Token handling\n\nexport function validateToken(token: string): boolean {\n    try {\n        const decoded = jwtDecode<{ exp: number }>(token);\n        const valid = decoded.exp - new Date().getTime() / 1000 > 5;\n        return valid;\n    } catch (e) {\n        return false;\n    }\n}\n\nexport function* getToken(withErrorIfMissing: boolean, getFreshToken = false): SagaIterator {\n    const token = yield call(getTokenFromStorage);\n    if (token && !getFreshToken) {\n        const tokenValid = yield call(validateToken, token);\n        if (tokenValid) return token;\n    }\n\n    const refreshTokenValue = yield call(getRefreshTokenFromStorage);\n    if (!refreshTokenValue) {\n        if (withErrorIfMissing) throw new Error('Token not found.');\n        return null;\n    }\n\n    const refreshTokenValid = yield call(validateToken, refreshTokenValue);\n    if (!refreshTokenValid) {\n        yield put({ type: LOGOUT_REQUEST });\n        if (withErrorIfMissing) throw new Error('Token not found.');\n        return null;\n    }\n\n    const newToken = yield call(refreshToken, refreshTokenValue);\n    yield call(saveAccessToken, newToken);\n    return newToken;\n}\n\n// Login\n\nexport function* handleLoginRequest(action: LoginRequest): SagaIterator {\n    try {\n        const data = yield call(getTokens, action.creds);\n        yield call(saveTokens, data);\n        yield put({ type: LOGIN_SUCCESS });\n    } catch (e) {\n        yield put({ type: LOGIN_FAILURE });\n        yield call(putError, e);\n    }\n}\n\nexport function* handleLoginSuccess(): SagaIterator {\n    yield put({ type: GAME_LIST_REQUEST });\n}\n\n// Logout\n\nexport function* logoutToken(): SagaIterator {\n    const token = yield call(getTokenFromStorage);\n    if (token) {\n        const tokenValid = yield call(validateToken, token);\n        if (tokenValid) {\n            yield call(deleteAccessToken, token);\n        }\n    }\n}\n\nexport function* logoutRefreshToken(): SagaIterator {\n    const refreshTokenValue = yield call(getRefreshTokenFromStorage);\n    if (refreshTokenValue) {\n        const refreshTokenValid = yield call(validateToken, refreshTokenValue);\n        if (refreshTokenValid) {\n            yield call(deleteRefreshToken, refreshTokenValue);\n        }\n    }\n}\n\nexport function* handleLogoutRequest(): SagaIterator {\n    try {\n        yield call(logoutToken);\n        yield call(logoutRefreshToken);\n        yield call(cleanTokens);\n\n        yield put({ type: CARDSET_LIST_RESET });\n        yield put({ type: GAME_LIST_RESET });\n        yield put({ type: LOGOUT_SUCCESS });\n    } catch (e) {\n        yield put({ type: LOGOUT_FAILURE });\n        yield call(putError, e);\n    }\n}\n\n// Sign-up\n\nexport function* handleSignupRequest(action: SignUpRequest): SagaIterator {\n    try {\n        const data = yield call(registerUser, action.creds);\n        yield call(saveTokens, data);\n        yield put({ type: SIGNUP_SUCCESS });\n        yield put({ type: LOGIN_SUCCESS });\n    } catch (e) {\n        yield put({ type: SIGNUP_FAILURE });\n        yield call(putError, e);\n    }\n}\n\n// Init\nexport function* handleInitRequest(): SagaIterator {\n    try {\n        let token = yield call(getToken, false);\n        if (token) {\n            yield put({ type: LOGIN_SUCCESS });\n        }\n    } catch (e) {}\n}\n\n// Authorized Requests\nexport function* authorizedGetRequest(url: string): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(getRequest, url, token);\n}\n\nexport function* authorizedPostRequest(url: string, data: object): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(postRequest, url, token, data);\n}\n\nexport function* authorizedDeleteRequest(url: string): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(deleteRequest, url, token);\n}\n\nexport function* authorizedPostFormDataRequest(\n    url: string,\n    data: FormData,\n    progressCallback: (event: ProgressEvent) => void,\n    cancelToken: CancelToken,\n    cancelCallback: () => void,\n): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(postRequestFormDataCancelable, url, token, data, progressCallback, cancelToken, cancelCallback);\n}\n\nexport function* authorizedPutRequest(url: string, data: object): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(putRequest, url, token, data);\n}\n\n// Game\nexport function* handleGameCreateRequest(action: GameCreateRequest): SagaIterator {\n    try {\n        yield call(authorizedPostRequest, '/api/games', { name: action.gamename });\n        yield put({\n            type: GAME_CREATE_SUCCESS,\n        });\n        yield put({ type: GAME_LIST_REQUEST });\n    } catch (e) {\n        yield call(putError, e);\n    }\n}\n\nexport function* handleGameDeleteRequest(action: GameDeleteRequest): SagaIterator {\n    try {\n        yield call(authorizedDeleteRequest, '/api/games/' + action.gameId);\n        yield put({ type: GAME_LIST_REQUEST });\n    } catch (e) {\n        yield call(putError, e);\n    }\n}\n\nexport function* handleGameRenameRequest(action: GameRenameRequest): SagaIterator {\n    try {\n        yield call(delay, 500);\n        yield call(authorizedPutRequest, '/api/games/' + action.gameId, { name: action.newName });\n    } catch (e) {\n        yield call(putError, e);\n    }\n}\n\nexport function* handleGameListRequest(): SagaIterator {\n    try {\n        const resp = yield call(authorizedGetRequest, '/api/games');\n        const allIds = resp.data.games.map((g: GameType) => g.id);\n        const byId = resp.data.games.reduce((obj: GamesCollection, g: GameType) => {\n            obj[g.id] = g;\n            return obj;\n        }, {});\n        yield put({\n            type: GAME_LIST_SUCCESS,\n            allIds,\n            byId,\n        });\n    } catch (e) {\n        yield put({ type: GAME_LIST_FAILURE });\n        yield call(putError, e);\n    }\n}\n\nexport function* handleGameSelectRequest(action: GameSelectRequest): SagaIterator {\n    try {\n        const resp = yield call(authorizedGetRequest, '/api/games/' + action.id);\n        yield put({\n            type: GAME_SELECT_SUCCESS,\n            id: action.id,\n        });\n\n        if (action.updateCardSets) {\n            const allIds = resp.data.cardsets.map((g: CardSetType) => g.id);\n            const byId = resp.data.cardsets.reduce((obj: CardSetsCollection, g: CardSetType) => {\n                obj[g.id] = g;\n                return obj;\n            }, {});\n            yield put({\n                type: CARDSET_LIST_SUCCESS,\n                allIds,\n                byId,\n            });\n        }\n    } catch (e) {\n        yield put({ type: GAME_SELECT_FAILURE });\n        yield call(putError, e);\n    }\n}\n\nexport function* handleGameCreatePdfRequest(action: GameCreatePdfRequest): SagaIterator {\n    let progressId = null;\n    try {\n        progressId = yield call(putProgress, 'Generating PDF');\n\n        const token = yield call(getToken, true, true);\n\n        yield call(\n            generatePdfUsingWorker,\n            token,\n            action.collectionType,\n            action.collectionId,\n            action.pageWidth,\n            action.pageHeight,\n            action.topBottomMargin,\n            action.leftRightMargin,\n            action.verticalSpace,\n            action.horizontalSpace,\n            action.includeBleedingArea,\n            action.cutMarksForScissors,\n            action.cutMarksForGuillotine,\n            action.cutMarksInMarginArea,\n            action.cutMarksOnFrontSideOnly,\n        );\n        yield call(hideProgress, progressId);\n        yield call(putInfo, 'PDF generated.');\n        yield put({\n            type: GAME_CREATE_PDF_SUCCESS,\n        });\n    } catch (e) {\n        yield put({ type: GAME_CREATE_PDF_FAILURE });\n        if (progressId !== null) yield call(hideProgress, progressId);\n        yield call(putError, e);\n    }\n}\n\nexport function* handleGameCreatePngRequest(action: GameCreatePngRequest): SagaIterator {\n    let progressId = null;\n    try {\n        progressId = yield call(putProgress, 'Generating PNG');\n\n        const token = yield call(getToken, true, true);\n\n        yield call(generatePngUsingWorker, token, action.collectionType, action.collectionId, action.dpi);\n        yield call(hideProgress, progressId);\n        yield call(putInfo, 'PNG generated.');\n        yield put({\n            type: GAME_CREATE_PNG_SUCCESS,\n        });\n    } catch (e) {\n        yield put({ type: GAME_CREATE_PNG_FAILURE });\n        if (progressId !== null) yield call(hideProgress, progressId);\n        yield call(putError, e);\n    }\n}\n\n// Card Set\n\nexport function* handleCardSetCreateRequest(action: CardSetCreateRequest): SagaIterator {\n    try {\n        yield call(authorizedPostRequest, '/api/cardsets', {\n            name: action.cardsetname,\n            gameId: action.gameId,\n            data: JSON.stringify({ width: action.width, height: action.height, version: CURRENT_CARDSET_VERSION }),\n        });\n        yield put({\n            type: CARDSET_CREATE_SUCCESS,\n        });\n        yield put(gameSelectRequest(action.gameId, true));\n    } catch (e) {\n        yield put({ type: CARDSET_CREATE_FAILURE });\n        yield call(putError, e);\n    }\n}\n\nexport function* handleCardSetDeleteRequest(action: CardSetDeleteRequest): SagaIterator {\n    try {\n        yield call(authorizedDeleteRequest, '/api/cardsets/' + action.cardSetId);\n        yield put({ type: GAME_LIST_REQUEST });\n\n        const state = yield select();\n        yield put(gameSelectRequest(state.games.active, true));\n    } catch (e) {\n        yield call(putError, e);\n    }\n}\n\nexport function* handleCardSetRenameRequest(action: CardSetRenameRequest): SagaIterator {\n    try {\n        yield call(delay, 500);\n        yield call(authorizedPutRequest, '/api/cardsets/' + action.cardSetId, { name: action.newName });\n    } catch (e) {\n        yield call(putError, e);\n    }\n}\n\nfunction loadImageInfo(url: string): Promise<{ width: number; height: number }> {\n    return new Promise((resolve, reject) => {\n        try {\n            let img = new Image();\n\n            img.addEventListener('load', function() {\n                resolve({\n                    width: this.naturalWidth,\n                    height: this.naturalHeight,\n                });\n            });\n            img.src = url;\n        } catch (e) {\n            reject(e);\n        }\n    });\n}\n\nexport async function processData(data: CardSetSelectSuccessData): Promise<CardSetSelectSuccessDataV3> {\n    let processedData = data;\n\n    if (!('version' in processedData)) {\n        if (!('placeholdersAllIds' in processedData) && 'placeholders' in processedData) {\n            (processedData as CardSetSelectSuccessDataV2).placeholdersAllIds = Object.keys(\n                (processedData as CardSetSelectSuccessDataV2).placeholders,\n            );\n        }\n\n        (processedData as CardSetSelectSuccessDataV2).version = 2;\n        for (const plId in (processedData as CardSetSelectSuccessDataV2).placeholders) {\n            const placeholder = (processedData as CardSetSelectSuccessDataV2).placeholders[plId];\n            placeholder.x += BLEED_WIDTH;\n            placeholder.y += BLEED_WIDTH;\n        }\n    }\n\n    if (processedData.version === 2) {\n        let fieldsAllIds = processedData.placeholdersAllIds;\n        let fields: FieldInfoByCardCollection = {};\n\n        for (const cardId of processedData.cardsAllIds) {\n            fields[cardId] = {};\n\n            for (const fieldId of fieldsAllIds) {\n                let placeholder = processedData.placeholders[fieldId];\n                if (placeholder.type === 'image') {\n                    if (cardId in processedData.images && fieldId in processedData.images[cardId]) {\n                        let imageInfo = processedData.images[cardId][fieldId];\n                        fields[cardId][fieldId] = {\n                            type: 'image',\n                            ...placeholder,\n                            url: imageInfo && imageInfo.url,\n                            global: imageInfo && imageInfo.global,\n                            base64: imageInfo && imageInfo.base64,\n                            color: imageInfo && imageInfo.color,\n                            imageWidth: imageInfo && imageInfo.width,\n                            imageHeight: imageInfo && imageInfo.height,\n                        };\n                    } else {\n                        fields[cardId][fieldId] = {\n                            type: 'image',\n                            ...placeholder,\n                        };\n                    }\n                } else if (placeholder.type === 'text') {\n                    if (cardId in processedData.texts && fieldId in processedData.texts[cardId]) {\n                        fields[cardId][fieldId] = {\n                            type: 'text',\n                            ...placeholder,\n                            ...processedData.texts[cardId][fieldId],\n                        };\n                    } else {\n                        fields[cardId][fieldId] = {\n                            type: 'text',\n                            ...placeholder,\n                            value: '',\n                        };\n                    }\n                }\n            }\n        }\n\n        processedData = {\n            version: 3,\n            width: processedData.width,\n            height: processedData.height,\n            isTwoSided: processedData.isTwoSided,\n            snappingDistance: processedData.snappingDistance,\n            cardsAllIds: processedData.cardsAllIds,\n            cardsById: processedData.cardsById,\n            fields,\n            fieldsAllIds,\n            zoom: processedData.zoom,\n        };\n    }\n\n    // We must load image data on each new load because user can upload new images\n    // that have different dimensions.\n    for (const cardId in processedData.fields) {\n        for (const fieldId in processedData.fields[cardId]) {\n            const fieldInfo = processedData.fields[cardId][fieldId];\n            if (fieldInfo.type === 'image' && fieldInfo.url) {\n                let info = await loadImageInfo(fieldInfo.url);\n                if (info.width !== fieldInfo.imageWidth || info.height !== fieldInfo.imageHeight) {\n                    fieldInfo.imageWidth = info.width;\n                    fieldInfo.imageHeight = info.height;\n                    fieldInfo.cx = 0;\n                    fieldInfo.cy = 0;\n                    fieldInfo.zoom = 1;\n                }\n            }\n        }\n    }\n\n    return processedData;\n}\n\nexport function* handleCardSetSelectRequest(action: CardSetSelectRequest): SagaIterator {\n    try {\n        const resp = yield call(authorizedGetRequest, '/api/cardsets/' + action.id);\n        let parsedData = JSON.parse(resp.data.data);\n        let processedData: CardSetSelectSuccessDataV3 = yield call(processData, parsedData);\n\n        yield call(loadFontsUsedInPlaceholders, processedData);\n        yield put({\n            type: CARDSETS_SELECT_SUCCESS,\n            id: resp.data.id,\n            name: resp.data.name,\n        });\n        yield put({\n            type: CARDSET_SELECT_SUCCESS,\n            data: processedData,\n        });\n        yield put(gameSelectRequest(resp.data.gameId, false));\n        yield put(ActionCreators.clearHistory());\n    } catch (e) {\n        yield put({ type: CARDSET_SELECT_FAILURE });\n        yield call(putError, e);\n    }\n}\n\nexport function* handleCardSetUploadImage(action: CardSetUploadImage): SagaIterator {\n    let progressId = null;\n    try {\n        progressId = yield call(putProgress, `Uploading ${action.file.name}`);\n        const formData = new FormData();\n        formData.set('gameId', action.gameId);\n        formData.append('image', action.file, action.file.name);\n\n        const data = yield call(\n            authorizedPostFormDataRequest,\n            '/api/images',\n            formData,\n            (event: ProgressEvent) => action.progress(event.lengthComputable, event.loaded, event.total),\n            action.cancelToken,\n            () => {\n                action.abort();\n            },\n        );\n        if (data !== undefined) {\n            // not cancelled\n            action.load(data.imageId.toString());\n            yield put({ type: CARDSET_UPLOAD_IMAGE_SUCCESS });\n            yield call(putInfo, `${action.file.name} uploaded`);\n        }\n        yield call(hideProgress, progressId);\n    } catch (e) {\n        yield put({ type: CARDSET_UPLOAD_IMAGE_FAILURE });\n        if (progressId !== null) yield call(hideProgress, progressId);\n        yield call(putError, e);\n        action.error(e.message);\n    }\n}\n\nexport function* handleCardSetDeleteImage(action: CardSetDeleteImage): SagaIterator {\n    try {\n        yield call(authorizedDeleteRequest, '/api/images/' + action.imageId);\n        action.load();\n    } catch (e) {\n        action.error(e.message);\n    }\n}\n\nfunction walkChildren(node: XmlNode, color: string) {\n    if (node.type === 'element') {\n        for (let child of node.children) {\n            if (child.type === 'element')\n                if (child.name === 'path') {\n                    child.attr['fill'] = color;\n                }\n            walkChildren(child, color);\n        }\n    }\n}\n\nfunction adjustSvg(data: string, preserveAspectRatio: boolean, color?: string): string {\n    const doc = new XmlDocument(data);\n    if (!preserveAspectRatio) {\n        doc.attr['preserveAspectRatio'] = 'none';\n    }\n\n    if (color) {\n        walkChildren(doc, color);\n    }\n\n    return btoa(doc.toString({ compressed: true }));\n}\n\nexport function* handleCardSetFitChange(action: CardSetChangeFitForActiveField): SagaIterator {\n    try {\n        yield call(delay, 100);\n        const state: State = yield select();\n\n        if (state.cardset.present.activeFieldId === undefined) {\n            return;\n        }\n\n        for (const cardId in state.cardset.present.cardsById) {\n            const fieldInfo = state.cardset.present.fields[cardId][state.cardset.present.activeFieldId];\n            if (fieldInfo.type === 'image' && fieldInfo.url) {\n                const imageResp = yield call(authorizedGetRequest, fieldInfo.url);\n                if (imageResp.headers['content-type'] === 'image/svg+xml') {\n                    if (action.fit === 'stretch') {\n                        const svg = adjustSvg(imageResp.data, false, fieldInfo.color);\n                        yield put(cardSetChangeImageBase64(cardId, state.cardset.present.activeFieldId, svg));\n                    } else if (fieldInfo.color) {\n                        const svg = adjustSvg(imageResp.data, true, fieldInfo.color);\n                        yield put(cardSetChangeImageBase64(cardId, state.cardset.present.activeFieldId, svg));\n                    } else {\n                        yield put(cardSetChangeImageBase64(cardId, state.cardset.present.activeFieldId, undefined));\n                    }\n                }\n            }\n        }\n    } catch (e) {\n        yield call(putError, e);\n    }\n}\n\nexport function* handleCardSetChangeImage(action: CardSetChangeImage): SagaIterator {\n    try {\n        yield call(delay, 100);\n        const state: State = yield select();\n\n        let cardsToFix =\n            state.cardset.present.applyToAllCards || action.cardId === undefined\n                ? state.cardset.present.cardsAllIds\n                : [action.cardId];\n\n        for (const cardId of cardsToFix) {\n            const cardFields = state.cardset.present.fields[cardId];\n            const imageInfo = cardFields[action.fieldId];\n            if (imageInfo.type === 'image' && imageInfo.url) {\n                const imageResp = yield call(authorizedGetRequest, imageInfo.url);\n\n                if (imageResp.headers['content-type'] === 'image/svg+xml') {\n                    const name = imageInfo.name || imageInfo.id;\n\n                    for (const fieldId in cardFields) {\n                        const fieldInfo = cardFields[fieldId];\n\n                        if ((fieldInfo.name === name || fieldInfo.id === name) && fieldInfo.type === 'image') {\n                            if (fieldInfo.fit === 'stretch') {\n                                const svg = adjustSvg(imageResp.data, false, imageInfo.color);\n                                yield put(cardSetChangeImageBase64(cardId, fieldId, svg));\n                            } else if (imageInfo.color) {\n                                const svg = adjustSvg(imageResp.data, true, imageInfo.color);\n                                yield put(cardSetChangeImageBase64(cardId, fieldId, svg));\n                            } else {\n                                yield put(cardSetChangeImageBase64(cardId, fieldId, undefined));\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    } catch (e) {\n        yield call(putError, e);\n    }\n}\n\nfunction closeHandler(e: Event) {\n    e.preventDefault();\n    e.returnValue = true;\n}\n\nfunction preventWindowClose() {\n    window.addEventListener('beforeunload', closeHandler);\n}\n\nfunction allowWindowClose() {\n    window.removeEventListener('beforeunload', closeHandler);\n}\n\nexport function* handleCardSetChange(): SagaIterator {\n    let progressId = null;\n\n    try {\n        preventWindowClose();\n        progressId = yield call(putProgress, 'Saving Card Set');\n\n        yield call(delay, 1000);\n        const state: State = yield select();\n\n        const cardsetId = state.cardsets.active;\n        if (cardsetId === null) throw Error('Save failed.');\n        const data = {\n            width: state.cardset.present.width,\n            height: state.cardset.present.height,\n            isTwoSided: state.cardset.present.isTwoSided,\n            snappingDistance: state.cardset.present.snappingDistance,\n            version: state.cardset.present.version,\n            cardsAllIds: state.cardset.present.cardsAllIds,\n            cardsById: state.cardset.present.cardsById,\n            fieldsAllIds: state.cardset.present.fieldsAllIds,\n            fields: state.cardset.present.fields,\n            zoom: state.cardset.present.zoom,\n        };\n\n        yield call(authorizedPutRequest, '/api/cardsets/' + cardsetId, {\n            name: state.cardsets.byId[cardsetId].name,\n            data: JSON.stringify(data),\n        });\n        yield call(hideProgress, progressId);\n        yield call(putInfo, 'Card Set saved');\n        allowWindowClose();\n    } catch (e) {\n        if (progressId !== null) yield call(hideProgress, progressId);\n        yield call(putError, e);\n        allowWindowClose();\n    }\n}\n\n// Images\nexport function* handleImageListRequest(action: ImageListRequest): SagaIterator {\n    try {\n        yield call(delay, 200);\n        const state = yield select();\n\n        const filter = encodeURIComponent(action.filter);\n        const location = encodeURIComponent(action.location);\n        const game = encodeURIComponent(state.games.active);\n        const resp = yield call(authorizedGetRequest, `/api/images?name=${filter}&location=${location}&game=${game}`);\n        const images = resp.data.images;\n        yield put({\n            type: IMAGE_LIST_SUCCESS,\n            images,\n        });\n    } catch (e) {\n        yield put({ type: IMAGE_LIST_FAILURE });\n        yield call(putError, e);\n    }\n}\n\n// All\nexport function* rootSaga(): SagaIterator {\n    yield all([\n        takeEvery(MESSAGE_DISPLAY, handleMessageDisplay),\n        takeLatest(LOGIN_REQUEST, handleLoginRequest),\n        takeLatest(LOGIN_SUCCESS, handleLoginSuccess),\n        takeLatest(LOGOUT_REQUEST, handleLogoutRequest),\n        takeLatest(SIGNUP_REQUEST, handleSignupRequest),\n        takeLatest(GAME_CREATE_REQUEST, handleGameCreateRequest),\n        takeLatest(GAME_DELETE_REQUEST, handleGameDeleteRequest),\n        takeLatest(GAME_RENAME_REQUEST, handleGameRenameRequest),\n        takeLatest(GAME_LIST_REQUEST, handleGameListRequest),\n        takeLatest(GAME_SELECT_REQUEST, handleGameSelectRequest),\n        takeLatest(GAME_CREATE_PDF_REQUEST, handleGameCreatePdfRequest),\n        takeLatest(GAME_CREATE_PNG_REQUEST, handleGameCreatePngRequest),\n        takeLatest(CARDSET_CREATE_REQUEST, handleCardSetCreateRequest),\n        takeLatest(CARDSET_DELETE_REQUEST, handleCardSetDeleteRequest),\n        takeLatest(CARDSET_RENAME_REQUEST, handleCardSetRenameRequest),\n        takeLatest(CARDSET_SELECT_REQUEST, handleCardSetSelectRequest),\n        takeEvery(CARDSET_UPLOAD_IMAGE, handleCardSetUploadImage),\n        takeEvery(CARDSET_DELETE_IMAGE, handleCardSetDeleteImage),\n        takeEvery(CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD, handleCardSetFitChange),\n        takeEvery(CARDSET_CHANGE_IMAGE, handleCardSetChangeImage),\n\n        takeLatest(CARDSET_CREATE_CARD, handleCardSetChange),\n        takeLatest(CARDSET_CLONE_CARD, handleCardSetChange),\n        takeLatest(CARDSET_REMOVE_CARD, handleCardSetChange),\n        takeLatest(CARDSET_UPDATE_CARD_COUNT, handleCardSetChange),\n        takeLatest(CARDSET_ADD_TEXT_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_ADD_IMAGE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_FIELD_NAME, handleCardSetChange),\n        takeLatest(CARDSET_REMOVE_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_RAISE_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_RAISE_ACTIVE_FIELD_TO_TOP, handleCardSetChange),\n        takeLatest(CARDSET_LOWER_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM, handleCardSetChange),\n        takeLatest(CARDSET_LOCK_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_UNLOCK_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_WIDTH, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_HEIGHT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_IS_TWO_SIDED, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_SNAPPING_DISTANCE, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_FIELD_POSITION, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_FIELD_PAN, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_FIELD_ZOOM, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_FIELD_SIZE, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_FIELD_ANGLE, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_TEXT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_IMAGE, handleCardSetChange),\n        takeLatest(CARDSET_SET_ZOOM, handleCardSetChange),\n        takeLatest(CARDSET_IMPORT_DATA, handleCardSetChange),\n        takeLatest(CARDSET_UNDO, handleCardSetChange),\n        takeLatest(CARDSET_REDO, handleCardSetChange),\n\n        takeLatest(IMAGE_LIST_REQUEST, handleImageListRequest),\n\n        takeLatest(INIT_REQUEST, handleInitRequest),\n    ]);\n}\n","import { combineReducers } from 'redux';\nimport shortid from 'shortid';\nimport undoable from 'redux-undo';\n\nimport {\n    CARDSET_ADD_IMAGE_FIELD,\n    CARDSET_ADD_TEXT_FIELD,\n    CARDSET_CHANGE_ACTIVE_FIELD_NAME,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT,\n    CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD,\n    CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD,\n    CARDSET_CHANGE_HEIGHT,\n    CARDSET_CHANGE_IMAGE,\n    CARDSET_CHANGE_IMAGE_BASE64,\n    CARDSET_CHANGE_IS_TWO_SIDED,\n    CARDSET_CHANGE_FIELD_ANGLE,\n    CARDSET_CHANGE_FIELD_SIZE,\n    CARDSET_CHANGE_SNAPPING_DISTANCE,\n    CARDSET_CHANGE_TEXT,\n    CARDSET_CHANGE_WIDTH,\n    CARDSET_CLONE_CARD,\n    CARDSET_CREATE_CARD,\n    CARDSET_IMPORT_DATA,\n    CARDSET_LIST_RESET,\n    CARDSET_LIST_SUCCESS,\n    CARDSET_LOCK_ACTIVE_FIELD,\n    CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM,\n    CARDSET_RAISE_ACTIVE_FIELD_TO_TOP,\n    CARDSET_REMOVE_ACTIVE_FIELD,\n    CARDSET_REMOVE_CARD,\n    CARDSET_RENAME_REQUEST,\n    CARDSET_SELECT_FAILURE,\n    CARDSET_SELECT_REQUEST,\n    CARDSET_SELECT_SUCCESS,\n    CARDSET_SET_ACTIVE_CARD_AND_FIELD,\n    CARDSET_SET_SIDEBAR_STATE,\n    CARDSET_SET_ZOOM,\n    CARDSET_UNLOCK_ACTIVE_FIELD,\n    CARDSET_UPDATE_CARD_COUNT,\n    CardSetAction,\n    GAME_CREATE_PDF_FAILURE,\n    GAME_CREATE_PDF_REQUEST,\n    GAME_CREATE_PDF_SUCCESS,\n    GAME_CREATE_PNG_FAILURE,\n    GAME_CREATE_PNG_REQUEST,\n    GAME_CREATE_PNG_SUCCESS,\n    GAME_LIST_RESET,\n    GAME_LIST_SUCCESS,\n    GAME_RENAME_REQUEST,\n    GAME_SELECT_FAILURE,\n    GAME_SELECT_REQUEST,\n    GAME_SELECT_SUCCESS,\n    GameAction,\n    IMAGE_LIST_REQUEST,\n    IMAGE_LIST_SUCCESS,\n    ImageListAction,\n    LOGIN_FAILURE,\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGOUT_SUCCESS,\n    LoginAction,\n    MESSAGE_DISPLAY,\n    MESSAGE_HIDE,\n    MessageAction,\n    SIGNUP_FAILURE,\n    SIGNUP_REQUEST,\n    SIGNUP_SUCCESS,\n    SidebarState,\n    SignUpAction,\n    CARDSET_CHANGE_FIELD_ZOOM,\n    CARDSET_CHANGE_FIELD_PAN,\n    CardSetsAction,\n    CARDSETS_SELECT_SUCCESS,\n    CARDSET_CHANGE_FIELD_POSITION,\n    CARDSET_UNDO,\n    CARDSET_REDO,\n    Action,\n    CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD,\n    CARDSET_CHANGE_APPLY_TO_ALLCARDS,\n    CARDSET_RAISE_ACTIVE_FIELD,\n    CARDSET_LOWER_ACTIVE_FIELD,\n} from './actions';\nimport {\n    CURRENT_CARDSET_VERSION,\n    DEFAULT_FONT,\n    DEFAULT_FONT_SIZE,\n    DEFAULT_FONT_VARIANT,\n    DEFAULT_LINE_HEIGHT,\n    BLEED_WIDTH,\n} from './constants';\nimport {\n    CardSetsCollection,\n    CardsCollection,\n    GamesCollection,\n    IdsArray,\n    ImageArray,\n    MessageType,\n    FieldInfoByCardCollection,\n    FieldInfoCollection,\n} from './types';\nimport { rotateVec } from './utils';\n\nexport const ACTIVITY_SELECTING = 0x1;\nexport const ACTIVITY_CREATING_PDF = 0x2;\nexport const ACTIVITY_CREATING_PNG = 0x4;\n\nexport interface MessageState {\n    messages: MessageType[];\n}\n\nexport const DefaultMessageState: MessageState = {\n    messages: [],\n};\n\nexport interface AuthState {\n    isAuthenticated: boolean;\n    user: string;\n}\n\nexport const DefaultAuthState: AuthState = {\n    isAuthenticated: false,\n    user: '',\n};\n\nexport interface SignUpState {\n    signingup: boolean;\n}\n\nexport const DefaultSignUpState: SignUpState = {\n    signingup: false,\n};\n\nexport interface GameState {\n    byId: GamesCollection;\n    allIds: IdsArray;\n    activity: number;\n    active: string | null;\n}\n\nexport const DefaultGameState: GameState = {\n    byId: {},\n    allIds: [],\n    activity: 0,\n    active: null,\n};\n\nexport interface TextSettings {\n    align: string;\n    color: string;\n    fontFamily: string;\n    fontVariant: string;\n    fontSize: number;\n    lineHeight?: number;\n}\n\nexport interface CardSetsState {\n    byId: CardSetsCollection;\n    allIds: IdsArray;\n    active: string | null;\n}\n\nexport const DefaultCardSetsState: CardSetsState = {\n    byId: {},\n    allIds: [],\n    active: null,\n};\n\nexport interface CardSetState {\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    snappingDistance: number;\n    version: number;\n    activity: number;\n    cardsAllIds: IdsArray;\n    cardsById: CardsCollection;\n    activeCardId?: string;\n    isBackActive: boolean;\n    activeFieldId?: string;\n    fieldsAllIds: IdsArray;\n    fields: FieldInfoByCardCollection;\n    textSettings: TextSettings;\n    activeSidebar: SidebarState | null;\n    zoom: number;\n    applyToAllCards: boolean;\n}\n\nexport const DefaultCardSetState: CardSetState = {\n    width: 63.5,\n    height: 88.9,\n    isTwoSided: false,\n    snappingDistance: 1,\n    version: CURRENT_CARDSET_VERSION,\n    activity: 0,\n    cardsById: {},\n    cardsAllIds: [],\n    activeCardId: undefined,\n    isBackActive: false,\n    activeFieldId: undefined,\n    fieldsAllIds: [],\n    fields: {},\n    textSettings: {\n        align: 'left',\n        color: '#000000',\n        fontFamily: DEFAULT_FONT,\n        fontVariant: DEFAULT_FONT_VARIANT,\n        fontSize: DEFAULT_FONT_SIZE,\n        lineHeight: DEFAULT_LINE_HEIGHT,\n    },\n    activeSidebar: null,\n    zoom: 1,\n    applyToAllCards: false,\n};\n\nexport interface ImageState {\n    activity: number;\n    filter: string;\n    images: ImageArray;\n}\n\nexport const DefaultImageState: ImageState = {\n    activity: 0,\n    filter: '',\n    images: [],\n};\n\nexport interface State {\n    message: MessageState;\n    auth: AuthState;\n    signup: SignUpState;\n    games: GameState;\n    cardsets: CardSetsState;\n    cardset: {\n        present: CardSetState;\n    };\n    images: ImageState;\n}\n\nexport const DefaultState: State = {\n    message: DefaultMessageState,\n    auth: DefaultAuthState,\n    signup: DefaultSignUpState,\n    games: DefaultGameState,\n    cardsets: DefaultCardSetsState,\n    cardset: {\n        present: DefaultCardSetState,\n    },\n    images: DefaultImageState,\n};\n\nexport function message(state: MessageState = DefaultMessageState, action: MessageAction): MessageState {\n    switch (action.type) {\n        case MESSAGE_DISPLAY:\n            const found = state.messages.find(m => m.id === action.message.id);\n            if (found) return state;\n\n            return {\n                ...state,\n                messages: state.messages.concat(action.message),\n            };\n        case MESSAGE_HIDE:\n            return Object.assign({}, state, {\n                messages: state.messages.filter(m => m.id !== action.messageId),\n            });\n        default:\n            return state;\n    }\n}\n\nexport function auth(state: AuthState = DefaultAuthState, action: LoginAction): AuthState {\n    switch (action.type) {\n        case LOGIN_REQUEST:\n            return Object.assign({}, state, {\n                isAuthenticated: false,\n                user: action.creds.username,\n            });\n        case LOGIN_SUCCESS:\n            return Object.assign({}, state, {\n                isAuthenticated: true,\n            });\n        case LOGIN_FAILURE:\n            return Object.assign({}, state, {\n                isAuthenticated: false,\n            });\n        case LOGOUT_SUCCESS:\n            return Object.assign({}, state, {\n                isAuthenticated: false,\n            });\n        default:\n            return state;\n    }\n}\n\nexport function signup(state: SignUpState = DefaultSignUpState, action: SignUpAction): SignUpState {\n    switch (action.type) {\n        case SIGNUP_REQUEST:\n            return Object.assign({}, state, {\n                signingup: true,\n            });\n        case SIGNUP_SUCCESS:\n            return Object.assign({}, state, {\n                signingup: false,\n            });\n        case SIGNUP_FAILURE:\n            return Object.assign({}, state, {\n                signingup: false,\n            });\n        default:\n            return state;\n    }\n}\n\nexport function games(state: GameState = DefaultGameState, action: GameAction): GameState {\n    switch (action.type) {\n        case GAME_RENAME_REQUEST:\n            const game = state.byId[action.gameId];\n\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    [game.id]: {\n                        ...game,\n                        name: action.newName,\n                    },\n                },\n            };\n        case GAME_LIST_SUCCESS:\n            return Object.assign({}, state, {\n                byId: action.byId,\n                allIds: action.allIds,\n            });\n        case GAME_LIST_RESET:\n            return Object.assign({}, state, {\n                activity: 0,\n                byId: {},\n                allIds: [],\n            });\n        case GAME_SELECT_REQUEST:\n            return Object.assign({}, state, {\n                activity: ACTIVITY_SELECTING,\n            });\n        case GAME_SELECT_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_SELECTING,\n                active: action.id,\n            });\n        case GAME_SELECT_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_SELECTING,\n            });\n        case GAME_CREATE_PDF_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_CREATING_PDF,\n            });\n        case GAME_CREATE_PDF_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING_PDF,\n            });\n        case GAME_CREATE_PDF_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING_PDF,\n            });\n        case GAME_CREATE_PNG_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_CREATING_PNG,\n            });\n        case GAME_CREATE_PNG_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING_PNG,\n            });\n        case GAME_CREATE_PNG_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING_PNG,\n            });\n        default:\n            return state;\n    }\n}\n\nexport function cardsets(state: CardSetsState = DefaultCardSetsState, action: CardSetsAction): CardSetsState {\n    switch (action.type) {\n        case CARDSETS_SELECT_SUCCESS:\n            return {\n                ...state,\n                active: action.id,\n                byId: Object.assign({}, state.byId, {\n                    [action.id]: {\n                        id: action.id,\n                        name: action.name,\n                    },\n                }),\n            };\n        case CARDSET_RENAME_REQUEST:\n            const cardset = state.byId[action.cardSetId];\n\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    [cardset.id]: {\n                        ...cardset,\n                        name: action.newName,\n                    },\n                },\n            };\n        case CARDSET_LIST_SUCCESS:\n            return Object.assign({}, state, {\n                byId: action.byId,\n                allIds: action.allIds,\n            });\n        case CARDSET_LIST_RESET:\n            return Object.assign({}, state, {\n                byId: {},\n                allIds: [],\n            });\n        default:\n            return state;\n    }\n}\n\nfunction resizeFields(fields: FieldInfoByCardCollection, widthRatio: number, heightRatio: number) {\n    let newFields = { ...fields };\n    for (const cardId in newFields) {\n        let cardFields = { ...fields[cardId] };\n        for (const fieldId in cardFields) {\n            let fieldInfo = { ...cardFields[fieldId] };\n            fieldInfo.x = (fieldInfo.x - BLEED_WIDTH) * widthRatio + BLEED_WIDTH;\n            fieldInfo.y = (fieldInfo.y - BLEED_WIDTH) * heightRatio + BLEED_WIDTH;\n            fieldInfo.width *= widthRatio;\n            fieldInfo.height *= heightRatio;\n            if (fieldInfo.type === 'image') {\n                if (fieldInfo.cx) {\n                    fieldInfo.cx *= widthRatio;\n                }\n                if (fieldInfo.cy) {\n                    fieldInfo.cy *= heightRatio;\n                }\n            } else if (fieldInfo.type === 'text') {\n                fieldInfo.fontSize *= heightRatio;\n            }\n            cardFields[fieldId] = fieldInfo;\n        }\n        newFields[cardId] = cardFields;\n    }\n    return newFields;\n}\n\nexport function cardset(state: CardSetState = DefaultCardSetState, action: CardSetAction): CardSetState {\n    switch (action.type) {\n        case CARDSET_SELECT_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_SELECTING,\n            });\n        case CARDSET_SELECT_SUCCESS: {\n            return {\n                ...state,\n                activity: state.activity & ~ACTIVITY_SELECTING,\n                width: action.data.width || 63.5,\n                height: action.data.height || 88.9,\n                isTwoSided: action.data.isTwoSided || false,\n                snappingDistance: action.data.snappingDistance || 1,\n                version: action.data.version,\n                cardsAllIds: action.data.cardsAllIds || [],\n                cardsById: action.data.cardsById || {},\n                fields: action.data.fields || {},\n                fieldsAllIds: action.data.fieldsAllIds || [],\n                activeCardId: undefined,\n                activeFieldId: undefined,\n                isBackActive: false,\n                zoom: action.data.zoom || 1,\n            };\n        }\n        case CARDSET_SELECT_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_SELECTING,\n            });\n        case CARDSET_CREATE_CARD: {\n            let cardFields: FieldInfoCollection = {};\n            if (state.cardsAllIds.length > 0) {\n                cardFields = {\n                    ...state.fields[state.cardsAllIds[0]],\n                };\n\n                for (const fieldId of state.fieldsAllIds) {\n                    let fieldInfo = { ...cardFields[fieldId] };\n                    if (fieldInfo.type === 'text') {\n                        fieldInfo.value = '';\n                    } else if (fieldInfo.type === 'image') {\n                        delete fieldInfo.url;\n                        delete fieldInfo.base64;\n                    }\n                    cardFields[fieldId] = fieldInfo;\n                }\n            }\n            return {\n                ...state,\n                cardsById: {\n                    ...state.cardsById,\n                    [action.card.id]: action.card,\n                },\n                cardsAllIds: state.cardsAllIds ? state.cardsAllIds.concat(action.card.id) : [action.card.id],\n                fields: {\n                    ...state.fields,\n                    [action.card.id]: cardFields,\n                },\n            };\n        }\n        case CARDSET_CLONE_CARD: {\n            let newCard = { ...action.card, id: shortid.generate() };\n\n            const index = state.cardsAllIds.indexOf(action.card.id) + 1;\n            const cardsAllIds = [...state.cardsAllIds.slice(0, index), newCard.id, ...state.cardsAllIds.slice(index)];\n\n            return {\n                ...state,\n                cardsById: {\n                    ...state.cardsById,\n                    [newCard.id]: newCard,\n                },\n                cardsAllIds,\n                fields: {\n                    ...state.fields,\n                    [newCard.id]: {\n                        ...state.fields[action.card.id],\n                    },\n                },\n            };\n        }\n        case CARDSET_REMOVE_CARD: {\n            const cardId = action.card.id;\n            let cardsById = { ...state.cardsById };\n            delete cardsById[cardId];\n\n            let fields = { ...state.fields };\n            if (cardId in fields) {\n                delete fields[cardId];\n            }\n\n            let activeCardId = state.activeCardId === cardId ? undefined : state.activeCardId;\n\n            const cardsAllIds = state.cardsAllIds.filter(id => id !== cardId);\n\n            let fieldsAllIds = state.fieldsAllIds;\n            if (cardsAllIds.length === 0) {\n                fieldsAllIds = [];\n            }\n\n            return {\n                ...state,\n                cardsById,\n                cardsAllIds,\n                fieldsAllIds,\n                fields,\n                activeCardId,\n            };\n        }\n        case CARDSET_UPDATE_CARD_COUNT: {\n            const cardId = action.card.id;\n            let card = { ...state.cardsById[cardId] };\n            card.count = action.count;\n\n            return {\n                ...state,\n                cardsById: {\n                    ...state.cardsById,\n                    [cardId]: card,\n                },\n            };\n        }\n        case CARDSET_ADD_TEXT_FIELD: {\n            let textSettings = { ...state.textSettings };\n            const id = shortid.generate();\n            let fields: FieldInfoByCardCollection = {};\n            for (const cardId of state.cardsAllIds) {\n                fields[cardId] = {\n                    ...state.fields[cardId],\n                    [id]: {\n                        type: 'text',\n                        id,\n                        x: 5,\n                        y: 5,\n                        width: 20,\n                        height: 10,\n                        angle: 0,\n                        isOnBack: state.isBackActive,\n                        value: '',\n                        align: textSettings.align,\n                        color: textSettings.color,\n                        fontFamily: textSettings.fontFamily,\n                        fontVariant: textSettings.fontVariant,\n                        fontSize: textSettings.fontSize,\n                        lineHeight: textSettings.lineHeight || DEFAULT_LINE_HEIGHT,\n                    },\n                };\n            }\n\n            return {\n                ...state,\n                fieldsAllIds: [...state.fieldsAllIds, id],\n                fields,\n            };\n        }\n        case CARDSET_ADD_IMAGE_FIELD: {\n            const id = shortid.generate();\n            let fields: FieldInfoByCardCollection = {};\n            for (const cardId of state.cardsAllIds) {\n                fields[cardId] = {\n                    ...state.fields[cardId],\n                    [id]: {\n                        type: 'image',\n                        id,\n                        x: 5,\n                        y: 5,\n                        width: 20,\n                        height: 20,\n                        angle: 0,\n                        isOnBack: state.isBackActive,\n                        crop: true,\n                    },\n                };\n            }\n\n            return {\n                ...state,\n                fieldsAllIds: [...state.fieldsAllIds, id],\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_ACTIVE_FIELD_NAME: {\n            if (state.activeFieldId !== undefined) {\n                let fields: FieldInfoByCardCollection = {};\n                let id = state.activeFieldId;\n\n                for (const cardId of state.cardsAllIds) {\n                    fields[cardId] = {\n                        ...state.fields[cardId],\n                        [id]: {\n                            ...state.fields[cardId][id],\n                            name: action.name,\n                        },\n                    };\n                }\n\n                return {\n                    ...state,\n                    fields,\n                };\n            }\n\n            return state;\n        }\n\n        case CARDSET_REMOVE_ACTIVE_FIELD: {\n            const fieldId = state.activeFieldId;\n            if (fieldId !== undefined) {\n                let fieldsAllIds = [...state.fieldsAllIds];\n                let fieldIndex = fieldsAllIds.indexOf(fieldId);\n                if (fieldIndex !== -1) {\n                    fieldsAllIds.splice(fieldIndex, 1);\n                }\n\n                let fields = { ...state.fields };\n                for (const cardId in fields) {\n                    if (fieldId in fields[cardId] && !fields[cardId][fieldId].locked) {\n                        let cardFields = { ...fields[cardId] };\n                        delete cardFields[fieldId];\n                        fields[cardId] = cardFields;\n                    }\n                }\n\n                return {\n                    ...state,\n                    fieldsAllIds,\n                    fields,\n                    activeFieldId: undefined,\n                };\n            }\n            return state;\n        }\n        case CARDSET_RAISE_ACTIVE_FIELD: {\n            let fieldsAllIds = [...state.fieldsAllIds];\n\n            if (state.activeFieldId !== undefined) {\n                let index = fieldsAllIds.indexOf(state.activeFieldId);\n                if (index !== -1 && index < fieldsAllIds.length - 1) {\n                    fieldsAllIds.splice(index + 1, 0, fieldsAllIds.splice(index, 1)[0]);\n                }\n            }\n\n            return {\n                ...state,\n                fieldsAllIds,\n            };\n        }\n        case CARDSET_RAISE_ACTIVE_FIELD_TO_TOP: {\n            let fieldsAllIds = [...state.fieldsAllIds];\n\n            if (state.activeFieldId !== undefined) {\n                let index = fieldsAllIds.indexOf(state.activeFieldId);\n                if (index !== -1) {\n                    fieldsAllIds.push(fieldsAllIds.splice(index, 1)[0]);\n                }\n            }\n\n            return {\n                ...state,\n                fieldsAllIds,\n            };\n        }\n        case CARDSET_LOWER_ACTIVE_FIELD: {\n            let fieldsAllIds = [...state.fieldsAllIds];\n\n            if (state.activeFieldId !== undefined) {\n                let index = fieldsAllIds.indexOf(state.activeFieldId);\n                if (index > 0) {\n                    fieldsAllIds.splice(index - 1, 0, fieldsAllIds.splice(index, 1)[0]);\n                }\n            }\n\n            return {\n                ...state,\n                fieldsAllIds,\n            };\n        }\n        case CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM: {\n            let fieldsAllIds = [...state.fieldsAllIds];\n\n            if (state.activeFieldId !== undefined) {\n                let index = fieldsAllIds.indexOf(state.activeFieldId);\n                if (index !== -1) {\n                    fieldsAllIds.unshift(fieldsAllIds.splice(index, 1)[0]);\n                }\n            }\n\n            return {\n                ...state,\n                fieldsAllIds,\n            };\n        }\n        case CARDSET_LOCK_ACTIVE_FIELD: {\n            if (state.activeFieldId) {\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        cardFields[fieldId] = {\n                            ...cardFields[fieldId],\n                            locked: true,\n                        };\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                };\n            }\n\n            return state;\n        }\n        case CARDSET_UNLOCK_ACTIVE_FIELD: {\n            if (state.activeFieldId) {\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        cardFields[fieldId] = {\n                            ...cardFields[fieldId],\n                            locked: false,\n                        };\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                };\n            }\n\n            return state;\n        }\n        case CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD: {\n            if (state.activeFieldId) {\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = { ...cardFields[fieldId] };\n                        if (fieldInfo.type === 'image') {\n                            fieldInfo.fit = action.fit;\n                        }\n                        cardFields[fieldId] = fieldInfo;\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                };\n            }\n\n            return state;\n        }\n        case CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD: {\n            if (state.activeFieldId) {\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = { ...cardFields[fieldId] };\n                        if (fieldInfo.type === 'image') {\n                            fieldInfo.crop = action.crop;\n                        }\n                        cardFields[fieldId] = fieldInfo;\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                };\n            }\n\n            return state;\n        }\n        case CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD: {\n            if (state.activeFieldId) {\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = { ...cardFields[fieldId] };\n                        fieldInfo.unclickable = action.unclickable;\n                        cardFields[fieldId] = fieldInfo;\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                };\n            }\n\n            return state;\n        }\n        case CARDSET_CHANGE_WIDTH: {\n            if (!action.width || action.width <= 0) {\n                return state;\n            }\n\n            let height = state.height;\n            if (action.maintainAspectRatio) {\n                height = action.width * (state.height / state.width);\n            }\n\n            let fields = state.fields;\n            if (action.resizeContent) {\n                fields = resizeFields(fields, action.width / state.width, height / state.height);\n            }\n\n            return {\n                ...state,\n                width: action.width,\n                height,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_HEIGHT: {\n            if (!action.height || action.height <= 0) {\n                return state;\n            }\n\n            let width = state.width;\n            if (action.maintainAspectRatio) {\n                width = action.height * (state.width / state.height);\n            }\n\n            let fields = state.fields;\n            if (action.resizeContent) {\n                fields = resizeFields(fields, width / state.width, action.height / state.height);\n            }\n\n            return {\n                ...state,\n                height: action.height,\n                width,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_IS_TWO_SIDED: {\n            return {\n                ...state,\n                isTwoSided: action.isTwoSided,\n            };\n        }\n        case CARDSET_CHANGE_SNAPPING_DISTANCE: {\n            return {\n                ...state,\n                snappingDistance: action.snappingDistance,\n            };\n        }\n        case CARDSET_CHANGE_FIELD_POSITION: {\n            let x = action.x;\n            let y = action.y;\n            let snappingDistance = state.snappingDistance;\n\n            if (snappingDistance !== 0) {\n                x = Math.round(x / snappingDistance) * snappingDistance;\n                y = Math.round(y / snappingDistance) * snappingDistance;\n            }\n\n            let fields = { ...state.fields };\n            let fieldId = action.fieldId;\n            let cardsToFix = action.cardId ? [action.cardId] : state.cardsAllIds;\n\n            for (const cardId of cardsToFix) {\n                let cardFields = { ...fields[cardId] };\n                if (fieldId in cardFields) {\n                    cardFields[fieldId] = {\n                        ...cardFields[fieldId],\n                        x,\n                        y,\n                    };\n                }\n                fields[cardId] = cardFields;\n            }\n\n            return {\n                ...state,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_FIELD_PAN: {\n            let { cx, cy } = action;\n\n            let fields = { ...state.fields };\n            let fieldId = action.fieldId;\n            let cardsToFix = state.applyToAllCards || action.cardId === undefined ? state.cardsAllIds : [action.cardId];\n\n            for (const cardId of cardsToFix) {\n                let cardFields = { ...fields[cardId] };\n                if (fieldId in cardFields) {\n                    let fieldInfo = cardFields[fieldId];\n                    if (fieldInfo.type === 'image') {\n                        let { width, height, zoom, fit, imageWidth, imageHeight } = fieldInfo;\n                        zoom = zoom || 1;\n                        imageHeight = imageHeight || 1;\n                        imageWidth = imageWidth || 1;\n\n                        let fitImageWidth = width;\n                        let fitImageHeight = height;\n                        if (fit === 'width' || fit === undefined) {\n                            fitImageHeight = width * (imageHeight / imageWidth);\n                        } else if (fit === 'height') {\n                            fitImageWidth = height * (imageWidth / imageHeight);\n                        }\n                        cx = Math.min(Math.max(width - zoom * fitImageWidth, cx), 0);\n                        cy = Math.min(Math.max(height - zoom * fitImageHeight, cy), 0);\n\n                        cardFields[fieldId] = {\n                            ...fieldInfo,\n                            cx,\n                            cy,\n                        };\n                    }\n                }\n                fields[cardId] = cardFields;\n            }\n\n            return {\n                ...state,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_FIELD_ZOOM: {\n            let zoom = action.zoom;\n\n            let fields = { ...state.fields };\n            let fieldId = action.fieldId;\n\n            let cardsToFix = state.applyToAllCards || action.cardId === undefined ? state.cardsAllIds : [action.cardId];\n\n            for (const cardId of cardsToFix) {\n                let cardFields = { ...fields[cardId] };\n                if (fieldId in cardFields) {\n                    let fieldInfo = cardFields[fieldId];\n                    if (fieldInfo.type === 'image') {\n                        let { fit, width, height, imageWidth, imageHeight } = fieldInfo;\n\n                        imageHeight = imageHeight || 1;\n                        imageWidth = imageWidth || 1;\n\n                        let fitImageWidth = width;\n                        let fitImageHeight = height;\n                        if (fit === 'width' || fit === undefined) {\n                            fitImageHeight = width * (imageHeight / imageWidth);\n                        } else if (fit === 'height') {\n                            fitImageWidth = height * (imageWidth / imageHeight);\n                        }\n\n                        let cx = fieldInfo.cx || 0;\n                        let cy = fieldInfo.cy || 0;\n                        let oldZoom = fieldInfo.zoom || 1;\n                        cx = cx + ((oldZoom - zoom) * fitImageWidth) / 2;\n                        cy = cy + ((oldZoom - zoom) * fitImageHeight) / 2;\n\n                        cx = Math.min(Math.max(width - zoom * fitImageWidth, cx), 0);\n                        cy = Math.min(Math.max(height - zoom * fitImageHeight, cy), 0);\n\n                        cardFields[fieldId] = {\n                            ...fieldInfo,\n                            zoom,\n                            cx,\n                            cy,\n                        };\n                    }\n                }\n                fields[cardId] = cardFields;\n            }\n\n            return {\n                ...state,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_FIELD_SIZE: {\n            let width = action.width;\n            let height = action.height;\n            let snappingDistance = state.snappingDistance;\n\n            if (snappingDistance !== 0) {\n                width = Math.round(width / snappingDistance) * snappingDistance;\n                height = Math.round(height / snappingDistance) * snappingDistance;\n            }\n\n            let fields = { ...state.fields };\n            let fieldId = action.fieldId;\n            let cardsToFix = action.cardId ? [action.cardId] : state.cardsAllIds;\n\n            for (const cardId of cardsToFix) {\n                let cardFields = { ...fields[cardId] };\n                if (fieldId in cardFields) {\n                    let fieldInfo = { ...cardFields[fieldId] };\n\n                    let nx = fieldInfo.x + fieldInfo.width / 2;\n                    let ny = fieldInfo.y + fieldInfo.height / 2;\n                    let { rx, ry } = rotateVec(\n                        (width - fieldInfo.width) / 2,\n                        (height - fieldInfo.height) / 2,\n                        fieldInfo.angle,\n                    );\n\n                    nx = nx + rx - width / 2;\n                    ny = ny + ry - height / 2;\n\n                    if (fieldInfo.type === 'image' && fieldInfo.cx && fieldInfo.cy) {\n                        if (fieldInfo.fit === 'width' || fieldInfo.fit === undefined) {\n                            let ratio = width / fieldInfo.width;\n                            fieldInfo.cx *= ratio;\n                            fieldInfo.cy *= ratio;\n                        } else if (fieldInfo.fit === 'height') {\n                            let ratio = height / fieldInfo.height;\n                            fieldInfo.cx *= ratio;\n                            fieldInfo.cy *= ratio;\n                        } else {\n                            fieldInfo.cx *= width / fieldInfo.width;\n                            fieldInfo.cy *= height / fieldInfo.height;\n                        }\n                    }\n\n                    fieldInfo.x = nx;\n                    fieldInfo.y = ny;\n                    fieldInfo.width = width;\n                    fieldInfo.height = height;\n                    cardFields[fieldId] = fieldInfo;\n                }\n                fields[cardId] = cardFields;\n            }\n\n            return {\n                ...state,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_FIELD_ANGLE: {\n            let angle = action.angle;\n\n            let fields = { ...state.fields };\n            let fieldId = action.fieldId;\n\n            let cardsToFix = action.cardId ? [action.cardId] : state.cardsAllIds;\n\n            for (const cardId of cardsToFix) {\n                let cardFields = { ...fields[cardId] };\n                if (fieldId in cardFields) {\n                    cardFields[fieldId] = {\n                        ...cardFields[fieldId],\n                        angle,\n                    };\n                }\n                fields[cardId] = cardFields;\n            }\n\n            return {\n                ...state,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN: {\n            let textSettings = {\n                ...state.textSettings,\n                align: action.align,\n            };\n\n            if (state.activeFieldId) {\n                let align = action.align;\n\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'text') {\n                            cardFields[fieldId] = {\n                                ...fieldInfo,\n                                align,\n                            };\n                        }\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR: {\n            let textSettings = {\n                ...state.textSettings,\n                color: action.color,\n            };\n\n            if (state.activeFieldId) {\n                let color = action.color;\n\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'text') {\n                            cardFields[fieldId] = {\n                                ...fieldInfo,\n                                color,\n                            };\n                        }\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY: {\n            let textSettings = {\n                ...state.textSettings,\n                color: action.fontFamily,\n            };\n\n            if (state.activeFieldId) {\n                let fontFamily = action.fontFamily;\n\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'text') {\n                            cardFields[fieldId] = {\n                                ...fieldInfo,\n                                fontFamily,\n                            };\n                        }\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT: {\n            let textSettings = {\n                ...state.textSettings,\n                color: action.fontVariant,\n            };\n\n            if (state.activeFieldId) {\n                let fontVariant = action.fontVariant;\n\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'text') {\n                            cardFields[fieldId] = {\n                                ...fieldInfo,\n                                fontVariant,\n                            };\n                        }\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT: {\n            let textSettings = {\n                ...state.textSettings,\n                fontFamily: action.fontFamily,\n                fontVariant: action.fontVariant,\n            };\n\n            if (state.activeFieldId) {\n                let fontFamily = action.fontFamily;\n                let fontVariant = action.fontVariant;\n\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'text') {\n                            cardFields[fieldId] = {\n                                ...fieldInfo,\n                                fontFamily,\n                                fontVariant,\n                            };\n                        }\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE: {\n            let textSettings = {\n                ...state.textSettings,\n                fontSize: action.fontSize,\n            };\n\n            if (state.activeFieldId) {\n                let fontSize = action.fontSize;\n\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'text') {\n                            cardFields[fieldId] = {\n                                ...fieldInfo,\n                                fontSize,\n                            };\n                        }\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT: {\n            let textSettings = {\n                ...state.textSettings,\n                lineHeight: action.lineHeight,\n            };\n\n            if (state.activeFieldId) {\n                let lineHeight = action.lineHeight;\n\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'text') {\n                            cardFields[fieldId] = {\n                                ...fieldInfo,\n                                lineHeight,\n                            };\n                        }\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_TEXT: {\n            let cardFields = { ...state.fields[action.cardId] };\n\n            const fieldInfo = cardFields[action.fieldId];\n            const name = fieldInfo.name || fieldInfo.id;\n\n            for (const fieldId in cardFields) {\n                const testFieldInfo = cardFields[fieldId];\n\n                if ((testFieldInfo.name === name || testFieldInfo.id === name) && testFieldInfo.type === 'text') {\n                    cardFields[fieldId] = {\n                        ...testFieldInfo,\n                        value: action.textInfo.value,\n                    };\n                }\n            }\n\n            return {\n                ...state,\n                fields: {\n                    ...state.fields,\n                    [action.cardId]: cardFields,\n                },\n            };\n        }\n        case CARDSET_CHANGE_IMAGE: {\n            let cardsToFix = state.applyToAllCards || action.cardId === undefined ? state.cardsAllIds : [action.cardId];\n\n            let fields = { ...state.fields };\n\n            for (const cardId of cardsToFix) {\n                let cardFields = { ...state.fields[cardId] };\n\n                const fieldInfo = cardFields[action.fieldId];\n                const name = fieldInfo.name || fieldInfo.id;\n\n                for (const fieldId in cardFields) {\n                    const testFieldInfo = cardFields[fieldId];\n\n                    if ((testFieldInfo.name === name || testFieldInfo.id === name) && testFieldInfo.type === 'image') {\n                        cardFields[fieldId] = {\n                            ...testFieldInfo,\n                            url: 'url' in action.imageInfo ? action.imageInfo.url : testFieldInfo.url,\n                            base64: 'base64' in action.imageInfo ? action.imageInfo.base64 : testFieldInfo.base64,\n                            color: 'color' in action.imageInfo ? action.imageInfo.color : testFieldInfo.color,\n                            imageWidth: 'width' in action.imageInfo ? action.imageInfo.width : testFieldInfo.imageWidth,\n                            imageHeight:\n                                'height' in action.imageInfo ? action.imageInfo.height : testFieldInfo.imageHeight,\n                            cx: 0,\n                            cy: 0,\n                            zoom: 0,\n                        };\n                    }\n                }\n\n                fields[cardId] = cardFields;\n            }\n\n            return {\n                ...state,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_IMAGE_BASE64: {\n            let cardFields = { ...state.fields[action.cardId] };\n\n            const fieldInfo = cardFields[action.fieldId];\n            const name = fieldInfo.name || fieldInfo.id;\n\n            for (const fieldId in cardFields) {\n                const testFieldInfo = cardFields[fieldId];\n\n                if ((testFieldInfo.name === name || testFieldInfo.id === name) && testFieldInfo.type === 'image') {\n                    cardFields[fieldId] = {\n                        ...testFieldInfo,\n                        base64: action.base64,\n                        cx: 0,\n                        cy: 0,\n                        zoom: 0,\n                    };\n                }\n            }\n\n            return {\n                ...state,\n                fields: {\n                    ...state.fields,\n                    [action.cardId]: cardFields,\n                },\n            };\n        }\n        case CARDSET_SET_ACTIVE_CARD_AND_FIELD: {\n            let textSettings = { ...state.textSettings };\n            let activeSidebar = state.activeSidebar;\n\n            if (activeSidebar !== SidebarState.Measurements && action.cardId !== undefined) {\n                activeSidebar = SidebarState.Details;\n            }\n\n            if (action.cardId !== undefined && action.fieldId !== undefined) {\n                const fieldInfo = state.fields[action.cardId][action.fieldId];\n\n                if (fieldInfo.type === 'text') {\n                    textSettings.align = fieldInfo.align;\n                    textSettings.color = fieldInfo.color;\n                    textSettings.fontFamily = fieldInfo.fontFamily;\n                    textSettings.fontVariant = fieldInfo.fontVariant;\n                    textSettings.fontSize = fieldInfo.fontSize;\n                    textSettings.lineHeight = fieldInfo.lineHeight;\n\n                    if (activeSidebar !== SidebarState.Measurements) {\n                        activeSidebar = SidebarState.Text;\n                    }\n                } else {\n                    if (activeSidebar !== SidebarState.Measurements) {\n                        activeSidebar = SidebarState.Image;\n                    }\n                }\n            }\n\n            return {\n                ...state,\n                activeCardId: action.cardId,\n                isBackActive: action.isBackActive,\n                activeFieldId: action.fieldId,\n                textSettings,\n                activeSidebar,\n            };\n        }\n\n        case CARDSET_CHANGE_APPLY_TO_ALLCARDS: {\n            return {\n                ...state,\n                applyToAllCards: action.applyToAllCards,\n            };\n        }\n\n        case CARDSET_SET_SIDEBAR_STATE: {\n            return {\n                ...state,\n                activeSidebar: action.sidebarState,\n            };\n        }\n        case CARDSET_SET_ZOOM: {\n            return {\n                ...state,\n                zoom: action.zoom,\n            };\n        }\n        case CARDSET_IMPORT_DATA: {\n            return {\n                ...state,\n                ...action.data,\n            };\n        }\n        default:\n            return state;\n    }\n}\n\nexport function images(state: ImageState = DefaultImageState, action: ImageListAction): ImageState {\n    switch (action.type) {\n        case IMAGE_LIST_REQUEST:\n            return Object.assign({}, state, {\n                filter: action.filter,\n            });\n        case IMAGE_LIST_SUCCESS:\n            return Object.assign({}, state, {\n                images: action.images,\n            });\n        default:\n            return state;\n    }\n}\n\nconst undoableCardset = undoable(cardset, {\n    ignoreInitialState: true,\n    undoType: CARDSET_UNDO,\n    redoType: CARDSET_REDO,\n    groupBy: (action: Action) => {\n        if (\n            action.type === 'CARDSET_CHANGE_FIELD_SIZE' ||\n            action.type === 'CARDSET_CHANGE_FIELD_POSITION' ||\n            action.type === 'CARDSET_CHANGE_FIELD_ANGLE' ||\n            action.type === 'CARDSET_CHANGE_FIELD_ZOOM' ||\n            action.type === 'CARDSET_CHANGE_FIELD_PAN'\n        ) {\n            return action.group;\n        }\n        return null;\n    },\n    filter: (action: Action) => {\n        if (!action.type.startsWith('CARDSET_')) {\n            return false;\n        }\n\n        if (action.type === CARDSET_SELECT_REQUEST || action.type === CARDSET_SET_ACTIVE_CARD_AND_FIELD) {\n            return false;\n        }\n        return true;\n    },\n});\n\nconst reducers = combineReducers({\n    message,\n    auth,\n    signup,\n    games,\n    cardsets,\n    cardset: undoableCardset,\n    images,\n});\n\nexport default reducers;\n","import { Ghost, Browser } from 'react-kawaii';\nimport React, { Component } from 'react';\n\nexport enum Character {\n    Ghost,\n    Browser,\n}\ninterface Props {\n    character: Character;\n    mood?: string;\n}\n\nexport default class KawaiiMessage extends Component<Props> {\n    render() {\n        const { character, mood } = this.props;\n\n        return (\n            <div\n                style={{\n                    marginTop: '1em',\n                    marginBottom: '1em',\n                    padding: '1em',\n                    borderRadius: '1em',\n                    backgroundColor: 'var(--color-2)',\n                    display: 'grid',\n                    grid: 'auto-flow / minmax(120px, auto) 1fr',\n                }}\n            >\n                {character === Character.Ghost && <Ghost size={120} mood={mood || 'blissful'} color=\"#faebef\" />}\n                {character === Character.Browser && <Browser size={120} mood={mood || 'blissful'} color=\"#faebef\" />}\n                <div style={{ marginLeft: '1em' }}>{this.props.children}</div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nexport default class AboutPage extends Component {\n    render() {\n        return (\n            <div>\n                <h2>About</h2>\n                <p>\n                    \"Card-a-mon\" is card game development tool. At the moment it is project of single person (me) with a\n                    vision. My aim is to create affordable and practical tool to develop card games from A (prototyping)\n                    to Z (printing). If you have ideas, suggestions, proposals, comments and etc. then you can contact\n                    me by e-mail <a href=\"mailto:dalius@ffff.lt\">dalius@ffff.lt</a>.\n                </p>\n                <h2>Credits</h2>\n                This project is available because of number amazing open source projects. Some of them:\n                <ul>\n                    <li>\n                        <a href=\"https://reactjs.org/\">React</a> and all the ecosystem around it.\n                    </li>\n                    <li>\n                        <a href=\"https://fonts.google.com/\">Google Fonts</a>\n                    </li>\n                    <li>\n                        <a href=\"https://github.com/game-icons/icons\">Game icons</a>\n                    </li>\n                    <li>\n                        <a href=\"http://pdfkit.org/\">PDFKit</a>\n                    </li>\n                </ul>\n                <p>... and many more.</p>\n            </div>\n        );\n    }\n}\n","import { connect } from 'react-redux';\nimport React from 'react';\nimport shortid from 'shortid';\n\nimport { Dispatch } from '../actions';\nimport { State } from '../reducers';\nimport panIcon from './pan.svg';\nimport zoomIcon from './zoom.svg';\nimport resizeIcon from './resize.svg';\nimport rotateIcon from './rotate.svg';\nimport style from './FieldController.module.css';\nimport { rotateVec } from '../utils';\n\ninterface OwnProps {\n    cardId: string;\n    fieldId: string;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    angle: number;\n    zoom?: number;\n    cx?: number;\n    cy?: number;\n    children: React.ReactNode;\n    onDrag: (x: number, y: number, cardOnly: boolean, group: string) => void;\n    onResize: (width: number, height: number, cardOnly: boolean, group: string) => void;\n    onRotate: (angle: number, cardOnly: boolean, group: string) => void;\n    onZoom?: (zoom: number, cardOnly: boolean, group: string) => void;\n    onPan?: (cx: number, cy: number, cardOnly: boolean, group: string) => void;\n    cardWidth: number;\n    cardHeight: number;\n    ppmm: number;\n}\n\ninterface StateProps {\n    isActive: boolean;\n    isActiveField: boolean;\n    isLocked: boolean;\n    isUnclickable: boolean;\n    snappingDistance: number;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nexport interface LocalState {\n    startX: number;\n    startY: number;\n    originalAngle: number;\n    activatedUsingTouch: boolean;\n    group: string;\n}\n\nclass FieldController extends React.Component<Props, LocalState> {\n    cDiv: React.RefObject<HTMLDivElement>;\n    panDiv: React.RefObject<HTMLImageElement>;\n    zoomDiv: React.RefObject<HTMLImageElement>;\n    resizeDiv: React.RefObject<HTMLImageElement>;\n    rotateDiv: React.RefObject<HTMLImageElement>;\n    originalBodyCursor: string | null;\n\n    constructor(props: Props) {\n        super(props);\n        this.cDiv = React.createRef();\n        this.panDiv = React.createRef();\n        this.zoomDiv = React.createRef();\n        this.resizeDiv = React.createRef();\n        this.rotateDiv = React.createRef();\n        this.originalBodyCursor = null;\n        this.state = {\n            activatedUsingTouch: false,\n            startX: 0,\n            startY: 0,\n            originalAngle: 0,\n            group: '',\n        };\n    }\n\n    componentDidMount() {\n        if (this.cDiv.current === null) return;\n        if (this.panDiv.current === null) return;\n        if (this.zoomDiv.current === null) return;\n        if (this.resizeDiv.current === null) return;\n        if (this.rotateDiv.current === null) return;\n\n        this.originalBodyCursor = document.body.style.cursor;\n\n        this.cDiv.current.addEventListener('mousedown', this.handleMouseDown);\n        this.cDiv.current.addEventListener('touchstart', this.handleTouchStart);\n        this.panDiv.current.addEventListener('mousedown', this.handlePanMouseDown);\n        this.panDiv.current.addEventListener('touchstart', this.handlePanTouchStart);\n        this.zoomDiv.current.addEventListener('mousedown', this.handleZoomMouseDown);\n        this.zoomDiv.current.addEventListener('touchstart', this.handleZoomTouchStart);\n        this.resizeDiv.current.addEventListener('mousedown', this.handleResizeMouseDown);\n        this.resizeDiv.current.addEventListener('touchstart', this.handleResizeTouchStart);\n        this.rotateDiv.current.addEventListener('mousedown', this.handleRotateMouseDown);\n        this.rotateDiv.current.addEventListener('touchstart', this.handleRotateTouchStart);\n    }\n\n    handleBrowserDragStart = (event: React.DragEvent) => {\n        event.stopPropagation();\n        event.preventDefault();\n    };\n\n    // Dragging handling\n\n    handleMouseDown = (event: MouseEvent) => {\n        this.handleDragStart(event);\n\n        document.addEventListener('mousemove', this.handleMouseMove);\n        document.addEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleTouchStart = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleDragStart(event.changedTouches[0]);\n\n        document.addEventListener('touchmove', this.handleTouchMove, { passive: false });\n        document.addEventListener('touchend', this.handleTouchEnd, { passive: false });\n    };\n\n    handleDragStart = (co: MouseEvent | Touch) => {\n        if (this.cDiv.current === null) return;\n\n        this.cDiv.current.style.cursor = 'grabbing';\n\n        this.setState({ startX: co.clientX, startY: co.clientY, group: shortid.generate() });\n    };\n\n    handleMouseMove = (event: MouseEvent) => {\n        this.handleDragMove(event, event.ctrlKey);\n    };\n\n    handleTouchMove = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        event.preventDefault();\n        this.handleDragMove(event.changedTouches[0], event.ctrlKey);\n    };\n\n    handleDragMove = (co: MouseEvent | Touch, disableSnapping: boolean) => {\n        const { isLocked, x, y } = this.props;\n\n        if (isLocked) return;\n\n        const { ppmm, snappingDistance } = this.props;\n\n        let nx = x + co.clientX - this.state.startX;\n        let ny = y + co.clientY - this.state.startY;\n\n        if (!disableSnapping && snappingDistance !== 0) {\n            nx = Math.round(nx / ppmm / snappingDistance) * snappingDistance * ppmm;\n            ny = Math.round(ny / ppmm / snappingDistance) * snappingDistance * ppmm;\n        }\n\n        this.setState({ startX: co.clientX, startY: co.clientY });\n        this.props.onDrag(nx, ny, true, this.state.group);\n    };\n\n    handleMouseUp = (event: MouseEvent) => {\n        this.handleComplete(event, false);\n\n        document.removeEventListener('mousemove', this.handleMouseMove);\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleTouchEnd = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleComplete(event, true);\n\n        document.removeEventListener('touchmove', this.handleTouchMove);\n        document.removeEventListener('touchend', this.handleTouchEnd);\n    };\n\n    handleComplete = (event: MouseEvent | TouchEvent, isTouchEvent: boolean) => {\n        const { isLocked, x, y } = this.props;\n\n        if (this.cDiv.current === null) return;\n\n        if (!isLocked) {\n            this.props.onDrag(x, y, false, this.state.group);\n        }\n        this.setState({ activatedUsingTouch: isTouchEvent });\n\n        this.cDiv.current.style.cursor = 'grab';\n    };\n\n    // Pan handling\n\n    handlePanMouseDown = (event: MouseEvent) => {\n        this.handlePanStart(event);\n\n        document.addEventListener('mousemove', this.handlePanMouseMove);\n        document.addEventListener('mouseup', this.handlePanMouseUp);\n        event.stopPropagation();\n    };\n\n    handlePanTouchStart = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handlePanStart(event.changedTouches[0]);\n\n        document.addEventListener('touchmove', this.handlePanTouchMove, { passive: false });\n        document.addEventListener('touchend', this.handlePanTouchEnd, { passive: false });\n        event.stopPropagation();\n        event.preventDefault();\n    };\n\n    handlePanStart = (co: MouseEvent | Touch) => {\n        document.body.style.cursor = `url(${panIcon}), auto`;\n\n        this.setState({ startX: co.clientX, startY: co.clientY, group: shortid.generate() });\n    };\n\n    handlePanMouseMove = (event: MouseEvent) => {\n        this.handlePanMove(event);\n        event.preventDefault();\n    };\n\n    handlePanTouchMove = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handlePanMove(event.changedTouches[0]);\n        event.preventDefault();\n    };\n\n    handlePanMove = (co: MouseEvent | Touch) => {\n        const { cx, cy, angle, onPan } = this.props;\n        if (!onPan || cx === undefined || cy === undefined) return;\n\n        let dx = co.clientX - this.state.startX;\n        let dy = co.clientY - this.state.startY;\n        const { rx, ry } = rotateVec(dx, dy, -angle);\n\n        const newCx = cx + rx;\n        const newCy = cy + ry;\n\n        this.setState({ startX: co.clientX, startY: co.clientY });\n\n        onPan(newCx, newCy, true, this.state.group);\n    };\n\n    handlePanMouseUp = (event: MouseEvent) => {\n        this.handlePanComplete(event);\n\n        document.removeEventListener('mousemove', this.handlePanMouseMove);\n        document.removeEventListener('mouseup', this.handlePanMouseUp);\n    };\n\n    handlePanTouchEnd = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handlePanComplete(event);\n\n        document.removeEventListener('touchmove', this.handlePanTouchMove);\n        document.removeEventListener('touchend', this.handlePanTouchEnd);\n    };\n\n    handlePanComplete = (event: MouseEvent | TouchEvent) => {\n        const { cx, cy, onPan } = this.props;\n        if (onPan && cx !== undefined && cy !== undefined) {\n            onPan(cx, cy, true, this.state.group);\n        }\n\n        document.body.style.cursor = this.originalBodyCursor;\n        event.preventDefault();\n    };\n\n    // Zoom handling\n\n    handleZoomMouseDown = (event: MouseEvent) => {\n        this.handleZoomStart(event);\n\n        document.addEventListener('mousemove', this.handleZoomMouseMove);\n        document.addEventListener('mouseup', this.handleZoomMouseUp);\n        event.stopPropagation();\n    };\n\n    handleZoomTouchStart = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleZoomStart(event.changedTouches[0]);\n\n        document.addEventListener('touchmove', this.handleZoomTouchMove, { passive: false });\n        document.addEventListener('touchend', this.handleZoomTouchEnd, { passive: false });\n        event.stopPropagation();\n        event.preventDefault();\n    };\n\n    handleZoomStart = (co: { clientX: number; clientY: number }) => {\n        document.body.style.cursor = `url(${zoomIcon}), auto`;\n\n        this.setState({ startX: co.clientX, startY: co.clientY, group: shortid.generate() });\n    };\n\n    handleZoomMouseMove = (event: MouseEvent) => {\n        this.handleZoomMove(event);\n        event.preventDefault();\n    };\n\n    handleZoomTouchMove = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleZoomMove(event.changedTouches[0]);\n        event.preventDefault();\n    };\n\n    handleZoomMove = (co: MouseEvent | Touch) => {\n        const { zoom, onZoom } = this.props;\n        if (!onZoom || zoom === undefined) return;\n\n        const dx = co.clientX - this.state.startX;\n        const dy = co.clientY - this.state.startY;\n\n        let z = Math.abs(dx) > Math.abs(dy) ? dx : dy;\n\n        let newZoom = Math.max(zoom + z / 30, 1);\n        this.setState({ startX: co.clientX, startY: co.clientY });\n\n        onZoom(newZoom, true, this.state.group);\n    };\n\n    handleZoomMouseUp = (event: MouseEvent) => {\n        this.handleZoomComplete(event);\n\n        document.removeEventListener('mousemove', this.handleZoomMouseMove);\n        document.removeEventListener('mouseup', this.handleZoomMouseUp);\n    };\n\n    handleZoomTouchEnd = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleZoomComplete(event);\n\n        document.removeEventListener('touchmove', this.handleZoomTouchMove);\n        document.removeEventListener('touchend', this.handleZoomTouchEnd);\n    };\n\n    handleZoomComplete = (event: Event) => {\n        document.body.style.cursor = this.originalBodyCursor;\n        event.preventDefault();\n    };\n\n    // Resize handling\n\n    handleResizeMouseDown = (event: MouseEvent) => {\n        this.handleResizeStart(event);\n\n        document.addEventListener('mousemove', this.handleResizeMouseMove);\n        document.addEventListener('mouseup', this.handleResizeMouseUp);\n        event.stopPropagation();\n    };\n\n    handleResizeTouchStart = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleResizeStart(event.changedTouches[0]);\n\n        document.addEventListener('touchmove', this.handleResizeTouchMove, { passive: false });\n        document.addEventListener('touchend', this.handleResizeTouchEnd, { passive: false });\n        event.stopPropagation();\n        event.preventDefault();\n    };\n\n    handleResizeStart = (co: MouseEvent | Touch) => {\n        const { isLocked } = this.props;\n\n        if (isLocked) return;\n\n        document.body.style.cursor = `url(${resizeIcon}), auto`;\n\n        this.setState({ startX: co.clientX, startY: co.clientY, group: shortid.generate() });\n    };\n\n    handleResizeMouseMove = (event: MouseEvent) => {\n        this.handleResizeMove(event, event.ctrlKey);\n        event.preventDefault();\n    };\n\n    handleResizeTouchMove = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleResizeMove(event.changedTouches[0], event.ctrlKey);\n        event.preventDefault();\n    };\n\n    handleResizeMove = (co: { clientX: number; clientY: number }, disableSnapping: boolean) => {\n        const { isLocked, ppmm, width, height, angle, snappingDistance, onResize } = this.props;\n\n        if (isLocked) return;\n\n        const dx = co.clientX - this.state.startX;\n        const dy = co.clientY - this.state.startY;\n\n        const { rx, ry } = rotateVec(dx, dy, -angle);\n\n        let newWidth = width + rx;\n        let newHeight = height + ry;\n\n        if (!disableSnapping && snappingDistance !== 0) {\n            newWidth = Math.round(newWidth / ppmm / snappingDistance) * snappingDistance * ppmm;\n            newHeight = Math.round(newHeight / ppmm / snappingDistance) * snappingDistance * ppmm;\n        }\n\n        this.setState({ startX: co.clientX, startY: co.clientY });\n\n        onResize(newWidth, newHeight, true, this.state.group);\n    };\n\n    handleResizeMouseUp = (event: MouseEvent) => {\n        this.handleResizeComplete(event);\n\n        document.removeEventListener('mousemove', this.handleResizeMouseMove);\n        document.removeEventListener('mouseup', this.handleResizeMouseUp);\n    };\n\n    handleResizeTouchEnd = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleResizeComplete(event);\n\n        document.removeEventListener('touchmove', this.handleResizeTouchMove);\n        document.removeEventListener('touchend', this.handleResizeTouchEnd);\n    };\n\n    handleResizeComplete = (event: Event) => {\n        const { isLocked } = this.props;\n\n        if (!isLocked) {\n            const { width, height, onResize } = this.props;\n            onResize(width, height, false, this.state.group);\n        }\n\n        document.body.style.cursor = this.originalBodyCursor;\n\n        event.preventDefault();\n    };\n\n    // Rotation handling\n\n    handleRotateMouseDown = (event: MouseEvent) => {\n        this.handleRotateStart(event);\n\n        document.addEventListener('mousemove', this.handleRotateMouseMove);\n        document.addEventListener('mouseup', this.handleRotateMouseUp);\n        event.stopPropagation();\n    };\n\n    handleRotateTouchStart = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleRotateStart(event.changedTouches[0]);\n\n        document.addEventListener('touchmove', this.handleRotateTouchMove, { passive: false });\n        document.addEventListener('touchend', this.handleRotateTouchEnd, { passive: false });\n        event.stopPropagation();\n        event.preventDefault();\n    };\n\n    handleRotateStart = (co: { clientX: number; clientY: number }) => {\n        const { isLocked, angle } = this.props;\n\n        if (isLocked || this.cDiv.current === null) return;\n\n        document.body.style.cursor = `url(${rotateIcon}), auto`;\n\n        const rect = this.cDiv.current.getBoundingClientRect();\n        let startX = rect.left + this.cDiv.current.clientWidth / 2;\n        let startY = rect.top + this.cDiv.current.clientHeight / 2;\n\n        let originalAngle = angle + Math.atan2(startX - co.clientX, startY - co.clientY);\n\n        this.setState({ startX, startY, originalAngle, group: shortid.generate() });\n    };\n\n    handleRotateMouseMove = (event: MouseEvent) => {\n        this.handleRotateMove(event, event.ctrlKey);\n        event.preventDefault();\n    };\n\n    handleRotateTouchMove = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleRotateMove(event.changedTouches[0], event.ctrlKey);\n        event.preventDefault();\n    };\n\n    handleRotateMove = (co: MouseEvent | Touch, disableSnapping: boolean) => {\n        const { isLocked, onRotate } = this.props;\n\n        if (isLocked) return;\n\n        const { originalAngle, startX, startY } = this.state;\n\n        let curAngle = Math.atan2(startX - co.clientX, startY - co.clientY);\n        let newAngle = originalAngle - curAngle;\n\n        if (!disableSnapping) {\n            newAngle = ((Math.round(((newAngle / Math.PI) * 180) / 5) * 5) / 180) * Math.PI;\n        }\n\n        onRotate(newAngle, true, this.state.group);\n    };\n\n    handleRotateMouseUp = (event: MouseEvent) => {\n        this.handleRotateComplete(event);\n\n        document.removeEventListener('mousemove', this.handleRotateMouseMove);\n        document.removeEventListener('mouseup', this.handleRotateMouseUp);\n    };\n\n    handleRotateTouchEnd = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleRotateComplete(event);\n\n        document.removeEventListener('touchmove', this.handleRotateTouchMove);\n        document.removeEventListener('touchend', this.handleRotateTouchEnd);\n    };\n\n    handleRotateComplete = (event: Event) => {\n        const { isLocked } = this.props;\n\n        if (!isLocked) {\n            const { angle } = this.props;\n            this.props.onRotate(angle, false, this.state.group);\n        }\n\n        document.body.style.cursor = this.originalBodyCursor;\n\n        event.preventDefault();\n    };\n\n    // Rendering\n\n    render() {\n        const {\n            x,\n            y,\n            width,\n            height,\n            angle,\n            zoom,\n            cx,\n            children,\n            isActive,\n            isActiveField,\n            isLocked,\n            isUnclickable,\n        } = this.props;\n\n        return (\n            <div\n                ref={this.cDiv}\n                onDragStart={this.handleBrowserDragStart}\n                className={`${style.fieldcontroller} ${isActiveField ? style.fieldcontrolleractivefield : ''} ${\n                    isActive ? style.fieldcontrolleractive : ''\n                } ${isActive && this.state.activatedUsingTouch ? style.touchactivated : ''} `}\n                style={{\n                    position: 'absolute',\n                    left: x,\n                    top: y,\n                    width: width,\n                    height: height,\n                    cursor: 'grab',\n                    transform: `rotate(${angle}rad)`,\n                    pointerEvents: isUnclickable ? 'none' : 'initial',\n                }}\n            >\n                {children}\n                <img\n                    src={panIcon}\n                    alt=\"pan\"\n                    ref={this.panDiv}\n                    className={style.controller}\n                    style={{\n                        position: 'absolute',\n                        left: 0,\n                        top: 0,\n                        cursor: `url(${panIcon}), auto`,\n                        display: cx !== undefined && zoom !== undefined ? 'initial' : 'none',\n                    }}\n                />\n\n                <img\n                    src={zoomIcon}\n                    alt=\"zoom\"\n                    ref={this.zoomDiv}\n                    className={style.controller}\n                    style={{\n                        position: 'absolute',\n                        right: 0,\n                        top: 0,\n                        cursor: `url(${zoomIcon}), auto`,\n                        display: zoom !== undefined ? 'initial' : 'none',\n                    }}\n                />\n\n                <img\n                    src={resizeIcon}\n                    alt=\"resize\"\n                    ref={this.resizeDiv}\n                    className={style.controller}\n                    style={{\n                        position: 'absolute',\n                        right: 0,\n                        bottom: 0,\n                        cursor: `url(${resizeIcon}), auto`,\n                        display: isLocked ? 'none' : 'initial',\n                    }}\n                />\n                <img\n                    src={rotateIcon}\n                    alt=\"rotate\"\n                    ref={this.rotateDiv}\n                    className={style.controller}\n                    style={{\n                        position: 'absolute',\n                        left: 0,\n                        bottom: 0,\n                        cursor: `url(${rotateIcon}), auto`,\n                        display: isLocked ? 'none' : 'initial',\n                    }}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    const isActiveField = props.fieldId === state.cardset.present.activeFieldId;\n    const isActive =\n        props.cardId === state.cardset.present.activeCardId && props.fieldId === state.cardset.present.activeFieldId;\n    const fieldInfo = state.cardset.present.fields[props.cardId][props.fieldId];\n    const isLocked = fieldInfo.locked === true;\n    const isUnclickable = fieldInfo.unclickable === true;\n\n    return {\n        isActive,\n        isActiveField,\n        isLocked,\n        isUnclickable,\n        snappingDistance: state.cardset.present.snappingDistance,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(FieldController);\n","import { connect } from 'react-redux';\nimport React, { PureComponent } from 'react';\n\nimport {\n    Dispatch,\n    cardSetActiveCardAndField,\n    cardSetChangeImage,\n    cardSetChangeFieldPosition,\n    cardSetChangeFieldAngle,\n    cardSetChangeFieldPan,\n    cardSetChangeFieldZoom,\n    cardSetChangeFieldSize,\n} from '../actions';\nimport { ImageInfo, ImageFieldInfo } from '../types';\nimport { State } from '../reducers';\nimport FieldController from './FieldController';\nimport emptyImageImage from './image.svg';\nimport style from './ImageField.module.css';\nimport { calculateImageDimensions } from '../utils';\n\ninterface OwnProps {\n    cardId: string;\n    isOnBack: boolean;\n    ppmm: number;\n    imageFieldInfo: ImageFieldInfo;\n    cardWidth: number;\n    cardHeight: number;\n}\n\ninterface StateProps {\n    imageUrl?: string;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\ninterface LocalState {\n    dragIsOver: boolean;\n    wasMoved: boolean;\n    x: number;\n    y: number;\n}\n\nclass ImageField extends PureComponent<Props, LocalState> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            dragIsOver: false,\n            wasMoved: false,\n            x: 0,\n            y: 0,\n        };\n    }\n\n    handleDrag = (x: number, y: number, cardOnly: boolean, group: string) => {\n        const { dispatch, cardId, imageFieldInfo, ppmm } = this.props;\n        dispatch(\n            cardSetChangeFieldPosition(cardOnly ? cardId : undefined, imageFieldInfo.id, x / ppmm, y / ppmm, group),\n        );\n    };\n\n    handlePan = (cx: number, cy: number, cardOnly: boolean, group: string) => {\n        const { dispatch, cardId, imageFieldInfo, ppmm } = this.props;\n        dispatch(cardSetChangeFieldPan(cardOnly ? cardId : undefined, imageFieldInfo.id, cx / ppmm, cy / ppmm, group));\n    };\n\n    handleZoom = (zoom: number, cardOnly: boolean, group: string) => {\n        const { dispatch, cardId, imageFieldInfo } = this.props;\n        dispatch(cardSetChangeFieldZoom(cardOnly ? cardId : undefined, imageFieldInfo.id, zoom, group));\n    };\n\n    handleResize = (width: number, height: number, cardOnly: boolean, group: string) => {\n        const { dispatch, imageFieldInfo, cardId, ppmm } = this.props;\n        dispatch(\n            cardSetChangeFieldSize(\n                cardOnly ? cardId : undefined,\n                imageFieldInfo.id,\n                width / ppmm,\n                height / ppmm,\n                group,\n            ),\n        );\n    };\n\n    handleRotate = (angle: number, cardOnly: boolean, group: string) => {\n        const { dispatch, cardId, imageFieldInfo } = this.props;\n        dispatch(cardSetChangeFieldAngle(cardOnly ? cardId : undefined, imageFieldInfo.id, angle, group));\n    };\n\n    handleMouseDown = () => {\n        this.setState({ wasMoved: false });\n    };\n\n    handleTouchStart = (event: React.TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.setState({ wasMoved: false, x: event.changedTouches[0].clientX, y: event.changedTouches[0].clientY });\n    };\n\n    handleMouseMove = () => {\n        this.setState({ wasMoved: true });\n    };\n\n    handleTouchMove = (event: React.TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        const { x, y } = this.state;\n        if (Math.abs(event.changedTouches[0].clientX - x) > 3 || Math.abs(event.changedTouches[0].clientY - y) > 3) {\n            this.setState({ wasMoved: true });\n        }\n    };\n\n    handleMouseUp = () => {\n        this.handleComplete();\n    };\n\n    handleTouchEnd = (event: React.TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleComplete();\n    };\n\n    handleComplete = () => {\n        const { dispatch, cardId, isOnBack, imageFieldInfo } = this.props;\n        if (!this.state.wasMoved) {\n            dispatch(cardSetActiveCardAndField(cardId, isOnBack, imageFieldInfo.id));\n        }\n    };\n\n    handleDragOver = (event: React.DragEvent<HTMLDivElement>) => {\n        this.setState({ dragIsOver: true });\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDragLeave = (event: React.DragEvent<HTMLDivElement>) => {\n        this.setState({ dragIsOver: false });\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = (event: React.DragEvent<HTMLDivElement>) => {\n        this.setState({ dragIsOver: false });\n        event.preventDefault();\n        event.stopPropagation();\n\n        const url = event.dataTransfer.getData('URL');\n        const imagefilesPos = url.indexOf('/api/imagefiles/');\n\n        if (imagefilesPos !== -1) {\n            const { cardId, imageFieldInfo, dispatch } = this.props;\n            let img = new Image();\n\n            img.addEventListener('load', function() {\n                const ii: ImageInfo = {\n                    url: url.substr(imagefilesPos),\n                    width: this.naturalWidth,\n                    height: this.naturalHeight,\n                };\n                dispatch(cardSetChangeImage(cardId, imageFieldInfo.id, ii));\n            });\n            img.src = url;\n        }\n    };\n\n    render() {\n        const { imageFieldInfo, imageUrl, ppmm, cardWidth, cardHeight } = this.props;\n\n        let dim = calculateImageDimensions(imageFieldInfo);\n        let calculatedImageWidth = dim.width * ppmm;\n        let calculatedImageHeight = dim.height * ppmm;\n\n        return (\n            <FieldController\n                cardId={this.props.cardId}\n                fieldId={imageFieldInfo.id}\n                x={imageFieldInfo.x * ppmm}\n                y={imageFieldInfo.y * ppmm}\n                width={imageFieldInfo.width * ppmm}\n                height={imageFieldInfo.height * ppmm}\n                cx={(imageFieldInfo.cx || 0) * ppmm}\n                cy={(imageFieldInfo.cy || 0) * ppmm}\n                zoom={imageFieldInfo.zoom || 1}\n                angle={imageFieldInfo.angle}\n                onDrag={this.handleDrag}\n                onPan={this.handlePan}\n                onZoom={this.handleZoom}\n                onResize={this.handleResize}\n                onRotate={this.handleRotate}\n                cardWidth={cardWidth}\n                cardHeight={cardHeight}\n                ppmm={ppmm}\n            >\n                <div\n                    style={{\n                        width: '100%',\n                        height: '100%',\n                        position: 'relative',\n                        overflow: imageFieldInfo.crop ? 'hidden' : 'visible',\n                    }}\n                    className={this.state.dragIsOver ? style.over : ''}\n                    onMouseDown={this.handleMouseDown}\n                    onTouchStart={this.handleTouchStart}\n                    onMouseMove={this.handleMouseMove}\n                    onTouchMove={this.handleTouchMove}\n                    onMouseUp={this.handleMouseUp}\n                    onTouchEnd={this.handleTouchEnd}\n                    onDragOver={this.handleDragOver}\n                    onDragLeave={this.handleDragLeave}\n                    onDrop={this.handleDrop}\n                >\n                    <img\n                        style={{\n                            position: 'absolute',\n                            opacity: imageUrl && imageUrl.length > 0 ? 1 : 0.5,\n                            left: (imageFieldInfo.cx || 0) * ppmm,\n                            top: (imageFieldInfo.cy || 0) * ppmm,\n                            width: calculatedImageWidth,\n                            height: calculatedImageHeight,\n                        }}\n                        src={imageUrl || emptyImageImage}\n                        alt=\"\"\n                    />\n                </div>\n            </FieldController>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    let imageUrl: string | undefined = '';\n    if (props.imageFieldInfo && props.imageFieldInfo.type === 'image') {\n        if (props.imageFieldInfo.base64) {\n            imageUrl = 'data:image/svg+xml;base64,' + props.imageFieldInfo.base64;\n        } else {\n            imageUrl = props.imageFieldInfo && props.imageFieldInfo.url;\n        }\n    }\n\n    return {\n        imageUrl,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(ImageField);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DEFAULT_FONT, DEFAULT_FONT_SIZE, DEFAULT_LINE_HEIGHT } from '../constants';\nimport { Dispatch, cardSetActiveCardAndField, cardSetChangeText } from '../actions';\nimport { State } from '../reducers';\nimport { TextInfo } from '../types';\nimport style from './ContentEditable.module.css';\n\ninterface OwnProps {\n    cardId: string;\n    isOnBack: boolean;\n    fieldId: string;\n    align: string;\n    color: string;\n    fontFamily: string;\n    fontVariant: string;\n    fontSize: number;\n    lineHeight: number;\n}\n\ninterface StateProps {\n    isActive: boolean;\n    textValue: string;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass ContentEditable extends Component<Props> {\n    editDiv: React.RefObject<HTMLDivElement>;\n    currentText: string;\n    currentAlign: string;\n    currentColor: string;\n    currentFontFamily: string;\n    currentFontVariant: string;\n    currentFontSize: number;\n    currentLineHeight: number;\n    timeout: NodeJS.Timeout | null;\n    wasMoved: boolean;\n    x: number;\n    y: number;\n\n    constructor(props: Props) {\n        super(props);\n        this.editDiv = React.createRef();\n        this.currentText = '';\n        this.currentAlign = '';\n        this.currentColor = '';\n        this.currentFontFamily = '';\n        this.currentFontVariant = '';\n        this.currentFontSize = DEFAULT_FONT_SIZE;\n        this.currentLineHeight = DEFAULT_LINE_HEIGHT;\n        this.timeout = null;\n        this.wasMoved = false;\n        this.x = 0;\n        this.y = 0;\n    }\n\n    componentDidMount() {\n        const { isActive } = this.props;\n\n        if (!this.editDiv.current) return;\n\n        this.editDiv.current.addEventListener('mousedown', this.handleMouseDown);\n        this.editDiv.current.addEventListener('touchstart', this.handleTouchStart);\n        this.editDiv.current.addEventListener('mousemove', this.handleMouseMove);\n        this.editDiv.current.addEventListener('touchmove', this.handleTouchMove, { passive: false });\n        this.editDiv.current.addEventListener('mouseup', this.handleMouseUp);\n        this.editDiv.current.addEventListener('touchend', this.handleTouchEnd, { passive: false });\n\n        if (isActive) {\n            this.editDiv.current.focus();\n        }\n    }\n\n    shouldComponentUpdate(nextProps: Props) {\n        const shouldUpdate =\n            nextProps.textValue !== this.currentText ||\n            nextProps.align !== this.currentAlign ||\n            nextProps.color !== this.currentColor ||\n            nextProps.fontFamily !== this.currentFontFamily ||\n            nextProps.fontVariant !== this.currentFontVariant ||\n            nextProps.fontSize !== this.currentFontSize ||\n            nextProps.lineHeight !== this.currentLineHeight ||\n            this.props.isActive !== nextProps.isActive;\n\n        return shouldUpdate;\n    }\n\n    componentDidUpdate() {\n        const { textValue, align, color, fontFamily, fontVariant, fontSize, lineHeight } = this.props;\n        this.currentText = textValue;\n        this.currentAlign = align;\n        this.currentColor = color;\n        this.currentFontFamily = fontFamily;\n        this.currentFontVariant = fontVariant;\n        this.currentFontSize = fontSize;\n        this.currentLineHeight = lineHeight;\n    }\n\n    handleMouseDown = (event: MouseEvent) => {\n        this.handleStart(event);\n    };\n\n    handleTouchStart = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.x = event.changedTouches[0].clientX;\n        this.y = event.changedTouches[0].clientY;\n        this.handleStart(event);\n    };\n\n    handleStart = (event: Event) => {\n        const { isActive } = this.props;\n        if (isActive) {\n            event.stopPropagation();\n        } else {\n            this.wasMoved = false;\n            event.preventDefault();\n        }\n    };\n\n    handleMouseMove = (event: MouseEvent) => {\n        this.handleMove(event);\n    };\n\n    handleTouchMove = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        if (\n            Math.abs(event.changedTouches[0].clientX - this.x) > 3 ||\n            Math.abs(event.changedTouches[0].clientY - this.y) > 3\n        ) {\n            this.handleMove(event);\n        }\n    };\n\n    handleMove = (event: Event) => {\n        const { isActive } = this.props;\n        if (isActive) {\n            event.stopPropagation();\n        } else {\n            this.wasMoved = true;\n            event.preventDefault();\n        }\n    };\n\n    handleMouseUp = (event: MouseEvent) => {\n        this.handleComplete(event);\n    };\n\n    handleTouchEnd = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleComplete(event);\n    };\n\n    handleComplete = (event: Event) => {\n        const { dispatch, cardId, isOnBack, fieldId, isActive } = this.props;\n        if (isActive) {\n            event.stopPropagation();\n        } else if (!this.wasMoved) {\n            event.preventDefault();\n            dispatch(cardSetActiveCardAndField(cardId, isOnBack, fieldId));\n\n            if (!this.editDiv.current) return;\n            this.editDiv.current.focus();\n        }\n    };\n\n    onFocus = () => {\n        if (!this.editDiv.current) return;\n\n        const { textValue, align, color, fontFamily, fontVariant, fontSize } = this.props;\n        this.currentText = textValue;\n        this.currentAlign = align;\n        this.currentColor = color;\n        this.currentFontFamily = fontFamily;\n        this.currentFontVariant = fontVariant;\n        this.currentFontSize = fontSize;\n\n        const range = document.createRange();\n        range.selectNodeContents(this.editDiv.current);\n        range.collapse(false);\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    };\n\n    updateContent = (timeoutInMiliseconds: number) => {\n        if (!this.editDiv.current) return;\n        let value = this.editDiv.current.innerHTML;\n\n        let imgUrlIdx = -1;\n        while ((imgUrlIdx = value.indexOf('<img src=\"http')) !== -1) {\n            value = value.slice(0, imgUrlIdx + 10) + value.slice(value.indexOf('/', imgUrlIdx + 18));\n        }\n\n        if (value !== this.currentText) {\n            this.currentText = value;\n\n            if (this.timeout) {\n                clearTimeout(this.timeout);\n            }\n\n            this.timeout = setTimeout(() => {\n                const { dispatch, cardId, fieldId } = this.props;\n                const textInfo: TextInfo = { value };\n\n                dispatch(cardSetChangeText(cardId, fieldId, textInfo));\n            }, timeoutInMiliseconds);\n        }\n    };\n\n    handleBlur = () => {\n        this.updateContent(0);\n    };\n\n    handleInput = () => {\n        this.updateContent(500);\n    };\n\n    handlePaste = (event: React.ClipboardEvent) => {\n        function escapeHtml(unsafe: string) {\n            return unsafe\n                .replace(/&/g, '&amp;')\n                .replace(/</g, '&lt;')\n                .replace(/>/g, '&gt;')\n                .replace(/\"/g, '&quot;')\n                .replace(/'/g, '&#039;');\n        }\n\n        event.preventDefault();\n\n        let text = '';\n        text = event.clipboardData.getData('text/plain');\n\n        text = text\n            .split('\\n')\n            .map((s: string) => `<div>${escapeHtml(s)}</div>`)\n            .join('');\n        document.execCommand('insertHTML', false, text);\n    };\n\n    render() {\n        const { color, align, fontFamily, fontVariant, fontSize, lineHeight } = this.props;\n        const isItalic = fontVariant && fontVariant.indexOf('italic') !== -1;\n        const fontWeight = isItalic\n            ? fontVariant === 'italic'\n                ? 400\n                : parseInt(fontVariant.slice(0, 3))\n            : fontVariant === 'regular'\n            ? 400\n            : parseInt(fontVariant);\n\n        return (\n            <div\n                ref={this.editDiv}\n                className={style.content}\n                contentEditable={true}\n                onFocus={this.onFocus}\n                onBlur={this.handleBlur}\n                onInput={this.handleInput}\n                onPaste={this.handlePaste}\n                style={{\n                    width: '100%',\n                    height: '100%',\n                    textAlign: align === 'left' ? 'left' : align === 'right' ? 'right' : 'center',\n                    color: color,\n                    fontFamily: `'${fontFamily}'` || DEFAULT_FONT,\n                    fontStyle: isItalic ? 'italic' : 'normal',\n                    fontWeight,\n                    fontSize: `${fontSize}px`,\n                    outline: 'none',\n                    overflowWrap: 'break-word',\n                    lineHeight,\n                }}\n                dangerouslySetInnerHTML={{ __html: this.props.textValue }}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    let fieldInfo = state.cardset.present.fields[props.cardId][props.fieldId];\n    const textValue = fieldInfo.type === 'text' ? fieldInfo.value : '';\n    return {\n        textValue,\n        isActive:\n            props.cardId === state.cardset.present.activeCardId &&\n            props.fieldId === state.cardset.present.activeFieldId,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(ContentEditable);\n","import { connect } from 'react-redux';\nimport React, { PureComponent } from 'react';\n\nimport { DEFAULT_LINE_HEIGHT } from '../constants';\nimport { Dispatch, cardSetChangeFieldAngle, cardSetChangeFieldPosition, cardSetChangeFieldSize } from '../actions';\nimport { State } from '../reducers';\nimport { TextFieldInfo } from '../types';\nimport ContentEditable from './ContentEditable';\nimport FieldController from './FieldController';\nimport emptyTextImage from './text.svg';\n\ninterface OwnProps {\n    cardId: string;\n    isOnBack: boolean;\n    ppmm: number;\n    textFieldInfo: TextFieldInfo;\n    cardWidth: number;\n    cardHeight: number;\n}\n\ninterface StateProps {\n    text: string;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass TextField extends PureComponent<Props> {\n    handleDrag = (x: number, y: number, cardOnly: boolean, group: string) => {\n        const { dispatch, cardId, textFieldInfo, ppmm } = this.props;\n        dispatch(\n            cardSetChangeFieldPosition(cardOnly ? cardId : undefined, textFieldInfo.id, x / ppmm, y / ppmm, group),\n        );\n    };\n\n    handleResize = (width: number, height: number, cardOnly: boolean, group: string) => {\n        const { dispatch, textFieldInfo, cardId, ppmm } = this.props;\n        dispatch(\n            cardSetChangeFieldSize(cardOnly ? cardId : undefined, textFieldInfo.id, width / ppmm, height / ppmm, group),\n        );\n    };\n\n    handleRotate = (angle: number, cardOnly: boolean, group: string) => {\n        const { dispatch, textFieldInfo, cardId } = this.props;\n        dispatch(cardSetChangeFieldAngle(cardOnly ? cardId : undefined, textFieldInfo.id, angle, group));\n    };\n\n    render() {\n        const { textFieldInfo, text, ppmm, cardWidth, cardHeight } = this.props;\n\n        return (\n            <FieldController\n                cardId={this.props.cardId}\n                fieldId={textFieldInfo.id}\n                x={textFieldInfo.x * ppmm}\n                y={textFieldInfo.y * ppmm}\n                width={textFieldInfo.width * ppmm}\n                height={textFieldInfo.height * ppmm}\n                angle={textFieldInfo.angle}\n                onDrag={this.handleDrag}\n                onResize={this.handleResize}\n                onRotate={this.handleRotate}\n                cardWidth={cardWidth}\n                cardHeight={cardHeight}\n                ppmm={ppmm}\n            >\n                {text === '' && (\n                    <div\n                        style={{\n                            width: '100%',\n                            height: '100%',\n                            position: 'fixed',\n                            left: 0,\n                            top: 0,\n                            zIndex: -1,\n                            textAlign:\n                                textFieldInfo.align === 'left'\n                                    ? 'left'\n                                    : textFieldInfo.align === 'right'\n                                    ? 'right'\n                                    : 'center',\n                        }}\n                    >\n                        <img style={{ opacity: 0.5, width: 'auto', height: '100%' }} src={emptyTextImage} alt=\"\" />\n                    </div>\n                )}\n\n                <ContentEditable\n                    cardId={this.props.cardId}\n                    isOnBack={this.props.isOnBack}\n                    fieldId={textFieldInfo.id}\n                    align={textFieldInfo.align}\n                    color={textFieldInfo.color}\n                    fontFamily={textFieldInfo.fontFamily}\n                    fontVariant={textFieldInfo.fontVariant}\n                    fontSize={textFieldInfo.fontSize * ppmm}\n                    lineHeight={textFieldInfo.lineHeight || DEFAULT_LINE_HEIGHT}\n                />\n            </FieldController>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    let fieldInfo = state.cardset.present.fields[props.cardId][props.textFieldInfo.id];\n    let text = fieldInfo.type === 'text' ? fieldInfo.value : '';\n    return {\n        text,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(TextField);\n","import { connect } from 'react-redux';\nimport Measure from 'react-measure';\nimport React, { Component } from 'react';\n\nimport { BLEED_WIDTH } from '../constants';\nimport { CardType, IdsArray, FieldInfoCollection } from '../types';\nimport { Dispatch, cardSetActiveCardAndField } from '../actions';\nimport { State } from '../reducers';\nimport ImageField from './ImageField';\nimport TextField from './TextField';\nimport style from './Card.module.css';\n\ninterface OwnProps {\n    card: CardType;\n    isBack: boolean;\n}\n\ninterface StateProps {\n    cardFields: FieldInfoCollection;\n    fieldsIds: IdsArray;\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    isActiveCard: boolean;\n    zoom: number;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\ninterface LocalState {\n    dimensions: {\n        width: number;\n        height: number;\n    };\n}\n\nclass Card extends Component<Props, LocalState> {\n    state = {\n        dimensions: {\n            width: -1,\n            height: -1,\n        },\n    };\n\n    handleFieldDeselect = (event: React.MouseEvent | React.TouchEvent) => {\n        const { dispatch, card, isBack } = this.props;\n        const el = event.target as HTMLElement;\n        if (el.getAttribute('id') === `card_${card.id}`) {\n            dispatch(cardSetActiveCardAndField(card.id, isBack, undefined));\n            event.stopPropagation();\n        }\n    };\n\n    render() {\n        const { cardFields, fieldsIds, card, isBack, width, height, isActiveCard, zoom, isTwoSided } = this.props;\n        const widthWithBleeds = width + BLEED_WIDTH * 2;\n        const heightWithBleeds = height + BLEED_WIDTH * 2;\n\n        const ppmm = this.state.dimensions.width / widthWithBleeds;\n\n        return (\n            <div>\n                <Measure\n                    client\n                    onResize={contentRect => {\n                        if (!contentRect.client) {\n                            return;\n                        }\n                        this.setState({ dimensions: contentRect.client });\n                    }}\n                >\n                    {({ measureRef }) => (\n                        <div\n                            className={`${style.card} ${isActiveCard ? style.active : ''}`}\n                            id={`card_${card.id}`}\n                            ref={measureRef}\n                            style={{\n                                width: `${widthWithBleeds * zoom}mm`,\n                                height: `${heightWithBleeds * zoom}mm`,\n                                position: 'relative',\n                                overflow: 'hidden',\n                            }}\n                            onMouseDown={this.handleFieldDeselect}\n                            onTouchStart={this.handleFieldDeselect}\n                        >\n                            {fieldsIds.map(id => {\n                                if (!(id in cardFields)) {\n                                    return null;\n                                }\n                                const p = cardFields[id];\n                                if (p.type === 'image') {\n                                    return (\n                                        <ImageField\n                                            key={p.id}\n                                            cardId={card.id}\n                                            isOnBack={isBack}\n                                            imageFieldInfo={p}\n                                            ppmm={ppmm}\n                                            cardWidth={this.state.dimensions.width}\n                                            cardHeight={this.state.dimensions.height}\n                                        />\n                                    );\n                                } else if (p.type === 'text') {\n                                    return (\n                                        <TextField\n                                            key={p.id}\n                                            cardId={card.id}\n                                            isOnBack={isBack}\n                                            textFieldInfo={p}\n                                            ppmm={ppmm}\n                                            cardWidth={this.state.dimensions.width}\n                                            cardHeight={this.state.dimensions.height}\n                                        />\n                                    );\n                                }\n                                return null;\n                            })}\n\n                            <div\n                                style={{\n                                    position: 'absolute',\n                                    width: `${width * zoom}mm`,\n                                    height: `${height * zoom}mm`,\n                                    left: `${BLEED_WIDTH * zoom}mm`,\n                                    top: `${BLEED_WIDTH * zoom}mm`,\n                                    border: '1px dashed black',\n                                    borderRadius: '5mm',\n                                    pointerEvents: 'none',\n                                }}\n                            />\n\n                            <div\n                                style={{\n                                    position: 'absolute',\n                                    width: `${(width - BLEED_WIDTH * 2) * zoom}mm`,\n                                    height: `${(height - BLEED_WIDTH * 2) * zoom}mm`,\n                                    left: `${BLEED_WIDTH * 2 * zoom}mm`,\n                                    top: `${BLEED_WIDTH * 2 * zoom}mm`,\n                                    border: '1px dashed red',\n                                    borderRadius: '5mm',\n                                    pointerEvents: 'none',\n                                }}\n                            />\n                        </div>\n                    )}\n                </Measure>\n                {isTwoSided && (\n                    <div\n                        className={style.title}\n                        style={{\n                            width: `${widthWithBleeds * zoom}mm`,\n                            position: 'relative',\n                        }}\n                    >\n                        {isBack ? 'Back' : 'Front'}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    let cardFields = state.cardset.present.fields[props.card.id] || {};\n\n    return {\n        cardFields,\n        fieldsIds: state.cardset.present.fieldsAllIds.filter(\n            id => ((id in cardFields && cardFields[id].isOnBack) || false) === props.isBack,\n        ),\n        width: state.cardset.present.width,\n        height: state.cardset.present.height,\n        isTwoSided: state.cardset.present.isTwoSided,\n        isActiveCard:\n            state.cardset.present.activeCardId === props.card.id && state.cardset.present.isBackActive === props.isBack,\n        zoom: state.cardset.present.zoom,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(Card);\n","import React, { Component } from 'react';\nimport style from './EditableTitle.module.css';\n\ninterface Props {\n    title: string;\n    onChange: (newName: string) => void;\n}\n\nexport default class EditableTitle extends Component<Props> {\n    state = {\n        titleIsEdited: false,\n    };\n\n    handleClick = () => {\n        this.setState({ titleIsEdited: true });\n    };\n\n    handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.props.onChange(event.target.value);\n    };\n\n    handleBlur = () => {\n        this.setState({ titleIsEdited: false });\n    };\n\n    render() {\n        const { titleIsEdited } = this.state;\n        const { title } = this.props;\n\n        return (\n            <>\n                {!titleIsEdited && (\n                    <h1 className={style.input} onClick={this.handleClick}>\n                        {title}\n                    </h1>\n                )}\n                {titleIsEdited && (\n                    <input\n                        autoFocus\n                        type=\"text\"\n                        className={style.input}\n                        value={title}\n                        onChange={this.handleChange}\n                        onBlur={this.handleBlur}\n                    />\n                )}\n            </>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nimport style from './Loader.module.css';\n\ninterface Props {\n    fixed?: boolean;\n    small?: boolean;\n}\n\nexport default class Loader extends Component<Props> {\n    render() {\n        const { fixed, small } = this.props;\n\n        return (\n            <div className={`${style.loader} ${fixed ? style.fixed : style.relative} ${small ? style.small : ''}`}>\n                <div />\n                <div />\n            </div>\n        );\n    }\n}\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { CardType, DispatchProps, SidebarOwnProps } from '../types';\nimport { State } from '../reducers';\nimport { cardSetCloneCard, cardSetRemoveCard, cardSetUpdateCardCount } from '../actions';\nimport style from './SidebarDetails.module.css';\n\ninterface StateProps {\n    isAuthenticated: boolean;\n    activeCard: CardType | null;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarDetails extends Component<Props> {\n    handleCloneCardClick = () => {\n        const { activeCard, dispatch } = this.props;\n        if (activeCard !== null) {\n            dispatch(cardSetCloneCard(activeCard));\n        }\n    };\n\n    handleRemoveCardClick = () => {\n        const { activeCard, dispatch } = this.props;\n        if (activeCard !== null) {\n            dispatch(cardSetRemoveCard(activeCard));\n        }\n    };\n\n    handleCountChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeCard, dispatch } = this.props;\n        if (activeCard !== null) {\n            dispatch(cardSetUpdateCardCount(activeCard, parseInt(event.target.value)));\n        }\n    };\n\n    render() {\n        const { activeCard, visible } = this.props;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'initial' : 'none' }}>\n                <button\n                    onClick={this.handleCloneCardClick}\n                    title=\"Clone card\"\n                    className={activeCard === null ? style.disabled : ''}\n                >\n                    <i className=\"material-icons\">file_copy</i>\n                </button>\n\n                <input\n                    type=\"number\"\n                    value={activeCard !== null ? activeCard.count.toString() : 0}\n                    onChange={this.handleCountChange}\n                    title=\"Number of card's copies\"\n                    className={activeCard === null ? style.disabled : ''}\n                />\n                <button\n                    onClick={this.handleRemoveCardClick}\n                    title=\"Remove card\"\n                    className={activeCard === null ? style.disabled : ''}\n                >\n                    <i className=\"material-icons\">delete</i>\n                </button>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        activeCard:\n            state.cardset.present.activeCardId !== undefined\n                ? state.cardset.present.cardsById[state.cardset.present.activeCardId]\n                : null,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarDetails);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { ACTIVITY_CREATING_PNG, State } from '../reducers';\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport { gameCreatePngRequest } from '../actions';\nimport style from './SidebarGeneratePng.module.css';\n\ninterface StateProps {\n    width: number;\n    height: number;\n    isCreatingPng: boolean;\n    activeCardset: string | null;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\ninterface LocalState {\n    dpi: number;\n}\n\nexport class SidebarGeneratePng extends Component<Props, LocalState> {\n    state: LocalState = {\n        dpi: 300,\n    };\n\n    handleDpiChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ dpi: parseInt(event.target.value) });\n    };\n\n    handleGenerate = () => {\n        const { dispatch, activeCardset } = this.props;\n        const { dpi } = this.state;\n\n        if (activeCardset !== null) {\n            dispatch(gameCreatePngRequest(dpi, 'cardsets', activeCardset));\n        }\n    };\n\n    render() {\n        const { visible, width, height, isCreatingPng } = this.props;\n        const { dpi } = this.state;\n\n        const calculatedWidth = Math.round(dpi * (width / 25.4 + 1 / 4));\n        const calculatedHeight = Math.round(dpi * (height / 25.4 + 1 / 4));\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'grid' : 'none' }}>\n                <div>Here you can generate your cards as PNG images.</div>\n                <label htmlFor=\"dpi\">DPI:</label>\n                <input\n                    id=\"dpi\"\n                    type=\"number\"\n                    min=\"1\"\n                    step=\"1\"\n                    onChange={this.handleDpiChange}\n                    className=\"form-control\"\n                    placeholder=\"DPI\"\n                    value={dpi}\n                />\n\n                <div>Width in pixels: {calculatedWidth}</div>\n                <div>Height in pixels: {calculatedHeight}</div>\n\n                <button disabled={isCreatingPng} onClick={this.handleGenerate}>\n                    Generate\n                </button>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        width: state.cardset.present.width,\n        height: state.cardset.present.height,\n        isCreatingPng: (state.games.activity & ACTIVITY_CREATING_PNG) === ACTIVITY_CREATING_PNG,\n        activeCardset: state.cardsets.active,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarGeneratePng);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { ACTIVITY_CREATING_PDF, State } from '../reducers';\nimport { Dispatch, gameCreatePdfRequest } from '../actions';\nimport KawaiiMessage, { Character } from './KawaiiMessage';\n\ninterface OwnProps {\n    type: string;\n    id: string;\n    withHelp?: boolean;\n}\n\ninterface StateProps {\n    isCreatingPdf: boolean;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = StateProps & DispatchProps & OwnProps;\n\ninterface LocalState {\n    pageWidth: number;\n    pageHeight: number;\n    topBottomMargin: number;\n    leftRightMargin: number;\n    verticalSpace: number;\n    horizontalSpace: number;\n    includeBleedingArea: boolean;\n    cutMarksForScissors: boolean;\n    cutMarksForGuillotine: boolean;\n    cutMarksInMarginArea: boolean;\n    cutMarksOnFrontSideOnly: boolean;\n}\n\nexport class PDFGenerator extends Component<Props, LocalState> {\n    state = {\n        pageWidth: 210,\n        pageHeight: 297,\n        topBottomMargin: 15,\n        leftRightMargin: 9,\n        verticalSpace: 0,\n        horizontalSpace: 0,\n        includeBleedingArea: false,\n        cutMarksForScissors: true,\n        cutMarksForGuillotine: false,\n        cutMarksInMarginArea: false,\n        cutMarksOnFrontSideOnly: false,\n    };\n\n    handleGeneratePdfClick = () => {\n        const { dispatch } = this.props;\n        const {\n            pageWidth,\n            pageHeight,\n            topBottomMargin,\n            leftRightMargin,\n            verticalSpace,\n            horizontalSpace,\n            includeBleedingArea,\n            cutMarksForScissors,\n            cutMarksForGuillotine,\n            cutMarksInMarginArea,\n            cutMarksOnFrontSideOnly,\n        } = this.state;\n\n        dispatch(\n            gameCreatePdfRequest(\n                this.props.type,\n                this.props.id,\n                pageWidth,\n                pageHeight,\n                topBottomMargin,\n                leftRightMargin,\n                verticalSpace,\n                horizontalSpace,\n                includeBleedingArea,\n                cutMarksForScissors,\n                cutMarksForGuillotine,\n                cutMarksInMarginArea,\n                cutMarksOnFrontSideOnly,\n            ),\n        );\n    };\n\n    handlePageWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ pageWidth: parseFloat(event.target.value) });\n    };\n\n    handlePageHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ pageHeight: parseFloat(event.target.value) });\n    };\n\n    handleTopBottomMarginChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ topBottomMargin: parseFloat(event.target.value) });\n    };\n\n    handleLeftRightMarginChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ leftRightMargin: parseFloat(event.target.value) });\n    };\n\n    handleVerticalSpaceChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ verticalSpace: parseFloat(event.target.value) });\n    };\n\n    handleHorizontalSpaceChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ horizontalSpace: parseFloat(event.target.value) });\n    };\n\n    handleIncludeBleedingAreaChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ includeBleedingArea: event.target.checked });\n    };\n\n    handleCutMarksForScissors = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ cutMarksForScissors: event.target.checked });\n    };\n\n    handleCutMarksForGuillotine = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ cutMarksForGuillotine: event.target.checked });\n    };\n\n    handleCutMarksInMarginArea = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ cutMarksInMarginArea: event.target.checked });\n    };\n\n    handleCutMarksOnFrontSideOnly = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ cutMarksOnFrontSideOnly: event.target.checked });\n    };\n\n    render() {\n        const { isCreatingPdf, withHelp } = this.props;\n\n        return (\n            <>\n                {withHelp && (\n                    <KawaiiMessage character={Character.Ghost} mood=\"excited\">\n                        <p>Here you can generate PDF.</p>\n                        <p>Hint 1: A4 page size is 210 mm x 297 mm. Letter page size is 215.9 x 279.4 mm.</p>\n                        <p>Hint 2: 1 inch is equal to 25.4 mm.</p>\n                    </KawaiiMessage>\n                )}\n\n                <div className=\"form\">\n                    <label htmlFor=\"page_width\">Page width (mm):</label>\n                    <input\n                        id=\"page_width\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handlePageWidthChange}\n                        placeholder=\"Page width\"\n                        value={this.state.pageWidth}\n                    />\n                    <label htmlFor=\"page_height\">Page height (mm):</label>\n                    <input\n                        id=\"page_height\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handlePageHeightChange}\n                        placeholder=\"Page Height\"\n                        value={this.state.pageHeight}\n                    />\n                    <label htmlFor=\"page_topbottom_margin\">Margin from top/bottom (mm):</label>\n                    <input\n                        id=\"page_topbottom_margin\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handleTopBottomMarginChange}\n                        placeholder=\"Top/Bottom margin\"\n                        value={this.state.topBottomMargin}\n                    />\n                    <label htmlFor=\"page_leftright_margin\">Margin from left/right (mm):</label>\n                    <input\n                        id=\"page_leftright_margin\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handleLeftRightMarginChange}\n                        placeholder=\"Left/Right margin\"\n                        value={this.state.leftRightMargin}\n                    />\n\n                    <label htmlFor=\"card_vertical_space\">Vertical space between cards (mm):</label>\n                    <input\n                        id=\"card_vertical_space\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handleVerticalSpaceChange}\n                        placeholder=\"Vertical space\"\n                        value={this.state.verticalSpace}\n                    />\n\n                    <label htmlFor=\"card_horizontal_space\">Horizontal space between cards (mm):</label>\n                    <input\n                        id=\"card_horizontal_space\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handleHorizontalSpaceChange}\n                        placeholder=\"Horizontal space\"\n                        value={this.state.horizontalSpace}\n                    />\n\n                    <label\n                        title=\"You might need this for Cardmogrifier or professional printing. Do\n                        not check this if all you are interested in is card (area inside black dashed rectangle).\"\n                    >\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.includeBleedingArea}\n                            onChange={this.handleIncludeBleedingAreaChange}\n                        />\n                        Generate with bleeding area.\n                    </label>\n\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.cutMarksForScissors}\n                            onChange={this.handleCutMarksForScissors}\n                        />\n                        Generate with cut marks for paper scissors.\n                    </label>\n\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.cutMarksForGuillotine}\n                            onChange={this.handleCutMarksForGuillotine}\n                        />\n                        Generate with cut marks for paper guillotine.\n                    </label>\n\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.cutMarksInMarginArea}\n                            onChange={this.handleCutMarksInMarginArea}\n                        />\n                        Generate with cut marks for paper guillotine in margin area.\n                    </label>\n\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.cutMarksOnFrontSideOnly}\n                            onChange={this.handleCutMarksOnFrontSideOnly}\n                        />\n                        Generate cut marks on front side only (useful for printing on both sides).\n                    </label>\n\n                    <button disabled={isCreatingPdf} onClick={this.handleGeneratePdfClick}>\n                        Generate PDF\n                    </button>\n                </div>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        isCreatingPdf: (state.games.activity & ACTIVITY_CREATING_PDF) === ACTIVITY_CREATING_PDF,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(PDFGenerator);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport { State } from '../reducers';\nimport PDFGenerator from './PDFGenerator';\nimport style from './SidebarGeneratePdf.module.css';\n\ninterface StateProps {\n    activeCardSetId: string | null;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarGeneratePdf extends Component<Props> {\n    render() {\n        const { activeCardSetId, visible } = this.props;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'grid' : 'none' }}>\n                {activeCardSetId !== null && <PDFGenerator type=\"cardsets\" id={activeCardSetId} />}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        activeCardSetId: state.cardsets.active,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarGeneratePdf);\n","import { ChromePicker, ColorResult } from 'react-color';\nimport React, { Component } from 'react';\n\ninterface Props {\n    onChange: (color: ColorResult) => void;\n    color: string;\n}\n\ninterface State {\n    displayColorPicker: boolean;\n}\n\nexport default class ColorButton extends Component<Props, State> {\n    state = {\n        displayColorPicker: false,\n    };\n\n    handleClick = () => {\n        this.setState({ displayColorPicker: !this.state.displayColorPicker });\n    };\n\n    handleClose = () => {\n        this.setState({ displayColorPicker: false });\n    };\n\n    handleChange = (color: ColorResult) => {\n        this.props.onChange(color);\n    };\n\n    render() {\n        const popover: React.CSSProperties = {\n            position: 'absolute',\n            zIndex: 2,\n        };\n        const cover: React.CSSProperties = {\n            position: 'fixed',\n            top: '0px',\n            right: '0px',\n            bottom: '0px',\n            left: '0px',\n        };\n        return (\n            <>\n                <button onClick={this.handleClick} title=\"Change color\">\n                    <i className=\"material-icons\">color_lens</i>\n                </button>\n                {this.state.displayColorPicker ? (\n                    <div style={popover}>\n                        <div style={cover} onClick={this.handleClose} />\n                        <ChromePicker color={this.props.color} disableAlpha={true} onChange={this.handleChange} />\n                    </div>\n                ) : null}\n            </>\n        );\n    }\n}\n","import { ColorResult } from 'react-color';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, IdsArray, ImageArray, SidebarOwnProps, FieldInfo, ImageInfo } from '../types';\nimport { State } from '../reducers';\nimport {\n    cardSetAddImageField,\n    cardSetChangeActiveFieldName,\n    cardSetChangeFitForActiveField,\n    cardSetChangeCropForActiveField,\n    cardSetChangeImage,\n    cardSetLockActiveField,\n    cardSetLowerActiveFieldToBottom,\n    cardSetRaiseActiveFieldToTop,\n    cardSetRemoveActiveField,\n    cardSetUnlockActiveField,\n    imageListRequest,\n    cardSetChangeApplyToAllCards,\n    cardSetRaiseActiveField,\n    cardSetLowerActiveField,\n} from '../actions';\nimport ColorButton from './ColorButton';\nimport style from './SidebarImage.module.css';\n\ninterface StateProps {\n    isAuthenticated: boolean;\n    activeFieldInfo?: FieldInfo;\n    crop: boolean;\n    activeCardId?: string;\n    filter: string;\n    images: ImageArray;\n    cardsAllIds: IdsArray;\n    applyToAllCards: boolean;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\ninterface LocalState {\n    location: string;\n}\n\nexport class SidebarImage extends Component<Props, LocalState> {\n    state = {\n        location: 'all',\n    };\n\n    handleAddImageClick = () => {\n        const { dispatch } = this.props;\n        dispatch(cardSetAddImageField());\n    };\n\n    changeImage = (ii: ImageInfo) => {\n        const { activeCardId, activeFieldInfo, dispatch } = this.props;\n\n        if (activeFieldInfo) {\n            dispatch(cardSetChangeImage(activeCardId ? activeCardId : undefined, activeFieldInfo.id, ii));\n        }\n    };\n\n    handleRemoveImageFromFieldClick = () => {\n        const ii: ImageInfo = { url: undefined, base64: undefined };\n        this.changeImage(ii);\n    };\n\n    handleRemoveClick = () => {\n        const { activeFieldInfo, dispatch } = this.props;\n        if (activeFieldInfo !== undefined) {\n            dispatch(cardSetRemoveActiveField());\n        }\n    };\n\n    handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeFieldInfo, dispatch } = this.props;\n        const name = event.target.value.trim();\n        if (activeFieldInfo !== undefined) {\n            dispatch(cardSetChangeActiveFieldName(name));\n        }\n    };\n\n    handleFilterChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        const { location } = this.state;\n        const filter = event.target.value;\n        dispatch(imageListRequest(filter, location));\n    };\n\n    handleImageSelect = (imageName: string, width: number, height: number) => {\n        const { activeFieldInfo } = this.props;\n\n        if (activeFieldInfo !== undefined) {\n            const color = activeFieldInfo && activeFieldInfo.color;\n\n            const ii: ImageInfo = { url: `/api/imagefiles/${imageName}`, color, width, height, base64: undefined };\n            this.changeImage(ii);\n        }\n    };\n\n    handleRaise = (event: React.MouseEvent) => {\n        const { activeFieldInfo, dispatch } = this.props;\n        if (activeFieldInfo !== undefined) {\n            if (event.ctrlKey) {\n                dispatch(cardSetRaiseActiveFieldToTop());\n            } else {\n                dispatch(cardSetRaiseActiveField());\n            }\n        }\n    };\n\n    handleLower = (event: React.MouseEvent) => {\n        const { activeFieldInfo, dispatch } = this.props;\n        if (activeFieldInfo !== undefined) {\n            if (event.ctrlKey) {\n                dispatch(cardSetLowerActiveFieldToBottom());\n            } else {\n                dispatch(cardSetLowerActiveField());\n            }\n        }\n    };\n\n    handleLockField = () => {\n        const { activeFieldInfo, dispatch } = this.props;\n        if (activeFieldInfo !== undefined) {\n            dispatch(cardSetLockActiveField());\n        }\n    };\n\n    handleUnlockField = () => {\n        const { activeFieldInfo, dispatch } = this.props;\n        if (activeFieldInfo !== undefined) {\n            dispatch(cardSetUnlockActiveField());\n        }\n    };\n\n    handleFitOptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        const fit = event.target.value;\n\n        dispatch(cardSetChangeFitForActiveField(fit));\n    };\n\n    handleOptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { filter, dispatch } = this.props;\n        const location = event.target.value;\n\n        this.setState({ location });\n        dispatch(imageListRequest(filter, location));\n    };\n\n    handleColorChange = (color: ColorResult) => {\n        const ii: ImageInfo = { color: color.hex };\n        this.changeImage(ii);\n    };\n\n    handleRemoveColorClick = () => {\n        const ii: ImageInfo = { color: undefined };\n        this.changeImage(ii);\n    };\n\n    handleApplyToAllCardChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeApplyToAllCards(event.target.checked));\n    };\n\n    handleChangeCrop = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeFieldInfo, dispatch } = this.props;\n        if (activeFieldInfo !== undefined) {\n            dispatch(cardSetChangeCropForActiveField(event.target.checked));\n        }\n    };\n\n    render() {\n        const { activeFieldInfo, crop, filter, visible, applyToAllCards } = this.props;\n        const { location } = this.state;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'grid' : 'none' }}>\n                <div>\n                    <button onClick={this.handleAddImageClick} title=\"Add image field\">\n                        <i className=\"material-icons\">add_photo_alternate</i>\n                    </button>\n\n                    {activeFieldInfo !== undefined && (\n                        <>\n                            <button onClick={this.handleRaise} title=\"Raise image (with Ctrl - raise to top)\">\n                                <i className=\"material-icons\">arrow_upward</i>\n                            </button>\n                            <button onClick={this.handleLower} title=\"Lower image (with Ctrl - lower to bottom)\">\n                                <i className=\"material-icons\">arrow_downward</i>\n                            </button>\n                        </>\n                    )}\n\n                    {activeFieldInfo &&\n                        activeFieldInfo.type === 'image' &&\n                        (activeFieldInfo.url || activeFieldInfo.base64) && (\n                            <button onClick={this.handleRemoveImageFromFieldClick} title=\"Remove image from field\">\n                                <i className=\"material-icons\">remove_circle_outline</i>\n                            </button>\n                        )}\n\n                    {activeFieldInfo !== undefined && !activeFieldInfo.locked && (\n                        <button\n                            onClick={this.handleLockField}\n                            title=\"Lock image field. Locked field can't be dragged, rotated, resized and removed.\"\n                        >\n                            <i className=\"material-icons\">lock_open</i>\n                        </button>\n                    )}\n\n                    {activeFieldInfo !== undefined && activeFieldInfo.locked && (\n                        <button\n                            onClick={this.handleUnlockField}\n                            title=\"Unlock image field. Unlocked text field can be dragged, rotated, resized and removed.\"\n                        >\n                            <i className=\"material-icons\">lock</i>\n                        </button>\n                    )}\n\n                    <button\n                        className={activeFieldInfo === undefined || activeFieldInfo.locked ? style.disabled : ''}\n                        onClick={this.handleRemoveClick}\n                        title=\"Remove field\"\n                    >\n                        <i className=\"material-icons\">remove</i>\n                    </button>\n\n                    {activeFieldInfo !== undefined && (\n                        <input\n                            type=\"text\"\n                            value={activeFieldInfo.name || ''}\n                            placeholder={activeFieldInfo.id}\n                            onChange={this.handleNameChange}\n                            title=\"Change name of image field.\"\n                        />\n                    )}\n\n                    {activeFieldInfo && activeFieldInfo.type === 'image' && (\n                        <form>\n                            <div>\n                                Fit:\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        value=\"width\"\n                                        checked={!activeFieldInfo.fit || activeFieldInfo.fit === 'width'}\n                                        onChange={this.handleFitOptionChange}\n                                    />\n                                    width\n                                </label>\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        value=\"height\"\n                                        checked={activeFieldInfo.fit === 'height'}\n                                        onChange={this.handleFitOptionChange}\n                                    />\n                                    height\n                                </label>\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        value=\"stretch\"\n                                        checked={activeFieldInfo.fit === 'stretch'}\n                                        onChange={this.handleFitOptionChange}\n                                    />\n                                    stretch\n                                </label>\n                            </div>\n                        </form>\n                    )}\n                </div>\n\n                {activeFieldInfo && activeFieldInfo.type === 'image' && (\n                    <>\n                        <div>\n                            <label>\n                                <input type=\"checkbox\" checked={crop} onChange={this.handleChangeCrop} />\n                                Crop\n                            </label>\n                            <ColorButton\n                                color={(activeFieldInfo && activeFieldInfo.color) || '#FFFFFF'}\n                                onChange={this.handleColorChange}\n                            />\n                            {activeFieldInfo && activeFieldInfo.color && (\n                                <button onClick={this.handleRemoveColorClick} title=\"Remove color\">\n                                    <i className=\"material-icons\">remove_circle</i>\n                                </button>\n                            )}\n                            <label>\n                                <input\n                                    type=\"checkbox\"\n                                    checked={applyToAllCards}\n                                    onChange={this.handleApplyToAllCardChange}\n                                />\n                                Apply to all cards\n                            </label>\n                        </div>\n                    </>\n                )}\n                <div>\n                    <form>\n                        Source:\n                        <label>\n                            <input\n                                type=\"radio\"\n                                value=\"all\"\n                                checked={location === 'all'}\n                                onChange={this.handleOptionChange}\n                            />\n                            All\n                        </label>\n                        <label>\n                            <input\n                                type=\"radio\"\n                                value=\"user\"\n                                checked={location === 'user'}\n                                onChange={this.handleOptionChange}\n                            />\n                            User\n                        </label>\n                        <label>\n                            <input\n                                type=\"radio\"\n                                value=\"game\"\n                                checked={location === 'game'}\n                                onChange={this.handleOptionChange}\n                            />\n                            Game\n                        </label>\n                    </form>\n                </div>\n\n                <div>\n                    <input type=\"text\" placeholder=\"Search...\" value={filter} onChange={this.handleFilterChange} />\n                </div>\n                <div className={style.images}>\n                    {this.props.images.map(im => {\n                        return (\n                            <img\n                                key={im.id}\n                                src={`/api/imagefiles/${im.name}`}\n                                data-width={im.width}\n                                data-height={im.height}\n                                onClick={() => this.handleImageSelect(im.name, im.width, im.height)}\n                                alt={im.name}\n                            />\n                        );\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    const activeFieldInfo =\n        state.cardset.present.activeCardId !== undefined && state.cardset.present.activeFieldId !== undefined\n            ? state.cardset.present.fields[state.cardset.present.activeCardId][state.cardset.present.activeFieldId]\n            : undefined;\n\n    const activeCardId = state.cardset.present.activeCardId;\n\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        activeFieldInfo,\n        crop: activeFieldInfo && activeFieldInfo.type === 'image' ? activeFieldInfo.crop || false : false,\n        activeCardId,\n        images: state.images.images,\n        filter: state.images.filter,\n        cardsAllIds: state.cardset.present.cardsAllIds,\n        applyToAllCards: state.cardset.present.applyToAllCards,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarImage);\n","import 'filepond/dist/filepond.min.css';\n\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport { connect } from 'react-redux';\nimport FilePondPluginFileValidateType from 'filepond-plugin-file-validate-type';\nimport Papa from 'papaparse';\nimport React, { Component } from 'react';\nimport md5 from 'md5';\nimport shortid from 'shortid';\n\nimport {\n    CardType,\n    CardsCollection,\n    DispatchProps,\n    IdsArray,\n    SidebarOwnProps,\n    FieldInfoByCardCollection,\n    FieldInfoCollection,\n} from '../types';\nimport { FPLoadCallback, FPRevertLoadCallback, cardSetImportData, messageDisplay } from '../actions';\nimport { State } from '../reducers';\nimport { downloadBlob } from '../utils';\nimport style from './SidebarImportExport.module.css';\n\nregisterPlugin(FilePondPluginFileValidateType);\n\ninterface StateProps {\n    activeGame: string | null;\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    cardsAllIds: IdsArray;\n    cardsById: CardsCollection;\n    fieldsAllIds: IdsArray;\n    fields: FieldInfoByCardCollection;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarImportExport extends Component<Props> {\n    prepareImagePaths = (fields: FieldInfoByCardCollection) => {\n        const { activeGame } = this.props;\n        if (activeGame === null) return fields;\n\n        const ending = '_' + md5(activeGame);\n\n        let preparedImages: FieldInfoByCardCollection = {};\n\n        for (const cardId in fields) {\n            let fieldsByCard = { ...fields[cardId] };\n            for (const fieldId in fieldsByCard) {\n                let imageInfo = { ...fieldsByCard[fieldId] };\n                if (imageInfo.type === 'image') {\n                    let url = imageInfo.url || '';\n                    if (url.endsWith(ending)) {\n                        url = url.replace(ending, '');\n                    } else {\n                        imageInfo.global = true;\n                    }\n\n                    imageInfo.url = url.replace('/api/imagefiles/', '');\n                }\n                fieldsByCard[fieldId] = imageInfo;\n            }\n            preparedImages[cardId] = fieldsByCard;\n        }\n\n        return preparedImages;\n    };\n\n    handleExportJson = () => {\n        const { width, height, isTwoSided, cardsAllIds, cardsById, fields, fieldsAllIds } = this.props;\n\n        const preparedFields = this.prepareImagePaths(fields);\n\n        const data = {\n            width,\n            height,\n            isTwoSided,\n            cardsAllIds,\n            cardsById,\n            fields: preparedFields,\n            fieldsAllIds,\n        };\n\n        let json = JSON.stringify(data, null, 4);\n        let blob = new Blob([json], { type: 'octet/stream' });\n        let url = window.URL.createObjectURL(blob);\n        downloadBlob(url, 'cardset.json');\n    };\n\n    handleExportCsv = () => {\n        const { cardsAllIds, cardsById, fields, fieldsAllIds } = this.props;\n\n        const preparedFields = this.prepareImagePaths(fields);\n\n        let csvData: (string | number)[][] = [];\n        let header = ['card_id', 'card_count'];\n        let usedNames: { [key: string]: boolean } = {};\n        for (const plId of fieldsAllIds) {\n            const fieldInfo = fields[cardsAllIds[0]][plId];\n            const name = fieldInfo.name || fieldInfo.id;\n            if (!(name in usedNames)) {\n                header.push(name);\n                if (fieldInfo.type === 'image') {\n                    header.push(`${name}_global`);\n                }\n                usedNames[name] = false;\n            }\n        }\n        csvData.push(header);\n\n        for (const cardId of cardsAllIds) {\n            let card = cardsById[cardId];\n\n            let dataRow: (string | number)[] = [cardId, card.count];\n\n            let written = { ...usedNames };\n            for (const fieldId of fieldsAllIds) {\n                const fieldIndo = fields[cardId][fieldId];\n                const name = fieldIndo.name || fieldIndo.id;\n\n                if (!written[name]) {\n                    let fieldInfo = preparedFields[cardId][fieldId];\n                    if (fieldInfo.type === 'text') {\n                        dataRow.push(fieldInfo.value);\n                    } else if (fieldInfo.type === 'image') {\n                        dataRow.push(fieldInfo.url || '');\n                        dataRow.push(fieldInfo.global ? 'y' : 'n');\n                    }\n                    written[name] = true;\n                }\n            }\n            csvData.push(dataRow);\n        }\n\n        let csv = Papa.unparse(csvData);\n        let blob = new Blob([csv], { type: 'octet/stream' });\n        let url = window.URL.createObjectURL(blob);\n        downloadBlob(url, 'cardset.csv');\n    };\n\n    handleProcess = (fieldName: string, file: File, metadata: { [propName: string]: string }, load: FPLoadCallback) => {\n        const { dispatch, activeGame, fields, fieldsAllIds, cardsById, cardsAllIds } = this.props;\n        if (activeGame === null) return;\n\n        var reader = new FileReader();\n        reader.readAsText(file, 'UTF-8');\n        reader.onload = function(e) {\n            if (e.target === null) return;\n\n            let data = null;\n            const ending = '_' + md5(activeGame);\n\n            if (file.type === 'application/json') {\n                // eslint-disable-next-line\n                data = JSON.parse((e.target as any).result);\n\n                for (const cardId in data.fields) {\n                    const cardFields: FieldInfoCollection = data.fields[cardId];\n                    for (const fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'image') {\n                            let isGlobal = fieldInfo.global || false;\n\n                            fieldInfo.url = `/api/imagefiles/${fieldInfo.url}${isGlobal ? '' : ending}`;\n                            delete fieldInfo.global;\n                        }\n                    }\n                }\n            } else if (file.type === 'text/csv') {\n                // eslint-disable-next-line\n                const csvData = Papa.parse((e.target as any).result, { header: true });\n\n                let newCardsAllIds: IdsArray = [];\n                let newCardsById: CardsCollection = {};\n                let newFields: FieldInfoByCardCollection = {};\n\n                for (const row of csvData.data) {\n                    const card: CardType = {\n                        id: row['card_id'] || shortid.generate(),\n                        count: row['card_count'] || 1,\n                    };\n\n                    newFields[card.id] = {\n                        ...fields[card.id in cardsById ? card.id : cardsAllIds[0]],\n                    };\n\n                    newCardsAllIds.push(card.id);\n                    newCardsById[card.id] = card;\n\n                    for (const fieldId of fieldsAllIds) {\n                        const fieldInfo = newFields[card.id][fieldId];\n                        const name = fieldInfo.name || fieldInfo.id;\n\n                        if (row[name]) {\n                            if (fieldInfo.type === 'image') {\n                                const isGlobal = row[`${name}_global`] === 'y';\n                                const url = row[name];\n\n                                newFields[card.id][fieldId] = {\n                                    ...fieldInfo,\n                                    url: `/api/imagefiles/${url}${isGlobal ? '' : ending}`,\n                                };\n                            } else if (fieldInfo.type === 'text') {\n                                newFields[card.id][fieldId] = {\n                                    ...fieldInfo,\n                                    value: row[name],\n                                };\n                            }\n                        }\n                    }\n                }\n\n                data = {\n                    cardsAllIds: newCardsAllIds,\n                    cardsById: newCardsById,\n                    fields: newFields,\n                };\n            }\n\n            if (data !== null) {\n                dispatch(cardSetImportData(data));\n            }\n        };\n        reader.onerror = function() {\n            dispatch(messageDisplay('error', 'Problem during import.'));\n        };\n\n        load(file.name);\n    };\n\n    handleRevert = (uniqueFileId: string, load: FPRevertLoadCallback) => {\n        load();\n    };\n\n    render() {\n        const { visible } = this.props;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'grid' : 'none' }}>\n                <div>\n                    Here you can export and import your card set data. JSON file contains templates of cards, text and\n                    image data by card, CSV file contains only text and image data by card.\n                </div>\n                <button onClick={this.handleExportJson}>\n                    <i className=\"material-icons\">cloud_download</i> Get JSON\n                </button>\n                <button onClick={this.handleExportCsv}>\n                    <i className=\"material-icons\">cloud_download</i> Get CSV\n                </button>\n\n                <div>Drag & Drop or browser for JSON or CSV file here:</div>\n\n                <FilePond\n                    server={{\n                        process: this.handleProcess,\n                        revert: this.handleRevert,\n                    }}\n                    acceptedFileTypes={['text/csv', 'application/json']}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        activeGame: state.games.active,\n        width: state.cardset.present.width,\n        height: state.cardset.present.height,\n        isTwoSided: state.cardset.present.isTwoSided,\n        cardsAllIds: state.cardset.present.cardsAllIds,\n        cardsById: state.cardset.present.cardsById,\n        fieldsAllIds: state.cardset.present.fieldsAllIds,\n        fields: state.cardset.present.fields,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarImportExport);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, IdsArray, SidebarOwnProps, FieldInfo, FieldInfoByCardCollection } from '../types';\nimport { State } from '../reducers';\nimport {\n    cardSetActiveCardAndField,\n    cardSetChangeActiveFieldName,\n    cardSetChangeFieldAngle,\n    cardSetChangeFieldSize,\n    cardSetLockActiveField,\n    cardSetChangeFieldPosition,\n    cardSetLowerActiveField,\n    cardSetLowerActiveFieldToBottom,\n    cardSetRaiseActiveField,\n    cardSetRaiseActiveFieldToTop,\n    cardSetUnlockActiveField,\n    cardSetChangeUnclickableForActiveField,\n} from '../actions';\nimport style from './SidebarMeasurements.module.css';\nimport shortid from 'shortid';\n\ninterface StateProps {\n    activeField?: FieldInfo;\n    activeCardId?: string;\n    fields: FieldInfoByCardCollection;\n    fieldsAllIds: IdsArray;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarMeasurements extends Component<Props> {\n    handlePrevField = () => {\n        const { activeCardId, activeField, fieldsAllIds, dispatch } = this.props;\n        if (fieldsAllIds.length === 0 || activeCardId === null) return;\n\n        let prevField = fieldsAllIds[fieldsAllIds.length - 1];\n        if (activeField !== undefined) {\n            let idx = fieldsAllIds.indexOf(activeField.id);\n            if (idx > 0) prevField = fieldsAllIds[idx - 1];\n        }\n\n        dispatch(cardSetActiveCardAndField(activeCardId, (activeField && activeField.isOnBack) || false, prevField));\n    };\n\n    handleNextField = () => {\n        const { activeCardId, activeField, fieldsAllIds, dispatch } = this.props;\n        if (fieldsAllIds.length === 0 || activeCardId === null) return;\n\n        let nextField = fieldsAllIds[0];\n        if (activeField !== undefined) {\n            let idx = fieldsAllIds.indexOf(activeField.id);\n            if (idx !== -1 && idx !== fieldsAllIds.length - 1) nextField = fieldsAllIds[idx + 1];\n        }\n\n        dispatch(cardSetActiveCardAndField(activeCardId, (activeField && activeField.isOnBack) || false, nextField));\n    };\n\n    handleRaise = (event: React.MouseEvent) => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            if (event.ctrlKey) {\n                dispatch(cardSetRaiseActiveFieldToTop());\n            } else {\n                dispatch(cardSetRaiseActiveField());\n            }\n        }\n    };\n\n    handleLower = (event: React.MouseEvent) => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            if (event.ctrlKey) {\n                dispatch(cardSetLowerActiveFieldToBottom());\n            } else {\n                dispatch(cardSetLowerActiveField());\n            }\n        }\n    };\n\n    handleLockField = () => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            dispatch(cardSetLockActiveField());\n        }\n    };\n\n    handleUnlockField = () => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            dispatch(cardSetUnlockActiveField());\n        }\n    };\n\n    handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        const name = event.target.value.trim();\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeActiveFieldName(name));\n        }\n    };\n\n    handleWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        const width = parseFloat(event.target.value);\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeFieldSize(undefined, activeField.id, width, activeField.height, shortid.generate()));\n        }\n    };\n\n    handleHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        const height = parseFloat(event.target.value);\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeFieldSize(undefined, activeField.id, activeField.width, height, shortid.generate()));\n        }\n    };\n\n    handleXChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        const x = parseFloat(event.target.value);\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeFieldPosition(undefined, activeField.id, x, activeField.y, shortid.generate()));\n        }\n    };\n\n    handleYChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        const y = parseFloat(event.target.value);\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeFieldPosition(undefined, activeField.id, activeField.x, y, shortid.generate()));\n        }\n    };\n\n    handleAngleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        const angle = (parseFloat(event.target.value) * Math.PI) / 180;\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeFieldAngle(undefined, activeField.id, angle, shortid.generate()));\n        }\n    };\n\n    handleChangeUnclickable = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeUnclickableForActiveField(event.target.checked));\n        }\n    };\n\n    render() {\n        const { activeCardId, activeField, visible } = this.props;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'initial' : 'none' }}>\n                {activeCardId !== undefined && (\n                    <>\n                        <button onClick={this.handlePrevField} title=\"Previous field\">\n                            <i className=\"material-icons\">arrow_back</i>\n                        </button>\n                        <button onClick={this.handleNextField} title=\"Next field\">\n                            <i className=\"material-icons\">arrow_forward</i>\n                        </button>\n                    </>\n                )}\n\n                {activeField !== undefined && (\n                    <>\n                        <button onClick={this.handleRaise} title=\"Raise text (with Ctrl - raise to top)\">\n                            <i className=\"material-icons\">arrow_upward</i>\n                        </button>\n                        <button onClick={this.handleLower} title=\"Lower text (with Ctrl - lower to bottom)\">\n                            <i className=\"material-icons\">arrow_downward</i>\n                        </button>\n                    </>\n                )}\n\n                {activeField !== undefined && !activeField.locked && (\n                    <button\n                        onClick={this.handleLockField}\n                        title=\"Lock field. Locked field can't be dragged, rotated, resized and removed.\"\n                    >\n                        <i className=\"material-icons\">lock_open</i>\n                    </button>\n                )}\n\n                {activeField !== undefined && activeField.locked && (\n                    <button\n                        onClick={this.handleUnlockField}\n                        title=\"Unlock field. Unlocked field can be dragged, rotated, resized and removed.\"\n                    >\n                        <i className=\"material-icons\">lock</i>\n                    </button>\n                )}\n\n                {activeField !== undefined && (\n                    <div>\n                        <label>\n                            Unclickable field:{' '}\n                            <input\n                                type=\"checkbox\"\n                                onChange={this.handleChangeUnclickable}\n                                className=\"form-control\"\n                                checked={activeField.unclickable ? true : false}\n                            />\n                        </label>\n                    </div>\n                )}\n\n                {activeField !== undefined && (\n                    <div>\n                        <label>\n                            Field name:\n                            <input\n                                type=\"text\"\n                                value={activeField.name || ''}\n                                placeholder={activeField.id}\n                                onChange={this.handleNameChange}\n                                title=\"Change name of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            Width:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={activeField.width}\n                                placeholder=\"Width\"\n                                onChange={this.handleWidthChange}\n                                title=\"Change width of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            Height:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={activeField.height}\n                                placeholder=\"Height\"\n                                onChange={this.handleHeightChange}\n                                title=\"Change width of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            X:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={activeField.x}\n                                placeholder=\"Width\"\n                                onChange={this.handleXChange}\n                                title=\"Change x coordinate of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            Y:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={activeField.y}\n                                placeholder=\"Height\"\n                                onChange={this.handleYChange}\n                                title=\"Change y coordinate of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            Angle:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={(activeField.angle * 180) / Math.PI}\n                                placeholder=\"Angle\"\n                                onChange={this.handleAngleChange}\n                                title=\"Change rotation angle of field.\"\n                            />\n                        </label>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    const activeField =\n        state.cardset.present.activeCardId !== undefined && state.cardset.present.activeFieldId !== undefined\n            ? state.cardset.present.fields[state.cardset.present.activeCardId][state.cardset.present.activeFieldId]\n            : undefined;\n\n    return {\n        activeField,\n        activeCardId: state.cardset.present.activeCardId,\n        fields: state.cardset.present.fields,\n        fieldsAllIds: state.cardset.present.fieldsAllIds,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarMeasurements);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport { State } from '../reducers';\nimport {\n    cardSetChangeHeight,\n    cardSetChangeIsTwoSided,\n    cardSetChangeSnappingDistance,\n    cardSetChangeWidth,\n    cardSetSetZoom,\n} from '../actions';\nimport style from './SidebarSettings.module.css';\n\ninterface StateProps {\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    snappingDistance: number;\n    zoom: number;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\ninterface LocalState {\n    maintainAspectRatio: boolean;\n    resizeContent: boolean;\n}\n\nexport class SidebarSettings extends Component<Props, LocalState> {\n    state: LocalState = {\n        maintainAspectRatio: true,\n        resizeContent: false,\n    };\n\n    handleWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        const { maintainAspectRatio, resizeContent } = this.state;\n        dispatch(cardSetChangeWidth(parseFloat(event.target.value), maintainAspectRatio, resizeContent));\n    };\n\n    handleHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        const { maintainAspectRatio, resizeContent } = this.state;\n        dispatch(cardSetChangeHeight(parseFloat(event.target.value), maintainAspectRatio, resizeContent));\n    };\n\n    handleIsTwoSidedChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeIsTwoSided(event.target.checked));\n    };\n\n    handleZoom = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetSetZoom(parseFloat(event.target.value)));\n    };\n\n    handleSnappingDistance = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeSnappingDistance(parseFloat(event.target.value)));\n    };\n\n    render() {\n        const { width, height, isTwoSided, snappingDistance, visible, zoom } = this.props;\n        const { maintainAspectRatio, resizeContent } = this.state;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'initial' : 'none' }}>\n                <label htmlFor=\"card_width\">Card width (mm):</label>\n                <input\n                    id=\"card_width\"\n                    type=\"number\"\n                    min=\"0\"\n                    step=\"0.1\"\n                    onChange={this.handleWidthChange}\n                    className=\"form-control\"\n                    placeholder=\"width\"\n                    value={width}\n                />\n                <label htmlFor=\"card_height\">Card height (mm):</label>\n                <input\n                    id=\"card_height\"\n                    type=\"number\"\n                    min=\"0\"\n                    step=\"0.1\"\n                    onChange={this.handleHeightChange}\n                    className=\"form-control\"\n                    placeholder=\"height\"\n                    value={height}\n                />\n                <div>\n                    <label>\n                        Maintain aspect ratio:{' '}\n                        <input\n                            type=\"checkbox\"\n                            onChange={() => {\n                                this.setState({ maintainAspectRatio: !maintainAspectRatio });\n                            }}\n                            className=\"form-control\"\n                            checked={maintainAspectRatio}\n                        />\n                    </label>\n                </div>\n\n                <div>\n                    <label>\n                        Resize content:{' '}\n                        <input\n                            type=\"checkbox\"\n                            onChange={() => {\n                                this.setState({ resizeContent: !resizeContent });\n                            }}\n                            className=\"form-control\"\n                            checked={resizeContent}\n                        />\n                    </label>\n                </div>\n\n                <label>\n                    Cards have two sides:{' '}\n                    <input\n                        type=\"checkbox\"\n                        onChange={this.handleIsTwoSidedChange}\n                        className=\"form-control\"\n                        checked={isTwoSided}\n                    />\n                </label>\n                <div>\n                    <label htmlFor=\"zoom\">Zoom (if you want to see details or big picture)</label>\n                    <input\n                        id=\"zoom\"\n                        type=\"number\"\n                        min=\"0.1\"\n                        step=\"0.1\"\n                        onChange={this.handleZoom}\n                        className=\"form-control\"\n                        placeholder=\"zoom\"\n                        value={zoom}\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"zoom\">Snapping distance in mm. 0 to disable.</label>\n                    <input\n                        id=\"zoom\"\n                        type=\"number\"\n                        min=\"0\"\n                        step=\"0.1\"\n                        onChange={this.handleSnappingDistance}\n                        className=\"form-control\"\n                        placeholder=\"Snapping distance\"\n                        value={snappingDistance}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        width: state.cardset.present.width,\n        height: state.cardset.present.height,\n        isTwoSided: state.cardset.present.isTwoSided,\n        snappingDistance: state.cardset.present.snappingDistance,\n        zoom: state.cardset.present.zoom,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarSettings);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport WebFont from 'webfontloader';\n\nimport { DEFAULT_LINE_HEIGHT } from '../constants';\nimport {\n    Dispatch,\n    cardSetChangeActiveTextFieldFontFamilyAndVariant,\n    cardSetChangeActiveTextFieldFontSize,\n    cardSetChangeActiveTextFieldFontVariant,\n    cardSetChangeActiveTextFieldLineHeight,\n} from '../actions';\nimport { State } from '../reducers';\nimport style from './FontSelector.module.css';\nimport webfonts from './webfonts.json';\n\ninterface WebFontsInfo {\n    [propName: string]: {\n        [propName: string]: string;\n    };\n}\n\ninterface FontOption {\n    value: string;\n    label: string;\n}\n\nconst options: FontOption[] = Object.keys(webfonts)\n    .sort()\n    .map(fi => ({ value: fi, label: fi }));\n\ninterface StateProps {\n    activeFont: string;\n    activeFontVariant: string;\n    activeFontSize: number;\n    activeLineHeight: number;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = StateProps & DispatchProps;\n\nclass FontSelector extends Component<Props> {\n    getFontStringForLoad = (family: string, variant: string) => {\n        let stringForLoad = family;\n        if (variant !== 'regular') {\n            stringForLoad += ':' + variant;\n        }\n        return stringForLoad;\n    };\n\n    handleChange = (selectedOption?: FontOption | FontOption[] | null) => {\n        if (!selectedOption) return;\n\n        const fontFamily = (selectedOption as FontOption).value;\n\n        let fontVariant = this.props.activeFontVariant;\n        const wf: WebFontsInfo = webfonts;\n        if (!(fontVariant in wf[fontFamily])) {\n            fontVariant = Object.keys(wf[fontFamily]).sort()[0];\n        }\n\n        WebFont.load({\n            google: {\n                families: [this.getFontStringForLoad(fontFamily, fontVariant)],\n            },\n            active: () => {\n                const { dispatch } = this.props;\n                dispatch(cardSetChangeActiveTextFieldFontFamilyAndVariant(fontFamily, fontVariant));\n            },\n        });\n    };\n\n    handleFontVariantChange = (selectedOption?: FontOption | FontOption[] | null) => {\n        if (!selectedOption) return;\n\n        const value = (selectedOption as FontOption).value;\n        WebFont.load({\n            google: {\n                families: [this.getFontStringForLoad(this.props.activeFont, value)],\n            },\n            active: () => {\n                const { dispatch } = this.props;\n                dispatch(cardSetChangeActiveTextFieldFontVariant(value));\n            },\n        });\n    };\n\n    handleFontSizeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeActiveTextFieldFontSize(parseFloat(event.target.value)));\n    };\n\n    handleLineHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeActiveTextFieldLineHeight(parseFloat(event.target.value)));\n    };\n\n    render() {\n        const selectedFontFamily = options.find(f => f.value === this.props.activeFont);\n\n        const fontVariantOptions: FontOption[] = Object.keys((webfonts as WebFontsInfo)[this.props.activeFont])\n            .sort()\n            .map(fv => ({ value: fv, label: fv }));\n\n        const selectedFontVariant = fontVariantOptions.find(f => f.value === this.props.activeFontVariant);\n\n        return (\n            <>\n                <input\n                    type=\"number\"\n                    value={this.props.activeFontSize}\n                    onChange={this.handleFontSizeChange}\n                    title=\"Font size\"\n                />\n                <Select\n                    className={style.fontFamily}\n                    value={selectedFontFamily}\n                    onChange={this.handleChange}\n                    options={options}\n                />\n                <Select\n                    className={style.fontVariant}\n                    value={selectedFontVariant}\n                    onChange={this.handleFontVariantChange}\n                    options={fontVariantOptions}\n                />\n                <input\n                    type=\"number\"\n                    value={this.props.activeLineHeight}\n                    onChange={this.handleLineHeightChange}\n                    title=\"Line height\"\n                    step=\"0.01\"\n                />\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    let activeFont = state.cardset.present.textSettings.fontFamily;\n    let activeFontVariant = state.cardset.present.textSettings.fontVariant;\n    let activeFontSize = state.cardset.present.textSettings.fontSize;\n    let activeLineHeight = state.cardset.present.textSettings.lineHeight || DEFAULT_LINE_HEIGHT;\n\n    return {\n        activeFont,\n        activeFontVariant,\n        activeFontSize,\n        activeLineHeight,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, {}, State>(mapStateToProps)(FontSelector);\n","import { ColorResult } from 'react-color';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, SidebarOwnProps, FieldInfo } from '../types';\nimport { State } from '../reducers';\nimport {\n    cardSetAddTextField,\n    cardSetChangeActiveFieldName,\n    cardSetChangeActiveTextFieldAlign,\n    cardSetLockActiveField,\n    cardSetLowerActiveFieldToBottom,\n    cardSetRaiseActiveFieldToTop,\n    cardSetRemoveActiveField,\n    cardSetUnlockActiveField,\n    cardSetChangeActiveTextFieldColor,\n    cardSetRaiseActiveField,\n    cardSetLowerActiveField,\n} from '../actions';\nimport ColorButton from './ColorButton';\nimport FontSelector from './FontSelector';\nimport style from './SidebarText.module.css';\n\ninterface StateProps {\n    isAuthenticated: boolean;\n    activeField?: FieldInfo;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarText extends Component<Props> {\n    handleAddTextClick = () => {\n        const { dispatch } = this.props;\n        dispatch(cardSetAddTextField());\n    };\n\n    handleSetTextAlignLeft = () => {\n        const selection = window.getSelection();\n        const range = selection.getRangeAt(0);\n        if (selection.rangeCount === 1 && range.collapsed) {\n            const { dispatch } = this.props;\n            dispatch(cardSetChangeActiveTextFieldAlign('left'));\n        } else {\n            document.execCommand('justifyleft');\n        }\n    };\n\n    handleSetTextAlignCenter = () => {\n        const selection = window.getSelection();\n        const range = selection.getRangeAt(0);\n        if (selection.rangeCount === 1 && range.collapsed) {\n            const { dispatch } = this.props;\n            dispatch(cardSetChangeActiveTextFieldAlign('center'));\n        } else {\n            document.execCommand('justifycenter');\n        }\n    };\n\n    handleSetTextAlignRight = () => {\n        const selection = window.getSelection();\n        const range = selection.getRangeAt(0);\n        if (selection.rangeCount === 1 && range.collapsed) {\n            const { dispatch } = this.props;\n            dispatch(cardSetChangeActiveTextFieldAlign('right'));\n        } else {\n            document.execCommand('justifyright');\n        }\n    };\n\n    handleSetTextBold = () => {\n        document.execCommand('bold');\n    };\n\n    handleSetTextItalic = () => {\n        document.execCommand('italic');\n    };\n\n    handleRemoveClick = () => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            dispatch(cardSetRemoveActiveField());\n        }\n    };\n\n    handleRaise = (event: React.MouseEvent) => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            if (event.ctrlKey) {\n                dispatch(cardSetRaiseActiveFieldToTop());\n            } else {\n                dispatch(cardSetRaiseActiveField());\n            }\n        }\n    };\n\n    handleLower = (event: React.MouseEvent) => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            if (event.ctrlKey) {\n                dispatch(cardSetLowerActiveFieldToBottom());\n            } else {\n                dispatch(cardSetLowerActiveField());\n            }\n        }\n    };\n\n    handleLockField = () => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            dispatch(cardSetLockActiveField());\n        }\n    };\n\n    handleUnlockField = () => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            dispatch(cardSetUnlockActiveField());\n        }\n    };\n\n    handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        const name = event.target.value.trim();\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeActiveFieldName(name));\n        }\n    };\n\n    handleColorChange = (color: ColorResult) => {\n        const selection = window.getSelection();\n        const range = selection.getRangeAt(0);\n        if (selection.rangeCount === 1 && range.collapsed) {\n            const { dispatch } = this.props;\n            dispatch(cardSetChangeActiveTextFieldColor(color.hex));\n        } else {\n            document.execCommand('forecolor', false, color.hex);\n        }\n    };\n\n    render() {\n        const { activeField, visible } = this.props;\n\n        let color = '#000000';\n        if (activeField && activeField.type === 'text' && activeField.color) {\n            color = activeField.color;\n        }\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'initial' : 'none' }}>\n                <button onClick={this.handleAddTextClick} title=\"Add text field\">\n                    <i className=\"material-icons\">text_fields</i>\n                </button>\n                {activeField !== undefined && (\n                    <>\n                        <button onClick={this.handleRaise} title=\"Raise text (with Ctrl - raise to top)\">\n                            <i className=\"material-icons\">arrow_upward</i>\n                        </button>\n                        <button onClick={this.handleLower} title=\"Lower text (with Ctrl - lower to bottom)\">\n                            <i className=\"material-icons\">arrow_downward</i>\n                        </button>\n                    </>\n                )}\n\n                {activeField !== undefined && !activeField.locked && (\n                    <button\n                        onClick={this.handleLockField}\n                        title=\"Lock text field. Locked field can't be dragged, rotated, resized and removed.\"\n                    >\n                        <i className=\"material-icons\">lock_open</i>\n                    </button>\n                )}\n\n                {activeField !== undefined && activeField.locked && (\n                    <button\n                        onClick={this.handleUnlockField}\n                        title=\"Unlock text field. Unlocked text field can be dragged, rotated, resized and removed.\"\n                    >\n                        <i className=\"material-icons\">lock</i>\n                    </button>\n                )}\n\n                <button\n                    className={activeField === undefined || activeField.locked ? style.disabled : ''}\n                    onClick={this.handleRemoveClick}\n                    title=\"Remove field\"\n                >\n                    <i className=\"material-icons\">remove</i>\n                </button>\n\n                {activeField !== undefined && (\n                    <input\n                        type=\"text\"\n                        value={activeField.name || ''}\n                        placeholder={activeField.id}\n                        onChange={this.handleNameChange}\n                        title=\"Change name of text field.\"\n                    />\n                )}\n\n                <div>\n                    <button onClick={this.handleSetTextAlignLeft} title=\"Align text left\">\n                        <i className=\"material-icons\">format_align_left</i>\n                    </button>\n                    <button onClick={this.handleSetTextAlignCenter} title=\"Align text center\">\n                        <i className=\"material-icons\">format_align_center</i>\n                    </button>\n                    <button onClick={this.handleSetTextAlignRight} title=\"Align text right\">\n                        <i className=\"material-icons\">format_align_right</i>\n                    </button>\n                    <button onClick={this.handleSetTextBold} title=\"Makes selected text bold\">\n                        <i className=\"material-icons\">format_bold</i>\n                    </button>\n                    <button onClick={this.handleSetTextItalic} title=\"Makes selected text italic\">\n                        <i className=\"material-icons\">format_italic</i>\n                    </button>\n                    <ColorButton color={color} onChange={this.handleColorChange} />\n                    <FontSelector />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    const activeField =\n        state.cardset.present.activeCardId !== undefined && state.cardset.present.activeFieldId !== undefined\n            ? state.cardset.present.fields[state.cardset.present.activeCardId][state.cardset.present.activeFieldId]\n            : undefined;\n\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        activeField,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarText);\n","import 'filepond/dist/filepond.min.css';\n\nimport './SidebarUpload.css';\n\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport { connect } from 'react-redux';\nimport FilePondPluginFileValidateSize from 'filepond-plugin-file-validate-size';\nimport FilePondPluginFileValidateType from 'filepond-plugin-file-validate-type';\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport {\n    FPAbortCallback,\n    FPErrorCallback,\n    FPLoadCallback,\n    FPProgressCallback,\n    FPRevertLoadCallback,\n    cardSetDeleteImage,\n    cardSetUploadImage,\n} from '../actions';\nimport { State } from '../reducers';\nimport style from './SidebarUpload.module.css';\n\nregisterPlugin(FilePondPluginFileValidateSize);\nregisterPlugin(FilePondPluginFileValidateType);\n\ninterface StateProps {\n    activeGame: string | null;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarUpload extends Component<Props> {\n    handleProcess = (\n        fieldName: string,\n        file: File,\n        metadata: { [propName: string]: string },\n        load: FPLoadCallback,\n        error: FPErrorCallback,\n        progress: FPProgressCallback,\n        abort: FPAbortCallback,\n    ) => {\n        const { dispatch, activeGame } = this.props;\n\n        if (activeGame === null) {\n            abort();\n            return;\n        }\n\n        let source = axios.CancelToken.source();\n\n        dispatch(cardSetUploadImage(activeGame, file, load, error, progress, abort, source.token));\n\n        return { abort: source.cancel };\n    };\n\n    handleRevert = (uniqueFileId: string, load: FPRevertLoadCallback, error: FPErrorCallback) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetDeleteImage(uniqueFileId, load, error));\n    };\n\n    render() {\n        const { visible } = this.props;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'grid' : 'none' }}>\n                <div>\n                    Uploaded imaged are kept for limited time. If they are deleted then simply re-upload them again.\n                </div>\n                <FilePond\n                    allowMultiple={true}\n                    server={{\n                        process: this.handleProcess,\n                        revert: this.handleRevert,\n                    }}\n                    acceptedFileTypes={['image/png', 'image/jpeg', 'image/svg+xml']}\n                    allowFileSizeValidation={true}\n                    maxFileSize=\"500KB\"\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        activeGame: state.games.active,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarUpload);\n","import { connect, ConnectedComponentClass } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport { SidebarState, cardSetSetSidebarState } from '../actions';\nimport { State } from '../reducers';\nimport SidebarDetails from './SidebarDetails';\nimport SidebarGeneratePng from './SidebarGeneratePng';\nimport SidebarGeneratePdf from './SidebarGeneratePdf';\nimport SidebarImage from './SidebarImage';\nimport SidebarImportExport from './SidebarImportExport';\nimport SidebarMeasurements from './SidebarMeasurements';\nimport SidebarSettings from './SidebarSettings';\nimport SidebarText from './SidebarText';\nimport SidebarUpload from './SidebarUpload';\nimport style from './Sidebar.module.css';\n\ninterface StateProps {\n    isAuthenticated: boolean;\n    activeSidebar: SidebarState | null;\n}\n\ntype Props = StateProps & DispatchProps;\n\ninterface SidebarInfo {\n    state: SidebarState;\n    title: string;\n    icon: string;\n    component: ConnectedComponentClass<typeof Component, SidebarOwnProps>;\n}\n\nconst SIDEBARS: SidebarInfo[] = [\n    {\n        state: SidebarState.Settings,\n        title: 'Settings',\n        icon: 'settings',\n        component: SidebarSettings,\n    },\n    {\n        state: SidebarState.Details,\n        title: 'Details',\n        icon: 'details',\n        component: SidebarDetails,\n    },\n    {\n        state: SidebarState.Measurements,\n        title: 'Measurements',\n        icon: 'format_shapes',\n        component: SidebarMeasurements,\n    },\n    {\n        state: SidebarState.Image,\n        title: 'Images',\n        icon: 'photo',\n        component: SidebarImage,\n    },\n    {\n        state: SidebarState.Text,\n        title: 'Texts',\n        icon: 'text_fields',\n        component: SidebarText,\n    },\n    {\n        state: SidebarState.Upload,\n        title: 'Upload',\n        icon: 'cloud_upload',\n        component: SidebarUpload,\n    },\n    {\n        state: SidebarState.ImportExport,\n        title: 'Import/Export',\n        icon: 'import_export',\n        component: SidebarImportExport,\n    },\n    {\n        state: SidebarState.Png,\n        title: 'Generate as PNG',\n        icon: 'photo_library',\n        component: SidebarGeneratePng,\n    },\n    {\n        state: SidebarState.Pdf,\n        title: 'Generate as PDF',\n        icon: 'picture_as_pdf',\n        component: SidebarGeneratePdf,\n    },\n];\n\nexport class Sidebar extends Component<Props> {\n    handleSidebar = (state: SidebarState) => {\n        const { activeSidebar, dispatch } = this.props;\n        if (activeSidebar === state) {\n            dispatch(cardSetSetSidebarState(null));\n        } else {\n            dispatch(cardSetSetSidebarState(state));\n        }\n    };\n\n    render() {\n        const { activeSidebar } = this.props;\n        return (\n            <div className={style.sidebar}>\n                <div className={style.controls}>\n                    {SIDEBARS.map(sb => (\n                        <i\n                            key={sb.state}\n                            title={sb.title}\n                            className={`material-icons ${activeSidebar === sb.state ? style.active : ''}`}\n                            onClick={() => this.handleSidebar(sb.state)}\n                        >\n                            {sb.icon}\n                        </i>\n                    ))}\n                </div>\n                <div className={`${style.view} ${activeSidebar === null ? style.hidden : ''}`}>\n                    {SIDEBARS.map(sb => (\n                        <sb.component key={sb.state} visible={activeSidebar === sb.state} />\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        activeSidebar: state.cardset.present.activeSidebar,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, {}, State>(mapStateToProps)(Sidebar);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport shortid from 'shortid';\n\nimport { ACTIVITY_SELECTING, State } from '../reducers';\nimport { BLEED_WIDTH } from '../constants';\nimport { CardSetType, CardType, CardsCollection } from '../types';\nimport {\n    Dispatch,\n    cardSetActiveCardAndField,\n    cardSetCreateCard,\n    cardSetRenameRequest,\n    cardSetUndo,\n    cardSetRedo,\n} from '../actions';\nimport Card from './Card';\nimport EditableTitle from './EditableTitle';\nimport KawaiiMessage, { Character } from './KawaiiMessage';\nimport Loader from './Loader';\nimport Sidebar from './Sidebar';\nimport style from './CardSet.module.css';\n\ninterface StateProps {\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    isAuthenticated: boolean;\n    cardsAllIds: string[];\n    cardsById: CardsCollection;\n    activity: number;\n    zoom: number;\n    activeCardSet: CardSetType | null;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = StateProps & DispatchProps;\n\ninterface LocalState {\n    pageWidth: number;\n    pageHeight: number;\n    topBottomMargin: number;\n    leftRightMargin: number;\n}\n\nexport class CardSet extends Component<Props, LocalState> {\n    state = {\n        pageWidth: 210,\n        pageHeight: 297,\n        topBottomMargin: 15,\n        leftRightMargin: 9,\n    };\n\n    componentDidMount() {\n        window.addEventListener('keydown', this.keyDown);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('keydown', this.keyDown);\n    }\n\n    keyDown = (event: KeyboardEvent) => {\n        const { dispatch } = this.props;\n\n        switch (event.key) {\n            case 'z':\n            case 'Z': {\n                if (event.ctrlKey && event.shiftKey) {\n                    dispatch(cardSetRedo());\n                } else if (event.ctrlKey) {\n                    dispatch(cardSetUndo());\n                }\n                break;\n            }\n            case 'y':\n            case 'Y': {\n                if (event.ctrlKey) {\n                    dispatch(cardSetRedo());\n                }\n                break;\n            }\n            // no default\n        }\n    };\n\n    handleCreateCardClick = () => {\n        const { dispatch } = this.props;\n\n        const newCard: CardType = { id: shortid.generate(), count: 1 };\n\n        dispatch(cardSetCreateCard(newCard));\n    };\n\n    handleClickOutsideOfCard = () => {\n        const { dispatch } = this.props;\n        dispatch(cardSetActiveCardAndField(undefined, false, undefined));\n    };\n\n    handleCardSetNameChange = (newName: string) => {\n        const { dispatch, activeCardSet } = this.props;\n        if (activeCardSet !== null) {\n            dispatch(cardSetRenameRequest(activeCardSet.id, newName));\n        }\n    };\n\n    render() {\n        const {\n            isAuthenticated,\n            cardsAllIds,\n            cardsById,\n            width,\n            height,\n            isTwoSided,\n            activity,\n            zoom,\n            activeCardSet,\n        } = this.props;\n\n        const widthWithBleeds = width + BLEED_WIDTH * 2;\n        const heightWithBleeds = height + BLEED_WIDTH * 2;\n\n        return (\n            isAuthenticated && (\n                <div>\n                    <KawaiiMessage character={Character.Ghost}>\n                        <p>Here you can design your cards.</p>\n                    </KawaiiMessage>\n\n                    {activeCardSet !== null && (\n                        <EditableTitle title={activeCardSet.name} onChange={this.handleCardSetNameChange} />\n                    )}\n\n                    <div className={style.cardsetview}>\n                        <div className={style.sidebar}>\n                            <Sidebar />\n                        </div>\n                        <div onMouseDown={this.handleClickOutsideOfCard} onTouchStart={this.handleClickOutsideOfCard}>\n                            {(activity & ACTIVITY_SELECTING) === ACTIVITY_SELECTING && <Loader />}\n                            <div className={style.cardset}>\n                                <ul\n                                    style={{\n                                        gridTemplateColumns: `repeat(auto-fill, minmax(${widthWithBleeds *\n                                            zoom}mm, 1fr))`,\n                                    }}\n                                >\n                                    {cardsAllIds &&\n                                        cardsAllIds.map(cardId => [\n                                            <li key={cardId}>\n                                                <Card card={cardsById[cardId]} isBack={false} />\n                                            </li>,\n                                            isTwoSided && (\n                                                <li key={`${cardId}back`}>\n                                                    <Card card={cardsById[cardId]} isBack={true} />\n                                                </li>\n                                            ),\n                                        ])}\n                                    <li key=\"newCard\">\n                                        <div\n                                            id=\"newCard\"\n                                            className={style.createCard}\n                                            style={{\n                                                width: `${widthWithBleeds * zoom}mm`,\n                                                height: `${heightWithBleeds * zoom}mm`,\n                                                position: 'relative',\n                                                overflow: 'hidden',\n                                            }}\n                                            onClick={this.handleCreateCardClick}\n                                        >\n                                            <div>\n                                                <i className=\"material-icons\">add</i>\n                                                <div>Add Card</div>\n                                            </div>\n                                        </div>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        activity: state.cardset.present.activity,\n        width: state.cardset.present.width,\n        height: state.cardset.present.height,\n        isTwoSided: state.cardset.present.isTwoSided,\n        zoom: state.cardset.present.zoom,\n        isAuthenticated: state.auth.isAuthenticated,\n        cardsAllIds: state.cardset.present.cardsAllIds,\n        cardsById: state.cardset.present.cardsById,\n        activeCardSet:\n            state.cardsets.active && state.cardsets.byId[state.cardsets.active]\n                ? state.cardsets.byId[state.cardsets.active]\n                : null,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, {}, State>(mapStateToProps)(CardSet);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, cardSetSelectRequest } from './actions';\nimport { State } from './reducers';\nimport CardSet from './components/CardSet';\n\ninterface Props {\n    dispatch: Dispatch;\n    match: { params: { id: string } };\n    isAuthenticated: boolean;\n}\n\nexport class CardSetPage extends Component<Props> {\n    componentDidMount() {\n        const { dispatch, match } = this.props;\n        dispatch(cardSetSelectRequest(match.params.id));\n    }\n\n    render() {\n        return <CardSet />;\n    }\n}\n\nconst mapStateToProps = (state: State) => ({ isAuthenticated: state.auth.isAuthenticated });\n\nexport default connect(mapStateToProps)(CardSetPage);\n","import React, { Component } from 'react';\n\nexport default class ChangelogPage extends Component {\n    render() {\n        return (\n            <div>\n                <p>Here you can find list of future plans and what was implemented recently.</p>\n                <h2>Future plans</h2>\n                <ul>\n                    <li>Generating list of author's of icons if attribution is required.</li>\n                    <li>Card templates.</li>\n                    <li>Keyboard shortcuts.</li>\n                    <li>Possibility to order your games for printing from various printing providers.</li>\n                </ul>\n                <h2>2019-06-08</h2>\n                <ul>\n                    <li>\"Apply to all cards\" work on pan and zoom as well.</li>\n                    <li>UX on mobile devices (e.g. phones) improved.</li>\n                    <li>Other minor fixes.</li>\n                </ul>\n                <h2>2019-06-04</h2>\n                <ul>\n                    <li>Possibility to zoom in and pan imaged added.</li>\n                    <li>Undo/Redo using Ctrl+Z and Ctrl+Y (or Ctrl+Shift+Z).</li>\n                    <li>More small improvements and bug fixes.</li>\n                </ul>\n                <h2>2019-05-26</h2>\n                <ul>\n                    <li>\n                        Text rendering fixes.\n                    </li>\n                    <li>\n                        Card Sets and Games list are sorted alphabetically now.\n                    </li>\n                    <li>\n                        Image handling improvements.\n                    </li>\n                </ul>\n                <h2>2019-05-18</h2>\n                <ul>\n                    <li>\n                        PDF and PNG generation improvements.\n                    </li>\n                </ul>\n                <h2>2019-05-17</h2>\n                <ul>\n                    <li>\n                        PNG generation for card set or the whole game. This will benefit if you want to publish game via{' '}\n                        <a href=\"https://www.thegamecrafter.com/\">The Game Crafter</a>,{' '}\n                        <a href=\"makeplayingcards.com\">Make Playing Cards</a> or any other place.\n                    </li>\n                </ul>\n                <h2>2019-04-13</h2>\n                <ul>\n                    <li>Option to generate cutting marks on front side only.</li>\n                    <li>Guillotine cuttings marks on card edges.</li>\n                    <li>\n                        Field move limitation is removed because if drag field outside of view you can return it using\n                        custom positions and size controls.\n                    </li>\n                    <li>Drag and drop improvement.</li>\n                </ul>\n                <h2>2019-04-07</h2>\n                <ul>\n                    <li>Snapping implemented for move, rotation and resize operations.</li>\n                    <li>Image search changes and improvements.</li>\n                    <li>\n                        Drag&Drop support for images. Images can be dropped to text field as well but it is assumed that\n                        dropped images are square when generating PDF.\n                    </li>\n                    <li>Bold and Italic support in text added.</li>\n                    <li>Other minor fixes.</li>\n                </ul>\n                <h2>2019-03-22</h2>\n                <ul>\n                    <li>Two-sided cards.</li>\n                    <li>PDF generation for all the game.</li>\n                    <li>More PDF generation options added</li>\n                    <li>Change color of images (for SVG images only, e.g. try using with \"forms\" images).</li>\n                    <li>Game rename and delete</li>\n                    <li>Card Set rename and delete</li>\n                    <li>Text: line height support</li>\n                    <li>UI/UX improvements</li>\n                </ul>\n                <h2>2019-03-03</h2>\n                <ul>\n                    <li>Data import/export in JSON and CSV formats.</li>\n                    <li>\n                        Named fields. If multiple fields have the same name then by editing one you change value in all\n                        of them. As well named fields look better in data export/import.\n                    </li>\n                </ul>\n\n                <h2>2019-03-02</h2>\n                <ul>\n                    <li>You can upload your own images now. Images are limited.</li>\n                    <li>\n                        Image order support added. E.g.: now you can upload background image and lower it to the bottom.\n                    </li>\n                    <li>Progress indicators and user messages improvements.</li>\n                </ul>\n\n                <h2>2019-02-24</h2>\n                <ul>\n                    <li>Sidebar created for lighter, cleaner and faster UI.</li>\n                    <li>Zoom added to card set for more flexibility while viewing or editing.</li>\n                </ul>\n                <h2>2019-02-23</h2>\n                <ul>\n                    <li>Text rendering changed and should be working properly now.</li>\n                    <li>Crash with new card set fixed.</li>\n                    <li>Minor UI improvements.</li>\n                </ul>\n                <h2>2019-02-17</h2>\n                <p>Initial public version.</p>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\nimport { reportError } from './utils';\n\nwindow.addEventListener('error', function(evt: ErrorEvent) {\n    if (process.env.NODE_ENV === 'production') {\n        let error = evt.error;\n        reportError(`${error.message} ${error.stack}`);\n    }\n});\n\ninterface Props {\n    children: React.ReactNode;\n}\n\ninterface State {\n    hasError: boolean;\n}\n\nexport default class ErrorBoundary extends Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    componentDidCatch(error: Error | null, info: object) {\n        this.setState({ hasError: true });\n        if (process.env.NODE_ENV === 'production') {\n            if (error !== null) {\n                reportError(`${error.message} ${error.stack}`);\n            } else {\n                reportError(`No error: ${info}`);\n            }\n        }\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return (\n                <KawaiiMessage character={Character.Browser} mood=\"ko\">\n                    Something unexpected has happened. If you want this problem to be fixed write me to{' '}\n                    <a href=\"mailto:dalius@ffff.lt\">dalius@ffff.lt</a>.\n                </KawaiiMessage>\n            );\n        }\n        return this.props.children;\n    }\n}\n","import React, { Component } from 'react';\nimport style from './ConfirmedDelete.module.css';\n\ninterface Props {\n    question: string;\n    onDelete: () => void;\n}\n\nexport default class ConfirmedDelete extends Component<Props> {\n    state = {\n        deleteClicked: false,\n    };\n\n    handleRemove = () => {\n        this.setState({ deleteClicked: !this.state.deleteClicked });\n    };\n\n    handleYes = () => {\n        this.setState({ deleteClicked: false });\n        this.props.onDelete();\n    };\n\n    handleNo = () => {\n        this.setState({ deleteClicked: false });\n    };\n\n    render() {\n        const { deleteClicked } = this.state;\n        const { question } = this.props;\n\n        return (\n            <>\n                <i title=\"Remove\" className={`material-icons ${style.button}`} onClick={this.handleRemove}>\n                    remove_circle_outline\n                </i>{' '}\n                {deleteClicked && (\n                    <>\n                        {question}{' '}\n                        <span className={style.answer} onClick={this.handleYes}>\n                            Yes\n                        </span>{' '}\n                        /{' '}\n                        <span className={style.answer} onClick={this.handleNo}>\n                            No\n                        </span>\n                    </>\n                )}\n            </>\n        );\n    }\n}\n","import { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { CardSetsCollection, GameType, IdsArray } from '../types';\nimport {\n    Dispatch,\n    cardSetCreateRequest,\n    cardSetDeleteRequest,\n    gameRenameRequest,\n    messageDisplay,\n    gameCreatePngRequest,\n} from '../actions';\nimport { State, ACTIVITY_CREATING_PNG } from '../reducers';\nimport ConfirmedDelete from './ConfirmedDelete';\nimport EditableTitle from './EditableTitle';\nimport KawaiiMessage, { Character } from './KawaiiMessage';\nimport PDFGenerator from './PDFGenerator';\nimport style from './CardSets.module.css';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated: boolean;\n    activeGame: GameType | null;\n    allIds: IdsArray;\n    byId: CardSetsCollection;\n    isCreatingPng: boolean;\n}\n\ninterface LocalState {\n    cardSetName: string;\n    width: number;\n    height: number;\n    dpi: number;\n}\n\nexport class CardSets extends Component<Props, LocalState> {\n    state: LocalState = {\n        cardSetName: '',\n        width: 63.5,\n        height: 88.9,\n        dpi: 300,\n    };\n\n    handleGameNameChange = (newName: string) => {\n        const { dispatch, activeGame } = this.props;\n        if (activeGame !== null) {\n            dispatch(gameRenameRequest(activeGame.id, newName));\n        }\n    };\n\n    handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ cardSetName: event.target.value });\n    };\n\n    handleWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ width: parseFloat(event.target.value) });\n    };\n\n    handleHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ height: parseFloat(event.target.value) });\n    };\n\n    handleCreateCardSetClick = () => {\n        const { dispatch, activeGame } = this.props;\n\n        if (activeGame === null) {\n            return;\n        }\n\n        const cardSetName = this.state.cardSetName.trim();\n\n        if (cardSetName) {\n            dispatch(cardSetCreateRequest(cardSetName, this.state.width, this.state.height, activeGame.id));\n        } else {\n            dispatch(messageDisplay('error', 'Card Set name should be non empty.'));\n        }\n    };\n\n    handleCardSetDelete = (cardSetId: string) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetDeleteRequest(cardSetId));\n    };\n\n    handleDpiChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ dpi: parseInt(event.target.value) });\n    };\n\n    handleGenerate = () => {\n        const { dispatch, activeGame } = this.props;\n        const { dpi } = this.state;\n\n        if (activeGame !== null) {\n            dispatch(gameCreatePngRequest(dpi, 'games', activeGame.id));\n        }\n    };\n\n    render() {\n        const { isAuthenticated, activeGame, allIds, byId, isCreatingPng } = this.props;\n        const { dpi } = this.state;\n\n        let cardsets = allIds.map(cardsetId => byId[cardsetId]);\n        cardsets.sort((a, b) => (a.name < b.name ? -1 : 1));\n\n        const cardsetItems = cardsets.map(cardset => (\n            <li key={cardset.id}>\n                <Link to={`/cardset/${cardset.id}`}>{cardset.name}</Link>{' '}\n                <ConfirmedDelete\n                    question=\"Do you really want to delete this card set?\"\n                    onDelete={() => this.handleCardSetDelete(cardset.id)}\n                />\n            </li>\n        ));\n\n        return (\n            isAuthenticated &&\n            activeGame !== null && (\n                <div className={style.cardsets}>\n                    <KawaiiMessage character={Character.Ghost}>\n                        Each game is made from card sets. Card set is collection of cards that share the same properties\n                        but have different text and images.\n                    </KawaiiMessage>\n\n                    <EditableTitle title={activeGame.name} onChange={this.handleGameNameChange} />\n\n                    <ul>{cardsetItems}</ul>\n\n                    <div className=\"form\">\n                        <label htmlFor=\"cardset_name\">Card Set name:</label>\n                        <input\n                            id=\"cardset_name\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            className=\"form-control\"\n                            placeholder=\"Card Set name\"\n                        />\n                        <label htmlFor=\"card_width\">Card width:</label>\n                        <input\n                            id=\"card_width\"\n                            type=\"number\"\n                            min=\"0\"\n                            step=\"0.1\"\n                            onChange={this.handleWidthChange}\n                            className=\"form-control\"\n                            placeholder=\"Card width\"\n                            value={this.state.width}\n                        />\n                        <label htmlFor=\"card_height\">Card height:</label>\n                        <input\n                            id=\"card_height\"\n                            type=\"number\"\n                            min=\"0\"\n                            step=\"0.1\"\n                            onChange={this.handleHeightChange}\n                            className=\"form-control\"\n                            placeholder=\"Card height\"\n                            value={this.state.height}\n                        />\n                        <button onClick={this.handleCreateCardSetClick}>Create Card Set</button>\n                    </div>\n\n                    <KawaiiMessage character={Character.Ghost} mood=\"excited\">\n                        Hint: Poker card size 63.5mm x 88.9mm. Bridge card size 57.15mm x 88.9mm. But you can have cards\n                        of any size.\n                    </KawaiiMessage>\n\n                    <PDFGenerator type=\"games\" id={activeGame.id} withHelp={true} />\n\n                    <div className=\"form\">\n                        Or you can generate PNG files for all the game:\n                        <label htmlFor=\"dpi\">DPI:</label>\n                        <input\n                            id=\"dpi\"\n                            type=\"number\"\n                            min=\"1\"\n                            step=\"1\"\n                            onChange={this.handleDpiChange}\n                            className=\"form-control\"\n                            placeholder=\"DPI\"\n                            value={dpi}\n                        />\n                        <button disabled={isCreatingPng} onClick={this.handleGenerate}>\n                            Generate PNG files\n                        </button>\n                    </div>\n                </div>\n            )\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        activeGame:\n            state.games.active && state.games.byId[state.games.active] ? state.games.byId[state.games.active] : null,\n        allIds: state.cardsets.allIds,\n        byId: state.cardsets.byId,\n        isCreatingPng: (state.games.activity & ACTIVITY_CREATING_PNG) === ACTIVITY_CREATING_PNG,\n    };\n};\n\nexport default connect(mapStateToProps)(CardSets);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, gameSelectRequest } from './actions';\nimport { State } from './reducers';\nimport CardSets from './components/CardSets';\n\ninterface Props {\n    dispatch: Dispatch;\n    match: { params: { id: string } };\n    isAuthenticated: boolean;\n}\n\nexport class GamePage extends Component<Props> {\n    componentDidMount() {\n        const { dispatch, match } = this.props;\n        dispatch(gameSelectRequest(match.params.id, true));\n    }\n\n    render() {\n        return <CardSets />;\n    }\n}\n\nconst mapStateToProps = (state: State) => ({ isAuthenticated: state.auth.isAuthenticated });\n\nexport default connect(mapStateToProps)(GamePage);\n","import React, { Component } from 'react';\n\ninterface Props {\n    onLogin: (creds: { username: string; password: string }) => void;\n    onLoginFailure: (message: string) => void;\n}\n\ninterface LocalState {\n    username: string;\n    password: string;\n}\n\nexport default class Login extends Component<Props, LocalState> {\n    state = {\n        username: '',\n        password: '',\n    };\n\n    handleUsernameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ username: event.target.value });\n    };\n\n    handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ password: event.target.value });\n    };\n\n    handleSubmit = (event: React.FormEvent) => {\n        const username = this.state.username.trim();\n        const password = this.state.password.trim();\n        if (username && password) {\n            const creds = { username, password };\n            this.props.onLogin(creds);\n        } else {\n            this.props.onLoginFailure('Missing username and/or password.');\n        }\n        event.preventDefault();\n    };\n\n    render() {\n        return (\n            <div>\n                <form className=\"form\" onSubmit={this.handleSubmit}>\n                    <input\n                        type=\"text\"\n                        onChange={this.handleUsernameChange}\n                        className=\"form-control\"\n                        placeholder=\"Username\"\n                    />\n                    <input\n                        type=\"password\"\n                        onChange={this.handlePasswordChange}\n                        className=\"form-control\"\n                        placeholder=\"Password\"\n                    />\n                    <input type=\"submit\" value=\"Login\" />\n                </form>\n            </div>\n        );\n    }\n}\n","import { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, loginRequest, messageDisplay } from './actions';\nimport { State } from './reducers';\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\nimport Login from './components/Login';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated: boolean;\n}\n\nexport class LoginPage extends Component<Props> {\n    render() {\n        const { dispatch, isAuthenticated } = this.props;\n\n        return (\n            <div className=\"App\">\n                {!isAuthenticated && (\n                    <>\n                        <KawaiiMessage character={Character.Ghost}>\n                            Please enter your credentials to login. If you don't have account yet then you can create\n                            one here: <a href=\"/signup\">Sign-up</a>.\n                        </KawaiiMessage>\n\n                        <Login\n                            onLogin={creds => dispatch(loginRequest(creds))}\n                            onLoginFailure={msg => dispatch(messageDisplay('error', msg))}\n                        />\n                    </>\n                )}\n                {isAuthenticated && <Redirect to=\"/\" />}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => ({ isAuthenticated: state.auth.isAuthenticated });\n\nexport default connect(mapStateToProps)(LoginPage);\n","import { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, gameCreateRequest, gameDeleteRequest, messageDisplay } from '../actions';\nimport { GamesCollection, IdsArray } from '../types';\nimport { State } from '../reducers';\nimport ConfirmedDelete from './ConfirmedDelete';\nimport KawaiiMessage, { Character } from './KawaiiMessage';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated: boolean;\n    allIds: IdsArray;\n    byId: GamesCollection;\n}\n\ninterface LocalState {\n    gameName: string;\n}\n\nexport class Games extends Component<Props, LocalState> {\n    state: LocalState = {\n        gameName: '',\n    };\n\n    handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ gameName: event.target.value });\n    };\n\n    handleCreateGameClick = () => {\n        const { dispatch } = this.props;\n\n        const gamename = this.state.gameName.trim();\n        if (gamename) {\n            dispatch(gameCreateRequest(gamename));\n        } else {\n            dispatch(messageDisplay('error', 'Game name should be non empty.'));\n        }\n    };\n\n    handleGameDelete = (gameId: string) => {\n        const { dispatch } = this.props;\n        dispatch(gameDeleteRequest(gameId));\n    };\n\n    render() {\n        const { isAuthenticated, allIds, byId } = this.props;\n\n        const games = allIds.map(gameId => byId[gameId]);\n        games.sort((a, b) => (a.name < b.name ? -1 : 1));\n\n        const gameItems = games.map(game => (\n            <li key={game.id}>\n                <Link to={`/game/${game.id}`}>{game.name}</Link>{' '}\n                <ConfirmedDelete\n                    question=\"Do you really want to delete this game?\"\n                    onDelete={() => this.handleGameDelete(game.id)}\n                />\n            </li>\n        ));\n\n        return (\n            isAuthenticated && (\n                <div>\n                    <KawaiiMessage character={Character.Ghost}>\n                        {allIds.length === 0 && (\n                            <>Here you can create your games and see list of your games when you have some.</>\n                        )}\n                        {allIds.length > 0 && (\n                            <>Here you can see a list of your games or you can create even more games.</>\n                        )}\n                    </KawaiiMessage>\n\n                    <ul>{gameItems}</ul>\n                    <div className=\"form\">\n                        <label htmlFor=\"game_name\">Game name:</label>\n                        <input\n                            id=\"game_name\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            className=\"form-control\"\n                            placeholder=\"Game name\"\n                        />\n                        <button onClick={this.handleCreateGameClick}>Create Game</button>\n                    </div>\n                </div>\n            )\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        allIds: state.games.allIds,\n        byId: state.games.byId,\n    };\n};\n\nexport default connect(mapStateToProps)(Games);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { State } from './reducers';\nimport Games from './components/Games';\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\n\ninterface Props {\n    isAuthenticated: boolean;\n}\n\nexport class Main extends Component<Props> {\n    render() {\n        if (this.props.isAuthenticated) {\n            return <Games />;\n        } else {\n            return (\n                <KawaiiMessage character={Character.Ghost}>\n                    Hey! Here you can create your own card game but you need to <a href=\"/login\">Login</a> or{' '}\n                    <a href=\"/signup\">Sign-up</a> first.\n                </KawaiiMessage>\n            );\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n    };\n};\n\nexport default connect(mapStateToProps)(Main);\n","import { State } from './reducers';\n\nexport const getActiveGame = (state: State) => (state.games.active ? state.games.byId[state.games.active] : null);\n\nexport const getActiveCardSet = (state: State) =>\n    state.cardsets.active ? state.cardsets.byId[state.cardsets.active] : null;\n","import React from 'react';\n\ninterface Props {\n    onLogout: () => void;\n}\n\nfunction Logout(props: Props) {\n    return (\n        <button onClick={() => props.onLogout()} className=\"btn btn-primary\">\n            Logout\n        </button>\n    );\n}\n\nexport default Logout;\n","import { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { CardSetType, GameType, MessageType } from '../types';\nimport { Dispatch, logoutRequest } from '../actions';\nimport { State } from '../reducers';\nimport { getActiveCardSet, getActiveGame } from '../selectors';\nimport Loader from './Loader';\nimport Logout from './Logout';\nimport style from './Navbar.module.css';\n\ninterface OwnProps {\n    isAuthenticated: boolean;\n}\n\ninterface StateProps {\n    messages: MessageType[];\n    activeGame: GameType | null;\n    activeCardSet: CardSetType | null;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nexport class Navbar extends Component<Props> {\n    render() {\n        const { dispatch, isAuthenticated, messages, activeGame, activeCardSet } = this.props;\n\n        return (\n            <nav>\n                <div id=\"messages\" className={style.messages}>\n                    <ul>\n                        {messages.map(m => (\n                            <li key={m.id} className={m.type === 'error' ? style.error : style.info}>\n                                {m.type === 'error' && (\n                                    <>\n                                        <i className=\"material-icons\">error</i> {m.text}\n                                    </>\n                                )}\n                                {m.type === 'info' && (\n                                    <>\n                                        <i className=\"material-icons\">info</i> {m.text}\n                                    </>\n                                )}\n                                {m.type === 'progress' && (\n                                    <>\n                                        <Loader small={true} /> {m.text}\n                                    </>\n                                )}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n                <div>\n                    <h1 className={style.header}>\n                        <Link to=\"/\">CARD-A-MON</Link>\n                    </h1>\n                    <div>\n                        <ul className={style.menu}>\n                            {isAuthenticated && (\n                                <>\n                                    <li>\n                                        <Link to=\"/\">Main</Link>\n                                    </li>\n                                    {activeGame && (\n                                        <li>\n                                            <Link to={`/game/${activeGame.id}`}>Game \"{activeGame.name}\"</Link>\n                                        </li>\n                                    )}\n                                    {activeCardSet && (\n                                        <li>\n                                            <Link to={`/cardset/${activeCardSet.id}`}>\n                                                Card Set \"{activeCardSet.name}\"\n                                            </Link>\n                                        </li>\n                                    )}\n                                </>\n                            )}\n                            <li>\n                                <Link to=\"/changelog\">Changelog</Link>\n                            </li>\n                            <li>\n                                <Link to=\"/about\">About</Link>\n                            </li>\n                            {isAuthenticated && (\n                                <li>\n                                    <Logout onLogout={() => dispatch(logoutRequest())} />\n                                </li>\n                            )}\n                            {!isAuthenticated && (\n                                <>\n                                    <li>\n                                        <Link to=\"/login\">Login</Link>\n                                    </li>\n                                    <li>\n                                        <Link to=\"/signup\">Sign-up</Link>\n                                    </li>\n                                </>\n                            )}\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        messages: state.message.messages,\n        activeGame: getActiveGame(state),\n        activeCardSet: getActiveCardSet(state),\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(Navbar);\n","import React, { Component } from 'react';\n\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\n\nexport default class NotFoundPage extends Component {\n    render() {\n        return (\n            <KawaiiMessage character={Character.Browser} mood=\"sad\">\n                There is nothing here.\n            </KawaiiMessage>\n        );\n    }\n}\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Credentials } from '../types';\nimport { Dispatch, messageDisplay } from '../actions';\n\ninterface Props {\n    dispatch: Dispatch;\n    onSignUp: (cred: Credentials) => void;\n}\n\nexport class SignUp extends Component<Props> {\n    state = {\n        username: '',\n        password: '',\n        passwordRepeat: '',\n    };\n\n    handleSubmit(event: React.FormEvent) {\n        const { dispatch, onSignUp } = this.props;\n\n        if (this.state.password !== this.state.passwordRepeat) {\n            dispatch(messageDisplay('error', 'Passwords do not match.'));\n        } else {\n            const creds = {\n                username: this.state.username.trim(),\n                password: this.state.password.trim(),\n            };\n            onSignUp(creds);\n        }\n\n        event.preventDefault();\n    }\n\n    handleUsernameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ username: event.target.value });\n    };\n\n    handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ password: event.target.value });\n    };\n\n    handlePasswordRepeatChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ passwordRepeat: event.target.value });\n    };\n\n    render() {\n        return (\n            <div>\n                <form className=\"form\" onSubmit={event => this.handleSubmit(event)}>\n                    <input\n                        type=\"text\"\n                        onChange={this.handleUsernameChange}\n                        className=\"form-control\"\n                        placeholder=\"Username\"\n                    />\n                    <input\n                        type=\"password\"\n                        onChange={this.handlePasswordChange}\n                        className=\"form-control\"\n                        placeholder=\"Password\"\n                    />\n                    <input\n                        type=\"password\"\n                        onChange={this.handlePasswordRepeatChange}\n                        className=\"form-control\"\n                        placeholder=\"Repeat password here\"\n                    />\n                    <input type=\"submit\" value=\"Sign Up\" />\n                </form>\n            </div>\n        );\n    }\n}\nexport default connect()(SignUp);\n","import { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, signupRequest } from './actions';\nimport { State } from './reducers';\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\nimport SignUp from './components/SignUp';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated: boolean;\n}\n\nexport class SignUpPage extends Component<Props> {\n    render() {\n        const { dispatch, isAuthenticated } = this.props;\n\n        return (\n            <div className=\"App\">\n                {!isAuthenticated && (\n                    <>\n                        <KawaiiMessage character={Character.Ghost}>\n                            Create your user here. Instead of user name you can use your e-mail. If you forget your\n                            password then you can send me e-mail (I will not send you any e-mails without your consent).\n                            If you use regular user name and forget your password then you will not be able to access\n                            your account.\n                        </KawaiiMessage>\n\n                        <SignUp onSignUp={creds => dispatch(signupRequest(creds))} />\n                    </>\n                )}\n                {isAuthenticated && <Redirect to=\"/\" />}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => ({ isAuthenticated: state.auth.isAuthenticated });\n\nexport default connect(mapStateToProps)(SignUpPage);\n","import './App.css';\n\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport { isIE } from 'react-device-detect';\n\nimport { Dispatch, initRequest } from './actions';\nimport { State } from './reducers';\nimport AboutPage from './AboutPage';\nimport CardSetPage from './CardSetPage';\nimport ChangelogPage from './ChangelogPage';\nimport ErrorBoundry from './ErrorBoundry';\nimport GamePage from './GamePage';\nimport LoginPage from './LoginPage';\nimport Main from './Main';\nimport Navbar from './components/Navbar';\nimport NotFoundPage from './NotFoundPage';\nimport SignUpPage from './SignUpPage';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated: boolean;\n}\n\nexport class App extends Component<Props> {\n    componentDidMount() {\n        this.props.dispatch(initRequest());\n    }\n\n    render() {\n        if (isIE) return <div> IE is not supported. Download Chrome/Opera/Firefox </div>;\n        const { isAuthenticated } = this.props;\n        return (\n            <Router>\n                <div className=\"App\">\n                    <ErrorBoundry>\n                        <Navbar isAuthenticated={isAuthenticated} />\n                        <Switch>\n                            <Route exact path=\"/\" component={Main} />\n                            <Route exact path=\"/login\" component={LoginPage} />\n                            <Route exact path=\"/signup\" component={SignUpPage} />\n                            <Route exact path=\"/game/:id\" component={GamePage} />\n                            <Route exact path=\"/cardset/:id\" component={CardSetPage} />\n                            <Route exact path=\"/changelog\" component={ChangelogPage} />\n                            <Route exact path=\"/about\" component={AboutPage} />\n                            <Route component={NotFoundPage} />\n                        </Switch>\n                        <div className=\"App-footer\">Dalius Dobravolskas &copy; {new Date().getFullYear()}</div>\n                    </ErrorBoundry>\n                </div>\n            </Router>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    const { auth } = state;\n    const { isAuthenticated } = auth;\n\n    return {\n        isAuthenticated,\n    };\n};\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ninterface Config {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import './index.css';\n\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { createAppStore } from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createAppStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { rootSaga } from './sagas';\nimport reducers from './reducers';\n\nexport function createAppStore() {\n    const sagaMiddleware = createSagaMiddleware();\n    const store = createStore(\n        reducers,\n        // @ts-ignore: __REDUX_DEVTOOLS_EXTENSION__ does not exists on window\n        window.__REDUX_DEVTOOLS_EXTENSION__\n            ? compose(\n                  applyMiddleware(sagaMiddleware),\n                  // @ts-ignore: __REDUX_DEVTOOLS_EXTENSION__ does not exists on window\n                  window.__REDUX_DEVTOOLS_EXTENSION__(),\n              )\n            : applyMiddleware(sagaMiddleware),\n    );\n    sagaMiddleware.run(rootSaga);\n    return store;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__3wMPS\",\"controls\":\"Sidebar_controls__3VVbM\",\"active\":\"Sidebar_active__4ldTH\",\"view\":\"Sidebar_view__-0BeZ\",\"hidden\":\"Sidebar_hidden__3xh5q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Navbar_header__FZp4U\",\"menu\":\"Navbar_menu__1JWvN\",\"messages\":\"Navbar_messages__h_dLG\",\"error\":\"Navbar_error__3urZl\",\"info\":\"Navbar_info__1h4Zc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fixed\":\"Loader_fixed__3q8O9\",\"relative\":\"Loader_relative__1lapZ\",\"loader\":\"Loader_loader__1ZCGC\",\"small\":\"Loader_small__3TZen\",\"loader-small\":\"Loader_loader-small__3PPAu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarDetails_view__29V31\",\"disabled\":\"SidebarDetails_disabled__1htJF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardset\":\"CardSet_cardset__21qjI\",\"cardsetview\":\"CardSet_cardsetview__1rqd1\",\"sidebar\":\"CardSet_sidebar__3y8_T\",\"createCard\":\"CardSet_createCard__2bOiw\"};","module.exports = __webpack_public_path__ + \"static/media/pan.ff303319.svg\";","module.exports = __webpack_public_path__ + \"static/media/zoom.2d0b374b.svg\";","module.exports = __webpack_public_path__ + \"static/media/resize.c1fb8dc3.svg\";","module.exports = __webpack_public_path__ + \"static/media/rotate.4a37bc7b.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1Ltkv\",\"title\":\"Card_title__1KiIj\",\"active\":\"Card_active__XOmoJ\",\"disabled\":\"Card_disabled__2Ob5l\"};"],"sourceRoot":""}