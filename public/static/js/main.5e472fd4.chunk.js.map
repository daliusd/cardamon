{"version":3,"sources":["components/rotate.svg","components/Card.module.css","components/SidebarImage.module.css","components/ConfirmedDelete.module.css","components/EditableTitle.module.css","components/FontSelector.module.css","components/SidebarText.module.css","components/image.svg","components/ImageField.module.css","components/ContentEditable.module.css","components/text.svg","components/SidebarGeneratePng.module.css","components/SidebarGeneratePdf.module.css","components/SidebarMeasurements.module.css","components/SidebarSettings.module.css","components/SidebarUpload.module.css","components/CardSets.module.css","components/FeatureList.module.css","components/screenshot.png","components/FieldController.module.css","actions.ts","constants.ts","requests.ts","utils.ts","types.ts","workerController.ts","storage.ts","fontLoader.tsx","sagas.ts","reducers.ts","store.ts","components/KawaiiMessage.tsx","AboutPage.tsx","components/FieldController.tsx","components/ImageField.tsx","components/ContentEditable.tsx","components/TextField.tsx","components/Card.tsx","components/EditableTitle.tsx","components/Loader.tsx","components/SidebarDetails.tsx","components/SidebarGeneratePng.tsx","components/PDFGenerator.tsx","components/SidebarGeneratePdf.tsx","components/ColorButton.tsx","components/SidebarImage.tsx","components/SidebarImportExport.tsx","components/SidebarMeasurements.tsx","components/SidebarSettings.tsx","components/FontSelector.tsx","components/SidebarText.tsx","components/SidebarUpload.tsx","components/Sidebar.tsx","components/CardSet.tsx","CardSetPage.tsx","ChangelogPage.tsx","ErrorBoundry.tsx","components/ConfirmedDelete.tsx","components/CardSets.tsx","GamePage.tsx","HelpPage.tsx","components/Login.tsx","LoginPage.tsx","components/FeatureList.tsx","components/Games.tsx","Main.tsx","selectors.ts","components/Logout.tsx","components/Navbar.tsx","NotFoundPage.tsx","components/SignUp.tsx","SignUpPage.tsx","App.tsx","serviceWorker.ts","index.tsx","components/Sidebar.module.css","components/Navbar.module.css","components/Loader.module.css","components/SidebarDetails.module.css","components/CardSet.module.css","components/pan.svg","components/zoom.svg","components/resize.svg"],"names":["module","exports","__webpack_require__","p","card","title","active","disabled","view","images","button","answer","input","fontFamily","fontVariant","over","content","cardsets","features","fieldcontroller","fieldcontrolleractivefield","fieldcontrolleractive","controller","touchactivated","SidebarState","CURRENT_CARDSET_VERSION","DEFAULT_FONT_SIZE","DEFAULT_LINE_HEIGHT","BLEED_WIDTH","INIT_REQUEST","MESSAGE_DISPLAY","MESSAGE_HIDE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_REQUEST","LOGOUT_FAILURE","LOGOUT_SUCCESS","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_FAILURE","GAME_CREATE_REQUEST","GAME_CREATE_SUCCESS","GAME_DELETE_REQUEST","GAME_RENAME_REQUEST","GAME_LIST_SUCCESS","GAME_LIST_REQUEST","GAME_LIST_FAILURE","GAME_LIST_RESET","GAME_SELECT_REQUEST","GAME_SELECT_SUCCESS","GAME_SELECT_FAILURE","GAME_CREATE_PDF_REQUEST","GAME_CREATE_PDF_SUCCESS","GAME_CREATE_PDF_FAILURE","GAME_CREATE_PNG_REQUEST","GAME_CREATE_PNG_SUCCESS","GAME_CREATE_PNG_FAILURE","GAME_GET_ATTRIBUTIONS_REQUEST","GAME_GET_ATTRIBUTIONS_SUCCESS","GAME_GET_ATTRIBUTIONS_FAILURE","CARDSETS_SELECT_SUCCESS","CARDSET_CREATE_REQUEST","CARDSET_CREATE_SUCCESS","CARDSET_CREATE_FAILURE","CARDSET_DELETE_REQUEST","CARDSET_RENAME_REQUEST","CARDSET_IMPORT_DATA","CARDSET_LIST_SUCCESS","CARDSET_LIST_RESET","CARDSET_SELECT_REQUEST","CARDSET_SELECT_SUCCESS","CARDSET_CREATE_CARD","CARDSET_ROTATE_CARDS_RIGHT","CARDSET_ROTATE_CARDS_LEFT","CARDSET_CLONE_CARD","CARDSET_REMOVE_CARD","CARDSET_UPDATE_CARD_COUNT","CARDSET_ADD_TEXT_FIELD","CARDSET_ADD_IMAGE_FIELD","CARDSET_CHANGE_ACTIVE_FIELD_NAME","CARDSET_REMOVE_ACTIVE_FIELD","CARDSET_RAISE_ACTIVE_FIELD","CARDSET_RAISE_ACTIVE_FIELD_TO_TOP","CARDSET_LOWER_ACTIVE_FIELD","CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM","CARDSET_LOCK_ACTIVE_FIELD","CARDSET_UNLOCK_ACTIVE_FIELD","CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD","CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD","CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD","CARDSET_CHANGE_WIDTH","CARDSET_CHANGE_HEIGHT","CARDSET_CHANGE_IS_TWO_SIDED","CARDSET_CHANGE_SNAPPING_DISTANCE","CARDSET_CHANGE_FIELD_POSITION","CARDSET_CHANGE_FIELD_PAN","CARDSET_CHANGE_FIELD_ZOOM","CARDSET_CHANGE_FIELD_SIZE","CARDSET_CHANGE_FIELD_ANGLE","CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN","CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR","CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY","CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT","CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT","CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE","CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT","CARDSET_CHANGE_TEXT","CARDSET_CHANGE_IMAGE","CARDSET_CHANGE_IMAGE_BASE64","CARDSET_SET_ACTIVE_CARD_AND_FIELD","CARDSET_CHANGE_APPLY_TO_ALLCARDS","CARDSET_SELECT_FAILURE","CARDSET_SET_SIDEBAR_STATE","CARDSET_SET_ZOOM","CARDSET_UPLOAD_IMAGE","CARDSET_UPLOAD_IMAGE_SUCCESS","CARDSET_UPLOAD_IMAGE_FAILURE","CARDSET_DELETE_IMAGE","CARDSET_UNDO","CARDSET_REDO","IMAGE_LIST_REQUEST","IMAGE_LIST_SUCCESS","IMAGE_LIST_FAILURE","messageDisplay","type","text","id","message","shortid","generate","gameCreateRequest","gamename","gameDeleteRequest","gameId","gameRenameRequest","newName","gameSelectRequest","updateCardSets","gameCreatePdfRequest","collectionType","collectionId","pageWidth","pageHeight","topBottomMargin","leftRightMargin","verticalSpace","horizontalSpace","includeBleedingArea","cutMarksForScissors","cutMarksForGuillotine","cutMarksInMarginArea","cutMarksOnFrontSideOnly","gameCreatePngRequest","dpi","gameGetAttributionsRequest","cardSetCreateRequest","cardsetname","width","height","cardSetDeleteRequest","cardSetId","cardSetRenameRequest","cardSetImportData","data","cardSetCreateCard","cardSetRotateCardsRight","cardSetRotateCardsLeft","cardSetCloneCard","cardSetRemoveCard","cardSetUpdateCardCount","count","cardSetAddTextField","cardSetAddImageField","cardSetChangeActiveFieldName","name","cardSetRemoveActiveField","cardSetRaiseActiveField","cardSetRaiseActiveFieldToTop","cardSetLowerActiveField","cardSetLowerActiveFieldToBottom","cardSetLockActiveField","cardSetUnlockActiveField","cardSetChangeFitForActiveField","fit","cardSetChangeCropForActiveField","crop","cardSetChangeUnclickableForActiveField","unclickable","cardSetChangeWidth","maintainAspectRatio","resizeContent","cardSetChangeHeight","cardSetChangeIsTwoSided","isTwoSided","cardSetChangeSnappingDistance","snappingDistance","cardSetChangeFieldPosition","cardId","fieldId","x","y","group","cardSetChangeFieldPan","cx","cy","cardSetChangeFieldZoom","zoom","cardSetChangeFieldSize","cardSetChangeFieldAngle","angle","cardSetChangeActiveTextFieldAlign","align","cardSetChangeActiveTextFieldColor","color","cardSetChangeActiveTextFieldFontVariant","cardSetChangeActiveTextFieldFontFamilyAndVariant","cardSetChangeActiveTextFieldFontSize","fontSize","cardSetChangeActiveTextFieldLineHeight","lineHeight","cardSetChangeText","textInfo","cardSetChangeImage","imageInfo","cardSetChangeImageBase64","base64","cardSetActiveCardAndField","isBackActive","cardSetChangeApplyToAllCards","applyToAllCards","cardSetSetSidebarState","sidebarState","cardSetSetZoom","cardSetUploadImage","file","load","error","progress","abort","cancelToken","cardSetDeleteImage","imageId","cardSetUndo","cardSetRedo","imageListRequest","filter","location","handleAxiosError","response","Error","request","console","log","getTokens","creds","axios","post","then","resp","catch","refreshToken","refreshTokenValue","config","headers","Authorization","concat","accessToken","deleteAccessToken","token","delete","status","deleteRefreshToken","registerUser","getRequest","url","get","postRequest","postRequestFormDataCancelable","progressCallback","cancelCallback","Content-Type","onUploadProgress","isCancel","putRequest","put","deleteRequest","downloadBlob","blobURL","filename","resolve","tempLink","document","createElement","style","display","href","setAttribute","download","body","appendChild","click","removeChild","setTimeout","window","URL","revokeObjectURL","rotateVec","a","sinA","Math","sin","cosA","cos","rx","ry","calculateImageDimensions","imageFieldInfo","calculatedImageWidth","calculatedImageHeight","imageWidth","imageHeight","UserError","_Error","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","wrapNativeSuper","reportError","StackTrace","fromError","stackframes","stringifiedStack","map","sf","toString","join","state","store","JSON","stringify","getState","stack","ImageType","generatePdfUsingWorker","Worker","Promise","reject","worker","addEventListener","event","postMessage","e","loadImage","img","Image","onload","onerror","src","prepareImageToDrawSpace","context","imageToDraw","ptpmm","save","translate","rotate","ax","ay","rect","clip","fixWidthAndHeightInSvg","doc","XmlDocument","attr","viewBox","split","btoa","compressed","PNGGenerator","_this","tasksQueue","push","cardSetData","cardIdx","isBack","cardsetFolder","offscreenCanvas","calculatedWidth","round","calculatedHeight","getContext","fillStyle","fillRect","stopped","length","task","shift","SVG_PATH","scale","Path2D","fill","restore","IMAGE","SVG","undefined","dim","image","svgData","atob","drawImage","BLOCK_START","BLOCK_END","subType","delay","dataUrl","toDataURL","slice","padStart","zip","cardsetsList","cardsetInfo","generateCardset","cardsetId","parse","folder","cardsAllIds","entries","generateCard","generatePngUsingWorker","_ref4","asyncToGenerator","regenerator_default","mark","_callee4","pngGenerator","blob","wrap","_context4","prev","next","JSZip","generateGame","generateAsync","sent","createObjectURL","stop","_x15","_x16","_x17","_x18","getImageAttribution","_callee6","meta","_context6","abrupt","metadata","source","attribution","retrieveGameAttributions","_ref5","_callee5","attributions","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","_resp","cardFields","fieldInfo","start","end","_name","_attribution","_context5","Set","Symbol","iterator","done","value","t0","keys","fields","t1","t2","t3","replace","add","indexOf","t4","return","finish","Array","from","_x21","_x22","saveTokens","localStorage","setItem","saveUsername","username","saveAccessToken","cleanTokens","removeItem","getTokenFromStorage","getItem","getRefreshTokenFromStorage","getUsernameFromStorage","loadFontsUsedInPlaceholders","fontsToLoad","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","fieldsAllIds","field","fontToLoad","err","WebFont","objectSpread","inactive","webFontsLoadPromise","google","families","toConsumableArray","putError","putInfo","putProgress","hideProgress","handleMessageDisplay","getToken","handleLoginRequest","handleLoginSuccess","logoutToken","logoutRefreshToken","handleLogoutRequest","handleSignupRequest","handleInitRequest","authorizedGetRequest","authorizedPostRequest","authorizedDeleteRequest","authorizedPostFormDataRequest","authorizedPutRequest","handleGameCreateRequest","handleGameDeleteRequest","handleGameRenameRequest","handleGameListRequest","handleGameSelectRequest","handleGameCreatePdfRequest","handleGameCreatePngRequest","handleGameGetAttributionsRequest","handleCardSetCreateRequest","handleCardSetDeleteRequest","handleCardSetRenameRequest","handleCardSetSelectRequest","handleCardSetUploadImage","handleCardSetDeleteImage","handleCardSetFitChange","handleCardSetChangeImage","handleCardSetChange","handleImageListRequest","rootSaga","_context","call","_marked","_context2","_marked2","_context3","_marked3","messageId","_marked4","action","_marked5","validateToken","jwtDecode","exp","Date","getTime","withErrorIfMissing","getFreshToken","newToken","_args6","_marked6","_context7","_marked7","_context8","_marked8","_context9","_marked9","_context10","_marked10","_context11","_marked11","_context12","_marked12","_context13","_marked13","_context14","_marked14","_context15","_marked15","_context16","_marked16","_context17","_marked17","_context18","_marked18","_context19","_marked19","_context20","_marked20","_context21","_marked21","allIds","byId","_context22","games","g","reduce","obj","_marked22","_context23","_marked23","progressId","_context24","_marked24","_context25","_marked25","_context26","select","_marked26","_context27","version","_marked27","_context28","_marked28","_context29","_marked29","loadImageInfo","naturalWidth","naturalHeight","processData","_x","_processData","_callee","processedData","plId","placeholder","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_iterator4","_step4","_placeholder","_cardId","_fieldId","info","_context38","placeholdersAllIds","placeholders","global","texts","cardsById","t5","parsedData","_context30","ActionCreators","clearHistory","_marked30","formData","_context31","FormData","set","append","lengthComputable","loaded","total","_marked31","_context32","_marked32","adjustSvg","preserveAspectRatio","walkChildren","node","children","child","imageResp","svg","_svg","_context33","cardset","present","activeFieldId","_marked33","cardsToFix","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_svg2","_context34","_marked34","closeHandler","preventDefault","returnValue","allowWindowClose","removeEventListener","_context35","_marked35","game","_context36","encodeURIComponent","_marked36","_context37","all","takeEvery","takeLatest","_marked37","ACTIVITY_SELECTING","ACTIVITY_CREATING_PDF","ACTIVITY_CREATING_PNG","DefaultMessageState","messages","DefaultAuthState","isAuthenticated","user","DefaultSignUpState","signingup","DefaultGameState","activity","DefaultCardSetsState","DefaultCardSetState","activeCardId","textSettings","activeSidebar","DefaultImageState","resizeFields","widthRatio","heightRatio","newFields","undoableCardset","undoable","assign","defineProperty","newCx","newCy","PI","newCard","index","isOnBack","fieldIndex","splice","locked","unshift","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","fitImageWidth","fitImageHeight","min","max","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","oldZoom","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","nx","ny","_rotateVec","ratio","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","testFieldInfo","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","Measurements","Details","Text","ignoreInitialState","undoType","redoType","groupBy","startsWith","reducers","combineReducers","find","m","auth","signup","Character","AboutPage","react_default","Component","FieldController","props","cDiv","panDiv","zoomDiv","resizeDiv","rotateDiv","originalBodyCursor","handleBrowserDragStart","stopPropagation","handleMouseDown","handleDragStart","handleMouseMove","handleMouseUp","handleTouchStart","touches","changedTouches","handleTouchMove","passive","handleTouchEnd","co","current","cursor","setState","startX","clientX","startY","clientY","handleDragMove","ctrlKey","disableSnapping","_this$props","isLocked","_this$props2","ppmm","onDrag","handleComplete","isTouchEvent","_this$props3","activatedUsingTouch","handlePanMouseDown","handlePanStart","handlePanMouseMove","handlePanMouseUp","handlePanTouchStart","handlePanTouchMove","handlePanTouchEnd","panIcon","handlePanMove","_this$props4","onPan","handlePanComplete","_this$props5","handleZoomMouseDown","handleZoomStart","handleZoomMouseMove","handleZoomMouseUp","handleZoomTouchStart","handleZoomTouchMove","handleZoomTouchEnd","zoomIcon","handleZoomMove","_this$props6","onZoom","dx","dy","z","abs","newZoom","handleZoomComplete","handleResizeMouseDown","handleResizeStart","handleResizeMouseMove","handleResizeMouseUp","handleResizeTouchStart","handleResizeTouchMove","handleResizeTouchEnd","resizeIcon","handleResizeMove","_this$props7","onResize","_rotateVec2","newWidth","newHeight","handleResizeComplete","_this$props8","handleRotateMouseDown","handleRotateStart","handleRotateMouseMove","handleRotateMouseUp","handleRotateTouchStart","handleRotateTouchMove","handleRotateTouchEnd","_this$props9","rotateIcon","getBoundingClientRect","left","clientWidth","top","clientHeight","originalAngle","atan2","handleRotateMove","_this$props10","onRotate","_this$state","newAngle","handleRotateComplete","React","createRef","_this$props11","isActive","isActiveField","isUnclickable","ref","onDragStart","className","position","transform","pointerEvents","alt","right","bottom","connect","ImageField","handleDrag","cardOnly","dispatch","handlePan","handleZoom","handleResize","handleRotate","wasMoved","handleDragOver","dragIsOver","handleDragLeave","handleDrop","dataTransfer","getData","imagefilesPos","ii","substr","imageUrl","cardWidth","cardHeight","components_FieldController","overflow","onMouseDown","onTouchStart","onMouseMove","onTouchMove","onMouseUp","onTouchEnd","onDragOver","onDragLeave","onDrop","opacity","emptyImageImage","PureComponent","ContentEditable","editDiv","currentText","currentAlign","currentColor","currentFontFamily","currentFontVariant","currentFontSize","currentLineHeight","timeout","handleStart","handleMove","focus","onFocus","textValue","range","createRange","selectNodeContents","collapse","selection","getSelection","removeAllRanges","addRange","updateContent","timeoutInMiliseconds","innerHTML","imgUrlIdx","clearTimeout","handleBlur","handleInput","handlePaste","clipboardData","s","execCommand","nextProps","isItalic","fontWeight","parseInt","contentEditable","onBlur","onInput","onPaste","textAlign","DEFAULT_FONT","fontStyle","outline","overflowWrap","dangerouslySetInnerHTML","__html","TextField","textFieldInfo","zIndex","emptyTextImage","components_ContentEditable","Card","dimensions","handleFieldDeselect","target","getAttribute","_this2","fieldsIds","isActiveCard","widthWithBleeds","heightWithBleeds","index_esm","client","contentRect","_ref","measureRef","components_ImageField","key","components_TextField","border","borderRadius","EditableTitle","titleIsEdited","handleClick","handleChange","onChange","Fragment","onClick","autoFocus","KawaiiMessage","character","mood","marginTop","marginBottom","padding","backgroundColor","grid","Ghost","size","Browser","marginLeft","Loader","fixed","small","loader","relative","SidebarDetails","_Component","_getPrototypeOf2","_len","args","_key","handleRotateRightClick","handleRotateLeftClick","handleCloneCardClick","activeCard","handleRemoveCardClick","handleCountChange","handleUndoClick","handleRedoClick","createClass","visible","SidebarGeneratePng","handleDpiChange","handleGenerate","activeCardset","isCreatingPng","htmlFor","step","PDFGenerator","handleGeneratePdfClick","handlePageWidthChange","parseFloat","handlePageHeightChange","handleTopBottomMarginChange","handleLeftRightMarginChange","handleVerticalSpaceChange","handleHorizontalSpaceChange","handleIncludeBleedingAreaChange","checked","handleCutMarksForScissors","handleCutMarksForGuillotine","handleCutMarksInMarginArea","handleCutMarksOnFrontSideOnly","isCreatingPdf","withHelp","KawaiiMessage_KawaiiMessage","SidebarGeneratePdf","activeCardSetId","components_PDFGenerator","ColorButton","displayColorPicker","handleClose","react_color_lib","disableAlpha","SidebarImage","handleAddImageClick","changeImage","activeFieldInfo","handleRemoveImageFromFieldClick","handleRemoveClick","handleNameChange","trim","handleFilterChange","handleImageSelect","imageName","handleRaise","handleLower","handleLockField","handleUnlockField","handleFitOptionChange","handleOptionChange","handleColorChange","hex","handleRemoveColorClick","handleApplyToAllCardChange","handleChangeCrop","ColorButton_ColorButton","im","data-width","data-height","registerPlugin","FilePondPluginFileValidateType","SidebarImportExport","prepareImagePaths","activeGame","ending","md5","preparedImages","fieldsByCard","endsWith","handleExportJson","json","Blob","handleExportCsv","preparedFields","csvData","header","usedNames","dataRow","written","fieldIndo","csv","Papa","unparse","handleProcess","fieldName","reader","FileReader","readAsText","result","isGlobal","newCardsAllIds","newCardsById","row","handleRevert","uniqueFileId","react_filepond","server","process","revert","acceptedFileTypes","SidebarMeasurements","handlePrevField","activeField","prevField","idx","handleNextField","nextField","handleWidthChange","handleHeightChange","handleXChange","handleYChange","handleAngleChange","_this$props12","handleChangeUnclickable","_this$props13","_this$props14","SidebarSettings","_this$state2","handleIsTwoSidedChange","handleSnappingDistance","_this$state3","FontOptionComponent","isDisabled","react_select_esm","Option","webfontsThumbs","options","webfonts","sort","fi","label","FontSelector","getFontStringForLoad","family","variant","stringForLoad","selectedOption","activeFontVariant","wf","handleFontVariantChange","activeFont","handleFontSizeChange","handleLineHeightChange","selectedFontFamily","f","fontVariantOptions","fv","selectedFontVariant","activeFontSize","components","activeLineHeight","SidebarText","handleAddTextClick","handleSetTextAlignLeft","getRangeAt","rangeCount","collapsed","handleSetTextAlignCenter","handleSetTextAlignRight","handleSetTextBold","handleSetTextItalic","components_FontSelector","FilePondPluginFileValidateSize","SidebarUpload","CancelToken","cancel","visibility","allowMultiple","allowFileSizeValidation","maxFileSize","SIDEBARS","Settings","icon","component","Upload","ImportExport","Png","Pdf","Sidebar","handleSidebar","sidebar","controls","sb","hidden","CardSet","keyDown","shiftKey","handleCreateCardClick","handleClickOutsideOfCard","handleCardSetNameChange","activeCardSet","EditableTitle_EditableTitle","cardsetview","components_Sidebar","Loader_Loader","gridTemplateColumns","components_Card","createCard","CardSetPage","match","params","components_CardSet","Redirect","to","ChangelogPage","evt","reason","ErrorBoundary","hasError","ConfirmedDelete","deleteClicked","handleRemove","handleYes","onDelete","handleNo","question","CardSets","cardSetName","handleGameNameChange","handleCreateCardSetClick","handleCardSetDelete","handleGetAttributions","b","cardsetItems","Link","ConfirmedDelete_ConfirmedDelete","GamePage","components_CardSets","Login","password","handleUsernameChange","handlePasswordChange","handleSubmit","onLogin","onLoginFailure","onSubmit","LoginPage","Login_Login","loginRequest","msg","FeatureList","screenshot","Games","gameName","handleCreateGameClick","handleGameDelete","gameItems","FeatureList_FeatureList","Main","components_Games","getActiveGame","getActiveCardSet","Logout","onLogout","Navbar","menu","components_Logout","NotFoundPage","SignUp","passwordRepeat","handlePasswordRepeatChange","onSignUp","SignUpPage","components_SignUp","signupRequest","App","isIE","BrowserRouter","ErrorBoundry_ErrorBoundary","components_Navbar","Switch","Route","exact","path","HelpPage","getFullYear","Boolean","hostname","sagaMiddleware","createSagaMiddleware","createStore","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","run","createAppStore","ReactDOM","render","es","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister","loader-small"],"mappings":"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","file":"static/js/main.5e472fd4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rotate.4a37bc7b.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__iFlfM\",\"title\":\"Card_title__19Cwl\",\"active\":\"Card_active__10UTn\",\"disabled\":\"Card_disabled__H4Xiv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarImage_view__2fD5o\",\"disabled\":\"SidebarImage_disabled__2wnsI\",\"images\":\"SidebarImage_images__3Ol2c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ConfirmedDelete_button__1BMbI\",\"answer\":\"ConfirmedDelete_answer__5hhwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"EditableTitle_input__1Lmlq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fontFamily\":\"FontSelector_fontFamily__2gTeq\",\"fontVariant\":\"FontSelector_fontVariant__2WE4Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarText_view__SxT2g\",\"disabled\":\"SidebarText_disabled__nRP7i\"};","module.exports = __webpack_public_path__ + \"static/media/image.60f0926c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"over\":\"ImageField_over__3y5FK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ContentEditable_content__2lBBL\"};","module.exports = __webpack_public_path__ + \"static/media/text.f7f9443c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarGeneratePng_view__b2uGa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarGeneratePdf_view__2CUY7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarMeasurements_view__1hi6W\",\"disabled\":\"SidebarMeasurements_disabled__27Jc-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarSettings_view__3C1IL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarUpload_view__3Mtgx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardsets\":\"CardSets_cardsets__1l-1M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"features\":\"FeatureList_features__O8EOx\"};","module.exports = __webpack_public_path__ + \"static/media/screenshot.ec7615c5.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldcontroller\":\"FieldController_fieldcontroller__1NU_Q\",\"fieldcontrolleractivefield\":\"FieldController_fieldcontrolleractivefield__WyOSh\",\"fieldcontrolleractive\":\"FieldController_fieldcontrolleractive__1HzwX\",\"controller\":\"FieldController_controller__gKZzB\",\"touchactivated\":\"FieldController_touchactivated__314ug\"};","import { CancelToken } from 'axios';\nimport { Dispatch as ReduxDispatch } from 'redux';\nimport shortid from 'shortid';\n\nimport {\n    CardSetsCollection,\n    CardType,\n    CardsCollection,\n    Credentials,\n    GamesCollection,\n    IdsArray,\n    ImageArray,\n    ImageInfo,\n    MessageType,\n    PlaceholdersCollection,\n    PlaceholdersImageInfoByCardCollection,\n    PlaceholdersTextInfoByCardCollection,\n    TextInfo,\n    FieldInfoByCardCollection,\n} from './types';\n\nexport const INIT_REQUEST = 'INIT_REQUEST';\nexport const MESSAGE_DISPLAY = 'MESSAGE_DISPLAY';\nexport const MESSAGE_HIDE = 'MESSAGE_HIDE';\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\nexport const LOGOUT_FAILURE = 'LOGOUT_FAILURE';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const SIGNUP_REQUEST = 'SIGNUP_REQUEST';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAILURE = 'SIGNUP_FAILURE';\nexport const GAME_CREATE_REQUEST = 'GAME_CREATE_REQUEST';\nexport const GAME_CREATE_SUCCESS = 'GAME_CREATE_SUCCESS';\nexport const GAME_DELETE_REQUEST = 'GAME_DELETE_REQUEST';\nexport const GAME_RENAME_REQUEST = 'GAME_RENAME_REQUEST';\nexport const GAME_LIST_SUCCESS = 'GAME_LIST_SUCCESS';\nexport const GAME_LIST_REQUEST = 'GAME_LIST_REQUEST';\nexport const GAME_LIST_FAILURE = 'GAME_LIST_FAILURE';\nexport const GAME_LIST_RESET = 'GAME_LIST_RESET';\nexport const GAME_SELECT_REQUEST = 'GAME_SELECT_REQUEST';\nexport const GAME_SELECT_SUCCESS = 'GAME_SELECT_SUCCESS';\nexport const GAME_SELECT_FAILURE = 'GAME_SELECT_FAILURE';\nexport const GAME_CREATE_PDF_REQUEST = 'GAME_CREATE_PDF_REQUEST';\nexport const GAME_CREATE_PDF_SUCCESS = 'GAME_CREATE_PDF_SUCCESS';\nexport const GAME_CREATE_PDF_FAILURE = 'GAME_CREATE_PDF_FAILURE';\nexport const GAME_CREATE_PNG_REQUEST = 'GAME_CREATE_PNG_REQUEST';\nexport const GAME_CREATE_PNG_SUCCESS = 'GAME_CREATE_PNG_SUCCESS';\nexport const GAME_CREATE_PNG_FAILURE = 'GAME_CREATE_PNG_FAILURE';\nexport const GAME_GET_ATTRIBUTIONS_REQUEST = 'GAME_GET_ATTRIBUTIONS_REQUEST';\nexport const GAME_GET_ATTRIBUTIONS_SUCCESS = 'GAME_GET_ATTRIBUTIONS_SUCCESS';\nexport const GAME_GET_ATTRIBUTIONS_FAILURE = 'GAME_GET_ATTRIBUTIONS_FAILURE';\nexport const CARDSETS_SELECT_SUCCESS = 'CARDSETS_SELECT_SUCCESS';\nexport const CARDSET_CREATE_REQUEST = 'CARDSET_CREATE_REQUEST';\nexport const CARDSET_CREATE_SUCCESS = 'CARDSET_CREATE_SUCCESS';\nexport const CARDSET_CREATE_FAILURE = 'CARDSET_CREATE_FAILURE';\nexport const CARDSET_DELETE_REQUEST = 'CARDSET_DELETE_REQUEST';\nexport const CARDSET_RENAME_REQUEST = 'CARDSET_RENAME_REQUEST';\nexport const CARDSET_IMPORT_DATA = 'CARDSET_IMPORT_DATA';\nexport const CARDSET_LIST_SUCCESS = 'CARDSET_LIST_SUCCESS';\nexport const CARDSET_LIST_REQUEST = 'CARDSET_LIST_REQUEST';\nexport const CARDSET_LIST_FAILURE = 'CARDSET_LIST_FAILURE';\nexport const CARDSET_LIST_RESET = 'CARDSET_LIST_RESET';\nexport const CARDSET_SELECT_REQUEST = 'CARDSET_SELECT_REQUEST';\nexport const CARDSET_SELECT_SUCCESS = 'CARDSET_SELECT_SUCCESS';\nexport const CARDSET_CREATE_CARD = 'CARDSET_CREATE_CARD';\nexport const CARDSET_ROTATE_CARDS_RIGHT = 'CARDSET_ROTATE_CARDS_RIGHT';\nexport const CARDSET_ROTATE_CARDS_LEFT = 'CARDSET_ROTATE_CARDS_LEFT';\nexport const CARDSET_CLONE_CARD = 'CARDSET_CLONE_CARD';\nexport const CARDSET_REMOVE_CARD = 'CARDSET_REMOVE_CARD';\nexport const CARDSET_UPDATE_CARD_COUNT = 'CARDSET_UPDATE_CARD_COUNT';\nexport const CARDSET_ADD_TEXT_FIELD = 'CARDSET_ADD_TEXT_FIELD';\nexport const CARDSET_ADD_IMAGE_FIELD = 'CARDSET_ADD_IMAGE_FIELD';\nexport const CARDSET_CHANGE_ACTIVE_FIELD_NAME = 'CARDSET_CHANGE_ACTIVE_FIELD_NAME';\nexport const CARDSET_REMOVE_ACTIVE_FIELD = 'CARDSET_REMOVE_ACTIVE_FIELD';\nexport const CARDSET_RAISE_ACTIVE_FIELD = 'CARDSET_RAISE_ACTIVE_FIELD';\nexport const CARDSET_RAISE_ACTIVE_FIELD_TO_TOP = 'CARDSET_RAISE_ACTIVE_FIELD_TO_TOP';\nexport const CARDSET_LOWER_ACTIVE_FIELD = 'CARDSET_LOWER_ACTIVE';\nexport const CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM = 'CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM';\nexport const CARDSET_LOCK_ACTIVE_FIELD = 'CARDSET_LOCK_ACTIVE_FIELD';\nexport const CARDSET_UNLOCK_ACTIVE_FIELD = 'CARDSET_UNLOCK_ACTIVE_FIELD';\nexport const CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD = 'CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD';\nexport const CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD = 'CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD';\nexport const CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD = 'CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD';\nexport const CARDSET_CHANGE_WIDTH = 'CARDSET_CHANGE_WIDTH';\nexport const CARDSET_CHANGE_HEIGHT = 'CARDSET_CHANGE_HEIGHT';\nexport const CARDSET_CHANGE_IS_TWO_SIDED = 'CARDSET_CHANGE_IS_TWO_SIDED';\nexport const CARDSET_CHANGE_SNAPPING_DISTANCE = 'CARDSET_CHANGE_SNAPPING_DISTANCE';\nexport const CARDSET_CHANGE_FIELD_POSITION = 'CARDSET_CHANGE_FIELD_POSITION';\nexport const CARDSET_CHANGE_FIELD_PAN = 'CARDSET_CHANGE_FIELD_PAN';\nexport const CARDSET_CHANGE_FIELD_ZOOM = 'CARDSET_CHANGE_FIELD_ZOOM';\nexport const CARDSET_CHANGE_FIELD_SIZE = 'CARDSET_CHANGE_FIELD_SIZE';\nexport const CARDSET_CHANGE_FIELD_ANGLE = 'CARDSET_CHANGE_FIELD_ANGLE';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN = 'CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR = 'CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY = 'CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT = 'CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT =\n    'CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE = 'CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT = 'CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT';\nexport const CARDSET_CHANGE_TEXT = 'CARDSET_CHANGE_TEXT';\nexport const CARDSET_CHANGE_IMAGE = 'CARDSET_CHANGE_IMAGE';\nexport const CARDSET_CHANGE_IMAGE_BASE64 = 'CARDSET_CHANGE_IMAGE_BASE64';\nexport const CARDSET_SET_ACTIVE_CARD_AND_FIELD = 'CARDSET_SET_ACTIVE_CARD_AND_FIELD';\nexport const CARDSET_CHANGE_APPLY_TO_ALLCARDS = 'CARDSET_CHANGE_APPLY_TO_ALLCARDS';\nexport const CARDSET_SELECT_FAILURE = 'CARDSET_SELECT_FAILURE';\nexport const CARDSET_SET_SIDEBAR_STATE = 'CARDSET_SET_SIDEBAR_STATE';\nexport const CARDSET_SET_ZOOM = 'CARDSET_SET_ZOOM';\nexport const CARDSET_UPLOAD_IMAGE = 'CARDSET_UPLOAD_IMAGE';\nexport const CARDSET_UPLOAD_IMAGE_SUCCESS = 'CARDSET_UPLOAD_IMAGE_SUCCESS';\nexport const CARDSET_UPLOAD_IMAGE_FAILURE = 'CARDSET_UPLOAD_IMAGE_FAILURE';\nexport const CARDSET_DELETE_IMAGE = 'CARDSET_DELETE_IMAGE';\nexport const CARDSET_UNDO = 'CARDSET_UNDO';\nexport const CARDSET_REDO = 'CARDSET_REDO';\nexport const IMAGE_LIST_REQUEST = 'IMAGE_LIST_REQUEST';\nexport const IMAGE_LIST_SUCCESS = 'IMAGE_LIST_SUCCESS';\nexport const IMAGE_LIST_FAILURE = 'IMAGE_LIST_FAILURE';\n\n// Actions\n\nexport interface InitAction {\n    type: typeof INIT_REQUEST;\n}\n\nexport interface MessageDisplay {\n    type: typeof MESSAGE_DISPLAY;\n    message: MessageType;\n}\nexport type MessageAction = MessageDisplay | { type: typeof MESSAGE_HIDE; messageId: string };\n\nexport interface LoginRequest {\n    type: typeof LOGIN_REQUEST;\n    creds: Credentials;\n}\nexport type LoginAction =\n    | LoginRequest\n    | { type: typeof LOGIN_SUCCESS; username: string }\n    | { type: typeof LOGIN_FAILURE; message: string }\n    | { type: typeof LOGOUT_REQUEST }\n    | { type: typeof LOGOUT_FAILURE }\n    | { type: typeof LOGOUT_SUCCESS };\n\nexport interface SignUpRequest {\n    type: typeof SIGNUP_REQUEST;\n    creds: Credentials;\n}\nexport type SignUpAction = SignUpRequest | { type: typeof SIGNUP_SUCCESS } | { type: typeof SIGNUP_FAILURE };\n\nexport interface GameCreateRequest {\n    type: typeof GAME_CREATE_REQUEST;\n    gamename: string;\n}\nexport type GameCreateAction = GameCreateRequest | { type: typeof GAME_CREATE_SUCCESS };\n\nexport interface GameDeleteRequest {\n    type: typeof GAME_DELETE_REQUEST;\n    gameId: string;\n}\n\nexport type GameDeleteAction = GameDeleteRequest;\n\nexport interface GameRenameRequest {\n    type: typeof GAME_RENAME_REQUEST;\n    gameId: string;\n    newName: string;\n}\n\nexport type GameRenameAction = GameRenameRequest;\n\nexport interface GameListSuccess {\n    type: typeof GAME_LIST_SUCCESS;\n    byId: GamesCollection;\n    allIds: IdsArray;\n}\nexport type GameListAction =\n    | { type: typeof GAME_LIST_REQUEST }\n    | GameListSuccess\n    | { type: typeof GAME_LIST_FAILURE }\n    | { type: typeof GAME_LIST_RESET };\n\nexport interface GameSelectRequest {\n    type: typeof GAME_SELECT_REQUEST;\n    id: string;\n    updateCardSets: boolean;\n}\nexport type GameSelectAction =\n    | GameSelectRequest\n    | { type: typeof GAME_SELECT_SUCCESS; id: string }\n    | { type: typeof GAME_SELECT_FAILURE };\n\nexport interface GameCreatePdfRequest {\n    type: typeof GAME_CREATE_PDF_REQUEST;\n    collectionType: string;\n    collectionId: string;\n    pageWidth: number;\n    pageHeight: number;\n    topBottomMargin: number;\n    leftRightMargin: number;\n    verticalSpace: number;\n    horizontalSpace: number;\n    includeBleedingArea: boolean;\n    cutMarksForScissors: boolean;\n    cutMarksForGuillotine: boolean;\n    cutMarksInMarginArea: boolean;\n    cutMarksOnFrontSideOnly: boolean;\n}\n\nexport type GameCreatePdfAction =\n    | GameCreatePdfRequest\n    | { type: typeof GAME_CREATE_PDF_SUCCESS }\n    | { type: typeof GAME_CREATE_PDF_FAILURE };\n\nexport interface GameCreatePngRequest {\n    type: typeof GAME_CREATE_PNG_REQUEST;\n    dpi: number;\n    collectionType: string;\n    collectionId: string;\n}\n\nexport type GameCreatePngAction =\n    | GameCreatePngRequest\n    | { type: typeof GAME_CREATE_PNG_SUCCESS }\n    | { type: typeof GAME_CREATE_PNG_FAILURE };\n\nexport interface GameGetAttributionsRequest {\n    type: typeof GAME_GET_ATTRIBUTIONS_REQUEST;\n}\n\nexport type GameGetAttributionsAction =\n    | GameGetAttributionsRequest\n    | { type: typeof GAME_GET_ATTRIBUTIONS_SUCCESS; attributions: string[] }\n    | { type: typeof GAME_GET_ATTRIBUTIONS_FAILURE };\n\nexport type GameAction =\n    | GameCreateAction\n    | GameDeleteAction\n    | GameRenameAction\n    | GameListAction\n    | GameSelectAction\n    | GameCreatePdfAction\n    | GameCreatePngAction\n    | GameGetAttributionsAction;\n\nexport interface CardSetCreateRequest {\n    type: typeof CARDSET_CREATE_REQUEST;\n    cardsetname: string;\n    width: number;\n    height: number;\n    gameId: string;\n}\nexport type CardSetCreateAction =\n    | CardSetCreateRequest\n    | { type: typeof CARDSET_CREATE_SUCCESS }\n    | { type: typeof CARDSET_CREATE_FAILURE };\n\nexport interface CardSetDeleteRequest {\n    type: typeof CARDSET_DELETE_REQUEST;\n    cardSetId: string;\n}\n\nexport interface CardSetRenameRequest {\n    type: typeof CARDSET_RENAME_REQUEST;\n    cardSetId: string;\n    newName: string;\n}\n\nexport interface CardSetsSelectSuccess {\n    type: typeof CARDSETS_SELECT_SUCCESS;\n    id: string;\n    name: string;\n}\n\nexport type CardSetsAction =\n    | CardSetsSelectSuccess\n    | CardSetCreateAction\n    | CardSetDeleteRequest\n    | CardSetRenameRequest\n    | CardSetListAction;\n\nexport interface CardSetImportData {\n    type: typeof CARDSET_IMPORT_DATA;\n    data: object;\n}\n\nexport interface CardSetListSuccess {\n    type: typeof CARDSET_LIST_SUCCESS;\n    byId: CardSetsCollection;\n    allIds: IdsArray;\n}\nexport type CardSetListAction =\n    | { type: typeof CARDSET_LIST_REQUEST }\n    | CardSetListSuccess\n    | { type: typeof CARDSET_LIST_FAILURE }\n    | { type: typeof CARDSET_LIST_RESET };\n\nexport interface CardSetSelectRequest {\n    type: typeof CARDSET_SELECT_REQUEST;\n    id: string;\n}\n\nexport interface CardSetSelectSuccessDataBase {\n    version: string;\n}\n\nexport interface CardSetSelectSuccessDataV2 {\n    version: 2;\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    snappingDistance: number;\n    cardsAllIds: IdsArray;\n    cardsById: CardsCollection;\n    placeholders: PlaceholdersCollection;\n    placeholdersAllIds: IdsArray;\n    texts: PlaceholdersTextInfoByCardCollection;\n    images: PlaceholdersImageInfoByCardCollection;\n    zoom: number;\n}\n\nexport interface CardSetSelectSuccessDataV3 {\n    version: 3;\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    snappingDistance: number;\n    cardsAllIds: IdsArray;\n    cardsById: CardsCollection;\n    fields: FieldInfoByCardCollection;\n    fieldsAllIds: IdsArray;\n    zoom: number;\n}\n\nexport type CardSetSelectSuccessData = CardSetSelectSuccessDataV2 | CardSetSelectSuccessDataV3;\n\nexport interface CardSetSelectSuccess {\n    type: typeof CARDSET_SELECT_SUCCESS;\n    id: string;\n    name: string;\n    data: CardSetSelectSuccessDataV3;\n    gameId: string;\n}\nexport interface CardSetCreateCard {\n    type: typeof CARDSET_CREATE_CARD;\n    card: CardType;\n}\nexport interface CardSetRotateCardsRight {\n    type: typeof CARDSET_ROTATE_CARDS_RIGHT;\n}\nexport interface CardSetRotateCardsLeft {\n    type: typeof CARDSET_ROTATE_CARDS_LEFT;\n}\nexport interface CardSetCloneCard {\n    type: typeof CARDSET_CLONE_CARD;\n    card: CardType;\n}\nexport interface CardSetRemoveCard {\n    type: typeof CARDSET_REMOVE_CARD;\n    card: CardType;\n}\nexport interface CardSetUpdateCardCount {\n    type: typeof CARDSET_UPDATE_CARD_COUNT;\n    card: CardType;\n    count: number;\n}\nexport interface CardSetAddTextField {\n    type: typeof CARDSET_ADD_TEXT_FIELD;\n}\nexport interface CardSetAddImageField {\n    type: typeof CARDSET_ADD_IMAGE_FIELD;\n}\nexport interface CardSetChangeActiveFieldName {\n    type: typeof CARDSET_CHANGE_ACTIVE_FIELD_NAME;\n    name: string;\n}\nexport interface CardSetRemoveActiveField {\n    type: typeof CARDSET_REMOVE_ACTIVE_FIELD;\n}\nexport interface CardSetRaiseActiveField {\n    type: typeof CARDSET_RAISE_ACTIVE_FIELD;\n}\nexport interface CardSetRaiseActiveFieldToTop {\n    type: typeof CARDSET_RAISE_ACTIVE_FIELD_TO_TOP;\n}\nexport interface CardSetLowerActiveField {\n    type: typeof CARDSET_LOWER_ACTIVE_FIELD;\n}\nexport interface CardSetLowerActiveFieldToBottom {\n    type: typeof CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM;\n}\nexport interface CardSetLockActiveField {\n    type: typeof CARDSET_LOCK_ACTIVE_FIELD;\n}\nexport interface CardSetUnlockActiveField {\n    type: typeof CARDSET_UNLOCK_ACTIVE_FIELD;\n}\nexport interface CardSetChangeFitForActiveField {\n    type: typeof CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD;\n    fit: string;\n}\nexport interface CardSetChangeCropForActiveField {\n    type: typeof CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD;\n    crop: boolean;\n}\n\nexport interface CardSetChangeUnclickableForActiveField {\n    type: typeof CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD;\n    unclickable: boolean;\n}\n\nexport interface CardSetChangeWidth {\n    type: typeof CARDSET_CHANGE_WIDTH;\n    width: number;\n    maintainAspectRatio: boolean;\n    resizeContent: boolean;\n}\n\nexport interface CardSetChangeHeight {\n    type: typeof CARDSET_CHANGE_HEIGHT;\n    height: number;\n    maintainAspectRatio: boolean;\n    resizeContent: boolean;\n}\n\nexport interface CardSetChangeIsTwoSided {\n    type: typeof CARDSET_CHANGE_IS_TWO_SIDED;\n    isTwoSided: boolean;\n}\n\nexport interface CardSetChangeSnappingDistance {\n    type: typeof CARDSET_CHANGE_SNAPPING_DISTANCE;\n    snappingDistance: number;\n}\n\nexport interface CardSetChangeFieldPosition {\n    type: typeof CARDSET_CHANGE_FIELD_POSITION;\n    cardId?: string;\n    fieldId: string;\n    x: number;\n    y: number;\n    group: string;\n}\n\nexport interface CardSetChangeFieldPan {\n    type: typeof CARDSET_CHANGE_FIELD_PAN;\n    cardId?: string;\n    fieldId: string;\n    cx: number;\n    cy: number;\n    group: string;\n}\n\nexport interface CardSetChangeFieldZoom {\n    type: typeof CARDSET_CHANGE_FIELD_ZOOM;\n    cardId?: string;\n    fieldId: string;\n    zoom: number;\n    group: string;\n}\n\nexport interface CardSetChangeFieldSize {\n    type: typeof CARDSET_CHANGE_FIELD_SIZE;\n    cardId?: string;\n    fieldId: string;\n    width: number;\n    height: number;\n    group: string;\n}\nexport interface CardSetChangeFieldAngle {\n    type: typeof CARDSET_CHANGE_FIELD_ANGLE;\n    cardId?: string;\n    fieldId: string;\n    angle: number;\n    group: string;\n}\nexport interface CardSetChangeActiveTextFieldAlign {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN;\n    align: string;\n}\nexport interface CardSetChangeActiveTextFieldColor {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR;\n    color: string;\n}\nexport interface CardSetChangeActiveTextFieldFontFamily {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY;\n    fontFamily: string;\n}\nexport interface CardSetChangeActiveTextFieldFontVariant {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT;\n    fontVariant: string;\n}\nexport interface CardSetChangeActiveTextFieldFontFamilyAndVariant {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT;\n    fontFamily: string;\n    fontVariant: string;\n}\nexport interface CardSetChangeActiveTextFieldFontSize {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE;\n    fontSize: number;\n}\nexport interface CardSetChangeActiveTextFieldLineHeight {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT;\n    lineHeight: number;\n}\nexport interface CardSetChangeText {\n    type: typeof CARDSET_CHANGE_TEXT;\n    cardId: string;\n    fieldId: string;\n    textInfo: TextInfo;\n}\nexport interface CardSetChangeImage {\n    type: typeof CARDSET_CHANGE_IMAGE;\n    cardId: string | undefined;\n    fieldId: string;\n    imageInfo: ImageInfo;\n}\nexport interface CardSetChangeImageBase64 {\n    type: typeof CARDSET_CHANGE_IMAGE_BASE64;\n    cardId: string;\n    fieldId: string;\n    base64?: string;\n}\nexport interface CardSetSetActiveCardAndField {\n    type: typeof CARDSET_SET_ACTIVE_CARD_AND_FIELD;\n    cardId?: string;\n    isBackActive: boolean;\n    fieldId?: string;\n}\nexport interface CardSetChangeApplyToAllCards {\n    type: typeof CARDSET_CHANGE_APPLY_TO_ALLCARDS;\n    applyToAllCards: boolean;\n}\n\nexport enum SidebarState {\n    Settings,\n    Details,\n    Measurements,\n    Image,\n    Text,\n    Upload,\n    ImportExport,\n    Png,\n    Pdf,\n}\nexport interface CardSetSetSidebarState {\n    type: typeof CARDSET_SET_SIDEBAR_STATE;\n    sidebarState: SidebarState | null;\n}\nexport interface CardSetSetZoom {\n    type: typeof CARDSET_SET_ZOOM;\n    zoom: number;\n}\n\nexport type FPLoadCallback = (id: string) => void;\nexport type FPErrorCallback = (error: string) => void;\nexport type FPProgressCallback = (computable: boolean, loaded: number, total: number) => void;\nexport type FPAbortCallback = () => void;\nexport type FPRevertLoadCallback = () => void;\n\nexport interface CardSetUploadImage {\n    type: typeof CARDSET_UPLOAD_IMAGE;\n    gameId: string;\n    file: File;\n    load: FPLoadCallback;\n    error: FPErrorCallback;\n    progress: FPProgressCallback;\n    abort: FPAbortCallback;\n    cancelToken: CancelToken;\n}\n\nexport interface CardSetDeleteImage {\n    type: typeof CARDSET_DELETE_IMAGE;\n    imageId: string;\n    load: FPRevertLoadCallback;\n    error: FPErrorCallback;\n}\n\nexport interface CardSetUndo {\n    type: typeof CARDSET_UNDO;\n}\n\nexport interface CardSetRedo {\n    type: typeof CARDSET_REDO;\n}\n\nexport interface CardSetUploadImageSuccess {\n    type: typeof CARDSET_UPLOAD_IMAGE_SUCCESS;\n}\n\nexport interface CardSetUploadImageFailure {\n    type: typeof CARDSET_UPLOAD_IMAGE_FAILURE;\n}\n\nexport type CardSetSelectAction = CardSetSelectRequest | CardSetSelectSuccess | { type: typeof CARDSET_SELECT_FAILURE };\n\nexport type CardSetModifyAction =\n    | CardSetCreateCard\n    | CardSetRotateCardsRight\n    | CardSetRotateCardsLeft\n    | CardSetCloneCard\n    | CardSetRemoveCard\n    | CardSetUpdateCardCount\n    | CardSetAddTextField\n    | CardSetAddImageField\n    | CardSetChangeActiveFieldName\n    | CardSetRemoveActiveField\n    | CardSetRaiseActiveField\n    | CardSetRaiseActiveFieldToTop\n    | CardSetLowerActiveField\n    | CardSetLowerActiveFieldToBottom\n    | CardSetLockActiveField\n    | CardSetUnlockActiveField\n    | CardSetChangeFitForActiveField\n    | CardSetChangeCropForActiveField\n    | CardSetChangeUnclickableForActiveField\n    | CardSetChangeWidth\n    | CardSetChangeHeight\n    | CardSetChangeIsTwoSided\n    | CardSetChangeSnappingDistance\n    | CardSetChangeFieldPosition\n    | CardSetChangeFieldPan\n    | CardSetChangeFieldZoom\n    | CardSetChangeFieldSize\n    | CardSetChangeFieldAngle\n    | CardSetChangeActiveTextFieldAlign\n    | CardSetChangeActiveTextFieldColor\n    | CardSetChangeActiveTextFieldFontFamily\n    | CardSetChangeActiveTextFieldFontVariant\n    | CardSetChangeActiveTextFieldFontFamilyAndVariant\n    | CardSetChangeActiveTextFieldFontSize\n    | CardSetChangeActiveTextFieldLineHeight\n    | CardSetChangeText\n    | CardSetChangeImage\n    | CardSetChangeImageBase64\n    | CardSetSetActiveCardAndField\n    | CardSetChangeApplyToAllCards\n    | CardSetSetSidebarState\n    | CardSetSetZoom\n    | CardSetUploadImage\n    | CardSetDeleteImage\n    | CardSetUndo\n    | CardSetRedo\n    | CardSetUploadImageSuccess\n    | CardSetUploadImageFailure;\n\nexport type CardSetAction = CardSetImportData | CardSetSelectAction | CardSetModifyAction;\n\nexport interface ImageListRequest {\n    type: typeof IMAGE_LIST_REQUEST;\n    filter: string;\n    location: string;\n}\nexport interface ImageListSuccess {\n    type: typeof IMAGE_LIST_SUCCESS;\n    images: ImageArray;\n}\nexport type ImageListAction = ImageListRequest | ImageListSuccess | { type: typeof IMAGE_LIST_FAILURE };\n\nexport type Action =\n    | InitAction\n    | LoginAction\n    | SignUpAction\n    | GameAction\n    | CardSetsAction\n    | CardSetAction\n    | ImageListAction\n    | MessageAction;\n\nexport type Dispatch = ReduxDispatch<Action>;\n\nexport const messageDisplay = (type: string, text: string, id?: string): MessageDisplay => {\n    return {\n        type: MESSAGE_DISPLAY,\n        message: {\n            id: id || shortid.generate(),\n            type: type,\n            text: text,\n        },\n    };\n};\n\nexport const initRequest = (): InitAction => {\n    return { type: INIT_REQUEST };\n};\n\nexport const loginRequest = (creds: Credentials): LoginAction => {\n    return {\n        type: LOGIN_REQUEST,\n        creds: creds,\n    };\n};\n\nexport const logoutRequest = (): LoginAction => {\n    return {\n        type: LOGOUT_REQUEST,\n    };\n};\n\nexport const signupRequest = (creds: Credentials): SignUpAction => {\n    return {\n        type: SIGNUP_REQUEST,\n        creds: creds,\n    };\n};\n\nexport const gameCreateRequest = (gamename: string): GameAction => {\n    return {\n        type: GAME_CREATE_REQUEST,\n        gamename: gamename,\n    };\n};\n\nexport const gameDeleteRequest = (gameId: string): GameAction => {\n    return {\n        type: GAME_DELETE_REQUEST,\n        gameId,\n    };\n};\n\nexport const gameRenameRequest = (gameId: string, newName: string): GameAction => {\n    return {\n        type: GAME_RENAME_REQUEST,\n        gameId,\n        newName,\n    };\n};\n\nexport const gameListRequest = (): GameAction => {\n    return {\n        type: GAME_LIST_REQUEST,\n    };\n};\n\nexport const gameSelectRequest = (id: string, updateCardSets: boolean): GameAction => {\n    return {\n        type: GAME_SELECT_REQUEST,\n        id,\n        updateCardSets,\n    };\n};\n\nexport const gameCreatePdfRequest = (\n    collectionType: string,\n    collectionId: string,\n    pageWidth: number,\n    pageHeight: number,\n    topBottomMargin: number,\n    leftRightMargin: number,\n    verticalSpace: number,\n    horizontalSpace: number,\n    includeBleedingArea: boolean,\n    cutMarksForScissors: boolean,\n    cutMarksForGuillotine: boolean,\n    cutMarksInMarginArea: boolean,\n    cutMarksOnFrontSideOnly: boolean,\n): GameCreatePdfRequest => {\n    return {\n        type: GAME_CREATE_PDF_REQUEST,\n        collectionType,\n        collectionId,\n        pageWidth,\n        pageHeight,\n        topBottomMargin,\n        leftRightMargin,\n        verticalSpace,\n        horizontalSpace,\n        includeBleedingArea,\n        cutMarksForScissors,\n        cutMarksForGuillotine,\n        cutMarksInMarginArea,\n        cutMarksOnFrontSideOnly,\n    };\n};\n\nexport const gameCreatePngRequest = (\n    dpi: number,\n    collectionType: string,\n    collectionId: string,\n): GameCreatePngRequest => {\n    return {\n        type: GAME_CREATE_PNG_REQUEST,\n        dpi,\n        collectionType,\n        collectionId,\n    };\n};\n\nexport const gameGetAttributionsRequest = (): GameGetAttributionsRequest => {\n    return {\n        type: GAME_GET_ATTRIBUTIONS_REQUEST,\n    };\n};\n\nexport const cardSetCreateRequest = (\n    cardsetname: string,\n    width: number,\n    height: number,\n    gameId: string,\n): CardSetsAction => {\n    return {\n        type: CARDSET_CREATE_REQUEST,\n        cardsetname: cardsetname,\n        width,\n        height,\n        gameId,\n    };\n};\n\nexport const cardSetDeleteRequest = (cardSetId: string): CardSetsAction => {\n    return {\n        type: CARDSET_DELETE_REQUEST,\n        cardSetId,\n    };\n};\n\nexport const cardSetRenameRequest = (cardSetId: string, newName: string): CardSetsAction => {\n    return {\n        type: CARDSET_RENAME_REQUEST,\n        cardSetId,\n        newName,\n    };\n};\n\nexport const cardSetImportData = (data: object): CardSetImportData => {\n    return {\n        type: CARDSET_IMPORT_DATA,\n        data,\n    };\n};\n\nexport const cardSetSelectRequest = (id: string): CardSetSelectRequest => {\n    return {\n        type: CARDSET_SELECT_REQUEST,\n        id,\n    };\n};\n\nexport const cardSetCreateCard = (card: CardType): CardSetCreateCard => {\n    return {\n        type: CARDSET_CREATE_CARD,\n        card,\n    };\n};\n\nexport const cardSetRotateCardsRight = (): CardSetRotateCardsRight => {\n    return {\n        type: CARDSET_ROTATE_CARDS_RIGHT,\n    };\n};\n\nexport const cardSetRotateCardsLeft = (): CardSetRotateCardsLeft => {\n    return {\n        type: CARDSET_ROTATE_CARDS_LEFT,\n    };\n};\n\nexport const cardSetCloneCard = (card: CardType): CardSetCloneCard => {\n    return {\n        type: CARDSET_CLONE_CARD,\n        card,\n    };\n};\n\nexport const cardSetRemoveCard = (card: CardType): CardSetRemoveCard => {\n    return {\n        type: CARDSET_REMOVE_CARD,\n        card,\n    };\n};\n\nexport const cardSetUpdateCardCount = (card: CardType, count: number): CardSetUpdateCardCount => {\n    return {\n        type: CARDSET_UPDATE_CARD_COUNT,\n        card,\n        count,\n    };\n};\n\nexport const cardSetAddTextField = (): CardSetAddTextField => {\n    return {\n        type: CARDSET_ADD_TEXT_FIELD,\n    };\n};\n\nexport const cardSetAddImageField = (): CardSetAddImageField => {\n    return {\n        type: CARDSET_ADD_IMAGE_FIELD,\n    };\n};\n\nexport const cardSetChangeActiveFieldName = (name: string): CardSetChangeActiveFieldName => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_FIELD_NAME,\n        name,\n    };\n};\n\nexport const cardSetRemoveActiveField = (): CardSetRemoveActiveField => {\n    return {\n        type: CARDSET_REMOVE_ACTIVE_FIELD,\n    };\n};\n\nexport const cardSetRaiseActiveField = (): CardSetRaiseActiveField => {\n    return {\n        type: CARDSET_RAISE_ACTIVE_FIELD,\n    };\n};\n\nexport const cardSetRaiseActiveFieldToTop = (): CardSetRaiseActiveFieldToTop => {\n    return {\n        type: CARDSET_RAISE_ACTIVE_FIELD_TO_TOP,\n    };\n};\n\nexport const cardSetLowerActiveField = (): CardSetLowerActiveField => {\n    return {\n        type: CARDSET_LOWER_ACTIVE_FIELD,\n    };\n};\n\nexport const cardSetLowerActiveFieldToBottom = (): CardSetLowerActiveFieldToBottom => {\n    return {\n        type: CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM,\n    };\n};\n\nexport const cardSetLockActiveField = (): CardSetLockActiveField => {\n    return {\n        type: CARDSET_LOCK_ACTIVE_FIELD,\n    };\n};\n\nexport const cardSetUnlockActiveField = (): CardSetUnlockActiveField => {\n    return {\n        type: CARDSET_UNLOCK_ACTIVE_FIELD,\n    };\n};\n\nexport const cardSetChangeFitForActiveField = (fit: string): CardSetChangeFitForActiveField => {\n    return {\n        type: CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD,\n        fit,\n    };\n};\n\nexport const cardSetChangeCropForActiveField = (crop: boolean): CardSetChangeCropForActiveField => {\n    return {\n        type: CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD,\n        crop,\n    };\n};\n\nexport const cardSetChangeUnclickableForActiveField = (\n    unclickable: boolean,\n): CardSetChangeUnclickableForActiveField => {\n    return {\n        type: CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD,\n        unclickable,\n    };\n};\n\nexport const cardSetChangeWidth = (\n    width: number,\n    maintainAspectRatio: boolean,\n    resizeContent: boolean,\n): CardSetChangeWidth => {\n    return {\n        type: CARDSET_CHANGE_WIDTH,\n        width,\n        maintainAspectRatio,\n        resizeContent,\n    };\n};\n\nexport const cardSetChangeHeight = (\n    height: number,\n    maintainAspectRatio: boolean,\n    resizeContent: boolean,\n): CardSetChangeHeight => {\n    return {\n        type: CARDSET_CHANGE_HEIGHT,\n        height,\n        maintainAspectRatio,\n        resizeContent,\n    };\n};\n\nexport const cardSetChangeIsTwoSided = (isTwoSided: boolean): CardSetChangeIsTwoSided => {\n    return {\n        type: CARDSET_CHANGE_IS_TWO_SIDED,\n        isTwoSided,\n    };\n};\n\nexport const cardSetChangeSnappingDistance = (snappingDistance: number): CardSetChangeSnappingDistance => {\n    return {\n        type: CARDSET_CHANGE_SNAPPING_DISTANCE,\n        snappingDistance,\n    };\n};\n\nexport const cardSetChangeFieldPosition = (\n    cardId: string | undefined,\n    fieldId: string,\n    x: number,\n    y: number,\n    group: string,\n): CardSetChangeFieldPosition => {\n    return {\n        type: CARDSET_CHANGE_FIELD_POSITION,\n        cardId,\n        fieldId,\n        x,\n        y,\n        group,\n    };\n};\n\nexport const cardSetChangeFieldPan = (\n    cardId: string | undefined,\n    fieldId: string,\n    cx: number,\n    cy: number,\n    group: string,\n): CardSetChangeFieldPan => {\n    return {\n        type: CARDSET_CHANGE_FIELD_PAN,\n        cardId,\n        fieldId,\n        cx,\n        cy,\n        group,\n    };\n};\n\nexport const cardSetChangeFieldZoom = (\n    cardId: string | undefined,\n    fieldId: string,\n    zoom: number,\n    group: string,\n): CardSetChangeFieldZoom => {\n    return {\n        type: CARDSET_CHANGE_FIELD_ZOOM,\n        cardId,\n        fieldId,\n        zoom,\n        group,\n    };\n};\n\nexport const cardSetChangeFieldSize = (\n    cardId: string | undefined,\n    fieldId: string,\n    width: number,\n    height: number,\n    group: string,\n): CardSetChangeFieldSize => {\n    return {\n        type: CARDSET_CHANGE_FIELD_SIZE,\n        cardId,\n        fieldId,\n        width,\n        height,\n        group,\n    };\n};\n\nexport const cardSetChangeFieldAngle = (\n    cardId: string | undefined,\n    fieldId: string,\n    angle: number,\n    group: string,\n): CardSetChangeFieldAngle => {\n    return {\n        type: CARDSET_CHANGE_FIELD_ANGLE,\n        cardId,\n        fieldId,\n        angle,\n        group,\n    };\n};\n\nexport const cardSetChangeActiveTextFieldAlign = (align: string): CardSetChangeActiveTextFieldAlign => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN,\n        align,\n    };\n};\n\nexport const cardSetChangeActiveTextFieldColor = (color: string): CardSetChangeActiveTextFieldColor => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR,\n        color,\n    };\n};\n\nexport const cardSetChangeActiveTextFieldFontFamily = (fontFamily: string): CardSetChangeActiveTextFieldFontFamily => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY,\n        fontFamily,\n    };\n};\n\nexport const cardSetChangeActiveTextFieldFontVariant = (\n    fontVariant: string,\n): CardSetChangeActiveTextFieldFontVariant => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT,\n        fontVariant,\n    };\n};\n\nexport const cardSetChangeActiveTextFieldFontFamilyAndVariant = (\n    fontFamily: string,\n    fontVariant: string,\n): CardSetChangeActiveTextFieldFontFamilyAndVariant => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT,\n        fontFamily,\n        fontVariant,\n    };\n};\n\nexport const cardSetChangeActiveTextFieldFontSize = (fontSize: number): CardSetChangeActiveTextFieldFontSize => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE,\n        fontSize,\n    };\n};\n\nexport const cardSetChangeActiveTextFieldLineHeight = (lineHeight: number): CardSetChangeActiveTextFieldLineHeight => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT,\n        lineHeight,\n    };\n};\n\nexport const cardSetChangeText = (cardId: string, fieldId: string, textInfo: TextInfo): CardSetChangeText => {\n    return {\n        type: CARDSET_CHANGE_TEXT,\n        cardId,\n        fieldId,\n        textInfo,\n    };\n};\n\nexport const cardSetChangeImage = (\n    cardId: string | undefined,\n    fieldId: string,\n    imageInfo: ImageInfo,\n): CardSetChangeImage => {\n    return {\n        type: CARDSET_CHANGE_IMAGE,\n        cardId,\n        fieldId,\n        imageInfo,\n    };\n};\n\nexport const cardSetChangeImageBase64 = (\n    cardId: string,\n    fieldId: string,\n    base64?: string,\n): CardSetChangeImageBase64 => {\n    return {\n        type: CARDSET_CHANGE_IMAGE_BASE64,\n        cardId,\n        fieldId,\n        base64,\n    };\n};\n\nexport const cardSetActiveCardAndField = (\n    cardId: string | undefined,\n    isBackActive: boolean,\n    fieldId: string | undefined,\n): CardSetSetActiveCardAndField => {\n    return {\n        type: CARDSET_SET_ACTIVE_CARD_AND_FIELD,\n        cardId,\n        isBackActive,\n        fieldId,\n    };\n};\n\nexport const cardSetChangeApplyToAllCards = (applyToAllCards: boolean): CardSetChangeApplyToAllCards => {\n    return {\n        type: CARDSET_CHANGE_APPLY_TO_ALLCARDS,\n        applyToAllCards,\n    };\n};\n\nexport const cardSetSetSidebarState = (sidebarState: SidebarState | null): CardSetSetSidebarState => {\n    return {\n        type: CARDSET_SET_SIDEBAR_STATE,\n        sidebarState,\n    };\n};\n\nexport const cardSetSetZoom = (zoom: number): CardSetSetZoom => {\n    return {\n        type: CARDSET_SET_ZOOM,\n        zoom,\n    };\n};\n\nexport const cardSetUploadImage = (\n    gameId: string,\n    file: File,\n    load: FPLoadCallback,\n    error: FPErrorCallback,\n    progress: FPProgressCallback,\n    abort: FPAbortCallback,\n    cancelToken: CancelToken,\n): CardSetUploadImage => {\n    return {\n        type: CARDSET_UPLOAD_IMAGE,\n        gameId,\n        file,\n        load,\n        error,\n        progress,\n        abort,\n        cancelToken,\n    };\n};\n\nexport const cardSetDeleteImage = (\n    imageId: string,\n    load: FPRevertLoadCallback,\n    error: FPErrorCallback,\n): CardSetDeleteImage => {\n    return {\n        type: CARDSET_DELETE_IMAGE,\n        imageId,\n        load,\n        error,\n    };\n};\n\nexport const cardSetUndo = (): CardSetUndo => {\n    return {\n        type: CARDSET_UNDO,\n    };\n};\n\nexport const cardSetRedo = (): CardSetRedo => {\n    return {\n        type: CARDSET_REDO,\n    };\n};\n\nexport const imageListRequest = (filter: string, location: string): ImageListAction => {\n    return {\n        type: IMAGE_LIST_REQUEST,\n        filter,\n        location,\n    };\n};\n","export const CURRENT_CARDSET_VERSION = 3;\nexport const DEFAULT_FONT = 'Roboto';\nexport const DEFAULT_FONT_VARIANT = 'regular';\nexport const DEFAULT_FONT_SIZE = 8;\nexport const DEFAULT_LINE_HEIGHT = 1.27;\n\nexport const BLEED_WIDTH = 25.4 / 8; // 1/8th of inch in mm\n","import axios, { AxiosError, CancelToken } from 'axios';\n\nimport { Credentials } from './types';\n\nexport function handleAxiosError(error: AxiosError) {\n    if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        // error.response.status);\n        throw new Error(error.response.data.message);\n    } else if (error.request) {\n        console.log(error.request);\n        throw new Error(error.request);\n    } else {\n        throw new Error('Unknown error :(');\n    }\n}\n\nexport function getTokens(creds: Credentials) {\n    return axios\n        .post('/api/tokens', creds)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function refreshToken(refreshTokenValue: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${refreshTokenValue}` },\n    };\n    return axios\n        .post('/api/access_tokens', {}, config)\n        .then(resp => {\n            return resp.data.accessToken;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function deleteAccessToken(token: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .delete('/api/access_tokens', config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            if (error.response.status === 401) return {};\n            handleAxiosError(error);\n        });\n}\n\nexport function deleteRefreshToken(token: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .delete('/api/refresh_tokens', config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            if (error.response.status === 401) return {};\n            handleAxiosError(error);\n        });\n}\n\nexport function registerUser(creds: Credentials) {\n    return axios\n        .post('/api/users', creds)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function getRequest(url: string, token: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .get(url, config)\n        .then(resp => {\n            return resp;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function postRequest(url: string, token: string, data: object) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .post(url, data, config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function postRequestFormDataCancelable(\n    url: string,\n    token: string,\n    data: FormData,\n    progressCallback: (event: ProgressEvent) => void,\n    cancelToken: CancelToken,\n    cancelCallback: () => void,\n) {\n    let config = {\n        headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'multipart/form-data',\n        },\n        cancelToken,\n        onUploadProgress: progressCallback,\n    };\n\n    return axios\n        .post(url, data, config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            if (axios.isCancel(error)) {\n                cancelCallback();\n            } else {\n                handleAxiosError(error);\n            }\n        });\n}\n\nexport function putRequest(url: string, token: string, data: object) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .put(url, data, config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function deleteRequest(url: string, token: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .delete(url, config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n","import axios from 'axios';\nimport StackTrace from 'stacktrace-js';\n\nimport { ImageFieldInfo, ImageToDraw } from './types';\nimport { store } from './store';\n\nexport function downloadBlob(blobURL: string, filename: string, resolve?: () => void) {\n    const tempLink = document.createElement('a');\n    tempLink.style.display = 'none';\n    tempLink.href = blobURL;\n    tempLink.setAttribute('download', filename);\n    if (typeof tempLink.download === 'undefined') {\n        tempLink.setAttribute('target', '_blank');\n    }\n    document.body.appendChild(tempLink);\n    tempLink.click();\n    document.body.removeChild(tempLink);\n    setTimeout(() => {\n        window.URL.revokeObjectURL(blobURL);\n        if (resolve) resolve();\n    }, 100);\n}\n\nexport function rotateVec(x: number, y: number, a: number) {\n    const sinA = Math.sin(a);\n    const cosA = Math.cos(a);\n    const rx = cosA * x - sinA * y;\n    const ry = sinA * x + cosA * y;\n\n    return { rx, ry };\n}\n\nexport function calculateImageDimensions(imageFieldInfo: ImageFieldInfo | ImageToDraw) {\n    let calculatedImageWidth, calculatedImageHeight;\n    let imageWidth = imageFieldInfo.imageWidth || 1;\n    let imageHeight = imageFieldInfo.imageHeight || 1;\n\n    if (!imageFieldInfo.fit || imageFieldInfo.fit === 'width') {\n        calculatedImageWidth = imageFieldInfo.width;\n        calculatedImageHeight = (imageFieldInfo.width * imageHeight) / imageWidth;\n    } else if (imageFieldInfo.fit === 'height') {\n        calculatedImageWidth = (imageFieldInfo.height * imageWidth) / imageHeight;\n        calculatedImageHeight = imageFieldInfo.height;\n    } else {\n        // strech\n        calculatedImageWidth = imageFieldInfo.width;\n        calculatedImageHeight = imageFieldInfo.height;\n    }\n\n    calculatedImageWidth *= imageFieldInfo.zoom || 1;\n    calculatedImageHeight *= imageFieldInfo.zoom || 1;\n\n    return { width: calculatedImageWidth, height: calculatedImageHeight };\n}\n\nexport class UserError extends Error {}\n\nexport function reportError(error: Error) {\n    if (error instanceof UserError) {\n        return;\n    }\n\n    StackTrace.fromError(error).then(stackframes => {\n        var stringifiedStack = stackframes\n            .map(function(sf) {\n                return sf.toString();\n            })\n            .join('\\n');\n\n        if (process.env.NODE_ENV === 'production') {\n            let state = '';\n            if (store) {\n                state = JSON.stringify(store.getState());\n            }\n            axios.post('/api/reports', { message: error.message, stack: stringifiedStack, state });\n        } else {\n            console.log(stringifiedStack);\n        }\n    });\n}\n","import { Dispatch } from './actions';\n\nexport interface SidebarOwnProps {\n    visible: boolean;\n}\n\nexport interface DispatchProps {\n    dispatch: Dispatch;\n}\n\nexport type IdsArray = string[];\n\nexport interface MessageType {\n    id: string;\n    type: string;\n    text: string;\n}\n\nexport interface GameType {\n    id: string;\n    name: string;\n}\n\nexport interface GamesCollection {\n    [propName: string]: GameType;\n}\n\nexport interface PlaceholderBase {\n    id: string;\n    type: string;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    angle: number;\n    locked?: boolean;\n    name?: string;\n    isOnBack?: boolean;\n}\n\nexport interface TextPlaceholderType extends PlaceholderBase {\n    type: 'text';\n    align: string;\n    color: string;\n    fontFamily: string;\n    fontVariant: string;\n    fontSize: number;\n    lineHeight?: number;\n}\n\nexport interface ImagePlaceholderType extends PlaceholderBase {\n    id: string;\n    type: 'image';\n    fit?: string;\n    zoom?: number;\n    cx?: number;\n    cy?: number;\n    crop?: boolean;\n}\n\nexport type PlaceholderType = TextPlaceholderType | ImagePlaceholderType;\n\nexport interface PlaceholdersCollection {\n    [propName: string]: PlaceholderType;\n}\n\nexport interface TextInfo {\n    value: string;\n}\n\nexport interface PlaceholdersTextInfoCollection {\n    [propName: string]: TextInfo;\n}\n\nexport interface PlaceholdersTextInfoByCardCollection {\n    [propName: string]: PlaceholdersTextInfoCollection;\n}\n\nexport interface ImageInfo {\n    url?: string;\n    global?: boolean;\n    base64?: string;\n    color?: string;\n    width?: number;\n    height?: number;\n}\n\nexport interface PlaceholdersImageInfoCollection {\n    [propName: string]: ImageInfo;\n}\n\nexport interface PlaceholdersImageInfoByCardCollection {\n    [propName: string]: PlaceholdersImageInfoCollection;\n}\n\nexport interface FieldBaseInfo {\n    id: string;\n    type: string;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    angle: number;\n    locked?: boolean;\n    name?: string;\n    isOnBack?: boolean;\n    unclickable?: boolean;\n}\n\nexport interface TextFieldInfo extends FieldBaseInfo {\n    type: 'text';\n    value: string;\n    align: string;\n    color: string;\n    fontFamily: string;\n    fontVariant: string;\n    fontSize: number;\n    lineHeight?: number;\n}\n\nexport interface ImageFieldInfo extends FieldBaseInfo {\n    type: 'image';\n    url?: string;\n    global?: boolean;\n    base64?: string;\n    color?: string;\n    imageWidth?: number;\n    imageHeight?: number;\n    fit?: string;\n    zoom?: number;\n    cx?: number;\n    cy?: number;\n    crop?: boolean;\n}\n\nexport type FieldInfo = TextFieldInfo | ImageFieldInfo;\n\nexport interface FieldInfoCollection {\n    [propName: string]: FieldInfo;\n}\n\nexport interface FieldInfoByCardCollection {\n    [propName: string]: FieldInfoCollection;\n}\n\nexport interface CardType {\n    id: string;\n    count: number;\n}\n\nexport interface CardsCollection {\n    [propName: string]: CardType;\n}\n\nexport interface CardSetType {\n    id: string;\n    name: string;\n}\n\nexport interface CardSetsCollection {\n    [propName: string]: CardSetType;\n}\n\nexport interface Credentials {\n    username: string;\n    password: string;\n}\n\nexport interface Image {\n    id: number;\n    name: string;\n    width: number;\n    height: number;\n}\n\nexport type ImageArray = Image[];\n\nexport interface CardSetData {\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    cardsAllIds: string[];\n    cardsById: CardsCollection;\n    fieldsAllIds: string[];\n    fields: FieldInfoByCardCollection;\n}\n\nexport enum ImageType {\n    SVG,\n    SVG_PATH,\n    IMAGE,\n    BLOCK_START,\n    BLOCK_END,\n}\n\nexport interface ImageToDraw {\n    type: ImageType;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    angle: number;\n    fit?: string;\n    data: string;\n    color?: string;\n    scale?: number;\n    imageWidth?: number;\n    imageHeight?: number;\n    zoom?: number;\n    cx?: number;\n    cy?: number;\n    crop?: boolean;\n}\n","import axios from 'axios';\nimport { downloadBlob, calculateImageDimensions } from './utils';\nimport { delay } from 'redux-saga';\nimport { XmlDocument } from 'xmldoc';\nimport JSZip from 'jszip';\nimport { getRequest } from './requests';\nimport { CardSetData, ImageToDraw, ImageType } from './types';\n\nconst SVG_B64_START = 'data:image/svg+xml;base64,';\n\nexport const generatePdfUsingWorker = (\n    accessToken: string,\n    collectionType: string,\n    collectionId: string,\n    pageWidth: number,\n    pageHeight: number,\n    topBottomMargin: number,\n    leftRightMargin: number,\n    verticalSpace: number,\n    horizontalSpace: number,\n    includeBleedingArea: boolean,\n    cutMarksForScissors: boolean,\n    cutMarksForGuillotine: boolean,\n    cutMarksInMarginArea: boolean,\n    cutMarksOnFrontSideOnly: boolean,\n) => {\n    // @ts-ignore\n    if (!window.Worker) {\n        throw new Error('We can not generate PDF because of browser you use. Try using different browser');\n    }\n\n    return new Promise((resolve, reject) => {\n        try {\n            const worker = new Worker('/js/worker.js');\n            worker.addEventListener('message', event => {\n                if (event.data.type === 'generatePdf') {\n                    const blobURL = event.data.url;\n                    downloadBlob(blobURL, 'card.pdf', resolve);\n                } else if (event.data.type === 'generateError') {\n                    const error = event.data.error;\n                    reject({ message: 'PDF generation failed: ' + event.data.message, stack: error.stack });\n                }\n            });\n\n            worker.postMessage({\n                type: 'generatePdf',\n                accessToken,\n                collectionType,\n                collectionId,\n                pageWidth,\n                pageHeight,\n                topBottomMargin,\n                leftRightMargin,\n                verticalSpace,\n                horizontalSpace,\n                includeBleedingArea,\n                cutMarksForScissors,\n                cutMarksForGuillotine,\n                cutMarksInMarginArea,\n                cutMarksOnFrontSideOnly,\n            });\n        } catch (e) {\n            reject(e);\n        }\n    });\n};\n\nfunction loadImage(url: string): Promise<HTMLImageElement> {\n    return new Promise((resolve, reject) => {\n        const img = new Image();\n        img.onload = () => resolve(img);\n        img.onerror = () => reject();\n\n        img.src = url;\n    });\n}\n\nfunction prepareImageToDrawSpace(context: CanvasRenderingContext2D, imageToDraw: ImageToDraw, ptpmm: number) {\n    context.save();\n    let x = (imageToDraw.x + imageToDraw.width / 2) * ptpmm;\n    let y = (imageToDraw.y + imageToDraw.height / 2) * ptpmm;\n    context.translate(x, y);\n    context.rotate(imageToDraw.angle);\n    let ax = (-imageToDraw.width / 2) * ptpmm;\n    let ay = (-imageToDraw.height / 2) * ptpmm;\n    context.translate(ax, ay);\n    if (imageToDraw.crop) {\n        context.rect(0, 0, imageToDraw.width * ptpmm, imageToDraw.height * ptpmm);\n        context.clip();\n    }\n}\n\nfunction fixWidthAndHeightInSvg(data: string) {\n    const doc = new XmlDocument(data);\n    if (!('width' in doc.attr) || !('height' in doc.attr)) {\n        const viewBox = doc.attr['viewBox'].split(' ');\n        doc.attr['width'] = viewBox[2];\n        doc.attr['height'] = viewBox[3];\n    }\n\n    return btoa(doc.toString({ compressed: true }));\n}\n\nclass PNGGenerator {\n    tasksQueue: {\n        type: string;\n        subType: string;\n        imageToDraw?: ImageToDraw;\n        error?: { message: string; stack: string };\n    }[] = [];\n    worker: Worker;\n\n    constructor() {\n        // @ts-ignore\n        if (!window.Worker) {\n            throw new Error('We can not generate PNG because of browser you use. Try using different browser');\n        }\n\n        this.worker = new Worker('/js/worker.js');\n        this.worker.addEventListener('message', event => {\n            if (event.data.type === 'generateCard' || event.data.type === 'generateError') {\n                this.tasksQueue.push(event.data);\n            }\n        });\n    }\n\n    async generateCard(\n        cardSetData: CardSetData,\n        cardId: string,\n        cardIdx: number,\n        dpi: number,\n        isBack: boolean,\n        cardsetFolder: JSZip,\n    ) {\n        this.worker.postMessage({\n            type: 'generateCard',\n            cardSetData,\n            cardId,\n            isBack,\n        });\n\n        let offscreenCanvas = document.createElement('canvas');\n\n        const calculatedWidth = Math.round(dpi * (cardSetData.width / 25.4 + 1 / 4));\n        const calculatedHeight = Math.round(dpi * (cardSetData.height / 25.4 + 1 / 4));\n\n        offscreenCanvas.width = calculatedWidth;\n        offscreenCanvas.height = calculatedHeight;\n        var context = offscreenCanvas.getContext('2d');\n        if (context === null) {\n            throw new Error('We cannot generate PNG because of unknown reason. Try different browser.');\n        }\n        context.fillStyle = 'white';\n        context.fillRect(0, 0, calculatedWidth, calculatedHeight);\n\n        let stopped = false;\n\n        const ptpmm = dpi / 25.4;\n\n        while (!stopped) {\n            while (this.tasksQueue.length > 0) {\n                let task = this.tasksQueue.shift();\n\n                if (task && task.imageToDraw) {\n                    const imageToDraw = task.imageToDraw;\n\n                    if (imageToDraw.type === ImageType.SVG_PATH) {\n                        prepareImageToDrawSpace(context, imageToDraw, ptpmm);\n                        if (imageToDraw.scale && imageToDraw.color) {\n                            context.fillStyle = imageToDraw.color;\n                            context.scale(imageToDraw.scale * ptpmm, imageToDraw.scale * ptpmm);\n                            var p = new Path2D(imageToDraw.data);\n                            context.fill(p);\n                        }\n                        context.restore();\n                    } else if (imageToDraw.type === ImageType.IMAGE || imageToDraw.type === ImageType.SVG) {\n                        prepareImageToDrawSpace(context, imageToDraw, ptpmm);\n\n                        if (imageToDraw.cx !== undefined && imageToDraw.cy !== undefined) {\n                            context.translate(imageToDraw.cx * ptpmm, imageToDraw.cy * ptpmm);\n                        }\n                        let dim = calculateImageDimensions(imageToDraw);\n\n                        let image;\n                        if (imageToDraw.type === ImageType.SVG) {\n                            let svgData = fixWidthAndHeightInSvg(atob(imageToDraw.data));\n                            image = await loadImage(SVG_B64_START + svgData);\n                        } else {\n                            let resp = await axios.get(imageToDraw.data);\n                            if (resp.headers['content-type'] === 'image/svg+xml') {\n                                let svgData = fixWidthAndHeightInSvg(resp.data);\n                                image = await loadImage(SVG_B64_START + svgData);\n                            } else {\n                                image = await loadImage(imageToDraw.data);\n                            }\n                        }\n\n                        context.drawImage(image, 0, 0, dim.width * ptpmm, dim.height * ptpmm);\n\n                        context.restore();\n                    } else if (imageToDraw.type === ImageType.BLOCK_START) {\n                        prepareImageToDrawSpace(context, imageToDraw, ptpmm);\n                    } else if (imageToDraw.type === ImageType.BLOCK_END) {\n                        context.restore();\n                    }\n                }\n\n                if (task && task.subType === 'stop') {\n                    stopped = true;\n                }\n\n                if (task && task.type === 'generateError' && task.error) {\n                    let error = Error('Failed to generate PNG: ' + task.error.message);\n                    error.stack = task.error.stack;\n                    throw error;\n                }\n            }\n            if (!stopped) {\n                await delay(100);\n            }\n        }\n\n        let dataUrl = offscreenCanvas.toDataURL();\n        dataUrl = dataUrl.slice('data:image/png;base64,'.length);\n        cardsetFolder.file(\n            `${cardIdx.toString().padStart(4, '0')}_${cardId}_${isBack ? 'back' : 'front'}.png`,\n            dataUrl,\n            { base64: true },\n        );\n    }\n\n    async generateGame(accessToken: string, gameId: string, dpi: number, zip: JSZip) {\n        let resp = await getRequest('/api/games/' + gameId, accessToken);\n        if (!resp) return;\n\n        const cardsetsList = resp.data.cardsets;\n        for (const cardsetInfo of cardsetsList) {\n            await this.generateCardset(accessToken, cardsetInfo.id, dpi, zip);\n        }\n    }\n\n    async generateCardset(accessToken: string, cardsetId: string, dpi: number, zip: JSZip) {\n        const resp = await getRequest('/api/cardsets/' + cardsetId, accessToken);\n        if (!resp) return;\n\n        let cardSetData: CardSetData = JSON.parse(resp.data.data);\n\n        let cardsetFolder = zip.folder(resp.data.name);\n\n        for (const [cardIdx, cardId] of cardSetData.cardsAllIds.entries()) {\n            await this.generateCard(cardSetData, cardId, cardIdx, dpi, false, cardsetFolder);\n            if (cardSetData.isTwoSided) {\n                await this.generateCard(cardSetData, cardId, cardIdx, dpi, true, cardsetFolder);\n            }\n        }\n    }\n}\n\nexport const generatePngUsingWorker = async (\n    accessToken: string,\n    collectionType: string,\n    collectionId: string,\n    dpi: number,\n) => {\n    const pngGenerator = new PNGGenerator();\n\n    let zip = new JSZip();\n\n    if (collectionType === 'games') {\n        await pngGenerator.generateGame(accessToken, collectionId, dpi, zip);\n    } else if (collectionType === 'cardsets') {\n        await pngGenerator.generateCardset(accessToken, collectionId, dpi, zip);\n    }\n\n    let blob = await zip.generateAsync({ type: 'blob' });\n    let url = window.URL.createObjectURL(blob);\n    downloadBlob(url, 'cards.zip');\n};\n\nasync function getImageAttribution(name: string, accessToken: string) {\n    const resp = await getRequest('/api/images/' + name, accessToken);\n    if (!resp) {\n        return undefined;\n    }\n\n    if (resp.data.metadata) {\n        let meta = JSON.parse(resp.data.metadata);\n        if (meta.source === 'noto-emoji') {\n            return 'Google Noto Emoji';\n        } else if (meta.source === 'twemoji') {\n            return 'Twitter Emoji';\n        } else if (meta.source === 'game-icons' && meta.attribution) {\n            return meta.attribution;\n        }\n    }\n\n    return undefined;\n}\n\nexport const retrieveGameAttributions = async (accessToken: string, gameId: string): Promise<string[]> => {\n    let resp = await getRequest('/api/games/' + gameId, accessToken);\n    if (!resp) return [];\n\n    let attributions = new Set();\n\n    const cardsetsList = resp.data.cardsets;\n    for (const cardsetInfo of cardsetsList) {\n        const resp = await getRequest('/api/cardsets/' + cardsetInfo.id, accessToken);\n        if (!resp) {\n            continue;\n        }\n\n        const cardSetData: CardSetData = JSON.parse(resp.data.data);\n        for (const cardId in cardSetData.fields) {\n            const cardFields = cardSetData.fields[cardId];\n            for (const fieldId in cardFields) {\n                const fieldInfo = cardFields[fieldId];\n                if (fieldInfo.type === 'image' && fieldInfo.url !== undefined) {\n                    let name = fieldInfo.url.replace('/api/imagefiles/', '');\n                    let attribution = await getImageAttribution(name, accessToken);\n                    if (attribution) {\n                        attributions.add(attribution);\n                    }\n                } else if (fieldInfo.type === 'text') {\n                    let start = fieldInfo.value.indexOf('/api/imagefiles/');\n                    while (start !== -1) {\n                        let end = fieldInfo.value.indexOf('\"', start);\n                        let name = fieldInfo.value.slice(start, end).replace('/api/imagefiles/', '');\n\n                        console.log(name);\n\n                        let attribution = await getImageAttribution(name, accessToken);\n                        if (attribution) {\n                            attributions.add(attribution);\n                        }\n\n                        start = fieldInfo.value.indexOf('/api/imagefiles/', end);\n                    }\n                }\n            }\n        }\n    }\n\n    return Array.from(attributions);\n};\n","export function saveTokens(data: { accessToken: string; refreshToken: string }) {\n    localStorage.setItem('accessToken', data.accessToken);\n    localStorage.setItem('refreshToken', data.refreshToken);\n}\n\nexport function saveUsername(username: string) {\n    localStorage.setItem('username', username);\n}\n\nexport function saveAccessToken(accessToken: string) {\n    localStorage.setItem('accessToken', accessToken);\n}\n\nexport function cleanTokens() {\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n}\n\nexport function cleanUsername() {\n    localStorage.removeItem('username');\n}\n\nexport function getTokenFromStorage() {\n    let token = localStorage.getItem('accessToken') || null;\n    return token;\n}\n\nexport function getRefreshTokenFromStorage() {\n    let token = localStorage.getItem('refreshToken') || null;\n    return token;\n}\n\nexport function getUsernameFromStorage() {\n    let username = localStorage.getItem('username') || null;\n    return username;\n}\n","import WebFont from 'webfontloader';\n\nimport { DEFAULT_FONT } from './constants';\nimport { CardSetSelectSuccessDataV3 } from './actions';\n\nconst webFontsLoadPromise = (config: WebFont.Config) =>\n    new Promise((resolve, reject) => {\n        WebFont.load({ ...config, active: resolve, inactive: reject });\n    });\n\nexport const loadFontsUsedInPlaceholders = (data: CardSetSelectSuccessDataV3) => {\n    if (!('fieldsAllIds' in data)) {\n        return;\n    }\n\n    let fontsToLoad: Set<string> = new Set();\n    fontsToLoad.add(DEFAULT_FONT);\n    for (const fieldId of data.fieldsAllIds) {\n        const field = data.fields[data.cardsAllIds[0]][fieldId];\n        if (field && field.type === 'text' && field.fontFamily) {\n            let fontToLoad = field.fontFamily;\n            if (field.fontVariant && field.fontVariant !== 'regular') {\n                fontToLoad += ':' + field.fontVariant;\n            }\n\n            fontsToLoad.add(fontToLoad);\n        }\n    }\n\n    const config: WebFont.Config = {\n        google: {\n            families: [...Array.from(fontsToLoad)],\n        },\n    };\n\n    return webFontsLoadPromise(config);\n};\n","import { CancelToken } from 'axios';\nimport { XmlDocument, XmlNode } from 'xmldoc';\nimport { all, call, put, select, takeEvery, takeLatest } from 'redux-saga/effects';\nimport { delay, SagaIterator } from 'redux-saga';\nimport jwtDecode from 'jwt-decode';\nimport { ActionCreators } from 'redux-undo';\n\nimport { BLEED_WIDTH, CURRENT_CARDSET_VERSION } from './constants';\nimport {\n    CARDSET_ADD_IMAGE_FIELD,\n    CARDSET_ADD_TEXT_FIELD,\n    CARDSET_CHANGE_ACTIVE_FIELD_NAME,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT,\n    CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD,\n    CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD,\n    CARDSET_CHANGE_HEIGHT,\n    CARDSET_CHANGE_IMAGE,\n    CARDSET_CHANGE_IS_TWO_SIDED,\n    CARDSET_CHANGE_FIELD_ANGLE,\n    CARDSET_CHANGE_FIELD_SIZE,\n    CARDSET_CHANGE_SNAPPING_DISTANCE,\n    CARDSET_CHANGE_TEXT,\n    CARDSET_CHANGE_WIDTH,\n    CARDSET_CLONE_CARD,\n    CARDSET_CREATE_CARD,\n    CARDSET_CREATE_FAILURE,\n    CARDSET_CREATE_REQUEST,\n    CARDSET_CREATE_SUCCESS,\n    CARDSET_DELETE_IMAGE,\n    CARDSET_DELETE_REQUEST,\n    CARDSET_IMPORT_DATA,\n    CARDSET_LIST_RESET,\n    CARDSET_LIST_SUCCESS,\n    CARDSET_LOCK_ACTIVE_FIELD,\n    CARDSET_LOWER_ACTIVE_FIELD,\n    CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM,\n    CARDSET_RAISE_ACTIVE_FIELD,\n    CARDSET_RAISE_ACTIVE_FIELD_TO_TOP,\n    CARDSET_REMOVE_ACTIVE_FIELD,\n    CARDSET_REMOVE_CARD,\n    CARDSET_RENAME_REQUEST,\n    CARDSET_SELECT_FAILURE,\n    CARDSET_SELECT_REQUEST,\n    CARDSET_SELECT_SUCCESS,\n    CARDSET_SET_ZOOM,\n    CARDSET_UNLOCK_ACTIVE_FIELD,\n    CARDSET_UPDATE_CARD_COUNT,\n    CARDSET_UPLOAD_IMAGE,\n    CARDSET_UPLOAD_IMAGE_FAILURE,\n    CARDSET_UPLOAD_IMAGE_SUCCESS,\n    CardSetChangeFitForActiveField,\n    CardSetChangeImage,\n    CardSetCreateRequest,\n    CardSetDeleteImage,\n    CardSetDeleteRequest,\n    CardSetRenameRequest,\n    CardSetSelectRequest,\n    CardSetUploadImage,\n    GAME_CREATE_PDF_FAILURE,\n    GAME_CREATE_PDF_REQUEST,\n    GAME_CREATE_PDF_SUCCESS,\n    GAME_CREATE_PNG_FAILURE,\n    GAME_CREATE_PNG_REQUEST,\n    GAME_GET_ATTRIBUTIONS_REQUEST,\n    GAME_CREATE_PNG_SUCCESS,\n    GAME_CREATE_REQUEST,\n    GAME_CREATE_SUCCESS,\n    GAME_DELETE_REQUEST,\n    GAME_LIST_FAILURE,\n    GAME_LIST_REQUEST,\n    GAME_LIST_RESET,\n    GAME_LIST_SUCCESS,\n    GAME_RENAME_REQUEST,\n    GAME_SELECT_FAILURE,\n    GAME_SELECT_REQUEST,\n    GAME_SELECT_SUCCESS,\n    GameCreatePdfRequest,\n    GameCreatePngRequest,\n    GameCreateRequest,\n    GameDeleteRequest,\n    GameRenameRequest,\n    GameSelectRequest,\n    IMAGE_LIST_FAILURE,\n    IMAGE_LIST_REQUEST,\n    IMAGE_LIST_SUCCESS,\n    INIT_REQUEST,\n    ImageListRequest,\n    LOGIN_FAILURE,\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGOUT_FAILURE,\n    LOGOUT_REQUEST,\n    LOGOUT_SUCCESS,\n    LoginRequest,\n    MESSAGE_DISPLAY,\n    MESSAGE_HIDE,\n    MessageDisplay,\n    SIGNUP_FAILURE,\n    SIGNUP_REQUEST,\n    SIGNUP_SUCCESS,\n    SignUpRequest,\n    cardSetChangeImageBase64,\n    gameSelectRequest,\n    messageDisplay,\n    CARDSET_CHANGE_FIELD_PAN,\n    CARDSET_CHANGE_FIELD_ZOOM,\n    CARDSETS_SELECT_SUCCESS,\n    CARDSET_CHANGE_FIELD_POSITION,\n    CardSetSelectSuccessData,\n    CardSetSelectSuccessDataV2,\n    CardSetSelectSuccessDataV3,\n    CARDSET_UNDO,\n    CARDSET_REDO,\n    CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD,\n    CARDSET_ROTATE_CARDS_RIGHT,\n    CARDSET_ROTATE_CARDS_LEFT,\n    GAME_GET_ATTRIBUTIONS_SUCCESS,\n    GAME_GET_ATTRIBUTIONS_FAILURE,\n} from './actions';\nimport { CardSetType, CardSetsCollection, GameType, GamesCollection, FieldInfoByCardCollection } from './types';\nimport { State } from './reducers';\nimport {\n    deleteAccessToken,\n    deleteRefreshToken,\n    deleteRequest,\n    getRequest,\n    getTokens,\n    postRequest,\n    postRequestFormDataCancelable,\n    putRequest,\n    refreshToken,\n    registerUser,\n} from './requests';\nimport { generatePdfUsingWorker, generatePngUsingWorker, retrieveGameAttributions } from './workerController';\nimport {\n    getTokenFromStorage,\n    getRefreshTokenFromStorage,\n    saveAccessToken,\n    saveTokens,\n    cleanTokens,\n    saveUsername,\n    getUsernameFromStorage,\n} from './storage';\nimport { loadFontsUsedInPlaceholders } from './fontLoader';\nimport { reportError, UserError } from './utils';\n\n// Messages\nexport function* putError(e: Error): SagaIterator {\n    yield put(messageDisplay('error', e.message));\n    yield call(reportError, e);\n}\n\nexport function* putInfo(message: string): SagaIterator {\n    yield put(messageDisplay('info', message));\n}\n\nexport function* putProgress(text: string): SagaIterator {\n    const message = messageDisplay('progress', text, text);\n    yield put(message);\n    return message.message.id;\n}\n\nexport function* hideProgress(messageId: string): SagaIterator {\n    yield put({ type: MESSAGE_HIDE, messageId });\n}\n\nexport function* handleMessageDisplay(action: MessageDisplay): SagaIterator {\n    if (action.message.type === 'progress') return;\n\n    yield call(delay, 5000);\n    yield put({ type: MESSAGE_HIDE, messageId: action.message.id });\n}\n\n// Login & Signup\n// Token handling\n\nexport function validateToken(token: string): boolean {\n    try {\n        const decoded = jwtDecode<{ exp: number }>(token);\n        const valid = decoded.exp - new Date().getTime() / 1000 > 5;\n        return valid;\n    } catch (e) {\n        return false;\n    }\n}\n\nexport function* getToken(withErrorIfMissing: boolean, getFreshToken = false): SagaIterator {\n    const token = yield call(getTokenFromStorage);\n    if (token && !getFreshToken) {\n        const tokenValid = yield call(validateToken, token);\n        if (tokenValid) return token;\n    }\n\n    const refreshTokenValue = yield call(getRefreshTokenFromStorage);\n    if (!refreshTokenValue) {\n        yield put({ type: LOGOUT_REQUEST });\n        if (withErrorIfMissing) {\n            throw new UserError('User not logged in.');\n        }\n        return null;\n    }\n\n    const refreshTokenValid = yield call(validateToken, refreshTokenValue);\n    if (!refreshTokenValid) {\n        yield put({ type: LOGOUT_REQUEST });\n        if (withErrorIfMissing) {\n            throw new UserError('User not logged in.');\n        }\n        return null;\n    }\n\n    const newToken = yield call(refreshToken, refreshTokenValue);\n    yield call(saveAccessToken, newToken);\n    return newToken;\n}\n\n// Login\n\nexport function* handleLoginRequest(action: LoginRequest): SagaIterator {\n    try {\n        const data = yield call(getTokens, action.creds);\n        yield call(saveTokens, data);\n        yield call(saveUsername, action.creds.username);\n        yield put({ type: LOGIN_SUCCESS, username: action.creds.username });\n    } catch (e) {\n        yield put({ type: LOGIN_FAILURE });\n        yield call(putError, e);\n    }\n}\n\nexport function* handleLoginSuccess(): SagaIterator {\n    yield put({ type: GAME_LIST_REQUEST });\n}\n\n// Logout\n\nexport function* logoutToken(): SagaIterator {\n    const token = yield call(getTokenFromStorage);\n    if (token) {\n        const tokenValid = yield call(validateToken, token);\n        if (tokenValid) {\n            yield call(deleteAccessToken, token);\n        }\n    }\n}\n\nexport function* logoutRefreshToken(): SagaIterator {\n    const refreshTokenValue = yield call(getRefreshTokenFromStorage);\n    if (refreshTokenValue) {\n        const refreshTokenValid = yield call(validateToken, refreshTokenValue);\n        if (refreshTokenValid) {\n            yield call(deleteRefreshToken, refreshTokenValue);\n        }\n    }\n}\n\nexport function* handleLogoutRequest(): SagaIterator {\n    try {\n        yield call(logoutToken);\n        yield call(logoutRefreshToken);\n        yield call(cleanTokens);\n\n        yield put({ type: CARDSET_LIST_RESET });\n        yield put({ type: GAME_LIST_RESET });\n        yield put({ type: LOGOUT_SUCCESS });\n    } catch (e) {\n        yield put({ type: LOGOUT_FAILURE });\n        yield call(putError, e);\n    }\n}\n\n// Sign-up\n\nexport function* handleSignupRequest(action: SignUpRequest): SagaIterator {\n    try {\n        const data = yield call(registerUser, action.creds);\n        yield call(saveTokens, data);\n        yield call(saveUsername, action.creds.username);\n        yield put({ type: SIGNUP_SUCCESS });\n        yield put({ type: LOGIN_SUCCESS, username: action.creds.username });\n    } catch (e) {\n        yield put({ type: SIGNUP_FAILURE });\n        yield call(putError, e);\n    }\n}\n\n// Init\nexport function* handleInitRequest(): SagaIterator {\n    try {\n        let token = yield call(getToken, false);\n        if (token) {\n            const username = yield call(getUsernameFromStorage);\n            yield put({ type: LOGIN_SUCCESS, username });\n        }\n    } catch (e) {}\n}\n\n// Authorized Requests\nexport function* authorizedGetRequest(url: string): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(getRequest, url, token);\n}\n\nexport function* authorizedPostRequest(url: string, data: object): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(postRequest, url, token, data);\n}\n\nexport function* authorizedDeleteRequest(url: string): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(deleteRequest, url, token);\n}\n\nexport function* authorizedPostFormDataRequest(\n    url: string,\n    data: FormData,\n    progressCallback: (event: ProgressEvent) => void,\n    cancelToken: CancelToken,\n    cancelCallback: () => void,\n): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(postRequestFormDataCancelable, url, token, data, progressCallback, cancelToken, cancelCallback);\n}\n\nexport function* authorizedPutRequest(url: string, data: object): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(putRequest, url, token, data);\n}\n\n// Game\nexport function* handleGameCreateRequest(action: GameCreateRequest): SagaIterator {\n    try {\n        yield call(authorizedPostRequest, '/api/games', { name: action.gamename });\n        yield put({\n            type: GAME_CREATE_SUCCESS,\n        });\n        yield put({ type: GAME_LIST_REQUEST });\n    } catch (e) {\n        yield call(putError, e);\n    }\n}\n\nexport function* handleGameDeleteRequest(action: GameDeleteRequest): SagaIterator {\n    try {\n        yield call(authorizedDeleteRequest, '/api/games/' + action.gameId);\n        yield put({ type: GAME_LIST_REQUEST });\n    } catch (e) {\n        yield call(putError, e);\n    }\n}\n\nexport function* handleGameRenameRequest(action: GameRenameRequest): SagaIterator {\n    try {\n        yield call(delay, 500);\n        yield call(authorizedPutRequest, '/api/games/' + action.gameId, { name: action.newName });\n    } catch (e) {\n        yield call(putError, e);\n    }\n}\n\nexport function* handleGameListRequest(): SagaIterator {\n    try {\n        const resp = yield call(authorizedGetRequest, '/api/games');\n        const allIds = resp.data.games.map((g: GameType) => g.id);\n        const byId = resp.data.games.reduce((obj: GamesCollection, g: GameType) => {\n            obj[g.id] = g;\n            return obj;\n        }, {});\n        yield put({\n            type: GAME_LIST_SUCCESS,\n            allIds,\n            byId,\n        });\n    } catch (e) {\n        yield put({ type: GAME_LIST_FAILURE });\n        yield call(putError, e);\n    }\n}\n\nexport function* handleGameSelectRequest(action: GameSelectRequest): SagaIterator {\n    try {\n        const resp = yield call(authorizedGetRequest, '/api/games/' + action.id);\n        yield put({\n            type: GAME_SELECT_SUCCESS,\n            id: action.id,\n        });\n\n        if (action.updateCardSets) {\n            const allIds = resp.data.cardsets.map((g: CardSetType) => g.id);\n            const byId = resp.data.cardsets.reduce((obj: CardSetsCollection, g: CardSetType) => {\n                obj[g.id] = g;\n                return obj;\n            }, {});\n            yield put({\n                type: CARDSET_LIST_SUCCESS,\n                allIds,\n                byId,\n            });\n        }\n    } catch (e) {\n        yield put({ type: GAME_SELECT_FAILURE });\n        yield call(putError, e);\n    }\n}\n\nexport function* handleGameCreatePdfRequest(action: GameCreatePdfRequest): SagaIterator {\n    let progressId = null;\n    try {\n        progressId = yield call(putProgress, 'Generating PDF');\n\n        const token = yield call(getToken, true, true);\n\n        yield call(\n            generatePdfUsingWorker,\n            token,\n            action.collectionType,\n            action.collectionId,\n            action.pageWidth,\n            action.pageHeight,\n            action.topBottomMargin,\n            action.leftRightMargin,\n            action.verticalSpace,\n            action.horizontalSpace,\n            action.includeBleedingArea,\n            action.cutMarksForScissors,\n            action.cutMarksForGuillotine,\n            action.cutMarksInMarginArea,\n            action.cutMarksOnFrontSideOnly,\n        );\n        yield call(hideProgress, progressId);\n        yield call(putInfo, 'PDF generated.');\n        yield put({\n            type: GAME_CREATE_PDF_SUCCESS,\n        });\n    } catch (e) {\n        yield put({ type: GAME_CREATE_PDF_FAILURE });\n        if (progressId !== null) yield call(hideProgress, progressId);\n        yield call(putError, e);\n    }\n}\n\nexport function* handleGameCreatePngRequest(action: GameCreatePngRequest): SagaIterator {\n    let progressId = null;\n    try {\n        progressId = yield call(putProgress, 'Generating PNG');\n\n        const token = yield call(getToken, true, true);\n\n        yield call(generatePngUsingWorker, token, action.collectionType, action.collectionId, action.dpi);\n        yield call(hideProgress, progressId);\n        yield call(putInfo, 'PNG generated.');\n        yield put({\n            type: GAME_CREATE_PNG_SUCCESS,\n        });\n    } catch (e) {\n        yield put({ type: GAME_CREATE_PNG_FAILURE });\n        if (progressId !== null) yield call(hideProgress, progressId);\n        yield call(putError, e);\n    }\n}\n\nexport function* handleGameGetAttributionsRequest(): SagaIterator {\n    let progressId = null;\n    try {\n        progressId = yield call(putProgress, 'Retrieving attributions');\n\n        const token = yield call(getToken, true, true);\n        const state: State = yield select();\n\n        let attributions = [];\n        if (state.games.active !== null) {\n            attributions = yield call(retrieveGameAttributions, token, state.games.active);\n        }\n        yield call(hideProgress, progressId);\n        yield call(putInfo, 'Attributions retrieved.');\n        yield put({\n            type: GAME_GET_ATTRIBUTIONS_SUCCESS,\n            attributions,\n        });\n    } catch (e) {\n        yield put({ type: GAME_GET_ATTRIBUTIONS_FAILURE });\n        if (progressId !== null) yield call(hideProgress, progressId);\n        yield call(putError, e);\n    }\n}\n\n// Card Set\n\nexport function* handleCardSetCreateRequest(action: CardSetCreateRequest): SagaIterator {\n    try {\n        yield call(authorizedPostRequest, '/api/cardsets', {\n            name: action.cardsetname,\n            gameId: action.gameId,\n            data: JSON.stringify({ width: action.width, height: action.height, version: CURRENT_CARDSET_VERSION }),\n        });\n        yield put({\n            type: CARDSET_CREATE_SUCCESS,\n        });\n        yield put(gameSelectRequest(action.gameId, true));\n    } catch (e) {\n        yield put({ type: CARDSET_CREATE_FAILURE });\n        yield call(putError, e);\n    }\n}\n\nexport function* handleCardSetDeleteRequest(action: CardSetDeleteRequest): SagaIterator {\n    try {\n        yield call(authorizedDeleteRequest, '/api/cardsets/' + action.cardSetId);\n        yield put({ type: GAME_LIST_REQUEST });\n\n        const state = yield select();\n        yield put(gameSelectRequest(state.games.active, true));\n    } catch (e) {\n        yield call(putError, e);\n    }\n}\n\nexport function* handleCardSetRenameRequest(action: CardSetRenameRequest): SagaIterator {\n    try {\n        yield call(delay, 500);\n        yield call(authorizedPutRequest, '/api/cardsets/' + action.cardSetId, { name: action.newName });\n    } catch (e) {\n        yield call(putError, e);\n    }\n}\n\nfunction loadImageInfo(url: string): Promise<{ width: number; height: number }> {\n    return new Promise((resolve, reject) => {\n        try {\n            let img = new Image();\n\n            img.addEventListener('load', function() {\n                resolve({\n                    width: this.naturalWidth,\n                    height: this.naturalHeight,\n                });\n            });\n            img.src = url;\n        } catch (e) {\n            reject(e);\n        }\n    });\n}\n\nexport async function processData(data: CardSetSelectSuccessData): Promise<CardSetSelectSuccessDataV3> {\n    let processedData = data;\n\n    if (!('version' in processedData)) {\n        if (!('placeholdersAllIds' in processedData) && 'placeholders' in processedData) {\n            (processedData as CardSetSelectSuccessDataV2).placeholdersAllIds = Object.keys(\n                (processedData as CardSetSelectSuccessDataV2).placeholders,\n            );\n        }\n\n        (processedData as CardSetSelectSuccessDataV2).version = 2;\n        for (const plId in (processedData as CardSetSelectSuccessDataV2).placeholders) {\n            const placeholder = (processedData as CardSetSelectSuccessDataV2).placeholders[plId];\n            placeholder.x += BLEED_WIDTH;\n            placeholder.y += BLEED_WIDTH;\n        }\n    }\n\n    if (processedData.version === 2) {\n        let fieldsAllIds = processedData.placeholdersAllIds;\n        let fields: FieldInfoByCardCollection = {};\n\n        for (const cardId of processedData.cardsAllIds) {\n            fields[cardId] = {};\n\n            for (const fieldId of fieldsAllIds) {\n                let placeholder = processedData.placeholders[fieldId];\n                if (placeholder.type === 'image') {\n                    if (cardId in processedData.images && fieldId in processedData.images[cardId]) {\n                        let imageInfo = processedData.images[cardId][fieldId];\n                        fields[cardId][fieldId] = {\n                            type: 'image',\n                            ...placeholder,\n                            url: imageInfo && imageInfo.url,\n                            global: imageInfo && imageInfo.global,\n                            base64: imageInfo && imageInfo.base64,\n                            color: imageInfo && imageInfo.color,\n                            imageWidth: imageInfo && imageInfo.width,\n                            imageHeight: imageInfo && imageInfo.height,\n                        };\n                    } else {\n                        fields[cardId][fieldId] = {\n                            type: 'image',\n                            ...placeholder,\n                        };\n                    }\n                } else if (placeholder.type === 'text') {\n                    if (cardId in processedData.texts && fieldId in processedData.texts[cardId]) {\n                        fields[cardId][fieldId] = {\n                            type: 'text',\n                            ...placeholder,\n                            ...processedData.texts[cardId][fieldId],\n                        };\n                    } else {\n                        fields[cardId][fieldId] = {\n                            type: 'text',\n                            ...placeholder,\n                            value: '',\n                        };\n                    }\n                }\n            }\n        }\n\n        processedData = {\n            version: 3,\n            width: processedData.width,\n            height: processedData.height,\n            isTwoSided: processedData.isTwoSided,\n            snappingDistance: processedData.snappingDistance,\n            cardsAllIds: processedData.cardsAllIds,\n            cardsById: processedData.cardsById,\n            fields,\n            fieldsAllIds,\n            zoom: processedData.zoom,\n        };\n    }\n\n    // We must load image data on each new load because user can upload new images\n    // that have different dimensions.\n    for (const cardId in processedData.fields) {\n        for (const fieldId in processedData.fields[cardId]) {\n            const fieldInfo = processedData.fields[cardId][fieldId];\n            if (fieldInfo.type === 'image' && fieldInfo.url) {\n                let info = await loadImageInfo(fieldInfo.url);\n                if (info.width !== fieldInfo.imageWidth || info.height !== fieldInfo.imageHeight) {\n                    fieldInfo.imageWidth = info.width;\n                    fieldInfo.imageHeight = info.height;\n                    fieldInfo.cx = 0;\n                    fieldInfo.cy = 0;\n                    fieldInfo.zoom = 1;\n                }\n            }\n        }\n    }\n\n    return processedData;\n}\n\nexport function* handleCardSetSelectRequest(action: CardSetSelectRequest): SagaIterator {\n    try {\n        const resp = yield call(authorizedGetRequest, '/api/cardsets/' + action.id);\n        let parsedData = JSON.parse(resp.data.data);\n        let processedData: CardSetSelectSuccessDataV3 = yield call(processData, parsedData);\n\n        yield call(loadFontsUsedInPlaceholders, processedData);\n        yield put({\n            type: CARDSETS_SELECT_SUCCESS,\n            id: resp.data.id,\n            name: resp.data.name,\n        });\n        yield put({\n            type: CARDSET_SELECT_SUCCESS,\n            data: processedData,\n        });\n        yield put(gameSelectRequest(resp.data.gameId, false));\n        yield put(ActionCreators.clearHistory());\n    } catch (e) {\n        yield put({ type: CARDSET_SELECT_FAILURE });\n        yield call(putError, e);\n    }\n}\n\nexport function* handleCardSetUploadImage(action: CardSetUploadImage): SagaIterator {\n    let progressId = null;\n    try {\n        progressId = yield call(putProgress, `Uploading ${action.file.name}`);\n        const formData = new FormData();\n        formData.set('gameId', action.gameId);\n        formData.append('image', action.file, action.file.name);\n\n        const data = yield call(\n            authorizedPostFormDataRequest,\n            '/api/images',\n            formData,\n            (event: ProgressEvent) => action.progress(event.lengthComputable, event.loaded, event.total),\n            action.cancelToken,\n            () => {\n                action.abort();\n            },\n        );\n        if (data !== undefined) {\n            // not cancelled\n            action.load(data.imageId.toString());\n            yield put({ type: CARDSET_UPLOAD_IMAGE_SUCCESS });\n            yield call(putInfo, `${action.file.name} uploaded`);\n        }\n        yield call(hideProgress, progressId);\n    } catch (e) {\n        yield put({ type: CARDSET_UPLOAD_IMAGE_FAILURE });\n        if (progressId !== null) yield call(hideProgress, progressId);\n        yield call(putError, e);\n        action.error(e.message);\n    }\n}\n\nexport function* handleCardSetDeleteImage(action: CardSetDeleteImage): SagaIterator {\n    try {\n        yield call(authorizedDeleteRequest, '/api/images/' + action.imageId);\n        action.load();\n    } catch (e) {\n        action.error(e.message);\n    }\n}\n\nfunction walkChildren(node: XmlNode, color: string) {\n    if (node.type === 'element') {\n        for (let child of node.children) {\n            if (child.type === 'element')\n                if (child.name === 'path') {\n                    child.attr['fill'] = color;\n                }\n            walkChildren(child, color);\n        }\n    }\n}\n\nfunction adjustSvg(data: string, preserveAspectRatio: boolean, color?: string): string {\n    const doc = new XmlDocument(data);\n    if (!preserveAspectRatio) {\n        doc.attr['preserveAspectRatio'] = 'none';\n    }\n\n    if (color) {\n        walkChildren(doc, color);\n    }\n\n    return btoa(doc.toString({ compressed: true }));\n}\n\nexport function* handleCardSetFitChange(action: CardSetChangeFitForActiveField): SagaIterator {\n    try {\n        yield call(delay, 100);\n        const state: State = yield select();\n\n        if (state.cardset.present.activeFieldId === undefined) {\n            return;\n        }\n\n        for (const cardId in state.cardset.present.cardsById) {\n            const fieldInfo = state.cardset.present.fields[cardId][state.cardset.present.activeFieldId];\n            if (fieldInfo.type === 'image' && fieldInfo.url) {\n                const imageResp = yield call(authorizedGetRequest, fieldInfo.url);\n                if (imageResp.headers['content-type'] === 'image/svg+xml') {\n                    if (action.fit === 'stretch') {\n                        const svg = adjustSvg(imageResp.data, false, fieldInfo.color);\n                        yield put(cardSetChangeImageBase64(cardId, state.cardset.present.activeFieldId, svg));\n                    } else if (fieldInfo.color) {\n                        const svg = adjustSvg(imageResp.data, true, fieldInfo.color);\n                        yield put(cardSetChangeImageBase64(cardId, state.cardset.present.activeFieldId, svg));\n                    } else {\n                        yield put(cardSetChangeImageBase64(cardId, state.cardset.present.activeFieldId, undefined));\n                    }\n                }\n            }\n        }\n    } catch (e) {\n        yield call(putError, e);\n    }\n}\n\nexport function* handleCardSetChangeImage(action: CardSetChangeImage): SagaIterator {\n    try {\n        yield call(delay, 100);\n        const state: State = yield select();\n\n        let cardsToFix =\n            state.cardset.present.applyToAllCards || action.cardId === undefined\n                ? state.cardset.present.cardsAllIds\n                : [action.cardId];\n\n        for (const cardId of cardsToFix) {\n            const cardFields = state.cardset.present.fields[cardId];\n            const imageInfo = cardFields[action.fieldId];\n            if (imageInfo.type === 'image' && imageInfo.url) {\n                const imageResp = yield call(authorizedGetRequest, imageInfo.url);\n\n                if (imageResp.headers['content-type'] === 'image/svg+xml') {\n                    const name = imageInfo.name || imageInfo.id;\n\n                    for (const fieldId in cardFields) {\n                        const fieldInfo = cardFields[fieldId];\n\n                        if ((fieldInfo.name === name || fieldInfo.id === name) && fieldInfo.type === 'image') {\n                            if (fieldInfo.fit === 'stretch') {\n                                const svg = adjustSvg(imageResp.data, false, imageInfo.color);\n                                yield put(cardSetChangeImageBase64(cardId, fieldId, svg));\n                            } else if (imageInfo.color) {\n                                const svg = adjustSvg(imageResp.data, true, imageInfo.color);\n                                yield put(cardSetChangeImageBase64(cardId, fieldId, svg));\n                            } else {\n                                yield put(cardSetChangeImageBase64(cardId, fieldId, undefined));\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    } catch (e) {\n        yield call(putError, e);\n    }\n}\n\nfunction closeHandler(e: Event) {\n    e.preventDefault();\n    e.returnValue = true;\n}\n\nfunction preventWindowClose() {\n    window.addEventListener('beforeunload', closeHandler);\n}\n\nfunction allowWindowClose() {\n    window.removeEventListener('beforeunload', closeHandler);\n}\n\nexport function* handleCardSetChange(): SagaIterator {\n    let progressId = null;\n\n    try {\n        preventWindowClose();\n        progressId = yield call(putProgress, 'Saving Card Set');\n\n        yield call(delay, 1000);\n        const state: State = yield select();\n\n        const cardsetId = state.cardsets.active;\n        if (cardsetId === null) throw Error('Save failed.');\n        const data = {\n            width: state.cardset.present.width,\n            height: state.cardset.present.height,\n            isTwoSided: state.cardset.present.isTwoSided,\n            snappingDistance: state.cardset.present.snappingDistance,\n            version: state.cardset.present.version,\n            cardsAllIds: state.cardset.present.cardsAllIds,\n            cardsById: state.cardset.present.cardsById,\n            fieldsAllIds: state.cardset.present.fieldsAllIds,\n            fields: state.cardset.present.fields,\n            zoom: state.cardset.present.zoom,\n        };\n\n        yield call(authorizedPutRequest, '/api/cardsets/' + cardsetId, {\n            name: state.cardsets.byId[cardsetId].name,\n            data: JSON.stringify(data),\n        });\n        yield call(hideProgress, progressId);\n        yield call(putInfo, 'Card Set saved');\n        allowWindowClose();\n    } catch (e) {\n        if (progressId !== null) yield call(hideProgress, progressId);\n        yield call(putError, e);\n        allowWindowClose();\n    }\n}\n\n// Images\nexport function* handleImageListRequest(action: ImageListRequest): SagaIterator {\n    try {\n        yield call(delay, 200);\n        const state = yield select();\n\n        const filter = encodeURIComponent(action.filter);\n        const location = encodeURIComponent(action.location);\n        const game = encodeURIComponent(state.games.active);\n        const resp = yield call(authorizedGetRequest, `/api/images?name=${filter}&location=${location}&game=${game}`);\n        const images = resp.data.images;\n        yield put({\n            type: IMAGE_LIST_SUCCESS,\n            images,\n        });\n    } catch (e) {\n        yield put({ type: IMAGE_LIST_FAILURE });\n        yield call(putError, e);\n    }\n}\n\n// All\nexport function* rootSaga(): SagaIterator {\n    yield all([\n        takeEvery(MESSAGE_DISPLAY, handleMessageDisplay),\n        takeLatest(LOGIN_REQUEST, handleLoginRequest),\n        takeLatest(LOGIN_SUCCESS, handleLoginSuccess),\n        takeLatest(LOGOUT_REQUEST, handleLogoutRequest),\n        takeLatest(SIGNUP_REQUEST, handleSignupRequest),\n        takeLatest(GAME_CREATE_REQUEST, handleGameCreateRequest),\n        takeLatest(GAME_DELETE_REQUEST, handleGameDeleteRequest),\n        takeLatest(GAME_RENAME_REQUEST, handleGameRenameRequest),\n        takeLatest(GAME_LIST_REQUEST, handleGameListRequest),\n        takeLatest(GAME_SELECT_REQUEST, handleGameSelectRequest),\n        takeLatest(GAME_CREATE_PDF_REQUEST, handleGameCreatePdfRequest),\n        takeLatest(GAME_CREATE_PNG_REQUEST, handleGameCreatePngRequest),\n        takeLatest(GAME_GET_ATTRIBUTIONS_REQUEST, handleGameGetAttributionsRequest),\n        takeLatest(CARDSET_CREATE_REQUEST, handleCardSetCreateRequest),\n        takeLatest(CARDSET_DELETE_REQUEST, handleCardSetDeleteRequest),\n        takeLatest(CARDSET_RENAME_REQUEST, handleCardSetRenameRequest),\n        takeLatest(CARDSET_SELECT_REQUEST, handleCardSetSelectRequest),\n        takeEvery(CARDSET_UPLOAD_IMAGE, handleCardSetUploadImage),\n        takeEvery(CARDSET_DELETE_IMAGE, handleCardSetDeleteImage),\n        takeEvery(CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD, handleCardSetFitChange),\n        takeEvery(CARDSET_CHANGE_IMAGE, handleCardSetChangeImage),\n\n        takeLatest(CARDSET_CREATE_CARD, handleCardSetChange),\n        takeLatest(CARDSET_ROTATE_CARDS_RIGHT, handleCardSetChange),\n        takeLatest(CARDSET_ROTATE_CARDS_LEFT, handleCardSetChange),\n        takeLatest(CARDSET_CLONE_CARD, handleCardSetChange),\n        takeLatest(CARDSET_REMOVE_CARD, handleCardSetChange),\n        takeLatest(CARDSET_UPDATE_CARD_COUNT, handleCardSetChange),\n        takeLatest(CARDSET_ADD_TEXT_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_ADD_IMAGE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_FIELD_NAME, handleCardSetChange),\n        takeLatest(CARDSET_REMOVE_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_RAISE_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_RAISE_ACTIVE_FIELD_TO_TOP, handleCardSetChange),\n        takeLatest(CARDSET_LOWER_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM, handleCardSetChange),\n        takeLatest(CARDSET_LOCK_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_UNLOCK_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_WIDTH, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_HEIGHT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_IS_TWO_SIDED, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_SNAPPING_DISTANCE, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_FIELD_POSITION, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_FIELD_PAN, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_FIELD_ZOOM, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_FIELD_SIZE, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_FIELD_ANGLE, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_TEXT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_IMAGE, handleCardSetChange),\n        takeLatest(CARDSET_SET_ZOOM, handleCardSetChange),\n        takeLatest(CARDSET_IMPORT_DATA, handleCardSetChange),\n        takeLatest(CARDSET_UNDO, handleCardSetChange),\n        takeLatest(CARDSET_REDO, handleCardSetChange),\n\n        takeLatest(IMAGE_LIST_REQUEST, handleImageListRequest),\n\n        takeLatest(INIT_REQUEST, handleInitRequest),\n    ]);\n}\n","import { combineReducers } from 'redux';\nimport shortid from 'shortid';\nimport undoable from 'redux-undo';\n\nimport {\n    CARDSET_ADD_IMAGE_FIELD,\n    CARDSET_ADD_TEXT_FIELD,\n    CARDSET_CHANGE_ACTIVE_FIELD_NAME,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT,\n    CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD,\n    CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD,\n    CARDSET_CHANGE_HEIGHT,\n    CARDSET_CHANGE_IMAGE,\n    CARDSET_CHANGE_IMAGE_BASE64,\n    CARDSET_CHANGE_IS_TWO_SIDED,\n    CARDSET_CHANGE_FIELD_ANGLE,\n    CARDSET_CHANGE_FIELD_SIZE,\n    CARDSET_CHANGE_SNAPPING_DISTANCE,\n    CARDSET_CHANGE_TEXT,\n    CARDSET_CHANGE_WIDTH,\n    CARDSET_CLONE_CARD,\n    CARDSET_CREATE_CARD,\n    CARDSET_IMPORT_DATA,\n    CARDSET_LIST_RESET,\n    CARDSET_LIST_SUCCESS,\n    CARDSET_LOCK_ACTIVE_FIELD,\n    CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM,\n    CARDSET_RAISE_ACTIVE_FIELD_TO_TOP,\n    CARDSET_REMOVE_ACTIVE_FIELD,\n    CARDSET_REMOVE_CARD,\n    CARDSET_RENAME_REQUEST,\n    CARDSET_SELECT_FAILURE,\n    CARDSET_SELECT_REQUEST,\n    CARDSET_SELECT_SUCCESS,\n    CARDSET_SET_ACTIVE_CARD_AND_FIELD,\n    CARDSET_SET_SIDEBAR_STATE,\n    CARDSET_SET_ZOOM,\n    CARDSET_UNLOCK_ACTIVE_FIELD,\n    CARDSET_UPDATE_CARD_COUNT,\n    CardSetAction,\n    GAME_CREATE_PDF_FAILURE,\n    GAME_CREATE_PDF_REQUEST,\n    GAME_CREATE_PDF_SUCCESS,\n    GAME_CREATE_PNG_FAILURE,\n    GAME_CREATE_PNG_REQUEST,\n    GAME_CREATE_PNG_SUCCESS,\n    GAME_LIST_RESET,\n    GAME_LIST_SUCCESS,\n    GAME_RENAME_REQUEST,\n    GAME_SELECT_FAILURE,\n    GAME_SELECT_REQUEST,\n    GAME_SELECT_SUCCESS,\n    GameAction,\n    IMAGE_LIST_REQUEST,\n    IMAGE_LIST_SUCCESS,\n    ImageListAction,\n    LOGIN_FAILURE,\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGOUT_SUCCESS,\n    LoginAction,\n    MESSAGE_DISPLAY,\n    MESSAGE_HIDE,\n    MessageAction,\n    SIGNUP_FAILURE,\n    SIGNUP_REQUEST,\n    SIGNUP_SUCCESS,\n    SidebarState,\n    SignUpAction,\n    CARDSET_CHANGE_FIELD_ZOOM,\n    CARDSET_CHANGE_FIELD_PAN,\n    CardSetsAction,\n    CARDSETS_SELECT_SUCCESS,\n    CARDSET_CHANGE_FIELD_POSITION,\n    CARDSET_UNDO,\n    CARDSET_REDO,\n    Action,\n    CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD,\n    CARDSET_CHANGE_APPLY_TO_ALLCARDS,\n    CARDSET_RAISE_ACTIVE_FIELD,\n    CARDSET_LOWER_ACTIVE_FIELD,\n    CARDSET_ROTATE_CARDS_RIGHT,\n    CARDSET_ROTATE_CARDS_LEFT,\n    GAME_GET_ATTRIBUTIONS_SUCCESS,\n    GAME_GET_ATTRIBUTIONS_FAILURE,\n} from './actions';\nimport {\n    CURRENT_CARDSET_VERSION,\n    DEFAULT_FONT,\n    DEFAULT_FONT_SIZE,\n    DEFAULT_FONT_VARIANT,\n    DEFAULT_LINE_HEIGHT,\n    BLEED_WIDTH,\n} from './constants';\nimport {\n    CardSetsCollection,\n    CardsCollection,\n    GamesCollection,\n    IdsArray,\n    ImageArray,\n    MessageType,\n    FieldInfoByCardCollection,\n    FieldInfoCollection,\n} from './types';\nimport { rotateVec } from './utils';\n\nexport const ACTIVITY_SELECTING = 0x1;\nexport const ACTIVITY_CREATING_PDF = 0x2;\nexport const ACTIVITY_CREATING_PNG = 0x4;\n\nexport interface MessageState {\n    messages: MessageType[];\n}\n\nexport const DefaultMessageState: MessageState = {\n    messages: [],\n};\n\nexport interface AuthState {\n    isAuthenticated?: boolean;\n    user: string;\n}\n\nexport const DefaultAuthState: AuthState = {\n    isAuthenticated: undefined,\n    user: '', // XXX: user can manipulate this information by changing local storage. Do not trust this info.\n};\n\nexport interface SignUpState {\n    signingup: boolean;\n}\n\nexport const DefaultSignUpState: SignUpState = {\n    signingup: false,\n};\n\nexport interface GameState {\n    byId: GamesCollection;\n    allIds: IdsArray;\n    activity: number;\n    active: string | null;\n    attributions: string[];\n}\n\nexport const DefaultGameState: GameState = {\n    byId: {},\n    allIds: [],\n    activity: 0,\n    active: null,\n    attributions: [],\n};\n\nexport interface TextSettings {\n    align: string;\n    color: string;\n    fontFamily: string;\n    fontVariant: string;\n    fontSize: number;\n    lineHeight?: number;\n}\n\nexport interface CardSetsState {\n    byId: CardSetsCollection;\n    allIds: IdsArray;\n    active: string | null;\n}\n\nexport const DefaultCardSetsState: CardSetsState = {\n    byId: {},\n    allIds: [],\n    active: null,\n};\n\nexport interface CardSetState {\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    snappingDistance: number;\n    version: number;\n    activity: number;\n    cardsAllIds: IdsArray;\n    cardsById: CardsCollection;\n    activeCardId?: string;\n    isBackActive: boolean;\n    activeFieldId?: string;\n    fieldsAllIds: IdsArray;\n    fields: FieldInfoByCardCollection;\n    textSettings: TextSettings;\n    activeSidebar: SidebarState | null;\n    zoom: number;\n    applyToAllCards: boolean;\n}\n\nexport const DefaultCardSetState: CardSetState = {\n    width: 63.5,\n    height: 88.9,\n    isTwoSided: false,\n    snappingDistance: 1,\n    version: CURRENT_CARDSET_VERSION,\n    activity: 0,\n    cardsById: {},\n    cardsAllIds: [],\n    activeCardId: undefined,\n    isBackActive: false,\n    activeFieldId: undefined,\n    fieldsAllIds: [],\n    fields: {},\n    textSettings: {\n        align: 'left',\n        color: '#000000',\n        fontFamily: DEFAULT_FONT,\n        fontVariant: DEFAULT_FONT_VARIANT,\n        fontSize: DEFAULT_FONT_SIZE,\n        lineHeight: DEFAULT_LINE_HEIGHT,\n    },\n    activeSidebar: null,\n    zoom: 1,\n    applyToAllCards: false,\n};\n\nexport interface ImageState {\n    activity: number;\n    filter: string;\n    images: ImageArray;\n}\n\nexport const DefaultImageState: ImageState = {\n    activity: 0,\n    filter: '',\n    images: [],\n};\n\nexport interface State {\n    message: MessageState;\n    auth: AuthState;\n    signup: SignUpState;\n    games: GameState;\n    cardsets: CardSetsState;\n    cardset: {\n        present: CardSetState;\n    };\n    images: ImageState;\n}\n\nexport const DefaultState: State = {\n    message: DefaultMessageState,\n    auth: DefaultAuthState,\n    signup: DefaultSignUpState,\n    games: DefaultGameState,\n    cardsets: DefaultCardSetsState,\n    cardset: {\n        present: DefaultCardSetState,\n    },\n    images: DefaultImageState,\n};\n\nexport function message(state: MessageState = DefaultMessageState, action: MessageAction): MessageState {\n    switch (action.type) {\n        case MESSAGE_DISPLAY:\n            const found = state.messages.find(m => m.id === action.message.id);\n            if (found) return state;\n\n            return {\n                ...state,\n                messages: state.messages.concat(action.message),\n            };\n        case MESSAGE_HIDE:\n            return Object.assign({}, state, {\n                messages: state.messages.filter(m => m.id !== action.messageId),\n            });\n        default:\n            return state;\n    }\n}\n\nexport function auth(state: AuthState = DefaultAuthState, action: LoginAction): AuthState {\n    switch (action.type) {\n        case LOGIN_REQUEST:\n            return Object.assign({}, state, {\n                isAuthenticated: undefined,\n                user: '',\n            });\n        case LOGIN_SUCCESS:\n            return Object.assign({}, state, {\n                isAuthenticated: true,\n                user: action.username,\n            });\n        case LOGIN_FAILURE:\n            return Object.assign({}, state, {\n                isAuthenticated: false,\n            });\n        case LOGOUT_SUCCESS:\n            return Object.assign({}, state, {\n                isAuthenticated: false,\n                user: '',\n            });\n        default:\n            return state;\n    }\n}\n\nexport function signup(state: SignUpState = DefaultSignUpState, action: SignUpAction): SignUpState {\n    switch (action.type) {\n        case SIGNUP_REQUEST:\n            return Object.assign({}, state, {\n                signingup: true,\n            });\n        case SIGNUP_SUCCESS:\n            return Object.assign({}, state, {\n                signingup: false,\n            });\n        case SIGNUP_FAILURE:\n            return Object.assign({}, state, {\n                signingup: false,\n            });\n        default:\n            return state;\n    }\n}\n\nexport function games(state: GameState = DefaultGameState, action: GameAction): GameState {\n    switch (action.type) {\n        case GAME_RENAME_REQUEST:\n            const game = state.byId[action.gameId];\n\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    [game.id]: {\n                        ...game,\n                        name: action.newName,\n                    },\n                },\n            };\n        case GAME_LIST_SUCCESS:\n            return Object.assign({}, state, {\n                byId: action.byId,\n                allIds: action.allIds,\n            });\n        case GAME_LIST_RESET:\n            return Object.assign({}, state, {\n                activity: 0,\n                byId: {},\n                allIds: [],\n            });\n        case GAME_SELECT_REQUEST:\n            return Object.assign({}, state, {\n                activity: ACTIVITY_SELECTING,\n            });\n        case GAME_SELECT_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_SELECTING,\n                active: action.id,\n                attributions: [],\n            });\n        case GAME_SELECT_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_SELECTING,\n                attributions: [],\n            });\n        case GAME_CREATE_PDF_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_CREATING_PDF,\n            });\n        case GAME_CREATE_PDF_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING_PDF,\n            });\n        case GAME_CREATE_PDF_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING_PDF,\n            });\n        case GAME_CREATE_PNG_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_CREATING_PNG,\n            });\n        case GAME_CREATE_PNG_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING_PNG,\n            });\n        case GAME_CREATE_PNG_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING_PNG,\n            });\n        case GAME_GET_ATTRIBUTIONS_SUCCESS:\n            return {\n                ...state,\n                attributions: action.attributions,\n            };\n        case GAME_GET_ATTRIBUTIONS_FAILURE:\n            return {\n                ...state,\n                attributions: [],\n            };\n        default:\n            return state;\n    }\n}\n\nexport function cardsets(state: CardSetsState = DefaultCardSetsState, action: CardSetsAction): CardSetsState {\n    switch (action.type) {\n        case CARDSETS_SELECT_SUCCESS:\n            return {\n                ...state,\n                active: action.id,\n                byId: Object.assign({}, state.byId, {\n                    [action.id]: {\n                        id: action.id,\n                        name: action.name,\n                    },\n                }),\n            };\n        case CARDSET_RENAME_REQUEST:\n            const cardset = state.byId[action.cardSetId];\n\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    [cardset.id]: {\n                        ...cardset,\n                        name: action.newName,\n                    },\n                },\n            };\n        case CARDSET_LIST_SUCCESS:\n            return Object.assign({}, state, {\n                byId: action.byId,\n                allIds: action.allIds,\n            });\n        case CARDSET_LIST_RESET:\n            return Object.assign({}, state, {\n                byId: {},\n                allIds: [],\n            });\n        default:\n            return state;\n    }\n}\n\nfunction resizeFields(fields: FieldInfoByCardCollection, widthRatio: number, heightRatio: number) {\n    let newFields = { ...fields };\n    for (const cardId in newFields) {\n        let cardFields = { ...fields[cardId] };\n        for (const fieldId in cardFields) {\n            let fieldInfo = { ...cardFields[fieldId] };\n            fieldInfo.x = (fieldInfo.x - BLEED_WIDTH) * widthRatio + BLEED_WIDTH;\n            fieldInfo.y = (fieldInfo.y - BLEED_WIDTH) * heightRatio + BLEED_WIDTH;\n            fieldInfo.width *= widthRatio;\n            fieldInfo.height *= heightRatio;\n            if (fieldInfo.type === 'image') {\n                if (fieldInfo.cx) {\n                    fieldInfo.cx *= widthRatio;\n                }\n                if (fieldInfo.cy) {\n                    fieldInfo.cy *= heightRatio;\n                }\n            } else if (fieldInfo.type === 'text') {\n                fieldInfo.fontSize *= heightRatio;\n            }\n            cardFields[fieldId] = fieldInfo;\n        }\n        newFields[cardId] = cardFields;\n    }\n    return newFields;\n}\n\nexport function cardset(state: CardSetState = DefaultCardSetState, action: CardSetAction): CardSetState {\n    switch (action.type) {\n        case CARDSET_SELECT_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_SELECTING,\n                isTwoSided: false,\n                cardsAllIds: [],\n                cardsById: {},\n                fields: {},\n                fieldsAllIds: [],\n                activeCardId: undefined,\n                activeFieldId: undefined,\n                isBackActive: false,\n            });\n        case CARDSET_SELECT_SUCCESS: {\n            return {\n                ...state,\n                activity: state.activity & ~ACTIVITY_SELECTING,\n                width: action.data.width || 63.5,\n                height: action.data.height || 88.9,\n                isTwoSided: action.data.isTwoSided || false,\n                snappingDistance: action.data.snappingDistance || 1,\n                version: action.data.version,\n                cardsAllIds: action.data.cardsAllIds || [],\n                cardsById: action.data.cardsById || {},\n                fields: action.data.fields || {},\n                fieldsAllIds: action.data.fieldsAllIds || [],\n                activeCardId: undefined,\n                activeFieldId: undefined,\n                isBackActive: false,\n                zoom: action.data.zoom || 1,\n            };\n        }\n        case CARDSET_SELECT_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_SELECTING,\n            });\n        case CARDSET_CREATE_CARD: {\n            let cardFields: FieldInfoCollection = {};\n            if (state.cardsAllIds.length > 0) {\n                cardFields = {\n                    ...state.fields[state.cardsAllIds[0]],\n                };\n\n                for (const fieldId of state.fieldsAllIds) {\n                    let fieldInfo = { ...cardFields[fieldId] };\n                    if (fieldInfo.type === 'text') {\n                        fieldInfo.value = '';\n                    } else if (fieldInfo.type === 'image') {\n                        delete fieldInfo.url;\n                        delete fieldInfo.base64;\n                    }\n                    cardFields[fieldId] = fieldInfo;\n                }\n            }\n            return {\n                ...state,\n                cardsById: {\n                    ...state.cardsById,\n                    [action.card.id]: action.card,\n                },\n                cardsAllIds: state.cardsAllIds ? state.cardsAllIds.concat(action.card.id) : [action.card.id],\n                fields: {\n                    ...state.fields,\n                    [action.card.id]: cardFields,\n                },\n            };\n        }\n        case CARDSET_ROTATE_CARDS_RIGHT: {\n            let fields = { ...state.fields };\n            let width = state.height;\n            let height = state.width;\n\n            for (const cardId in fields) {\n                let cardFields = { ...fields[cardId] };\n                for (const fieldId in cardFields) {\n                    let fieldInfo = { ...cardFields[fieldId] };\n\n                    let cx = fieldInfo.x + fieldInfo.width / 2 - BLEED_WIDTH;\n                    let cy = fieldInfo.y + fieldInfo.height / 2 - BLEED_WIDTH;\n\n                    let newCx = width - cy;\n                    let newCy = cx;\n\n                    fieldInfo.x = newCx - fieldInfo.width / 2 + BLEED_WIDTH;\n                    fieldInfo.y = newCy - fieldInfo.height / 2 + BLEED_WIDTH;\n                    fieldInfo.angle += Math.PI / 2;\n\n                    cardFields[fieldId] = fieldInfo;\n                }\n\n                fields[cardId] = cardFields;\n            }\n            return {\n                ...state,\n                width,\n                height,\n                fields,\n            };\n        }\n        case CARDSET_ROTATE_CARDS_LEFT: {\n            let fields = { ...state.fields };\n            let width = state.height;\n            let height = state.width;\n\n            for (const cardId in fields) {\n                let cardFields = { ...fields[cardId] };\n                for (const fieldId in cardFields) {\n                    let fieldInfo = { ...cardFields[fieldId] };\n\n                    let cx = fieldInfo.x + fieldInfo.width / 2 - BLEED_WIDTH;\n                    let cy = fieldInfo.y + fieldInfo.height / 2 - BLEED_WIDTH;\n\n                    let newCx = cy;\n                    let newCy = height - cx;\n\n                    fieldInfo.x = newCx - fieldInfo.width / 2 + BLEED_WIDTH;\n                    fieldInfo.y = newCy - fieldInfo.height / 2 + BLEED_WIDTH;\n                    fieldInfo.angle -= Math.PI / 2;\n\n                    cardFields[fieldId] = fieldInfo;\n                }\n\n                fields[cardId] = cardFields;\n            }\n            return {\n                ...state,\n                width,\n                height,\n                fields,\n            };\n        }\n        case CARDSET_CLONE_CARD: {\n            let newCard = { ...action.card, id: shortid.generate() };\n\n            const index = state.cardsAllIds.indexOf(action.card.id) + 1;\n            const cardsAllIds = [...state.cardsAllIds.slice(0, index), newCard.id, ...state.cardsAllIds.slice(index)];\n\n            return {\n                ...state,\n                cardsById: {\n                    ...state.cardsById,\n                    [newCard.id]: newCard,\n                },\n                cardsAllIds,\n                fields: {\n                    ...state.fields,\n                    [newCard.id]: {\n                        ...state.fields[action.card.id],\n                    },\n                },\n            };\n        }\n        case CARDSET_REMOVE_CARD: {\n            const cardId = action.card.id;\n            let cardsById = { ...state.cardsById };\n            delete cardsById[cardId];\n\n            let fields = { ...state.fields };\n            if (cardId in fields) {\n                delete fields[cardId];\n            }\n\n            let activeCardId = state.activeCardId === cardId ? undefined : state.activeCardId;\n\n            const cardsAllIds = state.cardsAllIds.filter(id => id !== cardId);\n\n            let fieldsAllIds = state.fieldsAllIds;\n            if (cardsAllIds.length === 0) {\n                fieldsAllIds = [];\n            }\n\n            return {\n                ...state,\n                cardsById,\n                cardsAllIds,\n                fieldsAllIds,\n                fields,\n                activeCardId,\n            };\n        }\n        case CARDSET_UPDATE_CARD_COUNT: {\n            const cardId = action.card.id;\n            let card = { ...state.cardsById[cardId] };\n            card.count = action.count;\n\n            return {\n                ...state,\n                cardsById: {\n                    ...state.cardsById,\n                    [cardId]: card,\n                },\n            };\n        }\n        case CARDSET_ADD_TEXT_FIELD: {\n            if (state.cardsAllIds.length === 0) {\n                return state;\n            }\n\n            let textSettings = { ...state.textSettings };\n            const id = shortid.generate();\n            let fields: FieldInfoByCardCollection = {};\n            for (const cardId of state.cardsAllIds) {\n                fields[cardId] = {\n                    ...state.fields[cardId],\n                    [id]: {\n                        type: 'text',\n                        id,\n                        x: 5,\n                        y: 5,\n                        width: 20,\n                        height: 10,\n                        angle: 0,\n                        isOnBack: state.isBackActive,\n                        value: '',\n                        align: textSettings.align,\n                        color: textSettings.color,\n                        fontFamily: textSettings.fontFamily,\n                        fontVariant: textSettings.fontVariant,\n                        fontSize: textSettings.fontSize,\n                        lineHeight: textSettings.lineHeight || DEFAULT_LINE_HEIGHT,\n                    },\n                };\n            }\n\n            return {\n                ...state,\n                fieldsAllIds: [...state.fieldsAllIds, id],\n                fields,\n            };\n        }\n        case CARDSET_ADD_IMAGE_FIELD: {\n            if (state.cardsAllIds.length === 0) {\n                return state;\n            }\n\n            const id = shortid.generate();\n            let fields: FieldInfoByCardCollection = {};\n            for (const cardId of state.cardsAllIds) {\n                fields[cardId] = {\n                    ...state.fields[cardId],\n                    [id]: {\n                        type: 'image',\n                        id,\n                        x: 5,\n                        y: 5,\n                        width: 20,\n                        height: 20,\n                        angle: 0,\n                        isOnBack: state.isBackActive,\n                        crop: true,\n                    },\n                };\n            }\n\n            return {\n                ...state,\n                fieldsAllIds: [...state.fieldsAllIds, id],\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_ACTIVE_FIELD_NAME: {\n            if (state.activeFieldId !== undefined) {\n                let fields: FieldInfoByCardCollection = {};\n                let id = state.activeFieldId;\n\n                for (const cardId of state.cardsAllIds) {\n                    fields[cardId] = {\n                        ...state.fields[cardId],\n                        [id]: {\n                            ...state.fields[cardId][id],\n                            name: action.name,\n                        },\n                    };\n                }\n\n                return {\n                    ...state,\n                    fields,\n                };\n            }\n\n            return state;\n        }\n\n        case CARDSET_REMOVE_ACTIVE_FIELD: {\n            const fieldId = state.activeFieldId;\n            if (fieldId !== undefined) {\n                let fieldsAllIds = [...state.fieldsAllIds];\n                let fieldIndex = fieldsAllIds.indexOf(fieldId);\n                if (fieldIndex !== -1) {\n                    fieldsAllIds.splice(fieldIndex, 1);\n                }\n\n                let fields = { ...state.fields };\n                for (const cardId in fields) {\n                    if (fieldId in fields[cardId] && !fields[cardId][fieldId].locked) {\n                        let cardFields = { ...fields[cardId] };\n                        delete cardFields[fieldId];\n                        fields[cardId] = cardFields;\n                    }\n                }\n\n                return {\n                    ...state,\n                    fieldsAllIds,\n                    fields,\n                    activeFieldId: undefined,\n                };\n            }\n            return state;\n        }\n        case CARDSET_RAISE_ACTIVE_FIELD: {\n            let fieldsAllIds = [...state.fieldsAllIds];\n\n            if (state.activeFieldId !== undefined) {\n                let index = fieldsAllIds.indexOf(state.activeFieldId);\n                if (index !== -1 && index < fieldsAllIds.length - 1) {\n                    fieldsAllIds.splice(index + 1, 0, fieldsAllIds.splice(index, 1)[0]);\n                }\n            }\n\n            return {\n                ...state,\n                fieldsAllIds,\n            };\n        }\n        case CARDSET_RAISE_ACTIVE_FIELD_TO_TOP: {\n            let fieldsAllIds = [...state.fieldsAllIds];\n\n            if (state.activeFieldId !== undefined) {\n                let index = fieldsAllIds.indexOf(state.activeFieldId);\n                if (index !== -1) {\n                    fieldsAllIds.push(fieldsAllIds.splice(index, 1)[0]);\n                }\n            }\n\n            return {\n                ...state,\n                fieldsAllIds,\n            };\n        }\n        case CARDSET_LOWER_ACTIVE_FIELD: {\n            let fieldsAllIds = [...state.fieldsAllIds];\n\n            if (state.activeFieldId !== undefined) {\n                let index = fieldsAllIds.indexOf(state.activeFieldId);\n                if (index > 0) {\n                    fieldsAllIds.splice(index - 1, 0, fieldsAllIds.splice(index, 1)[0]);\n                }\n            }\n\n            return {\n                ...state,\n                fieldsAllIds,\n            };\n        }\n        case CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM: {\n            let fieldsAllIds = [...state.fieldsAllIds];\n\n            if (state.activeFieldId !== undefined) {\n                let index = fieldsAllIds.indexOf(state.activeFieldId);\n                if (index !== -1) {\n                    fieldsAllIds.unshift(fieldsAllIds.splice(index, 1)[0]);\n                }\n            }\n\n            return {\n                ...state,\n                fieldsAllIds,\n            };\n        }\n        case CARDSET_LOCK_ACTIVE_FIELD: {\n            if (state.activeFieldId) {\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        cardFields[fieldId] = {\n                            ...cardFields[fieldId],\n                            locked: true,\n                        };\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                };\n            }\n\n            return state;\n        }\n        case CARDSET_UNLOCK_ACTIVE_FIELD: {\n            if (state.activeFieldId) {\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        cardFields[fieldId] = {\n                            ...cardFields[fieldId],\n                            locked: false,\n                        };\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                };\n            }\n\n            return state;\n        }\n        case CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD: {\n            if (state.activeFieldId) {\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = { ...cardFields[fieldId] };\n                        if (fieldInfo.type === 'image') {\n                            fieldInfo.fit = action.fit;\n                        }\n                        cardFields[fieldId] = fieldInfo;\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                };\n            }\n\n            return state;\n        }\n        case CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD: {\n            if (state.activeFieldId) {\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = { ...cardFields[fieldId] };\n                        if (fieldInfo.type === 'image') {\n                            fieldInfo.crop = action.crop;\n                        }\n                        cardFields[fieldId] = fieldInfo;\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                };\n            }\n\n            return state;\n        }\n        case CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD: {\n            if (state.activeFieldId) {\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = { ...cardFields[fieldId] };\n                        fieldInfo.unclickable = action.unclickable;\n                        cardFields[fieldId] = fieldInfo;\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                };\n            }\n\n            return state;\n        }\n        case CARDSET_CHANGE_WIDTH: {\n            if (!action.width || action.width <= 0) {\n                return state;\n            }\n\n            let height = state.height;\n            if (action.maintainAspectRatio) {\n                height = action.width * (state.height / state.width);\n            }\n\n            let fields = state.fields;\n            if (action.resizeContent) {\n                fields = resizeFields(fields, action.width / state.width, height / state.height);\n            }\n\n            return {\n                ...state,\n                width: action.width,\n                height,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_HEIGHT: {\n            if (!action.height || action.height <= 0) {\n                return state;\n            }\n\n            let width = state.width;\n            if (action.maintainAspectRatio) {\n                width = action.height * (state.width / state.height);\n            }\n\n            let fields = state.fields;\n            if (action.resizeContent) {\n                fields = resizeFields(fields, width / state.width, action.height / state.height);\n            }\n\n            return {\n                ...state,\n                height: action.height,\n                width,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_IS_TWO_SIDED: {\n            return {\n                ...state,\n                isTwoSided: action.isTwoSided,\n            };\n        }\n        case CARDSET_CHANGE_SNAPPING_DISTANCE: {\n            return {\n                ...state,\n                snappingDistance: action.snappingDistance,\n            };\n        }\n        case CARDSET_CHANGE_FIELD_POSITION: {\n            let x = action.x;\n            let y = action.y;\n            let snappingDistance = state.snappingDistance;\n\n            if (snappingDistance !== 0) {\n                x = Math.round(x / snappingDistance) * snappingDistance;\n                y = Math.round(y / snappingDistance) * snappingDistance;\n            }\n\n            let fields = { ...state.fields };\n            let fieldId = action.fieldId;\n            let cardsToFix = action.cardId ? [action.cardId] : state.cardsAllIds;\n\n            for (const cardId of cardsToFix) {\n                let cardFields = { ...fields[cardId] };\n                if (fieldId in cardFields) {\n                    cardFields[fieldId] = {\n                        ...cardFields[fieldId],\n                        x,\n                        y,\n                    };\n                }\n                fields[cardId] = cardFields;\n            }\n\n            return {\n                ...state,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_FIELD_PAN: {\n            let { cx, cy } = action;\n\n            let fields = { ...state.fields };\n            let fieldId = action.fieldId;\n            let cardsToFix = state.applyToAllCards || action.cardId === undefined ? state.cardsAllIds : [action.cardId];\n\n            for (const cardId of cardsToFix) {\n                let cardFields = { ...fields[cardId] };\n                if (fieldId in cardFields) {\n                    let fieldInfo = cardFields[fieldId];\n                    if (fieldInfo.type === 'image') {\n                        let { width, height, zoom, fit, imageWidth, imageHeight } = fieldInfo;\n                        zoom = zoom || 1;\n                        imageHeight = imageHeight || 1;\n                        imageWidth = imageWidth || 1;\n\n                        let fitImageWidth = width;\n                        let fitImageHeight = height;\n                        if (fit === 'width' || fit === undefined) {\n                            fitImageHeight = width * (imageHeight / imageWidth);\n                        } else if (fit === 'height') {\n                            fitImageWidth = height * (imageWidth / imageHeight);\n                        }\n                        cx = Math.min(Math.max(width - zoom * fitImageWidth, cx), 0);\n                        cy = Math.min(Math.max(height - zoom * fitImageHeight, cy), 0);\n\n                        cardFields[fieldId] = {\n                            ...fieldInfo,\n                            cx,\n                            cy,\n                        };\n                    }\n                }\n                fields[cardId] = cardFields;\n            }\n\n            return {\n                ...state,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_FIELD_ZOOM: {\n            let zoom = action.zoom;\n\n            let fields = { ...state.fields };\n            let fieldId = action.fieldId;\n\n            let cardsToFix = state.applyToAllCards || action.cardId === undefined ? state.cardsAllIds : [action.cardId];\n\n            for (const cardId of cardsToFix) {\n                let cardFields = { ...fields[cardId] };\n                if (fieldId in cardFields) {\n                    let fieldInfo = cardFields[fieldId];\n                    if (fieldInfo.type === 'image') {\n                        let { fit, width, height, imageWidth, imageHeight } = fieldInfo;\n\n                        imageHeight = imageHeight || 1;\n                        imageWidth = imageWidth || 1;\n\n                        let fitImageWidth = width;\n                        let fitImageHeight = height;\n                        if (fit === 'width' || fit === undefined) {\n                            fitImageHeight = width * (imageHeight / imageWidth);\n                        } else if (fit === 'height') {\n                            fitImageWidth = height * (imageWidth / imageHeight);\n                        }\n\n                        let cx = fieldInfo.cx || 0;\n                        let cy = fieldInfo.cy || 0;\n                        let oldZoom = fieldInfo.zoom || 1;\n                        cx = cx + ((oldZoom - zoom) * fitImageWidth) / 2;\n                        cy = cy + ((oldZoom - zoom) * fitImageHeight) / 2;\n\n                        cx = Math.min(Math.max(width - zoom * fitImageWidth, cx), 0);\n                        cy = Math.min(Math.max(height - zoom * fitImageHeight, cy), 0);\n\n                        cardFields[fieldId] = {\n                            ...fieldInfo,\n                            zoom,\n                            cx,\n                            cy,\n                        };\n                    }\n                }\n                fields[cardId] = cardFields;\n            }\n\n            return {\n                ...state,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_FIELD_SIZE: {\n            let width = action.width;\n            let height = action.height;\n            let snappingDistance = state.snappingDistance;\n\n            if (snappingDistance !== 0) {\n                width = Math.round(width / snappingDistance) * snappingDistance;\n                height = Math.round(height / snappingDistance) * snappingDistance;\n            }\n\n            let fields = { ...state.fields };\n            let fieldId = action.fieldId;\n            let cardsToFix = action.cardId ? [action.cardId] : state.cardsAllIds;\n\n            for (const cardId of cardsToFix) {\n                let cardFields = { ...fields[cardId] };\n                if (fieldId in cardFields) {\n                    let fieldInfo = { ...cardFields[fieldId] };\n\n                    let nx = fieldInfo.x + fieldInfo.width / 2;\n                    let ny = fieldInfo.y + fieldInfo.height / 2;\n                    let { rx, ry } = rotateVec(\n                        (width - fieldInfo.width) / 2,\n                        (height - fieldInfo.height) / 2,\n                        fieldInfo.angle,\n                    );\n\n                    nx = nx + rx - width / 2;\n                    ny = ny + ry - height / 2;\n\n                    if (fieldInfo.type === 'image' && fieldInfo.cx && fieldInfo.cy) {\n                        if (fieldInfo.fit === 'width' || fieldInfo.fit === undefined) {\n                            let ratio = width / fieldInfo.width;\n                            fieldInfo.cx *= ratio;\n                            fieldInfo.cy *= ratio;\n                        } else if (fieldInfo.fit === 'height') {\n                            let ratio = height / fieldInfo.height;\n                            fieldInfo.cx *= ratio;\n                            fieldInfo.cy *= ratio;\n                        } else {\n                            fieldInfo.cx *= width / fieldInfo.width;\n                            fieldInfo.cy *= height / fieldInfo.height;\n                        }\n                    }\n\n                    fieldInfo.x = nx;\n                    fieldInfo.y = ny;\n                    fieldInfo.width = width;\n                    fieldInfo.height = height;\n                    cardFields[fieldId] = fieldInfo;\n                }\n                fields[cardId] = cardFields;\n            }\n\n            return {\n                ...state,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_FIELD_ANGLE: {\n            let angle = action.angle;\n\n            let fields = { ...state.fields };\n            let fieldId = action.fieldId;\n\n            let cardsToFix = action.cardId ? [action.cardId] : state.cardsAllIds;\n\n            for (const cardId of cardsToFix) {\n                let cardFields = { ...fields[cardId] };\n                if (fieldId in cardFields) {\n                    cardFields[fieldId] = {\n                        ...cardFields[fieldId],\n                        angle,\n                    };\n                }\n                fields[cardId] = cardFields;\n            }\n\n            return {\n                ...state,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN: {\n            let textSettings = {\n                ...state.textSettings,\n                align: action.align,\n            };\n\n            if (state.activeFieldId) {\n                let align = action.align;\n\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'text') {\n                            cardFields[fieldId] = {\n                                ...fieldInfo,\n                                align,\n                            };\n                        }\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR: {\n            let textSettings = {\n                ...state.textSettings,\n                color: action.color,\n            };\n\n            if (state.activeFieldId) {\n                let color = action.color;\n\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'text') {\n                            cardFields[fieldId] = {\n                                ...fieldInfo,\n                                color,\n                            };\n                        }\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY: {\n            let textSettings = {\n                ...state.textSettings,\n                color: action.fontFamily,\n            };\n\n            if (state.activeFieldId) {\n                let fontFamily = action.fontFamily;\n\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'text') {\n                            cardFields[fieldId] = {\n                                ...fieldInfo,\n                                fontFamily,\n                            };\n                        }\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT: {\n            let textSettings = {\n                ...state.textSettings,\n                color: action.fontVariant,\n            };\n\n            if (state.activeFieldId) {\n                let fontVariant = action.fontVariant;\n\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'text') {\n                            cardFields[fieldId] = {\n                                ...fieldInfo,\n                                fontVariant,\n                            };\n                        }\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT: {\n            let textSettings = {\n                ...state.textSettings,\n                fontFamily: action.fontFamily,\n                fontVariant: action.fontVariant,\n            };\n\n            if (state.activeFieldId) {\n                let fontFamily = action.fontFamily;\n                let fontVariant = action.fontVariant;\n\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'text') {\n                            cardFields[fieldId] = {\n                                ...fieldInfo,\n                                fontFamily,\n                                fontVariant,\n                            };\n                        }\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE: {\n            let textSettings = {\n                ...state.textSettings,\n                fontSize: action.fontSize,\n            };\n\n            if (state.activeFieldId) {\n                let fontSize = action.fontSize;\n\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'text') {\n                            cardFields[fieldId] = {\n                                ...fieldInfo,\n                                fontSize,\n                            };\n                        }\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT: {\n            let textSettings = {\n                ...state.textSettings,\n                lineHeight: action.lineHeight,\n            };\n\n            if (state.activeFieldId) {\n                let lineHeight = action.lineHeight;\n\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'text') {\n                            cardFields[fieldId] = {\n                                ...fieldInfo,\n                                lineHeight,\n                            };\n                        }\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_TEXT: {\n            let cardFields = { ...state.fields[action.cardId] };\n\n            const fieldInfo = cardFields[action.fieldId];\n            const name = fieldInfo.name || fieldInfo.id;\n\n            for (const fieldId in cardFields) {\n                const testFieldInfo = cardFields[fieldId];\n\n                if ((testFieldInfo.name === name || testFieldInfo.id === name) && testFieldInfo.type === 'text') {\n                    cardFields[fieldId] = {\n                        ...testFieldInfo,\n                        value: action.textInfo.value,\n                    };\n                }\n            }\n\n            return {\n                ...state,\n                fields: {\n                    ...state.fields,\n                    [action.cardId]: cardFields,\n                },\n            };\n        }\n        case CARDSET_CHANGE_IMAGE: {\n            let cardsToFix = state.applyToAllCards || action.cardId === undefined ? state.cardsAllIds : [action.cardId];\n\n            let fields = { ...state.fields };\n\n            for (const cardId of cardsToFix) {\n                let cardFields = { ...state.fields[cardId] };\n\n                const fieldInfo = cardFields[action.fieldId];\n                const name = fieldInfo.name || fieldInfo.id;\n\n                for (const fieldId in cardFields) {\n                    const testFieldInfo = cardFields[fieldId];\n\n                    if ((testFieldInfo.name === name || testFieldInfo.id === name) && testFieldInfo.type === 'image') {\n                        cardFields[fieldId] = {\n                            ...testFieldInfo,\n                            url: 'url' in action.imageInfo ? action.imageInfo.url : testFieldInfo.url,\n                            base64: 'base64' in action.imageInfo ? action.imageInfo.base64 : testFieldInfo.base64,\n                            color: 'color' in action.imageInfo ? action.imageInfo.color : testFieldInfo.color,\n                            imageWidth: 'width' in action.imageInfo ? action.imageInfo.width : testFieldInfo.imageWidth,\n                            imageHeight:\n                                'height' in action.imageInfo ? action.imageInfo.height : testFieldInfo.imageHeight,\n                            cx: 0,\n                            cy: 0,\n                            zoom: 0,\n                        };\n                    }\n                }\n\n                fields[cardId] = cardFields;\n            }\n\n            return {\n                ...state,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_IMAGE_BASE64: {\n            let cardFields = { ...state.fields[action.cardId] };\n\n            const fieldInfo = cardFields[action.fieldId];\n            const name = fieldInfo.name || fieldInfo.id;\n\n            for (const fieldId in cardFields) {\n                const testFieldInfo = cardFields[fieldId];\n\n                if ((testFieldInfo.name === name || testFieldInfo.id === name) && testFieldInfo.type === 'image') {\n                    cardFields[fieldId] = {\n                        ...testFieldInfo,\n                        base64: action.base64,\n                        cx: 0,\n                        cy: 0,\n                        zoom: 0,\n                    };\n                }\n            }\n\n            return {\n                ...state,\n                fields: {\n                    ...state.fields,\n                    [action.cardId]: cardFields,\n                },\n            };\n        }\n        case CARDSET_SET_ACTIVE_CARD_AND_FIELD: {\n            let textSettings = { ...state.textSettings };\n            let activeSidebar = state.activeSidebar;\n\n            if (activeSidebar !== SidebarState.Measurements && action.cardId !== undefined) {\n                activeSidebar = SidebarState.Details;\n            }\n\n            if (action.cardId !== undefined && action.fieldId !== undefined) {\n                const fieldInfo = state.fields[action.cardId][action.fieldId];\n\n                if (fieldInfo.type === 'text') {\n                    textSettings.align = fieldInfo.align;\n                    textSettings.color = fieldInfo.color;\n                    textSettings.fontFamily = fieldInfo.fontFamily;\n                    textSettings.fontVariant = fieldInfo.fontVariant;\n                    textSettings.fontSize = fieldInfo.fontSize;\n                    textSettings.lineHeight = fieldInfo.lineHeight;\n\n                    if (activeSidebar !== SidebarState.Measurements) {\n                        activeSidebar = SidebarState.Text;\n                    }\n                } else {\n                    if (activeSidebar !== SidebarState.Measurements) {\n                        activeSidebar = SidebarState.Image;\n                    }\n                }\n            }\n\n            return {\n                ...state,\n                activeCardId: action.cardId,\n                isBackActive: action.isBackActive,\n                activeFieldId: action.fieldId,\n                textSettings,\n                activeSidebar,\n            };\n        }\n\n        case CARDSET_CHANGE_APPLY_TO_ALLCARDS: {\n            return {\n                ...state,\n                applyToAllCards: action.applyToAllCards,\n            };\n        }\n\n        case CARDSET_SET_SIDEBAR_STATE: {\n            return {\n                ...state,\n                activeSidebar: action.sidebarState,\n            };\n        }\n        case CARDSET_SET_ZOOM: {\n            return {\n                ...state,\n                zoom: action.zoom,\n            };\n        }\n        case CARDSET_IMPORT_DATA: {\n            return {\n                ...state,\n                ...action.data,\n            };\n        }\n        default:\n            return state;\n    }\n}\n\nexport function images(state: ImageState = DefaultImageState, action: ImageListAction): ImageState {\n    switch (action.type) {\n        case IMAGE_LIST_REQUEST:\n            return Object.assign({}, state, {\n                filter: action.filter,\n            });\n        case IMAGE_LIST_SUCCESS:\n            return Object.assign({}, state, {\n                images: action.images,\n            });\n        default:\n            return state;\n    }\n}\n\nconst undoableCardset = undoable(cardset, {\n    ignoreInitialState: true,\n    undoType: CARDSET_UNDO,\n    redoType: CARDSET_REDO,\n    groupBy: (action: Action) => {\n        if (\n            action.type === 'CARDSET_CHANGE_FIELD_SIZE' ||\n            action.type === 'CARDSET_CHANGE_FIELD_POSITION' ||\n            action.type === 'CARDSET_CHANGE_FIELD_ANGLE' ||\n            action.type === 'CARDSET_CHANGE_FIELD_ZOOM' ||\n            action.type === 'CARDSET_CHANGE_FIELD_PAN'\n        ) {\n            return action.group;\n        }\n        return null;\n    },\n    filter: (action: Action) => {\n        if (!action.type.startsWith('CARDSET_')) {\n            return false;\n        }\n\n        if (\n            action.type === CARDSET_SELECT_REQUEST ||\n            action.type === CARDSET_SET_ACTIVE_CARD_AND_FIELD ||\n            action.type === CARDSET_SET_SIDEBAR_STATE\n        ) {\n            return false;\n        }\n        return true;\n    },\n});\n\nconst reducers = combineReducers({\n    message,\n    auth,\n    signup,\n    games,\n    cardsets,\n    cardset: undoableCardset,\n    images,\n});\n\nexport default reducers;\n","import { applyMiddleware, compose, createStore, Store } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { rootSaga } from './sagas';\nimport reducers from './reducers';\n\nexport let store: Store | undefined;\n\nexport function createAppStore() {\n    const sagaMiddleware = createSagaMiddleware();\n    store = createStore(\n        reducers,\n        // @ts-ignore: __REDUX_DEVTOOLS_EXTENSION__ does not exists on window\n        window.__REDUX_DEVTOOLS_EXTENSION__\n            ? compose(\n                  applyMiddleware(sagaMiddleware),\n                  // @ts-ignore: __REDUX_DEVTOOLS_EXTENSION__ does not exists on window\n                  window.__REDUX_DEVTOOLS_EXTENSION__(),\n              )\n            : applyMiddleware(sagaMiddleware),\n    );\n    sagaMiddleware.run(rootSaga);\n    return store;\n}\n","import { Ghost, Browser } from 'react-kawaii';\nimport React, { Component } from 'react';\n\nexport enum Character {\n    Ghost,\n    Browser,\n}\ninterface Props {\n    character: Character;\n    mood?: string;\n}\n\nexport default class KawaiiMessage extends Component<Props> {\n    render() {\n        const { character, mood } = this.props;\n\n        return (\n            <div\n                style={{\n                    marginTop: '1em',\n                    marginBottom: '1em',\n                    padding: '1em',\n                    borderRadius: '1em',\n                    backgroundColor: 'var(--color-2)',\n                    display: 'grid',\n                    grid: 'auto-flow / minmax(120px, auto) 1fr',\n                }}\n            >\n                {character === Character.Ghost && <Ghost size={120} mood={mood || 'blissful'} color=\"#faebef\" />}\n                {character === Character.Browser && <Browser size={120} mood={mood || 'blissful'} color=\"#faebef\" />}\n                <div style={{ marginLeft: '1em' }}>{this.props.children}</div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nexport default class AboutPage extends Component {\n    render() {\n        return (\n            <div>\n                <h2>About</h2>\n                <p>\n                    \"Card-a-mon\" is card game development tool. At the moment it is project of single person (me) with a\n                    vision. My aim is to create affordable and practical tool to develop card games from A (prototyping)\n                    to Z (printing). If you have ideas, suggestions, proposals, comments and etc. then you can contact\n                    me by e-mail <a href=\"mailto:dalius@ffff.lt\">dalius@ffff.lt</a>.\n                </p>\n                <h2>Credits</h2>\n                This project is available because of number amazing open source projects. Some of them:\n                <ul>\n                    <li>\n                        <a href=\"https://reactjs.org/\">React</a> and all the ecosystem around it.\n                    </li>\n                    <li>\n                        <a href=\"https://fonts.google.com/\">Google Fonts</a>\n                    </li>\n                    <li>\n                        <a href=\"https://github.com/game-icons/icons\">Game icons</a>\n                    </li>\n                    <li>\n                        <a href=\"http://pdfkit.org/\">PDFKit</a>\n                    </li>\n                </ul>\n                <p>... and many more.</p>\n            </div>\n        );\n    }\n}\n","import { connect } from 'react-redux';\nimport React from 'react';\nimport shortid from 'shortid';\n\nimport { Dispatch } from '../actions';\nimport { State } from '../reducers';\nimport panIcon from './pan.svg';\nimport zoomIcon from './zoom.svg';\nimport resizeIcon from './resize.svg';\nimport rotateIcon from './rotate.svg';\nimport style from './FieldController.module.css';\nimport { rotateVec } from '../utils';\n\ninterface OwnProps {\n    cardId: string;\n    fieldId: string;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    angle: number;\n    zoom?: number;\n    cx?: number;\n    cy?: number;\n    children: React.ReactNode;\n    onDrag: (x: number, y: number, cardOnly: boolean, group: string) => void;\n    onResize: (width: number, height: number, cardOnly: boolean, group: string) => void;\n    onRotate: (angle: number, cardOnly: boolean, group: string) => void;\n    onZoom?: (zoom: number, cardOnly: boolean, group: string) => void;\n    onPan?: (cx: number, cy: number, cardOnly: boolean, group: string) => void;\n    cardWidth: number;\n    cardHeight: number;\n    ppmm: number;\n}\n\ninterface StateProps {\n    isActive: boolean;\n    isActiveField: boolean;\n    isLocked: boolean;\n    isUnclickable: boolean;\n    snappingDistance: number;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nexport interface LocalState {\n    startX: number;\n    startY: number;\n    originalAngle: number;\n    activatedUsingTouch: boolean;\n    group: string;\n}\n\nclass FieldController extends React.Component<Props, LocalState> {\n    cDiv: React.RefObject<HTMLDivElement>;\n    panDiv: React.RefObject<HTMLImageElement>;\n    zoomDiv: React.RefObject<HTMLImageElement>;\n    resizeDiv: React.RefObject<HTMLImageElement>;\n    rotateDiv: React.RefObject<HTMLImageElement>;\n    originalBodyCursor: string | null;\n\n    constructor(props: Props) {\n        super(props);\n        this.cDiv = React.createRef();\n        this.panDiv = React.createRef();\n        this.zoomDiv = React.createRef();\n        this.resizeDiv = React.createRef();\n        this.rotateDiv = React.createRef();\n        this.originalBodyCursor = null;\n        this.state = {\n            activatedUsingTouch: false,\n            startX: 0,\n            startY: 0,\n            originalAngle: 0,\n            group: '',\n        };\n    }\n\n    componentDidMount() {\n        if (this.cDiv.current === null) return;\n        if (this.panDiv.current === null) return;\n        if (this.zoomDiv.current === null) return;\n        if (this.resizeDiv.current === null) return;\n        if (this.rotateDiv.current === null) return;\n\n        this.originalBodyCursor = document.body.style.cursor;\n\n        this.cDiv.current.addEventListener('mousedown', this.handleMouseDown);\n        this.cDiv.current.addEventListener('touchstart', this.handleTouchStart);\n        this.panDiv.current.addEventListener('mousedown', this.handlePanMouseDown);\n        this.panDiv.current.addEventListener('touchstart', this.handlePanTouchStart);\n        this.zoomDiv.current.addEventListener('mousedown', this.handleZoomMouseDown);\n        this.zoomDiv.current.addEventListener('touchstart', this.handleZoomTouchStart);\n        this.resizeDiv.current.addEventListener('mousedown', this.handleResizeMouseDown);\n        this.resizeDiv.current.addEventListener('touchstart', this.handleResizeTouchStart);\n        this.rotateDiv.current.addEventListener('mousedown', this.handleRotateMouseDown);\n        this.rotateDiv.current.addEventListener('touchstart', this.handleRotateTouchStart);\n    }\n\n    handleBrowserDragStart = (event: React.DragEvent) => {\n        event.stopPropagation();\n        event.preventDefault();\n    };\n\n    // Dragging handling\n\n    handleMouseDown = (event: MouseEvent) => {\n        this.handleDragStart(event);\n\n        document.addEventListener('mousemove', this.handleMouseMove);\n        document.addEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleTouchStart = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleDragStart(event.changedTouches[0]);\n\n        document.addEventListener('touchmove', this.handleTouchMove, { passive: false });\n        document.addEventListener('touchend', this.handleTouchEnd, { passive: false });\n    };\n\n    handleDragStart = (co: MouseEvent | Touch) => {\n        if (this.cDiv.current === null) return;\n\n        this.cDiv.current.style.cursor = 'grabbing';\n\n        this.setState({ startX: co.clientX, startY: co.clientY, group: shortid.generate() });\n    };\n\n    handleMouseMove = (event: MouseEvent) => {\n        this.handleDragMove(event, event.ctrlKey);\n    };\n\n    handleTouchMove = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        event.preventDefault();\n        this.handleDragMove(event.changedTouches[0], event.ctrlKey);\n    };\n\n    handleDragMove = (co: MouseEvent | Touch, disableSnapping: boolean) => {\n        const { isLocked, x, y } = this.props;\n\n        if (isLocked) return;\n\n        const { ppmm, snappingDistance } = this.props;\n\n        let nx = x + co.clientX - this.state.startX;\n        let ny = y + co.clientY - this.state.startY;\n\n        if (!disableSnapping && snappingDistance !== 0) {\n            nx = Math.round(nx / ppmm / snappingDistance) * snappingDistance * ppmm;\n            ny = Math.round(ny / ppmm / snappingDistance) * snappingDistance * ppmm;\n        }\n\n        this.setState({ startX: co.clientX, startY: co.clientY });\n        this.props.onDrag(nx, ny, true, this.state.group);\n    };\n\n    handleMouseUp = (event: MouseEvent) => {\n        this.handleComplete(event, false);\n\n        document.removeEventListener('mousemove', this.handleMouseMove);\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleTouchEnd = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleComplete(event, true);\n\n        document.removeEventListener('touchmove', this.handleTouchMove);\n        document.removeEventListener('touchend', this.handleTouchEnd);\n    };\n\n    handleComplete = (event: MouseEvent | TouchEvent, isTouchEvent: boolean) => {\n        const { isLocked, x, y } = this.props;\n\n        if (this.cDiv.current === null) return;\n\n        if (!isLocked) {\n            this.props.onDrag(x, y, false, this.state.group);\n        }\n        this.setState({ activatedUsingTouch: isTouchEvent });\n\n        this.cDiv.current.style.cursor = 'grab';\n    };\n\n    // Pan handling\n\n    handlePanMouseDown = (event: MouseEvent) => {\n        this.handlePanStart(event);\n\n        document.addEventListener('mousemove', this.handlePanMouseMove);\n        document.addEventListener('mouseup', this.handlePanMouseUp);\n        event.stopPropagation();\n    };\n\n    handlePanTouchStart = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handlePanStart(event.changedTouches[0]);\n\n        document.addEventListener('touchmove', this.handlePanTouchMove, { passive: false });\n        document.addEventListener('touchend', this.handlePanTouchEnd, { passive: false });\n        event.stopPropagation();\n        event.preventDefault();\n    };\n\n    handlePanStart = (co: MouseEvent | Touch) => {\n        document.body.style.cursor = `url(${panIcon}), auto`;\n\n        this.setState({ startX: co.clientX, startY: co.clientY, group: shortid.generate() });\n    };\n\n    handlePanMouseMove = (event: MouseEvent) => {\n        this.handlePanMove(event);\n        event.preventDefault();\n    };\n\n    handlePanTouchMove = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handlePanMove(event.changedTouches[0]);\n        event.preventDefault();\n    };\n\n    handlePanMove = (co: MouseEvent | Touch) => {\n        const { cx, cy, angle, onPan } = this.props;\n        if (!onPan || cx === undefined || cy === undefined) return;\n\n        let dx = co.clientX - this.state.startX;\n        let dy = co.clientY - this.state.startY;\n        const { rx, ry } = rotateVec(dx, dy, -angle);\n\n        const newCx = cx + rx;\n        const newCy = cy + ry;\n\n        this.setState({ startX: co.clientX, startY: co.clientY });\n\n        onPan(newCx, newCy, true, this.state.group);\n    };\n\n    handlePanMouseUp = (event: MouseEvent) => {\n        this.handlePanComplete(event);\n\n        document.removeEventListener('mousemove', this.handlePanMouseMove);\n        document.removeEventListener('mouseup', this.handlePanMouseUp);\n    };\n\n    handlePanTouchEnd = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handlePanComplete(event);\n\n        document.removeEventListener('touchmove', this.handlePanTouchMove);\n        document.removeEventListener('touchend', this.handlePanTouchEnd);\n    };\n\n    handlePanComplete = (event: MouseEvent | TouchEvent) => {\n        const { cx, cy, onPan } = this.props;\n        if (onPan && cx !== undefined && cy !== undefined) {\n            onPan(cx, cy, true, this.state.group);\n        }\n\n        document.body.style.cursor = this.originalBodyCursor;\n        event.preventDefault();\n    };\n\n    // Zoom handling\n\n    handleZoomMouseDown = (event: MouseEvent) => {\n        this.handleZoomStart(event);\n\n        document.addEventListener('mousemove', this.handleZoomMouseMove);\n        document.addEventListener('mouseup', this.handleZoomMouseUp);\n        event.stopPropagation();\n    };\n\n    handleZoomTouchStart = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleZoomStart(event.changedTouches[0]);\n\n        document.addEventListener('touchmove', this.handleZoomTouchMove, { passive: false });\n        document.addEventListener('touchend', this.handleZoomTouchEnd, { passive: false });\n        event.stopPropagation();\n        event.preventDefault();\n    };\n\n    handleZoomStart = (co: { clientX: number; clientY: number }) => {\n        document.body.style.cursor = `url(${zoomIcon}), auto`;\n\n        this.setState({ startX: co.clientX, startY: co.clientY, group: shortid.generate() });\n    };\n\n    handleZoomMouseMove = (event: MouseEvent) => {\n        this.handleZoomMove(event);\n        event.preventDefault();\n    };\n\n    handleZoomTouchMove = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleZoomMove(event.changedTouches[0]);\n        event.preventDefault();\n    };\n\n    handleZoomMove = (co: MouseEvent | Touch) => {\n        const { zoom, onZoom } = this.props;\n        if (!onZoom || zoom === undefined) return;\n\n        const dx = co.clientX - this.state.startX;\n        const dy = co.clientY - this.state.startY;\n\n        let z = Math.abs(dx) > Math.abs(dy) ? dx : dy;\n\n        let newZoom = Math.max(zoom + z / 30, 1);\n        this.setState({ startX: co.clientX, startY: co.clientY });\n\n        onZoom(newZoom, true, this.state.group);\n    };\n\n    handleZoomMouseUp = (event: MouseEvent) => {\n        this.handleZoomComplete(event);\n\n        document.removeEventListener('mousemove', this.handleZoomMouseMove);\n        document.removeEventListener('mouseup', this.handleZoomMouseUp);\n    };\n\n    handleZoomTouchEnd = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleZoomComplete(event);\n\n        document.removeEventListener('touchmove', this.handleZoomTouchMove);\n        document.removeEventListener('touchend', this.handleZoomTouchEnd);\n    };\n\n    handleZoomComplete = (event: Event) => {\n        document.body.style.cursor = this.originalBodyCursor;\n        event.preventDefault();\n    };\n\n    // Resize handling\n\n    handleResizeMouseDown = (event: MouseEvent) => {\n        this.handleResizeStart(event);\n\n        document.addEventListener('mousemove', this.handleResizeMouseMove);\n        document.addEventListener('mouseup', this.handleResizeMouseUp);\n        event.stopPropagation();\n    };\n\n    handleResizeTouchStart = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleResizeStart(event.changedTouches[0]);\n\n        document.addEventListener('touchmove', this.handleResizeTouchMove, { passive: false });\n        document.addEventListener('touchend', this.handleResizeTouchEnd, { passive: false });\n        event.stopPropagation();\n        event.preventDefault();\n    };\n\n    handleResizeStart = (co: MouseEvent | Touch) => {\n        const { isLocked } = this.props;\n\n        if (isLocked) return;\n\n        document.body.style.cursor = `url(${resizeIcon}), auto`;\n\n        this.setState({ startX: co.clientX, startY: co.clientY, group: shortid.generate() });\n    };\n\n    handleResizeMouseMove = (event: MouseEvent) => {\n        this.handleResizeMove(event, event.ctrlKey);\n        event.preventDefault();\n    };\n\n    handleResizeTouchMove = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleResizeMove(event.changedTouches[0], event.ctrlKey);\n        event.preventDefault();\n    };\n\n    handleResizeMove = (co: { clientX: number; clientY: number }, disableSnapping: boolean) => {\n        const { isLocked, ppmm, width, height, angle, snappingDistance, onResize } = this.props;\n\n        if (isLocked) return;\n\n        const dx = co.clientX - this.state.startX;\n        const dy = co.clientY - this.state.startY;\n\n        const { rx, ry } = rotateVec(dx, dy, -angle);\n\n        let newWidth = width + rx;\n        let newHeight = height + ry;\n\n        if (!disableSnapping && snappingDistance !== 0) {\n            newWidth = Math.round(newWidth / ppmm / snappingDistance) * snappingDistance * ppmm;\n            newHeight = Math.round(newHeight / ppmm / snappingDistance) * snappingDistance * ppmm;\n        }\n\n        this.setState({ startX: co.clientX, startY: co.clientY });\n\n        onResize(newWidth, newHeight, true, this.state.group);\n    };\n\n    handleResizeMouseUp = (event: MouseEvent) => {\n        this.handleResizeComplete(event);\n\n        document.removeEventListener('mousemove', this.handleResizeMouseMove);\n        document.removeEventListener('mouseup', this.handleResizeMouseUp);\n    };\n\n    handleResizeTouchEnd = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleResizeComplete(event);\n\n        document.removeEventListener('touchmove', this.handleResizeTouchMove);\n        document.removeEventListener('touchend', this.handleResizeTouchEnd);\n    };\n\n    handleResizeComplete = (event: Event) => {\n        const { isLocked } = this.props;\n\n        if (!isLocked) {\n            const { width, height, onResize } = this.props;\n            onResize(width, height, false, this.state.group);\n        }\n\n        document.body.style.cursor = this.originalBodyCursor;\n\n        event.preventDefault();\n    };\n\n    // Rotation handling\n\n    handleRotateMouseDown = (event: MouseEvent) => {\n        this.handleRotateStart(event);\n\n        document.addEventListener('mousemove', this.handleRotateMouseMove);\n        document.addEventListener('mouseup', this.handleRotateMouseUp);\n        event.stopPropagation();\n    };\n\n    handleRotateTouchStart = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleRotateStart(event.changedTouches[0]);\n\n        document.addEventListener('touchmove', this.handleRotateTouchMove, { passive: false });\n        document.addEventListener('touchend', this.handleRotateTouchEnd, { passive: false });\n        event.stopPropagation();\n        event.preventDefault();\n    };\n\n    handleRotateStart = (co: { clientX: number; clientY: number }) => {\n        const { isLocked, angle } = this.props;\n\n        if (isLocked || this.cDiv.current === null) return;\n\n        document.body.style.cursor = `url(${rotateIcon}), auto`;\n\n        const rect = this.cDiv.current.getBoundingClientRect();\n        let startX = rect.left + this.cDiv.current.clientWidth / 2;\n        let startY = rect.top + this.cDiv.current.clientHeight / 2;\n\n        let originalAngle = angle + Math.atan2(startX - co.clientX, startY - co.clientY);\n\n        this.setState({ startX, startY, originalAngle, group: shortid.generate() });\n    };\n\n    handleRotateMouseMove = (event: MouseEvent) => {\n        this.handleRotateMove(event, event.ctrlKey);\n        event.preventDefault();\n    };\n\n    handleRotateTouchMove = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleRotateMove(event.changedTouches[0], event.ctrlKey);\n        event.preventDefault();\n    };\n\n    handleRotateMove = (co: MouseEvent | Touch, disableSnapping: boolean) => {\n        const { isLocked, onRotate } = this.props;\n\n        if (isLocked) return;\n\n        const { originalAngle, startX, startY } = this.state;\n\n        let curAngle = Math.atan2(startX - co.clientX, startY - co.clientY);\n        let newAngle = originalAngle - curAngle;\n\n        if (!disableSnapping) {\n            newAngle = ((Math.round(((newAngle / Math.PI) * 180) / 5) * 5) / 180) * Math.PI;\n        }\n\n        onRotate(newAngle, true, this.state.group);\n    };\n\n    handleRotateMouseUp = (event: MouseEvent) => {\n        this.handleRotateComplete(event);\n\n        document.removeEventListener('mousemove', this.handleRotateMouseMove);\n        document.removeEventListener('mouseup', this.handleRotateMouseUp);\n    };\n\n    handleRotateTouchEnd = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleRotateComplete(event);\n\n        document.removeEventListener('touchmove', this.handleRotateTouchMove);\n        document.removeEventListener('touchend', this.handleRotateTouchEnd);\n    };\n\n    handleRotateComplete = (event: Event) => {\n        const { isLocked } = this.props;\n\n        if (!isLocked) {\n            const { angle } = this.props;\n            this.props.onRotate(angle, false, this.state.group);\n        }\n\n        document.body.style.cursor = this.originalBodyCursor;\n\n        event.preventDefault();\n    };\n\n    // Rendering\n\n    render() {\n        const {\n            x,\n            y,\n            width,\n            height,\n            angle,\n            zoom,\n            cx,\n            children,\n            isActive,\n            isActiveField,\n            isLocked,\n            isUnclickable,\n        } = this.props;\n\n        return (\n            <div\n                ref={this.cDiv}\n                onDragStart={this.handleBrowserDragStart}\n                className={`${style.fieldcontroller} ${isActiveField ? style.fieldcontrolleractivefield : ''} ${\n                    isActive ? style.fieldcontrolleractive : ''\n                } ${isActive && this.state.activatedUsingTouch ? style.touchactivated : ''} `}\n                style={{\n                    position: 'absolute',\n                    left: x,\n                    top: y,\n                    width: width,\n                    height: height,\n                    cursor: 'grab',\n                    transform: `rotate(${angle}rad)`,\n                    pointerEvents: isUnclickable ? 'none' : 'initial',\n                }}\n            >\n                {children}\n                <img\n                    src={panIcon}\n                    alt=\"pan\"\n                    ref={this.panDiv}\n                    className={style.controller}\n                    style={{\n                        position: 'absolute',\n                        left: 0,\n                        top: 0,\n                        cursor: `url(${panIcon}), auto`,\n                        display: cx !== undefined && zoom !== undefined ? 'initial' : 'none',\n                    }}\n                />\n\n                <img\n                    src={zoomIcon}\n                    alt=\"zoom\"\n                    ref={this.zoomDiv}\n                    className={style.controller}\n                    style={{\n                        position: 'absolute',\n                        right: 0,\n                        top: 0,\n                        cursor: `url(${zoomIcon}), auto`,\n                        display: zoom !== undefined ? 'initial' : 'none',\n                    }}\n                />\n\n                <img\n                    src={resizeIcon}\n                    alt=\"resize\"\n                    ref={this.resizeDiv}\n                    className={style.controller}\n                    style={{\n                        position: 'absolute',\n                        right: 0,\n                        bottom: 0,\n                        cursor: `url(${resizeIcon}), auto`,\n                        display: isLocked ? 'none' : 'initial',\n                    }}\n                />\n                <img\n                    src={rotateIcon}\n                    alt=\"rotate\"\n                    ref={this.rotateDiv}\n                    className={style.controller}\n                    style={{\n                        position: 'absolute',\n                        left: 0,\n                        bottom: 0,\n                        cursor: `url(${rotateIcon}), auto`,\n                        display: isLocked ? 'none' : 'initial',\n                    }}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    const isActiveField = props.fieldId === state.cardset.present.activeFieldId;\n    const isActive =\n        props.cardId === state.cardset.present.activeCardId && props.fieldId === state.cardset.present.activeFieldId;\n    const fieldInfo = state.cardset.present.fields[props.cardId][props.fieldId];\n    const isLocked = fieldInfo.locked === true;\n    const isUnclickable = fieldInfo.unclickable === true;\n\n    return {\n        isActive,\n        isActiveField,\n        isLocked,\n        isUnclickable,\n        snappingDistance: state.cardset.present.snappingDistance,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(FieldController);\n","import { connect } from 'react-redux';\nimport React, { PureComponent } from 'react';\n\nimport {\n    Dispatch,\n    cardSetActiveCardAndField,\n    cardSetChangeImage,\n    cardSetChangeFieldPosition,\n    cardSetChangeFieldAngle,\n    cardSetChangeFieldPan,\n    cardSetChangeFieldZoom,\n    cardSetChangeFieldSize,\n} from '../actions';\nimport { ImageInfo, ImageFieldInfo } from '../types';\nimport { State } from '../reducers';\nimport FieldController from './FieldController';\nimport emptyImageImage from './image.svg';\nimport style from './ImageField.module.css';\nimport { calculateImageDimensions } from '../utils';\n\ninterface OwnProps {\n    cardId: string;\n    isOnBack: boolean;\n    ppmm: number;\n    imageFieldInfo: ImageFieldInfo;\n    cardWidth: number;\n    cardHeight: number;\n}\n\ninterface StateProps {\n    imageUrl?: string;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\ninterface LocalState {\n    dragIsOver: boolean;\n    wasMoved: boolean;\n    x: number;\n    y: number;\n}\n\nclass ImageField extends PureComponent<Props, LocalState> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            dragIsOver: false,\n            wasMoved: false,\n            x: 0,\n            y: 0,\n        };\n    }\n\n    handleDrag = (x: number, y: number, cardOnly: boolean, group: string) => {\n        const { dispatch, cardId, imageFieldInfo, ppmm } = this.props;\n        dispatch(\n            cardSetChangeFieldPosition(cardOnly ? cardId : undefined, imageFieldInfo.id, x / ppmm, y / ppmm, group),\n        );\n    };\n\n    handlePan = (cx: number, cy: number, cardOnly: boolean, group: string) => {\n        const { dispatch, cardId, imageFieldInfo, ppmm } = this.props;\n        dispatch(cardSetChangeFieldPan(cardOnly ? cardId : undefined, imageFieldInfo.id, cx / ppmm, cy / ppmm, group));\n    };\n\n    handleZoom = (zoom: number, cardOnly: boolean, group: string) => {\n        const { dispatch, cardId, imageFieldInfo } = this.props;\n        dispatch(cardSetChangeFieldZoom(cardOnly ? cardId : undefined, imageFieldInfo.id, zoom, group));\n    };\n\n    handleResize = (width: number, height: number, cardOnly: boolean, group: string) => {\n        const { dispatch, imageFieldInfo, cardId, ppmm } = this.props;\n        dispatch(\n            cardSetChangeFieldSize(\n                cardOnly ? cardId : undefined,\n                imageFieldInfo.id,\n                width / ppmm,\n                height / ppmm,\n                group,\n            ),\n        );\n    };\n\n    handleRotate = (angle: number, cardOnly: boolean, group: string) => {\n        const { dispatch, cardId, imageFieldInfo } = this.props;\n        dispatch(cardSetChangeFieldAngle(cardOnly ? cardId : undefined, imageFieldInfo.id, angle, group));\n    };\n\n    handleMouseDown = () => {\n        this.setState({ wasMoved: false });\n    };\n\n    handleTouchStart = (event: React.TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.setState({ wasMoved: false, x: event.changedTouches[0].clientX, y: event.changedTouches[0].clientY });\n    };\n\n    handleMouseMove = () => {\n        this.setState({ wasMoved: true });\n    };\n\n    handleTouchMove = (event: React.TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        const { x, y } = this.state;\n        if (Math.abs(event.changedTouches[0].clientX - x) > 3 || Math.abs(event.changedTouches[0].clientY - y) > 3) {\n            this.setState({ wasMoved: true });\n        }\n    };\n\n    handleMouseUp = () => {\n        this.handleComplete();\n    };\n\n    handleTouchEnd = (event: React.TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleComplete();\n    };\n\n    handleComplete = () => {\n        const { dispatch, cardId, isOnBack, imageFieldInfo } = this.props;\n        if (!this.state.wasMoved) {\n            dispatch(cardSetActiveCardAndField(cardId, isOnBack, imageFieldInfo.id));\n        }\n    };\n\n    handleDragOver = (event: React.DragEvent<HTMLDivElement>) => {\n        this.setState({ dragIsOver: true });\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDragLeave = (event: React.DragEvent<HTMLDivElement>) => {\n        this.setState({ dragIsOver: false });\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = (event: React.DragEvent<HTMLDivElement>) => {\n        this.setState({ dragIsOver: false });\n        event.preventDefault();\n        event.stopPropagation();\n\n        const url = event.dataTransfer.getData('URL');\n        const imagefilesPos = url.indexOf('/api/imagefiles/');\n\n        if (imagefilesPos !== -1) {\n            const { cardId, imageFieldInfo, dispatch } = this.props;\n            let img = new Image();\n\n            img.addEventListener('load', function() {\n                const ii: ImageInfo = {\n                    url: url.substr(imagefilesPos),\n                    width: this.naturalWidth,\n                    height: this.naturalHeight,\n                };\n                dispatch(cardSetChangeImage(cardId, imageFieldInfo.id, ii));\n            });\n            img.src = url;\n        }\n    };\n\n    render() {\n        const { imageFieldInfo, imageUrl, ppmm, cardWidth, cardHeight } = this.props;\n\n        let dim = calculateImageDimensions(imageFieldInfo);\n        let calculatedImageWidth = dim.width * ppmm;\n        let calculatedImageHeight = dim.height * ppmm;\n\n        return (\n            <FieldController\n                cardId={this.props.cardId}\n                fieldId={imageFieldInfo.id}\n                x={imageFieldInfo.x * ppmm}\n                y={imageFieldInfo.y * ppmm}\n                width={imageFieldInfo.width * ppmm}\n                height={imageFieldInfo.height * ppmm}\n                cx={(imageFieldInfo.cx || 0) * ppmm}\n                cy={(imageFieldInfo.cy || 0) * ppmm}\n                zoom={imageFieldInfo.zoom || 1}\n                angle={imageFieldInfo.angle}\n                onDrag={this.handleDrag}\n                onPan={this.handlePan}\n                onZoom={this.handleZoom}\n                onResize={this.handleResize}\n                onRotate={this.handleRotate}\n                cardWidth={cardWidth}\n                cardHeight={cardHeight}\n                ppmm={ppmm}\n            >\n                <div\n                    style={{\n                        width: '100%',\n                        height: '100%',\n                        position: 'relative',\n                        overflow: imageFieldInfo.crop ? 'hidden' : 'visible',\n                    }}\n                    className={this.state.dragIsOver ? style.over : ''}\n                    onMouseDown={this.handleMouseDown}\n                    onTouchStart={this.handleTouchStart}\n                    onMouseMove={this.handleMouseMove}\n                    onTouchMove={this.handleTouchMove}\n                    onMouseUp={this.handleMouseUp}\n                    onTouchEnd={this.handleTouchEnd}\n                    onDragOver={this.handleDragOver}\n                    onDragLeave={this.handleDragLeave}\n                    onDrop={this.handleDrop}\n                >\n                    <img\n                        style={{\n                            position: 'absolute',\n                            opacity: imageUrl && imageUrl.length > 0 ? 1 : 0.5,\n                            left: (imageFieldInfo.cx || 0) * ppmm,\n                            top: (imageFieldInfo.cy || 0) * ppmm,\n                            width: calculatedImageWidth,\n                            height: calculatedImageHeight,\n                        }}\n                        src={imageUrl || emptyImageImage}\n                        alt=\"\"\n                    />\n                </div>\n            </FieldController>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    let imageUrl: string | undefined = '';\n    if (props.imageFieldInfo && props.imageFieldInfo.type === 'image') {\n        if (props.imageFieldInfo.base64) {\n            imageUrl = 'data:image/svg+xml;base64,' + props.imageFieldInfo.base64;\n        } else {\n            imageUrl = props.imageFieldInfo && props.imageFieldInfo.url;\n        }\n    }\n\n    return {\n        imageUrl,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(ImageField);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DEFAULT_FONT, DEFAULT_FONT_SIZE, DEFAULT_LINE_HEIGHT } from '../constants';\nimport { Dispatch, cardSetActiveCardAndField, cardSetChangeText } from '../actions';\nimport { State } from '../reducers';\nimport { TextInfo } from '../types';\nimport style from './ContentEditable.module.css';\n\ninterface OwnProps {\n    cardId: string;\n    isOnBack: boolean;\n    fieldId: string;\n    align: string;\n    color: string;\n    fontFamily: string;\n    fontVariant: string;\n    fontSize: number;\n    lineHeight: number;\n}\n\ninterface StateProps {\n    isActive: boolean;\n    textValue: string;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass ContentEditable extends Component<Props> {\n    editDiv: React.RefObject<HTMLDivElement>;\n    currentText: string;\n    currentAlign: string;\n    currentColor: string;\n    currentFontFamily: string;\n    currentFontVariant: string;\n    currentFontSize: number;\n    currentLineHeight: number;\n    timeout: NodeJS.Timeout | null;\n    wasMoved: boolean;\n    x: number;\n    y: number;\n\n    constructor(props: Props) {\n        super(props);\n        this.editDiv = React.createRef();\n        this.currentText = '';\n        this.currentAlign = '';\n        this.currentColor = '';\n        this.currentFontFamily = '';\n        this.currentFontVariant = '';\n        this.currentFontSize = DEFAULT_FONT_SIZE;\n        this.currentLineHeight = DEFAULT_LINE_HEIGHT;\n        this.timeout = null;\n        this.wasMoved = false;\n        this.x = 0;\n        this.y = 0;\n    }\n\n    componentDidMount() {\n        const { isActive } = this.props;\n\n        if (!this.editDiv.current) return;\n\n        this.editDiv.current.addEventListener('mousedown', this.handleMouseDown);\n        this.editDiv.current.addEventListener('touchstart', this.handleTouchStart);\n        this.editDiv.current.addEventListener('mousemove', this.handleMouseMove);\n        this.editDiv.current.addEventListener('touchmove', this.handleTouchMove, { passive: false });\n        this.editDiv.current.addEventListener('mouseup', this.handleMouseUp);\n        this.editDiv.current.addEventListener('touchend', this.handleTouchEnd, { passive: false });\n\n        if (isActive) {\n            this.editDiv.current.focus();\n        }\n    }\n\n    shouldComponentUpdate(nextProps: Props) {\n        const shouldUpdate =\n            nextProps.textValue !== this.currentText ||\n            nextProps.align !== this.currentAlign ||\n            nextProps.color !== this.currentColor ||\n            nextProps.fontFamily !== this.currentFontFamily ||\n            nextProps.fontVariant !== this.currentFontVariant ||\n            nextProps.fontSize !== this.currentFontSize ||\n            nextProps.lineHeight !== this.currentLineHeight ||\n            this.props.isActive !== nextProps.isActive;\n\n        return shouldUpdate;\n    }\n\n    componentDidUpdate() {\n        const { textValue, align, color, fontFamily, fontVariant, fontSize, lineHeight } = this.props;\n        this.currentText = textValue;\n        this.currentAlign = align;\n        this.currentColor = color;\n        this.currentFontFamily = fontFamily;\n        this.currentFontVariant = fontVariant;\n        this.currentFontSize = fontSize;\n        this.currentLineHeight = lineHeight;\n    }\n\n    handleMouseDown = (event: MouseEvent) => {\n        this.handleStart(event);\n    };\n\n    handleTouchStart = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.x = event.changedTouches[0].clientX;\n        this.y = event.changedTouches[0].clientY;\n        this.handleStart(event);\n    };\n\n    handleStart = (event: Event) => {\n        const { isActive } = this.props;\n        if (isActive) {\n            event.stopPropagation();\n        } else {\n            this.wasMoved = false;\n            event.preventDefault();\n        }\n    };\n\n    handleMouseMove = (event: MouseEvent) => {\n        this.handleMove(event);\n    };\n\n    handleTouchMove = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        if (\n            Math.abs(event.changedTouches[0].clientX - this.x) > 3 ||\n            Math.abs(event.changedTouches[0].clientY - this.y) > 3\n        ) {\n            this.handleMove(event);\n        }\n    };\n\n    handleMove = (event: Event) => {\n        const { isActive } = this.props;\n        if (isActive) {\n            event.stopPropagation();\n        } else {\n            this.wasMoved = true;\n            event.preventDefault();\n        }\n    };\n\n    handleMouseUp = (event: MouseEvent) => {\n        this.handleComplete(event);\n    };\n\n    handleTouchEnd = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleComplete(event);\n    };\n\n    handleComplete = (event: Event) => {\n        const { dispatch, cardId, isOnBack, fieldId, isActive } = this.props;\n        if (isActive) {\n            event.stopPropagation();\n        } else if (!this.wasMoved) {\n            event.preventDefault();\n            dispatch(cardSetActiveCardAndField(cardId, isOnBack, fieldId));\n\n            if (!this.editDiv.current) return;\n            this.editDiv.current.focus();\n        }\n    };\n\n    onFocus = () => {\n        if (!this.editDiv.current) return;\n\n        const { textValue, align, color, fontFamily, fontVariant, fontSize } = this.props;\n        this.currentText = textValue;\n        this.currentAlign = align;\n        this.currentColor = color;\n        this.currentFontFamily = fontFamily;\n        this.currentFontVariant = fontVariant;\n        this.currentFontSize = fontSize;\n\n        const range = document.createRange();\n        range.selectNodeContents(this.editDiv.current);\n        range.collapse(false);\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    };\n\n    updateContent = (timeoutInMiliseconds: number) => {\n        if (!this.editDiv.current) return;\n        let value = this.editDiv.current.innerHTML;\n\n        let imgUrlIdx = -1;\n        while ((imgUrlIdx = value.indexOf('<img src=\"http')) !== -1) {\n            value = value.slice(0, imgUrlIdx + 10) + value.slice(value.indexOf('/', imgUrlIdx + 18));\n        }\n\n        if (value !== this.currentText) {\n            this.currentText = value;\n\n            if (this.timeout) {\n                clearTimeout(this.timeout);\n            }\n\n            this.timeout = setTimeout(() => {\n                const { dispatch, cardId, fieldId } = this.props;\n                const textInfo: TextInfo = { value };\n\n                dispatch(cardSetChangeText(cardId, fieldId, textInfo));\n            }, timeoutInMiliseconds);\n        }\n    };\n\n    handleBlur = () => {\n        this.updateContent(0);\n    };\n\n    handleInput = () => {\n        this.updateContent(500);\n    };\n\n    handlePaste = (event: React.ClipboardEvent) => {\n        function escapeHtml(unsafe: string) {\n            return unsafe\n                .replace(/&/g, '&amp;')\n                .replace(/</g, '&lt;')\n                .replace(/>/g, '&gt;')\n                .replace(/\"/g, '&quot;')\n                .replace(/'/g, '&#039;');\n        }\n\n        event.preventDefault();\n\n        let text = '';\n        text = event.clipboardData.getData('text/plain');\n\n        text = text\n            .split('\\n')\n            .map((s: string) => `<div>${escapeHtml(s)}</div>`)\n            .join('');\n        document.execCommand('insertHTML', false, text);\n    };\n\n    render() {\n        const { color, align, fontFamily, fontVariant, fontSize, lineHeight } = this.props;\n        const isItalic = fontVariant && fontVariant.indexOf('italic') !== -1;\n        const fontWeight = isItalic\n            ? fontVariant === 'italic'\n                ? 400\n                : parseInt(fontVariant.slice(0, 3))\n            : fontVariant === 'regular'\n            ? 400\n            : parseInt(fontVariant);\n\n        return (\n            <div\n                ref={this.editDiv}\n                className={style.content}\n                contentEditable={true}\n                onFocus={this.onFocus}\n                onBlur={this.handleBlur}\n                onInput={this.handleInput}\n                onPaste={this.handlePaste}\n                style={{\n                    width: '100%',\n                    height: '100%',\n                    textAlign: align === 'left' ? 'left' : align === 'right' ? 'right' : 'center',\n                    color: color,\n                    fontFamily: `'${fontFamily}'` || DEFAULT_FONT,\n                    fontStyle: isItalic ? 'italic' : 'normal',\n                    fontWeight,\n                    fontSize: `${fontSize}px`,\n                    outline: 'none',\n                    overflowWrap: 'break-word',\n                    lineHeight,\n                }}\n                dangerouslySetInnerHTML={{ __html: this.props.textValue }}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    let fieldInfo = state.cardset.present.fields[props.cardId][props.fieldId];\n    const textValue = fieldInfo.type === 'text' ? fieldInfo.value : '';\n    return {\n        textValue,\n        isActive:\n            props.cardId === state.cardset.present.activeCardId &&\n            props.fieldId === state.cardset.present.activeFieldId,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(ContentEditable);\n","import { connect } from 'react-redux';\nimport React, { PureComponent } from 'react';\n\nimport { DEFAULT_LINE_HEIGHT } from '../constants';\nimport { Dispatch, cardSetChangeFieldAngle, cardSetChangeFieldPosition, cardSetChangeFieldSize } from '../actions';\nimport { State } from '../reducers';\nimport { TextFieldInfo } from '../types';\nimport ContentEditable from './ContentEditable';\nimport FieldController from './FieldController';\nimport emptyTextImage from './text.svg';\n\ninterface OwnProps {\n    cardId: string;\n    isOnBack: boolean;\n    ppmm: number;\n    textFieldInfo: TextFieldInfo;\n    cardWidth: number;\n    cardHeight: number;\n}\n\ninterface StateProps {\n    text: string;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass TextField extends PureComponent<Props> {\n    handleDrag = (x: number, y: number, cardOnly: boolean, group: string) => {\n        const { dispatch, cardId, textFieldInfo, ppmm } = this.props;\n        dispatch(\n            cardSetChangeFieldPosition(cardOnly ? cardId : undefined, textFieldInfo.id, x / ppmm, y / ppmm, group),\n        );\n    };\n\n    handleResize = (width: number, height: number, cardOnly: boolean, group: string) => {\n        const { dispatch, textFieldInfo, cardId, ppmm } = this.props;\n        dispatch(\n            cardSetChangeFieldSize(cardOnly ? cardId : undefined, textFieldInfo.id, width / ppmm, height / ppmm, group),\n        );\n    };\n\n    handleRotate = (angle: number, cardOnly: boolean, group: string) => {\n        const { dispatch, textFieldInfo, cardId } = this.props;\n        dispatch(cardSetChangeFieldAngle(cardOnly ? cardId : undefined, textFieldInfo.id, angle, group));\n    };\n\n    render() {\n        const { textFieldInfo, text, ppmm, cardWidth, cardHeight } = this.props;\n\n        return (\n            <FieldController\n                cardId={this.props.cardId}\n                fieldId={textFieldInfo.id}\n                x={textFieldInfo.x * ppmm}\n                y={textFieldInfo.y * ppmm}\n                width={textFieldInfo.width * ppmm}\n                height={textFieldInfo.height * ppmm}\n                angle={textFieldInfo.angle}\n                onDrag={this.handleDrag}\n                onResize={this.handleResize}\n                onRotate={this.handleRotate}\n                cardWidth={cardWidth}\n                cardHeight={cardHeight}\n                ppmm={ppmm}\n            >\n                {text === '' && (\n                    <div\n                        style={{\n                            width: '100%',\n                            height: '100%',\n                            position: 'fixed',\n                            left: 0,\n                            top: 0,\n                            zIndex: -1,\n                            textAlign:\n                                textFieldInfo.align === 'left'\n                                    ? 'left'\n                                    : textFieldInfo.align === 'right'\n                                    ? 'right'\n                                    : 'center',\n                        }}\n                    >\n                        <img style={{ opacity: 0.5, width: 'auto', height: '100%' }} src={emptyTextImage} alt=\"\" />\n                    </div>\n                )}\n\n                <ContentEditable\n                    cardId={this.props.cardId}\n                    isOnBack={this.props.isOnBack}\n                    fieldId={textFieldInfo.id}\n                    align={textFieldInfo.align}\n                    color={textFieldInfo.color}\n                    fontFamily={textFieldInfo.fontFamily}\n                    fontVariant={textFieldInfo.fontVariant}\n                    fontSize={textFieldInfo.fontSize * ppmm}\n                    lineHeight={textFieldInfo.lineHeight || DEFAULT_LINE_HEIGHT}\n                />\n            </FieldController>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    let fieldInfo = state.cardset.present.fields[props.cardId][props.textFieldInfo.id];\n    let text = fieldInfo.type === 'text' ? fieldInfo.value : '';\n    return {\n        text,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(TextField);\n","import { connect } from 'react-redux';\nimport Measure from 'react-measure';\nimport React, { Component } from 'react';\n\nimport { BLEED_WIDTH } from '../constants';\nimport { CardType, IdsArray, FieldInfoCollection } from '../types';\nimport { Dispatch, cardSetActiveCardAndField } from '../actions';\nimport { State } from '../reducers';\nimport ImageField from './ImageField';\nimport TextField from './TextField';\nimport style from './Card.module.css';\n\ninterface OwnProps {\n    card: CardType;\n    isBack: boolean;\n}\n\ninterface StateProps {\n    cardFields: FieldInfoCollection;\n    fieldsIds: IdsArray;\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    isActiveCard: boolean;\n    zoom: number;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\ninterface LocalState {\n    dimensions: {\n        width: number;\n        height: number;\n    };\n}\n\nclass Card extends Component<Props, LocalState> {\n    state = {\n        dimensions: {\n            width: -1,\n            height: -1,\n        },\n    };\n\n    handleFieldDeselect = (event: React.MouseEvent | React.TouchEvent) => {\n        const { dispatch, card, isBack } = this.props;\n        const el = event.target as HTMLElement;\n        if (el.getAttribute('id') === `card_${card.id}`) {\n            dispatch(cardSetActiveCardAndField(card.id, isBack, undefined));\n            event.stopPropagation();\n        }\n    };\n\n    render() {\n        const { cardFields, fieldsIds, card, isBack, width, height, isActiveCard, zoom, isTwoSided } = this.props;\n        const widthWithBleeds = width + BLEED_WIDTH * 2;\n        const heightWithBleeds = height + BLEED_WIDTH * 2;\n\n        const ppmm = this.state.dimensions.width / widthWithBleeds;\n\n        return (\n            <div>\n                <Measure\n                    client\n                    onResize={contentRect => {\n                        if (!contentRect.client) {\n                            return;\n                        }\n                        this.setState({ dimensions: contentRect.client });\n                    }}\n                >\n                    {({ measureRef }) => (\n                        <div\n                            className={`${style.card} ${isActiveCard ? style.active : ''}`}\n                            id={`card_${card.id}`}\n                            ref={measureRef}\n                            style={{\n                                width: `${widthWithBleeds * zoom}mm`,\n                                height: `${heightWithBleeds * zoom}mm`,\n                                position: 'relative',\n                                overflow: 'hidden',\n                            }}\n                            onMouseDown={this.handleFieldDeselect}\n                            onTouchStart={this.handleFieldDeselect}\n                        >\n                            {fieldsIds.map(id => {\n                                if (!(id in cardFields)) {\n                                    return null;\n                                }\n                                const p = cardFields[id];\n                                if (p.type === 'image') {\n                                    return (\n                                        <ImageField\n                                            key={p.id}\n                                            cardId={card.id}\n                                            isOnBack={isBack}\n                                            imageFieldInfo={p}\n                                            ppmm={ppmm}\n                                            cardWidth={this.state.dimensions.width}\n                                            cardHeight={this.state.dimensions.height}\n                                        />\n                                    );\n                                } else if (p.type === 'text') {\n                                    return (\n                                        <TextField\n                                            key={p.id}\n                                            cardId={card.id}\n                                            isOnBack={isBack}\n                                            textFieldInfo={p}\n                                            ppmm={ppmm}\n                                            cardWidth={this.state.dimensions.width}\n                                            cardHeight={this.state.dimensions.height}\n                                        />\n                                    );\n                                }\n                                return null;\n                            })}\n\n                            <div\n                                style={{\n                                    position: 'absolute',\n                                    width: `${width * zoom}mm`,\n                                    height: `${height * zoom}mm`,\n                                    left: `${BLEED_WIDTH * zoom}mm`,\n                                    top: `${BLEED_WIDTH * zoom}mm`,\n                                    border: '1px dashed black',\n                                    borderRadius: '5mm',\n                                    pointerEvents: 'none',\n                                }}\n                            />\n\n                            <div\n                                style={{\n                                    position: 'absolute',\n                                    width: `${(width - BLEED_WIDTH * 2) * zoom}mm`,\n                                    height: `${(height - BLEED_WIDTH * 2) * zoom}mm`,\n                                    left: `${BLEED_WIDTH * 2 * zoom}mm`,\n                                    top: `${BLEED_WIDTH * 2 * zoom}mm`,\n                                    border: '1px dashed red',\n                                    borderRadius: '5mm',\n                                    pointerEvents: 'none',\n                                }}\n                            />\n                        </div>\n                    )}\n                </Measure>\n                {isTwoSided && (\n                    <div\n                        className={style.title}\n                        style={{\n                            width: `${widthWithBleeds * zoom}mm`,\n                            position: 'relative',\n                        }}\n                    >\n                        {isBack ? 'Back' : 'Front'}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    let cardFields = state.cardset.present.fields[props.card.id] || {};\n\n    return {\n        cardFields,\n        fieldsIds: state.cardset.present.fieldsAllIds.filter(\n            id => ((id in cardFields && cardFields[id].isOnBack) || false) === props.isBack,\n        ),\n        width: state.cardset.present.width,\n        height: state.cardset.present.height,\n        isTwoSided: state.cardset.present.isTwoSided,\n        isActiveCard:\n            state.cardset.present.activeCardId === props.card.id && state.cardset.present.isBackActive === props.isBack,\n        zoom: state.cardset.present.zoom,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(Card);\n","import React, { Component } from 'react';\nimport style from './EditableTitle.module.css';\n\ninterface Props {\n    title: string;\n    onChange: (newName: string) => void;\n}\n\nexport default class EditableTitle extends Component<Props> {\n    state = {\n        titleIsEdited: false,\n    };\n\n    handleClick = () => {\n        this.setState({ titleIsEdited: true });\n    };\n\n    handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.props.onChange(event.target.value);\n    };\n\n    handleBlur = () => {\n        this.setState({ titleIsEdited: false });\n    };\n\n    render() {\n        const { titleIsEdited } = this.state;\n        const { title } = this.props;\n\n        return (\n            <>\n                {!titleIsEdited && (\n                    <h1 className={style.input} onClick={this.handleClick}>\n                        {title}\n                    </h1>\n                )}\n                {titleIsEdited && (\n                    <input\n                        autoFocus\n                        type=\"text\"\n                        className={style.input}\n                        value={title}\n                        onChange={this.handleChange}\n                        onBlur={this.handleBlur}\n                    />\n                )}\n            </>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nimport style from './Loader.module.css';\n\ninterface Props {\n    fixed?: boolean;\n    small?: boolean;\n}\n\nexport default class Loader extends Component<Props> {\n    render() {\n        const { fixed, small } = this.props;\n\n        return (\n            <div className={`${style.loader} ${fixed ? style.fixed : style.relative} ${small ? style.small : ''}`}>\n                <div />\n                <div />\n            </div>\n        );\n    }\n}\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { CardType, DispatchProps, SidebarOwnProps } from '../types';\nimport { State } from '../reducers';\nimport {\n    cardSetCloneCard,\n    cardSetRemoveCard,\n    cardSetUpdateCardCount,\n    cardSetRotateCardsRight,\n    cardSetRotateCardsLeft,\n    cardSetRedo,\n    cardSetUndo,\n} from '../actions';\nimport style from './SidebarDetails.module.css';\n\ninterface StateProps {\n    activeCard: CardType | null;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarDetails extends Component<Props> {\n    handleRotateRightClick = () => {\n        const { dispatch } = this.props;\n        dispatch(cardSetRotateCardsRight());\n    };\n\n    handleRotateLeftClick = () => {\n        const { dispatch } = this.props;\n        dispatch(cardSetRotateCardsLeft());\n    };\n\n    handleCloneCardClick = () => {\n        const { activeCard, dispatch } = this.props;\n        if (activeCard !== null) {\n            dispatch(cardSetCloneCard(activeCard));\n        }\n    };\n\n    handleRemoveCardClick = () => {\n        const { activeCard, dispatch } = this.props;\n        if (activeCard !== null) {\n            dispatch(cardSetRemoveCard(activeCard));\n        }\n    };\n\n    handleCountChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeCard, dispatch } = this.props;\n        if (activeCard !== null) {\n            dispatch(cardSetUpdateCardCount(activeCard, parseInt(event.target.value)));\n        }\n    };\n\n    handleUndoClick = () => {\n        const { dispatch } = this.props;\n        dispatch(cardSetUndo());\n    };\n\n    handleRedoClick = () => {\n        const { dispatch } = this.props;\n        dispatch(cardSetRedo());\n    };\n\n    render() {\n        const { activeCard, visible } = this.props;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'initial' : 'none' }}>\n                <div>\n                    <button\n                        onClick={this.handleCloneCardClick}\n                        title=\"Clone card\"\n                        className={activeCard === null ? style.disabled : ''}\n                    >\n                        <i className=\"material-icons\">file_copy</i>\n                    </button>\n\n                    <input\n                        type=\"number\"\n                        value={activeCard !== null ? activeCard.count.toString() : 0}\n                        onChange={this.handleCountChange}\n                        title=\"Number of card's copies\"\n                        className={activeCard === null ? style.disabled : ''}\n                    />\n                    <button\n                        onClick={this.handleRemoveCardClick}\n                        title=\"Remove card\"\n                        className={activeCard === null ? style.disabled : ''}\n                    >\n                        <i className=\"material-icons\">delete</i>\n                    </button>\n                </div>\n\n                <div>\n                    <button onClick={this.handleUndoClick} title=\"Undo (Ctrl+Z)\">\n                        <i className=\"material-icons\">undo</i>\n                    </button>\n\n                    <button onClick={this.handleRedoClick} title=\"Redo (Ctrl+Shift+Z or Ctrl+Y)\">\n                        <i className=\"material-icons\">redo</i>\n                    </button>\n                </div>\n\n                <div>\n                    <button onClick={this.handleRotateRightClick} title=\"Rotate cards right\">\n                        <i className=\"material-icons\">rotate_right</i>\n                    </button>\n\n                    <button onClick={this.handleRotateLeftClick} title=\"Rotate cards left\">\n                        <i className=\"material-icons\">rotate_left</i>\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        activeCard:\n            state.cardset.present.activeCardId !== undefined\n                ? state.cardset.present.cardsById[state.cardset.present.activeCardId]\n                : null,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarDetails);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { ACTIVITY_CREATING_PNG, State } from '../reducers';\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport { gameCreatePngRequest } from '../actions';\nimport style from './SidebarGeneratePng.module.css';\n\ninterface StateProps {\n    width: number;\n    height: number;\n    isCreatingPng: boolean;\n    activeCardset: string | null;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\ninterface LocalState {\n    dpi: number;\n}\n\nexport class SidebarGeneratePng extends Component<Props, LocalState> {\n    state: LocalState = {\n        dpi: 300,\n    };\n\n    handleDpiChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ dpi: parseInt(event.target.value) });\n    };\n\n    handleGenerate = () => {\n        const { dispatch, activeCardset } = this.props;\n        const { dpi } = this.state;\n\n        if (activeCardset !== null) {\n            dispatch(gameCreatePngRequest(dpi, 'cardsets', activeCardset));\n        }\n    };\n\n    render() {\n        const { visible, width, height, isCreatingPng } = this.props;\n        const { dpi } = this.state;\n\n        const calculatedWidth = Math.round(dpi * (width / 25.4 + 1 / 4));\n        const calculatedHeight = Math.round(dpi * (height / 25.4 + 1 / 4));\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'grid' : 'none' }}>\n                <div>Here you can generate your cards as PNG images.</div>\n                <label htmlFor=\"dpi\">DPI:</label>\n                <input\n                    id=\"dpi\"\n                    type=\"number\"\n                    min=\"1\"\n                    step=\"1\"\n                    onChange={this.handleDpiChange}\n                    className=\"form-control\"\n                    placeholder=\"DPI\"\n                    value={dpi}\n                />\n\n                <div>Width in pixels: {calculatedWidth}</div>\n                <div>Height in pixels: {calculatedHeight}</div>\n\n                <button disabled={isCreatingPng} onClick={this.handleGenerate}>\n                    Generate\n                </button>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        width: state.cardset.present.width,\n        height: state.cardset.present.height,\n        isCreatingPng: (state.games.activity & ACTIVITY_CREATING_PNG) === ACTIVITY_CREATING_PNG,\n        activeCardset: state.cardsets.active,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarGeneratePng);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { ACTIVITY_CREATING_PDF, State } from '../reducers';\nimport { Dispatch, gameCreatePdfRequest } from '../actions';\nimport KawaiiMessage, { Character } from './KawaiiMessage';\n\ninterface OwnProps {\n    type: string;\n    id: string;\n    withHelp?: boolean;\n}\n\ninterface StateProps {\n    isCreatingPdf: boolean;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = StateProps & DispatchProps & OwnProps;\n\ninterface LocalState {\n    pageWidth: number;\n    pageHeight: number;\n    topBottomMargin: number;\n    leftRightMargin: number;\n    verticalSpace: number;\n    horizontalSpace: number;\n    includeBleedingArea: boolean;\n    cutMarksForScissors: boolean;\n    cutMarksForGuillotine: boolean;\n    cutMarksInMarginArea: boolean;\n    cutMarksOnFrontSideOnly: boolean;\n}\n\nexport class PDFGenerator extends Component<Props, LocalState> {\n    state = {\n        pageWidth: 210,\n        pageHeight: 297,\n        topBottomMargin: 15,\n        leftRightMargin: 9,\n        verticalSpace: 0,\n        horizontalSpace: 0,\n        includeBleedingArea: false,\n        cutMarksForScissors: true,\n        cutMarksForGuillotine: false,\n        cutMarksInMarginArea: false,\n        cutMarksOnFrontSideOnly: false,\n    };\n\n    handleGeneratePdfClick = () => {\n        const { dispatch } = this.props;\n        const {\n            pageWidth,\n            pageHeight,\n            topBottomMargin,\n            leftRightMargin,\n            verticalSpace,\n            horizontalSpace,\n            includeBleedingArea,\n            cutMarksForScissors,\n            cutMarksForGuillotine,\n            cutMarksInMarginArea,\n            cutMarksOnFrontSideOnly,\n        } = this.state;\n\n        dispatch(\n            gameCreatePdfRequest(\n                this.props.type,\n                this.props.id,\n                pageWidth,\n                pageHeight,\n                topBottomMargin,\n                leftRightMargin,\n                verticalSpace,\n                horizontalSpace,\n                includeBleedingArea,\n                cutMarksForScissors,\n                cutMarksForGuillotine,\n                cutMarksInMarginArea,\n                cutMarksOnFrontSideOnly,\n            ),\n        );\n    };\n\n    handlePageWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ pageWidth: parseFloat(event.target.value) });\n    };\n\n    handlePageHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ pageHeight: parseFloat(event.target.value) });\n    };\n\n    handleTopBottomMarginChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ topBottomMargin: parseFloat(event.target.value) });\n    };\n\n    handleLeftRightMarginChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ leftRightMargin: parseFloat(event.target.value) });\n    };\n\n    handleVerticalSpaceChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ verticalSpace: parseFloat(event.target.value) });\n    };\n\n    handleHorizontalSpaceChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ horizontalSpace: parseFloat(event.target.value) });\n    };\n\n    handleIncludeBleedingAreaChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ includeBleedingArea: event.target.checked });\n    };\n\n    handleCutMarksForScissors = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ cutMarksForScissors: event.target.checked });\n    };\n\n    handleCutMarksForGuillotine = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ cutMarksForGuillotine: event.target.checked });\n    };\n\n    handleCutMarksInMarginArea = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ cutMarksInMarginArea: event.target.checked });\n    };\n\n    handleCutMarksOnFrontSideOnly = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ cutMarksOnFrontSideOnly: event.target.checked });\n    };\n\n    render() {\n        const { isCreatingPdf, withHelp } = this.props;\n\n        return (\n            <>\n                {withHelp && (\n                    <KawaiiMessage character={Character.Ghost} mood=\"excited\">\n                        <p>Here you can generate PDF.</p>\n                        <p>Hint 1: A4 page size is 210 mm x 297 mm. Letter page size is 215.9 x 279.4 mm.</p>\n                        <p>Hint 2: 1 inch is equal to 25.4 mm.</p>\n                    </KawaiiMessage>\n                )}\n\n                <div className=\"form\">\n                    <label htmlFor=\"page_width\">Page width (mm):</label>\n                    <input\n                        id=\"page_width\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handlePageWidthChange}\n                        placeholder=\"Page width\"\n                        value={this.state.pageWidth}\n                    />\n                    <label htmlFor=\"page_height\">Page height (mm):</label>\n                    <input\n                        id=\"page_height\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handlePageHeightChange}\n                        placeholder=\"Page Height\"\n                        value={this.state.pageHeight}\n                    />\n                    <label htmlFor=\"page_topbottom_margin\">Margin from top/bottom (mm):</label>\n                    <input\n                        id=\"page_topbottom_margin\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handleTopBottomMarginChange}\n                        placeholder=\"Top/Bottom margin\"\n                        value={this.state.topBottomMargin}\n                    />\n                    <label htmlFor=\"page_leftright_margin\">Margin from left/right (mm):</label>\n                    <input\n                        id=\"page_leftright_margin\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handleLeftRightMarginChange}\n                        placeholder=\"Left/Right margin\"\n                        value={this.state.leftRightMargin}\n                    />\n\n                    <label htmlFor=\"card_vertical_space\">Vertical space between cards (mm):</label>\n                    <input\n                        id=\"card_vertical_space\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handleVerticalSpaceChange}\n                        placeholder=\"Vertical space\"\n                        value={this.state.verticalSpace}\n                    />\n\n                    <label htmlFor=\"card_horizontal_space\">Horizontal space between cards (mm):</label>\n                    <input\n                        id=\"card_horizontal_space\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handleHorizontalSpaceChange}\n                        placeholder=\"Horizontal space\"\n                        value={this.state.horizontalSpace}\n                    />\n\n                    <label\n                        title=\"You might need this for Cardmogrifier or professional printing. Do\n                        not check this if all you are interested in is card (area inside black dashed rectangle).\"\n                    >\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.includeBleedingArea}\n                            onChange={this.handleIncludeBleedingAreaChange}\n                        />\n                        Generate with bleeding area.\n                    </label>\n\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.cutMarksForScissors}\n                            onChange={this.handleCutMarksForScissors}\n                        />\n                        Generate with cut marks for paper scissors.\n                    </label>\n\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.cutMarksForGuillotine}\n                            onChange={this.handleCutMarksForGuillotine}\n                        />\n                        Generate with cut marks for paper guillotine.\n                    </label>\n\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.cutMarksInMarginArea}\n                            onChange={this.handleCutMarksInMarginArea}\n                        />\n                        Generate with cut marks for paper guillotine in margin area.\n                    </label>\n\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.cutMarksOnFrontSideOnly}\n                            onChange={this.handleCutMarksOnFrontSideOnly}\n                        />\n                        Generate cut marks on front side only (useful for printing on both sides).\n                    </label>\n\n                    <button disabled={isCreatingPdf} onClick={this.handleGeneratePdfClick}>\n                        Generate PDF\n                    </button>\n                </div>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        isCreatingPdf: (state.games.activity & ACTIVITY_CREATING_PDF) === ACTIVITY_CREATING_PDF,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(PDFGenerator);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport { State } from '../reducers';\nimport PDFGenerator from './PDFGenerator';\nimport style from './SidebarGeneratePdf.module.css';\n\ninterface StateProps {\n    activeCardSetId: string | null;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarGeneratePdf extends Component<Props> {\n    render() {\n        const { activeCardSetId, visible } = this.props;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'grid' : 'none' }}>\n                {activeCardSetId !== null && <PDFGenerator type=\"cardsets\" id={activeCardSetId} />}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        activeCardSetId: state.cardsets.active,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarGeneratePdf);\n","import { ChromePicker, ColorResult } from 'react-color';\nimport React, { Component } from 'react';\n\ninterface Props {\n    onChange: (color: ColorResult) => void;\n    color: string;\n}\n\ninterface State {\n    displayColorPicker: boolean;\n}\n\nexport default class ColorButton extends Component<Props, State> {\n    state = {\n        displayColorPicker: false,\n    };\n\n    handleClick = () => {\n        this.setState({ displayColorPicker: !this.state.displayColorPicker });\n    };\n\n    handleClose = () => {\n        this.setState({ displayColorPicker: false });\n    };\n\n    handleChange = (color: ColorResult) => {\n        this.props.onChange(color);\n    };\n\n    render() {\n        const popover: React.CSSProperties = {\n            position: 'absolute',\n            zIndex: 2,\n        };\n        const cover: React.CSSProperties = {\n            position: 'fixed',\n            top: '0px',\n            right: '0px',\n            bottom: '0px',\n            left: '0px',\n        };\n        return (\n            <>\n                <button onClick={this.handleClick} title=\"Change color\">\n                    <i className=\"material-icons\">color_lens</i>\n                </button>\n                {this.state.displayColorPicker ? (\n                    <div style={popover}>\n                        <div style={cover} onClick={this.handleClose} />\n                        <ChromePicker color={this.props.color} disableAlpha={true} onChange={this.handleChange} />\n                    </div>\n                ) : null}\n            </>\n        );\n    }\n}\n","import { ColorResult } from 'react-color';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, IdsArray, ImageArray, SidebarOwnProps, FieldInfo, ImageInfo } from '../types';\nimport { State } from '../reducers';\nimport {\n    cardSetAddImageField,\n    cardSetChangeActiveFieldName,\n    cardSetChangeFitForActiveField,\n    cardSetChangeCropForActiveField,\n    cardSetChangeImage,\n    cardSetLockActiveField,\n    cardSetLowerActiveFieldToBottom,\n    cardSetRaiseActiveFieldToTop,\n    cardSetRemoveActiveField,\n    cardSetUnlockActiveField,\n    imageListRequest,\n    cardSetChangeApplyToAllCards,\n    cardSetRaiseActiveField,\n    cardSetLowerActiveField,\n} from '../actions';\nimport ColorButton from './ColorButton';\nimport style from './SidebarImage.module.css';\n\ninterface StateProps {\n    activeFieldInfo?: FieldInfo;\n    crop: boolean;\n    activeCardId?: string;\n    filter: string;\n    images: ImageArray;\n    cardsAllIds: IdsArray;\n    applyToAllCards: boolean;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\ninterface LocalState {\n    location: string;\n}\n\nexport class SidebarImage extends Component<Props, LocalState> {\n    state = {\n        location: 'all',\n    };\n\n    handleAddImageClick = () => {\n        const { dispatch } = this.props;\n        dispatch(cardSetAddImageField());\n    };\n\n    changeImage = (ii: ImageInfo) => {\n        const { activeCardId, activeFieldInfo, dispatch } = this.props;\n\n        if (activeFieldInfo) {\n            dispatch(cardSetChangeImage(activeCardId ? activeCardId : undefined, activeFieldInfo.id, ii));\n        }\n    };\n\n    handleRemoveImageFromFieldClick = () => {\n        const ii: ImageInfo = { url: undefined, base64: undefined };\n        this.changeImage(ii);\n    };\n\n    handleRemoveClick = () => {\n        const { activeFieldInfo, dispatch } = this.props;\n        if (activeFieldInfo !== undefined) {\n            dispatch(cardSetRemoveActiveField());\n        }\n    };\n\n    handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeFieldInfo, dispatch } = this.props;\n        const name = event.target.value.trim();\n        if (activeFieldInfo !== undefined) {\n            dispatch(cardSetChangeActiveFieldName(name));\n        }\n    };\n\n    handleFilterChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        const { location } = this.state;\n        const filter = event.target.value;\n        dispatch(imageListRequest(filter, location));\n    };\n\n    handleImageSelect = (imageName: string, width: number, height: number) => {\n        const { activeFieldInfo } = this.props;\n\n        if (activeFieldInfo !== undefined) {\n            const color = activeFieldInfo && activeFieldInfo.color;\n\n            const ii: ImageInfo = { url: `/api/imagefiles/${imageName}`, color, width, height, base64: undefined };\n            this.changeImage(ii);\n        }\n    };\n\n    handleRaise = (event: React.MouseEvent) => {\n        const { activeFieldInfo, dispatch } = this.props;\n        if (activeFieldInfo !== undefined) {\n            if (event.ctrlKey) {\n                dispatch(cardSetRaiseActiveFieldToTop());\n            } else {\n                dispatch(cardSetRaiseActiveField());\n            }\n        }\n    };\n\n    handleLower = (event: React.MouseEvent) => {\n        const { activeFieldInfo, dispatch } = this.props;\n        if (activeFieldInfo !== undefined) {\n            if (event.ctrlKey) {\n                dispatch(cardSetLowerActiveFieldToBottom());\n            } else {\n                dispatch(cardSetLowerActiveField());\n            }\n        }\n    };\n\n    handleLockField = () => {\n        const { activeFieldInfo, dispatch } = this.props;\n        if (activeFieldInfo !== undefined) {\n            dispatch(cardSetLockActiveField());\n        }\n    };\n\n    handleUnlockField = () => {\n        const { activeFieldInfo, dispatch } = this.props;\n        if (activeFieldInfo !== undefined) {\n            dispatch(cardSetUnlockActiveField());\n        }\n    };\n\n    handleFitOptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        const fit = event.target.value;\n\n        dispatch(cardSetChangeFitForActiveField(fit));\n    };\n\n    handleOptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { filter, dispatch } = this.props;\n        const location = event.target.value;\n\n        this.setState({ location });\n        dispatch(imageListRequest(filter, location));\n    };\n\n    handleColorChange = (color: ColorResult) => {\n        const ii: ImageInfo = { color: color.hex };\n        this.changeImage(ii);\n    };\n\n    handleRemoveColorClick = () => {\n        const ii: ImageInfo = { color: undefined };\n        this.changeImage(ii);\n    };\n\n    handleApplyToAllCardChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeApplyToAllCards(event.target.checked));\n    };\n\n    handleChangeCrop = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeFieldInfo, dispatch } = this.props;\n        if (activeFieldInfo !== undefined) {\n            dispatch(cardSetChangeCropForActiveField(event.target.checked));\n        }\n    };\n\n    render() {\n        const { activeFieldInfo, crop, filter, visible, applyToAllCards } = this.props;\n        const { location } = this.state;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'grid' : 'none' }}>\n                <div>\n                    <button onClick={this.handleAddImageClick} title=\"Add image field\">\n                        <i className=\"material-icons\">add_photo_alternate</i>\n                    </button>\n\n                    {activeFieldInfo !== undefined && (\n                        <>\n                            <button onClick={this.handleRaise} title=\"Raise image (with Ctrl - raise to top)\">\n                                <i className=\"material-icons\">arrow_upward</i>\n                            </button>\n                            <button onClick={this.handleLower} title=\"Lower image (with Ctrl - lower to bottom)\">\n                                <i className=\"material-icons\">arrow_downward</i>\n                            </button>\n                        </>\n                    )}\n\n                    {activeFieldInfo &&\n                        activeFieldInfo.type === 'image' &&\n                        (activeFieldInfo.url || activeFieldInfo.base64) && (\n                            <button onClick={this.handleRemoveImageFromFieldClick} title=\"Remove image from field\">\n                                <i className=\"material-icons\">remove_circle_outline</i>\n                            </button>\n                        )}\n\n                    {activeFieldInfo !== undefined && !activeFieldInfo.locked && (\n                        <button\n                            onClick={this.handleLockField}\n                            title=\"Lock image field. Locked field can't be dragged, rotated, resized and removed.\"\n                        >\n                            <i className=\"material-icons\">lock_open</i>\n                        </button>\n                    )}\n\n                    {activeFieldInfo !== undefined && activeFieldInfo.locked && (\n                        <button\n                            onClick={this.handleUnlockField}\n                            title=\"Unlock image field. Unlocked text field can be dragged, rotated, resized and removed.\"\n                        >\n                            <i className=\"material-icons\">lock</i>\n                        </button>\n                    )}\n\n                    <button\n                        className={activeFieldInfo === undefined || activeFieldInfo.locked ? style.disabled : ''}\n                        onClick={this.handleRemoveClick}\n                        title=\"Remove field\"\n                    >\n                        <i className=\"material-icons\">remove</i>\n                    </button>\n\n                    {activeFieldInfo !== undefined && (\n                        <input\n                            type=\"text\"\n                            value={activeFieldInfo.name || ''}\n                            placeholder={activeFieldInfo.id}\n                            onChange={this.handleNameChange}\n                            title=\"Change name of image field.\"\n                        />\n                    )}\n\n                    {activeFieldInfo && activeFieldInfo.type === 'image' && (\n                        <form>\n                            <div>\n                                Fit:\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        value=\"width\"\n                                        checked={!activeFieldInfo.fit || activeFieldInfo.fit === 'width'}\n                                        onChange={this.handleFitOptionChange}\n                                    />\n                                    width\n                                </label>\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        value=\"height\"\n                                        checked={activeFieldInfo.fit === 'height'}\n                                        onChange={this.handleFitOptionChange}\n                                    />\n                                    height\n                                </label>\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        value=\"stretch\"\n                                        checked={activeFieldInfo.fit === 'stretch'}\n                                        onChange={this.handleFitOptionChange}\n                                    />\n                                    stretch\n                                </label>\n                            </div>\n                        </form>\n                    )}\n                </div>\n\n                {activeFieldInfo && activeFieldInfo.type === 'image' && (\n                    <>\n                        <div>\n                            <label>\n                                <input type=\"checkbox\" checked={crop} onChange={this.handleChangeCrop} />\n                                Crop\n                            </label>\n                            <ColorButton\n                                color={(activeFieldInfo && activeFieldInfo.color) || '#FFFFFF'}\n                                onChange={this.handleColorChange}\n                            />\n                            {activeFieldInfo && activeFieldInfo.color && (\n                                <button onClick={this.handleRemoveColorClick} title=\"Remove color\">\n                                    <i className=\"material-icons\">remove_circle</i>\n                                </button>\n                            )}\n                            <label>\n                                <input\n                                    type=\"checkbox\"\n                                    checked={applyToAllCards}\n                                    onChange={this.handleApplyToAllCardChange}\n                                />\n                                Apply to all cards\n                            </label>\n                        </div>\n                    </>\n                )}\n                <div>\n                    <form>\n                        Source:\n                        <label>\n                            <input\n                                type=\"radio\"\n                                value=\"all\"\n                                checked={location === 'all'}\n                                onChange={this.handleOptionChange}\n                            />\n                            All\n                        </label>\n                        <label>\n                            <input\n                                type=\"radio\"\n                                value=\"user\"\n                                checked={location === 'user'}\n                                onChange={this.handleOptionChange}\n                            />\n                            User\n                        </label>\n                        <label>\n                            <input\n                                type=\"radio\"\n                                value=\"game\"\n                                checked={location === 'game'}\n                                onChange={this.handleOptionChange}\n                            />\n                            Game\n                        </label>\n                    </form>\n                </div>\n\n                <div>\n                    <input type=\"text\" placeholder=\"Search...\" value={filter} onChange={this.handleFilterChange} />\n                </div>\n                <div className={style.images}>\n                    {this.props.images.map(im => {\n                        return (\n                            <img\n                                key={im.id}\n                                src={`/api/imagefiles/${im.name}`}\n                                data-width={im.width}\n                                data-height={im.height}\n                                onClick={() => this.handleImageSelect(im.name, im.width, im.height)}\n                                alt={im.name}\n                            />\n                        );\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    const activeFieldInfo =\n        state.cardset.present.activeCardId !== undefined && state.cardset.present.activeFieldId !== undefined\n            ? state.cardset.present.fields[state.cardset.present.activeCardId][state.cardset.present.activeFieldId]\n            : undefined;\n\n    const activeCardId = state.cardset.present.activeCardId;\n\n    return {\n        activeFieldInfo,\n        crop: activeFieldInfo && activeFieldInfo.type === 'image' ? activeFieldInfo.crop || false : false,\n        activeCardId,\n        images: state.images.images,\n        filter: state.images.filter,\n        cardsAllIds: state.cardset.present.cardsAllIds,\n        applyToAllCards: state.cardset.present.applyToAllCards,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarImage);\n","import 'filepond/dist/filepond.min.css';\n\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport { connect } from 'react-redux';\nimport FilePondPluginFileValidateType from 'filepond-plugin-file-validate-type';\nimport Papa from 'papaparse';\nimport React, { Component } from 'react';\nimport md5 from 'md5';\nimport shortid from 'shortid';\n\nimport {\n    CardType,\n    CardsCollection,\n    DispatchProps,\n    IdsArray,\n    SidebarOwnProps,\n    FieldInfoByCardCollection,\n    FieldInfoCollection,\n} from '../types';\nimport { FPLoadCallback, FPRevertLoadCallback, cardSetImportData, messageDisplay } from '../actions';\nimport { State } from '../reducers';\nimport { downloadBlob } from '../utils';\nimport style from './SidebarImportExport.module.css';\n\nregisterPlugin(FilePondPluginFileValidateType);\n\ninterface StateProps {\n    activeGame: string | null;\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    cardsAllIds: IdsArray;\n    cardsById: CardsCollection;\n    fieldsAllIds: IdsArray;\n    fields: FieldInfoByCardCollection;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarImportExport extends Component<Props> {\n    prepareImagePaths = (fields: FieldInfoByCardCollection) => {\n        const { activeGame } = this.props;\n        if (activeGame === null) return fields;\n\n        const ending = '_' + md5(activeGame);\n\n        let preparedImages: FieldInfoByCardCollection = {};\n\n        for (const cardId in fields) {\n            let fieldsByCard = { ...fields[cardId] };\n            for (const fieldId in fieldsByCard) {\n                let imageInfo = { ...fieldsByCard[fieldId] };\n                if (imageInfo.type === 'image') {\n                    let url = imageInfo.url || '';\n                    if (url.endsWith(ending)) {\n                        url = url.replace(ending, '');\n                    } else {\n                        imageInfo.global = true;\n                    }\n\n                    imageInfo.url = url.replace('/api/imagefiles/', '');\n                }\n                fieldsByCard[fieldId] = imageInfo;\n            }\n            preparedImages[cardId] = fieldsByCard;\n        }\n\n        return preparedImages;\n    };\n\n    handleExportJson = () => {\n        const { width, height, isTwoSided, cardsAllIds, cardsById, fields, fieldsAllIds } = this.props;\n\n        const preparedFields = this.prepareImagePaths(fields);\n\n        const data = {\n            width,\n            height,\n            isTwoSided,\n            cardsAllIds,\n            cardsById,\n            fields: preparedFields,\n            fieldsAllIds,\n        };\n\n        let json = JSON.stringify(data, null, 4);\n        let blob = new Blob([json], { type: 'octet/stream' });\n        let url = window.URL.createObjectURL(blob);\n        downloadBlob(url, 'cardset.json');\n    };\n\n    handleExportCsv = () => {\n        const { cardsAllIds, cardsById, fields, fieldsAllIds } = this.props;\n\n        const preparedFields = this.prepareImagePaths(fields);\n\n        let csvData: (string | number)[][] = [];\n        let header = ['card_id', 'card_count'];\n        let usedNames: { [key: string]: boolean } = {};\n        for (const plId of fieldsAllIds) {\n            const fieldInfo = fields[cardsAllIds[0]][plId];\n            const name = fieldInfo.name || fieldInfo.id;\n            if (!(name in usedNames)) {\n                header.push(name);\n                if (fieldInfo.type === 'image') {\n                    header.push(`${name}_global`);\n                }\n                usedNames[name] = false;\n            }\n        }\n        csvData.push(header);\n\n        for (const cardId of cardsAllIds) {\n            let card = cardsById[cardId];\n\n            let dataRow: (string | number)[] = [cardId, card.count];\n\n            let written = { ...usedNames };\n            for (const fieldId of fieldsAllIds) {\n                const fieldIndo = fields[cardId][fieldId];\n                const name = fieldIndo.name || fieldIndo.id;\n\n                if (!written[name]) {\n                    let fieldInfo = preparedFields[cardId][fieldId];\n                    if (fieldInfo.type === 'text') {\n                        dataRow.push(fieldInfo.value);\n                    } else if (fieldInfo.type === 'image') {\n                        dataRow.push(fieldInfo.url || '');\n                        dataRow.push(fieldInfo.global ? 'y' : 'n');\n                    }\n                    written[name] = true;\n                }\n            }\n            csvData.push(dataRow);\n        }\n\n        let csv = Papa.unparse(csvData);\n        let blob = new Blob([csv], { type: 'octet/stream' });\n        let url = window.URL.createObjectURL(blob);\n        downloadBlob(url, 'cardset.csv');\n    };\n\n    handleProcess = (fieldName: string, file: File, metadata: { [propName: string]: string }, load: FPLoadCallback) => {\n        const { dispatch, activeGame, fields, fieldsAllIds, cardsById, cardsAllIds } = this.props;\n        if (activeGame === null) return;\n\n        var reader = new FileReader();\n        reader.readAsText(file, 'UTF-8');\n        reader.onload = function(e) {\n            if (e.target === null) return;\n\n            let data = null;\n            const ending = '_' + md5(activeGame);\n\n            if (file.type === 'application/json') {\n                // eslint-disable-next-line\n                data = JSON.parse((e.target as any).result);\n\n                for (const cardId in data.fields) {\n                    const cardFields: FieldInfoCollection = data.fields[cardId];\n                    for (const fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'image') {\n                            let isGlobal = fieldInfo.global || false;\n\n                            fieldInfo.url = `/api/imagefiles/${fieldInfo.url}${isGlobal ? '' : ending}`;\n                            delete fieldInfo.global;\n                        }\n                    }\n                }\n            } else if (file.type === 'text/csv') {\n                // eslint-disable-next-line\n                const csvData = Papa.parse((e.target as any).result, { header: true });\n\n                let newCardsAllIds: IdsArray = [];\n                let newCardsById: CardsCollection = {};\n                let newFields: FieldInfoByCardCollection = {};\n\n                for (const row of csvData.data) {\n                    if (row['card_count'] === undefined) {\n                        continue;\n                    }\n                    const card: CardType = {\n                        id: row['card_id'] || shortid.generate(),\n                        count: row['card_count'] || 1,\n                    };\n\n                    newFields[card.id] = {\n                        ...fields[card.id in cardsById ? card.id : cardsAllIds[0]],\n                    };\n\n                    newCardsAllIds.push(card.id);\n                    newCardsById[card.id] = card;\n\n                    for (const fieldId of fieldsAllIds) {\n                        const fieldInfo = newFields[card.id][fieldId];\n                        const name = fieldInfo.name || fieldInfo.id;\n\n                        if (row[name]) {\n                            if (fieldInfo.type === 'image') {\n                                const isGlobal = row[`${name}_global`] === 'y';\n                                const url = row[name];\n\n                                newFields[card.id][fieldId] = {\n                                    ...fieldInfo,\n                                    url: `/api/imagefiles/${url}${isGlobal ? '' : ending}`,\n                                };\n                            } else if (fieldInfo.type === 'text') {\n                                newFields[card.id][fieldId] = {\n                                    ...fieldInfo,\n                                    value: row[name],\n                                };\n                            }\n                        }\n                    }\n                }\n\n                data = {\n                    cardsAllIds: newCardsAllIds,\n                    cardsById: newCardsById,\n                    fields: newFields,\n                    activeCardId: undefined,\n                    activeFieldId: undefined,\n                };\n            }\n\n            if (data !== null) {\n                dispatch(cardSetImportData(data));\n            }\n        };\n        reader.onerror = function() {\n            dispatch(messageDisplay('error', 'Problem during import.'));\n        };\n\n        load(file.name);\n    };\n\n    handleRevert = (uniqueFileId: string, load: FPRevertLoadCallback) => {\n        load();\n    };\n\n    render() {\n        const { visible } = this.props;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'grid' : 'none' }}>\n                <div>\n                    Here you can export and import your card set data. JSON file contains templates of cards, text and\n                    image data by card, CSV file contains only text and image data by card.\n                </div>\n                <button onClick={this.handleExportJson}>\n                    <i className=\"material-icons\">cloud_download</i> Get JSON\n                </button>\n                <button onClick={this.handleExportCsv}>\n                    <i className=\"material-icons\">cloud_download</i> Get CSV\n                </button>\n\n                <div>Drag & Drop or browser for JSON or CSV file here:</div>\n\n                <FilePond\n                    server={{\n                        process: this.handleProcess,\n                        revert: this.handleRevert,\n                    }}\n                    acceptedFileTypes={['text/csv', 'application/json']}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        activeGame: state.games.active,\n        width: state.cardset.present.width,\n        height: state.cardset.present.height,\n        isTwoSided: state.cardset.present.isTwoSided,\n        cardsAllIds: state.cardset.present.cardsAllIds,\n        cardsById: state.cardset.present.cardsById,\n        fieldsAllIds: state.cardset.present.fieldsAllIds,\n        fields: state.cardset.present.fields,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarImportExport);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, IdsArray, SidebarOwnProps, FieldInfo, FieldInfoByCardCollection } from '../types';\nimport { State } from '../reducers';\nimport {\n    cardSetActiveCardAndField,\n    cardSetChangeActiveFieldName,\n    cardSetChangeFieldAngle,\n    cardSetChangeFieldSize,\n    cardSetLockActiveField,\n    cardSetChangeFieldPosition,\n    cardSetLowerActiveField,\n    cardSetLowerActiveFieldToBottom,\n    cardSetRaiseActiveField,\n    cardSetRaiseActiveFieldToTop,\n    cardSetUnlockActiveField,\n    cardSetChangeUnclickableForActiveField,\n} from '../actions';\nimport style from './SidebarMeasurements.module.css';\nimport shortid from 'shortid';\n\ninterface StateProps {\n    activeField?: FieldInfo;\n    activeCardId?: string;\n    fields: FieldInfoByCardCollection;\n    fieldsAllIds: IdsArray;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarMeasurements extends Component<Props> {\n    handlePrevField = () => {\n        const { activeCardId, activeField, fieldsAllIds, dispatch } = this.props;\n        if (fieldsAllIds.length === 0 || activeCardId === null) return;\n\n        let prevField = fieldsAllIds[fieldsAllIds.length - 1];\n        if (activeField !== undefined) {\n            let idx = fieldsAllIds.indexOf(activeField.id);\n            if (idx > 0) prevField = fieldsAllIds[idx - 1];\n        }\n\n        dispatch(cardSetActiveCardAndField(activeCardId, (activeField && activeField.isOnBack) || false, prevField));\n    };\n\n    handleNextField = () => {\n        const { activeCardId, activeField, fieldsAllIds, dispatch } = this.props;\n        if (fieldsAllIds.length === 0 || activeCardId === null) return;\n\n        let nextField = fieldsAllIds[0];\n        if (activeField !== undefined) {\n            let idx = fieldsAllIds.indexOf(activeField.id);\n            if (idx !== -1 && idx !== fieldsAllIds.length - 1) nextField = fieldsAllIds[idx + 1];\n        }\n\n        dispatch(cardSetActiveCardAndField(activeCardId, (activeField && activeField.isOnBack) || false, nextField));\n    };\n\n    handleRaise = (event: React.MouseEvent) => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            if (event.ctrlKey) {\n                dispatch(cardSetRaiseActiveFieldToTop());\n            } else {\n                dispatch(cardSetRaiseActiveField());\n            }\n        }\n    };\n\n    handleLower = (event: React.MouseEvent) => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            if (event.ctrlKey) {\n                dispatch(cardSetLowerActiveFieldToBottom());\n            } else {\n                dispatch(cardSetLowerActiveField());\n            }\n        }\n    };\n\n    handleLockField = () => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            dispatch(cardSetLockActiveField());\n        }\n    };\n\n    handleUnlockField = () => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            dispatch(cardSetUnlockActiveField());\n        }\n    };\n\n    handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        const name = event.target.value.trim();\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeActiveFieldName(name));\n        }\n    };\n\n    handleWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        const width = parseFloat(event.target.value);\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeFieldSize(undefined, activeField.id, width, activeField.height, shortid.generate()));\n        }\n    };\n\n    handleHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        const height = parseFloat(event.target.value);\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeFieldSize(undefined, activeField.id, activeField.width, height, shortid.generate()));\n        }\n    };\n\n    handleXChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        const x = parseFloat(event.target.value);\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeFieldPosition(undefined, activeField.id, x, activeField.y, shortid.generate()));\n        }\n    };\n\n    handleYChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        const y = parseFloat(event.target.value);\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeFieldPosition(undefined, activeField.id, activeField.x, y, shortid.generate()));\n        }\n    };\n\n    handleAngleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        const angle = (parseFloat(event.target.value) * Math.PI) / 180;\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeFieldAngle(undefined, activeField.id, angle, shortid.generate()));\n        }\n    };\n\n    handleChangeUnclickable = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeUnclickableForActiveField(event.target.checked));\n        }\n    };\n\n    render() {\n        const { activeCardId, activeField, visible } = this.props;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'initial' : 'none' }}>\n                {activeCardId !== undefined && (\n                    <>\n                        <button onClick={this.handlePrevField} title=\"Previous field\">\n                            <i className=\"material-icons\">arrow_back</i>\n                        </button>\n                        <button onClick={this.handleNextField} title=\"Next field\">\n                            <i className=\"material-icons\">arrow_forward</i>\n                        </button>\n                    </>\n                )}\n\n                {activeField !== undefined && (\n                    <>\n                        <button onClick={this.handleRaise} title=\"Raise text (with Ctrl - raise to top)\">\n                            <i className=\"material-icons\">arrow_upward</i>\n                        </button>\n                        <button onClick={this.handleLower} title=\"Lower text (with Ctrl - lower to bottom)\">\n                            <i className=\"material-icons\">arrow_downward</i>\n                        </button>\n                    </>\n                )}\n\n                {activeField !== undefined && !activeField.locked && (\n                    <button\n                        onClick={this.handleLockField}\n                        title=\"Lock field. Locked field can't be dragged, rotated, resized and removed.\"\n                    >\n                        <i className=\"material-icons\">lock_open</i>\n                    </button>\n                )}\n\n                {activeField !== undefined && activeField.locked && (\n                    <button\n                        onClick={this.handleUnlockField}\n                        title=\"Unlock field. Unlocked field can be dragged, rotated, resized and removed.\"\n                    >\n                        <i className=\"material-icons\">lock</i>\n                    </button>\n                )}\n\n                {activeField !== undefined && (\n                    <div>\n                        <label>\n                            Unclickable field:{' '}\n                            <input\n                                type=\"checkbox\"\n                                onChange={this.handleChangeUnclickable}\n                                className=\"form-control\"\n                                checked={activeField.unclickable ? true : false}\n                            />\n                        </label>\n                    </div>\n                )}\n\n                {activeField !== undefined && (\n                    <div>\n                        <label>\n                            Field name:\n                            <input\n                                type=\"text\"\n                                value={activeField.name || ''}\n                                placeholder={activeField.id}\n                                onChange={this.handleNameChange}\n                                title=\"Change name of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            Width:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={activeField.width}\n                                placeholder=\"Width\"\n                                onChange={this.handleWidthChange}\n                                title=\"Change width of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            Height:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={activeField.height}\n                                placeholder=\"Height\"\n                                onChange={this.handleHeightChange}\n                                title=\"Change width of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            X:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={activeField.x}\n                                placeholder=\"Width\"\n                                onChange={this.handleXChange}\n                                title=\"Change x coordinate of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            Y:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={activeField.y}\n                                placeholder=\"Height\"\n                                onChange={this.handleYChange}\n                                title=\"Change y coordinate of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            Angle:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={(activeField.angle * 180) / Math.PI}\n                                placeholder=\"Angle\"\n                                onChange={this.handleAngleChange}\n                                title=\"Change rotation angle of field.\"\n                            />\n                        </label>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    const activeField =\n        state.cardset.present.activeCardId !== undefined && state.cardset.present.activeFieldId !== undefined\n            ? state.cardset.present.fields[state.cardset.present.activeCardId][state.cardset.present.activeFieldId]\n            : undefined;\n\n    return {\n        activeField,\n        activeCardId: state.cardset.present.activeCardId,\n        fields: state.cardset.present.fields,\n        fieldsAllIds: state.cardset.present.fieldsAllIds,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarMeasurements);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport { State } from '../reducers';\nimport {\n    cardSetChangeHeight,\n    cardSetChangeIsTwoSided,\n    cardSetChangeSnappingDistance,\n    cardSetChangeWidth,\n    cardSetSetZoom,\n} from '../actions';\nimport style from './SidebarSettings.module.css';\n\ninterface StateProps {\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    snappingDistance: number;\n    zoom: number;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\ninterface LocalState {\n    maintainAspectRatio: boolean;\n    resizeContent: boolean;\n}\n\nexport class SidebarSettings extends Component<Props, LocalState> {\n    state: LocalState = {\n        maintainAspectRatio: true,\n        resizeContent: false,\n    };\n\n    handleWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        const { maintainAspectRatio, resizeContent } = this.state;\n        dispatch(cardSetChangeWidth(parseFloat(event.target.value), maintainAspectRatio, resizeContent));\n    };\n\n    handleHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        const { maintainAspectRatio, resizeContent } = this.state;\n        dispatch(cardSetChangeHeight(parseFloat(event.target.value), maintainAspectRatio, resizeContent));\n    };\n\n    handleIsTwoSidedChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeIsTwoSided(event.target.checked));\n    };\n\n    handleZoom = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetSetZoom(parseFloat(event.target.value)));\n    };\n\n    handleSnappingDistance = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeSnappingDistance(parseFloat(event.target.value)));\n    };\n\n    render() {\n        const { width, height, isTwoSided, snappingDistance, visible, zoom } = this.props;\n        const { maintainAspectRatio, resizeContent } = this.state;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'initial' : 'none' }}>\n                <label htmlFor=\"card_width\">Card width (mm):</label>\n                <input\n                    id=\"card_width\"\n                    type=\"number\"\n                    min=\"0\"\n                    step=\"0.1\"\n                    onChange={this.handleWidthChange}\n                    className=\"form-control\"\n                    placeholder=\"width\"\n                    value={width}\n                />\n                <label htmlFor=\"card_height\">Card height (mm):</label>\n                <input\n                    id=\"card_height\"\n                    type=\"number\"\n                    min=\"0\"\n                    step=\"0.1\"\n                    onChange={this.handleHeightChange}\n                    className=\"form-control\"\n                    placeholder=\"height\"\n                    value={height}\n                />\n                <div>\n                    <label>\n                        Maintain aspect ratio:{' '}\n                        <input\n                            type=\"checkbox\"\n                            onChange={() => {\n                                this.setState({ maintainAspectRatio: !maintainAspectRatio });\n                            }}\n                            className=\"form-control\"\n                            checked={maintainAspectRatio}\n                        />\n                    </label>\n                </div>\n\n                <div>\n                    <label>\n                        Resize content:{' '}\n                        <input\n                            type=\"checkbox\"\n                            onChange={() => {\n                                this.setState({ resizeContent: !resizeContent });\n                            }}\n                            className=\"form-control\"\n                            checked={resizeContent}\n                        />\n                    </label>\n                </div>\n\n                <label>\n                    Cards have two sides:{' '}\n                    <input\n                        type=\"checkbox\"\n                        onChange={this.handleIsTwoSidedChange}\n                        className=\"form-control\"\n                        checked={isTwoSided}\n                    />\n                </label>\n                <div>\n                    <label htmlFor=\"zoom\">Zoom (if you want to see details or big picture)</label>\n                    <input\n                        id=\"zoom\"\n                        type=\"number\"\n                        min=\"0.1\"\n                        step=\"0.1\"\n                        onChange={this.handleZoom}\n                        className=\"form-control\"\n                        placeholder=\"zoom\"\n                        value={zoom}\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"zoom\">Snapping distance in mm. 0 to disable.</label>\n                    <input\n                        id=\"zoom\"\n                        type=\"number\"\n                        min=\"0\"\n                        step=\"0.1\"\n                        onChange={this.handleSnappingDistance}\n                        className=\"form-control\"\n                        placeholder=\"Snapping distance\"\n                        value={snappingDistance}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        width: state.cardset.present.width,\n        height: state.cardset.present.height,\n        isTwoSided: state.cardset.present.isTwoSided,\n        snappingDistance: state.cardset.present.snappingDistance,\n        zoom: state.cardset.present.zoom,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarSettings);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport Select, { components } from 'react-select';\nimport WebFont from 'webfontloader';\n\nimport { DEFAULT_LINE_HEIGHT } from '../constants';\nimport {\n    Dispatch,\n    cardSetChangeActiveTextFieldFontFamilyAndVariant,\n    cardSetChangeActiveTextFieldFontSize,\n    cardSetChangeActiveTextFieldFontVariant,\n    cardSetChangeActiveTextFieldLineHeight,\n} from '../actions';\nimport { State } from '../reducers';\nimport style from './FontSelector.module.css';\nimport webfonts from './webfonts.json';\nimport webfontsThumbs from './webfonts_thumbs.json';\nimport { OptionProps } from 'react-select/lib/components/Option';\n\ninterface WebFontsInfo {\n    [propName: string]: {\n        [propName: string]: string;\n    };\n}\n\ninterface FontOption {\n    value: string;\n    label: string;\n}\n\nconst FontOptionComponent = (props: OptionProps<FontOption>) => {\n    // @ts-ignore\n    let value = props.value;\n    return !props.isDisabled && value ? (\n        <components.Option {...props}>\n            <img src={`data:image/png;base64, ${(webfontsThumbs as Record<string, string>)[value]}`} alt={value} />\n        </components.Option>\n    ) : null;\n};\n\nconst options: FontOption[] = Object.keys(webfonts)\n    .sort()\n    .map(fi => ({ value: fi, label: fi }));\n\ninterface StateProps {\n    activeFont: string;\n    activeFontVariant: string;\n    activeFontSize: number;\n    activeLineHeight: number;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = StateProps & DispatchProps;\n\nclass FontSelector extends Component<Props> {\n    getFontStringForLoad = (family: string, variant: string) => {\n        let stringForLoad = family;\n        if (variant !== 'regular') {\n            stringForLoad += ':' + variant;\n        }\n        return stringForLoad;\n    };\n\n    handleChange = (selectedOption?: FontOption | FontOption[] | null) => {\n        if (!selectedOption) return;\n\n        const fontFamily = (selectedOption as FontOption).value;\n\n        let fontVariant = this.props.activeFontVariant;\n        const wf: WebFontsInfo = webfonts;\n        if (!(fontVariant in wf[fontFamily])) {\n            fontVariant = Object.keys(wf[fontFamily]).sort()[0];\n        }\n\n        WebFont.load({\n            google: {\n                families: [this.getFontStringForLoad(fontFamily, fontVariant)],\n            },\n            active: () => {\n                const { dispatch } = this.props;\n                dispatch(cardSetChangeActiveTextFieldFontFamilyAndVariant(fontFamily, fontVariant));\n            },\n        });\n    };\n\n    handleFontVariantChange = (selectedOption?: FontOption | FontOption[] | null) => {\n        if (!selectedOption) return;\n\n        const value = (selectedOption as FontOption).value;\n        WebFont.load({\n            google: {\n                families: [this.getFontStringForLoad(this.props.activeFont, value)],\n            },\n            active: () => {\n                const { dispatch } = this.props;\n                dispatch(cardSetChangeActiveTextFieldFontVariant(value));\n            },\n        });\n    };\n\n    handleFontSizeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeActiveTextFieldFontSize(parseFloat(event.target.value)));\n    };\n\n    handleLineHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeActiveTextFieldLineHeight(parseFloat(event.target.value)));\n    };\n\n    render() {\n        const selectedFontFamily = options.find(f => f.value === this.props.activeFont);\n\n        const fontVariantOptions: FontOption[] = Object.keys((webfonts as WebFontsInfo)[this.props.activeFont])\n            .sort()\n            .map(fv => ({ value: fv, label: fv }));\n\n        const selectedFontVariant = fontVariantOptions.find(f => f.value === this.props.activeFontVariant);\n\n        return (\n            <>\n                <input\n                    type=\"number\"\n                    value={this.props.activeFontSize}\n                    onChange={this.handleFontSizeChange}\n                    title=\"Font size\"\n                />\n                <Select\n                    className={style.fontFamily}\n                    value={selectedFontFamily}\n                    onChange={this.handleChange}\n                    options={options}\n                    components={{\n                        Option: FontOptionComponent,\n                    }}\n                />\n                <Select\n                    className={style.fontVariant}\n                    value={selectedFontVariant}\n                    onChange={this.handleFontVariantChange}\n                    options={fontVariantOptions}\n                />\n                <input\n                    type=\"number\"\n                    value={this.props.activeLineHeight}\n                    onChange={this.handleLineHeightChange}\n                    title=\"Line height\"\n                    step=\"0.01\"\n                />\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    let activeFont = state.cardset.present.textSettings.fontFamily;\n    let activeFontVariant = state.cardset.present.textSettings.fontVariant;\n    let activeFontSize = state.cardset.present.textSettings.fontSize;\n    let activeLineHeight = state.cardset.present.textSettings.lineHeight || DEFAULT_LINE_HEIGHT;\n\n    return {\n        activeFont,\n        activeFontVariant,\n        activeFontSize,\n        activeLineHeight,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, {}, State>(mapStateToProps)(FontSelector);\n","import { ColorResult } from 'react-color';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, SidebarOwnProps, FieldInfo } from '../types';\nimport { State } from '../reducers';\nimport {\n    cardSetAddTextField,\n    cardSetChangeActiveFieldName,\n    cardSetChangeActiveTextFieldAlign,\n    cardSetLockActiveField,\n    cardSetLowerActiveFieldToBottom,\n    cardSetRaiseActiveFieldToTop,\n    cardSetRemoveActiveField,\n    cardSetUnlockActiveField,\n    cardSetChangeActiveTextFieldColor,\n    cardSetRaiseActiveField,\n    cardSetLowerActiveField,\n} from '../actions';\nimport ColorButton from './ColorButton';\nimport FontSelector from './FontSelector';\nimport style from './SidebarText.module.css';\n\ninterface StateProps {\n    activeField?: FieldInfo;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarText extends Component<Props> {\n    handleAddTextClick = () => {\n        const { dispatch } = this.props;\n        dispatch(cardSetAddTextField());\n    };\n\n    handleSetTextAlignLeft = () => {\n        const selection = window.getSelection();\n        const range = selection.getRangeAt(0);\n        if (selection.rangeCount === 1 && range.collapsed) {\n            const { dispatch } = this.props;\n            dispatch(cardSetChangeActiveTextFieldAlign('left'));\n        } else {\n            document.execCommand('justifyleft');\n        }\n    };\n\n    handleSetTextAlignCenter = () => {\n        const selection = window.getSelection();\n        const range = selection.getRangeAt(0);\n        if (selection.rangeCount === 1 && range.collapsed) {\n            const { dispatch } = this.props;\n            dispatch(cardSetChangeActiveTextFieldAlign('center'));\n        } else {\n            document.execCommand('justifycenter');\n        }\n    };\n\n    handleSetTextAlignRight = () => {\n        const selection = window.getSelection();\n        const range = selection.getRangeAt(0);\n        if (selection.rangeCount === 1 && range.collapsed) {\n            const { dispatch } = this.props;\n            dispatch(cardSetChangeActiveTextFieldAlign('right'));\n        } else {\n            document.execCommand('justifyright');\n        }\n    };\n\n    handleSetTextBold = () => {\n        document.execCommand('bold');\n    };\n\n    handleSetTextItalic = () => {\n        document.execCommand('italic');\n    };\n\n    handleRemoveClick = () => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            dispatch(cardSetRemoveActiveField());\n        }\n    };\n\n    handleRaise = (event: React.MouseEvent) => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            if (event.ctrlKey) {\n                dispatch(cardSetRaiseActiveFieldToTop());\n            } else {\n                dispatch(cardSetRaiseActiveField());\n            }\n        }\n    };\n\n    handleLower = (event: React.MouseEvent) => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            if (event.ctrlKey) {\n                dispatch(cardSetLowerActiveFieldToBottom());\n            } else {\n                dispatch(cardSetLowerActiveField());\n            }\n        }\n    };\n\n    handleLockField = () => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            dispatch(cardSetLockActiveField());\n        }\n    };\n\n    handleUnlockField = () => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            dispatch(cardSetUnlockActiveField());\n        }\n    };\n\n    handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        const name = event.target.value.trim();\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeActiveFieldName(name));\n        }\n    };\n\n    handleColorChange = (color: ColorResult) => {\n        const selection = window.getSelection();\n        const range = selection.getRangeAt(0);\n        if (selection.rangeCount === 1 && range.collapsed) {\n            const { dispatch } = this.props;\n            dispatch(cardSetChangeActiveTextFieldColor(color.hex));\n        } else {\n            document.execCommand('forecolor', false, color.hex);\n        }\n    };\n\n    render() {\n        const { activeField, visible } = this.props;\n\n        let color = '#000000';\n        if (activeField && activeField.type === 'text' && activeField.color) {\n            color = activeField.color;\n        }\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'initial' : 'none' }}>\n                <button onClick={this.handleAddTextClick} title=\"Add text field\">\n                    <i className=\"material-icons\">text_fields</i>\n                </button>\n                {activeField !== undefined && (\n                    <>\n                        <button onClick={this.handleRaise} title=\"Raise text (with Ctrl - raise to top)\">\n                            <i className=\"material-icons\">arrow_upward</i>\n                        </button>\n                        <button onClick={this.handleLower} title=\"Lower text (with Ctrl - lower to bottom)\">\n                            <i className=\"material-icons\">arrow_downward</i>\n                        </button>\n                    </>\n                )}\n\n                {activeField !== undefined && !activeField.locked && (\n                    <button\n                        onClick={this.handleLockField}\n                        title=\"Lock text field. Locked field can't be dragged, rotated, resized and removed.\"\n                    >\n                        <i className=\"material-icons\">lock_open</i>\n                    </button>\n                )}\n\n                {activeField !== undefined && activeField.locked && (\n                    <button\n                        onClick={this.handleUnlockField}\n                        title=\"Unlock text field. Unlocked text field can be dragged, rotated, resized and removed.\"\n                    >\n                        <i className=\"material-icons\">lock</i>\n                    </button>\n                )}\n\n                <button\n                    className={activeField === undefined || activeField.locked ? style.disabled : ''}\n                    onClick={this.handleRemoveClick}\n                    title=\"Remove field\"\n                >\n                    <i className=\"material-icons\">remove</i>\n                </button>\n\n                {activeField !== undefined && (\n                    <input\n                        type=\"text\"\n                        value={activeField.name || ''}\n                        placeholder={activeField.id}\n                        onChange={this.handleNameChange}\n                        title=\"Change name of text field.\"\n                    />\n                )}\n\n                <div>\n                    <button onClick={this.handleSetTextAlignLeft} title=\"Align text left\">\n                        <i className=\"material-icons\">format_align_left</i>\n                    </button>\n                    <button onClick={this.handleSetTextAlignCenter} title=\"Align text center\">\n                        <i className=\"material-icons\">format_align_center</i>\n                    </button>\n                    <button onClick={this.handleSetTextAlignRight} title=\"Align text right\">\n                        <i className=\"material-icons\">format_align_right</i>\n                    </button>\n                    <button onClick={this.handleSetTextBold} title=\"Makes selected text bold\">\n                        <i className=\"material-icons\">format_bold</i>\n                    </button>\n                    <button onClick={this.handleSetTextItalic} title=\"Makes selected text italic\">\n                        <i className=\"material-icons\">format_italic</i>\n                    </button>\n                    <ColorButton color={color} onChange={this.handleColorChange} />\n                    <FontSelector />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    const activeField =\n        state.cardset.present.activeCardId !== undefined && state.cardset.present.activeFieldId !== undefined\n            ? state.cardset.present.fields[state.cardset.present.activeCardId][state.cardset.present.activeFieldId]\n            : undefined;\n\n    return {\n        activeField,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarText);\n","import 'filepond/dist/filepond.min.css';\n\nimport './SidebarUpload.css';\n\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport { connect } from 'react-redux';\nimport FilePondPluginFileValidateSize from 'filepond-plugin-file-validate-size';\nimport FilePondPluginFileValidateType from 'filepond-plugin-file-validate-type';\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport {\n    FPAbortCallback,\n    FPErrorCallback,\n    FPLoadCallback,\n    FPProgressCallback,\n    FPRevertLoadCallback,\n    cardSetDeleteImage,\n    cardSetUploadImage,\n} from '../actions';\nimport { State } from '../reducers';\nimport style from './SidebarUpload.module.css';\n\nregisterPlugin(FilePondPluginFileValidateSize);\nregisterPlugin(FilePondPluginFileValidateType);\n\ninterface StateProps {\n    activeGame: string | null;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarUpload extends Component<Props> {\n    handleProcess = (\n        fieldName: string,\n        file: File,\n        metadata: { [propName: string]: string },\n        load: FPLoadCallback,\n        error: FPErrorCallback,\n        progress: FPProgressCallback,\n        abort: FPAbortCallback,\n    ) => {\n        const { dispatch, activeGame } = this.props;\n\n        if (activeGame === null) {\n            abort();\n            return;\n        }\n\n        let source = axios.CancelToken.source();\n\n        dispatch(cardSetUploadImage(activeGame, file, load, error, progress, abort, source.token));\n\n        return { abort: source.cancel };\n    };\n\n    handleRevert = (uniqueFileId: string, load: FPRevertLoadCallback, error: FPErrorCallback) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetDeleteImage(uniqueFileId, load, error));\n    };\n\n    render() {\n        const { visible } = this.props;\n\n        return (\n            <div\n                className={style.view}\n                style={{ display: 'grid', visibility: visible ? 'visible' : 'hidden', height: visible ? 'auto' : 0 }}\n            >\n                <div>\n                    Uploaded imaged are kept for limited time. If they are deleted then simply re-upload them again.\n                </div>\n                <FilePond\n                    allowMultiple={true}\n                    server={{\n                        process: this.handleProcess,\n                        revert: this.handleRevert,\n                    }}\n                    acceptedFileTypes={[\n                        'image/png',\n                        'image/jpeg',\n                        'image/svg+xml',\n                        'image/webp',\n                        'image/tiff',\n                        'image/gif',\n                    ]}\n                    allowFileSizeValidation={true}\n                    maxFileSize=\"500KB\"\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        activeGame: state.games.active,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarUpload);\n","import { connect, ConnectedComponentClass } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport { SidebarState, cardSetSetSidebarState } from '../actions';\nimport { State } from '../reducers';\nimport SidebarDetails from './SidebarDetails';\nimport SidebarGeneratePng from './SidebarGeneratePng';\nimport SidebarGeneratePdf from './SidebarGeneratePdf';\nimport SidebarImage from './SidebarImage';\nimport SidebarImportExport from './SidebarImportExport';\nimport SidebarMeasurements from './SidebarMeasurements';\nimport SidebarSettings from './SidebarSettings';\nimport SidebarText from './SidebarText';\nimport SidebarUpload from './SidebarUpload';\nimport style from './Sidebar.module.css';\n\ninterface StateProps {\n    activeSidebar: SidebarState | null;\n}\n\ntype Props = StateProps & DispatchProps;\n\ninterface SidebarInfo {\n    state: SidebarState;\n    title: string;\n    icon: string;\n    component: ConnectedComponentClass<typeof Component, SidebarOwnProps>;\n}\n\nconst SIDEBARS: SidebarInfo[] = [\n    {\n        state: SidebarState.Settings,\n        title: 'Settings',\n        icon: 'settings',\n        component: SidebarSettings,\n    },\n    {\n        state: SidebarState.Details,\n        title: 'Details',\n        icon: 'details',\n        component: SidebarDetails,\n    },\n    {\n        state: SidebarState.Measurements,\n        title: 'Measurements',\n        icon: 'format_shapes',\n        component: SidebarMeasurements,\n    },\n    {\n        state: SidebarState.Image,\n        title: 'Images',\n        icon: 'photo',\n        component: SidebarImage,\n    },\n    {\n        state: SidebarState.Text,\n        title: 'Texts',\n        icon: 'text_fields',\n        component: SidebarText,\n    },\n    {\n        state: SidebarState.Upload,\n        title: 'Upload',\n        icon: 'cloud_upload',\n        component: SidebarUpload,\n    },\n    {\n        state: SidebarState.ImportExport,\n        title: 'Import/Export',\n        icon: 'import_export',\n        component: SidebarImportExport,\n    },\n    {\n        state: SidebarState.Png,\n        title: 'Generate as PNG',\n        icon: 'photo_library',\n        component: SidebarGeneratePng,\n    },\n    {\n        state: SidebarState.Pdf,\n        title: 'Generate as PDF',\n        icon: 'picture_as_pdf',\n        component: SidebarGeneratePdf,\n    },\n];\n\nexport class Sidebar extends Component<Props> {\n    handleSidebar = (state: SidebarState) => {\n        const { activeSidebar, dispatch } = this.props;\n        if (activeSidebar === state) {\n            dispatch(cardSetSetSidebarState(null));\n        } else {\n            dispatch(cardSetSetSidebarState(state));\n        }\n    };\n\n    render() {\n        const { activeSidebar } = this.props;\n        return (\n            <div className={style.sidebar}>\n                <div className={style.controls}>\n                    {SIDEBARS.map(sb => (\n                        <i\n                            key={sb.state}\n                            title={sb.title}\n                            className={`material-icons ${activeSidebar === sb.state ? style.active : ''}`}\n                            onClick={() => this.handleSidebar(sb.state)}\n                        >\n                            {sb.icon}\n                        </i>\n                    ))}\n                </div>\n                <div className={`${style.view} ${activeSidebar === null ? style.hidden : ''}`}>\n                    {SIDEBARS.map(sb => (\n                        <sb.component key={sb.state} visible={activeSidebar === sb.state} />\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        activeSidebar: state.cardset.present.activeSidebar,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, {}, State>(mapStateToProps)(Sidebar);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport shortid from 'shortid';\n\nimport { ACTIVITY_SELECTING, State } from '../reducers';\nimport { BLEED_WIDTH } from '../constants';\nimport { CardSetType, CardType, CardsCollection } from '../types';\nimport {\n    Dispatch,\n    cardSetActiveCardAndField,\n    cardSetCreateCard,\n    cardSetRenameRequest,\n    cardSetUndo,\n    cardSetRedo,\n} from '../actions';\nimport Card from './Card';\nimport EditableTitle from './EditableTitle';\nimport KawaiiMessage, { Character } from './KawaiiMessage';\nimport Loader from './Loader';\nimport Sidebar from './Sidebar';\nimport style from './CardSet.module.css';\n\ninterface StateProps {\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    isAuthenticated?: boolean;\n    cardsAllIds: string[];\n    cardsById: CardsCollection;\n    activity: number;\n    zoom: number;\n    activeCardSet: CardSetType | null;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = StateProps & DispatchProps;\n\ninterface LocalState {\n    pageWidth: number;\n    pageHeight: number;\n    topBottomMargin: number;\n    leftRightMargin: number;\n}\n\nexport class CardSet extends Component<Props, LocalState> {\n    state = {\n        pageWidth: 210,\n        pageHeight: 297,\n        topBottomMargin: 15,\n        leftRightMargin: 9,\n    };\n\n    componentDidMount() {\n        window.addEventListener('keydown', this.keyDown);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('keydown', this.keyDown);\n    }\n\n    keyDown = (event: KeyboardEvent) => {\n        const { dispatch } = this.props;\n\n        switch (event.key) {\n            case 'z':\n            case 'Z': {\n                if (event.ctrlKey && event.shiftKey) {\n                    dispatch(cardSetRedo());\n                } else if (event.ctrlKey) {\n                    dispatch(cardSetUndo());\n                }\n                break;\n            }\n            case 'y':\n            case 'Y': {\n                if (event.ctrlKey) {\n                    dispatch(cardSetRedo());\n                }\n                break;\n            }\n            // no default\n        }\n    };\n\n    handleCreateCardClick = () => {\n        const { dispatch } = this.props;\n\n        const newCard: CardType = { id: shortid.generate(), count: 1 };\n\n        dispatch(cardSetCreateCard(newCard));\n    };\n\n    handleClickOutsideOfCard = () => {\n        const { dispatch } = this.props;\n        dispatch(cardSetActiveCardAndField(undefined, false, undefined));\n    };\n\n    handleCardSetNameChange = (newName: string) => {\n        const { dispatch, activeCardSet } = this.props;\n        if (activeCardSet !== null) {\n            dispatch(cardSetRenameRequest(activeCardSet.id, newName));\n        }\n    };\n\n    render() {\n        const {\n            isAuthenticated,\n            cardsAllIds,\n            cardsById,\n            width,\n            height,\n            isTwoSided,\n            activity,\n            zoom,\n            activeCardSet,\n        } = this.props;\n\n        const widthWithBleeds = width + BLEED_WIDTH * 2;\n        const heightWithBleeds = height + BLEED_WIDTH * 2;\n\n        return (\n            isAuthenticated && (\n                <div>\n                    <KawaiiMessage character={Character.Ghost}>\n                        <p>Here you can design your cards.</p>\n                    </KawaiiMessage>\n\n                    {activeCardSet !== null && (\n                        <EditableTitle title={activeCardSet.name} onChange={this.handleCardSetNameChange} />\n                    )}\n\n                    <div className={style.cardsetview}>\n                        <div className={style.sidebar}>\n                            <Sidebar />\n                        </div>\n                        <div onMouseDown={this.handleClickOutsideOfCard} onTouchStart={this.handleClickOutsideOfCard}>\n                            {(activity & ACTIVITY_SELECTING) === ACTIVITY_SELECTING && <Loader />}\n                            <div className={style.cardset}>\n                                <ul\n                                    style={{\n                                        gridTemplateColumns: `repeat(auto-fill, minmax(${widthWithBleeds *\n                                            zoom}mm, 1fr))`,\n                                    }}\n                                >\n                                    {cardsAllIds &&\n                                        cardsAllIds.map(cardId => [\n                                            <li key={cardId}>\n                                                <Card card={cardsById[cardId]} isBack={false} />\n                                            </li>,\n                                            isTwoSided && (\n                                                <li key={`${cardId}back`}>\n                                                    <Card card={cardsById[cardId]} isBack={true} />\n                                                </li>\n                                            ),\n                                        ])}\n                                    <li key=\"newCard\">\n                                        <div\n                                            id=\"newCard\"\n                                            className={style.createCard}\n                                            style={{\n                                                width: `${widthWithBleeds * zoom}mm`,\n                                                height: `${heightWithBleeds * zoom}mm`,\n                                                position: 'relative',\n                                                overflow: 'hidden',\n                                            }}\n                                            onClick={this.handleCreateCardClick}\n                                        >\n                                            <div>\n                                                <i className=\"material-icons\">add</i>\n                                                <div>Add Card</div>\n                                            </div>\n                                        </div>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        activity: state.cardset.present.activity,\n        width: state.cardset.present.width,\n        height: state.cardset.present.height,\n        isTwoSided: state.cardset.present.isTwoSided,\n        zoom: state.cardset.present.zoom,\n        isAuthenticated: state.auth.isAuthenticated,\n        cardsAllIds: state.cardset.present.cardsAllIds,\n        cardsById: state.cardset.present.cardsById,\n        activeCardSet:\n            state.cardsets.active && state.cardsets.byId[state.cardsets.active]\n                ? state.cardsets.byId[state.cardsets.active]\n                : null,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, {}, State>(mapStateToProps)(CardSet);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport { Dispatch, cardSetSelectRequest } from './actions';\nimport { State } from './reducers';\nimport CardSet from './components/CardSet';\n\ninterface Props {\n    dispatch: Dispatch;\n    match: { params: { id: string } };\n    isAuthenticated?: boolean;\n}\n\nexport class CardSetPage extends Component<Props> {\n    componentDidMount() {\n        const { dispatch, match } = this.props;\n        dispatch(cardSetSelectRequest(match.params.id));\n    }\n\n    render() {\n        const { isAuthenticated } = this.props;\n        if (isAuthenticated) {\n            return <CardSet />;\n        } else if (isAuthenticated === false) {\n            return <Redirect to=\"/login\" />;\n        } else {\n            return null;\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => ({ isAuthenticated: state.auth.isAuthenticated });\n\nexport default connect(mapStateToProps)(CardSetPage);\n","import React, { Component } from 'react';\n\nexport default class ChangelogPage extends Component {\n    render() {\n        return (\n            <div>\n                <p>Here you can find list of future plans and what was implemented recently.</p>\n                <h2>2019-06-23</h2>\n                <ul>\n                    <li>Security improved.</li>\n                    <li>Help page added.</li>\n                    <li>Option to rotate cards added.</li>\n                    <li>Possibility to get a list of game's attributions added.</li>\n                    <li>Undo/Redo exposed in UI (while I suggest using Ctrl+Z and Ctrl+Shift+Z/Ctrl+Y instead).</li>\n                </ul>\n                <h2>2019-06-22</h2>\n                <ul>\n                    <li>TIFF, WEBP and GIF support added.</li>\n                    <li>No need to keep upload sidebar open to upload images.</li>\n                </ul>\n                <h2>2019-06-20</h2>\n                <ul>\n                    <li>Bug fix release: PDF generation, import/export fixes.</li>\n                </ul>\n                <h2>2019-06-16</h2>\n                <ul>\n                    <li>Bug fix release.</li>\n                </ul>\n                <h2>2019-06-08</h2>\n                <ul>\n                    <li>\"Apply to all cards\" work on pan and zoom as well.</li>\n                    <li>UX on mobile devices (e.g. phones) improved.</li>\n                    <li>Other minor fixes.</li>\n                </ul>\n                <h2>2019-06-04</h2>\n                <ul>\n                    <li>Possibility to zoom in and pan imaged added.</li>\n                    <li>Undo/Redo using Ctrl+Z and Ctrl+Y (or Ctrl+Shift+Z).</li>\n                    <li>More small improvements and bug fixes.</li>\n                </ul>\n                <h2>2019-05-26</h2>\n                <ul>\n                    <li>Text rendering fixes.</li>\n                    <li>Card Sets and Games list are sorted alphabetically now.</li>\n                    <li>Image handling improvements.</li>\n                </ul>\n                <h2>2019-05-18</h2>\n                <ul>\n                    <li>PDF and PNG generation improvements.</li>\n                </ul>\n                <h2>2019-05-17</h2>\n                <ul>\n                    <li>\n                        PNG generation for card set or the whole game. This will benefit if you want to publish game via{' '}\n                        <a href=\"https://www.thegamecrafter.com/\">The Game Crafter</a>,{' '}\n                        <a href=\"makeplayingcards.com\">Make Playing Cards</a> or any other place.\n                    </li>\n                </ul>\n                <h2>2019-04-13</h2>\n                <ul>\n                    <li>Option to generate cutting marks on front side only.</li>\n                    <li>Guillotine cuttings marks on card edges.</li>\n                    <li>\n                        Field move limitation is removed because if drag field outside of view you can return it using\n                        custom positions and size controls.\n                    </li>\n                    <li>Drag and drop improvement.</li>\n                </ul>\n                <h2>2019-04-07</h2>\n                <ul>\n                    <li>Snapping implemented for move, rotation and resize operations.</li>\n                    <li>Image search changes and improvements.</li>\n                    <li>\n                        Drag&Drop support for images. Images can be dropped to text field as well but it is assumed that\n                        dropped images are square when generating PDF.\n                    </li>\n                    <li>Bold and Italic support in text added.</li>\n                    <li>Other minor fixes.</li>\n                </ul>\n                <h2>2019-03-22</h2>\n                <ul>\n                    <li>Two-sided cards.</li>\n                    <li>PDF generation for all the game.</li>\n                    <li>More PDF generation options added</li>\n                    <li>Change color of images (for SVG images only, e.g. try using with \"forms\" images).</li>\n                    <li>Game rename and delete</li>\n                    <li>Card Set rename and delete</li>\n                    <li>Text: line height support</li>\n                    <li>UI/UX improvements</li>\n                </ul>\n                <h2>2019-03-03</h2>\n                <ul>\n                    <li>Data import/export in JSON and CSV formats.</li>\n                    <li>\n                        Named fields. If multiple fields have the same name then by editing one you change value in all\n                        of them. As well named fields look better in data export/import.\n                    </li>\n                </ul>\n\n                <h2>2019-03-02</h2>\n                <ul>\n                    <li>You can upload your own images now. Images are limited.</li>\n                    <li>\n                        Image order support added. E.g.: now you can upload background image and lower it to the bottom.\n                    </li>\n                    <li>Progress indicators and user messages improvements.</li>\n                </ul>\n\n                <h2>2019-02-24</h2>\n                <ul>\n                    <li>Sidebar created for lighter, cleaner and faster UI.</li>\n                    <li>Zoom added to card set for more flexibility while viewing or editing.</li>\n                </ul>\n                <h2>2019-02-23</h2>\n                <ul>\n                    <li>Text rendering changed and should be working properly now.</li>\n                    <li>Crash with new card set fixed.</li>\n                    <li>Minor UI improvements.</li>\n                </ul>\n                <h2>2019-02-17</h2>\n                <p>Initial public version.</p>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\nimport { reportError } from './utils';\n\nwindow.addEventListener('error', function(evt: ErrorEvent) {\n    let error = evt.error;\n    reportError(error);\n});\n\nwindow.addEventListener('unhandledrejection', function (event: PromiseRejectionEvent) {\n    reportError(new Error(event.reason));\n});\n\ninterface Props {\n    children: React.ReactNode;\n}\n\ninterface State {\n    hasError: boolean;\n}\n\nexport default class ErrorBoundary extends Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    componentDidCatch(error: Error | null) {\n        this.setState({ hasError: true });\n        if (error !== null) {\n            reportError(error);\n        }\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return (\n                <KawaiiMessage character={Character.Browser} mood=\"ko\">\n                    Something unexpected has happened. Error report is sent to me by e-mail and I will review it as soon\n                    as possible. Still feel free to contact me by e-mail{' '}\n                    <a href=\"mailto:dalius@ffff.lt\">dalius@ffff.lt</a>.\n                </KawaiiMessage>\n            );\n        }\n        return this.props.children;\n    }\n}\n","import React, { Component } from 'react';\nimport style from './ConfirmedDelete.module.css';\n\ninterface Props {\n    question: string;\n    onDelete: () => void;\n}\n\nexport default class ConfirmedDelete extends Component<Props> {\n    state = {\n        deleteClicked: false,\n    };\n\n    handleRemove = () => {\n        this.setState({ deleteClicked: !this.state.deleteClicked });\n    };\n\n    handleYes = () => {\n        this.setState({ deleteClicked: false });\n        this.props.onDelete();\n    };\n\n    handleNo = () => {\n        this.setState({ deleteClicked: false });\n    };\n\n    render() {\n        const { deleteClicked } = this.state;\n        const { question } = this.props;\n\n        return (\n            <>\n                <i title=\"Remove\" className={`material-icons ${style.button}`} onClick={this.handleRemove}>\n                    remove_circle_outline\n                </i>{' '}\n                {deleteClicked && (\n                    <>\n                        {question}{' '}\n                        <span className={style.answer} onClick={this.handleYes}>\n                            Yes\n                        </span>{' '}\n                        /{' '}\n                        <span className={style.answer} onClick={this.handleNo}>\n                            No\n                        </span>\n                    </>\n                )}\n            </>\n        );\n    }\n}\n","import { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { CardSetsCollection, GameType, IdsArray } from '../types';\nimport {\n    Dispatch,\n    cardSetCreateRequest,\n    cardSetDeleteRequest,\n    gameRenameRequest,\n    messageDisplay,\n    gameCreatePngRequest,\n    gameGetAttributionsRequest,\n} from '../actions';\nimport { State, ACTIVITY_CREATING_PNG } from '../reducers';\nimport ConfirmedDelete from './ConfirmedDelete';\nimport EditableTitle from './EditableTitle';\nimport KawaiiMessage, { Character } from './KawaiiMessage';\nimport PDFGenerator from './PDFGenerator';\nimport style from './CardSets.module.css';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated?: boolean;\n    activeGame: GameType | null;\n    allIds: IdsArray;\n    byId: CardSetsCollection;\n    isCreatingPng: boolean;\n    attributions: string[];\n}\n\ninterface LocalState {\n    cardSetName: string;\n    width: number;\n    height: number;\n    dpi: number;\n}\n\nexport class CardSets extends Component<Props, LocalState> {\n    state: LocalState = {\n        cardSetName: '',\n        width: 63.5,\n        height: 88.9,\n        dpi: 300,\n    };\n\n    handleGameNameChange = (newName: string) => {\n        const { dispatch, activeGame } = this.props;\n        if (activeGame !== null) {\n            dispatch(gameRenameRequest(activeGame.id, newName));\n        }\n    };\n\n    handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ cardSetName: event.target.value });\n    };\n\n    handleWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ width: parseFloat(event.target.value) });\n    };\n\n    handleHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ height: parseFloat(event.target.value) });\n    };\n\n    handleCreateCardSetClick = () => {\n        const { dispatch, activeGame } = this.props;\n\n        if (activeGame === null) {\n            return;\n        }\n\n        const cardSetName = this.state.cardSetName.trim();\n\n        if (cardSetName) {\n            dispatch(cardSetCreateRequest(cardSetName, this.state.width, this.state.height, activeGame.id));\n        } else {\n            dispatch(messageDisplay('error', 'Card Set name should be non empty.'));\n        }\n    };\n\n    handleCardSetDelete = (cardSetId: string) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetDeleteRequest(cardSetId));\n    };\n\n    handleDpiChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ dpi: parseInt(event.target.value) });\n    };\n\n    handleGenerate = () => {\n        const { dispatch, activeGame } = this.props;\n        const { dpi } = this.state;\n\n        if (activeGame !== null) {\n            dispatch(gameCreatePngRequest(dpi, 'games', activeGame.id));\n        }\n    };\n\n    handleGetAttributions = () => {\n        const { dispatch, activeGame } = this.props;\n\n        if (activeGame !== null) {\n            dispatch(gameGetAttributionsRequest());\n        }\n    };\n\n    render() {\n        const { isAuthenticated, activeGame, allIds, byId, isCreatingPng, attributions } = this.props;\n        const { dpi } = this.state;\n\n        let cardsets = allIds.map(cardsetId => byId[cardsetId]);\n        cardsets.sort((a, b) => (a.name < b.name ? -1 : 1));\n\n        const cardsetItems = cardsets.map(cardset => (\n            <li key={cardset.id}>\n                <Link to={`/cardset/${cardset.id}`}>{cardset.name}</Link>{' '}\n                <ConfirmedDelete\n                    question=\"Do you really want to delete this card set?\"\n                    onDelete={() => this.handleCardSetDelete(cardset.id)}\n                />\n            </li>\n        ));\n\n        return (\n            isAuthenticated &&\n            activeGame !== null && (\n                <div className={style.cardsets}>\n                    <KawaiiMessage character={Character.Ghost}>\n                        Each game is made from card sets. Card set is collection of cards that share the same properties\n                        but have different text and images.\n                    </KawaiiMessage>\n\n                    <EditableTitle title={activeGame.name} onChange={this.handleGameNameChange} />\n\n                    <ul>{cardsetItems}</ul>\n\n                    <div className=\"form\">\n                        <label htmlFor=\"cardset_name\">Card Set name:</label>\n                        <input\n                            id=\"cardset_name\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            className=\"form-control\"\n                            placeholder=\"Card Set name\"\n                        />\n                        <label htmlFor=\"card_width\">Card width:</label>\n                        <input\n                            id=\"card_width\"\n                            type=\"number\"\n                            min=\"0\"\n                            step=\"0.1\"\n                            onChange={this.handleWidthChange}\n                            className=\"form-control\"\n                            placeholder=\"Card width\"\n                            value={this.state.width}\n                        />\n                        <label htmlFor=\"card_height\">Card height:</label>\n                        <input\n                            id=\"card_height\"\n                            type=\"number\"\n                            min=\"0\"\n                            step=\"0.1\"\n                            onChange={this.handleHeightChange}\n                            className=\"form-control\"\n                            placeholder=\"Card height\"\n                            value={this.state.height}\n                        />\n                        <button onClick={this.handleCreateCardSetClick}>Create Card Set</button>\n                    </div>\n\n                    <KawaiiMessage character={Character.Ghost} mood=\"excited\">\n                        Hint: Poker card size 63.5mm x 88.9mm. Bridge card size 57.15mm x 88.9mm. But you can have cards\n                        of any size.\n                    </KawaiiMessage>\n\n                    <PDFGenerator type=\"games\" id={activeGame.id} withHelp={true} />\n\n                    <div className=\"form\">\n                        Or you can generate PNG files for all the game:\n                        <label htmlFor=\"dpi\">DPI:</label>\n                        <input\n                            id=\"dpi\"\n                            type=\"number\"\n                            min=\"1\"\n                            step=\"1\"\n                            onChange={this.handleDpiChange}\n                            className=\"form-control\"\n                            placeholder=\"DPI\"\n                            value={dpi}\n                        />\n                        <button disabled={isCreatingPng} onClick={this.handleGenerate}>\n                            Generate PNG files\n                        </button>\n                    </div>\n\n                    <div className=\"form\">\n                        Get attributions for images you have used. You don't need to do this if you have used your own\n                        images/art.\n                        <button onClick={this.handleGetAttributions}>Get attributions</button>\n                        {attributions && attributions.length > 0 && (\n                            <>\n                                Give attributions to:\n                                <ul>\n                                    {attributions.map(attribution => (\n                                        <li key={attribution}>{attribution}</li>\n                                    ))}\n                                </ul>\n                            </>\n                        )}\n                    </div>\n                </div>\n            )\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        activeGame:\n            state.games.active && state.games.byId[state.games.active] ? state.games.byId[state.games.active] : null,\n        allIds: state.cardsets.allIds,\n        byId: state.cardsets.byId,\n        isCreatingPng: (state.games.activity & ACTIVITY_CREATING_PNG) === ACTIVITY_CREATING_PNG,\n        attributions: state.games.attributions,\n    };\n};\n\nexport default connect(mapStateToProps)(CardSets);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport { Dispatch, gameSelectRequest } from './actions';\nimport { State } from './reducers';\nimport CardSets from './components/CardSets';\n\ninterface Props {\n    dispatch: Dispatch;\n    match: { params: { id: string } };\n    isAuthenticated?: boolean;\n}\n\nexport class GamePage extends Component<Props> {\n    componentDidMount() {\n        const { dispatch, match } = this.props;\n        dispatch(gameSelectRequest(match.params.id, true));\n    }\n\n    render() {\n        const { isAuthenticated } = this.props;\n        if (isAuthenticated) {\n            return <CardSets />;\n        } else if (isAuthenticated === false) {\n            return <Redirect to=\"/login\" />;\n        } else {\n            return null;\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => ({ isAuthenticated: state.auth.isAuthenticated });\n\nexport default connect(mapStateToProps)(GamePage);\n","import React, { Component } from 'react';\n\nexport default class AboutPage extends Component {\n    render() {\n        return (\n            <div>\n                <h2>Help</h2>\n                <p>You can learn how to use Card-a-mon from tutorials:</p>\n                <ul>\n                    <li>\n                        <a href=\"https://blog.ffff.lt/posts/cardamon-tutorial-01/\">Creating first game prototype</a>\n                    </li>\n                    <li>\n                        <a href=\"https://blog.ffff.lt/posts/cardamon-tutorial-02/\">Uploading your own images</a>\n                    </li>\n                    <li>\n                        <a href=\"https://blog.ffff.lt/posts/cardamon-tutorial-03/\">Import and export</a>\n                    </li>\n                    <li>\n                        <a href=\"https://blog.ffff.lt/posts/cardamon-tutorial-04/\">PDF generation options</a>\n                    </li>\n                </ul>\n                <p>\n                    If tutorials do not answer your question then feel free to contact me by e-mail{' '}\n                    <a href=\"mailto:dalius@ffff.lt\">dalius@ffff.lt</a>, on{' '}\n                    <a href=\"https://twitter.com/DaliusD_\">twitter</a> or{' '}\n                    <a href=\"https://www.reddit.com/user/daliusd_/\">reddit</a>.\n                </p>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\ninterface Props {\n    onLogin: (creds: { username: string; password: string }) => void;\n    onLoginFailure: (message: string) => void;\n}\n\ninterface LocalState {\n    username: string;\n    password: string;\n}\n\nexport default class Login extends Component<Props, LocalState> {\n    state = {\n        username: '',\n        password: '',\n    };\n\n    handleUsernameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ username: event.target.value });\n    };\n\n    handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ password: event.target.value });\n    };\n\n    handleSubmit = (event: React.FormEvent) => {\n        const username = this.state.username.trim();\n        const password = this.state.password.trim();\n        if (username && password) {\n            const creds = { username, password };\n            this.props.onLogin(creds);\n        } else {\n            this.props.onLoginFailure('Missing username and/or password.');\n        }\n        event.preventDefault();\n    };\n\n    render() {\n        return (\n            <div>\n                <form className=\"form\" onSubmit={this.handleSubmit}>\n                    <input\n                        type=\"text\"\n                        onChange={this.handleUsernameChange}\n                        className=\"form-control\"\n                        placeholder=\"Username\"\n                    />\n                    <input\n                        type=\"password\"\n                        onChange={this.handlePasswordChange}\n                        className=\"form-control\"\n                        placeholder=\"Password\"\n                    />\n                    <input type=\"submit\" value=\"Login\" />\n                </form>\n            </div>\n        );\n    }\n}\n","import { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, loginRequest, messageDisplay } from './actions';\nimport { State } from './reducers';\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\nimport Login from './components/Login';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated?: boolean;\n}\n\nexport class LoginPage extends Component<Props> {\n    render() {\n        const { dispatch, isAuthenticated } = this.props;\n\n        return (\n            <div className=\"App\">\n                {!isAuthenticated && (\n                    <>\n                        <KawaiiMessage character={Character.Ghost}>\n                            Please enter your credentials to login. If you don't have account yet then you can create\n                            one here: <a href=\"/signup\">Sign-up</a>.\n                        </KawaiiMessage>\n\n                        <Login\n                            onLogin={creds => dispatch(loginRequest(creds))}\n                            onLoginFailure={msg => dispatch(messageDisplay('error', msg))}\n                        />\n                    </>\n                )}\n                {isAuthenticated && <Redirect to=\"/\" />}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => ({ isAuthenticated: state.auth.isAuthenticated });\n\nexport default connect(mapStateToProps)(LoginPage);\n","import { Link } from 'react-router-dom';\nimport React, { Component } from 'react';\nimport style from './FeatureList.module.css';\nimport screenshot from './screenshot.png';\n\nexport default class FeatureList extends Component {\n    render() {\n        return (\n            <div className={style.features}>\n                <div>\n                    <img src={screenshot} alt=\"screenshot\" />\n                </div>\n                Card-a-mon has a lot of required functionality to create a card game from prototype to final product:\n                <ul>\n                    <li>\n                        <strong>Multiple card sets</strong> per game. Each with its own card size and other properties.\n                    </li>\n                    <li>\n                        <strong>Works on modern browsers</strong> both desktop and mobile.\n                    </li>\n                    <li>\n                        <strong>WYSIWYG</strong> editing of cards.\n                    </li>\n                    <li>\n                        <strong>Full images control</strong> - resize, rotation, zoom and panning. Use images from\n                        built-in collection of 8000+ images or upload your own.\n                    </li>\n                    <li>\n                        <strong>Powerful text editing</strong> - hundreds of fonts, font size, alignment, variants, line\n                        height, rotation and color control, possibility to embed images into text.\n                    </li>\n                    <li>\n                        <strong>Data export/import</strong> to/from JSON and CSV formats.\n                    </li>\n                    <li>\n                        <strong>PDF generation</strong> of full game (all card sets) with cuttings marks for print and\n                        play.\n                    </li>\n                    <li>\n                        <strong>PNG generation</strong> for printing in services like The Game Crafter, Make Playings\n                        Cards and others.\n                    </li>\n                </ul>\n                <p>\n                    Check out <Link to=\"/help\">Help</Link> for more details.\n                </p>\n            </div>\n        );\n    }\n}\n","import { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, gameCreateRequest, gameDeleteRequest, messageDisplay } from '../actions';\nimport { GamesCollection, IdsArray } from '../types';\nimport { State } from '../reducers';\nimport ConfirmedDelete from './ConfirmedDelete';\nimport KawaiiMessage, { Character } from './KawaiiMessage';\nimport FeatureList from './FeatureList';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated?: boolean;\n    allIds: IdsArray;\n    byId: GamesCollection;\n}\n\ninterface LocalState {\n    gameName: string;\n}\n\nexport class Games extends Component<Props, LocalState> {\n    state: LocalState = {\n        gameName: '',\n    };\n\n    handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ gameName: event.target.value });\n    };\n\n    handleCreateGameClick = () => {\n        const { dispatch } = this.props;\n\n        const gamename = this.state.gameName.trim();\n        if (gamename) {\n            dispatch(gameCreateRequest(gamename));\n        } else {\n            dispatch(messageDisplay('error', 'Game name should be non empty.'));\n        }\n    };\n\n    handleGameDelete = (gameId: string) => {\n        const { dispatch } = this.props;\n        dispatch(gameDeleteRequest(gameId));\n    };\n\n    render() {\n        const { isAuthenticated, allIds, byId } = this.props;\n\n        const games = allIds.map(gameId => byId[gameId]);\n        games.sort((a, b) => (a.name < b.name ? -1 : 1));\n\n        const gameItems = games.map(game => (\n            <li key={game.id}>\n                <Link to={`/game/${game.id}`}>{game.name}</Link>{' '}\n                <ConfirmedDelete\n                    question=\"Do you really want to delete this game?\"\n                    onDelete={() => this.handleGameDelete(game.id)}\n                />\n            </li>\n        ));\n\n        return (\n            isAuthenticated && (\n                <div>\n                    <KawaiiMessage character={Character.Ghost}>\n                        <FeatureList />\n                        {allIds.length === 0 && (\n                            <>Below you can create your games and see list of your games when you have some.</>\n                        )}\n                        {allIds.length > 0 && (\n                            <>Below you can see a list of your games or you can create even more games.</>\n                        )}\n                    </KawaiiMessage>\n\n                    <ul>{gameItems}</ul>\n                    <div className=\"form\">\n                        <label htmlFor=\"game_name\">Game name:</label>\n                        <input\n                            id=\"game_name\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            className=\"form-control\"\n                            placeholder=\"Game name\"\n                        />\n                        <button onClick={this.handleCreateGameClick}>Create Game</button>\n                    </div>\n                </div>\n            )\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        allIds: state.games.allIds,\n        byId: state.games.byId,\n    };\n};\n\nexport default connect(mapStateToProps)(Games);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { State } from './reducers';\nimport Games from './components/Games';\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\nimport FeatureList from './components/FeatureList';\n\ninterface Props {\n    isAuthenticated?: boolean;\n}\n\nexport class Main extends Component<Props> {\n    render() {\n        if (this.props.isAuthenticated) {\n            return <Games />;\n        } else {\n            return (\n                <KawaiiMessage character={Character.Ghost}>\n                    <FeatureList />\n                    Here you can create your own card game but you need to <a href=\"/login\">Login</a> or{' '}\n                    <a href=\"/signup\">Sign-up</a> first.\n                </KawaiiMessage>\n            );\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n    };\n};\n\nexport default connect(mapStateToProps)(Main);\n","import { State } from './reducers';\n\nexport const getActiveGame = (state: State) => (state.games.active ? state.games.byId[state.games.active] : null);\n\nexport const getActiveCardSet = (state: State) =>\n    state.cardsets.active ? state.cardsets.byId[state.cardsets.active] : null;\n","import React from 'react';\n\ninterface Props {\n    onLogout: () => void;\n}\n\nfunction Logout(props: Props) {\n    return (\n        <button onClick={() => props.onLogout()} className=\"btn btn-primary\">\n            Logout\n        </button>\n    );\n}\n\nexport default Logout;\n","import { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { CardSetType, GameType, MessageType } from '../types';\nimport { Dispatch, logoutRequest } from '../actions';\nimport { State } from '../reducers';\nimport { getActiveCardSet, getActiveGame } from '../selectors';\nimport Loader from './Loader';\nimport Logout from './Logout';\nimport style from './Navbar.module.css';\n\ninterface OwnProps {\n    isAuthenticated?: boolean;\n}\n\ninterface StateProps {\n    messages: MessageType[];\n    activeGame: GameType | null;\n    activeCardSet: CardSetType | null;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nexport class Navbar extends Component<Props> {\n    render() {\n        const { dispatch, isAuthenticated, messages, activeGame, activeCardSet } = this.props;\n\n        return (\n            <nav>\n                <div id=\"messages\" className={style.messages}>\n                    <ul>\n                        {messages.map(m => (\n                            <li key={m.id} className={m.type === 'error' ? style.error : style.info}>\n                                {m.type === 'error' && (\n                                    <>\n                                        <i className=\"material-icons\">error</i> {m.text}\n                                    </>\n                                )}\n                                {m.type === 'info' && (\n                                    <>\n                                        <i className=\"material-icons\">info</i> {m.text}\n                                    </>\n                                )}\n                                {m.type === 'progress' && (\n                                    <>\n                                        <Loader small={true} /> {m.text}\n                                    </>\n                                )}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n                <div>\n                    <h1 className={style.header}>\n                        <Link to=\"/\">CARD-A-MON</Link>\n                    </h1>\n                    <div>\n                        <ul className={style.menu}>\n                            <li>\n                                <Link to=\"/\">Main</Link>\n                            </li>\n                            {isAuthenticated && (\n                                <>\n                                    {activeGame && (\n                                        <li>\n                                            <Link to={`/game/${activeGame.id}`}>Game \"{activeGame.name}\"</Link>\n                                        </li>\n                                    )}\n                                    {activeCardSet && (\n                                        <li>\n                                            <Link to={`/cardset/${activeCardSet.id}`}>\n                                                Card Set \"{activeCardSet.name}\"\n                                            </Link>\n                                        </li>\n                                    )}\n                                </>\n                            )}\n                            <li>\n                                <Link to=\"/changelog\">Changelog</Link>\n                            </li>\n                            <li>\n                                <Link to=\"/help\">Help</Link>\n                            </li>\n                            <li>\n                                <Link to=\"/about\">About</Link>\n                            </li>\n                            {isAuthenticated && (\n                                <li>\n                                    <Logout onLogout={() => dispatch(logoutRequest())} />\n                                </li>\n                            )}\n                            {!isAuthenticated && (\n                                <>\n                                    <li>\n                                        <Link to=\"/login\">Login</Link>\n                                    </li>\n                                    <li>\n                                        <Link to=\"/signup\">Sign-up</Link>\n                                    </li>\n                                </>\n                            )}\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        messages: state.message.messages,\n        activeGame: getActiveGame(state),\n        activeCardSet: getActiveCardSet(state),\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(Navbar);\n","import React, { Component } from 'react';\n\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\n\nexport default class NotFoundPage extends Component {\n    render() {\n        return (\n            <KawaiiMessage character={Character.Browser} mood=\"sad\">\n                There is nothing here.\n            </KawaiiMessage>\n        );\n    }\n}\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Credentials } from '../types';\nimport { Dispatch, messageDisplay } from '../actions';\n\ninterface Props {\n    dispatch: Dispatch;\n    onSignUp: (cred: Credentials) => void;\n}\n\nexport class SignUp extends Component<Props> {\n    state = {\n        username: '',\n        password: '',\n        passwordRepeat: '',\n    };\n\n    handleSubmit(event: React.FormEvent) {\n        const { dispatch, onSignUp } = this.props;\n\n        if (this.state.password !== this.state.passwordRepeat) {\n            dispatch(messageDisplay('error', 'Passwords do not match.'));\n        } else {\n            const creds = {\n                username: this.state.username.trim(),\n                password: this.state.password.trim(),\n            };\n            onSignUp(creds);\n        }\n\n        event.preventDefault();\n    }\n\n    handleUsernameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ username: event.target.value });\n    };\n\n    handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ password: event.target.value });\n    };\n\n    handlePasswordRepeatChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ passwordRepeat: event.target.value });\n    };\n\n    render() {\n        return (\n            <div>\n                <form className=\"form\" onSubmit={event => this.handleSubmit(event)}>\n                    <input\n                        type=\"text\"\n                        onChange={this.handleUsernameChange}\n                        className=\"form-control\"\n                        placeholder=\"Username\"\n                    />\n                    <input\n                        type=\"password\"\n                        onChange={this.handlePasswordChange}\n                        className=\"form-control\"\n                        placeholder=\"Password\"\n                    />\n                    <input\n                        type=\"password\"\n                        onChange={this.handlePasswordRepeatChange}\n                        className=\"form-control\"\n                        placeholder=\"Repeat password here\"\n                    />\n                    <input type=\"submit\" value=\"Sign Up\" />\n                </form>\n            </div>\n        );\n    }\n}\nexport default connect()(SignUp);\n","import { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, signupRequest } from './actions';\nimport { State } from './reducers';\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\nimport SignUp from './components/SignUp';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated?: boolean;\n}\n\nexport class SignUpPage extends Component<Props> {\n    render() {\n        const { dispatch, isAuthenticated } = this.props;\n\n        return (\n            <div className=\"App\">\n                {!isAuthenticated && (\n                    <>\n                        <KawaiiMessage character={Character.Ghost}>\n                            Create your user here. Instead of user name you can use your e-mail. If you forget your\n                            password then you can send me e-mail (I will not send you any e-mails without your consent).\n                            If you use regular user name and forget your password then you will not be able to access\n                            your account.\n                        </KawaiiMessage>\n\n                        <SignUp onSignUp={creds => dispatch(signupRequest(creds))} />\n                    </>\n                )}\n                {isAuthenticated && <Redirect to=\"/\" />}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => ({ isAuthenticated: state.auth.isAuthenticated });\n\nexport default connect(mapStateToProps)(SignUpPage);\n","import './App.css';\n\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport { isIE } from 'react-device-detect';\n\nimport { Dispatch, initRequest } from './actions';\nimport { State } from './reducers';\nimport AboutPage from './AboutPage';\nimport CardSetPage from './CardSetPage';\nimport ChangelogPage from './ChangelogPage';\nimport ErrorBoundry from './ErrorBoundry';\nimport GamePage from './GamePage';\nimport HelpPage from './HelpPage';\nimport LoginPage from './LoginPage';\nimport Main from './Main';\nimport Navbar from './components/Navbar';\nimport NotFoundPage from './NotFoundPage';\nimport SignUpPage from './SignUpPage';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated?: boolean;\n}\n\nexport class App extends Component<Props> {\n    componentDidMount() {\n        this.props.dispatch(initRequest());\n    }\n\n    render() {\n        if (isIE) return <div> IE is not supported. Download Chrome/Opera/Firefox </div>;\n        const { isAuthenticated } = this.props;\n        return (\n            <Router>\n                <div className=\"App\">\n                    <ErrorBoundry>\n                        <Navbar isAuthenticated={isAuthenticated} />\n                        <Switch>\n                            <Route exact path=\"/\" component={Main} />\n                            <Route exact path=\"/login\" component={LoginPage} />\n                            <Route exact path=\"/signup\" component={SignUpPage} />\n                            <Route exact path=\"/game/:id\" component={GamePage} />\n                            <Route exact path=\"/cardset/:id\" component={CardSetPage} />\n                            <Route exact path=\"/changelog\" component={ChangelogPage} />\n                            <Route exact path=\"/help\" component={HelpPage} />\n                            <Route exact path=\"/about\" component={AboutPage} />\n                            <Route component={NotFoundPage} />\n                        </Switch>\n                        <div className=\"App-footer\">Dalius Dobravolskas &copy; {new Date().getFullYear()}</div>\n                    </ErrorBoundry>\n                </div>\n            </Router>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    const { auth } = state;\n    const { isAuthenticated } = auth;\n\n    return {\n        isAuthenticated,\n    };\n};\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ninterface Config {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import './index.css';\n\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { createAppStore } from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createAppStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__3_Dnv\",\"controls\":\"Sidebar_controls__3l8zj\",\"active\":\"Sidebar_active__NJglu\",\"view\":\"Sidebar_view__1vJBF\",\"hidden\":\"Sidebar_hidden__2SYOP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Navbar_header__2vmU8\",\"menu\":\"Navbar_menu__1kq5m\",\"messages\":\"Navbar_messages__1Jgez\",\"error\":\"Navbar_error__2SOKH\",\"info\":\"Navbar_info__h509L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fixed\":\"Loader_fixed__n07V6\",\"relative\":\"Loader_relative__IYoPK\",\"loader\":\"Loader_loader__v9ad5\",\"small\":\"Loader_small__29QEB\",\"loader-small\":\"Loader_loader-small__28X7J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarDetails_view__3zZ-d\",\"disabled\":\"SidebarDetails_disabled__1bMLW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardset\":\"CardSet_cardset__3ERPi\",\"cardsetview\":\"CardSet_cardsetview__2iXXK\",\"sidebar\":\"CardSet_sidebar__10qQG\",\"createCard\":\"CardSet_createCard__2aDvt\"};","module.exports = __webpack_public_path__ + \"static/media/pan.ff303319.svg\";","module.exports = __webpack_public_path__ + \"static/media/zoom.2d0b374b.svg\";","module.exports = __webpack_public_path__ + \"static/media/resize.c1fb8dc3.svg\";"],"sourceRoot":""}