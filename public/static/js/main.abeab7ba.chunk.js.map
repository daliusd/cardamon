{"version":3,"sources":["components/rotate.svg","components/Card.module.css","components/SidebarImage.module.css","components/ConfirmedDelete.module.css","components/EditableTitle.module.css","components/FontSelector.module.css","components/SidebarText.module.css","components/image.svg","components/ImageField.module.css","components/ContentEditable.module.css","components/text.svg","components/SidebarGeneratePng.module.css","components/SidebarGeneratePdf.module.css","components/SidebarMeasurements.module.css","components/SidebarSettings.module.css","components/SidebarUpload.module.css","components/CardSets.module.css","components/FeatureList.module.css","components/screenshot.png","components/FieldController.module.css","actions.ts","constants.ts","requests.ts","utils.ts","types.ts","workerController.ts","storage.ts","fontLoader.tsx","sagas.ts","reducers.ts","store.ts","components/KawaiiMessage.tsx","AboutPage.tsx","components/FieldController.tsx","components/ImageField.tsx","components/ContentEditable.tsx","components/TextField.tsx","components/Card.tsx","components/EditableTitle.tsx","components/Loader.tsx","components/SidebarDetails.tsx","components/SidebarGeneratePng.tsx","components/PDFGenerator.tsx","components/SidebarGeneratePdf.tsx","components/ColorButton.tsx","components/SidebarImage.tsx","components/SidebarImportExport.tsx","components/SidebarMeasurements.tsx","components/SidebarSettings.tsx","components/FontSelector.tsx","components/SidebarText.tsx","components/SidebarUpload.tsx","components/Sidebar.tsx","components/CardSet.tsx","CardSetPage.tsx","ChangelogPage.tsx","ErrorBoundry.tsx","components/ConfirmedDelete.tsx","components/CardSets.tsx","GamePage.tsx","HelpPage.tsx","components/Login.tsx","LoginPage.tsx","components/FeatureList.tsx","components/Games.tsx","Main.tsx","selectors.ts","components/Logout.tsx","components/Navbar.tsx","NotFoundPage.tsx","components/SignUp.tsx","SignUpPage.tsx","App.tsx","serviceWorker.ts","index.tsx","components/Sidebar.module.css","components/Navbar.module.css","components/Loader.module.css","components/SidebarDetails.module.css","components/CardSet.module.css","components/pan.svg","components/zoom.svg","components/resize.svg"],"names":["module","exports","__webpack_require__","p","card","title","active","disabled","view","images","button","answer","input","fontFamily","fontVariant","over","content","cardsets","features","fieldcontroller","fieldcontrolleractivefield","fieldcontrolleractive","controller","touchactivated","SidebarState","CURRENT_CARDSET_VERSION","DEFAULT_FONT_SIZE","DEFAULT_LINE_HEIGHT","BLEED_WIDTH","INIT_REQUEST","MESSAGE_DISPLAY","MESSAGE_HIDE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_REQUEST","LOGOUT_FAILURE","LOGOUT_SUCCESS","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_FAILURE","GAME_CREATE_REQUEST","GAME_CREATE_SUCCESS","GAME_DELETE_REQUEST","GAME_RENAME_REQUEST","GAME_LIST_SUCCESS","GAME_LIST_REQUEST","GAME_LIST_FAILURE","GAME_LIST_RESET","GAME_SELECT_REQUEST","GAME_SELECT_SUCCESS","GAME_SELECT_FAILURE","GAME_CREATE_PDF_REQUEST","GAME_CREATE_PDF_SUCCESS","GAME_CREATE_PDF_FAILURE","GAME_CREATE_PNG_REQUEST","GAME_CREATE_PNG_SUCCESS","GAME_CREATE_PNG_FAILURE","GAME_GET_ATTRIBUTIONS_REQUEST","GAME_GET_ATTRIBUTIONS_SUCCESS","GAME_GET_ATTRIBUTIONS_FAILURE","CARDSETS_SELECT_SUCCESS","CARDSET_CREATE_REQUEST","CARDSET_CREATE_SUCCESS","CARDSET_CREATE_FAILURE","CARDSET_DELETE_REQUEST","CARDSET_RENAME_REQUEST","CARDSET_IMPORT_DATA","CARDSET_LIST_SUCCESS","CARDSET_LIST_RESET","CARDSET_SELECT_REQUEST","CARDSET_SELECT_SUCCESS","CARDSET_CREATE_CARD","CARDSET_ROTATE_CARDS_RIGHT","CARDSET_ROTATE_CARDS_LEFT","CARDSET_CLONE_CARD","CARDSET_REMOVE_CARD","CARDSET_UPDATE_CARD_COUNT","CARDSET_ADD_TEXT_FIELD","CARDSET_ADD_IMAGE_FIELD","CARDSET_CHANGE_ACTIVE_FIELD_NAME","CARDSET_REMOVE_ACTIVE_FIELD","CARDSET_RAISE_ACTIVE_FIELD","CARDSET_RAISE_ACTIVE_FIELD_TO_TOP","CARDSET_LOWER_ACTIVE_FIELD","CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM","CARDSET_LOCK_ACTIVE_FIELD","CARDSET_UNLOCK_ACTIVE_FIELD","CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD","CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD","CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD","CARDSET_CHANGE_WIDTH","CARDSET_CHANGE_HEIGHT","CARDSET_CHANGE_IS_TWO_SIDED","CARDSET_CHANGE_SNAPPING_DISTANCE","CARDSET_CHANGE_FIELD_POSITION","CARDSET_CHANGE_FIELD_PAN","CARDSET_CHANGE_FIELD_ZOOM","CARDSET_CHANGE_FIELD_SIZE","CARDSET_CHANGE_FIELD_ANGLE","CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN","CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR","CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY","CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT","CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT","CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE","CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT","CARDSET_CHANGE_TEXT","CARDSET_CHANGE_IMAGE","CARDSET_CHANGE_IMAGE_BASE64","CARDSET_SET_ACTIVE_CARD_AND_FIELD","CARDSET_CHANGE_APPLY_TO_ALLCARDS","CARDSET_SELECT_FAILURE","CARDSET_SET_SIDEBAR_STATE","CARDSET_SET_ZOOM","CARDSET_UPLOAD_IMAGE","CARDSET_UPLOAD_IMAGE_SUCCESS","CARDSET_UPLOAD_IMAGE_FAILURE","CARDSET_DELETE_IMAGE","CARDSET_UNDO","CARDSET_REDO","IMAGE_LIST_REQUEST","IMAGE_LIST_SUCCESS","IMAGE_LIST_FAILURE","messageDisplay","type","text","id","message","shortid","generate","gameCreateRequest","gamename","gameDeleteRequest","gameId","gameRenameRequest","newName","gameSelectRequest","updateCardSets","gameCreatePdfRequest","collectionType","collectionId","pageWidth","pageHeight","topBottomMargin","leftRightMargin","verticalSpace","horizontalSpace","includeBleedingArea","cutMarksForScissors","cutMarksForGuillotine","cutMarksInMarginArea","cutMarksOnFrontSideOnly","gameCreatePngRequest","dpi","gameGetAttributionsRequest","cardSetCreateRequest","cardsetname","width","height","cardSetDeleteRequest","cardSetId","cardSetRenameRequest","cardSetImportData","data","cardSetCreateCard","cardSetRotateCardsRight","cardSetRotateCardsLeft","cardSetCloneCard","cardSetRemoveCard","cardSetUpdateCardCount","count","cardSetAddTextField","cardSetAddImageField","cardSetChangeActiveFieldName","name","cardSetRemoveActiveField","cardSetRaiseActiveField","cardSetRaiseActiveFieldToTop","cardSetLowerActiveField","cardSetLowerActiveFieldToBottom","cardSetLockActiveField","cardSetUnlockActiveField","cardSetChangeFitForActiveField","fit","cardSetChangeCropForActiveField","crop","cardSetChangeUnclickableForActiveField","unclickable","cardSetChangeWidth","maintainAspectRatio","resizeContent","cardSetChangeHeight","cardSetChangeIsTwoSided","isTwoSided","cardSetChangeSnappingDistance","snappingDistance","cardSetChangeFieldPosition","cardId","fieldId","x","y","group","cardSetChangeFieldPan","cx","cy","cardSetChangeFieldZoom","zoom","cardSetChangeFieldSize","cardSetChangeFieldAngle","angle","cardSetChangeActiveTextFieldAlign","align","cardSetChangeActiveTextFieldColor","color","cardSetChangeActiveTextFieldFontVariant","cardSetChangeActiveTextFieldFontFamilyAndVariant","cardSetChangeActiveTextFieldFontSize","fontSize","cardSetChangeActiveTextFieldLineHeight","lineHeight","cardSetChangeText","textInfo","cardSetChangeImage","imageInfo","cardSetChangeImageBase64","base64","cardSetActiveCardAndField","isBackActive","cardSetChangeApplyToAllCards","applyToAllCards","cardSetSetSidebarState","sidebarState","cardSetSetZoom","cardSetUploadImage","file","load","error","progress","abort","cancelToken","cardSetDeleteImage","imageId","cardSetUndo","cardSetRedo","imageListRequest","filter","location","handleAxiosError","response","Error","request","console","log","getTokens","creds","axios","post","then","resp","catch","refreshToken","refreshTokenValue","config","headers","Authorization","concat","accessToken","deleteAccessToken","token","delete","status","deleteRefreshToken","registerUser","getRequest","url","get","postRequest","postRequestFormDataCancelable","progressCallback","cancelCallback","Content-Type","onUploadProgress","isCancel","putRequest","put","deleteRequest","downloadBlob","blobURL","filename","resolve","tempLink","document","createElement","style","display","href","setAttribute","download","body","appendChild","click","removeChild","setTimeout","window","URL","revokeObjectURL","rotateVec","a","sinA","Math","sin","cosA","cos","rx","ry","calculateImageDimensions","imageFieldInfo","calculatedImageWidth","calculatedImageHeight","imageWidth","imageHeight","UserError","_Error","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","wrapNativeSuper","reportError","StackTrace","fromError","stackframes","stringifiedStack","map","sf","toString","join","state","store","JSON","stringify","getState","stack","ImageType","generatePdfUsingWorker","Worker","Promise","reject","worker","addEventListener","event","postMessage","e","loadImage","img","Image","onload","onerror","src","prepareImageToDrawSpace","context","imageToDraw","ptpmm","save","translate","rotate","ax","ay","rect","clip","fixWidthAndHeightInSvg","doc","XmlDocument","attr","viewBox","split","btoa","compressed","PNGGenerator","_this","tasksQueue","push","cardSetData","cardIdx","isBack","cardsetFolder","offscreenCanvas","calculatedWidth","round","calculatedHeight","getContext","fillStyle","fillRect","stopped","length","task","shift","SVG_PATH","scale","Path2D","fill","restore","IMAGE","SVG","undefined","dim","image","svgData","atob","drawImage","BLOCK_START","BLOCK_END","subType","delay","dataUrl","toDataURL","slice","padStart","zip","cardsetsList","cardsetInfo","generateCardset","cardsetId","parse","folder","cardsAllIds","entries","generateCard","generatePngUsingWorker","_ref4","asyncToGenerator","regenerator_default","mark","_callee4","pngGenerator","blob","wrap","_context4","prev","next","JSZip","generateGame","generateAsync","sent","createObjectURL","stop","_x15","_x16","_x17","_x18","retrieveGameAttributions","_ref5","_callee5","attributions","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","_resp","cardFields","fieldInfo","_resp2","meta","_context5","abrupt","Set","Symbol","iterator","done","value","t0","keys","fields","t1","t2","t3","replace","metadata","source","add","attribution","t4","return","finish","Array","from","_x19","_x20","saveTokens","localStorage","setItem","saveUsername","username","saveAccessToken","cleanTokens","removeItem","getTokenFromStorage","getItem","getRefreshTokenFromStorage","getUsernameFromStorage","loadFontsUsedInPlaceholders","fontsToLoad","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","fieldsAllIds","field","fontToLoad","err","WebFont","objectSpread","inactive","webFontsLoadPromise","google","families","toConsumableArray","putError","putInfo","putProgress","hideProgress","handleMessageDisplay","getToken","handleLoginRequest","handleLoginSuccess","logoutToken","logoutRefreshToken","handleLogoutRequest","handleSignupRequest","handleInitRequest","authorizedGetRequest","authorizedPostRequest","authorizedDeleteRequest","authorizedPostFormDataRequest","authorizedPutRequest","handleGameCreateRequest","handleGameDeleteRequest","handleGameRenameRequest","handleGameListRequest","handleGameSelectRequest","handleGameCreatePdfRequest","handleGameCreatePngRequest","handleGameGetAttributionsRequest","handleCardSetCreateRequest","handleCardSetDeleteRequest","handleCardSetRenameRequest","handleCardSetSelectRequest","handleCardSetUploadImage","handleCardSetDeleteImage","handleCardSetFitChange","handleCardSetChangeImage","handleCardSetChange","handleImageListRequest","rootSaga","_context","call","_marked","_context2","_marked2","_context3","_marked3","messageId","_marked4","action","_marked5","validateToken","jwtDecode","exp","Date","getTime","withErrorIfMissing","getFreshToken","newToken","_args6","_context6","_marked6","_context7","_marked7","_context8","_marked8","_context9","_marked9","_context10","_marked10","_context11","_marked11","_context12","_marked12","_context13","_marked13","_context14","_marked14","_context15","_marked15","_context16","_marked16","_context17","_marked17","_context18","_marked18","_context19","_marked19","_context20","_marked20","_context21","_marked21","allIds","byId","_context22","games","g","reduce","obj","_marked22","_context23","_marked23","progressId","_context24","_marked24","_context25","_marked25","_context26","select","_marked26","_context27","version","_marked27","_context28","_marked28","_context29","_marked29","loadImageInfo","naturalWidth","naturalHeight","processData","_x","_processData","_callee","processedData","plId","placeholder","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_iterator4","_step4","_placeholder","_cardId","_fieldId","info","_context38","placeholdersAllIds","placeholders","global","texts","cardsById","t5","parsedData","_context30","ActionCreators","clearHistory","_marked30","formData","_context31","FormData","set","append","lengthComputable","loaded","total","_marked31","_context32","_marked32","adjustSvg","preserveAspectRatio","walkChildren","node","children","child","imageResp","svg","_svg","_context33","cardset","present","activeFieldId","_marked33","cardsToFix","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_svg2","_context34","_marked34","closeHandler","preventDefault","returnValue","allowWindowClose","removeEventListener","_context35","_marked35","game","_context36","encodeURIComponent","_marked36","_context37","all","takeEvery","takeLatest","_marked37","ACTIVITY_SELECTING","ACTIVITY_CREATING_PDF","ACTIVITY_CREATING_PNG","DefaultMessageState","messages","DefaultAuthState","isAuthenticated","user","DefaultSignUpState","signingup","DefaultGameState","activity","DefaultCardSetsState","DefaultCardSetState","activeCardId","textSettings","activeSidebar","DefaultImageState","resizeFields","widthRatio","heightRatio","newFields","undoableCardset","undoable","assign","defineProperty","newCx","newCy","PI","newCard","index","indexOf","isOnBack","fieldIndex","splice","locked","unshift","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","fitImageWidth","fitImageHeight","min","max","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","oldZoom","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","nx","ny","_rotateVec","ratio","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","testFieldInfo","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","Measurements","Details","Text","ignoreInitialState","undoType","redoType","groupBy","startsWith","reducers","combineReducers","find","m","auth","signup","Character","AboutPage","react_default","Component","FieldController","props","cDiv","panDiv","zoomDiv","resizeDiv","rotateDiv","originalBodyCursor","handleBrowserDragStart","stopPropagation","handleMouseDown","handleDragStart","handleMouseMove","handleMouseUp","handleTouchStart","touches","changedTouches","handleTouchMove","passive","handleTouchEnd","co","current","cursor","setState","startX","clientX","startY","clientY","handleDragMove","ctrlKey","disableSnapping","_this$props","isLocked","_this$props2","ppmm","onDrag","handleComplete","isTouchEvent","_this$props3","activatedUsingTouch","handlePanMouseDown","handlePanStart","handlePanMouseMove","handlePanMouseUp","handlePanTouchStart","handlePanTouchMove","handlePanTouchEnd","panIcon","handlePanMove","_this$props4","onPan","handlePanComplete","_this$props5","handleZoomMouseDown","handleZoomStart","handleZoomMouseMove","handleZoomMouseUp","handleZoomTouchStart","handleZoomTouchMove","handleZoomTouchEnd","zoomIcon","handleZoomMove","_this$props6","onZoom","dx","dy","z","abs","newZoom","handleZoomComplete","handleResizeMouseDown","handleResizeStart","handleResizeMouseMove","handleResizeMouseUp","handleResizeTouchStart","handleResizeTouchMove","handleResizeTouchEnd","resizeIcon","handleResizeMove","_this$props7","onResize","_rotateVec2","newWidth","newHeight","handleResizeComplete","_this$props8","handleRotateMouseDown","handleRotateStart","handleRotateMouseMove","handleRotateMouseUp","handleRotateTouchStart","handleRotateTouchMove","handleRotateTouchEnd","_this$props9","rotateIcon","getBoundingClientRect","left","clientWidth","top","clientHeight","originalAngle","atan2","handleRotateMove","_this$props10","onRotate","_this$state","newAngle","handleRotateComplete","React","createRef","_this$props11","isActive","isActiveField","isUnclickable","ref","onDragStart","className","position","transform","pointerEvents","alt","right","bottom","connect","ImageField","handleDrag","cardOnly","dispatch","handlePan","handleZoom","handleResize","handleRotate","wasMoved","handleDragOver","dragIsOver","handleDragLeave","handleDrop","dataTransfer","getData","imagefilesPos","ii","substr","imageUrl","cardWidth","cardHeight","components_FieldController","overflow","onMouseDown","onTouchStart","onMouseMove","onTouchMove","onMouseUp","onTouchEnd","onDragOver","onDragLeave","onDrop","opacity","emptyImageImage","PureComponent","ContentEditable","editDiv","currentText","currentAlign","currentColor","currentFontFamily","currentFontVariant","currentFontSize","currentLineHeight","timeout","handleStart","handleMove","focus","onFocus","textValue","range","createRange","selectNodeContents","collapse","selection","getSelection","removeAllRanges","addRange","updateContent","timeoutInMiliseconds","innerHTML","imgUrlIdx","clearTimeout","handleBlur","handleInput","handlePaste","clipboardData","s","execCommand","nextProps","isItalic","fontWeight","parseInt","contentEditable","onBlur","onInput","onPaste","textAlign","DEFAULT_FONT","fontStyle","outline","overflowWrap","dangerouslySetInnerHTML","__html","TextField","textFieldInfo","zIndex","emptyTextImage","components_ContentEditable","Card","dimensions","handleFieldDeselect","target","getAttribute","_this2","fieldsIds","isActiveCard","widthWithBleeds","heightWithBleeds","index_esm","client","contentRect","_ref","measureRef","components_ImageField","key","components_TextField","border","borderRadius","EditableTitle","titleIsEdited","handleClick","handleChange","onChange","Fragment","onClick","autoFocus","KawaiiMessage","character","mood","marginTop","marginBottom","padding","backgroundColor","grid","Ghost","size","Browser","marginLeft","Loader","fixed","small","loader","relative","SidebarDetails","_Component","_getPrototypeOf2","_len","args","_key","handleRotateRightClick","handleRotateLeftClick","handleCloneCardClick","activeCard","handleRemoveCardClick","handleCountChange","handleUndoClick","handleRedoClick","createClass","visible","SidebarGeneratePng","handleDpiChange","handleGenerate","activeCardset","isCreatingPng","htmlFor","step","PDFGenerator","handleGeneratePdfClick","handlePageWidthChange","parseFloat","handlePageHeightChange","handleTopBottomMarginChange","handleLeftRightMarginChange","handleVerticalSpaceChange","handleHorizontalSpaceChange","handleIncludeBleedingAreaChange","checked","handleCutMarksForScissors","handleCutMarksForGuillotine","handleCutMarksInMarginArea","handleCutMarksOnFrontSideOnly","isCreatingPdf","withHelp","KawaiiMessage_KawaiiMessage","SidebarGeneratePdf","activeCardSetId","components_PDFGenerator","ColorButton","displayColorPicker","handleClose","react_color_lib","disableAlpha","SidebarImage","handleAddImageClick","changeImage","activeFieldInfo","handleRemoveImageFromFieldClick","handleRemoveClick","handleNameChange","trim","handleFilterChange","handleImageSelect","imageName","handleRaise","handleLower","handleLockField","handleUnlockField","handleFitOptionChange","handleOptionChange","handleColorChange","hex","handleRemoveColorClick","handleApplyToAllCardChange","handleChangeCrop","ColorButton_ColorButton","im","data-width","data-height","registerPlugin","FilePondPluginFileValidateType","SidebarImportExport","prepareImagePaths","activeGame","ending","md5","preparedImages","fieldsByCard","endsWith","handleExportJson","json","Blob","handleExportCsv","preparedFields","csvData","header","usedNames","dataRow","written","fieldIndo","csv","Papa","unparse","handleProcess","fieldName","reader","FileReader","readAsText","result","isGlobal","newCardsAllIds","newCardsById","row","handleRevert","uniqueFileId","react_filepond","server","process","revert","acceptedFileTypes","SidebarMeasurements","handlePrevField","activeField","prevField","idx","handleNextField","nextField","handleWidthChange","handleHeightChange","handleXChange","handleYChange","handleAngleChange","_this$props12","handleChangeUnclickable","_this$props13","_this$props14","SidebarSettings","_this$state2","handleIsTwoSidedChange","handleSnappingDistance","_this$state3","options","webfonts","sort","fi","label","FontSelector","getFontStringForLoad","family","variant","stringForLoad","selectedOption","activeFontVariant","wf","handleFontVariantChange","activeFont","handleFontSizeChange","handleLineHeightChange","selectedFontFamily","f","fontVariantOptions","fv","selectedFontVariant","activeFontSize","react_select_esm","activeLineHeight","SidebarText","handleAddTextClick","handleSetTextAlignLeft","getRangeAt","rangeCount","collapsed","handleSetTextAlignCenter","handleSetTextAlignRight","handleSetTextBold","handleSetTextItalic","components_FontSelector","FilePondPluginFileValidateSize","SidebarUpload","CancelToken","cancel","visibility","allowMultiple","allowFileSizeValidation","maxFileSize","SIDEBARS","Settings","icon","component","Upload","ImportExport","Png","Pdf","Sidebar","handleSidebar","sidebar","controls","sb","hidden","CardSet","keyDown","shiftKey","handleCreateCardClick","handleClickOutsideOfCard","handleCardSetNameChange","activeCardSet","EditableTitle_EditableTitle","cardsetview","components_Sidebar","Loader_Loader","gridTemplateColumns","components_Card","createCard","CardSetPage","match","params","components_CardSet","Redirect","to","ChangelogPage","evt","ErrorBoundary","hasError","ConfirmedDelete","deleteClicked","handleRemove","handleYes","onDelete","handleNo","question","CardSets","cardSetName","handleGameNameChange","handleCreateCardSetClick","handleCardSetDelete","handleGetAttributions","b","cardsetItems","Link","ConfirmedDelete_ConfirmedDelete","GamePage","components_CardSets","Login","password","handleUsernameChange","handlePasswordChange","handleSubmit","onLogin","onLoginFailure","onSubmit","LoginPage","Login_Login","loginRequest","msg","FeatureList","screenshot","Games","gameName","handleCreateGameClick","handleGameDelete","gameItems","FeatureList_FeatureList","Main","components_Games","getActiveGame","getActiveCardSet","Logout","onLogout","Navbar","menu","components_Logout","NotFoundPage","SignUp","passwordRepeat","handlePasswordRepeatChange","onSignUp","SignUpPage","components_SignUp","signupRequest","App","isIE","BrowserRouter","ErrorBoundry_ErrorBoundary","components_Navbar","Switch","Route","exact","path","HelpPage","getFullYear","Boolean","hostname","sagaMiddleware","createSagaMiddleware","createStore","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","run","createAppStore","ReactDOM","render","es","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister","loader-small"],"mappings":"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","file":"static/js/main.abeab7ba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rotate.4a37bc7b.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1Ltkv\",\"title\":\"Card_title__1KiIj\",\"active\":\"Card_active__XOmoJ\",\"disabled\":\"Card_disabled__2Ob5l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarImage_view__2LKQM\",\"disabled\":\"SidebarImage_disabled__1tNhN\",\"images\":\"SidebarImage_images__3zDK2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ConfirmedDelete_button__1o8h4\",\"answer\":\"ConfirmedDelete_answer__1OsVc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"EditableTitle_input__2Y_6m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fontFamily\":\"FontSelector_fontFamily__zlBcJ\",\"fontVariant\":\"FontSelector_fontVariant__2pA4n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarText_view__3s9r0\",\"disabled\":\"SidebarText_disabled__3efIG\"};","module.exports = __webpack_public_path__ + \"static/media/image.60f0926c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"over\":\"ImageField_over__3Q9AT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ContentEditable_content__1p7up\"};","module.exports = __webpack_public_path__ + \"static/media/text.f7f9443c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarGeneratePng_view__1_3fy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarGeneratePdf_view__10OR4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarMeasurements_view__3BCmn\",\"disabled\":\"SidebarMeasurements_disabled__2Rrd2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarSettings_view__DwnQN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarUpload_view__k69sP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardsets\":\"CardSets_cardsets__mQSav\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"features\":\"FeatureList_features__3xjD3\"};","module.exports = __webpack_public_path__ + \"static/media/screenshot.ec7615c5.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldcontroller\":\"FieldController_fieldcontroller__3ifWc\",\"fieldcontrolleractivefield\":\"FieldController_fieldcontrolleractivefield__9anIa\",\"fieldcontrolleractive\":\"FieldController_fieldcontrolleractive__3fSLl\",\"controller\":\"FieldController_controller__VCesw\",\"touchactivated\":\"FieldController_touchactivated__16s2w\"};","import { CancelToken } from 'axios';\nimport { Dispatch as ReduxDispatch } from 'redux';\nimport shortid from 'shortid';\n\nimport {\n    CardSetsCollection,\n    CardType,\n    CardsCollection,\n    Credentials,\n    GamesCollection,\n    IdsArray,\n    ImageArray,\n    ImageInfo,\n    MessageType,\n    PlaceholdersCollection,\n    PlaceholdersImageInfoByCardCollection,\n    PlaceholdersTextInfoByCardCollection,\n    TextInfo,\n    FieldInfoByCardCollection,\n} from './types';\n\nexport const INIT_REQUEST = 'INIT_REQUEST';\nexport const MESSAGE_DISPLAY = 'MESSAGE_DISPLAY';\nexport const MESSAGE_HIDE = 'MESSAGE_HIDE';\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\nexport const LOGOUT_FAILURE = 'LOGOUT_FAILURE';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const SIGNUP_REQUEST = 'SIGNUP_REQUEST';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAILURE = 'SIGNUP_FAILURE';\nexport const GAME_CREATE_REQUEST = 'GAME_CREATE_REQUEST';\nexport const GAME_CREATE_SUCCESS = 'GAME_CREATE_SUCCESS';\nexport const GAME_DELETE_REQUEST = 'GAME_DELETE_REQUEST';\nexport const GAME_RENAME_REQUEST = 'GAME_RENAME_REQUEST';\nexport const GAME_LIST_SUCCESS = 'GAME_LIST_SUCCESS';\nexport const GAME_LIST_REQUEST = 'GAME_LIST_REQUEST';\nexport const GAME_LIST_FAILURE = 'GAME_LIST_FAILURE';\nexport const GAME_LIST_RESET = 'GAME_LIST_RESET';\nexport const GAME_SELECT_REQUEST = 'GAME_SELECT_REQUEST';\nexport const GAME_SELECT_SUCCESS = 'GAME_SELECT_SUCCESS';\nexport const GAME_SELECT_FAILURE = 'GAME_SELECT_FAILURE';\nexport const GAME_CREATE_PDF_REQUEST = 'GAME_CREATE_PDF_REQUEST';\nexport const GAME_CREATE_PDF_SUCCESS = 'GAME_CREATE_PDF_SUCCESS';\nexport const GAME_CREATE_PDF_FAILURE = 'GAME_CREATE_PDF_FAILURE';\nexport const GAME_CREATE_PNG_REQUEST = 'GAME_CREATE_PNG_REQUEST';\nexport const GAME_CREATE_PNG_SUCCESS = 'GAME_CREATE_PNG_SUCCESS';\nexport const GAME_CREATE_PNG_FAILURE = 'GAME_CREATE_PNG_FAILURE';\nexport const GAME_GET_ATTRIBUTIONS_REQUEST = 'GAME_GET_ATTRIBUTIONS_REQUEST';\nexport const GAME_GET_ATTRIBUTIONS_SUCCESS = 'GAME_GET_ATTRIBUTIONS_SUCCESS';\nexport const GAME_GET_ATTRIBUTIONS_FAILURE = 'GAME_GET_ATTRIBUTIONS_FAILURE';\nexport const CARDSETS_SELECT_SUCCESS = 'CARDSETS_SELECT_SUCCESS';\nexport const CARDSET_CREATE_REQUEST = 'CARDSET_CREATE_REQUEST';\nexport const CARDSET_CREATE_SUCCESS = 'CARDSET_CREATE_SUCCESS';\nexport const CARDSET_CREATE_FAILURE = 'CARDSET_CREATE_FAILURE';\nexport const CARDSET_DELETE_REQUEST = 'CARDSET_DELETE_REQUEST';\nexport const CARDSET_RENAME_REQUEST = 'CARDSET_RENAME_REQUEST';\nexport const CARDSET_IMPORT_DATA = 'CARDSET_IMPORT_DATA';\nexport const CARDSET_LIST_SUCCESS = 'CARDSET_LIST_SUCCESS';\nexport const CARDSET_LIST_REQUEST = 'CARDSET_LIST_REQUEST';\nexport const CARDSET_LIST_FAILURE = 'CARDSET_LIST_FAILURE';\nexport const CARDSET_LIST_RESET = 'CARDSET_LIST_RESET';\nexport const CARDSET_SELECT_REQUEST = 'CARDSET_SELECT_REQUEST';\nexport const CARDSET_SELECT_SUCCESS = 'CARDSET_SELECT_SUCCESS';\nexport const CARDSET_CREATE_CARD = 'CARDSET_CREATE_CARD';\nexport const CARDSET_ROTATE_CARDS_RIGHT = 'CARDSET_ROTATE_CARDS_RIGHT';\nexport const CARDSET_ROTATE_CARDS_LEFT = 'CARDSET_ROTATE_CARDS_LEFT';\nexport const CARDSET_CLONE_CARD = 'CARDSET_CLONE_CARD';\nexport const CARDSET_REMOVE_CARD = 'CARDSET_REMOVE_CARD';\nexport const CARDSET_UPDATE_CARD_COUNT = 'CARDSET_UPDATE_CARD_COUNT';\nexport const CARDSET_ADD_TEXT_FIELD = 'CARDSET_ADD_TEXT_FIELD';\nexport const CARDSET_ADD_IMAGE_FIELD = 'CARDSET_ADD_IMAGE_FIELD';\nexport const CARDSET_CHANGE_ACTIVE_FIELD_NAME = 'CARDSET_CHANGE_ACTIVE_FIELD_NAME';\nexport const CARDSET_REMOVE_ACTIVE_FIELD = 'CARDSET_REMOVE_ACTIVE_FIELD';\nexport const CARDSET_RAISE_ACTIVE_FIELD = 'CARDSET_RAISE_ACTIVE_FIELD';\nexport const CARDSET_RAISE_ACTIVE_FIELD_TO_TOP = 'CARDSET_RAISE_ACTIVE_FIELD_TO_TOP';\nexport const CARDSET_LOWER_ACTIVE_FIELD = 'CARDSET_LOWER_ACTIVE';\nexport const CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM = 'CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM';\nexport const CARDSET_LOCK_ACTIVE_FIELD = 'CARDSET_LOCK_ACTIVE_FIELD';\nexport const CARDSET_UNLOCK_ACTIVE_FIELD = 'CARDSET_UNLOCK_ACTIVE_FIELD';\nexport const CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD = 'CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD';\nexport const CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD = 'CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD';\nexport const CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD = 'CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD';\nexport const CARDSET_CHANGE_WIDTH = 'CARDSET_CHANGE_WIDTH';\nexport const CARDSET_CHANGE_HEIGHT = 'CARDSET_CHANGE_HEIGHT';\nexport const CARDSET_CHANGE_IS_TWO_SIDED = 'CARDSET_CHANGE_IS_TWO_SIDED';\nexport const CARDSET_CHANGE_SNAPPING_DISTANCE = 'CARDSET_CHANGE_SNAPPING_DISTANCE';\nexport const CARDSET_CHANGE_FIELD_POSITION = 'CARDSET_CHANGE_FIELD_POSITION';\nexport const CARDSET_CHANGE_FIELD_PAN = 'CARDSET_CHANGE_FIELD_PAN';\nexport const CARDSET_CHANGE_FIELD_ZOOM = 'CARDSET_CHANGE_FIELD_ZOOM';\nexport const CARDSET_CHANGE_FIELD_SIZE = 'CARDSET_CHANGE_FIELD_SIZE';\nexport const CARDSET_CHANGE_FIELD_ANGLE = 'CARDSET_CHANGE_FIELD_ANGLE';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN = 'CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR = 'CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY = 'CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT = 'CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT =\n    'CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE = 'CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT = 'CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT';\nexport const CARDSET_CHANGE_TEXT = 'CARDSET_CHANGE_TEXT';\nexport const CARDSET_CHANGE_IMAGE = 'CARDSET_CHANGE_IMAGE';\nexport const CARDSET_CHANGE_IMAGE_BASE64 = 'CARDSET_CHANGE_IMAGE_BASE64';\nexport const CARDSET_SET_ACTIVE_CARD_AND_FIELD = 'CARDSET_SET_ACTIVE_CARD_AND_FIELD';\nexport const CARDSET_CHANGE_APPLY_TO_ALLCARDS = 'CARDSET_CHANGE_APPLY_TO_ALLCARDS';\nexport const CARDSET_SELECT_FAILURE = 'CARDSET_SELECT_FAILURE';\nexport const CARDSET_SET_SIDEBAR_STATE = 'CARDSET_SET_SIDEBAR_STATE';\nexport const CARDSET_SET_ZOOM = 'CARDSET_SET_ZOOM';\nexport const CARDSET_UPLOAD_IMAGE = 'CARDSET_UPLOAD_IMAGE';\nexport const CARDSET_UPLOAD_IMAGE_SUCCESS = 'CARDSET_UPLOAD_IMAGE_SUCCESS';\nexport const CARDSET_UPLOAD_IMAGE_FAILURE = 'CARDSET_UPLOAD_IMAGE_FAILURE';\nexport const CARDSET_DELETE_IMAGE = 'CARDSET_DELETE_IMAGE';\nexport const CARDSET_UNDO = 'CARDSET_UNDO';\nexport const CARDSET_REDO = 'CARDSET_REDO';\nexport const IMAGE_LIST_REQUEST = 'IMAGE_LIST_REQUEST';\nexport const IMAGE_LIST_SUCCESS = 'IMAGE_LIST_SUCCESS';\nexport const IMAGE_LIST_FAILURE = 'IMAGE_LIST_FAILURE';\n\n// Actions\n\nexport interface InitAction {\n    type: typeof INIT_REQUEST;\n}\n\nexport interface MessageDisplay {\n    type: typeof MESSAGE_DISPLAY;\n    message: MessageType;\n}\nexport type MessageAction = MessageDisplay | { type: typeof MESSAGE_HIDE; messageId: string };\n\nexport interface LoginRequest {\n    type: typeof LOGIN_REQUEST;\n    creds: Credentials;\n}\nexport type LoginAction =\n    | LoginRequest\n    | { type: typeof LOGIN_SUCCESS; username: string }\n    | { type: typeof LOGIN_FAILURE; message: string }\n    | { type: typeof LOGOUT_REQUEST }\n    | { type: typeof LOGOUT_FAILURE }\n    | { type: typeof LOGOUT_SUCCESS };\n\nexport interface SignUpRequest {\n    type: typeof SIGNUP_REQUEST;\n    creds: Credentials;\n}\nexport type SignUpAction = SignUpRequest | { type: typeof SIGNUP_SUCCESS } | { type: typeof SIGNUP_FAILURE };\n\nexport interface GameCreateRequest {\n    type: typeof GAME_CREATE_REQUEST;\n    gamename: string;\n}\nexport type GameCreateAction = GameCreateRequest | { type: typeof GAME_CREATE_SUCCESS };\n\nexport interface GameDeleteRequest {\n    type: typeof GAME_DELETE_REQUEST;\n    gameId: string;\n}\n\nexport type GameDeleteAction = GameDeleteRequest;\n\nexport interface GameRenameRequest {\n    type: typeof GAME_RENAME_REQUEST;\n    gameId: string;\n    newName: string;\n}\n\nexport type GameRenameAction = GameRenameRequest;\n\nexport interface GameListSuccess {\n    type: typeof GAME_LIST_SUCCESS;\n    byId: GamesCollection;\n    allIds: IdsArray;\n}\nexport type GameListAction =\n    | { type: typeof GAME_LIST_REQUEST }\n    | GameListSuccess\n    | { type: typeof GAME_LIST_FAILURE }\n    | { type: typeof GAME_LIST_RESET };\n\nexport interface GameSelectRequest {\n    type: typeof GAME_SELECT_REQUEST;\n    id: string;\n    updateCardSets: boolean;\n}\nexport type GameSelectAction =\n    | GameSelectRequest\n    | { type: typeof GAME_SELECT_SUCCESS; id: string }\n    | { type: typeof GAME_SELECT_FAILURE };\n\nexport interface GameCreatePdfRequest {\n    type: typeof GAME_CREATE_PDF_REQUEST;\n    collectionType: string;\n    collectionId: string;\n    pageWidth: number;\n    pageHeight: number;\n    topBottomMargin: number;\n    leftRightMargin: number;\n    verticalSpace: number;\n    horizontalSpace: number;\n    includeBleedingArea: boolean;\n    cutMarksForScissors: boolean;\n    cutMarksForGuillotine: boolean;\n    cutMarksInMarginArea: boolean;\n    cutMarksOnFrontSideOnly: boolean;\n}\n\nexport type GameCreatePdfAction =\n    | GameCreatePdfRequest\n    | { type: typeof GAME_CREATE_PDF_SUCCESS }\n    | { type: typeof GAME_CREATE_PDF_FAILURE };\n\nexport interface GameCreatePngRequest {\n    type: typeof GAME_CREATE_PNG_REQUEST;\n    dpi: number;\n    collectionType: string;\n    collectionId: string;\n}\n\nexport type GameCreatePngAction =\n    | GameCreatePngRequest\n    | { type: typeof GAME_CREATE_PNG_SUCCESS }\n    | { type: typeof GAME_CREATE_PNG_FAILURE };\n\nexport interface GameGetAttributionsRequest {\n    type: typeof GAME_GET_ATTRIBUTIONS_REQUEST;\n}\n\nexport type GameGetAttributionsAction =\n    | GameGetAttributionsRequest\n    | { type: typeof GAME_GET_ATTRIBUTIONS_SUCCESS; attributions: string[] }\n    | { type: typeof GAME_GET_ATTRIBUTIONS_FAILURE };\n\nexport type GameAction =\n    | GameCreateAction\n    | GameDeleteAction\n    | GameRenameAction\n    | GameListAction\n    | GameSelectAction\n    | GameCreatePdfAction\n    | GameCreatePngAction\n    | GameGetAttributionsAction;\n\nexport interface CardSetCreateRequest {\n    type: typeof CARDSET_CREATE_REQUEST;\n    cardsetname: string;\n    width: number;\n    height: number;\n    gameId: string;\n}\nexport type CardSetCreateAction =\n    | CardSetCreateRequest\n    | { type: typeof CARDSET_CREATE_SUCCESS }\n    | { type: typeof CARDSET_CREATE_FAILURE };\n\nexport interface CardSetDeleteRequest {\n    type: typeof CARDSET_DELETE_REQUEST;\n    cardSetId: string;\n}\n\nexport interface CardSetRenameRequest {\n    type: typeof CARDSET_RENAME_REQUEST;\n    cardSetId: string;\n    newName: string;\n}\n\nexport interface CardSetsSelectSuccess {\n    type: typeof CARDSETS_SELECT_SUCCESS;\n    id: string;\n    name: string;\n}\n\nexport type CardSetsAction =\n    | CardSetsSelectSuccess\n    | CardSetCreateAction\n    | CardSetDeleteRequest\n    | CardSetRenameRequest\n    | CardSetListAction;\n\nexport interface CardSetImportData {\n    type: typeof CARDSET_IMPORT_DATA;\n    data: object;\n}\n\nexport interface CardSetListSuccess {\n    type: typeof CARDSET_LIST_SUCCESS;\n    byId: CardSetsCollection;\n    allIds: IdsArray;\n}\nexport type CardSetListAction =\n    | { type: typeof CARDSET_LIST_REQUEST }\n    | CardSetListSuccess\n    | { type: typeof CARDSET_LIST_FAILURE }\n    | { type: typeof CARDSET_LIST_RESET };\n\nexport interface CardSetSelectRequest {\n    type: typeof CARDSET_SELECT_REQUEST;\n    id: string;\n}\n\nexport interface CardSetSelectSuccessDataBase {\n    version: string;\n}\n\nexport interface CardSetSelectSuccessDataV2 {\n    version: 2;\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    snappingDistance: number;\n    cardsAllIds: IdsArray;\n    cardsById: CardsCollection;\n    placeholders: PlaceholdersCollection;\n    placeholdersAllIds: IdsArray;\n    texts: PlaceholdersTextInfoByCardCollection;\n    images: PlaceholdersImageInfoByCardCollection;\n    zoom: number;\n}\n\nexport interface CardSetSelectSuccessDataV3 {\n    version: 3;\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    snappingDistance: number;\n    cardsAllIds: IdsArray;\n    cardsById: CardsCollection;\n    fields: FieldInfoByCardCollection;\n    fieldsAllIds: IdsArray;\n    zoom: number;\n}\n\nexport type CardSetSelectSuccessData = CardSetSelectSuccessDataV2 | CardSetSelectSuccessDataV3;\n\nexport interface CardSetSelectSuccess {\n    type: typeof CARDSET_SELECT_SUCCESS;\n    id: string;\n    name: string;\n    data: CardSetSelectSuccessDataV3;\n    gameId: string;\n}\nexport interface CardSetCreateCard {\n    type: typeof CARDSET_CREATE_CARD;\n    card: CardType;\n}\nexport interface CardSetRotateCardsRight {\n    type: typeof CARDSET_ROTATE_CARDS_RIGHT;\n}\nexport interface CardSetRotateCardsLeft {\n    type: typeof CARDSET_ROTATE_CARDS_LEFT;\n}\nexport interface CardSetCloneCard {\n    type: typeof CARDSET_CLONE_CARD;\n    card: CardType;\n}\nexport interface CardSetRemoveCard {\n    type: typeof CARDSET_REMOVE_CARD;\n    card: CardType;\n}\nexport interface CardSetUpdateCardCount {\n    type: typeof CARDSET_UPDATE_CARD_COUNT;\n    card: CardType;\n    count: number;\n}\nexport interface CardSetAddTextField {\n    type: typeof CARDSET_ADD_TEXT_FIELD;\n}\nexport interface CardSetAddImageField {\n    type: typeof CARDSET_ADD_IMAGE_FIELD;\n}\nexport interface CardSetChangeActiveFieldName {\n    type: typeof CARDSET_CHANGE_ACTIVE_FIELD_NAME;\n    name: string;\n}\nexport interface CardSetRemoveActiveField {\n    type: typeof CARDSET_REMOVE_ACTIVE_FIELD;\n}\nexport interface CardSetRaiseActiveField {\n    type: typeof CARDSET_RAISE_ACTIVE_FIELD;\n}\nexport interface CardSetRaiseActiveFieldToTop {\n    type: typeof CARDSET_RAISE_ACTIVE_FIELD_TO_TOP;\n}\nexport interface CardSetLowerActiveField {\n    type: typeof CARDSET_LOWER_ACTIVE_FIELD;\n}\nexport interface CardSetLowerActiveFieldToBottom {\n    type: typeof CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM;\n}\nexport interface CardSetLockActiveField {\n    type: typeof CARDSET_LOCK_ACTIVE_FIELD;\n}\nexport interface CardSetUnlockActiveField {\n    type: typeof CARDSET_UNLOCK_ACTIVE_FIELD;\n}\nexport interface CardSetChangeFitForActiveField {\n    type: typeof CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD;\n    fit: string;\n}\nexport interface CardSetChangeCropForActiveField {\n    type: typeof CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD;\n    crop: boolean;\n}\n\nexport interface CardSetChangeUnclickableForActiveField {\n    type: typeof CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD;\n    unclickable: boolean;\n}\n\nexport interface CardSetChangeWidth {\n    type: typeof CARDSET_CHANGE_WIDTH;\n    width: number;\n    maintainAspectRatio: boolean;\n    resizeContent: boolean;\n}\n\nexport interface CardSetChangeHeight {\n    type: typeof CARDSET_CHANGE_HEIGHT;\n    height: number;\n    maintainAspectRatio: boolean;\n    resizeContent: boolean;\n}\n\nexport interface CardSetChangeIsTwoSided {\n    type: typeof CARDSET_CHANGE_IS_TWO_SIDED;\n    isTwoSided: boolean;\n}\n\nexport interface CardSetChangeSnappingDistance {\n    type: typeof CARDSET_CHANGE_SNAPPING_DISTANCE;\n    snappingDistance: number;\n}\n\nexport interface CardSetChangeFieldPosition {\n    type: typeof CARDSET_CHANGE_FIELD_POSITION;\n    cardId?: string;\n    fieldId: string;\n    x: number;\n    y: number;\n    group: string;\n}\n\nexport interface CardSetChangeFieldPan {\n    type: typeof CARDSET_CHANGE_FIELD_PAN;\n    cardId?: string;\n    fieldId: string;\n    cx: number;\n    cy: number;\n    group: string;\n}\n\nexport interface CardSetChangeFieldZoom {\n    type: typeof CARDSET_CHANGE_FIELD_ZOOM;\n    cardId?: string;\n    fieldId: string;\n    zoom: number;\n    group: string;\n}\n\nexport interface CardSetChangeFieldSize {\n    type: typeof CARDSET_CHANGE_FIELD_SIZE;\n    cardId?: string;\n    fieldId: string;\n    width: number;\n    height: number;\n    group: string;\n}\nexport interface CardSetChangeFieldAngle {\n    type: typeof CARDSET_CHANGE_FIELD_ANGLE;\n    cardId?: string;\n    fieldId: string;\n    angle: number;\n    group: string;\n}\nexport interface CardSetChangeActiveTextFieldAlign {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN;\n    align: string;\n}\nexport interface CardSetChangeActiveTextFieldColor {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR;\n    color: string;\n}\nexport interface CardSetChangeActiveTextFieldFontFamily {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY;\n    fontFamily: string;\n}\nexport interface CardSetChangeActiveTextFieldFontVariant {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT;\n    fontVariant: string;\n}\nexport interface CardSetChangeActiveTextFieldFontFamilyAndVariant {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT;\n    fontFamily: string;\n    fontVariant: string;\n}\nexport interface CardSetChangeActiveTextFieldFontSize {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE;\n    fontSize: number;\n}\nexport interface CardSetChangeActiveTextFieldLineHeight {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT;\n    lineHeight: number;\n}\nexport interface CardSetChangeText {\n    type: typeof CARDSET_CHANGE_TEXT;\n    cardId: string;\n    fieldId: string;\n    textInfo: TextInfo;\n}\nexport interface CardSetChangeImage {\n    type: typeof CARDSET_CHANGE_IMAGE;\n    cardId: string | undefined;\n    fieldId: string;\n    imageInfo: ImageInfo;\n}\nexport interface CardSetChangeImageBase64 {\n    type: typeof CARDSET_CHANGE_IMAGE_BASE64;\n    cardId: string;\n    fieldId: string;\n    base64?: string;\n}\nexport interface CardSetSetActiveCardAndField {\n    type: typeof CARDSET_SET_ACTIVE_CARD_AND_FIELD;\n    cardId?: string;\n    isBackActive: boolean;\n    fieldId?: string;\n}\nexport interface CardSetChangeApplyToAllCards {\n    type: typeof CARDSET_CHANGE_APPLY_TO_ALLCARDS;\n    applyToAllCards: boolean;\n}\n\nexport enum SidebarState {\n    Settings,\n    Details,\n    Measurements,\n    Image,\n    Text,\n    Upload,\n    ImportExport,\n    Png,\n    Pdf,\n}\nexport interface CardSetSetSidebarState {\n    type: typeof CARDSET_SET_SIDEBAR_STATE;\n    sidebarState: SidebarState | null;\n}\nexport interface CardSetSetZoom {\n    type: typeof CARDSET_SET_ZOOM;\n    zoom: number;\n}\n\nexport type FPLoadCallback = (id: string) => void;\nexport type FPErrorCallback = (error: string) => void;\nexport type FPProgressCallback = (computable: boolean, loaded: number, total: number) => void;\nexport type FPAbortCallback = () => void;\nexport type FPRevertLoadCallback = () => void;\n\nexport interface CardSetUploadImage {\n    type: typeof CARDSET_UPLOAD_IMAGE;\n    gameId: string;\n    file: File;\n    load: FPLoadCallback;\n    error: FPErrorCallback;\n    progress: FPProgressCallback;\n    abort: FPAbortCallback;\n    cancelToken: CancelToken;\n}\n\nexport interface CardSetDeleteImage {\n    type: typeof CARDSET_DELETE_IMAGE;\n    imageId: string;\n    load: FPRevertLoadCallback;\n    error: FPErrorCallback;\n}\n\nexport interface CardSetUndo {\n    type: typeof CARDSET_UNDO;\n}\n\nexport interface CardSetRedo {\n    type: typeof CARDSET_REDO;\n}\n\nexport interface CardSetUploadImageSuccess {\n    type: typeof CARDSET_UPLOAD_IMAGE_SUCCESS;\n}\n\nexport interface CardSetUploadImageFailure {\n    type: typeof CARDSET_UPLOAD_IMAGE_FAILURE;\n}\n\nexport type CardSetSelectAction = CardSetSelectRequest | CardSetSelectSuccess | { type: typeof CARDSET_SELECT_FAILURE };\n\nexport type CardSetModifyAction =\n    | CardSetCreateCard\n    | CardSetRotateCardsRight\n    | CardSetRotateCardsLeft\n    | CardSetCloneCard\n    | CardSetRemoveCard\n    | CardSetUpdateCardCount\n    | CardSetAddTextField\n    | CardSetAddImageField\n    | CardSetChangeActiveFieldName\n    | CardSetRemoveActiveField\n    | CardSetRaiseActiveField\n    | CardSetRaiseActiveFieldToTop\n    | CardSetLowerActiveField\n    | CardSetLowerActiveFieldToBottom\n    | CardSetLockActiveField\n    | CardSetUnlockActiveField\n    | CardSetChangeFitForActiveField\n    | CardSetChangeCropForActiveField\n    | CardSetChangeUnclickableForActiveField\n    | CardSetChangeWidth\n    | CardSetChangeHeight\n    | CardSetChangeIsTwoSided\n    | CardSetChangeSnappingDistance\n    | CardSetChangeFieldPosition\n    | CardSetChangeFieldPan\n    | CardSetChangeFieldZoom\n    | CardSetChangeFieldSize\n    | CardSetChangeFieldAngle\n    | CardSetChangeActiveTextFieldAlign\n    | CardSetChangeActiveTextFieldColor\n    | CardSetChangeActiveTextFieldFontFamily\n    | CardSetChangeActiveTextFieldFontVariant\n    | CardSetChangeActiveTextFieldFontFamilyAndVariant\n    | CardSetChangeActiveTextFieldFontSize\n    | CardSetChangeActiveTextFieldLineHeight\n    | CardSetChangeText\n    | CardSetChangeImage\n    | CardSetChangeImageBase64\n    | CardSetSetActiveCardAndField\n    | CardSetChangeApplyToAllCards\n    | CardSetSetSidebarState\n    | CardSetSetZoom\n    | CardSetUploadImage\n    | CardSetDeleteImage\n    | CardSetUndo\n    | CardSetRedo\n    | CardSetUploadImageSuccess\n    | CardSetUploadImageFailure;\n\nexport type CardSetAction = CardSetImportData | CardSetSelectAction | CardSetModifyAction;\n\nexport interface ImageListRequest {\n    type: typeof IMAGE_LIST_REQUEST;\n    filter: string;\n    location: string;\n}\nexport interface ImageListSuccess {\n    type: typeof IMAGE_LIST_SUCCESS;\n    images: ImageArray;\n}\nexport type ImageListAction = ImageListRequest | ImageListSuccess | { type: typeof IMAGE_LIST_FAILURE };\n\nexport type Action =\n    | InitAction\n    | LoginAction\n    | SignUpAction\n    | GameAction\n    | CardSetsAction\n    | CardSetAction\n    | ImageListAction\n    | MessageAction;\n\nexport type Dispatch = ReduxDispatch<Action>;\n\nexport const messageDisplay = (type: string, text: string, id?: string): MessageDisplay => {\n    return {\n        type: MESSAGE_DISPLAY,\n        message: {\n            id: id || shortid.generate(),\n            type: type,\n            text: text,\n        },\n    };\n};\n\nexport const initRequest = (): InitAction => {\n    return { type: INIT_REQUEST };\n};\n\nexport const loginRequest = (creds: Credentials): LoginAction => {\n    return {\n        type: LOGIN_REQUEST,\n        creds: creds,\n    };\n};\n\nexport const logoutRequest = (): LoginAction => {\n    return {\n        type: LOGOUT_REQUEST,\n    };\n};\n\nexport const signupRequest = (creds: Credentials): SignUpAction => {\n    return {\n        type: SIGNUP_REQUEST,\n        creds: creds,\n    };\n};\n\nexport const gameCreateRequest = (gamename: string): GameAction => {\n    return {\n        type: GAME_CREATE_REQUEST,\n        gamename: gamename,\n    };\n};\n\nexport const gameDeleteRequest = (gameId: string): GameAction => {\n    return {\n        type: GAME_DELETE_REQUEST,\n        gameId,\n    };\n};\n\nexport const gameRenameRequest = (gameId: string, newName: string): GameAction => {\n    return {\n        type: GAME_RENAME_REQUEST,\n        gameId,\n        newName,\n    };\n};\n\nexport const gameListRequest = (): GameAction => {\n    return {\n        type: GAME_LIST_REQUEST,\n    };\n};\n\nexport const gameSelectRequest = (id: string, updateCardSets: boolean): GameAction => {\n    return {\n        type: GAME_SELECT_REQUEST,\n        id,\n        updateCardSets,\n    };\n};\n\nexport const gameCreatePdfRequest = (\n    collectionType: string,\n    collectionId: string,\n    pageWidth: number,\n    pageHeight: number,\n    topBottomMargin: number,\n    leftRightMargin: number,\n    verticalSpace: number,\n    horizontalSpace: number,\n    includeBleedingArea: boolean,\n    cutMarksForScissors: boolean,\n    cutMarksForGuillotine: boolean,\n    cutMarksInMarginArea: boolean,\n    cutMarksOnFrontSideOnly: boolean,\n): GameCreatePdfRequest => {\n    return {\n        type: GAME_CREATE_PDF_REQUEST,\n        collectionType,\n        collectionId,\n        pageWidth,\n        pageHeight,\n        topBottomMargin,\n        leftRightMargin,\n        verticalSpace,\n        horizontalSpace,\n        includeBleedingArea,\n        cutMarksForScissors,\n        cutMarksForGuillotine,\n        cutMarksInMarginArea,\n        cutMarksOnFrontSideOnly,\n    };\n};\n\nexport const gameCreatePngRequest = (\n    dpi: number,\n    collectionType: string,\n    collectionId: string,\n): GameCreatePngRequest => {\n    return {\n        type: GAME_CREATE_PNG_REQUEST,\n        dpi,\n        collectionType,\n        collectionId,\n    };\n};\n\nexport const gameGetAttributionsRequest = (): GameGetAttributionsRequest => {\n    return {\n        type: GAME_GET_ATTRIBUTIONS_REQUEST,\n    };\n};\n\nexport const cardSetCreateRequest = (\n    cardsetname: string,\n    width: number,\n    height: number,\n    gameId: string,\n): CardSetsAction => {\n    return {\n        type: CARDSET_CREATE_REQUEST,\n        cardsetname: cardsetname,\n        width,\n        height,\n        gameId,\n    };\n};\n\nexport const cardSetDeleteRequest = (cardSetId: string): CardSetsAction => {\n    return {\n        type: CARDSET_DELETE_REQUEST,\n        cardSetId,\n    };\n};\n\nexport const cardSetRenameRequest = (cardSetId: string, newName: string): CardSetsAction => {\n    return {\n        type: CARDSET_RENAME_REQUEST,\n        cardSetId,\n        newName,\n    };\n};\n\nexport const cardSetImportData = (data: object): CardSetImportData => {\n    return {\n        type: CARDSET_IMPORT_DATA,\n        data,\n    };\n};\n\nexport const cardSetSelectRequest = (id: string): CardSetSelectRequest => {\n    return {\n        type: CARDSET_SELECT_REQUEST,\n        id,\n    };\n};\n\nexport const cardSetCreateCard = (card: CardType): CardSetCreateCard => {\n    return {\n        type: CARDSET_CREATE_CARD,\n        card,\n    };\n};\n\nexport const cardSetRotateCardsRight = (): CardSetRotateCardsRight => {\n    return {\n        type: CARDSET_ROTATE_CARDS_RIGHT,\n    };\n};\n\nexport const cardSetRotateCardsLeft = (): CardSetRotateCardsLeft => {\n    return {\n        type: CARDSET_ROTATE_CARDS_LEFT,\n    };\n};\n\nexport const cardSetCloneCard = (card: CardType): CardSetCloneCard => {\n    return {\n        type: CARDSET_CLONE_CARD,\n        card,\n    };\n};\n\nexport const cardSetRemoveCard = (card: CardType): CardSetRemoveCard => {\n    return {\n        type: CARDSET_REMOVE_CARD,\n        card,\n    };\n};\n\nexport const cardSetUpdateCardCount = (card: CardType, count: number): CardSetUpdateCardCount => {\n    return {\n        type: CARDSET_UPDATE_CARD_COUNT,\n        card,\n        count,\n    };\n};\n\nexport const cardSetAddTextField = (): CardSetAddTextField => {\n    return {\n        type: CARDSET_ADD_TEXT_FIELD,\n    };\n};\n\nexport const cardSetAddImageField = (): CardSetAddImageField => {\n    return {\n        type: CARDSET_ADD_IMAGE_FIELD,\n    };\n};\n\nexport const cardSetChangeActiveFieldName = (name: string): CardSetChangeActiveFieldName => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_FIELD_NAME,\n        name,\n    };\n};\n\nexport const cardSetRemoveActiveField = (): CardSetRemoveActiveField => {\n    return {\n        type: CARDSET_REMOVE_ACTIVE_FIELD,\n    };\n};\n\nexport const cardSetRaiseActiveField = (): CardSetRaiseActiveField => {\n    return {\n        type: CARDSET_RAISE_ACTIVE_FIELD,\n    };\n};\n\nexport const cardSetRaiseActiveFieldToTop = (): CardSetRaiseActiveFieldToTop => {\n    return {\n        type: CARDSET_RAISE_ACTIVE_FIELD_TO_TOP,\n    };\n};\n\nexport const cardSetLowerActiveField = (): CardSetLowerActiveField => {\n    return {\n        type: CARDSET_LOWER_ACTIVE_FIELD,\n    };\n};\n\nexport const cardSetLowerActiveFieldToBottom = (): CardSetLowerActiveFieldToBottom => {\n    return {\n        type: CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM,\n    };\n};\n\nexport const cardSetLockActiveField = (): CardSetLockActiveField => {\n    return {\n        type: CARDSET_LOCK_ACTIVE_FIELD,\n    };\n};\n\nexport const cardSetUnlockActiveField = (): CardSetUnlockActiveField => {\n    return {\n        type: CARDSET_UNLOCK_ACTIVE_FIELD,\n    };\n};\n\nexport const cardSetChangeFitForActiveField = (fit: string): CardSetChangeFitForActiveField => {\n    return {\n        type: CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD,\n        fit,\n    };\n};\n\nexport const cardSetChangeCropForActiveField = (crop: boolean): CardSetChangeCropForActiveField => {\n    return {\n        type: CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD,\n        crop,\n    };\n};\n\nexport const cardSetChangeUnclickableForActiveField = (\n    unclickable: boolean,\n): CardSetChangeUnclickableForActiveField => {\n    return {\n        type: CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD,\n        unclickable,\n    };\n};\n\nexport const cardSetChangeWidth = (\n    width: number,\n    maintainAspectRatio: boolean,\n    resizeContent: boolean,\n): CardSetChangeWidth => {\n    return {\n        type: CARDSET_CHANGE_WIDTH,\n        width,\n        maintainAspectRatio,\n        resizeContent,\n    };\n};\n\nexport const cardSetChangeHeight = (\n    height: number,\n    maintainAspectRatio: boolean,\n    resizeContent: boolean,\n): CardSetChangeHeight => {\n    return {\n        type: CARDSET_CHANGE_HEIGHT,\n        height,\n        maintainAspectRatio,\n        resizeContent,\n    };\n};\n\nexport const cardSetChangeIsTwoSided = (isTwoSided: boolean): CardSetChangeIsTwoSided => {\n    return {\n        type: CARDSET_CHANGE_IS_TWO_SIDED,\n        isTwoSided,\n    };\n};\n\nexport const cardSetChangeSnappingDistance = (snappingDistance: number): CardSetChangeSnappingDistance => {\n    return {\n        type: CARDSET_CHANGE_SNAPPING_DISTANCE,\n        snappingDistance,\n    };\n};\n\nexport const cardSetChangeFieldPosition = (\n    cardId: string | undefined,\n    fieldId: string,\n    x: number,\n    y: number,\n    group: string,\n): CardSetChangeFieldPosition => {\n    return {\n        type: CARDSET_CHANGE_FIELD_POSITION,\n        cardId,\n        fieldId,\n        x,\n        y,\n        group,\n    };\n};\n\nexport const cardSetChangeFieldPan = (\n    cardId: string | undefined,\n    fieldId: string,\n    cx: number,\n    cy: number,\n    group: string,\n): CardSetChangeFieldPan => {\n    return {\n        type: CARDSET_CHANGE_FIELD_PAN,\n        cardId,\n        fieldId,\n        cx,\n        cy,\n        group,\n    };\n};\n\nexport const cardSetChangeFieldZoom = (\n    cardId: string | undefined,\n    fieldId: string,\n    zoom: number,\n    group: string,\n): CardSetChangeFieldZoom => {\n    return {\n        type: CARDSET_CHANGE_FIELD_ZOOM,\n        cardId,\n        fieldId,\n        zoom,\n        group,\n    };\n};\n\nexport const cardSetChangeFieldSize = (\n    cardId: string | undefined,\n    fieldId: string,\n    width: number,\n    height: number,\n    group: string,\n): CardSetChangeFieldSize => {\n    return {\n        type: CARDSET_CHANGE_FIELD_SIZE,\n        cardId,\n        fieldId,\n        width,\n        height,\n        group,\n    };\n};\n\nexport const cardSetChangeFieldAngle = (\n    cardId: string | undefined,\n    fieldId: string,\n    angle: number,\n    group: string,\n): CardSetChangeFieldAngle => {\n    return {\n        type: CARDSET_CHANGE_FIELD_ANGLE,\n        cardId,\n        fieldId,\n        angle,\n        group,\n    };\n};\n\nexport const cardSetChangeActiveTextFieldAlign = (align: string): CardSetChangeActiveTextFieldAlign => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN,\n        align,\n    };\n};\n\nexport const cardSetChangeActiveTextFieldColor = (color: string): CardSetChangeActiveTextFieldColor => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR,\n        color,\n    };\n};\n\nexport const cardSetChangeActiveTextFieldFontFamily = (fontFamily: string): CardSetChangeActiveTextFieldFontFamily => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY,\n        fontFamily,\n    };\n};\n\nexport const cardSetChangeActiveTextFieldFontVariant = (\n    fontVariant: string,\n): CardSetChangeActiveTextFieldFontVariant => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT,\n        fontVariant,\n    };\n};\n\nexport const cardSetChangeActiveTextFieldFontFamilyAndVariant = (\n    fontFamily: string,\n    fontVariant: string,\n): CardSetChangeActiveTextFieldFontFamilyAndVariant => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT,\n        fontFamily,\n        fontVariant,\n    };\n};\n\nexport const cardSetChangeActiveTextFieldFontSize = (fontSize: number): CardSetChangeActiveTextFieldFontSize => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE,\n        fontSize,\n    };\n};\n\nexport const cardSetChangeActiveTextFieldLineHeight = (lineHeight: number): CardSetChangeActiveTextFieldLineHeight => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT,\n        lineHeight,\n    };\n};\n\nexport const cardSetChangeText = (cardId: string, fieldId: string, textInfo: TextInfo): CardSetChangeText => {\n    return {\n        type: CARDSET_CHANGE_TEXT,\n        cardId,\n        fieldId,\n        textInfo,\n    };\n};\n\nexport const cardSetChangeImage = (\n    cardId: string | undefined,\n    fieldId: string,\n    imageInfo: ImageInfo,\n): CardSetChangeImage => {\n    return {\n        type: CARDSET_CHANGE_IMAGE,\n        cardId,\n        fieldId,\n        imageInfo,\n    };\n};\n\nexport const cardSetChangeImageBase64 = (\n    cardId: string,\n    fieldId: string,\n    base64?: string,\n): CardSetChangeImageBase64 => {\n    return {\n        type: CARDSET_CHANGE_IMAGE_BASE64,\n        cardId,\n        fieldId,\n        base64,\n    };\n};\n\nexport const cardSetActiveCardAndField = (\n    cardId: string | undefined,\n    isBackActive: boolean,\n    fieldId: string | undefined,\n): CardSetSetActiveCardAndField => {\n    return {\n        type: CARDSET_SET_ACTIVE_CARD_AND_FIELD,\n        cardId,\n        isBackActive,\n        fieldId,\n    };\n};\n\nexport const cardSetChangeApplyToAllCards = (applyToAllCards: boolean): CardSetChangeApplyToAllCards => {\n    return {\n        type: CARDSET_CHANGE_APPLY_TO_ALLCARDS,\n        applyToAllCards,\n    };\n};\n\nexport const cardSetSetSidebarState = (sidebarState: SidebarState | null): CardSetSetSidebarState => {\n    return {\n        type: CARDSET_SET_SIDEBAR_STATE,\n        sidebarState,\n    };\n};\n\nexport const cardSetSetZoom = (zoom: number): CardSetSetZoom => {\n    return {\n        type: CARDSET_SET_ZOOM,\n        zoom,\n    };\n};\n\nexport const cardSetUploadImage = (\n    gameId: string,\n    file: File,\n    load: FPLoadCallback,\n    error: FPErrorCallback,\n    progress: FPProgressCallback,\n    abort: FPAbortCallback,\n    cancelToken: CancelToken,\n): CardSetUploadImage => {\n    return {\n        type: CARDSET_UPLOAD_IMAGE,\n        gameId,\n        file,\n        load,\n        error,\n        progress,\n        abort,\n        cancelToken,\n    };\n};\n\nexport const cardSetDeleteImage = (\n    imageId: string,\n    load: FPRevertLoadCallback,\n    error: FPErrorCallback,\n): CardSetDeleteImage => {\n    return {\n        type: CARDSET_DELETE_IMAGE,\n        imageId,\n        load,\n        error,\n    };\n};\n\nexport const cardSetUndo = (): CardSetUndo => {\n    return {\n        type: CARDSET_UNDO,\n    };\n};\n\nexport const cardSetRedo = (): CardSetRedo => {\n    return {\n        type: CARDSET_REDO,\n    };\n};\n\nexport const imageListRequest = (filter: string, location: string): ImageListAction => {\n    return {\n        type: IMAGE_LIST_REQUEST,\n        filter,\n        location,\n    };\n};\n","export const CURRENT_CARDSET_VERSION = 3;\nexport const DEFAULT_FONT = 'Roboto';\nexport const DEFAULT_FONT_VARIANT = 'regular';\nexport const DEFAULT_FONT_SIZE = 8;\nexport const DEFAULT_LINE_HEIGHT = 1.27;\n\nexport const BLEED_WIDTH = 25.4 / 8; // 1/8th of inch in mm\n","import axios, { AxiosError, CancelToken } from 'axios';\n\nimport { Credentials } from './types';\n\nexport function handleAxiosError(error: AxiosError) {\n    if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        // error.response.status);\n        throw new Error(error.response.data.message);\n    } else if (error.request) {\n        console.log(error.request);\n        throw new Error(error.request);\n    } else {\n        throw new Error('Unknown error :(');\n    }\n}\n\nexport function getTokens(creds: Credentials) {\n    return axios\n        .post('/api/tokens', creds)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function refreshToken(refreshTokenValue: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${refreshTokenValue}` },\n    };\n    return axios\n        .post('/api/access_tokens', {}, config)\n        .then(resp => {\n            return resp.data.accessToken;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function deleteAccessToken(token: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .delete('/api/access_tokens', config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            if (error.response.status === 401) return {};\n            handleAxiosError(error);\n        });\n}\n\nexport function deleteRefreshToken(token: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .delete('/api/refresh_tokens', config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            if (error.response.status === 401) return {};\n            handleAxiosError(error);\n        });\n}\n\nexport function registerUser(creds: Credentials) {\n    return axios\n        .post('/api/users', creds)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function getRequest(url: string, token: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .get(url, config)\n        .then(resp => {\n            return resp;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function postRequest(url: string, token: string, data: object) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .post(url, data, config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function postRequestFormDataCancelable(\n    url: string,\n    token: string,\n    data: FormData,\n    progressCallback: (event: ProgressEvent) => void,\n    cancelToken: CancelToken,\n    cancelCallback: () => void,\n) {\n    let config = {\n        headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'multipart/form-data',\n        },\n        cancelToken,\n        onUploadProgress: progressCallback,\n    };\n\n    return axios\n        .post(url, data, config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            if (axios.isCancel(error)) {\n                cancelCallback();\n            } else {\n                handleAxiosError(error);\n            }\n        });\n}\n\nexport function putRequest(url: string, token: string, data: object) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .put(url, data, config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function deleteRequest(url: string, token: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .delete(url, config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n","import axios from 'axios';\nimport StackTrace from 'stacktrace-js';\n\nimport { ImageFieldInfo, ImageToDraw } from './types';\nimport { store } from './store';\n\nexport function downloadBlob(blobURL: string, filename: string, resolve?: () => void) {\n    const tempLink = document.createElement('a');\n    tempLink.style.display = 'none';\n    tempLink.href = blobURL;\n    tempLink.setAttribute('download', filename);\n    if (typeof tempLink.download === 'undefined') {\n        tempLink.setAttribute('target', '_blank');\n    }\n    document.body.appendChild(tempLink);\n    tempLink.click();\n    document.body.removeChild(tempLink);\n    setTimeout(() => {\n        window.URL.revokeObjectURL(blobURL);\n        if (resolve) resolve();\n    }, 100);\n}\n\nexport function rotateVec(x: number, y: number, a: number) {\n    const sinA = Math.sin(a);\n    const cosA = Math.cos(a);\n    const rx = cosA * x - sinA * y;\n    const ry = sinA * x + cosA * y;\n\n    return { rx, ry };\n}\n\nexport function calculateImageDimensions(imageFieldInfo: ImageFieldInfo | ImageToDraw) {\n    let calculatedImageWidth, calculatedImageHeight;\n    let imageWidth = imageFieldInfo.imageWidth || 1;\n    let imageHeight = imageFieldInfo.imageHeight || 1;\n\n    if (!imageFieldInfo.fit || imageFieldInfo.fit === 'width') {\n        calculatedImageWidth = imageFieldInfo.width;\n        calculatedImageHeight = (imageFieldInfo.width * imageHeight) / imageWidth;\n    } else if (imageFieldInfo.fit === 'height') {\n        calculatedImageWidth = (imageFieldInfo.height * imageWidth) / imageHeight;\n        calculatedImageHeight = imageFieldInfo.height;\n    } else {\n        // strech\n        calculatedImageWidth = imageFieldInfo.width;\n        calculatedImageHeight = imageFieldInfo.height;\n    }\n\n    calculatedImageWidth *= imageFieldInfo.zoom || 1;\n    calculatedImageHeight *= imageFieldInfo.zoom || 1;\n\n    return { width: calculatedImageWidth, height: calculatedImageHeight };\n}\n\nexport class UserError extends Error {}\n\nexport function reportError(error: Error) {\n    if (error instanceof UserError) {\n        return;\n    }\n\n    StackTrace.fromError(error).then(stackframes => {\n        var stringifiedStack = stackframes\n            .map(function(sf) {\n                return sf.toString();\n            })\n            .join('\\n');\n\n        if (process.env.NODE_ENV === 'production') {\n            let state = '';\n            if (store) {\n                state = JSON.stringify(store.getState());\n            }\n            axios.post('/api/reports', { message: error.message, stack: stringifiedStack, state });\n        } else {\n            console.log(stringifiedStack);\n        }\n    });\n}\n","import { Dispatch } from './actions';\n\nexport interface SidebarOwnProps {\n    visible: boolean;\n}\n\nexport interface DispatchProps {\n    dispatch: Dispatch;\n}\n\nexport type IdsArray = string[];\n\nexport interface MessageType {\n    id: string;\n    type: string;\n    text: string;\n}\n\nexport interface GameType {\n    id: string;\n    name: string;\n}\n\nexport interface GamesCollection {\n    [propName: string]: GameType;\n}\n\nexport interface PlaceholderBase {\n    id: string;\n    type: string;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    angle: number;\n    locked?: boolean;\n    name?: string;\n    isOnBack?: boolean;\n}\n\nexport interface TextPlaceholderType extends PlaceholderBase {\n    type: 'text';\n    align: string;\n    color: string;\n    fontFamily: string;\n    fontVariant: string;\n    fontSize: number;\n    lineHeight?: number;\n}\n\nexport interface ImagePlaceholderType extends PlaceholderBase {\n    id: string;\n    type: 'image';\n    fit?: string;\n    zoom?: number;\n    cx?: number;\n    cy?: number;\n    crop?: boolean;\n}\n\nexport type PlaceholderType = TextPlaceholderType | ImagePlaceholderType;\n\nexport interface PlaceholdersCollection {\n    [propName: string]: PlaceholderType;\n}\n\nexport interface TextInfo {\n    value: string;\n}\n\nexport interface PlaceholdersTextInfoCollection {\n    [propName: string]: TextInfo;\n}\n\nexport interface PlaceholdersTextInfoByCardCollection {\n    [propName: string]: PlaceholdersTextInfoCollection;\n}\n\nexport interface ImageInfo {\n    url?: string;\n    global?: boolean;\n    base64?: string;\n    color?: string;\n    width?: number;\n    height?: number;\n}\n\nexport interface PlaceholdersImageInfoCollection {\n    [propName: string]: ImageInfo;\n}\n\nexport interface PlaceholdersImageInfoByCardCollection {\n    [propName: string]: PlaceholdersImageInfoCollection;\n}\n\nexport interface FieldBaseInfo {\n    id: string;\n    type: string;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    angle: number;\n    locked?: boolean;\n    name?: string;\n    isOnBack?: boolean;\n    unclickable?: boolean;\n}\n\nexport interface TextFieldInfo extends FieldBaseInfo {\n    type: 'text';\n    value: string;\n    align: string;\n    color: string;\n    fontFamily: string;\n    fontVariant: string;\n    fontSize: number;\n    lineHeight?: number;\n}\n\nexport interface ImageFieldInfo extends FieldBaseInfo {\n    type: 'image';\n    url?: string;\n    global?: boolean;\n    base64?: string;\n    color?: string;\n    imageWidth?: number;\n    imageHeight?: number;\n    fit?: string;\n    zoom?: number;\n    cx?: number;\n    cy?: number;\n    crop?: boolean;\n}\n\nexport type FieldInfo = TextFieldInfo | ImageFieldInfo;\n\nexport interface FieldInfoCollection {\n    [propName: string]: FieldInfo;\n}\n\nexport interface FieldInfoByCardCollection {\n    [propName: string]: FieldInfoCollection;\n}\n\nexport interface CardType {\n    id: string;\n    count: number;\n}\n\nexport interface CardsCollection {\n    [propName: string]: CardType;\n}\n\nexport interface CardSetType {\n    id: string;\n    name: string;\n}\n\nexport interface CardSetsCollection {\n    [propName: string]: CardSetType;\n}\n\nexport interface Credentials {\n    username: string;\n    password: string;\n}\n\nexport interface Image {\n    id: number;\n    name: string;\n    width: number;\n    height: number;\n}\n\nexport type ImageArray = Image[];\n\nexport interface CardSetData {\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    cardsAllIds: string[];\n    cardsById: CardsCollection;\n    fieldsAllIds: string[];\n    fields: FieldInfoByCardCollection;\n}\n\nexport enum ImageType {\n    SVG,\n    SVG_PATH,\n    IMAGE,\n    BLOCK_START,\n    BLOCK_END,\n}\n\nexport interface ImageToDraw {\n    type: ImageType;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    angle: number;\n    fit?: string;\n    data: string;\n    color?: string;\n    scale?: number;\n    imageWidth?: number;\n    imageHeight?: number;\n    zoom?: number;\n    cx?: number;\n    cy?: number;\n    crop?: boolean;\n}\n","import axios from 'axios';\nimport { downloadBlob, calculateImageDimensions } from './utils';\nimport { delay } from 'redux-saga';\nimport { XmlDocument } from 'xmldoc';\nimport JSZip from 'jszip';\nimport { getRequest } from './requests';\nimport { CardSetData, ImageToDraw, ImageType } from './types';\n\nconst SVG_B64_START = 'data:image/svg+xml;base64,';\n\nexport const generatePdfUsingWorker = (\n    accessToken: string,\n    collectionType: string,\n    collectionId: string,\n    pageWidth: number,\n    pageHeight: number,\n    topBottomMargin: number,\n    leftRightMargin: number,\n    verticalSpace: number,\n    horizontalSpace: number,\n    includeBleedingArea: boolean,\n    cutMarksForScissors: boolean,\n    cutMarksForGuillotine: boolean,\n    cutMarksInMarginArea: boolean,\n    cutMarksOnFrontSideOnly: boolean,\n) => {\n    // @ts-ignore\n    if (!window.Worker) {\n        throw new Error('We can not generate PDF because of browser you use. Try using different browser');\n    }\n\n    return new Promise((resolve, reject) => {\n        try {\n            const worker = new Worker('/js/worker.js');\n            worker.addEventListener('message', event => {\n                if (event.data.type === 'generatePdf') {\n                    const blobURL = event.data.url;\n                    downloadBlob(blobURL, 'card.pdf', resolve);\n                } else if (event.data.type === 'generateError') {\n                    const error = event.data.error;\n                    reject({ message: 'PDF generation failed: ' + event.data.message, stack: error.stack });\n                }\n            });\n\n            worker.postMessage({\n                type: 'generatePdf',\n                accessToken,\n                collectionType,\n                collectionId,\n                pageWidth,\n                pageHeight,\n                topBottomMargin,\n                leftRightMargin,\n                verticalSpace,\n                horizontalSpace,\n                includeBleedingArea,\n                cutMarksForScissors,\n                cutMarksForGuillotine,\n                cutMarksInMarginArea,\n                cutMarksOnFrontSideOnly,\n            });\n        } catch (e) {\n            reject(e);\n        }\n    });\n};\n\nfunction loadImage(url: string): Promise<HTMLImageElement> {\n    return new Promise((resolve, reject) => {\n        const img = new Image();\n        img.onload = () => resolve(img);\n        img.onerror = () => reject();\n\n        img.src = url;\n    });\n}\n\nfunction prepareImageToDrawSpace(context: CanvasRenderingContext2D, imageToDraw: ImageToDraw, ptpmm: number) {\n    context.save();\n    let x = (imageToDraw.x + imageToDraw.width / 2) * ptpmm;\n    let y = (imageToDraw.y + imageToDraw.height / 2) * ptpmm;\n    context.translate(x, y);\n    context.rotate(imageToDraw.angle);\n    let ax = (-imageToDraw.width / 2) * ptpmm;\n    let ay = (-imageToDraw.height / 2) * ptpmm;\n    context.translate(ax, ay);\n    if (imageToDraw.crop) {\n        context.rect(0, 0, imageToDraw.width * ptpmm, imageToDraw.height * ptpmm);\n        context.clip();\n    }\n}\n\nfunction fixWidthAndHeightInSvg(data: string) {\n    const doc = new XmlDocument(data);\n    if (!('width' in doc.attr) || !('height' in doc.attr)) {\n        const viewBox = doc.attr['viewBox'].split(' ');\n        doc.attr['width'] = viewBox[2];\n        doc.attr['height'] = viewBox[3];\n    }\n\n    return btoa(doc.toString({ compressed: true }));\n}\n\nclass PNGGenerator {\n    tasksQueue: {\n        type: string;\n        subType: string;\n        imageToDraw?: ImageToDraw;\n        error?: { message: string; stack: string };\n    }[] = [];\n    worker: Worker;\n\n    constructor() {\n        // @ts-ignore\n        if (!window.Worker) {\n            throw new Error('We can not generate PNG because of browser you use. Try using different browser');\n        }\n\n        this.worker = new Worker('/js/worker.js');\n        this.worker.addEventListener('message', event => {\n            if (event.data.type === 'generateCard' || event.data.type === 'generateError') {\n                this.tasksQueue.push(event.data);\n            }\n        });\n    }\n\n    async generateCard(\n        cardSetData: CardSetData,\n        cardId: string,\n        cardIdx: number,\n        dpi: number,\n        isBack: boolean,\n        cardsetFolder: JSZip,\n    ) {\n        this.worker.postMessage({\n            type: 'generateCard',\n            cardSetData,\n            cardId,\n            isBack,\n        });\n\n        let offscreenCanvas = document.createElement('canvas');\n\n        const calculatedWidth = Math.round(dpi * (cardSetData.width / 25.4 + 1 / 4));\n        const calculatedHeight = Math.round(dpi * (cardSetData.height / 25.4 + 1 / 4));\n\n        offscreenCanvas.width = calculatedWidth;\n        offscreenCanvas.height = calculatedHeight;\n        var context = offscreenCanvas.getContext('2d');\n        if (context === null) {\n            throw new Error('We cannot generate PNG because of unknown reason. Try different browser.');\n        }\n        context.fillStyle = 'white';\n        context.fillRect(0, 0, calculatedWidth, calculatedHeight);\n\n        let stopped = false;\n\n        const ptpmm = dpi / 25.4;\n\n        while (!stopped) {\n            while (this.tasksQueue.length > 0) {\n                let task = this.tasksQueue.shift();\n\n                if (task && task.imageToDraw) {\n                    const imageToDraw = task.imageToDraw;\n\n                    if (imageToDraw.type === ImageType.SVG_PATH) {\n                        prepareImageToDrawSpace(context, imageToDraw, ptpmm);\n                        if (imageToDraw.scale && imageToDraw.color) {\n                            context.fillStyle = imageToDraw.color;\n                            context.scale(imageToDraw.scale * ptpmm, imageToDraw.scale * ptpmm);\n                            var p = new Path2D(imageToDraw.data);\n                            context.fill(p);\n                        }\n                        context.restore();\n                    } else if (imageToDraw.type === ImageType.IMAGE || imageToDraw.type === ImageType.SVG) {\n                        prepareImageToDrawSpace(context, imageToDraw, ptpmm);\n\n                        if (imageToDraw.cx !== undefined && imageToDraw.cy !== undefined) {\n                            context.translate(imageToDraw.cx * ptpmm, imageToDraw.cy * ptpmm);\n                        }\n                        let dim = calculateImageDimensions(imageToDraw);\n\n                        let image;\n                        if (imageToDraw.type === ImageType.SVG) {\n                            let svgData = fixWidthAndHeightInSvg(atob(imageToDraw.data));\n                            image = await loadImage(SVG_B64_START + svgData);\n                        } else {\n                            let resp = await axios.get(imageToDraw.data);\n                            if (resp.headers['content-type'] === 'image/svg+xml') {\n                                let svgData = fixWidthAndHeightInSvg(resp.data);\n                                image = await loadImage(SVG_B64_START + svgData);\n                            } else {\n                                image = await loadImage(imageToDraw.data);\n                            }\n                        }\n\n                        context.drawImage(image, 0, 0, dim.width * ptpmm, dim.height * ptpmm);\n\n                        context.restore();\n                    } else if (imageToDraw.type === ImageType.BLOCK_START) {\n                        prepareImageToDrawSpace(context, imageToDraw, ptpmm);\n                    } else if (imageToDraw.type === ImageType.BLOCK_END) {\n                        context.restore();\n                    }\n                }\n\n                if (task && task.subType === 'stop') {\n                    stopped = true;\n                }\n\n                if (task && task.type === 'generateError' && task.error) {\n                    let error = Error('Failed to generate PNG: ' + task.error.message);\n                    error.stack = task.error.stack;\n                    throw error;\n                }\n            }\n            if (!stopped) {\n                await delay(100);\n            }\n        }\n\n        let dataUrl = offscreenCanvas.toDataURL();\n        dataUrl = dataUrl.slice('data:image/png;base64,'.length);\n        cardsetFolder.file(\n            `${cardIdx.toString().padStart(4, '0')}_${cardId}_${isBack ? 'back' : 'front'}.png`,\n            dataUrl,\n            { base64: true },\n        );\n    }\n\n    async generateGame(accessToken: string, gameId: string, dpi: number, zip: JSZip) {\n        let resp = await getRequest('/api/games/' + gameId, accessToken);\n        if (!resp) return;\n\n        const cardsetsList = resp.data.cardsets;\n        for (const cardsetInfo of cardsetsList) {\n            await this.generateCardset(accessToken, cardsetInfo.id, dpi, zip);\n        }\n    }\n\n    async generateCardset(accessToken: string, cardsetId: string, dpi: number, zip: JSZip) {\n        const resp = await getRequest('/api/cardsets/' + cardsetId, accessToken);\n        if (!resp) return;\n\n        let cardSetData: CardSetData = JSON.parse(resp.data.data);\n\n        let cardsetFolder = zip.folder(resp.data.name);\n\n        for (const [cardIdx, cardId] of cardSetData.cardsAllIds.entries()) {\n            await this.generateCard(cardSetData, cardId, cardIdx, dpi, false, cardsetFolder);\n            if (cardSetData.isTwoSided) {\n                await this.generateCard(cardSetData, cardId, cardIdx, dpi, true, cardsetFolder);\n            }\n        }\n    }\n}\n\nexport const generatePngUsingWorker = async (\n    accessToken: string,\n    collectionType: string,\n    collectionId: string,\n    dpi: number,\n) => {\n    const pngGenerator = new PNGGenerator();\n\n    let zip = new JSZip();\n\n    if (collectionType === 'games') {\n        await pngGenerator.generateGame(accessToken, collectionId, dpi, zip);\n    } else if (collectionType === 'cardsets') {\n        await pngGenerator.generateCardset(accessToken, collectionId, dpi, zip);\n    }\n\n    let blob = await zip.generateAsync({ type: 'blob' });\n    let url = window.URL.createObjectURL(blob);\n    downloadBlob(url, 'cards.zip');\n};\n\nexport const retrieveGameAttributions = async (accessToken: string, gameId: string): Promise<string[]> => {\n    let resp = await getRequest('/api/games/' + gameId, accessToken);\n    if (!resp) return [];\n\n    let attributions = new Set();\n\n    const cardsetsList = resp.data.cardsets;\n    for (const cardsetInfo of cardsetsList) {\n        const resp = await getRequest('/api/cardsets/' + cardsetInfo.id, accessToken);\n        if (!resp) {\n            continue;\n        }\n\n        const cardSetData: CardSetData = JSON.parse(resp.data.data);\n        for (const cardId in cardSetData.fields) {\n            const cardFields = cardSetData.fields[cardId];\n            for (const fieldId in cardFields) {\n                const fieldInfo = cardFields[fieldId];\n                if (fieldInfo.type === 'image' && fieldInfo.url !== undefined) {\n                    let name = fieldInfo.url.replace('/api/imagefiles/', '');\n\n                    const resp = await getRequest('/api/images/' + name, accessToken);\n                    if (!resp) {\n                        continue;\n                    }\n\n                    if (resp.data.metadata) {\n                        let meta = JSON.parse(resp.data.metadata);\n                        if (meta.source === 'noto-emoji') {\n                            attributions.add('Google Noto Emoji');\n                        } else if (meta.source === 'twemoji') {\n                            attributions.add('Twitter Emoji');\n                        } else if (meta.source === 'game-icons' && meta.attribution) {\n                            attributions.add(meta.attribution);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return Array.from(attributions);\n};\n","export function saveTokens(data: { accessToken: string; refreshToken: string }) {\n    localStorage.setItem('accessToken', data.accessToken);\n    localStorage.setItem('refreshToken', data.refreshToken);\n}\n\nexport function saveUsername(username: string) {\n    localStorage.setItem('username', username);\n}\n\nexport function saveAccessToken(accessToken: string) {\n    localStorage.setItem('accessToken', accessToken);\n}\n\nexport function cleanTokens() {\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n}\n\nexport function cleanUsername() {\n    localStorage.removeItem('username');\n}\n\nexport function getTokenFromStorage() {\n    let token = localStorage.getItem('accessToken') || null;\n    return token;\n}\n\nexport function getRefreshTokenFromStorage() {\n    let token = localStorage.getItem('refreshToken') || null;\n    return token;\n}\n\nexport function getUsernameFromStorage() {\n    let username = localStorage.getItem('username') || null;\n    return username;\n}\n","import WebFont from 'webfontloader';\n\nimport { DEFAULT_FONT } from './constants';\nimport { CardSetSelectSuccessDataV3 } from './actions';\n\nconst webFontsLoadPromise = (config: WebFont.Config) =>\n    new Promise((resolve, reject) => {\n        WebFont.load({ ...config, active: resolve, inactive: reject });\n    });\n\nexport const loadFontsUsedInPlaceholders = (data: CardSetSelectSuccessDataV3) => {\n    if (!('fieldsAllIds' in data)) {\n        return;\n    }\n\n    let fontsToLoad: Set<string> = new Set();\n    fontsToLoad.add(DEFAULT_FONT);\n    for (const fieldId of data.fieldsAllIds) {\n        const field = data.fields[data.cardsAllIds[0]][fieldId];\n        if (field && field.type === 'text' && field.fontFamily) {\n            let fontToLoad = field.fontFamily;\n            if (field.fontVariant && field.fontVariant !== 'regular') {\n                fontToLoad += ':' + field.fontVariant;\n            }\n\n            fontsToLoad.add(fontToLoad);\n        }\n    }\n\n    const config: WebFont.Config = {\n        google: {\n            families: [...Array.from(fontsToLoad)],\n        },\n    };\n\n    return webFontsLoadPromise(config);\n};\n","import { CancelToken } from 'axios';\nimport { XmlDocument, XmlNode } from 'xmldoc';\nimport { all, call, put, select, takeEvery, takeLatest } from 'redux-saga/effects';\nimport { delay, SagaIterator } from 'redux-saga';\nimport jwtDecode from 'jwt-decode';\nimport { ActionCreators } from 'redux-undo';\n\nimport { BLEED_WIDTH, CURRENT_CARDSET_VERSION } from './constants';\nimport {\n    CARDSET_ADD_IMAGE_FIELD,\n    CARDSET_ADD_TEXT_FIELD,\n    CARDSET_CHANGE_ACTIVE_FIELD_NAME,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT,\n    CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD,\n    CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD,\n    CARDSET_CHANGE_HEIGHT,\n    CARDSET_CHANGE_IMAGE,\n    CARDSET_CHANGE_IS_TWO_SIDED,\n    CARDSET_CHANGE_FIELD_ANGLE,\n    CARDSET_CHANGE_FIELD_SIZE,\n    CARDSET_CHANGE_SNAPPING_DISTANCE,\n    CARDSET_CHANGE_TEXT,\n    CARDSET_CHANGE_WIDTH,\n    CARDSET_CLONE_CARD,\n    CARDSET_CREATE_CARD,\n    CARDSET_CREATE_FAILURE,\n    CARDSET_CREATE_REQUEST,\n    CARDSET_CREATE_SUCCESS,\n    CARDSET_DELETE_IMAGE,\n    CARDSET_DELETE_REQUEST,\n    CARDSET_IMPORT_DATA,\n    CARDSET_LIST_RESET,\n    CARDSET_LIST_SUCCESS,\n    CARDSET_LOCK_ACTIVE_FIELD,\n    CARDSET_LOWER_ACTIVE_FIELD,\n    CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM,\n    CARDSET_RAISE_ACTIVE_FIELD,\n    CARDSET_RAISE_ACTIVE_FIELD_TO_TOP,\n    CARDSET_REMOVE_ACTIVE_FIELD,\n    CARDSET_REMOVE_CARD,\n    CARDSET_RENAME_REQUEST,\n    CARDSET_SELECT_FAILURE,\n    CARDSET_SELECT_REQUEST,\n    CARDSET_SELECT_SUCCESS,\n    CARDSET_SET_ZOOM,\n    CARDSET_UNLOCK_ACTIVE_FIELD,\n    CARDSET_UPDATE_CARD_COUNT,\n    CARDSET_UPLOAD_IMAGE,\n    CARDSET_UPLOAD_IMAGE_FAILURE,\n    CARDSET_UPLOAD_IMAGE_SUCCESS,\n    CardSetChangeFitForActiveField,\n    CardSetChangeImage,\n    CardSetCreateRequest,\n    CardSetDeleteImage,\n    CardSetDeleteRequest,\n    CardSetRenameRequest,\n    CardSetSelectRequest,\n    CardSetUploadImage,\n    GAME_CREATE_PDF_FAILURE,\n    GAME_CREATE_PDF_REQUEST,\n    GAME_CREATE_PDF_SUCCESS,\n    GAME_CREATE_PNG_FAILURE,\n    GAME_CREATE_PNG_REQUEST,\n    GAME_GET_ATTRIBUTIONS_REQUEST,\n    GAME_CREATE_PNG_SUCCESS,\n    GAME_CREATE_REQUEST,\n    GAME_CREATE_SUCCESS,\n    GAME_DELETE_REQUEST,\n    GAME_LIST_FAILURE,\n    GAME_LIST_REQUEST,\n    GAME_LIST_RESET,\n    GAME_LIST_SUCCESS,\n    GAME_RENAME_REQUEST,\n    GAME_SELECT_FAILURE,\n    GAME_SELECT_REQUEST,\n    GAME_SELECT_SUCCESS,\n    GameCreatePdfRequest,\n    GameCreatePngRequest,\n    GameCreateRequest,\n    GameDeleteRequest,\n    GameRenameRequest,\n    GameSelectRequest,\n    IMAGE_LIST_FAILURE,\n    IMAGE_LIST_REQUEST,\n    IMAGE_LIST_SUCCESS,\n    INIT_REQUEST,\n    ImageListRequest,\n    LOGIN_FAILURE,\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGOUT_FAILURE,\n    LOGOUT_REQUEST,\n    LOGOUT_SUCCESS,\n    LoginRequest,\n    MESSAGE_DISPLAY,\n    MESSAGE_HIDE,\n    MessageDisplay,\n    SIGNUP_FAILURE,\n    SIGNUP_REQUEST,\n    SIGNUP_SUCCESS,\n    SignUpRequest,\n    cardSetChangeImageBase64,\n    gameSelectRequest,\n    messageDisplay,\n    CARDSET_CHANGE_FIELD_PAN,\n    CARDSET_CHANGE_FIELD_ZOOM,\n    CARDSETS_SELECT_SUCCESS,\n    CARDSET_CHANGE_FIELD_POSITION,\n    CardSetSelectSuccessData,\n    CardSetSelectSuccessDataV2,\n    CardSetSelectSuccessDataV3,\n    CARDSET_UNDO,\n    CARDSET_REDO,\n    CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD,\n    CARDSET_ROTATE_CARDS_RIGHT,\n    CARDSET_ROTATE_CARDS_LEFT,\n    GAME_GET_ATTRIBUTIONS_SUCCESS,\n    GAME_GET_ATTRIBUTIONS_FAILURE,\n} from './actions';\nimport { CardSetType, CardSetsCollection, GameType, GamesCollection, FieldInfoByCardCollection } from './types';\nimport { State } from './reducers';\nimport {\n    deleteAccessToken,\n    deleteRefreshToken,\n    deleteRequest,\n    getRequest,\n    getTokens,\n    postRequest,\n    postRequestFormDataCancelable,\n    putRequest,\n    refreshToken,\n    registerUser,\n} from './requests';\nimport { generatePdfUsingWorker, generatePngUsingWorker, retrieveGameAttributions } from './workerController';\nimport {\n    getTokenFromStorage,\n    getRefreshTokenFromStorage,\n    saveAccessToken,\n    saveTokens,\n    cleanTokens,\n    saveUsername,\n    getUsernameFromStorage,\n} from './storage';\nimport { loadFontsUsedInPlaceholders } from './fontLoader';\nimport { reportError, UserError } from './utils';\n\n// Messages\nexport function* putError(e: Error): SagaIterator {\n    yield put(messageDisplay('error', e.message));\n    yield call(reportError, e);\n}\n\nexport function* putInfo(message: string): SagaIterator {\n    yield put(messageDisplay('info', message));\n}\n\nexport function* putProgress(text: string): SagaIterator {\n    const message = messageDisplay('progress', text, text);\n    yield put(message);\n    return message.message.id;\n}\n\nexport function* hideProgress(messageId: string): SagaIterator {\n    yield put({ type: MESSAGE_HIDE, messageId });\n}\n\nexport function* handleMessageDisplay(action: MessageDisplay): SagaIterator {\n    if (action.message.type === 'progress') return;\n\n    yield call(delay, 5000);\n    yield put({ type: MESSAGE_HIDE, messageId: action.message.id });\n}\n\n// Login & Signup\n// Token handling\n\nexport function validateToken(token: string): boolean {\n    try {\n        const decoded = jwtDecode<{ exp: number }>(token);\n        const valid = decoded.exp - new Date().getTime() / 1000 > 5;\n        return valid;\n    } catch (e) {\n        return false;\n    }\n}\n\nexport function* getToken(withErrorIfMissing: boolean, getFreshToken = false): SagaIterator {\n    const token = yield call(getTokenFromStorage);\n    if (token && !getFreshToken) {\n        const tokenValid = yield call(validateToken, token);\n        if (tokenValid) return token;\n    }\n\n    const refreshTokenValue = yield call(getRefreshTokenFromStorage);\n    if (!refreshTokenValue) {\n        yield put({ type: LOGOUT_REQUEST });\n        if (withErrorIfMissing) {\n            throw new UserError('User not logged in.');\n        }\n        return null;\n    }\n\n    const refreshTokenValid = yield call(validateToken, refreshTokenValue);\n    if (!refreshTokenValid) {\n        yield put({ type: LOGOUT_REQUEST });\n        if (withErrorIfMissing) {\n            throw new UserError('User not logged in.');\n        }\n        return null;\n    }\n\n    const newToken = yield call(refreshToken, refreshTokenValue);\n    yield call(saveAccessToken, newToken);\n    return newToken;\n}\n\n// Login\n\nexport function* handleLoginRequest(action: LoginRequest): SagaIterator {\n    try {\n        const data = yield call(getTokens, action.creds);\n        yield call(saveTokens, data);\n        yield call(saveUsername, action.creds.username);\n        yield put({ type: LOGIN_SUCCESS, username: action.creds.username });\n    } catch (e) {\n        yield put({ type: LOGIN_FAILURE });\n        yield call(putError, e);\n    }\n}\n\nexport function* handleLoginSuccess(): SagaIterator {\n    yield put({ type: GAME_LIST_REQUEST });\n}\n\n// Logout\n\nexport function* logoutToken(): SagaIterator {\n    const token = yield call(getTokenFromStorage);\n    if (token) {\n        const tokenValid = yield call(validateToken, token);\n        if (tokenValid) {\n            yield call(deleteAccessToken, token);\n        }\n    }\n}\n\nexport function* logoutRefreshToken(): SagaIterator {\n    const refreshTokenValue = yield call(getRefreshTokenFromStorage);\n    if (refreshTokenValue) {\n        const refreshTokenValid = yield call(validateToken, refreshTokenValue);\n        if (refreshTokenValid) {\n            yield call(deleteRefreshToken, refreshTokenValue);\n        }\n    }\n}\n\nexport function* handleLogoutRequest(): SagaIterator {\n    try {\n        yield call(logoutToken);\n        yield call(logoutRefreshToken);\n        yield call(cleanTokens);\n\n        yield put({ type: CARDSET_LIST_RESET });\n        yield put({ type: GAME_LIST_RESET });\n        yield put({ type: LOGOUT_SUCCESS });\n    } catch (e) {\n        yield put({ type: LOGOUT_FAILURE });\n        yield call(putError, e);\n    }\n}\n\n// Sign-up\n\nexport function* handleSignupRequest(action: SignUpRequest): SagaIterator {\n    try {\n        const data = yield call(registerUser, action.creds);\n        yield call(saveTokens, data);\n        yield call(saveUsername, action.creds.username);\n        yield put({ type: SIGNUP_SUCCESS });\n        yield put({ type: LOGIN_SUCCESS, username: action.creds.username });\n    } catch (e) {\n        yield put({ type: SIGNUP_FAILURE });\n        yield call(putError, e);\n    }\n}\n\n// Init\nexport function* handleInitRequest(): SagaIterator {\n    try {\n        let token = yield call(getToken, false);\n        if (token) {\n            const username = yield call(getUsernameFromStorage);\n            yield put({ type: LOGIN_SUCCESS, username });\n        }\n    } catch (e) {}\n}\n\n// Authorized Requests\nexport function* authorizedGetRequest(url: string): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(getRequest, url, token);\n}\n\nexport function* authorizedPostRequest(url: string, data: object): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(postRequest, url, token, data);\n}\n\nexport function* authorizedDeleteRequest(url: string): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(deleteRequest, url, token);\n}\n\nexport function* authorizedPostFormDataRequest(\n    url: string,\n    data: FormData,\n    progressCallback: (event: ProgressEvent) => void,\n    cancelToken: CancelToken,\n    cancelCallback: () => void,\n): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(postRequestFormDataCancelable, url, token, data, progressCallback, cancelToken, cancelCallback);\n}\n\nexport function* authorizedPutRequest(url: string, data: object): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(putRequest, url, token, data);\n}\n\n// Game\nexport function* handleGameCreateRequest(action: GameCreateRequest): SagaIterator {\n    try {\n        yield call(authorizedPostRequest, '/api/games', { name: action.gamename });\n        yield put({\n            type: GAME_CREATE_SUCCESS,\n        });\n        yield put({ type: GAME_LIST_REQUEST });\n    } catch (e) {\n        yield call(putError, e);\n    }\n}\n\nexport function* handleGameDeleteRequest(action: GameDeleteRequest): SagaIterator {\n    try {\n        yield call(authorizedDeleteRequest, '/api/games/' + action.gameId);\n        yield put({ type: GAME_LIST_REQUEST });\n    } catch (e) {\n        yield call(putError, e);\n    }\n}\n\nexport function* handleGameRenameRequest(action: GameRenameRequest): SagaIterator {\n    try {\n        yield call(delay, 500);\n        yield call(authorizedPutRequest, '/api/games/' + action.gameId, { name: action.newName });\n    } catch (e) {\n        yield call(putError, e);\n    }\n}\n\nexport function* handleGameListRequest(): SagaIterator {\n    try {\n        const resp = yield call(authorizedGetRequest, '/api/games');\n        const allIds = resp.data.games.map((g: GameType) => g.id);\n        const byId = resp.data.games.reduce((obj: GamesCollection, g: GameType) => {\n            obj[g.id] = g;\n            return obj;\n        }, {});\n        yield put({\n            type: GAME_LIST_SUCCESS,\n            allIds,\n            byId,\n        });\n    } catch (e) {\n        yield put({ type: GAME_LIST_FAILURE });\n        yield call(putError, e);\n    }\n}\n\nexport function* handleGameSelectRequest(action: GameSelectRequest): SagaIterator {\n    try {\n        const resp = yield call(authorizedGetRequest, '/api/games/' + action.id);\n        yield put({\n            type: GAME_SELECT_SUCCESS,\n            id: action.id,\n        });\n\n        if (action.updateCardSets) {\n            const allIds = resp.data.cardsets.map((g: CardSetType) => g.id);\n            const byId = resp.data.cardsets.reduce((obj: CardSetsCollection, g: CardSetType) => {\n                obj[g.id] = g;\n                return obj;\n            }, {});\n            yield put({\n                type: CARDSET_LIST_SUCCESS,\n                allIds,\n                byId,\n            });\n        }\n    } catch (e) {\n        yield put({ type: GAME_SELECT_FAILURE });\n        yield call(putError, e);\n    }\n}\n\nexport function* handleGameCreatePdfRequest(action: GameCreatePdfRequest): SagaIterator {\n    let progressId = null;\n    try {\n        progressId = yield call(putProgress, 'Generating PDF');\n\n        const token = yield call(getToken, true, true);\n\n        yield call(\n            generatePdfUsingWorker,\n            token,\n            action.collectionType,\n            action.collectionId,\n            action.pageWidth,\n            action.pageHeight,\n            action.topBottomMargin,\n            action.leftRightMargin,\n            action.verticalSpace,\n            action.horizontalSpace,\n            action.includeBleedingArea,\n            action.cutMarksForScissors,\n            action.cutMarksForGuillotine,\n            action.cutMarksInMarginArea,\n            action.cutMarksOnFrontSideOnly,\n        );\n        yield call(hideProgress, progressId);\n        yield call(putInfo, 'PDF generated.');\n        yield put({\n            type: GAME_CREATE_PDF_SUCCESS,\n        });\n    } catch (e) {\n        yield put({ type: GAME_CREATE_PDF_FAILURE });\n        if (progressId !== null) yield call(hideProgress, progressId);\n        yield call(putError, e);\n    }\n}\n\nexport function* handleGameCreatePngRequest(action: GameCreatePngRequest): SagaIterator {\n    let progressId = null;\n    try {\n        progressId = yield call(putProgress, 'Generating PNG');\n\n        const token = yield call(getToken, true, true);\n\n        yield call(generatePngUsingWorker, token, action.collectionType, action.collectionId, action.dpi);\n        yield call(hideProgress, progressId);\n        yield call(putInfo, 'PNG generated.');\n        yield put({\n            type: GAME_CREATE_PNG_SUCCESS,\n        });\n    } catch (e) {\n        yield put({ type: GAME_CREATE_PNG_FAILURE });\n        if (progressId !== null) yield call(hideProgress, progressId);\n        yield call(putError, e);\n    }\n}\n\nexport function* handleGameGetAttributionsRequest(): SagaIterator {\n    let progressId = null;\n    try {\n        progressId = yield call(putProgress, 'Retrieving attributions');\n\n        const token = yield call(getToken, true, true);\n        const state: State = yield select();\n\n        let attributions = [];\n        if (state.games.active !== null) {\n            attributions = yield call(retrieveGameAttributions, token, state.games.active);\n        }\n        yield call(hideProgress, progressId);\n        yield call(putInfo, 'Attributions retrieved.');\n        yield put({\n            type: GAME_GET_ATTRIBUTIONS_SUCCESS,\n            attributions,\n        });\n    } catch (e) {\n        yield put({ type: GAME_GET_ATTRIBUTIONS_FAILURE });\n        if (progressId !== null) yield call(hideProgress, progressId);\n        yield call(putError, e);\n    }\n}\n\n// Card Set\n\nexport function* handleCardSetCreateRequest(action: CardSetCreateRequest): SagaIterator {\n    try {\n        yield call(authorizedPostRequest, '/api/cardsets', {\n            name: action.cardsetname,\n            gameId: action.gameId,\n            data: JSON.stringify({ width: action.width, height: action.height, version: CURRENT_CARDSET_VERSION }),\n        });\n        yield put({\n            type: CARDSET_CREATE_SUCCESS,\n        });\n        yield put(gameSelectRequest(action.gameId, true));\n    } catch (e) {\n        yield put({ type: CARDSET_CREATE_FAILURE });\n        yield call(putError, e);\n    }\n}\n\nexport function* handleCardSetDeleteRequest(action: CardSetDeleteRequest): SagaIterator {\n    try {\n        yield call(authorizedDeleteRequest, '/api/cardsets/' + action.cardSetId);\n        yield put({ type: GAME_LIST_REQUEST });\n\n        const state = yield select();\n        yield put(gameSelectRequest(state.games.active, true));\n    } catch (e) {\n        yield call(putError, e);\n    }\n}\n\nexport function* handleCardSetRenameRequest(action: CardSetRenameRequest): SagaIterator {\n    try {\n        yield call(delay, 500);\n        yield call(authorizedPutRequest, '/api/cardsets/' + action.cardSetId, { name: action.newName });\n    } catch (e) {\n        yield call(putError, e);\n    }\n}\n\nfunction loadImageInfo(url: string): Promise<{ width: number; height: number }> {\n    return new Promise((resolve, reject) => {\n        try {\n            let img = new Image();\n\n            img.addEventListener('load', function() {\n                resolve({\n                    width: this.naturalWidth,\n                    height: this.naturalHeight,\n                });\n            });\n            img.src = url;\n        } catch (e) {\n            reject(e);\n        }\n    });\n}\n\nexport async function processData(data: CardSetSelectSuccessData): Promise<CardSetSelectSuccessDataV3> {\n    let processedData = data;\n\n    if (!('version' in processedData)) {\n        if (!('placeholdersAllIds' in processedData) && 'placeholders' in processedData) {\n            (processedData as CardSetSelectSuccessDataV2).placeholdersAllIds = Object.keys(\n                (processedData as CardSetSelectSuccessDataV2).placeholders,\n            );\n        }\n\n        (processedData as CardSetSelectSuccessDataV2).version = 2;\n        for (const plId in (processedData as CardSetSelectSuccessDataV2).placeholders) {\n            const placeholder = (processedData as CardSetSelectSuccessDataV2).placeholders[plId];\n            placeholder.x += BLEED_WIDTH;\n            placeholder.y += BLEED_WIDTH;\n        }\n    }\n\n    if (processedData.version === 2) {\n        let fieldsAllIds = processedData.placeholdersAllIds;\n        let fields: FieldInfoByCardCollection = {};\n\n        for (const cardId of processedData.cardsAllIds) {\n            fields[cardId] = {};\n\n            for (const fieldId of fieldsAllIds) {\n                let placeholder = processedData.placeholders[fieldId];\n                if (placeholder.type === 'image') {\n                    if (cardId in processedData.images && fieldId in processedData.images[cardId]) {\n                        let imageInfo = processedData.images[cardId][fieldId];\n                        fields[cardId][fieldId] = {\n                            type: 'image',\n                            ...placeholder,\n                            url: imageInfo && imageInfo.url,\n                            global: imageInfo && imageInfo.global,\n                            base64: imageInfo && imageInfo.base64,\n                            color: imageInfo && imageInfo.color,\n                            imageWidth: imageInfo && imageInfo.width,\n                            imageHeight: imageInfo && imageInfo.height,\n                        };\n                    } else {\n                        fields[cardId][fieldId] = {\n                            type: 'image',\n                            ...placeholder,\n                        };\n                    }\n                } else if (placeholder.type === 'text') {\n                    if (cardId in processedData.texts && fieldId in processedData.texts[cardId]) {\n                        fields[cardId][fieldId] = {\n                            type: 'text',\n                            ...placeholder,\n                            ...processedData.texts[cardId][fieldId],\n                        };\n                    } else {\n                        fields[cardId][fieldId] = {\n                            type: 'text',\n                            ...placeholder,\n                            value: '',\n                        };\n                    }\n                }\n            }\n        }\n\n        processedData = {\n            version: 3,\n            width: processedData.width,\n            height: processedData.height,\n            isTwoSided: processedData.isTwoSided,\n            snappingDistance: processedData.snappingDistance,\n            cardsAllIds: processedData.cardsAllIds,\n            cardsById: processedData.cardsById,\n            fields,\n            fieldsAllIds,\n            zoom: processedData.zoom,\n        };\n    }\n\n    // We must load image data on each new load because user can upload new images\n    // that have different dimensions.\n    for (const cardId in processedData.fields) {\n        for (const fieldId in processedData.fields[cardId]) {\n            const fieldInfo = processedData.fields[cardId][fieldId];\n            if (fieldInfo.type === 'image' && fieldInfo.url) {\n                let info = await loadImageInfo(fieldInfo.url);\n                if (info.width !== fieldInfo.imageWidth || info.height !== fieldInfo.imageHeight) {\n                    fieldInfo.imageWidth = info.width;\n                    fieldInfo.imageHeight = info.height;\n                    fieldInfo.cx = 0;\n                    fieldInfo.cy = 0;\n                    fieldInfo.zoom = 1;\n                }\n            }\n        }\n    }\n\n    return processedData;\n}\n\nexport function* handleCardSetSelectRequest(action: CardSetSelectRequest): SagaIterator {\n    try {\n        const resp = yield call(authorizedGetRequest, '/api/cardsets/' + action.id);\n        let parsedData = JSON.parse(resp.data.data);\n        let processedData: CardSetSelectSuccessDataV3 = yield call(processData, parsedData);\n\n        yield call(loadFontsUsedInPlaceholders, processedData);\n        yield put({\n            type: CARDSETS_SELECT_SUCCESS,\n            id: resp.data.id,\n            name: resp.data.name,\n        });\n        yield put({\n            type: CARDSET_SELECT_SUCCESS,\n            data: processedData,\n        });\n        yield put(gameSelectRequest(resp.data.gameId, false));\n        yield put(ActionCreators.clearHistory());\n    } catch (e) {\n        yield put({ type: CARDSET_SELECT_FAILURE });\n        yield call(putError, e);\n    }\n}\n\nexport function* handleCardSetUploadImage(action: CardSetUploadImage): SagaIterator {\n    let progressId = null;\n    try {\n        progressId = yield call(putProgress, `Uploading ${action.file.name}`);\n        const formData = new FormData();\n        formData.set('gameId', action.gameId);\n        formData.append('image', action.file, action.file.name);\n\n        const data = yield call(\n            authorizedPostFormDataRequest,\n            '/api/images',\n            formData,\n            (event: ProgressEvent) => action.progress(event.lengthComputable, event.loaded, event.total),\n            action.cancelToken,\n            () => {\n                action.abort();\n            },\n        );\n        if (data !== undefined) {\n            // not cancelled\n            action.load(data.imageId.toString());\n            yield put({ type: CARDSET_UPLOAD_IMAGE_SUCCESS });\n            yield call(putInfo, `${action.file.name} uploaded`);\n        }\n        yield call(hideProgress, progressId);\n    } catch (e) {\n        yield put({ type: CARDSET_UPLOAD_IMAGE_FAILURE });\n        if (progressId !== null) yield call(hideProgress, progressId);\n        yield call(putError, e);\n        action.error(e.message);\n    }\n}\n\nexport function* handleCardSetDeleteImage(action: CardSetDeleteImage): SagaIterator {\n    try {\n        yield call(authorizedDeleteRequest, '/api/images/' + action.imageId);\n        action.load();\n    } catch (e) {\n        action.error(e.message);\n    }\n}\n\nfunction walkChildren(node: XmlNode, color: string) {\n    if (node.type === 'element') {\n        for (let child of node.children) {\n            if (child.type === 'element')\n                if (child.name === 'path') {\n                    child.attr['fill'] = color;\n                }\n            walkChildren(child, color);\n        }\n    }\n}\n\nfunction adjustSvg(data: string, preserveAspectRatio: boolean, color?: string): string {\n    const doc = new XmlDocument(data);\n    if (!preserveAspectRatio) {\n        doc.attr['preserveAspectRatio'] = 'none';\n    }\n\n    if (color) {\n        walkChildren(doc, color);\n    }\n\n    return btoa(doc.toString({ compressed: true }));\n}\n\nexport function* handleCardSetFitChange(action: CardSetChangeFitForActiveField): SagaIterator {\n    try {\n        yield call(delay, 100);\n        const state: State = yield select();\n\n        if (state.cardset.present.activeFieldId === undefined) {\n            return;\n        }\n\n        for (const cardId in state.cardset.present.cardsById) {\n            const fieldInfo = state.cardset.present.fields[cardId][state.cardset.present.activeFieldId];\n            if (fieldInfo.type === 'image' && fieldInfo.url) {\n                const imageResp = yield call(authorizedGetRequest, fieldInfo.url);\n                if (imageResp.headers['content-type'] === 'image/svg+xml') {\n                    if (action.fit === 'stretch') {\n                        const svg = adjustSvg(imageResp.data, false, fieldInfo.color);\n                        yield put(cardSetChangeImageBase64(cardId, state.cardset.present.activeFieldId, svg));\n                    } else if (fieldInfo.color) {\n                        const svg = adjustSvg(imageResp.data, true, fieldInfo.color);\n                        yield put(cardSetChangeImageBase64(cardId, state.cardset.present.activeFieldId, svg));\n                    } else {\n                        yield put(cardSetChangeImageBase64(cardId, state.cardset.present.activeFieldId, undefined));\n                    }\n                }\n            }\n        }\n    } catch (e) {\n        yield call(putError, e);\n    }\n}\n\nexport function* handleCardSetChangeImage(action: CardSetChangeImage): SagaIterator {\n    try {\n        yield call(delay, 100);\n        const state: State = yield select();\n\n        let cardsToFix =\n            state.cardset.present.applyToAllCards || action.cardId === undefined\n                ? state.cardset.present.cardsAllIds\n                : [action.cardId];\n\n        for (const cardId of cardsToFix) {\n            const cardFields = state.cardset.present.fields[cardId];\n            const imageInfo = cardFields[action.fieldId];\n            if (imageInfo.type === 'image' && imageInfo.url) {\n                const imageResp = yield call(authorizedGetRequest, imageInfo.url);\n\n                if (imageResp.headers['content-type'] === 'image/svg+xml') {\n                    const name = imageInfo.name || imageInfo.id;\n\n                    for (const fieldId in cardFields) {\n                        const fieldInfo = cardFields[fieldId];\n\n                        if ((fieldInfo.name === name || fieldInfo.id === name) && fieldInfo.type === 'image') {\n                            if (fieldInfo.fit === 'stretch') {\n                                const svg = adjustSvg(imageResp.data, false, imageInfo.color);\n                                yield put(cardSetChangeImageBase64(cardId, fieldId, svg));\n                            } else if (imageInfo.color) {\n                                const svg = adjustSvg(imageResp.data, true, imageInfo.color);\n                                yield put(cardSetChangeImageBase64(cardId, fieldId, svg));\n                            } else {\n                                yield put(cardSetChangeImageBase64(cardId, fieldId, undefined));\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    } catch (e) {\n        yield call(putError, e);\n    }\n}\n\nfunction closeHandler(e: Event) {\n    e.preventDefault();\n    e.returnValue = true;\n}\n\nfunction preventWindowClose() {\n    window.addEventListener('beforeunload', closeHandler);\n}\n\nfunction allowWindowClose() {\n    window.removeEventListener('beforeunload', closeHandler);\n}\n\nexport function* handleCardSetChange(): SagaIterator {\n    let progressId = null;\n\n    try {\n        preventWindowClose();\n        progressId = yield call(putProgress, 'Saving Card Set');\n\n        yield call(delay, 1000);\n        const state: State = yield select();\n\n        const cardsetId = state.cardsets.active;\n        if (cardsetId === null) throw Error('Save failed.');\n        const data = {\n            width: state.cardset.present.width,\n            height: state.cardset.present.height,\n            isTwoSided: state.cardset.present.isTwoSided,\n            snappingDistance: state.cardset.present.snappingDistance,\n            version: state.cardset.present.version,\n            cardsAllIds: state.cardset.present.cardsAllIds,\n            cardsById: state.cardset.present.cardsById,\n            fieldsAllIds: state.cardset.present.fieldsAllIds,\n            fields: state.cardset.present.fields,\n            zoom: state.cardset.present.zoom,\n        };\n\n        yield call(authorizedPutRequest, '/api/cardsets/' + cardsetId, {\n            name: state.cardsets.byId[cardsetId].name,\n            data: JSON.stringify(data),\n        });\n        yield call(hideProgress, progressId);\n        yield call(putInfo, 'Card Set saved');\n        allowWindowClose();\n    } catch (e) {\n        if (progressId !== null) yield call(hideProgress, progressId);\n        yield call(putError, e);\n        allowWindowClose();\n    }\n}\n\n// Images\nexport function* handleImageListRequest(action: ImageListRequest): SagaIterator {\n    try {\n        yield call(delay, 200);\n        const state = yield select();\n\n        const filter = encodeURIComponent(action.filter);\n        const location = encodeURIComponent(action.location);\n        const game = encodeURIComponent(state.games.active);\n        const resp = yield call(authorizedGetRequest, `/api/images?name=${filter}&location=${location}&game=${game}`);\n        const images = resp.data.images;\n        yield put({\n            type: IMAGE_LIST_SUCCESS,\n            images,\n        });\n    } catch (e) {\n        yield put({ type: IMAGE_LIST_FAILURE });\n        yield call(putError, e);\n    }\n}\n\n// All\nexport function* rootSaga(): SagaIterator {\n    yield all([\n        takeEvery(MESSAGE_DISPLAY, handleMessageDisplay),\n        takeLatest(LOGIN_REQUEST, handleLoginRequest),\n        takeLatest(LOGIN_SUCCESS, handleLoginSuccess),\n        takeLatest(LOGOUT_REQUEST, handleLogoutRequest),\n        takeLatest(SIGNUP_REQUEST, handleSignupRequest),\n        takeLatest(GAME_CREATE_REQUEST, handleGameCreateRequest),\n        takeLatest(GAME_DELETE_REQUEST, handleGameDeleteRequest),\n        takeLatest(GAME_RENAME_REQUEST, handleGameRenameRequest),\n        takeLatest(GAME_LIST_REQUEST, handleGameListRequest),\n        takeLatest(GAME_SELECT_REQUEST, handleGameSelectRequest),\n        takeLatest(GAME_CREATE_PDF_REQUEST, handleGameCreatePdfRequest),\n        takeLatest(GAME_CREATE_PNG_REQUEST, handleGameCreatePngRequest),\n        takeLatest(GAME_GET_ATTRIBUTIONS_REQUEST, handleGameGetAttributionsRequest),\n        takeLatest(CARDSET_CREATE_REQUEST, handleCardSetCreateRequest),\n        takeLatest(CARDSET_DELETE_REQUEST, handleCardSetDeleteRequest),\n        takeLatest(CARDSET_RENAME_REQUEST, handleCardSetRenameRequest),\n        takeLatest(CARDSET_SELECT_REQUEST, handleCardSetSelectRequest),\n        takeEvery(CARDSET_UPLOAD_IMAGE, handleCardSetUploadImage),\n        takeEvery(CARDSET_DELETE_IMAGE, handleCardSetDeleteImage),\n        takeEvery(CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD, handleCardSetFitChange),\n        takeEvery(CARDSET_CHANGE_IMAGE, handleCardSetChangeImage),\n\n        takeLatest(CARDSET_CREATE_CARD, handleCardSetChange),\n        takeLatest(CARDSET_ROTATE_CARDS_RIGHT, handleCardSetChange),\n        takeLatest(CARDSET_ROTATE_CARDS_LEFT, handleCardSetChange),\n        takeLatest(CARDSET_CLONE_CARD, handleCardSetChange),\n        takeLatest(CARDSET_REMOVE_CARD, handleCardSetChange),\n        takeLatest(CARDSET_UPDATE_CARD_COUNT, handleCardSetChange),\n        takeLatest(CARDSET_ADD_TEXT_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_ADD_IMAGE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_FIELD_NAME, handleCardSetChange),\n        takeLatest(CARDSET_REMOVE_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_RAISE_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_RAISE_ACTIVE_FIELD_TO_TOP, handleCardSetChange),\n        takeLatest(CARDSET_LOWER_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM, handleCardSetChange),\n        takeLatest(CARDSET_LOCK_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_UNLOCK_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_WIDTH, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_HEIGHT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_IS_TWO_SIDED, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_SNAPPING_DISTANCE, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_FIELD_POSITION, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_FIELD_PAN, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_FIELD_ZOOM, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_FIELD_SIZE, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_FIELD_ANGLE, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_TEXT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_IMAGE, handleCardSetChange),\n        takeLatest(CARDSET_SET_ZOOM, handleCardSetChange),\n        takeLatest(CARDSET_IMPORT_DATA, handleCardSetChange),\n        takeLatest(CARDSET_UNDO, handleCardSetChange),\n        takeLatest(CARDSET_REDO, handleCardSetChange),\n\n        takeLatest(IMAGE_LIST_REQUEST, handleImageListRequest),\n\n        takeLatest(INIT_REQUEST, handleInitRequest),\n    ]);\n}\n","import { combineReducers } from 'redux';\nimport shortid from 'shortid';\nimport undoable from 'redux-undo';\n\nimport {\n    CARDSET_ADD_IMAGE_FIELD,\n    CARDSET_ADD_TEXT_FIELD,\n    CARDSET_CHANGE_ACTIVE_FIELD_NAME,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT,\n    CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD,\n    CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD,\n    CARDSET_CHANGE_HEIGHT,\n    CARDSET_CHANGE_IMAGE,\n    CARDSET_CHANGE_IMAGE_BASE64,\n    CARDSET_CHANGE_IS_TWO_SIDED,\n    CARDSET_CHANGE_FIELD_ANGLE,\n    CARDSET_CHANGE_FIELD_SIZE,\n    CARDSET_CHANGE_SNAPPING_DISTANCE,\n    CARDSET_CHANGE_TEXT,\n    CARDSET_CHANGE_WIDTH,\n    CARDSET_CLONE_CARD,\n    CARDSET_CREATE_CARD,\n    CARDSET_IMPORT_DATA,\n    CARDSET_LIST_RESET,\n    CARDSET_LIST_SUCCESS,\n    CARDSET_LOCK_ACTIVE_FIELD,\n    CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM,\n    CARDSET_RAISE_ACTIVE_FIELD_TO_TOP,\n    CARDSET_REMOVE_ACTIVE_FIELD,\n    CARDSET_REMOVE_CARD,\n    CARDSET_RENAME_REQUEST,\n    CARDSET_SELECT_FAILURE,\n    CARDSET_SELECT_REQUEST,\n    CARDSET_SELECT_SUCCESS,\n    CARDSET_SET_ACTIVE_CARD_AND_FIELD,\n    CARDSET_SET_SIDEBAR_STATE,\n    CARDSET_SET_ZOOM,\n    CARDSET_UNLOCK_ACTIVE_FIELD,\n    CARDSET_UPDATE_CARD_COUNT,\n    CardSetAction,\n    GAME_CREATE_PDF_FAILURE,\n    GAME_CREATE_PDF_REQUEST,\n    GAME_CREATE_PDF_SUCCESS,\n    GAME_CREATE_PNG_FAILURE,\n    GAME_CREATE_PNG_REQUEST,\n    GAME_CREATE_PNG_SUCCESS,\n    GAME_LIST_RESET,\n    GAME_LIST_SUCCESS,\n    GAME_RENAME_REQUEST,\n    GAME_SELECT_FAILURE,\n    GAME_SELECT_REQUEST,\n    GAME_SELECT_SUCCESS,\n    GameAction,\n    IMAGE_LIST_REQUEST,\n    IMAGE_LIST_SUCCESS,\n    ImageListAction,\n    LOGIN_FAILURE,\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGOUT_SUCCESS,\n    LoginAction,\n    MESSAGE_DISPLAY,\n    MESSAGE_HIDE,\n    MessageAction,\n    SIGNUP_FAILURE,\n    SIGNUP_REQUEST,\n    SIGNUP_SUCCESS,\n    SidebarState,\n    SignUpAction,\n    CARDSET_CHANGE_FIELD_ZOOM,\n    CARDSET_CHANGE_FIELD_PAN,\n    CardSetsAction,\n    CARDSETS_SELECT_SUCCESS,\n    CARDSET_CHANGE_FIELD_POSITION,\n    CARDSET_UNDO,\n    CARDSET_REDO,\n    Action,\n    CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD,\n    CARDSET_CHANGE_APPLY_TO_ALLCARDS,\n    CARDSET_RAISE_ACTIVE_FIELD,\n    CARDSET_LOWER_ACTIVE_FIELD,\n    CARDSET_ROTATE_CARDS_RIGHT,\n    CARDSET_ROTATE_CARDS_LEFT,\n    GAME_GET_ATTRIBUTIONS_SUCCESS,\n    GAME_GET_ATTRIBUTIONS_FAILURE,\n} from './actions';\nimport {\n    CURRENT_CARDSET_VERSION,\n    DEFAULT_FONT,\n    DEFAULT_FONT_SIZE,\n    DEFAULT_FONT_VARIANT,\n    DEFAULT_LINE_HEIGHT,\n    BLEED_WIDTH,\n} from './constants';\nimport {\n    CardSetsCollection,\n    CardsCollection,\n    GamesCollection,\n    IdsArray,\n    ImageArray,\n    MessageType,\n    FieldInfoByCardCollection,\n    FieldInfoCollection,\n} from './types';\nimport { rotateVec } from './utils';\n\nexport const ACTIVITY_SELECTING = 0x1;\nexport const ACTIVITY_CREATING_PDF = 0x2;\nexport const ACTIVITY_CREATING_PNG = 0x4;\n\nexport interface MessageState {\n    messages: MessageType[];\n}\n\nexport const DefaultMessageState: MessageState = {\n    messages: [],\n};\n\nexport interface AuthState {\n    isAuthenticated?: boolean;\n    user: string;\n}\n\nexport const DefaultAuthState: AuthState = {\n    isAuthenticated: undefined,\n    user: '', // XXX: user can manipulate this information by changing local storage. Do not trust this info.\n};\n\nexport interface SignUpState {\n    signingup: boolean;\n}\n\nexport const DefaultSignUpState: SignUpState = {\n    signingup: false,\n};\n\nexport interface GameState {\n    byId: GamesCollection;\n    allIds: IdsArray;\n    activity: number;\n    active: string | null;\n    attributions: string[];\n}\n\nexport const DefaultGameState: GameState = {\n    byId: {},\n    allIds: [],\n    activity: 0,\n    active: null,\n    attributions: [],\n};\n\nexport interface TextSettings {\n    align: string;\n    color: string;\n    fontFamily: string;\n    fontVariant: string;\n    fontSize: number;\n    lineHeight?: number;\n}\n\nexport interface CardSetsState {\n    byId: CardSetsCollection;\n    allIds: IdsArray;\n    active: string | null;\n}\n\nexport const DefaultCardSetsState: CardSetsState = {\n    byId: {},\n    allIds: [],\n    active: null,\n};\n\nexport interface CardSetState {\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    snappingDistance: number;\n    version: number;\n    activity: number;\n    cardsAllIds: IdsArray;\n    cardsById: CardsCollection;\n    activeCardId?: string;\n    isBackActive: boolean;\n    activeFieldId?: string;\n    fieldsAllIds: IdsArray;\n    fields: FieldInfoByCardCollection;\n    textSettings: TextSettings;\n    activeSidebar: SidebarState | null;\n    zoom: number;\n    applyToAllCards: boolean;\n}\n\nexport const DefaultCardSetState: CardSetState = {\n    width: 63.5,\n    height: 88.9,\n    isTwoSided: false,\n    snappingDistance: 1,\n    version: CURRENT_CARDSET_VERSION,\n    activity: 0,\n    cardsById: {},\n    cardsAllIds: [],\n    activeCardId: undefined,\n    isBackActive: false,\n    activeFieldId: undefined,\n    fieldsAllIds: [],\n    fields: {},\n    textSettings: {\n        align: 'left',\n        color: '#000000',\n        fontFamily: DEFAULT_FONT,\n        fontVariant: DEFAULT_FONT_VARIANT,\n        fontSize: DEFAULT_FONT_SIZE,\n        lineHeight: DEFAULT_LINE_HEIGHT,\n    },\n    activeSidebar: null,\n    zoom: 1,\n    applyToAllCards: false,\n};\n\nexport interface ImageState {\n    activity: number;\n    filter: string;\n    images: ImageArray;\n}\n\nexport const DefaultImageState: ImageState = {\n    activity: 0,\n    filter: '',\n    images: [],\n};\n\nexport interface State {\n    message: MessageState;\n    auth: AuthState;\n    signup: SignUpState;\n    games: GameState;\n    cardsets: CardSetsState;\n    cardset: {\n        present: CardSetState;\n    };\n    images: ImageState;\n}\n\nexport const DefaultState: State = {\n    message: DefaultMessageState,\n    auth: DefaultAuthState,\n    signup: DefaultSignUpState,\n    games: DefaultGameState,\n    cardsets: DefaultCardSetsState,\n    cardset: {\n        present: DefaultCardSetState,\n    },\n    images: DefaultImageState,\n};\n\nexport function message(state: MessageState = DefaultMessageState, action: MessageAction): MessageState {\n    switch (action.type) {\n        case MESSAGE_DISPLAY:\n            const found = state.messages.find(m => m.id === action.message.id);\n            if (found) return state;\n\n            return {\n                ...state,\n                messages: state.messages.concat(action.message),\n            };\n        case MESSAGE_HIDE:\n            return Object.assign({}, state, {\n                messages: state.messages.filter(m => m.id !== action.messageId),\n            });\n        default:\n            return state;\n    }\n}\n\nexport function auth(state: AuthState = DefaultAuthState, action: LoginAction): AuthState {\n    switch (action.type) {\n        case LOGIN_REQUEST:\n            return Object.assign({}, state, {\n                isAuthenticated: undefined,\n                user: '',\n            });\n        case LOGIN_SUCCESS:\n            return Object.assign({}, state, {\n                isAuthenticated: true,\n                user: action.username,\n            });\n        case LOGIN_FAILURE:\n            return Object.assign({}, state, {\n                isAuthenticated: false,\n            });\n        case LOGOUT_SUCCESS:\n            return Object.assign({}, state, {\n                isAuthenticated: false,\n                user: '',\n            });\n        default:\n            return state;\n    }\n}\n\nexport function signup(state: SignUpState = DefaultSignUpState, action: SignUpAction): SignUpState {\n    switch (action.type) {\n        case SIGNUP_REQUEST:\n            return Object.assign({}, state, {\n                signingup: true,\n            });\n        case SIGNUP_SUCCESS:\n            return Object.assign({}, state, {\n                signingup: false,\n            });\n        case SIGNUP_FAILURE:\n            return Object.assign({}, state, {\n                signingup: false,\n            });\n        default:\n            return state;\n    }\n}\n\nexport function games(state: GameState = DefaultGameState, action: GameAction): GameState {\n    switch (action.type) {\n        case GAME_RENAME_REQUEST:\n            const game = state.byId[action.gameId];\n\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    [game.id]: {\n                        ...game,\n                        name: action.newName,\n                    },\n                },\n            };\n        case GAME_LIST_SUCCESS:\n            return Object.assign({}, state, {\n                byId: action.byId,\n                allIds: action.allIds,\n            });\n        case GAME_LIST_RESET:\n            return Object.assign({}, state, {\n                activity: 0,\n                byId: {},\n                allIds: [],\n            });\n        case GAME_SELECT_REQUEST:\n            return Object.assign({}, state, {\n                activity: ACTIVITY_SELECTING,\n            });\n        case GAME_SELECT_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_SELECTING,\n                active: action.id,\n                attributions: [],\n            });\n        case GAME_SELECT_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_SELECTING,\n                attributions: [],\n            });\n        case GAME_CREATE_PDF_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_CREATING_PDF,\n            });\n        case GAME_CREATE_PDF_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING_PDF,\n            });\n        case GAME_CREATE_PDF_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING_PDF,\n            });\n        case GAME_CREATE_PNG_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_CREATING_PNG,\n            });\n        case GAME_CREATE_PNG_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING_PNG,\n            });\n        case GAME_CREATE_PNG_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING_PNG,\n            });\n        case GAME_GET_ATTRIBUTIONS_SUCCESS:\n            return {\n                ...state,\n                attributions: action.attributions,\n            };\n        case GAME_GET_ATTRIBUTIONS_FAILURE:\n            return {\n                ...state,\n                attributions: [],\n            };\n        default:\n            return state;\n    }\n}\n\nexport function cardsets(state: CardSetsState = DefaultCardSetsState, action: CardSetsAction): CardSetsState {\n    switch (action.type) {\n        case CARDSETS_SELECT_SUCCESS:\n            return {\n                ...state,\n                active: action.id,\n                byId: Object.assign({}, state.byId, {\n                    [action.id]: {\n                        id: action.id,\n                        name: action.name,\n                    },\n                }),\n            };\n        case CARDSET_RENAME_REQUEST:\n            const cardset = state.byId[action.cardSetId];\n\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    [cardset.id]: {\n                        ...cardset,\n                        name: action.newName,\n                    },\n                },\n            };\n        case CARDSET_LIST_SUCCESS:\n            return Object.assign({}, state, {\n                byId: action.byId,\n                allIds: action.allIds,\n            });\n        case CARDSET_LIST_RESET:\n            return Object.assign({}, state, {\n                byId: {},\n                allIds: [],\n            });\n        default:\n            return state;\n    }\n}\n\nfunction resizeFields(fields: FieldInfoByCardCollection, widthRatio: number, heightRatio: number) {\n    let newFields = { ...fields };\n    for (const cardId in newFields) {\n        let cardFields = { ...fields[cardId] };\n        for (const fieldId in cardFields) {\n            let fieldInfo = { ...cardFields[fieldId] };\n            fieldInfo.x = (fieldInfo.x - BLEED_WIDTH) * widthRatio + BLEED_WIDTH;\n            fieldInfo.y = (fieldInfo.y - BLEED_WIDTH) * heightRatio + BLEED_WIDTH;\n            fieldInfo.width *= widthRatio;\n            fieldInfo.height *= heightRatio;\n            if (fieldInfo.type === 'image') {\n                if (fieldInfo.cx) {\n                    fieldInfo.cx *= widthRatio;\n                }\n                if (fieldInfo.cy) {\n                    fieldInfo.cy *= heightRatio;\n                }\n            } else if (fieldInfo.type === 'text') {\n                fieldInfo.fontSize *= heightRatio;\n            }\n            cardFields[fieldId] = fieldInfo;\n        }\n        newFields[cardId] = cardFields;\n    }\n    return newFields;\n}\n\nexport function cardset(state: CardSetState = DefaultCardSetState, action: CardSetAction): CardSetState {\n    switch (action.type) {\n        case CARDSET_SELECT_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_SELECTING,\n                isTwoSided: false,\n                cardsAllIds: [],\n                cardsById: {},\n                fields: {},\n                fieldsAllIds: [],\n                activeCardId: undefined,\n                activeFieldId: undefined,\n                isBackActive: false,\n            });\n        case CARDSET_SELECT_SUCCESS: {\n            return {\n                ...state,\n                activity: state.activity & ~ACTIVITY_SELECTING,\n                width: action.data.width || 63.5,\n                height: action.data.height || 88.9,\n                isTwoSided: action.data.isTwoSided || false,\n                snappingDistance: action.data.snappingDistance || 1,\n                version: action.data.version,\n                cardsAllIds: action.data.cardsAllIds || [],\n                cardsById: action.data.cardsById || {},\n                fields: action.data.fields || {},\n                fieldsAllIds: action.data.fieldsAllIds || [],\n                activeCardId: undefined,\n                activeFieldId: undefined,\n                isBackActive: false,\n                zoom: action.data.zoom || 1,\n            };\n        }\n        case CARDSET_SELECT_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_SELECTING,\n            });\n        case CARDSET_CREATE_CARD: {\n            let cardFields: FieldInfoCollection = {};\n            if (state.cardsAllIds.length > 0) {\n                cardFields = {\n                    ...state.fields[state.cardsAllIds[0]],\n                };\n\n                for (const fieldId of state.fieldsAllIds) {\n                    let fieldInfo = { ...cardFields[fieldId] };\n                    if (fieldInfo.type === 'text') {\n                        fieldInfo.value = '';\n                    } else if (fieldInfo.type === 'image') {\n                        delete fieldInfo.url;\n                        delete fieldInfo.base64;\n                    }\n                    cardFields[fieldId] = fieldInfo;\n                }\n            }\n            return {\n                ...state,\n                cardsById: {\n                    ...state.cardsById,\n                    [action.card.id]: action.card,\n                },\n                cardsAllIds: state.cardsAllIds ? state.cardsAllIds.concat(action.card.id) : [action.card.id],\n                fields: {\n                    ...state.fields,\n                    [action.card.id]: cardFields,\n                },\n            };\n        }\n        case CARDSET_ROTATE_CARDS_RIGHT: {\n            let fields = { ...state.fields };\n            let width = state.height;\n            let height = state.width;\n\n            for (const cardId in fields) {\n                let cardFields = { ...fields[cardId] };\n                for (const fieldId in cardFields) {\n                    let fieldInfo = { ...cardFields[fieldId] };\n\n                    let cx = fieldInfo.x + fieldInfo.width / 2 - BLEED_WIDTH;\n                    let cy = fieldInfo.y + fieldInfo.height / 2 - BLEED_WIDTH;\n\n                    let newCx = width - cy;\n                    let newCy = cx;\n\n                    fieldInfo.x = newCx - fieldInfo.width / 2 + BLEED_WIDTH;\n                    fieldInfo.y = newCy - fieldInfo.height / 2 + BLEED_WIDTH;\n                    fieldInfo.angle += Math.PI / 2;\n\n                    cardFields[fieldId] = fieldInfo;\n                }\n\n                fields[cardId] = cardFields;\n            }\n            return {\n                ...state,\n                width,\n                height,\n                fields,\n            };\n        }\n        case CARDSET_ROTATE_CARDS_LEFT: {\n            let fields = { ...state.fields };\n            let width = state.height;\n            let height = state.width;\n\n            for (const cardId in fields) {\n                let cardFields = { ...fields[cardId] };\n                for (const fieldId in cardFields) {\n                    let fieldInfo = { ...cardFields[fieldId] };\n\n                    let cx = fieldInfo.x + fieldInfo.width / 2 - BLEED_WIDTH;\n                    let cy = fieldInfo.y + fieldInfo.height / 2 - BLEED_WIDTH;\n\n                    let newCx = cy;\n                    let newCy = height - cx;\n\n                    fieldInfo.x = newCx - fieldInfo.width / 2 + BLEED_WIDTH;\n                    fieldInfo.y = newCy - fieldInfo.height / 2 + BLEED_WIDTH;\n                    fieldInfo.angle -= Math.PI / 2;\n\n                    cardFields[fieldId] = fieldInfo;\n                }\n\n                fields[cardId] = cardFields;\n            }\n            return {\n                ...state,\n                width,\n                height,\n                fields,\n            };\n        }\n        case CARDSET_CLONE_CARD: {\n            let newCard = { ...action.card, id: shortid.generate() };\n\n            const index = state.cardsAllIds.indexOf(action.card.id) + 1;\n            const cardsAllIds = [...state.cardsAllIds.slice(0, index), newCard.id, ...state.cardsAllIds.slice(index)];\n\n            return {\n                ...state,\n                cardsById: {\n                    ...state.cardsById,\n                    [newCard.id]: newCard,\n                },\n                cardsAllIds,\n                fields: {\n                    ...state.fields,\n                    [newCard.id]: {\n                        ...state.fields[action.card.id],\n                    },\n                },\n            };\n        }\n        case CARDSET_REMOVE_CARD: {\n            const cardId = action.card.id;\n            let cardsById = { ...state.cardsById };\n            delete cardsById[cardId];\n\n            let fields = { ...state.fields };\n            if (cardId in fields) {\n                delete fields[cardId];\n            }\n\n            let activeCardId = state.activeCardId === cardId ? undefined : state.activeCardId;\n\n            const cardsAllIds = state.cardsAllIds.filter(id => id !== cardId);\n\n            let fieldsAllIds = state.fieldsAllIds;\n            if (cardsAllIds.length === 0) {\n                fieldsAllIds = [];\n            }\n\n            return {\n                ...state,\n                cardsById,\n                cardsAllIds,\n                fieldsAllIds,\n                fields,\n                activeCardId,\n            };\n        }\n        case CARDSET_UPDATE_CARD_COUNT: {\n            const cardId = action.card.id;\n            let card = { ...state.cardsById[cardId] };\n            card.count = action.count;\n\n            return {\n                ...state,\n                cardsById: {\n                    ...state.cardsById,\n                    [cardId]: card,\n                },\n            };\n        }\n        case CARDSET_ADD_TEXT_FIELD: {\n            if (state.cardsAllIds.length === 0) {\n                return state;\n            }\n\n            let textSettings = { ...state.textSettings };\n            const id = shortid.generate();\n            let fields: FieldInfoByCardCollection = {};\n            for (const cardId of state.cardsAllIds) {\n                fields[cardId] = {\n                    ...state.fields[cardId],\n                    [id]: {\n                        type: 'text',\n                        id,\n                        x: 5,\n                        y: 5,\n                        width: 20,\n                        height: 10,\n                        angle: 0,\n                        isOnBack: state.isBackActive,\n                        value: '',\n                        align: textSettings.align,\n                        color: textSettings.color,\n                        fontFamily: textSettings.fontFamily,\n                        fontVariant: textSettings.fontVariant,\n                        fontSize: textSettings.fontSize,\n                        lineHeight: textSettings.lineHeight || DEFAULT_LINE_HEIGHT,\n                    },\n                };\n            }\n\n            return {\n                ...state,\n                fieldsAllIds: [...state.fieldsAllIds, id],\n                fields,\n            };\n        }\n        case CARDSET_ADD_IMAGE_FIELD: {\n            if (state.cardsAllIds.length === 0) {\n                return state;\n            }\n\n            const id = shortid.generate();\n            let fields: FieldInfoByCardCollection = {};\n            for (const cardId of state.cardsAllIds) {\n                fields[cardId] = {\n                    ...state.fields[cardId],\n                    [id]: {\n                        type: 'image',\n                        id,\n                        x: 5,\n                        y: 5,\n                        width: 20,\n                        height: 20,\n                        angle: 0,\n                        isOnBack: state.isBackActive,\n                        crop: true,\n                    },\n                };\n            }\n\n            return {\n                ...state,\n                fieldsAllIds: [...state.fieldsAllIds, id],\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_ACTIVE_FIELD_NAME: {\n            if (state.activeFieldId !== undefined) {\n                let fields: FieldInfoByCardCollection = {};\n                let id = state.activeFieldId;\n\n                for (const cardId of state.cardsAllIds) {\n                    fields[cardId] = {\n                        ...state.fields[cardId],\n                        [id]: {\n                            ...state.fields[cardId][id],\n                            name: action.name,\n                        },\n                    };\n                }\n\n                return {\n                    ...state,\n                    fields,\n                };\n            }\n\n            return state;\n        }\n\n        case CARDSET_REMOVE_ACTIVE_FIELD: {\n            const fieldId = state.activeFieldId;\n            if (fieldId !== undefined) {\n                let fieldsAllIds = [...state.fieldsAllIds];\n                let fieldIndex = fieldsAllIds.indexOf(fieldId);\n                if (fieldIndex !== -1) {\n                    fieldsAllIds.splice(fieldIndex, 1);\n                }\n\n                let fields = { ...state.fields };\n                for (const cardId in fields) {\n                    if (fieldId in fields[cardId] && !fields[cardId][fieldId].locked) {\n                        let cardFields = { ...fields[cardId] };\n                        delete cardFields[fieldId];\n                        fields[cardId] = cardFields;\n                    }\n                }\n\n                return {\n                    ...state,\n                    fieldsAllIds,\n                    fields,\n                    activeFieldId: undefined,\n                };\n            }\n            return state;\n        }\n        case CARDSET_RAISE_ACTIVE_FIELD: {\n            let fieldsAllIds = [...state.fieldsAllIds];\n\n            if (state.activeFieldId !== undefined) {\n                let index = fieldsAllIds.indexOf(state.activeFieldId);\n                if (index !== -1 && index < fieldsAllIds.length - 1) {\n                    fieldsAllIds.splice(index + 1, 0, fieldsAllIds.splice(index, 1)[0]);\n                }\n            }\n\n            return {\n                ...state,\n                fieldsAllIds,\n            };\n        }\n        case CARDSET_RAISE_ACTIVE_FIELD_TO_TOP: {\n            let fieldsAllIds = [...state.fieldsAllIds];\n\n            if (state.activeFieldId !== undefined) {\n                let index = fieldsAllIds.indexOf(state.activeFieldId);\n                if (index !== -1) {\n                    fieldsAllIds.push(fieldsAllIds.splice(index, 1)[0]);\n                }\n            }\n\n            return {\n                ...state,\n                fieldsAllIds,\n            };\n        }\n        case CARDSET_LOWER_ACTIVE_FIELD: {\n            let fieldsAllIds = [...state.fieldsAllIds];\n\n            if (state.activeFieldId !== undefined) {\n                let index = fieldsAllIds.indexOf(state.activeFieldId);\n                if (index > 0) {\n                    fieldsAllIds.splice(index - 1, 0, fieldsAllIds.splice(index, 1)[0]);\n                }\n            }\n\n            return {\n                ...state,\n                fieldsAllIds,\n            };\n        }\n        case CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM: {\n            let fieldsAllIds = [...state.fieldsAllIds];\n\n            if (state.activeFieldId !== undefined) {\n                let index = fieldsAllIds.indexOf(state.activeFieldId);\n                if (index !== -1) {\n                    fieldsAllIds.unshift(fieldsAllIds.splice(index, 1)[0]);\n                }\n            }\n\n            return {\n                ...state,\n                fieldsAllIds,\n            };\n        }\n        case CARDSET_LOCK_ACTIVE_FIELD: {\n            if (state.activeFieldId) {\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        cardFields[fieldId] = {\n                            ...cardFields[fieldId],\n                            locked: true,\n                        };\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                };\n            }\n\n            return state;\n        }\n        case CARDSET_UNLOCK_ACTIVE_FIELD: {\n            if (state.activeFieldId) {\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        cardFields[fieldId] = {\n                            ...cardFields[fieldId],\n                            locked: false,\n                        };\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                };\n            }\n\n            return state;\n        }\n        case CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD: {\n            if (state.activeFieldId) {\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = { ...cardFields[fieldId] };\n                        if (fieldInfo.type === 'image') {\n                            fieldInfo.fit = action.fit;\n                        }\n                        cardFields[fieldId] = fieldInfo;\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                };\n            }\n\n            return state;\n        }\n        case CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD: {\n            if (state.activeFieldId) {\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = { ...cardFields[fieldId] };\n                        if (fieldInfo.type === 'image') {\n                            fieldInfo.crop = action.crop;\n                        }\n                        cardFields[fieldId] = fieldInfo;\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                };\n            }\n\n            return state;\n        }\n        case CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD: {\n            if (state.activeFieldId) {\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = { ...cardFields[fieldId] };\n                        fieldInfo.unclickable = action.unclickable;\n                        cardFields[fieldId] = fieldInfo;\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                };\n            }\n\n            return state;\n        }\n        case CARDSET_CHANGE_WIDTH: {\n            if (!action.width || action.width <= 0) {\n                return state;\n            }\n\n            let height = state.height;\n            if (action.maintainAspectRatio) {\n                height = action.width * (state.height / state.width);\n            }\n\n            let fields = state.fields;\n            if (action.resizeContent) {\n                fields = resizeFields(fields, action.width / state.width, height / state.height);\n            }\n\n            return {\n                ...state,\n                width: action.width,\n                height,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_HEIGHT: {\n            if (!action.height || action.height <= 0) {\n                return state;\n            }\n\n            let width = state.width;\n            if (action.maintainAspectRatio) {\n                width = action.height * (state.width / state.height);\n            }\n\n            let fields = state.fields;\n            if (action.resizeContent) {\n                fields = resizeFields(fields, width / state.width, action.height / state.height);\n            }\n\n            return {\n                ...state,\n                height: action.height,\n                width,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_IS_TWO_SIDED: {\n            return {\n                ...state,\n                isTwoSided: action.isTwoSided,\n            };\n        }\n        case CARDSET_CHANGE_SNAPPING_DISTANCE: {\n            return {\n                ...state,\n                snappingDistance: action.snappingDistance,\n            };\n        }\n        case CARDSET_CHANGE_FIELD_POSITION: {\n            let x = action.x;\n            let y = action.y;\n            let snappingDistance = state.snappingDistance;\n\n            if (snappingDistance !== 0) {\n                x = Math.round(x / snappingDistance) * snappingDistance;\n                y = Math.round(y / snappingDistance) * snappingDistance;\n            }\n\n            let fields = { ...state.fields };\n            let fieldId = action.fieldId;\n            let cardsToFix = action.cardId ? [action.cardId] : state.cardsAllIds;\n\n            for (const cardId of cardsToFix) {\n                let cardFields = { ...fields[cardId] };\n                if (fieldId in cardFields) {\n                    cardFields[fieldId] = {\n                        ...cardFields[fieldId],\n                        x,\n                        y,\n                    };\n                }\n                fields[cardId] = cardFields;\n            }\n\n            return {\n                ...state,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_FIELD_PAN: {\n            let { cx, cy } = action;\n\n            let fields = { ...state.fields };\n            let fieldId = action.fieldId;\n            let cardsToFix = state.applyToAllCards || action.cardId === undefined ? state.cardsAllIds : [action.cardId];\n\n            for (const cardId of cardsToFix) {\n                let cardFields = { ...fields[cardId] };\n                if (fieldId in cardFields) {\n                    let fieldInfo = cardFields[fieldId];\n                    if (fieldInfo.type === 'image') {\n                        let { width, height, zoom, fit, imageWidth, imageHeight } = fieldInfo;\n                        zoom = zoom || 1;\n                        imageHeight = imageHeight || 1;\n                        imageWidth = imageWidth || 1;\n\n                        let fitImageWidth = width;\n                        let fitImageHeight = height;\n                        if (fit === 'width' || fit === undefined) {\n                            fitImageHeight = width * (imageHeight / imageWidth);\n                        } else if (fit === 'height') {\n                            fitImageWidth = height * (imageWidth / imageHeight);\n                        }\n                        cx = Math.min(Math.max(width - zoom * fitImageWidth, cx), 0);\n                        cy = Math.min(Math.max(height - zoom * fitImageHeight, cy), 0);\n\n                        cardFields[fieldId] = {\n                            ...fieldInfo,\n                            cx,\n                            cy,\n                        };\n                    }\n                }\n                fields[cardId] = cardFields;\n            }\n\n            return {\n                ...state,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_FIELD_ZOOM: {\n            let zoom = action.zoom;\n\n            let fields = { ...state.fields };\n            let fieldId = action.fieldId;\n\n            let cardsToFix = state.applyToAllCards || action.cardId === undefined ? state.cardsAllIds : [action.cardId];\n\n            for (const cardId of cardsToFix) {\n                let cardFields = { ...fields[cardId] };\n                if (fieldId in cardFields) {\n                    let fieldInfo = cardFields[fieldId];\n                    if (fieldInfo.type === 'image') {\n                        let { fit, width, height, imageWidth, imageHeight } = fieldInfo;\n\n                        imageHeight = imageHeight || 1;\n                        imageWidth = imageWidth || 1;\n\n                        let fitImageWidth = width;\n                        let fitImageHeight = height;\n                        if (fit === 'width' || fit === undefined) {\n                            fitImageHeight = width * (imageHeight / imageWidth);\n                        } else if (fit === 'height') {\n                            fitImageWidth = height * (imageWidth / imageHeight);\n                        }\n\n                        let cx = fieldInfo.cx || 0;\n                        let cy = fieldInfo.cy || 0;\n                        let oldZoom = fieldInfo.zoom || 1;\n                        cx = cx + ((oldZoom - zoom) * fitImageWidth) / 2;\n                        cy = cy + ((oldZoom - zoom) * fitImageHeight) / 2;\n\n                        cx = Math.min(Math.max(width - zoom * fitImageWidth, cx), 0);\n                        cy = Math.min(Math.max(height - zoom * fitImageHeight, cy), 0);\n\n                        cardFields[fieldId] = {\n                            ...fieldInfo,\n                            zoom,\n                            cx,\n                            cy,\n                        };\n                    }\n                }\n                fields[cardId] = cardFields;\n            }\n\n            return {\n                ...state,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_FIELD_SIZE: {\n            let width = action.width;\n            let height = action.height;\n            let snappingDistance = state.snappingDistance;\n\n            if (snappingDistance !== 0) {\n                width = Math.round(width / snappingDistance) * snappingDistance;\n                height = Math.round(height / snappingDistance) * snappingDistance;\n            }\n\n            let fields = { ...state.fields };\n            let fieldId = action.fieldId;\n            let cardsToFix = action.cardId ? [action.cardId] : state.cardsAllIds;\n\n            for (const cardId of cardsToFix) {\n                let cardFields = { ...fields[cardId] };\n                if (fieldId in cardFields) {\n                    let fieldInfo = { ...cardFields[fieldId] };\n\n                    let nx = fieldInfo.x + fieldInfo.width / 2;\n                    let ny = fieldInfo.y + fieldInfo.height / 2;\n                    let { rx, ry } = rotateVec(\n                        (width - fieldInfo.width) / 2,\n                        (height - fieldInfo.height) / 2,\n                        fieldInfo.angle,\n                    );\n\n                    nx = nx + rx - width / 2;\n                    ny = ny + ry - height / 2;\n\n                    if (fieldInfo.type === 'image' && fieldInfo.cx && fieldInfo.cy) {\n                        if (fieldInfo.fit === 'width' || fieldInfo.fit === undefined) {\n                            let ratio = width / fieldInfo.width;\n                            fieldInfo.cx *= ratio;\n                            fieldInfo.cy *= ratio;\n                        } else if (fieldInfo.fit === 'height') {\n                            let ratio = height / fieldInfo.height;\n                            fieldInfo.cx *= ratio;\n                            fieldInfo.cy *= ratio;\n                        } else {\n                            fieldInfo.cx *= width / fieldInfo.width;\n                            fieldInfo.cy *= height / fieldInfo.height;\n                        }\n                    }\n\n                    fieldInfo.x = nx;\n                    fieldInfo.y = ny;\n                    fieldInfo.width = width;\n                    fieldInfo.height = height;\n                    cardFields[fieldId] = fieldInfo;\n                }\n                fields[cardId] = cardFields;\n            }\n\n            return {\n                ...state,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_FIELD_ANGLE: {\n            let angle = action.angle;\n\n            let fields = { ...state.fields };\n            let fieldId = action.fieldId;\n\n            let cardsToFix = action.cardId ? [action.cardId] : state.cardsAllIds;\n\n            for (const cardId of cardsToFix) {\n                let cardFields = { ...fields[cardId] };\n                if (fieldId in cardFields) {\n                    cardFields[fieldId] = {\n                        ...cardFields[fieldId],\n                        angle,\n                    };\n                }\n                fields[cardId] = cardFields;\n            }\n\n            return {\n                ...state,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN: {\n            let textSettings = {\n                ...state.textSettings,\n                align: action.align,\n            };\n\n            if (state.activeFieldId) {\n                let align = action.align;\n\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'text') {\n                            cardFields[fieldId] = {\n                                ...fieldInfo,\n                                align,\n                            };\n                        }\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR: {\n            let textSettings = {\n                ...state.textSettings,\n                color: action.color,\n            };\n\n            if (state.activeFieldId) {\n                let color = action.color;\n\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'text') {\n                            cardFields[fieldId] = {\n                                ...fieldInfo,\n                                color,\n                            };\n                        }\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY: {\n            let textSettings = {\n                ...state.textSettings,\n                color: action.fontFamily,\n            };\n\n            if (state.activeFieldId) {\n                let fontFamily = action.fontFamily;\n\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'text') {\n                            cardFields[fieldId] = {\n                                ...fieldInfo,\n                                fontFamily,\n                            };\n                        }\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT: {\n            let textSettings = {\n                ...state.textSettings,\n                color: action.fontVariant,\n            };\n\n            if (state.activeFieldId) {\n                let fontVariant = action.fontVariant;\n\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'text') {\n                            cardFields[fieldId] = {\n                                ...fieldInfo,\n                                fontVariant,\n                            };\n                        }\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT: {\n            let textSettings = {\n                ...state.textSettings,\n                fontFamily: action.fontFamily,\n                fontVariant: action.fontVariant,\n            };\n\n            if (state.activeFieldId) {\n                let fontFamily = action.fontFamily;\n                let fontVariant = action.fontVariant;\n\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'text') {\n                            cardFields[fieldId] = {\n                                ...fieldInfo,\n                                fontFamily,\n                                fontVariant,\n                            };\n                        }\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE: {\n            let textSettings = {\n                ...state.textSettings,\n                fontSize: action.fontSize,\n            };\n\n            if (state.activeFieldId) {\n                let fontSize = action.fontSize;\n\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'text') {\n                            cardFields[fieldId] = {\n                                ...fieldInfo,\n                                fontSize,\n                            };\n                        }\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT: {\n            let textSettings = {\n                ...state.textSettings,\n                lineHeight: action.lineHeight,\n            };\n\n            if (state.activeFieldId) {\n                let lineHeight = action.lineHeight;\n\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'text') {\n                            cardFields[fieldId] = {\n                                ...fieldInfo,\n                                lineHeight,\n                            };\n                        }\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_TEXT: {\n            let cardFields = { ...state.fields[action.cardId] };\n\n            const fieldInfo = cardFields[action.fieldId];\n            const name = fieldInfo.name || fieldInfo.id;\n\n            for (const fieldId in cardFields) {\n                const testFieldInfo = cardFields[fieldId];\n\n                if ((testFieldInfo.name === name || testFieldInfo.id === name) && testFieldInfo.type === 'text') {\n                    cardFields[fieldId] = {\n                        ...testFieldInfo,\n                        value: action.textInfo.value,\n                    };\n                }\n            }\n\n            return {\n                ...state,\n                fields: {\n                    ...state.fields,\n                    [action.cardId]: cardFields,\n                },\n            };\n        }\n        case CARDSET_CHANGE_IMAGE: {\n            let cardsToFix = state.applyToAllCards || action.cardId === undefined ? state.cardsAllIds : [action.cardId];\n\n            let fields = { ...state.fields };\n\n            for (const cardId of cardsToFix) {\n                let cardFields = { ...state.fields[cardId] };\n\n                const fieldInfo = cardFields[action.fieldId];\n                const name = fieldInfo.name || fieldInfo.id;\n\n                for (const fieldId in cardFields) {\n                    const testFieldInfo = cardFields[fieldId];\n\n                    if ((testFieldInfo.name === name || testFieldInfo.id === name) && testFieldInfo.type === 'image') {\n                        cardFields[fieldId] = {\n                            ...testFieldInfo,\n                            url: 'url' in action.imageInfo ? action.imageInfo.url : testFieldInfo.url,\n                            base64: 'base64' in action.imageInfo ? action.imageInfo.base64 : testFieldInfo.base64,\n                            color: 'color' in action.imageInfo ? action.imageInfo.color : testFieldInfo.color,\n                            imageWidth: 'width' in action.imageInfo ? action.imageInfo.width : testFieldInfo.imageWidth,\n                            imageHeight:\n                                'height' in action.imageInfo ? action.imageInfo.height : testFieldInfo.imageHeight,\n                            cx: 0,\n                            cy: 0,\n                            zoom: 0,\n                        };\n                    }\n                }\n\n                fields[cardId] = cardFields;\n            }\n\n            return {\n                ...state,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_IMAGE_BASE64: {\n            let cardFields = { ...state.fields[action.cardId] };\n\n            const fieldInfo = cardFields[action.fieldId];\n            const name = fieldInfo.name || fieldInfo.id;\n\n            for (const fieldId in cardFields) {\n                const testFieldInfo = cardFields[fieldId];\n\n                if ((testFieldInfo.name === name || testFieldInfo.id === name) && testFieldInfo.type === 'image') {\n                    cardFields[fieldId] = {\n                        ...testFieldInfo,\n                        base64: action.base64,\n                        cx: 0,\n                        cy: 0,\n                        zoom: 0,\n                    };\n                }\n            }\n\n            return {\n                ...state,\n                fields: {\n                    ...state.fields,\n                    [action.cardId]: cardFields,\n                },\n            };\n        }\n        case CARDSET_SET_ACTIVE_CARD_AND_FIELD: {\n            let textSettings = { ...state.textSettings };\n            let activeSidebar = state.activeSidebar;\n\n            if (activeSidebar !== SidebarState.Measurements && action.cardId !== undefined) {\n                activeSidebar = SidebarState.Details;\n            }\n\n            if (action.cardId !== undefined && action.fieldId !== undefined) {\n                const fieldInfo = state.fields[action.cardId][action.fieldId];\n\n                if (fieldInfo.type === 'text') {\n                    textSettings.align = fieldInfo.align;\n                    textSettings.color = fieldInfo.color;\n                    textSettings.fontFamily = fieldInfo.fontFamily;\n                    textSettings.fontVariant = fieldInfo.fontVariant;\n                    textSettings.fontSize = fieldInfo.fontSize;\n                    textSettings.lineHeight = fieldInfo.lineHeight;\n\n                    if (activeSidebar !== SidebarState.Measurements) {\n                        activeSidebar = SidebarState.Text;\n                    }\n                } else {\n                    if (activeSidebar !== SidebarState.Measurements) {\n                        activeSidebar = SidebarState.Image;\n                    }\n                }\n            }\n\n            return {\n                ...state,\n                activeCardId: action.cardId,\n                isBackActive: action.isBackActive,\n                activeFieldId: action.fieldId,\n                textSettings,\n                activeSidebar,\n            };\n        }\n\n        case CARDSET_CHANGE_APPLY_TO_ALLCARDS: {\n            return {\n                ...state,\n                applyToAllCards: action.applyToAllCards,\n            };\n        }\n\n        case CARDSET_SET_SIDEBAR_STATE: {\n            return {\n                ...state,\n                activeSidebar: action.sidebarState,\n            };\n        }\n        case CARDSET_SET_ZOOM: {\n            return {\n                ...state,\n                zoom: action.zoom,\n            };\n        }\n        case CARDSET_IMPORT_DATA: {\n            return {\n                ...state,\n                ...action.data,\n            };\n        }\n        default:\n            return state;\n    }\n}\n\nexport function images(state: ImageState = DefaultImageState, action: ImageListAction): ImageState {\n    switch (action.type) {\n        case IMAGE_LIST_REQUEST:\n            return Object.assign({}, state, {\n                filter: action.filter,\n            });\n        case IMAGE_LIST_SUCCESS:\n            return Object.assign({}, state, {\n                images: action.images,\n            });\n        default:\n            return state;\n    }\n}\n\nconst undoableCardset = undoable(cardset, {\n    ignoreInitialState: true,\n    undoType: CARDSET_UNDO,\n    redoType: CARDSET_REDO,\n    groupBy: (action: Action) => {\n        if (\n            action.type === 'CARDSET_CHANGE_FIELD_SIZE' ||\n            action.type === 'CARDSET_CHANGE_FIELD_POSITION' ||\n            action.type === 'CARDSET_CHANGE_FIELD_ANGLE' ||\n            action.type === 'CARDSET_CHANGE_FIELD_ZOOM' ||\n            action.type === 'CARDSET_CHANGE_FIELD_PAN'\n        ) {\n            return action.group;\n        }\n        return null;\n    },\n    filter: (action: Action) => {\n        if (!action.type.startsWith('CARDSET_')) {\n            return false;\n        }\n\n        if (\n            action.type === CARDSET_SELECT_REQUEST ||\n            action.type === CARDSET_SET_ACTIVE_CARD_AND_FIELD ||\n            action.type === CARDSET_SET_SIDEBAR_STATE\n        ) {\n            return false;\n        }\n        return true;\n    },\n});\n\nconst reducers = combineReducers({\n    message,\n    auth,\n    signup,\n    games,\n    cardsets,\n    cardset: undoableCardset,\n    images,\n});\n\nexport default reducers;\n","import { applyMiddleware, compose, createStore, Store } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { rootSaga } from './sagas';\nimport reducers from './reducers';\n\nexport let store: Store | undefined;\n\nexport function createAppStore() {\n    const sagaMiddleware = createSagaMiddleware();\n    store = createStore(\n        reducers,\n        // @ts-ignore: __REDUX_DEVTOOLS_EXTENSION__ does not exists on window\n        window.__REDUX_DEVTOOLS_EXTENSION__\n            ? compose(\n                  applyMiddleware(sagaMiddleware),\n                  // @ts-ignore: __REDUX_DEVTOOLS_EXTENSION__ does not exists on window\n                  window.__REDUX_DEVTOOLS_EXTENSION__(),\n              )\n            : applyMiddleware(sagaMiddleware),\n    );\n    sagaMiddleware.run(rootSaga);\n    return store;\n}\n","import { Ghost, Browser } from 'react-kawaii';\nimport React, { Component } from 'react';\n\nexport enum Character {\n    Ghost,\n    Browser,\n}\ninterface Props {\n    character: Character;\n    mood?: string;\n}\n\nexport default class KawaiiMessage extends Component<Props> {\n    render() {\n        const { character, mood } = this.props;\n\n        return (\n            <div\n                style={{\n                    marginTop: '1em',\n                    marginBottom: '1em',\n                    padding: '1em',\n                    borderRadius: '1em',\n                    backgroundColor: 'var(--color-2)',\n                    display: 'grid',\n                    grid: 'auto-flow / minmax(120px, auto) 1fr',\n                }}\n            >\n                {character === Character.Ghost && <Ghost size={120} mood={mood || 'blissful'} color=\"#faebef\" />}\n                {character === Character.Browser && <Browser size={120} mood={mood || 'blissful'} color=\"#faebef\" />}\n                <div style={{ marginLeft: '1em' }}>{this.props.children}</div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nexport default class AboutPage extends Component {\n    render() {\n        return (\n            <div>\n                <h2>About</h2>\n                <p>\n                    \"Card-a-mon\" is card game development tool. At the moment it is project of single person (me) with a\n                    vision. My aim is to create affordable and practical tool to develop card games from A (prototyping)\n                    to Z (printing). If you have ideas, suggestions, proposals, comments and etc. then you can contact\n                    me by e-mail <a href=\"mailto:dalius@ffff.lt\">dalius@ffff.lt</a>.\n                </p>\n                <h2>Credits</h2>\n                This project is available because of number amazing open source projects. Some of them:\n                <ul>\n                    <li>\n                        <a href=\"https://reactjs.org/\">React</a> and all the ecosystem around it.\n                    </li>\n                    <li>\n                        <a href=\"https://fonts.google.com/\">Google Fonts</a>\n                    </li>\n                    <li>\n                        <a href=\"https://github.com/game-icons/icons\">Game icons</a>\n                    </li>\n                    <li>\n                        <a href=\"http://pdfkit.org/\">PDFKit</a>\n                    </li>\n                </ul>\n                <p>... and many more.</p>\n            </div>\n        );\n    }\n}\n","import { connect } from 'react-redux';\nimport React from 'react';\nimport shortid from 'shortid';\n\nimport { Dispatch } from '../actions';\nimport { State } from '../reducers';\nimport panIcon from './pan.svg';\nimport zoomIcon from './zoom.svg';\nimport resizeIcon from './resize.svg';\nimport rotateIcon from './rotate.svg';\nimport style from './FieldController.module.css';\nimport { rotateVec } from '../utils';\n\ninterface OwnProps {\n    cardId: string;\n    fieldId: string;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    angle: number;\n    zoom?: number;\n    cx?: number;\n    cy?: number;\n    children: React.ReactNode;\n    onDrag: (x: number, y: number, cardOnly: boolean, group: string) => void;\n    onResize: (width: number, height: number, cardOnly: boolean, group: string) => void;\n    onRotate: (angle: number, cardOnly: boolean, group: string) => void;\n    onZoom?: (zoom: number, cardOnly: boolean, group: string) => void;\n    onPan?: (cx: number, cy: number, cardOnly: boolean, group: string) => void;\n    cardWidth: number;\n    cardHeight: number;\n    ppmm: number;\n}\n\ninterface StateProps {\n    isActive: boolean;\n    isActiveField: boolean;\n    isLocked: boolean;\n    isUnclickable: boolean;\n    snappingDistance: number;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nexport interface LocalState {\n    startX: number;\n    startY: number;\n    originalAngle: number;\n    activatedUsingTouch: boolean;\n    group: string;\n}\n\nclass FieldController extends React.Component<Props, LocalState> {\n    cDiv: React.RefObject<HTMLDivElement>;\n    panDiv: React.RefObject<HTMLImageElement>;\n    zoomDiv: React.RefObject<HTMLImageElement>;\n    resizeDiv: React.RefObject<HTMLImageElement>;\n    rotateDiv: React.RefObject<HTMLImageElement>;\n    originalBodyCursor: string | null;\n\n    constructor(props: Props) {\n        super(props);\n        this.cDiv = React.createRef();\n        this.panDiv = React.createRef();\n        this.zoomDiv = React.createRef();\n        this.resizeDiv = React.createRef();\n        this.rotateDiv = React.createRef();\n        this.originalBodyCursor = null;\n        this.state = {\n            activatedUsingTouch: false,\n            startX: 0,\n            startY: 0,\n            originalAngle: 0,\n            group: '',\n        };\n    }\n\n    componentDidMount() {\n        if (this.cDiv.current === null) return;\n        if (this.panDiv.current === null) return;\n        if (this.zoomDiv.current === null) return;\n        if (this.resizeDiv.current === null) return;\n        if (this.rotateDiv.current === null) return;\n\n        this.originalBodyCursor = document.body.style.cursor;\n\n        this.cDiv.current.addEventListener('mousedown', this.handleMouseDown);\n        this.cDiv.current.addEventListener('touchstart', this.handleTouchStart);\n        this.panDiv.current.addEventListener('mousedown', this.handlePanMouseDown);\n        this.panDiv.current.addEventListener('touchstart', this.handlePanTouchStart);\n        this.zoomDiv.current.addEventListener('mousedown', this.handleZoomMouseDown);\n        this.zoomDiv.current.addEventListener('touchstart', this.handleZoomTouchStart);\n        this.resizeDiv.current.addEventListener('mousedown', this.handleResizeMouseDown);\n        this.resizeDiv.current.addEventListener('touchstart', this.handleResizeTouchStart);\n        this.rotateDiv.current.addEventListener('mousedown', this.handleRotateMouseDown);\n        this.rotateDiv.current.addEventListener('touchstart', this.handleRotateTouchStart);\n    }\n\n    handleBrowserDragStart = (event: React.DragEvent) => {\n        event.stopPropagation();\n        event.preventDefault();\n    };\n\n    // Dragging handling\n\n    handleMouseDown = (event: MouseEvent) => {\n        this.handleDragStart(event);\n\n        document.addEventListener('mousemove', this.handleMouseMove);\n        document.addEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleTouchStart = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleDragStart(event.changedTouches[0]);\n\n        document.addEventListener('touchmove', this.handleTouchMove, { passive: false });\n        document.addEventListener('touchend', this.handleTouchEnd, { passive: false });\n    };\n\n    handleDragStart = (co: MouseEvent | Touch) => {\n        if (this.cDiv.current === null) return;\n\n        this.cDiv.current.style.cursor = 'grabbing';\n\n        this.setState({ startX: co.clientX, startY: co.clientY, group: shortid.generate() });\n    };\n\n    handleMouseMove = (event: MouseEvent) => {\n        this.handleDragMove(event, event.ctrlKey);\n    };\n\n    handleTouchMove = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        event.preventDefault();\n        this.handleDragMove(event.changedTouches[0], event.ctrlKey);\n    };\n\n    handleDragMove = (co: MouseEvent | Touch, disableSnapping: boolean) => {\n        const { isLocked, x, y } = this.props;\n\n        if (isLocked) return;\n\n        const { ppmm, snappingDistance } = this.props;\n\n        let nx = x + co.clientX - this.state.startX;\n        let ny = y + co.clientY - this.state.startY;\n\n        if (!disableSnapping && snappingDistance !== 0) {\n            nx = Math.round(nx / ppmm / snappingDistance) * snappingDistance * ppmm;\n            ny = Math.round(ny / ppmm / snappingDistance) * snappingDistance * ppmm;\n        }\n\n        this.setState({ startX: co.clientX, startY: co.clientY });\n        this.props.onDrag(nx, ny, true, this.state.group);\n    };\n\n    handleMouseUp = (event: MouseEvent) => {\n        this.handleComplete(event, false);\n\n        document.removeEventListener('mousemove', this.handleMouseMove);\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleTouchEnd = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleComplete(event, true);\n\n        document.removeEventListener('touchmove', this.handleTouchMove);\n        document.removeEventListener('touchend', this.handleTouchEnd);\n    };\n\n    handleComplete = (event: MouseEvent | TouchEvent, isTouchEvent: boolean) => {\n        const { isLocked, x, y } = this.props;\n\n        if (this.cDiv.current === null) return;\n\n        if (!isLocked) {\n            this.props.onDrag(x, y, false, this.state.group);\n        }\n        this.setState({ activatedUsingTouch: isTouchEvent });\n\n        this.cDiv.current.style.cursor = 'grab';\n    };\n\n    // Pan handling\n\n    handlePanMouseDown = (event: MouseEvent) => {\n        this.handlePanStart(event);\n\n        document.addEventListener('mousemove', this.handlePanMouseMove);\n        document.addEventListener('mouseup', this.handlePanMouseUp);\n        event.stopPropagation();\n    };\n\n    handlePanTouchStart = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handlePanStart(event.changedTouches[0]);\n\n        document.addEventListener('touchmove', this.handlePanTouchMove, { passive: false });\n        document.addEventListener('touchend', this.handlePanTouchEnd, { passive: false });\n        event.stopPropagation();\n        event.preventDefault();\n    };\n\n    handlePanStart = (co: MouseEvent | Touch) => {\n        document.body.style.cursor = `url(${panIcon}), auto`;\n\n        this.setState({ startX: co.clientX, startY: co.clientY, group: shortid.generate() });\n    };\n\n    handlePanMouseMove = (event: MouseEvent) => {\n        this.handlePanMove(event);\n        event.preventDefault();\n    };\n\n    handlePanTouchMove = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handlePanMove(event.changedTouches[0]);\n        event.preventDefault();\n    };\n\n    handlePanMove = (co: MouseEvent | Touch) => {\n        const { cx, cy, angle, onPan } = this.props;\n        if (!onPan || cx === undefined || cy === undefined) return;\n\n        let dx = co.clientX - this.state.startX;\n        let dy = co.clientY - this.state.startY;\n        const { rx, ry } = rotateVec(dx, dy, -angle);\n\n        const newCx = cx + rx;\n        const newCy = cy + ry;\n\n        this.setState({ startX: co.clientX, startY: co.clientY });\n\n        onPan(newCx, newCy, true, this.state.group);\n    };\n\n    handlePanMouseUp = (event: MouseEvent) => {\n        this.handlePanComplete(event);\n\n        document.removeEventListener('mousemove', this.handlePanMouseMove);\n        document.removeEventListener('mouseup', this.handlePanMouseUp);\n    };\n\n    handlePanTouchEnd = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handlePanComplete(event);\n\n        document.removeEventListener('touchmove', this.handlePanTouchMove);\n        document.removeEventListener('touchend', this.handlePanTouchEnd);\n    };\n\n    handlePanComplete = (event: MouseEvent | TouchEvent) => {\n        const { cx, cy, onPan } = this.props;\n        if (onPan && cx !== undefined && cy !== undefined) {\n            onPan(cx, cy, true, this.state.group);\n        }\n\n        document.body.style.cursor = this.originalBodyCursor;\n        event.preventDefault();\n    };\n\n    // Zoom handling\n\n    handleZoomMouseDown = (event: MouseEvent) => {\n        this.handleZoomStart(event);\n\n        document.addEventListener('mousemove', this.handleZoomMouseMove);\n        document.addEventListener('mouseup', this.handleZoomMouseUp);\n        event.stopPropagation();\n    };\n\n    handleZoomTouchStart = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleZoomStart(event.changedTouches[0]);\n\n        document.addEventListener('touchmove', this.handleZoomTouchMove, { passive: false });\n        document.addEventListener('touchend', this.handleZoomTouchEnd, { passive: false });\n        event.stopPropagation();\n        event.preventDefault();\n    };\n\n    handleZoomStart = (co: { clientX: number; clientY: number }) => {\n        document.body.style.cursor = `url(${zoomIcon}), auto`;\n\n        this.setState({ startX: co.clientX, startY: co.clientY, group: shortid.generate() });\n    };\n\n    handleZoomMouseMove = (event: MouseEvent) => {\n        this.handleZoomMove(event);\n        event.preventDefault();\n    };\n\n    handleZoomTouchMove = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleZoomMove(event.changedTouches[0]);\n        event.preventDefault();\n    };\n\n    handleZoomMove = (co: MouseEvent | Touch) => {\n        const { zoom, onZoom } = this.props;\n        if (!onZoom || zoom === undefined) return;\n\n        const dx = co.clientX - this.state.startX;\n        const dy = co.clientY - this.state.startY;\n\n        let z = Math.abs(dx) > Math.abs(dy) ? dx : dy;\n\n        let newZoom = Math.max(zoom + z / 30, 1);\n        this.setState({ startX: co.clientX, startY: co.clientY });\n\n        onZoom(newZoom, true, this.state.group);\n    };\n\n    handleZoomMouseUp = (event: MouseEvent) => {\n        this.handleZoomComplete(event);\n\n        document.removeEventListener('mousemove', this.handleZoomMouseMove);\n        document.removeEventListener('mouseup', this.handleZoomMouseUp);\n    };\n\n    handleZoomTouchEnd = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleZoomComplete(event);\n\n        document.removeEventListener('touchmove', this.handleZoomTouchMove);\n        document.removeEventListener('touchend', this.handleZoomTouchEnd);\n    };\n\n    handleZoomComplete = (event: Event) => {\n        document.body.style.cursor = this.originalBodyCursor;\n        event.preventDefault();\n    };\n\n    // Resize handling\n\n    handleResizeMouseDown = (event: MouseEvent) => {\n        this.handleResizeStart(event);\n\n        document.addEventListener('mousemove', this.handleResizeMouseMove);\n        document.addEventListener('mouseup', this.handleResizeMouseUp);\n        event.stopPropagation();\n    };\n\n    handleResizeTouchStart = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleResizeStart(event.changedTouches[0]);\n\n        document.addEventListener('touchmove', this.handleResizeTouchMove, { passive: false });\n        document.addEventListener('touchend', this.handleResizeTouchEnd, { passive: false });\n        event.stopPropagation();\n        event.preventDefault();\n    };\n\n    handleResizeStart = (co: MouseEvent | Touch) => {\n        const { isLocked } = this.props;\n\n        if (isLocked) return;\n\n        document.body.style.cursor = `url(${resizeIcon}), auto`;\n\n        this.setState({ startX: co.clientX, startY: co.clientY, group: shortid.generate() });\n    };\n\n    handleResizeMouseMove = (event: MouseEvent) => {\n        this.handleResizeMove(event, event.ctrlKey);\n        event.preventDefault();\n    };\n\n    handleResizeTouchMove = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleResizeMove(event.changedTouches[0], event.ctrlKey);\n        event.preventDefault();\n    };\n\n    handleResizeMove = (co: { clientX: number; clientY: number }, disableSnapping: boolean) => {\n        const { isLocked, ppmm, width, height, angle, snappingDistance, onResize } = this.props;\n\n        if (isLocked) return;\n\n        const dx = co.clientX - this.state.startX;\n        const dy = co.clientY - this.state.startY;\n\n        const { rx, ry } = rotateVec(dx, dy, -angle);\n\n        let newWidth = width + rx;\n        let newHeight = height + ry;\n\n        if (!disableSnapping && snappingDistance !== 0) {\n            newWidth = Math.round(newWidth / ppmm / snappingDistance) * snappingDistance * ppmm;\n            newHeight = Math.round(newHeight / ppmm / snappingDistance) * snappingDistance * ppmm;\n        }\n\n        this.setState({ startX: co.clientX, startY: co.clientY });\n\n        onResize(newWidth, newHeight, true, this.state.group);\n    };\n\n    handleResizeMouseUp = (event: MouseEvent) => {\n        this.handleResizeComplete(event);\n\n        document.removeEventListener('mousemove', this.handleResizeMouseMove);\n        document.removeEventListener('mouseup', this.handleResizeMouseUp);\n    };\n\n    handleResizeTouchEnd = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleResizeComplete(event);\n\n        document.removeEventListener('touchmove', this.handleResizeTouchMove);\n        document.removeEventListener('touchend', this.handleResizeTouchEnd);\n    };\n\n    handleResizeComplete = (event: Event) => {\n        const { isLocked } = this.props;\n\n        if (!isLocked) {\n            const { width, height, onResize } = this.props;\n            onResize(width, height, false, this.state.group);\n        }\n\n        document.body.style.cursor = this.originalBodyCursor;\n\n        event.preventDefault();\n    };\n\n    // Rotation handling\n\n    handleRotateMouseDown = (event: MouseEvent) => {\n        this.handleRotateStart(event);\n\n        document.addEventListener('mousemove', this.handleRotateMouseMove);\n        document.addEventListener('mouseup', this.handleRotateMouseUp);\n        event.stopPropagation();\n    };\n\n    handleRotateTouchStart = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleRotateStart(event.changedTouches[0]);\n\n        document.addEventListener('touchmove', this.handleRotateTouchMove, { passive: false });\n        document.addEventListener('touchend', this.handleRotateTouchEnd, { passive: false });\n        event.stopPropagation();\n        event.preventDefault();\n    };\n\n    handleRotateStart = (co: { clientX: number; clientY: number }) => {\n        const { isLocked, angle } = this.props;\n\n        if (isLocked || this.cDiv.current === null) return;\n\n        document.body.style.cursor = `url(${rotateIcon}), auto`;\n\n        const rect = this.cDiv.current.getBoundingClientRect();\n        let startX = rect.left + this.cDiv.current.clientWidth / 2;\n        let startY = rect.top + this.cDiv.current.clientHeight / 2;\n\n        let originalAngle = angle + Math.atan2(startX - co.clientX, startY - co.clientY);\n\n        this.setState({ startX, startY, originalAngle, group: shortid.generate() });\n    };\n\n    handleRotateMouseMove = (event: MouseEvent) => {\n        this.handleRotateMove(event, event.ctrlKey);\n        event.preventDefault();\n    };\n\n    handleRotateTouchMove = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleRotateMove(event.changedTouches[0], event.ctrlKey);\n        event.preventDefault();\n    };\n\n    handleRotateMove = (co: MouseEvent | Touch, disableSnapping: boolean) => {\n        const { isLocked, onRotate } = this.props;\n\n        if (isLocked) return;\n\n        const { originalAngle, startX, startY } = this.state;\n\n        let curAngle = Math.atan2(startX - co.clientX, startY - co.clientY);\n        let newAngle = originalAngle - curAngle;\n\n        if (!disableSnapping) {\n            newAngle = ((Math.round(((newAngle / Math.PI) * 180) / 5) * 5) / 180) * Math.PI;\n        }\n\n        onRotate(newAngle, true, this.state.group);\n    };\n\n    handleRotateMouseUp = (event: MouseEvent) => {\n        this.handleRotateComplete(event);\n\n        document.removeEventListener('mousemove', this.handleRotateMouseMove);\n        document.removeEventListener('mouseup', this.handleRotateMouseUp);\n    };\n\n    handleRotateTouchEnd = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleRotateComplete(event);\n\n        document.removeEventListener('touchmove', this.handleRotateTouchMove);\n        document.removeEventListener('touchend', this.handleRotateTouchEnd);\n    };\n\n    handleRotateComplete = (event: Event) => {\n        const { isLocked } = this.props;\n\n        if (!isLocked) {\n            const { angle } = this.props;\n            this.props.onRotate(angle, false, this.state.group);\n        }\n\n        document.body.style.cursor = this.originalBodyCursor;\n\n        event.preventDefault();\n    };\n\n    // Rendering\n\n    render() {\n        const {\n            x,\n            y,\n            width,\n            height,\n            angle,\n            zoom,\n            cx,\n            children,\n            isActive,\n            isActiveField,\n            isLocked,\n            isUnclickable,\n        } = this.props;\n\n        return (\n            <div\n                ref={this.cDiv}\n                onDragStart={this.handleBrowserDragStart}\n                className={`${style.fieldcontroller} ${isActiveField ? style.fieldcontrolleractivefield : ''} ${\n                    isActive ? style.fieldcontrolleractive : ''\n                } ${isActive && this.state.activatedUsingTouch ? style.touchactivated : ''} `}\n                style={{\n                    position: 'absolute',\n                    left: x,\n                    top: y,\n                    width: width,\n                    height: height,\n                    cursor: 'grab',\n                    transform: `rotate(${angle}rad)`,\n                    pointerEvents: isUnclickable ? 'none' : 'initial',\n                }}\n            >\n                {children}\n                <img\n                    src={panIcon}\n                    alt=\"pan\"\n                    ref={this.panDiv}\n                    className={style.controller}\n                    style={{\n                        position: 'absolute',\n                        left: 0,\n                        top: 0,\n                        cursor: `url(${panIcon}), auto`,\n                        display: cx !== undefined && zoom !== undefined ? 'initial' : 'none',\n                    }}\n                />\n\n                <img\n                    src={zoomIcon}\n                    alt=\"zoom\"\n                    ref={this.zoomDiv}\n                    className={style.controller}\n                    style={{\n                        position: 'absolute',\n                        right: 0,\n                        top: 0,\n                        cursor: `url(${zoomIcon}), auto`,\n                        display: zoom !== undefined ? 'initial' : 'none',\n                    }}\n                />\n\n                <img\n                    src={resizeIcon}\n                    alt=\"resize\"\n                    ref={this.resizeDiv}\n                    className={style.controller}\n                    style={{\n                        position: 'absolute',\n                        right: 0,\n                        bottom: 0,\n                        cursor: `url(${resizeIcon}), auto`,\n                        display: isLocked ? 'none' : 'initial',\n                    }}\n                />\n                <img\n                    src={rotateIcon}\n                    alt=\"rotate\"\n                    ref={this.rotateDiv}\n                    className={style.controller}\n                    style={{\n                        position: 'absolute',\n                        left: 0,\n                        bottom: 0,\n                        cursor: `url(${rotateIcon}), auto`,\n                        display: isLocked ? 'none' : 'initial',\n                    }}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    const isActiveField = props.fieldId === state.cardset.present.activeFieldId;\n    const isActive =\n        props.cardId === state.cardset.present.activeCardId && props.fieldId === state.cardset.present.activeFieldId;\n    const fieldInfo = state.cardset.present.fields[props.cardId][props.fieldId];\n    const isLocked = fieldInfo.locked === true;\n    const isUnclickable = fieldInfo.unclickable === true;\n\n    return {\n        isActive,\n        isActiveField,\n        isLocked,\n        isUnclickable,\n        snappingDistance: state.cardset.present.snappingDistance,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(FieldController);\n","import { connect } from 'react-redux';\nimport React, { PureComponent } from 'react';\n\nimport {\n    Dispatch,\n    cardSetActiveCardAndField,\n    cardSetChangeImage,\n    cardSetChangeFieldPosition,\n    cardSetChangeFieldAngle,\n    cardSetChangeFieldPan,\n    cardSetChangeFieldZoom,\n    cardSetChangeFieldSize,\n} from '../actions';\nimport { ImageInfo, ImageFieldInfo } from '../types';\nimport { State } from '../reducers';\nimport FieldController from './FieldController';\nimport emptyImageImage from './image.svg';\nimport style from './ImageField.module.css';\nimport { calculateImageDimensions } from '../utils';\n\ninterface OwnProps {\n    cardId: string;\n    isOnBack: boolean;\n    ppmm: number;\n    imageFieldInfo: ImageFieldInfo;\n    cardWidth: number;\n    cardHeight: number;\n}\n\ninterface StateProps {\n    imageUrl?: string;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\ninterface LocalState {\n    dragIsOver: boolean;\n    wasMoved: boolean;\n    x: number;\n    y: number;\n}\n\nclass ImageField extends PureComponent<Props, LocalState> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            dragIsOver: false,\n            wasMoved: false,\n            x: 0,\n            y: 0,\n        };\n    }\n\n    handleDrag = (x: number, y: number, cardOnly: boolean, group: string) => {\n        const { dispatch, cardId, imageFieldInfo, ppmm } = this.props;\n        dispatch(\n            cardSetChangeFieldPosition(cardOnly ? cardId : undefined, imageFieldInfo.id, x / ppmm, y / ppmm, group),\n        );\n    };\n\n    handlePan = (cx: number, cy: number, cardOnly: boolean, group: string) => {\n        const { dispatch, cardId, imageFieldInfo, ppmm } = this.props;\n        dispatch(cardSetChangeFieldPan(cardOnly ? cardId : undefined, imageFieldInfo.id, cx / ppmm, cy / ppmm, group));\n    };\n\n    handleZoom = (zoom: number, cardOnly: boolean, group: string) => {\n        const { dispatch, cardId, imageFieldInfo } = this.props;\n        dispatch(cardSetChangeFieldZoom(cardOnly ? cardId : undefined, imageFieldInfo.id, zoom, group));\n    };\n\n    handleResize = (width: number, height: number, cardOnly: boolean, group: string) => {\n        const { dispatch, imageFieldInfo, cardId, ppmm } = this.props;\n        dispatch(\n            cardSetChangeFieldSize(\n                cardOnly ? cardId : undefined,\n                imageFieldInfo.id,\n                width / ppmm,\n                height / ppmm,\n                group,\n            ),\n        );\n    };\n\n    handleRotate = (angle: number, cardOnly: boolean, group: string) => {\n        const { dispatch, cardId, imageFieldInfo } = this.props;\n        dispatch(cardSetChangeFieldAngle(cardOnly ? cardId : undefined, imageFieldInfo.id, angle, group));\n    };\n\n    handleMouseDown = () => {\n        this.setState({ wasMoved: false });\n    };\n\n    handleTouchStart = (event: React.TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.setState({ wasMoved: false, x: event.changedTouches[0].clientX, y: event.changedTouches[0].clientY });\n    };\n\n    handleMouseMove = () => {\n        this.setState({ wasMoved: true });\n    };\n\n    handleTouchMove = (event: React.TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        const { x, y } = this.state;\n        if (Math.abs(event.changedTouches[0].clientX - x) > 3 || Math.abs(event.changedTouches[0].clientY - y) > 3) {\n            this.setState({ wasMoved: true });\n        }\n    };\n\n    handleMouseUp = () => {\n        this.handleComplete();\n    };\n\n    handleTouchEnd = (event: React.TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleComplete();\n    };\n\n    handleComplete = () => {\n        const { dispatch, cardId, isOnBack, imageFieldInfo } = this.props;\n        if (!this.state.wasMoved) {\n            dispatch(cardSetActiveCardAndField(cardId, isOnBack, imageFieldInfo.id));\n        }\n    };\n\n    handleDragOver = (event: React.DragEvent<HTMLDivElement>) => {\n        this.setState({ dragIsOver: true });\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDragLeave = (event: React.DragEvent<HTMLDivElement>) => {\n        this.setState({ dragIsOver: false });\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = (event: React.DragEvent<HTMLDivElement>) => {\n        this.setState({ dragIsOver: false });\n        event.preventDefault();\n        event.stopPropagation();\n\n        const url = event.dataTransfer.getData('URL');\n        const imagefilesPos = url.indexOf('/api/imagefiles/');\n\n        if (imagefilesPos !== -1) {\n            const { cardId, imageFieldInfo, dispatch } = this.props;\n            let img = new Image();\n\n            img.addEventListener('load', function() {\n                const ii: ImageInfo = {\n                    url: url.substr(imagefilesPos),\n                    width: this.naturalWidth,\n                    height: this.naturalHeight,\n                };\n                dispatch(cardSetChangeImage(cardId, imageFieldInfo.id, ii));\n            });\n            img.src = url;\n        }\n    };\n\n    render() {\n        const { imageFieldInfo, imageUrl, ppmm, cardWidth, cardHeight } = this.props;\n\n        let dim = calculateImageDimensions(imageFieldInfo);\n        let calculatedImageWidth = dim.width * ppmm;\n        let calculatedImageHeight = dim.height * ppmm;\n\n        return (\n            <FieldController\n                cardId={this.props.cardId}\n                fieldId={imageFieldInfo.id}\n                x={imageFieldInfo.x * ppmm}\n                y={imageFieldInfo.y * ppmm}\n                width={imageFieldInfo.width * ppmm}\n                height={imageFieldInfo.height * ppmm}\n                cx={(imageFieldInfo.cx || 0) * ppmm}\n                cy={(imageFieldInfo.cy || 0) * ppmm}\n                zoom={imageFieldInfo.zoom || 1}\n                angle={imageFieldInfo.angle}\n                onDrag={this.handleDrag}\n                onPan={this.handlePan}\n                onZoom={this.handleZoom}\n                onResize={this.handleResize}\n                onRotate={this.handleRotate}\n                cardWidth={cardWidth}\n                cardHeight={cardHeight}\n                ppmm={ppmm}\n            >\n                <div\n                    style={{\n                        width: '100%',\n                        height: '100%',\n                        position: 'relative',\n                        overflow: imageFieldInfo.crop ? 'hidden' : 'visible',\n                    }}\n                    className={this.state.dragIsOver ? style.over : ''}\n                    onMouseDown={this.handleMouseDown}\n                    onTouchStart={this.handleTouchStart}\n                    onMouseMove={this.handleMouseMove}\n                    onTouchMove={this.handleTouchMove}\n                    onMouseUp={this.handleMouseUp}\n                    onTouchEnd={this.handleTouchEnd}\n                    onDragOver={this.handleDragOver}\n                    onDragLeave={this.handleDragLeave}\n                    onDrop={this.handleDrop}\n                >\n                    <img\n                        style={{\n                            position: 'absolute',\n                            opacity: imageUrl && imageUrl.length > 0 ? 1 : 0.5,\n                            left: (imageFieldInfo.cx || 0) * ppmm,\n                            top: (imageFieldInfo.cy || 0) * ppmm,\n                            width: calculatedImageWidth,\n                            height: calculatedImageHeight,\n                        }}\n                        src={imageUrl || emptyImageImage}\n                        alt=\"\"\n                    />\n                </div>\n            </FieldController>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    let imageUrl: string | undefined = '';\n    if (props.imageFieldInfo && props.imageFieldInfo.type === 'image') {\n        if (props.imageFieldInfo.base64) {\n            imageUrl = 'data:image/svg+xml;base64,' + props.imageFieldInfo.base64;\n        } else {\n            imageUrl = props.imageFieldInfo && props.imageFieldInfo.url;\n        }\n    }\n\n    return {\n        imageUrl,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(ImageField);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DEFAULT_FONT, DEFAULT_FONT_SIZE, DEFAULT_LINE_HEIGHT } from '../constants';\nimport { Dispatch, cardSetActiveCardAndField, cardSetChangeText } from '../actions';\nimport { State } from '../reducers';\nimport { TextInfo } from '../types';\nimport style from './ContentEditable.module.css';\n\ninterface OwnProps {\n    cardId: string;\n    isOnBack: boolean;\n    fieldId: string;\n    align: string;\n    color: string;\n    fontFamily: string;\n    fontVariant: string;\n    fontSize: number;\n    lineHeight: number;\n}\n\ninterface StateProps {\n    isActive: boolean;\n    textValue: string;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass ContentEditable extends Component<Props> {\n    editDiv: React.RefObject<HTMLDivElement>;\n    currentText: string;\n    currentAlign: string;\n    currentColor: string;\n    currentFontFamily: string;\n    currentFontVariant: string;\n    currentFontSize: number;\n    currentLineHeight: number;\n    timeout: NodeJS.Timeout | null;\n    wasMoved: boolean;\n    x: number;\n    y: number;\n\n    constructor(props: Props) {\n        super(props);\n        this.editDiv = React.createRef();\n        this.currentText = '';\n        this.currentAlign = '';\n        this.currentColor = '';\n        this.currentFontFamily = '';\n        this.currentFontVariant = '';\n        this.currentFontSize = DEFAULT_FONT_SIZE;\n        this.currentLineHeight = DEFAULT_LINE_HEIGHT;\n        this.timeout = null;\n        this.wasMoved = false;\n        this.x = 0;\n        this.y = 0;\n    }\n\n    componentDidMount() {\n        const { isActive } = this.props;\n\n        if (!this.editDiv.current) return;\n\n        this.editDiv.current.addEventListener('mousedown', this.handleMouseDown);\n        this.editDiv.current.addEventListener('touchstart', this.handleTouchStart);\n        this.editDiv.current.addEventListener('mousemove', this.handleMouseMove);\n        this.editDiv.current.addEventListener('touchmove', this.handleTouchMove, { passive: false });\n        this.editDiv.current.addEventListener('mouseup', this.handleMouseUp);\n        this.editDiv.current.addEventListener('touchend', this.handleTouchEnd, { passive: false });\n\n        if (isActive) {\n            this.editDiv.current.focus();\n        }\n    }\n\n    shouldComponentUpdate(nextProps: Props) {\n        const shouldUpdate =\n            nextProps.textValue !== this.currentText ||\n            nextProps.align !== this.currentAlign ||\n            nextProps.color !== this.currentColor ||\n            nextProps.fontFamily !== this.currentFontFamily ||\n            nextProps.fontVariant !== this.currentFontVariant ||\n            nextProps.fontSize !== this.currentFontSize ||\n            nextProps.lineHeight !== this.currentLineHeight ||\n            this.props.isActive !== nextProps.isActive;\n\n        return shouldUpdate;\n    }\n\n    componentDidUpdate() {\n        const { textValue, align, color, fontFamily, fontVariant, fontSize, lineHeight } = this.props;\n        this.currentText = textValue;\n        this.currentAlign = align;\n        this.currentColor = color;\n        this.currentFontFamily = fontFamily;\n        this.currentFontVariant = fontVariant;\n        this.currentFontSize = fontSize;\n        this.currentLineHeight = lineHeight;\n    }\n\n    handleMouseDown = (event: MouseEvent) => {\n        this.handleStart(event);\n    };\n\n    handleTouchStart = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.x = event.changedTouches[0].clientX;\n        this.y = event.changedTouches[0].clientY;\n        this.handleStart(event);\n    };\n\n    handleStart = (event: Event) => {\n        const { isActive } = this.props;\n        if (isActive) {\n            event.stopPropagation();\n        } else {\n            this.wasMoved = false;\n            event.preventDefault();\n        }\n    };\n\n    handleMouseMove = (event: MouseEvent) => {\n        this.handleMove(event);\n    };\n\n    handleTouchMove = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        if (\n            Math.abs(event.changedTouches[0].clientX - this.x) > 3 ||\n            Math.abs(event.changedTouches[0].clientY - this.y) > 3\n        ) {\n            this.handleMove(event);\n        }\n    };\n\n    handleMove = (event: Event) => {\n        const { isActive } = this.props;\n        if (isActive) {\n            event.stopPropagation();\n        } else {\n            this.wasMoved = true;\n            event.preventDefault();\n        }\n    };\n\n    handleMouseUp = (event: MouseEvent) => {\n        this.handleComplete(event);\n    };\n\n    handleTouchEnd = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleComplete(event);\n    };\n\n    handleComplete = (event: Event) => {\n        const { dispatch, cardId, isOnBack, fieldId, isActive } = this.props;\n        if (isActive) {\n            event.stopPropagation();\n        } else if (!this.wasMoved) {\n            event.preventDefault();\n            dispatch(cardSetActiveCardAndField(cardId, isOnBack, fieldId));\n\n            if (!this.editDiv.current) return;\n            this.editDiv.current.focus();\n        }\n    };\n\n    onFocus = () => {\n        if (!this.editDiv.current) return;\n\n        const { textValue, align, color, fontFamily, fontVariant, fontSize } = this.props;\n        this.currentText = textValue;\n        this.currentAlign = align;\n        this.currentColor = color;\n        this.currentFontFamily = fontFamily;\n        this.currentFontVariant = fontVariant;\n        this.currentFontSize = fontSize;\n\n        const range = document.createRange();\n        range.selectNodeContents(this.editDiv.current);\n        range.collapse(false);\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    };\n\n    updateContent = (timeoutInMiliseconds: number) => {\n        if (!this.editDiv.current) return;\n        let value = this.editDiv.current.innerHTML;\n\n        let imgUrlIdx = -1;\n        while ((imgUrlIdx = value.indexOf('<img src=\"http')) !== -1) {\n            value = value.slice(0, imgUrlIdx + 10) + value.slice(value.indexOf('/', imgUrlIdx + 18));\n        }\n\n        if (value !== this.currentText) {\n            this.currentText = value;\n\n            if (this.timeout) {\n                clearTimeout(this.timeout);\n            }\n\n            this.timeout = setTimeout(() => {\n                const { dispatch, cardId, fieldId } = this.props;\n                const textInfo: TextInfo = { value };\n\n                dispatch(cardSetChangeText(cardId, fieldId, textInfo));\n            }, timeoutInMiliseconds);\n        }\n    };\n\n    handleBlur = () => {\n        this.updateContent(0);\n    };\n\n    handleInput = () => {\n        this.updateContent(500);\n    };\n\n    handlePaste = (event: React.ClipboardEvent) => {\n        function escapeHtml(unsafe: string) {\n            return unsafe\n                .replace(/&/g, '&amp;')\n                .replace(/</g, '&lt;')\n                .replace(/>/g, '&gt;')\n                .replace(/\"/g, '&quot;')\n                .replace(/'/g, '&#039;');\n        }\n\n        event.preventDefault();\n\n        let text = '';\n        text = event.clipboardData.getData('text/plain');\n\n        text = text\n            .split('\\n')\n            .map((s: string) => `<div>${escapeHtml(s)}</div>`)\n            .join('');\n        document.execCommand('insertHTML', false, text);\n    };\n\n    render() {\n        const { color, align, fontFamily, fontVariant, fontSize, lineHeight } = this.props;\n        const isItalic = fontVariant && fontVariant.indexOf('italic') !== -1;\n        const fontWeight = isItalic\n            ? fontVariant === 'italic'\n                ? 400\n                : parseInt(fontVariant.slice(0, 3))\n            : fontVariant === 'regular'\n            ? 400\n            : parseInt(fontVariant);\n\n        return (\n            <div\n                ref={this.editDiv}\n                className={style.content}\n                contentEditable={true}\n                onFocus={this.onFocus}\n                onBlur={this.handleBlur}\n                onInput={this.handleInput}\n                onPaste={this.handlePaste}\n                style={{\n                    width: '100%',\n                    height: '100%',\n                    textAlign: align === 'left' ? 'left' : align === 'right' ? 'right' : 'center',\n                    color: color,\n                    fontFamily: `'${fontFamily}'` || DEFAULT_FONT,\n                    fontStyle: isItalic ? 'italic' : 'normal',\n                    fontWeight,\n                    fontSize: `${fontSize}px`,\n                    outline: 'none',\n                    overflowWrap: 'break-word',\n                    lineHeight,\n                }}\n                dangerouslySetInnerHTML={{ __html: this.props.textValue }}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    let fieldInfo = state.cardset.present.fields[props.cardId][props.fieldId];\n    const textValue = fieldInfo.type === 'text' ? fieldInfo.value : '';\n    return {\n        textValue,\n        isActive:\n            props.cardId === state.cardset.present.activeCardId &&\n            props.fieldId === state.cardset.present.activeFieldId,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(ContentEditable);\n","import { connect } from 'react-redux';\nimport React, { PureComponent } from 'react';\n\nimport { DEFAULT_LINE_HEIGHT } from '../constants';\nimport { Dispatch, cardSetChangeFieldAngle, cardSetChangeFieldPosition, cardSetChangeFieldSize } from '../actions';\nimport { State } from '../reducers';\nimport { TextFieldInfo } from '../types';\nimport ContentEditable from './ContentEditable';\nimport FieldController from './FieldController';\nimport emptyTextImage from './text.svg';\n\ninterface OwnProps {\n    cardId: string;\n    isOnBack: boolean;\n    ppmm: number;\n    textFieldInfo: TextFieldInfo;\n    cardWidth: number;\n    cardHeight: number;\n}\n\ninterface StateProps {\n    text: string;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass TextField extends PureComponent<Props> {\n    handleDrag = (x: number, y: number, cardOnly: boolean, group: string) => {\n        const { dispatch, cardId, textFieldInfo, ppmm } = this.props;\n        dispatch(\n            cardSetChangeFieldPosition(cardOnly ? cardId : undefined, textFieldInfo.id, x / ppmm, y / ppmm, group),\n        );\n    };\n\n    handleResize = (width: number, height: number, cardOnly: boolean, group: string) => {\n        const { dispatch, textFieldInfo, cardId, ppmm } = this.props;\n        dispatch(\n            cardSetChangeFieldSize(cardOnly ? cardId : undefined, textFieldInfo.id, width / ppmm, height / ppmm, group),\n        );\n    };\n\n    handleRotate = (angle: number, cardOnly: boolean, group: string) => {\n        const { dispatch, textFieldInfo, cardId } = this.props;\n        dispatch(cardSetChangeFieldAngle(cardOnly ? cardId : undefined, textFieldInfo.id, angle, group));\n    };\n\n    render() {\n        const { textFieldInfo, text, ppmm, cardWidth, cardHeight } = this.props;\n\n        return (\n            <FieldController\n                cardId={this.props.cardId}\n                fieldId={textFieldInfo.id}\n                x={textFieldInfo.x * ppmm}\n                y={textFieldInfo.y * ppmm}\n                width={textFieldInfo.width * ppmm}\n                height={textFieldInfo.height * ppmm}\n                angle={textFieldInfo.angle}\n                onDrag={this.handleDrag}\n                onResize={this.handleResize}\n                onRotate={this.handleRotate}\n                cardWidth={cardWidth}\n                cardHeight={cardHeight}\n                ppmm={ppmm}\n            >\n                {text === '' && (\n                    <div\n                        style={{\n                            width: '100%',\n                            height: '100%',\n                            position: 'fixed',\n                            left: 0,\n                            top: 0,\n                            zIndex: -1,\n                            textAlign:\n                                textFieldInfo.align === 'left'\n                                    ? 'left'\n                                    : textFieldInfo.align === 'right'\n                                    ? 'right'\n                                    : 'center',\n                        }}\n                    >\n                        <img style={{ opacity: 0.5, width: 'auto', height: '100%' }} src={emptyTextImage} alt=\"\" />\n                    </div>\n                )}\n\n                <ContentEditable\n                    cardId={this.props.cardId}\n                    isOnBack={this.props.isOnBack}\n                    fieldId={textFieldInfo.id}\n                    align={textFieldInfo.align}\n                    color={textFieldInfo.color}\n                    fontFamily={textFieldInfo.fontFamily}\n                    fontVariant={textFieldInfo.fontVariant}\n                    fontSize={textFieldInfo.fontSize * ppmm}\n                    lineHeight={textFieldInfo.lineHeight || DEFAULT_LINE_HEIGHT}\n                />\n            </FieldController>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    let fieldInfo = state.cardset.present.fields[props.cardId][props.textFieldInfo.id];\n    let text = fieldInfo.type === 'text' ? fieldInfo.value : '';\n    return {\n        text,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(TextField);\n","import { connect } from 'react-redux';\nimport Measure from 'react-measure';\nimport React, { Component } from 'react';\n\nimport { BLEED_WIDTH } from '../constants';\nimport { CardType, IdsArray, FieldInfoCollection } from '../types';\nimport { Dispatch, cardSetActiveCardAndField } from '../actions';\nimport { State } from '../reducers';\nimport ImageField from './ImageField';\nimport TextField from './TextField';\nimport style from './Card.module.css';\n\ninterface OwnProps {\n    card: CardType;\n    isBack: boolean;\n}\n\ninterface StateProps {\n    cardFields: FieldInfoCollection;\n    fieldsIds: IdsArray;\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    isActiveCard: boolean;\n    zoom: number;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\ninterface LocalState {\n    dimensions: {\n        width: number;\n        height: number;\n    };\n}\n\nclass Card extends Component<Props, LocalState> {\n    state = {\n        dimensions: {\n            width: -1,\n            height: -1,\n        },\n    };\n\n    handleFieldDeselect = (event: React.MouseEvent | React.TouchEvent) => {\n        const { dispatch, card, isBack } = this.props;\n        const el = event.target as HTMLElement;\n        if (el.getAttribute('id') === `card_${card.id}`) {\n            dispatch(cardSetActiveCardAndField(card.id, isBack, undefined));\n            event.stopPropagation();\n        }\n    };\n\n    render() {\n        const { cardFields, fieldsIds, card, isBack, width, height, isActiveCard, zoom, isTwoSided } = this.props;\n        const widthWithBleeds = width + BLEED_WIDTH * 2;\n        const heightWithBleeds = height + BLEED_WIDTH * 2;\n\n        const ppmm = this.state.dimensions.width / widthWithBleeds;\n\n        return (\n            <div>\n                <Measure\n                    client\n                    onResize={contentRect => {\n                        if (!contentRect.client) {\n                            return;\n                        }\n                        this.setState({ dimensions: contentRect.client });\n                    }}\n                >\n                    {({ measureRef }) => (\n                        <div\n                            className={`${style.card} ${isActiveCard ? style.active : ''}`}\n                            id={`card_${card.id}`}\n                            ref={measureRef}\n                            style={{\n                                width: `${widthWithBleeds * zoom}mm`,\n                                height: `${heightWithBleeds * zoom}mm`,\n                                position: 'relative',\n                                overflow: 'hidden',\n                            }}\n                            onMouseDown={this.handleFieldDeselect}\n                            onTouchStart={this.handleFieldDeselect}\n                        >\n                            {fieldsIds.map(id => {\n                                if (!(id in cardFields)) {\n                                    return null;\n                                }\n                                const p = cardFields[id];\n                                if (p.type === 'image') {\n                                    return (\n                                        <ImageField\n                                            key={p.id}\n                                            cardId={card.id}\n                                            isOnBack={isBack}\n                                            imageFieldInfo={p}\n                                            ppmm={ppmm}\n                                            cardWidth={this.state.dimensions.width}\n                                            cardHeight={this.state.dimensions.height}\n                                        />\n                                    );\n                                } else if (p.type === 'text') {\n                                    return (\n                                        <TextField\n                                            key={p.id}\n                                            cardId={card.id}\n                                            isOnBack={isBack}\n                                            textFieldInfo={p}\n                                            ppmm={ppmm}\n                                            cardWidth={this.state.dimensions.width}\n                                            cardHeight={this.state.dimensions.height}\n                                        />\n                                    );\n                                }\n                                return null;\n                            })}\n\n                            <div\n                                style={{\n                                    position: 'absolute',\n                                    width: `${width * zoom}mm`,\n                                    height: `${height * zoom}mm`,\n                                    left: `${BLEED_WIDTH * zoom}mm`,\n                                    top: `${BLEED_WIDTH * zoom}mm`,\n                                    border: '1px dashed black',\n                                    borderRadius: '5mm',\n                                    pointerEvents: 'none',\n                                }}\n                            />\n\n                            <div\n                                style={{\n                                    position: 'absolute',\n                                    width: `${(width - BLEED_WIDTH * 2) * zoom}mm`,\n                                    height: `${(height - BLEED_WIDTH * 2) * zoom}mm`,\n                                    left: `${BLEED_WIDTH * 2 * zoom}mm`,\n                                    top: `${BLEED_WIDTH * 2 * zoom}mm`,\n                                    border: '1px dashed red',\n                                    borderRadius: '5mm',\n                                    pointerEvents: 'none',\n                                }}\n                            />\n                        </div>\n                    )}\n                </Measure>\n                {isTwoSided && (\n                    <div\n                        className={style.title}\n                        style={{\n                            width: `${widthWithBleeds * zoom}mm`,\n                            position: 'relative',\n                        }}\n                    >\n                        {isBack ? 'Back' : 'Front'}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    let cardFields = state.cardset.present.fields[props.card.id] || {};\n\n    return {\n        cardFields,\n        fieldsIds: state.cardset.present.fieldsAllIds.filter(\n            id => ((id in cardFields && cardFields[id].isOnBack) || false) === props.isBack,\n        ),\n        width: state.cardset.present.width,\n        height: state.cardset.present.height,\n        isTwoSided: state.cardset.present.isTwoSided,\n        isActiveCard:\n            state.cardset.present.activeCardId === props.card.id && state.cardset.present.isBackActive === props.isBack,\n        zoom: state.cardset.present.zoom,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(Card);\n","import React, { Component } from 'react';\nimport style from './EditableTitle.module.css';\n\ninterface Props {\n    title: string;\n    onChange: (newName: string) => void;\n}\n\nexport default class EditableTitle extends Component<Props> {\n    state = {\n        titleIsEdited: false,\n    };\n\n    handleClick = () => {\n        this.setState({ titleIsEdited: true });\n    };\n\n    handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.props.onChange(event.target.value);\n    };\n\n    handleBlur = () => {\n        this.setState({ titleIsEdited: false });\n    };\n\n    render() {\n        const { titleIsEdited } = this.state;\n        const { title } = this.props;\n\n        return (\n            <>\n                {!titleIsEdited && (\n                    <h1 className={style.input} onClick={this.handleClick}>\n                        {title}\n                    </h1>\n                )}\n                {titleIsEdited && (\n                    <input\n                        autoFocus\n                        type=\"text\"\n                        className={style.input}\n                        value={title}\n                        onChange={this.handleChange}\n                        onBlur={this.handleBlur}\n                    />\n                )}\n            </>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nimport style from './Loader.module.css';\n\ninterface Props {\n    fixed?: boolean;\n    small?: boolean;\n}\n\nexport default class Loader extends Component<Props> {\n    render() {\n        const { fixed, small } = this.props;\n\n        return (\n            <div className={`${style.loader} ${fixed ? style.fixed : style.relative} ${small ? style.small : ''}`}>\n                <div />\n                <div />\n            </div>\n        );\n    }\n}\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { CardType, DispatchProps, SidebarOwnProps } from '../types';\nimport { State } from '../reducers';\nimport {\n    cardSetCloneCard,\n    cardSetRemoveCard,\n    cardSetUpdateCardCount,\n    cardSetRotateCardsRight,\n    cardSetRotateCardsLeft,\n    cardSetRedo,\n    cardSetUndo,\n} from '../actions';\nimport style from './SidebarDetails.module.css';\n\ninterface StateProps {\n    activeCard: CardType | null;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarDetails extends Component<Props> {\n    handleRotateRightClick = () => {\n        const { dispatch } = this.props;\n        dispatch(cardSetRotateCardsRight());\n    };\n\n    handleRotateLeftClick = () => {\n        const { dispatch } = this.props;\n        dispatch(cardSetRotateCardsLeft());\n    };\n\n    handleCloneCardClick = () => {\n        const { activeCard, dispatch } = this.props;\n        if (activeCard !== null) {\n            dispatch(cardSetCloneCard(activeCard));\n        }\n    };\n\n    handleRemoveCardClick = () => {\n        const { activeCard, dispatch } = this.props;\n        if (activeCard !== null) {\n            dispatch(cardSetRemoveCard(activeCard));\n        }\n    };\n\n    handleCountChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeCard, dispatch } = this.props;\n        if (activeCard !== null) {\n            dispatch(cardSetUpdateCardCount(activeCard, parseInt(event.target.value)));\n        }\n    };\n\n    handleUndoClick = () => {\n        const { dispatch } = this.props;\n        dispatch(cardSetUndo());\n    };\n\n    handleRedoClick = () => {\n        const { dispatch } = this.props;\n        dispatch(cardSetRedo());\n    };\n\n    render() {\n        const { activeCard, visible } = this.props;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'initial' : 'none' }}>\n                <div>\n                    <button\n                        onClick={this.handleCloneCardClick}\n                        title=\"Clone card\"\n                        className={activeCard === null ? style.disabled : ''}\n                    >\n                        <i className=\"material-icons\">file_copy</i>\n                    </button>\n\n                    <input\n                        type=\"number\"\n                        value={activeCard !== null ? activeCard.count.toString() : 0}\n                        onChange={this.handleCountChange}\n                        title=\"Number of card's copies\"\n                        className={activeCard === null ? style.disabled : ''}\n                    />\n                    <button\n                        onClick={this.handleRemoveCardClick}\n                        title=\"Remove card\"\n                        className={activeCard === null ? style.disabled : ''}\n                    >\n                        <i className=\"material-icons\">delete</i>\n                    </button>\n                </div>\n\n                <div>\n                    <button onClick={this.handleUndoClick} title=\"Undo (Ctrl+Z)\">\n                        <i className=\"material-icons\">undo</i>\n                    </button>\n\n                    <button onClick={this.handleRedoClick} title=\"Redo (Ctrl+Shift+Z or Ctrl+Y)\">\n                        <i className=\"material-icons\">redo</i>\n                    </button>\n                </div>\n\n                <div>\n                    <button onClick={this.handleRotateRightClick} title=\"Rotate cards right\">\n                        <i className=\"material-icons\">rotate_right</i>\n                    </button>\n\n                    <button onClick={this.handleRotateLeftClick} title=\"Rotate cards left\">\n                        <i className=\"material-icons\">rotate_left</i>\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        activeCard:\n            state.cardset.present.activeCardId !== undefined\n                ? state.cardset.present.cardsById[state.cardset.present.activeCardId]\n                : null,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarDetails);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { ACTIVITY_CREATING_PNG, State } from '../reducers';\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport { gameCreatePngRequest } from '../actions';\nimport style from './SidebarGeneratePng.module.css';\n\ninterface StateProps {\n    width: number;\n    height: number;\n    isCreatingPng: boolean;\n    activeCardset: string | null;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\ninterface LocalState {\n    dpi: number;\n}\n\nexport class SidebarGeneratePng extends Component<Props, LocalState> {\n    state: LocalState = {\n        dpi: 300,\n    };\n\n    handleDpiChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ dpi: parseInt(event.target.value) });\n    };\n\n    handleGenerate = () => {\n        const { dispatch, activeCardset } = this.props;\n        const { dpi } = this.state;\n\n        if (activeCardset !== null) {\n            dispatch(gameCreatePngRequest(dpi, 'cardsets', activeCardset));\n        }\n    };\n\n    render() {\n        const { visible, width, height, isCreatingPng } = this.props;\n        const { dpi } = this.state;\n\n        const calculatedWidth = Math.round(dpi * (width / 25.4 + 1 / 4));\n        const calculatedHeight = Math.round(dpi * (height / 25.4 + 1 / 4));\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'grid' : 'none' }}>\n                <div>Here you can generate your cards as PNG images.</div>\n                <label htmlFor=\"dpi\">DPI:</label>\n                <input\n                    id=\"dpi\"\n                    type=\"number\"\n                    min=\"1\"\n                    step=\"1\"\n                    onChange={this.handleDpiChange}\n                    className=\"form-control\"\n                    placeholder=\"DPI\"\n                    value={dpi}\n                />\n\n                <div>Width in pixels: {calculatedWidth}</div>\n                <div>Height in pixels: {calculatedHeight}</div>\n\n                <button disabled={isCreatingPng} onClick={this.handleGenerate}>\n                    Generate\n                </button>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        width: state.cardset.present.width,\n        height: state.cardset.present.height,\n        isCreatingPng: (state.games.activity & ACTIVITY_CREATING_PNG) === ACTIVITY_CREATING_PNG,\n        activeCardset: state.cardsets.active,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarGeneratePng);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { ACTIVITY_CREATING_PDF, State } from '../reducers';\nimport { Dispatch, gameCreatePdfRequest } from '../actions';\nimport KawaiiMessage, { Character } from './KawaiiMessage';\n\ninterface OwnProps {\n    type: string;\n    id: string;\n    withHelp?: boolean;\n}\n\ninterface StateProps {\n    isCreatingPdf: boolean;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = StateProps & DispatchProps & OwnProps;\n\ninterface LocalState {\n    pageWidth: number;\n    pageHeight: number;\n    topBottomMargin: number;\n    leftRightMargin: number;\n    verticalSpace: number;\n    horizontalSpace: number;\n    includeBleedingArea: boolean;\n    cutMarksForScissors: boolean;\n    cutMarksForGuillotine: boolean;\n    cutMarksInMarginArea: boolean;\n    cutMarksOnFrontSideOnly: boolean;\n}\n\nexport class PDFGenerator extends Component<Props, LocalState> {\n    state = {\n        pageWidth: 210,\n        pageHeight: 297,\n        topBottomMargin: 15,\n        leftRightMargin: 9,\n        verticalSpace: 0,\n        horizontalSpace: 0,\n        includeBleedingArea: false,\n        cutMarksForScissors: true,\n        cutMarksForGuillotine: false,\n        cutMarksInMarginArea: false,\n        cutMarksOnFrontSideOnly: false,\n    };\n\n    handleGeneratePdfClick = () => {\n        const { dispatch } = this.props;\n        const {\n            pageWidth,\n            pageHeight,\n            topBottomMargin,\n            leftRightMargin,\n            verticalSpace,\n            horizontalSpace,\n            includeBleedingArea,\n            cutMarksForScissors,\n            cutMarksForGuillotine,\n            cutMarksInMarginArea,\n            cutMarksOnFrontSideOnly,\n        } = this.state;\n\n        dispatch(\n            gameCreatePdfRequest(\n                this.props.type,\n                this.props.id,\n                pageWidth,\n                pageHeight,\n                topBottomMargin,\n                leftRightMargin,\n                verticalSpace,\n                horizontalSpace,\n                includeBleedingArea,\n                cutMarksForScissors,\n                cutMarksForGuillotine,\n                cutMarksInMarginArea,\n                cutMarksOnFrontSideOnly,\n            ),\n        );\n    };\n\n    handlePageWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ pageWidth: parseFloat(event.target.value) });\n    };\n\n    handlePageHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ pageHeight: parseFloat(event.target.value) });\n    };\n\n    handleTopBottomMarginChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ topBottomMargin: parseFloat(event.target.value) });\n    };\n\n    handleLeftRightMarginChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ leftRightMargin: parseFloat(event.target.value) });\n    };\n\n    handleVerticalSpaceChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ verticalSpace: parseFloat(event.target.value) });\n    };\n\n    handleHorizontalSpaceChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ horizontalSpace: parseFloat(event.target.value) });\n    };\n\n    handleIncludeBleedingAreaChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ includeBleedingArea: event.target.checked });\n    };\n\n    handleCutMarksForScissors = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ cutMarksForScissors: event.target.checked });\n    };\n\n    handleCutMarksForGuillotine = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ cutMarksForGuillotine: event.target.checked });\n    };\n\n    handleCutMarksInMarginArea = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ cutMarksInMarginArea: event.target.checked });\n    };\n\n    handleCutMarksOnFrontSideOnly = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ cutMarksOnFrontSideOnly: event.target.checked });\n    };\n\n    render() {\n        const { isCreatingPdf, withHelp } = this.props;\n\n        return (\n            <>\n                {withHelp && (\n                    <KawaiiMessage character={Character.Ghost} mood=\"excited\">\n                        <p>Here you can generate PDF.</p>\n                        <p>Hint 1: A4 page size is 210 mm x 297 mm. Letter page size is 215.9 x 279.4 mm.</p>\n                        <p>Hint 2: 1 inch is equal to 25.4 mm.</p>\n                    </KawaiiMessage>\n                )}\n\n                <div className=\"form\">\n                    <label htmlFor=\"page_width\">Page width (mm):</label>\n                    <input\n                        id=\"page_width\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handlePageWidthChange}\n                        placeholder=\"Page width\"\n                        value={this.state.pageWidth}\n                    />\n                    <label htmlFor=\"page_height\">Page height (mm):</label>\n                    <input\n                        id=\"page_height\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handlePageHeightChange}\n                        placeholder=\"Page Height\"\n                        value={this.state.pageHeight}\n                    />\n                    <label htmlFor=\"page_topbottom_margin\">Margin from top/bottom (mm):</label>\n                    <input\n                        id=\"page_topbottom_margin\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handleTopBottomMarginChange}\n                        placeholder=\"Top/Bottom margin\"\n                        value={this.state.topBottomMargin}\n                    />\n                    <label htmlFor=\"page_leftright_margin\">Margin from left/right (mm):</label>\n                    <input\n                        id=\"page_leftright_margin\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handleLeftRightMarginChange}\n                        placeholder=\"Left/Right margin\"\n                        value={this.state.leftRightMargin}\n                    />\n\n                    <label htmlFor=\"card_vertical_space\">Vertical space between cards (mm):</label>\n                    <input\n                        id=\"card_vertical_space\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handleVerticalSpaceChange}\n                        placeholder=\"Vertical space\"\n                        value={this.state.verticalSpace}\n                    />\n\n                    <label htmlFor=\"card_horizontal_space\">Horizontal space between cards (mm):</label>\n                    <input\n                        id=\"card_horizontal_space\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handleHorizontalSpaceChange}\n                        placeholder=\"Horizontal space\"\n                        value={this.state.horizontalSpace}\n                    />\n\n                    <label\n                        title=\"You might need this for Cardmogrifier or professional printing. Do\n                        not check this if all you are interested in is card (area inside black dashed rectangle).\"\n                    >\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.includeBleedingArea}\n                            onChange={this.handleIncludeBleedingAreaChange}\n                        />\n                        Generate with bleeding area.\n                    </label>\n\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.cutMarksForScissors}\n                            onChange={this.handleCutMarksForScissors}\n                        />\n                        Generate with cut marks for paper scissors.\n                    </label>\n\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.cutMarksForGuillotine}\n                            onChange={this.handleCutMarksForGuillotine}\n                        />\n                        Generate with cut marks for paper guillotine.\n                    </label>\n\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.cutMarksInMarginArea}\n                            onChange={this.handleCutMarksInMarginArea}\n                        />\n                        Generate with cut marks for paper guillotine in margin area.\n                    </label>\n\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.cutMarksOnFrontSideOnly}\n                            onChange={this.handleCutMarksOnFrontSideOnly}\n                        />\n                        Generate cut marks on front side only (useful for printing on both sides).\n                    </label>\n\n                    <button disabled={isCreatingPdf} onClick={this.handleGeneratePdfClick}>\n                        Generate PDF\n                    </button>\n                </div>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        isCreatingPdf: (state.games.activity & ACTIVITY_CREATING_PDF) === ACTIVITY_CREATING_PDF,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(PDFGenerator);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport { State } from '../reducers';\nimport PDFGenerator from './PDFGenerator';\nimport style from './SidebarGeneratePdf.module.css';\n\ninterface StateProps {\n    activeCardSetId: string | null;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarGeneratePdf extends Component<Props> {\n    render() {\n        const { activeCardSetId, visible } = this.props;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'grid' : 'none' }}>\n                {activeCardSetId !== null && <PDFGenerator type=\"cardsets\" id={activeCardSetId} />}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        activeCardSetId: state.cardsets.active,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarGeneratePdf);\n","import { ChromePicker, ColorResult } from 'react-color';\nimport React, { Component } from 'react';\n\ninterface Props {\n    onChange: (color: ColorResult) => void;\n    color: string;\n}\n\ninterface State {\n    displayColorPicker: boolean;\n}\n\nexport default class ColorButton extends Component<Props, State> {\n    state = {\n        displayColorPicker: false,\n    };\n\n    handleClick = () => {\n        this.setState({ displayColorPicker: !this.state.displayColorPicker });\n    };\n\n    handleClose = () => {\n        this.setState({ displayColorPicker: false });\n    };\n\n    handleChange = (color: ColorResult) => {\n        this.props.onChange(color);\n    };\n\n    render() {\n        const popover: React.CSSProperties = {\n            position: 'absolute',\n            zIndex: 2,\n        };\n        const cover: React.CSSProperties = {\n            position: 'fixed',\n            top: '0px',\n            right: '0px',\n            bottom: '0px',\n            left: '0px',\n        };\n        return (\n            <>\n                <button onClick={this.handleClick} title=\"Change color\">\n                    <i className=\"material-icons\">color_lens</i>\n                </button>\n                {this.state.displayColorPicker ? (\n                    <div style={popover}>\n                        <div style={cover} onClick={this.handleClose} />\n                        <ChromePicker color={this.props.color} disableAlpha={true} onChange={this.handleChange} />\n                    </div>\n                ) : null}\n            </>\n        );\n    }\n}\n","import { ColorResult } from 'react-color';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, IdsArray, ImageArray, SidebarOwnProps, FieldInfo, ImageInfo } from '../types';\nimport { State } from '../reducers';\nimport {\n    cardSetAddImageField,\n    cardSetChangeActiveFieldName,\n    cardSetChangeFitForActiveField,\n    cardSetChangeCropForActiveField,\n    cardSetChangeImage,\n    cardSetLockActiveField,\n    cardSetLowerActiveFieldToBottom,\n    cardSetRaiseActiveFieldToTop,\n    cardSetRemoveActiveField,\n    cardSetUnlockActiveField,\n    imageListRequest,\n    cardSetChangeApplyToAllCards,\n    cardSetRaiseActiveField,\n    cardSetLowerActiveField,\n} from '../actions';\nimport ColorButton from './ColorButton';\nimport style from './SidebarImage.module.css';\n\ninterface StateProps {\n    activeFieldInfo?: FieldInfo;\n    crop: boolean;\n    activeCardId?: string;\n    filter: string;\n    images: ImageArray;\n    cardsAllIds: IdsArray;\n    applyToAllCards: boolean;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\ninterface LocalState {\n    location: string;\n}\n\nexport class SidebarImage extends Component<Props, LocalState> {\n    state = {\n        location: 'all',\n    };\n\n    handleAddImageClick = () => {\n        const { dispatch } = this.props;\n        dispatch(cardSetAddImageField());\n    };\n\n    changeImage = (ii: ImageInfo) => {\n        const { activeCardId, activeFieldInfo, dispatch } = this.props;\n\n        if (activeFieldInfo) {\n            dispatch(cardSetChangeImage(activeCardId ? activeCardId : undefined, activeFieldInfo.id, ii));\n        }\n    };\n\n    handleRemoveImageFromFieldClick = () => {\n        const ii: ImageInfo = { url: undefined, base64: undefined };\n        this.changeImage(ii);\n    };\n\n    handleRemoveClick = () => {\n        const { activeFieldInfo, dispatch } = this.props;\n        if (activeFieldInfo !== undefined) {\n            dispatch(cardSetRemoveActiveField());\n        }\n    };\n\n    handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeFieldInfo, dispatch } = this.props;\n        const name = event.target.value.trim();\n        if (activeFieldInfo !== undefined) {\n            dispatch(cardSetChangeActiveFieldName(name));\n        }\n    };\n\n    handleFilterChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        const { location } = this.state;\n        const filter = event.target.value;\n        dispatch(imageListRequest(filter, location));\n    };\n\n    handleImageSelect = (imageName: string, width: number, height: number) => {\n        const { activeFieldInfo } = this.props;\n\n        if (activeFieldInfo !== undefined) {\n            const color = activeFieldInfo && activeFieldInfo.color;\n\n            const ii: ImageInfo = { url: `/api/imagefiles/${imageName}`, color, width, height, base64: undefined };\n            this.changeImage(ii);\n        }\n    };\n\n    handleRaise = (event: React.MouseEvent) => {\n        const { activeFieldInfo, dispatch } = this.props;\n        if (activeFieldInfo !== undefined) {\n            if (event.ctrlKey) {\n                dispatch(cardSetRaiseActiveFieldToTop());\n            } else {\n                dispatch(cardSetRaiseActiveField());\n            }\n        }\n    };\n\n    handleLower = (event: React.MouseEvent) => {\n        const { activeFieldInfo, dispatch } = this.props;\n        if (activeFieldInfo !== undefined) {\n            if (event.ctrlKey) {\n                dispatch(cardSetLowerActiveFieldToBottom());\n            } else {\n                dispatch(cardSetLowerActiveField());\n            }\n        }\n    };\n\n    handleLockField = () => {\n        const { activeFieldInfo, dispatch } = this.props;\n        if (activeFieldInfo !== undefined) {\n            dispatch(cardSetLockActiveField());\n        }\n    };\n\n    handleUnlockField = () => {\n        const { activeFieldInfo, dispatch } = this.props;\n        if (activeFieldInfo !== undefined) {\n            dispatch(cardSetUnlockActiveField());\n        }\n    };\n\n    handleFitOptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        const fit = event.target.value;\n\n        dispatch(cardSetChangeFitForActiveField(fit));\n    };\n\n    handleOptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { filter, dispatch } = this.props;\n        const location = event.target.value;\n\n        this.setState({ location });\n        dispatch(imageListRequest(filter, location));\n    };\n\n    handleColorChange = (color: ColorResult) => {\n        const ii: ImageInfo = { color: color.hex };\n        this.changeImage(ii);\n    };\n\n    handleRemoveColorClick = () => {\n        const ii: ImageInfo = { color: undefined };\n        this.changeImage(ii);\n    };\n\n    handleApplyToAllCardChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeApplyToAllCards(event.target.checked));\n    };\n\n    handleChangeCrop = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeFieldInfo, dispatch } = this.props;\n        if (activeFieldInfo !== undefined) {\n            dispatch(cardSetChangeCropForActiveField(event.target.checked));\n        }\n    };\n\n    render() {\n        const { activeFieldInfo, crop, filter, visible, applyToAllCards } = this.props;\n        const { location } = this.state;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'grid' : 'none' }}>\n                <div>\n                    <button onClick={this.handleAddImageClick} title=\"Add image field\">\n                        <i className=\"material-icons\">add_photo_alternate</i>\n                    </button>\n\n                    {activeFieldInfo !== undefined && (\n                        <>\n                            <button onClick={this.handleRaise} title=\"Raise image (with Ctrl - raise to top)\">\n                                <i className=\"material-icons\">arrow_upward</i>\n                            </button>\n                            <button onClick={this.handleLower} title=\"Lower image (with Ctrl - lower to bottom)\">\n                                <i className=\"material-icons\">arrow_downward</i>\n                            </button>\n                        </>\n                    )}\n\n                    {activeFieldInfo &&\n                        activeFieldInfo.type === 'image' &&\n                        (activeFieldInfo.url || activeFieldInfo.base64) && (\n                            <button onClick={this.handleRemoveImageFromFieldClick} title=\"Remove image from field\">\n                                <i className=\"material-icons\">remove_circle_outline</i>\n                            </button>\n                        )}\n\n                    {activeFieldInfo !== undefined && !activeFieldInfo.locked && (\n                        <button\n                            onClick={this.handleLockField}\n                            title=\"Lock image field. Locked field can't be dragged, rotated, resized and removed.\"\n                        >\n                            <i className=\"material-icons\">lock_open</i>\n                        </button>\n                    )}\n\n                    {activeFieldInfo !== undefined && activeFieldInfo.locked && (\n                        <button\n                            onClick={this.handleUnlockField}\n                            title=\"Unlock image field. Unlocked text field can be dragged, rotated, resized and removed.\"\n                        >\n                            <i className=\"material-icons\">lock</i>\n                        </button>\n                    )}\n\n                    <button\n                        className={activeFieldInfo === undefined || activeFieldInfo.locked ? style.disabled : ''}\n                        onClick={this.handleRemoveClick}\n                        title=\"Remove field\"\n                    >\n                        <i className=\"material-icons\">remove</i>\n                    </button>\n\n                    {activeFieldInfo !== undefined && (\n                        <input\n                            type=\"text\"\n                            value={activeFieldInfo.name || ''}\n                            placeholder={activeFieldInfo.id}\n                            onChange={this.handleNameChange}\n                            title=\"Change name of image field.\"\n                        />\n                    )}\n\n                    {activeFieldInfo && activeFieldInfo.type === 'image' && (\n                        <form>\n                            <div>\n                                Fit:\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        value=\"width\"\n                                        checked={!activeFieldInfo.fit || activeFieldInfo.fit === 'width'}\n                                        onChange={this.handleFitOptionChange}\n                                    />\n                                    width\n                                </label>\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        value=\"height\"\n                                        checked={activeFieldInfo.fit === 'height'}\n                                        onChange={this.handleFitOptionChange}\n                                    />\n                                    height\n                                </label>\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        value=\"stretch\"\n                                        checked={activeFieldInfo.fit === 'stretch'}\n                                        onChange={this.handleFitOptionChange}\n                                    />\n                                    stretch\n                                </label>\n                            </div>\n                        </form>\n                    )}\n                </div>\n\n                {activeFieldInfo && activeFieldInfo.type === 'image' && (\n                    <>\n                        <div>\n                            <label>\n                                <input type=\"checkbox\" checked={crop} onChange={this.handleChangeCrop} />\n                                Crop\n                            </label>\n                            <ColorButton\n                                color={(activeFieldInfo && activeFieldInfo.color) || '#FFFFFF'}\n                                onChange={this.handleColorChange}\n                            />\n                            {activeFieldInfo && activeFieldInfo.color && (\n                                <button onClick={this.handleRemoveColorClick} title=\"Remove color\">\n                                    <i className=\"material-icons\">remove_circle</i>\n                                </button>\n                            )}\n                            <label>\n                                <input\n                                    type=\"checkbox\"\n                                    checked={applyToAllCards}\n                                    onChange={this.handleApplyToAllCardChange}\n                                />\n                                Apply to all cards\n                            </label>\n                        </div>\n                    </>\n                )}\n                <div>\n                    <form>\n                        Source:\n                        <label>\n                            <input\n                                type=\"radio\"\n                                value=\"all\"\n                                checked={location === 'all'}\n                                onChange={this.handleOptionChange}\n                            />\n                            All\n                        </label>\n                        <label>\n                            <input\n                                type=\"radio\"\n                                value=\"user\"\n                                checked={location === 'user'}\n                                onChange={this.handleOptionChange}\n                            />\n                            User\n                        </label>\n                        <label>\n                            <input\n                                type=\"radio\"\n                                value=\"game\"\n                                checked={location === 'game'}\n                                onChange={this.handleOptionChange}\n                            />\n                            Game\n                        </label>\n                    </form>\n                </div>\n\n                <div>\n                    <input type=\"text\" placeholder=\"Search...\" value={filter} onChange={this.handleFilterChange} />\n                </div>\n                <div className={style.images}>\n                    {this.props.images.map(im => {\n                        return (\n                            <img\n                                key={im.id}\n                                src={`/api/imagefiles/${im.name}`}\n                                data-width={im.width}\n                                data-height={im.height}\n                                onClick={() => this.handleImageSelect(im.name, im.width, im.height)}\n                                alt={im.name}\n                            />\n                        );\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    const activeFieldInfo =\n        state.cardset.present.activeCardId !== undefined && state.cardset.present.activeFieldId !== undefined\n            ? state.cardset.present.fields[state.cardset.present.activeCardId][state.cardset.present.activeFieldId]\n            : undefined;\n\n    const activeCardId = state.cardset.present.activeCardId;\n\n    return {\n        activeFieldInfo,\n        crop: activeFieldInfo && activeFieldInfo.type === 'image' ? activeFieldInfo.crop || false : false,\n        activeCardId,\n        images: state.images.images,\n        filter: state.images.filter,\n        cardsAllIds: state.cardset.present.cardsAllIds,\n        applyToAllCards: state.cardset.present.applyToAllCards,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarImage);\n","import 'filepond/dist/filepond.min.css';\n\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport { connect } from 'react-redux';\nimport FilePondPluginFileValidateType from 'filepond-plugin-file-validate-type';\nimport Papa from 'papaparse';\nimport React, { Component } from 'react';\nimport md5 from 'md5';\nimport shortid from 'shortid';\n\nimport {\n    CardType,\n    CardsCollection,\n    DispatchProps,\n    IdsArray,\n    SidebarOwnProps,\n    FieldInfoByCardCollection,\n    FieldInfoCollection,\n} from '../types';\nimport { FPLoadCallback, FPRevertLoadCallback, cardSetImportData, messageDisplay } from '../actions';\nimport { State } from '../reducers';\nimport { downloadBlob } from '../utils';\nimport style from './SidebarImportExport.module.css';\n\nregisterPlugin(FilePondPluginFileValidateType);\n\ninterface StateProps {\n    activeGame: string | null;\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    cardsAllIds: IdsArray;\n    cardsById: CardsCollection;\n    fieldsAllIds: IdsArray;\n    fields: FieldInfoByCardCollection;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarImportExport extends Component<Props> {\n    prepareImagePaths = (fields: FieldInfoByCardCollection) => {\n        const { activeGame } = this.props;\n        if (activeGame === null) return fields;\n\n        const ending = '_' + md5(activeGame);\n\n        let preparedImages: FieldInfoByCardCollection = {};\n\n        for (const cardId in fields) {\n            let fieldsByCard = { ...fields[cardId] };\n            for (const fieldId in fieldsByCard) {\n                let imageInfo = { ...fieldsByCard[fieldId] };\n                if (imageInfo.type === 'image') {\n                    let url = imageInfo.url || '';\n                    if (url.endsWith(ending)) {\n                        url = url.replace(ending, '');\n                    } else {\n                        imageInfo.global = true;\n                    }\n\n                    imageInfo.url = url.replace('/api/imagefiles/', '');\n                }\n                fieldsByCard[fieldId] = imageInfo;\n            }\n            preparedImages[cardId] = fieldsByCard;\n        }\n\n        return preparedImages;\n    };\n\n    handleExportJson = () => {\n        const { width, height, isTwoSided, cardsAllIds, cardsById, fields, fieldsAllIds } = this.props;\n\n        const preparedFields = this.prepareImagePaths(fields);\n\n        const data = {\n            width,\n            height,\n            isTwoSided,\n            cardsAllIds,\n            cardsById,\n            fields: preparedFields,\n            fieldsAllIds,\n        };\n\n        let json = JSON.stringify(data, null, 4);\n        let blob = new Blob([json], { type: 'octet/stream' });\n        let url = window.URL.createObjectURL(blob);\n        downloadBlob(url, 'cardset.json');\n    };\n\n    handleExportCsv = () => {\n        const { cardsAllIds, cardsById, fields, fieldsAllIds } = this.props;\n\n        const preparedFields = this.prepareImagePaths(fields);\n\n        let csvData: (string | number)[][] = [];\n        let header = ['card_id', 'card_count'];\n        let usedNames: { [key: string]: boolean } = {};\n        for (const plId of fieldsAllIds) {\n            const fieldInfo = fields[cardsAllIds[0]][plId];\n            const name = fieldInfo.name || fieldInfo.id;\n            if (!(name in usedNames)) {\n                header.push(name);\n                if (fieldInfo.type === 'image') {\n                    header.push(`${name}_global`);\n                }\n                usedNames[name] = false;\n            }\n        }\n        csvData.push(header);\n\n        for (const cardId of cardsAllIds) {\n            let card = cardsById[cardId];\n\n            let dataRow: (string | number)[] = [cardId, card.count];\n\n            let written = { ...usedNames };\n            for (const fieldId of fieldsAllIds) {\n                const fieldIndo = fields[cardId][fieldId];\n                const name = fieldIndo.name || fieldIndo.id;\n\n                if (!written[name]) {\n                    let fieldInfo = preparedFields[cardId][fieldId];\n                    if (fieldInfo.type === 'text') {\n                        dataRow.push(fieldInfo.value);\n                    } else if (fieldInfo.type === 'image') {\n                        dataRow.push(fieldInfo.url || '');\n                        dataRow.push(fieldInfo.global ? 'y' : 'n');\n                    }\n                    written[name] = true;\n                }\n            }\n            csvData.push(dataRow);\n        }\n\n        let csv = Papa.unparse(csvData);\n        let blob = new Blob([csv], { type: 'octet/stream' });\n        let url = window.URL.createObjectURL(blob);\n        downloadBlob(url, 'cardset.csv');\n    };\n\n    handleProcess = (fieldName: string, file: File, metadata: { [propName: string]: string }, load: FPLoadCallback) => {\n        const { dispatch, activeGame, fields, fieldsAllIds, cardsById, cardsAllIds } = this.props;\n        if (activeGame === null) return;\n\n        var reader = new FileReader();\n        reader.readAsText(file, 'UTF-8');\n        reader.onload = function(e) {\n            if (e.target === null) return;\n\n            let data = null;\n            const ending = '_' + md5(activeGame);\n\n            if (file.type === 'application/json') {\n                // eslint-disable-next-line\n                data = JSON.parse((e.target as any).result);\n\n                for (const cardId in data.fields) {\n                    const cardFields: FieldInfoCollection = data.fields[cardId];\n                    for (const fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'image') {\n                            let isGlobal = fieldInfo.global || false;\n\n                            fieldInfo.url = `/api/imagefiles/${fieldInfo.url}${isGlobal ? '' : ending}`;\n                            delete fieldInfo.global;\n                        }\n                    }\n                }\n            } else if (file.type === 'text/csv') {\n                // eslint-disable-next-line\n                const csvData = Papa.parse((e.target as any).result, { header: true });\n\n                let newCardsAllIds: IdsArray = [];\n                let newCardsById: CardsCollection = {};\n                let newFields: FieldInfoByCardCollection = {};\n\n                for (const row of csvData.data) {\n                    if (row['card_count'] === undefined) {\n                        continue;\n                    }\n                    const card: CardType = {\n                        id: row['card_id'] || shortid.generate(),\n                        count: row['card_count'] || 1,\n                    };\n\n                    newFields[card.id] = {\n                        ...fields[card.id in cardsById ? card.id : cardsAllIds[0]],\n                    };\n\n                    newCardsAllIds.push(card.id);\n                    newCardsById[card.id] = card;\n\n                    for (const fieldId of fieldsAllIds) {\n                        const fieldInfo = newFields[card.id][fieldId];\n                        const name = fieldInfo.name || fieldInfo.id;\n\n                        if (row[name]) {\n                            if (fieldInfo.type === 'image') {\n                                const isGlobal = row[`${name}_global`] === 'y';\n                                const url = row[name];\n\n                                newFields[card.id][fieldId] = {\n                                    ...fieldInfo,\n                                    url: `/api/imagefiles/${url}${isGlobal ? '' : ending}`,\n                                };\n                            } else if (fieldInfo.type === 'text') {\n                                newFields[card.id][fieldId] = {\n                                    ...fieldInfo,\n                                    value: row[name],\n                                };\n                            }\n                        }\n                    }\n                }\n\n                data = {\n                    cardsAllIds: newCardsAllIds,\n                    cardsById: newCardsById,\n                    fields: newFields,\n                    activeCardId: undefined,\n                    activeFieldId: undefined,\n                };\n            }\n\n            if (data !== null) {\n                dispatch(cardSetImportData(data));\n            }\n        };\n        reader.onerror = function() {\n            dispatch(messageDisplay('error', 'Problem during import.'));\n        };\n\n        load(file.name);\n    };\n\n    handleRevert = (uniqueFileId: string, load: FPRevertLoadCallback) => {\n        load();\n    };\n\n    render() {\n        const { visible } = this.props;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'grid' : 'none' }}>\n                <div>\n                    Here you can export and import your card set data. JSON file contains templates of cards, text and\n                    image data by card, CSV file contains only text and image data by card.\n                </div>\n                <button onClick={this.handleExportJson}>\n                    <i className=\"material-icons\">cloud_download</i> Get JSON\n                </button>\n                <button onClick={this.handleExportCsv}>\n                    <i className=\"material-icons\">cloud_download</i> Get CSV\n                </button>\n\n                <div>Drag & Drop or browser for JSON or CSV file here:</div>\n\n                <FilePond\n                    server={{\n                        process: this.handleProcess,\n                        revert: this.handleRevert,\n                    }}\n                    acceptedFileTypes={['text/csv', 'application/json']}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        activeGame: state.games.active,\n        width: state.cardset.present.width,\n        height: state.cardset.present.height,\n        isTwoSided: state.cardset.present.isTwoSided,\n        cardsAllIds: state.cardset.present.cardsAllIds,\n        cardsById: state.cardset.present.cardsById,\n        fieldsAllIds: state.cardset.present.fieldsAllIds,\n        fields: state.cardset.present.fields,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarImportExport);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, IdsArray, SidebarOwnProps, FieldInfo, FieldInfoByCardCollection } from '../types';\nimport { State } from '../reducers';\nimport {\n    cardSetActiveCardAndField,\n    cardSetChangeActiveFieldName,\n    cardSetChangeFieldAngle,\n    cardSetChangeFieldSize,\n    cardSetLockActiveField,\n    cardSetChangeFieldPosition,\n    cardSetLowerActiveField,\n    cardSetLowerActiveFieldToBottom,\n    cardSetRaiseActiveField,\n    cardSetRaiseActiveFieldToTop,\n    cardSetUnlockActiveField,\n    cardSetChangeUnclickableForActiveField,\n} from '../actions';\nimport style from './SidebarMeasurements.module.css';\nimport shortid from 'shortid';\n\ninterface StateProps {\n    activeField?: FieldInfo;\n    activeCardId?: string;\n    fields: FieldInfoByCardCollection;\n    fieldsAllIds: IdsArray;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarMeasurements extends Component<Props> {\n    handlePrevField = () => {\n        const { activeCardId, activeField, fieldsAllIds, dispatch } = this.props;\n        if (fieldsAllIds.length === 0 || activeCardId === null) return;\n\n        let prevField = fieldsAllIds[fieldsAllIds.length - 1];\n        if (activeField !== undefined) {\n            let idx = fieldsAllIds.indexOf(activeField.id);\n            if (idx > 0) prevField = fieldsAllIds[idx - 1];\n        }\n\n        dispatch(cardSetActiveCardAndField(activeCardId, (activeField && activeField.isOnBack) || false, prevField));\n    };\n\n    handleNextField = () => {\n        const { activeCardId, activeField, fieldsAllIds, dispatch } = this.props;\n        if (fieldsAllIds.length === 0 || activeCardId === null) return;\n\n        let nextField = fieldsAllIds[0];\n        if (activeField !== undefined) {\n            let idx = fieldsAllIds.indexOf(activeField.id);\n            if (idx !== -1 && idx !== fieldsAllIds.length - 1) nextField = fieldsAllIds[idx + 1];\n        }\n\n        dispatch(cardSetActiveCardAndField(activeCardId, (activeField && activeField.isOnBack) || false, nextField));\n    };\n\n    handleRaise = (event: React.MouseEvent) => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            if (event.ctrlKey) {\n                dispatch(cardSetRaiseActiveFieldToTop());\n            } else {\n                dispatch(cardSetRaiseActiveField());\n            }\n        }\n    };\n\n    handleLower = (event: React.MouseEvent) => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            if (event.ctrlKey) {\n                dispatch(cardSetLowerActiveFieldToBottom());\n            } else {\n                dispatch(cardSetLowerActiveField());\n            }\n        }\n    };\n\n    handleLockField = () => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            dispatch(cardSetLockActiveField());\n        }\n    };\n\n    handleUnlockField = () => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            dispatch(cardSetUnlockActiveField());\n        }\n    };\n\n    handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        const name = event.target.value.trim();\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeActiveFieldName(name));\n        }\n    };\n\n    handleWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        const width = parseFloat(event.target.value);\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeFieldSize(undefined, activeField.id, width, activeField.height, shortid.generate()));\n        }\n    };\n\n    handleHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        const height = parseFloat(event.target.value);\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeFieldSize(undefined, activeField.id, activeField.width, height, shortid.generate()));\n        }\n    };\n\n    handleXChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        const x = parseFloat(event.target.value);\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeFieldPosition(undefined, activeField.id, x, activeField.y, shortid.generate()));\n        }\n    };\n\n    handleYChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        const y = parseFloat(event.target.value);\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeFieldPosition(undefined, activeField.id, activeField.x, y, shortid.generate()));\n        }\n    };\n\n    handleAngleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        const angle = (parseFloat(event.target.value) * Math.PI) / 180;\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeFieldAngle(undefined, activeField.id, angle, shortid.generate()));\n        }\n    };\n\n    handleChangeUnclickable = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeUnclickableForActiveField(event.target.checked));\n        }\n    };\n\n    render() {\n        const { activeCardId, activeField, visible } = this.props;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'initial' : 'none' }}>\n                {activeCardId !== undefined && (\n                    <>\n                        <button onClick={this.handlePrevField} title=\"Previous field\">\n                            <i className=\"material-icons\">arrow_back</i>\n                        </button>\n                        <button onClick={this.handleNextField} title=\"Next field\">\n                            <i className=\"material-icons\">arrow_forward</i>\n                        </button>\n                    </>\n                )}\n\n                {activeField !== undefined && (\n                    <>\n                        <button onClick={this.handleRaise} title=\"Raise text (with Ctrl - raise to top)\">\n                            <i className=\"material-icons\">arrow_upward</i>\n                        </button>\n                        <button onClick={this.handleLower} title=\"Lower text (with Ctrl - lower to bottom)\">\n                            <i className=\"material-icons\">arrow_downward</i>\n                        </button>\n                    </>\n                )}\n\n                {activeField !== undefined && !activeField.locked && (\n                    <button\n                        onClick={this.handleLockField}\n                        title=\"Lock field. Locked field can't be dragged, rotated, resized and removed.\"\n                    >\n                        <i className=\"material-icons\">lock_open</i>\n                    </button>\n                )}\n\n                {activeField !== undefined && activeField.locked && (\n                    <button\n                        onClick={this.handleUnlockField}\n                        title=\"Unlock field. Unlocked field can be dragged, rotated, resized and removed.\"\n                    >\n                        <i className=\"material-icons\">lock</i>\n                    </button>\n                )}\n\n                {activeField !== undefined && (\n                    <div>\n                        <label>\n                            Unclickable field:{' '}\n                            <input\n                                type=\"checkbox\"\n                                onChange={this.handleChangeUnclickable}\n                                className=\"form-control\"\n                                checked={activeField.unclickable ? true : false}\n                            />\n                        </label>\n                    </div>\n                )}\n\n                {activeField !== undefined && (\n                    <div>\n                        <label>\n                            Field name:\n                            <input\n                                type=\"text\"\n                                value={activeField.name || ''}\n                                placeholder={activeField.id}\n                                onChange={this.handleNameChange}\n                                title=\"Change name of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            Width:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={activeField.width}\n                                placeholder=\"Width\"\n                                onChange={this.handleWidthChange}\n                                title=\"Change width of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            Height:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={activeField.height}\n                                placeholder=\"Height\"\n                                onChange={this.handleHeightChange}\n                                title=\"Change width of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            X:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={activeField.x}\n                                placeholder=\"Width\"\n                                onChange={this.handleXChange}\n                                title=\"Change x coordinate of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            Y:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={activeField.y}\n                                placeholder=\"Height\"\n                                onChange={this.handleYChange}\n                                title=\"Change y coordinate of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            Angle:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={(activeField.angle * 180) / Math.PI}\n                                placeholder=\"Angle\"\n                                onChange={this.handleAngleChange}\n                                title=\"Change rotation angle of field.\"\n                            />\n                        </label>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    const activeField =\n        state.cardset.present.activeCardId !== undefined && state.cardset.present.activeFieldId !== undefined\n            ? state.cardset.present.fields[state.cardset.present.activeCardId][state.cardset.present.activeFieldId]\n            : undefined;\n\n    return {\n        activeField,\n        activeCardId: state.cardset.present.activeCardId,\n        fields: state.cardset.present.fields,\n        fieldsAllIds: state.cardset.present.fieldsAllIds,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarMeasurements);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport { State } from '../reducers';\nimport {\n    cardSetChangeHeight,\n    cardSetChangeIsTwoSided,\n    cardSetChangeSnappingDistance,\n    cardSetChangeWidth,\n    cardSetSetZoom,\n} from '../actions';\nimport style from './SidebarSettings.module.css';\n\ninterface StateProps {\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    snappingDistance: number;\n    zoom: number;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\ninterface LocalState {\n    maintainAspectRatio: boolean;\n    resizeContent: boolean;\n}\n\nexport class SidebarSettings extends Component<Props, LocalState> {\n    state: LocalState = {\n        maintainAspectRatio: true,\n        resizeContent: false,\n    };\n\n    handleWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        const { maintainAspectRatio, resizeContent } = this.state;\n        dispatch(cardSetChangeWidth(parseFloat(event.target.value), maintainAspectRatio, resizeContent));\n    };\n\n    handleHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        const { maintainAspectRatio, resizeContent } = this.state;\n        dispatch(cardSetChangeHeight(parseFloat(event.target.value), maintainAspectRatio, resizeContent));\n    };\n\n    handleIsTwoSidedChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeIsTwoSided(event.target.checked));\n    };\n\n    handleZoom = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetSetZoom(parseFloat(event.target.value)));\n    };\n\n    handleSnappingDistance = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeSnappingDistance(parseFloat(event.target.value)));\n    };\n\n    render() {\n        const { width, height, isTwoSided, snappingDistance, visible, zoom } = this.props;\n        const { maintainAspectRatio, resizeContent } = this.state;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'initial' : 'none' }}>\n                <label htmlFor=\"card_width\">Card width (mm):</label>\n                <input\n                    id=\"card_width\"\n                    type=\"number\"\n                    min=\"0\"\n                    step=\"0.1\"\n                    onChange={this.handleWidthChange}\n                    className=\"form-control\"\n                    placeholder=\"width\"\n                    value={width}\n                />\n                <label htmlFor=\"card_height\">Card height (mm):</label>\n                <input\n                    id=\"card_height\"\n                    type=\"number\"\n                    min=\"0\"\n                    step=\"0.1\"\n                    onChange={this.handleHeightChange}\n                    className=\"form-control\"\n                    placeholder=\"height\"\n                    value={height}\n                />\n                <div>\n                    <label>\n                        Maintain aspect ratio:{' '}\n                        <input\n                            type=\"checkbox\"\n                            onChange={() => {\n                                this.setState({ maintainAspectRatio: !maintainAspectRatio });\n                            }}\n                            className=\"form-control\"\n                            checked={maintainAspectRatio}\n                        />\n                    </label>\n                </div>\n\n                <div>\n                    <label>\n                        Resize content:{' '}\n                        <input\n                            type=\"checkbox\"\n                            onChange={() => {\n                                this.setState({ resizeContent: !resizeContent });\n                            }}\n                            className=\"form-control\"\n                            checked={resizeContent}\n                        />\n                    </label>\n                </div>\n\n                <label>\n                    Cards have two sides:{' '}\n                    <input\n                        type=\"checkbox\"\n                        onChange={this.handleIsTwoSidedChange}\n                        className=\"form-control\"\n                        checked={isTwoSided}\n                    />\n                </label>\n                <div>\n                    <label htmlFor=\"zoom\">Zoom (if you want to see details or big picture)</label>\n                    <input\n                        id=\"zoom\"\n                        type=\"number\"\n                        min=\"0.1\"\n                        step=\"0.1\"\n                        onChange={this.handleZoom}\n                        className=\"form-control\"\n                        placeholder=\"zoom\"\n                        value={zoom}\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"zoom\">Snapping distance in mm. 0 to disable.</label>\n                    <input\n                        id=\"zoom\"\n                        type=\"number\"\n                        min=\"0\"\n                        step=\"0.1\"\n                        onChange={this.handleSnappingDistance}\n                        className=\"form-control\"\n                        placeholder=\"Snapping distance\"\n                        value={snappingDistance}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        width: state.cardset.present.width,\n        height: state.cardset.present.height,\n        isTwoSided: state.cardset.present.isTwoSided,\n        snappingDistance: state.cardset.present.snappingDistance,\n        zoom: state.cardset.present.zoom,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarSettings);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport WebFont from 'webfontloader';\n\nimport { DEFAULT_LINE_HEIGHT } from '../constants';\nimport {\n    Dispatch,\n    cardSetChangeActiveTextFieldFontFamilyAndVariant,\n    cardSetChangeActiveTextFieldFontSize,\n    cardSetChangeActiveTextFieldFontVariant,\n    cardSetChangeActiveTextFieldLineHeight,\n} from '../actions';\nimport { State } from '../reducers';\nimport style from './FontSelector.module.css';\nimport webfonts from './webfonts.json';\n\ninterface WebFontsInfo {\n    [propName: string]: {\n        [propName: string]: string;\n    };\n}\n\ninterface FontOption {\n    value: string;\n    label: string;\n}\n\nconst options: FontOption[] = Object.keys(webfonts)\n    .sort()\n    .map(fi => ({ value: fi, label: fi }));\n\ninterface StateProps {\n    activeFont: string;\n    activeFontVariant: string;\n    activeFontSize: number;\n    activeLineHeight: number;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = StateProps & DispatchProps;\n\nclass FontSelector extends Component<Props> {\n    getFontStringForLoad = (family: string, variant: string) => {\n        let stringForLoad = family;\n        if (variant !== 'regular') {\n            stringForLoad += ':' + variant;\n        }\n        return stringForLoad;\n    };\n\n    handleChange = (selectedOption?: FontOption | FontOption[] | null) => {\n        if (!selectedOption) return;\n\n        const fontFamily = (selectedOption as FontOption).value;\n\n        let fontVariant = this.props.activeFontVariant;\n        const wf: WebFontsInfo = webfonts;\n        if (!(fontVariant in wf[fontFamily])) {\n            fontVariant = Object.keys(wf[fontFamily]).sort()[0];\n        }\n\n        WebFont.load({\n            google: {\n                families: [this.getFontStringForLoad(fontFamily, fontVariant)],\n            },\n            active: () => {\n                const { dispatch } = this.props;\n                dispatch(cardSetChangeActiveTextFieldFontFamilyAndVariant(fontFamily, fontVariant));\n            },\n        });\n    };\n\n    handleFontVariantChange = (selectedOption?: FontOption | FontOption[] | null) => {\n        if (!selectedOption) return;\n\n        const value = (selectedOption as FontOption).value;\n        WebFont.load({\n            google: {\n                families: [this.getFontStringForLoad(this.props.activeFont, value)],\n            },\n            active: () => {\n                const { dispatch } = this.props;\n                dispatch(cardSetChangeActiveTextFieldFontVariant(value));\n            },\n        });\n    };\n\n    handleFontSizeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeActiveTextFieldFontSize(parseFloat(event.target.value)));\n    };\n\n    handleLineHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeActiveTextFieldLineHeight(parseFloat(event.target.value)));\n    };\n\n    render() {\n        const selectedFontFamily = options.find(f => f.value === this.props.activeFont);\n\n        const fontVariantOptions: FontOption[] = Object.keys((webfonts as WebFontsInfo)[this.props.activeFont])\n            .sort()\n            .map(fv => ({ value: fv, label: fv }));\n\n        const selectedFontVariant = fontVariantOptions.find(f => f.value === this.props.activeFontVariant);\n\n        return (\n            <>\n                <input\n                    type=\"number\"\n                    value={this.props.activeFontSize}\n                    onChange={this.handleFontSizeChange}\n                    title=\"Font size\"\n                />\n                <Select\n                    className={style.fontFamily}\n                    value={selectedFontFamily}\n                    onChange={this.handleChange}\n                    options={options}\n                />\n                <Select\n                    className={style.fontVariant}\n                    value={selectedFontVariant}\n                    onChange={this.handleFontVariantChange}\n                    options={fontVariantOptions}\n                />\n                <input\n                    type=\"number\"\n                    value={this.props.activeLineHeight}\n                    onChange={this.handleLineHeightChange}\n                    title=\"Line height\"\n                    step=\"0.01\"\n                />\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    let activeFont = state.cardset.present.textSettings.fontFamily;\n    let activeFontVariant = state.cardset.present.textSettings.fontVariant;\n    let activeFontSize = state.cardset.present.textSettings.fontSize;\n    let activeLineHeight = state.cardset.present.textSettings.lineHeight || DEFAULT_LINE_HEIGHT;\n\n    return {\n        activeFont,\n        activeFontVariant,\n        activeFontSize,\n        activeLineHeight,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, {}, State>(mapStateToProps)(FontSelector);\n","import { ColorResult } from 'react-color';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, SidebarOwnProps, FieldInfo } from '../types';\nimport { State } from '../reducers';\nimport {\n    cardSetAddTextField,\n    cardSetChangeActiveFieldName,\n    cardSetChangeActiveTextFieldAlign,\n    cardSetLockActiveField,\n    cardSetLowerActiveFieldToBottom,\n    cardSetRaiseActiveFieldToTop,\n    cardSetRemoveActiveField,\n    cardSetUnlockActiveField,\n    cardSetChangeActiveTextFieldColor,\n    cardSetRaiseActiveField,\n    cardSetLowerActiveField,\n} from '../actions';\nimport ColorButton from './ColorButton';\nimport FontSelector from './FontSelector';\nimport style from './SidebarText.module.css';\n\ninterface StateProps {\n    activeField?: FieldInfo;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarText extends Component<Props> {\n    handleAddTextClick = () => {\n        const { dispatch } = this.props;\n        dispatch(cardSetAddTextField());\n    };\n\n    handleSetTextAlignLeft = () => {\n        const selection = window.getSelection();\n        const range = selection.getRangeAt(0);\n        if (selection.rangeCount === 1 && range.collapsed) {\n            const { dispatch } = this.props;\n            dispatch(cardSetChangeActiveTextFieldAlign('left'));\n        } else {\n            document.execCommand('justifyleft');\n        }\n    };\n\n    handleSetTextAlignCenter = () => {\n        const selection = window.getSelection();\n        const range = selection.getRangeAt(0);\n        if (selection.rangeCount === 1 && range.collapsed) {\n            const { dispatch } = this.props;\n            dispatch(cardSetChangeActiveTextFieldAlign('center'));\n        } else {\n            document.execCommand('justifycenter');\n        }\n    };\n\n    handleSetTextAlignRight = () => {\n        const selection = window.getSelection();\n        const range = selection.getRangeAt(0);\n        if (selection.rangeCount === 1 && range.collapsed) {\n            const { dispatch } = this.props;\n            dispatch(cardSetChangeActiveTextFieldAlign('right'));\n        } else {\n            document.execCommand('justifyright');\n        }\n    };\n\n    handleSetTextBold = () => {\n        document.execCommand('bold');\n    };\n\n    handleSetTextItalic = () => {\n        document.execCommand('italic');\n    };\n\n    handleRemoveClick = () => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            dispatch(cardSetRemoveActiveField());\n        }\n    };\n\n    handleRaise = (event: React.MouseEvent) => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            if (event.ctrlKey) {\n                dispatch(cardSetRaiseActiveFieldToTop());\n            } else {\n                dispatch(cardSetRaiseActiveField());\n            }\n        }\n    };\n\n    handleLower = (event: React.MouseEvent) => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            if (event.ctrlKey) {\n                dispatch(cardSetLowerActiveFieldToBottom());\n            } else {\n                dispatch(cardSetLowerActiveField());\n            }\n        }\n    };\n\n    handleLockField = () => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            dispatch(cardSetLockActiveField());\n        }\n    };\n\n    handleUnlockField = () => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            dispatch(cardSetUnlockActiveField());\n        }\n    };\n\n    handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        const name = event.target.value.trim();\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeActiveFieldName(name));\n        }\n    };\n\n    handleColorChange = (color: ColorResult) => {\n        const selection = window.getSelection();\n        const range = selection.getRangeAt(0);\n        if (selection.rangeCount === 1 && range.collapsed) {\n            const { dispatch } = this.props;\n            dispatch(cardSetChangeActiveTextFieldColor(color.hex));\n        } else {\n            document.execCommand('forecolor', false, color.hex);\n        }\n    };\n\n    render() {\n        const { activeField, visible } = this.props;\n\n        let color = '#000000';\n        if (activeField && activeField.type === 'text' && activeField.color) {\n            color = activeField.color;\n        }\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'initial' : 'none' }}>\n                <button onClick={this.handleAddTextClick} title=\"Add text field\">\n                    <i className=\"material-icons\">text_fields</i>\n                </button>\n                {activeField !== undefined && (\n                    <>\n                        <button onClick={this.handleRaise} title=\"Raise text (with Ctrl - raise to top)\">\n                            <i className=\"material-icons\">arrow_upward</i>\n                        </button>\n                        <button onClick={this.handleLower} title=\"Lower text (with Ctrl - lower to bottom)\">\n                            <i className=\"material-icons\">arrow_downward</i>\n                        </button>\n                    </>\n                )}\n\n                {activeField !== undefined && !activeField.locked && (\n                    <button\n                        onClick={this.handleLockField}\n                        title=\"Lock text field. Locked field can't be dragged, rotated, resized and removed.\"\n                    >\n                        <i className=\"material-icons\">lock_open</i>\n                    </button>\n                )}\n\n                {activeField !== undefined && activeField.locked && (\n                    <button\n                        onClick={this.handleUnlockField}\n                        title=\"Unlock text field. Unlocked text field can be dragged, rotated, resized and removed.\"\n                    >\n                        <i className=\"material-icons\">lock</i>\n                    </button>\n                )}\n\n                <button\n                    className={activeField === undefined || activeField.locked ? style.disabled : ''}\n                    onClick={this.handleRemoveClick}\n                    title=\"Remove field\"\n                >\n                    <i className=\"material-icons\">remove</i>\n                </button>\n\n                {activeField !== undefined && (\n                    <input\n                        type=\"text\"\n                        value={activeField.name || ''}\n                        placeholder={activeField.id}\n                        onChange={this.handleNameChange}\n                        title=\"Change name of text field.\"\n                    />\n                )}\n\n                <div>\n                    <button onClick={this.handleSetTextAlignLeft} title=\"Align text left\">\n                        <i className=\"material-icons\">format_align_left</i>\n                    </button>\n                    <button onClick={this.handleSetTextAlignCenter} title=\"Align text center\">\n                        <i className=\"material-icons\">format_align_center</i>\n                    </button>\n                    <button onClick={this.handleSetTextAlignRight} title=\"Align text right\">\n                        <i className=\"material-icons\">format_align_right</i>\n                    </button>\n                    <button onClick={this.handleSetTextBold} title=\"Makes selected text bold\">\n                        <i className=\"material-icons\">format_bold</i>\n                    </button>\n                    <button onClick={this.handleSetTextItalic} title=\"Makes selected text italic\">\n                        <i className=\"material-icons\">format_italic</i>\n                    </button>\n                    <ColorButton color={color} onChange={this.handleColorChange} />\n                    <FontSelector />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    const activeField =\n        state.cardset.present.activeCardId !== undefined && state.cardset.present.activeFieldId !== undefined\n            ? state.cardset.present.fields[state.cardset.present.activeCardId][state.cardset.present.activeFieldId]\n            : undefined;\n\n    return {\n        activeField,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarText);\n","import 'filepond/dist/filepond.min.css';\n\nimport './SidebarUpload.css';\n\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport { connect } from 'react-redux';\nimport FilePondPluginFileValidateSize from 'filepond-plugin-file-validate-size';\nimport FilePondPluginFileValidateType from 'filepond-plugin-file-validate-type';\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport {\n    FPAbortCallback,\n    FPErrorCallback,\n    FPLoadCallback,\n    FPProgressCallback,\n    FPRevertLoadCallback,\n    cardSetDeleteImage,\n    cardSetUploadImage,\n} from '../actions';\nimport { State } from '../reducers';\nimport style from './SidebarUpload.module.css';\n\nregisterPlugin(FilePondPluginFileValidateSize);\nregisterPlugin(FilePondPluginFileValidateType);\n\ninterface StateProps {\n    activeGame: string | null;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarUpload extends Component<Props> {\n    handleProcess = (\n        fieldName: string,\n        file: File,\n        metadata: { [propName: string]: string },\n        load: FPLoadCallback,\n        error: FPErrorCallback,\n        progress: FPProgressCallback,\n        abort: FPAbortCallback,\n    ) => {\n        const { dispatch, activeGame } = this.props;\n\n        if (activeGame === null) {\n            abort();\n            return;\n        }\n\n        let source = axios.CancelToken.source();\n\n        dispatch(cardSetUploadImage(activeGame, file, load, error, progress, abort, source.token));\n\n        return { abort: source.cancel };\n    };\n\n    handleRevert = (uniqueFileId: string, load: FPRevertLoadCallback, error: FPErrorCallback) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetDeleteImage(uniqueFileId, load, error));\n    };\n\n    render() {\n        const { visible } = this.props;\n\n        return (\n            <div\n                className={style.view}\n                style={{ display: 'grid', visibility: visible ? 'visible' : 'hidden', height: visible ? 'auto' : 0 }}\n            >\n                <div>\n                    Uploaded imaged are kept for limited time. If they are deleted then simply re-upload them again.\n                </div>\n                <FilePond\n                    allowMultiple={true}\n                    server={{\n                        process: this.handleProcess,\n                        revert: this.handleRevert,\n                    }}\n                    acceptedFileTypes={[\n                        'image/png',\n                        'image/jpeg',\n                        'image/svg+xml',\n                        'image/webp',\n                        'image/tiff',\n                        'image/gif',\n                    ]}\n                    allowFileSizeValidation={true}\n                    maxFileSize=\"500KB\"\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        activeGame: state.games.active,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarUpload);\n","import { connect, ConnectedComponentClass } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport { SidebarState, cardSetSetSidebarState } from '../actions';\nimport { State } from '../reducers';\nimport SidebarDetails from './SidebarDetails';\nimport SidebarGeneratePng from './SidebarGeneratePng';\nimport SidebarGeneratePdf from './SidebarGeneratePdf';\nimport SidebarImage from './SidebarImage';\nimport SidebarImportExport from './SidebarImportExport';\nimport SidebarMeasurements from './SidebarMeasurements';\nimport SidebarSettings from './SidebarSettings';\nimport SidebarText from './SidebarText';\nimport SidebarUpload from './SidebarUpload';\nimport style from './Sidebar.module.css';\n\ninterface StateProps {\n    activeSidebar: SidebarState | null;\n}\n\ntype Props = StateProps & DispatchProps;\n\ninterface SidebarInfo {\n    state: SidebarState;\n    title: string;\n    icon: string;\n    component: ConnectedComponentClass<typeof Component, SidebarOwnProps>;\n}\n\nconst SIDEBARS: SidebarInfo[] = [\n    {\n        state: SidebarState.Settings,\n        title: 'Settings',\n        icon: 'settings',\n        component: SidebarSettings,\n    },\n    {\n        state: SidebarState.Details,\n        title: 'Details',\n        icon: 'details',\n        component: SidebarDetails,\n    },\n    {\n        state: SidebarState.Measurements,\n        title: 'Measurements',\n        icon: 'format_shapes',\n        component: SidebarMeasurements,\n    },\n    {\n        state: SidebarState.Image,\n        title: 'Images',\n        icon: 'photo',\n        component: SidebarImage,\n    },\n    {\n        state: SidebarState.Text,\n        title: 'Texts',\n        icon: 'text_fields',\n        component: SidebarText,\n    },\n    {\n        state: SidebarState.Upload,\n        title: 'Upload',\n        icon: 'cloud_upload',\n        component: SidebarUpload,\n    },\n    {\n        state: SidebarState.ImportExport,\n        title: 'Import/Export',\n        icon: 'import_export',\n        component: SidebarImportExport,\n    },\n    {\n        state: SidebarState.Png,\n        title: 'Generate as PNG',\n        icon: 'photo_library',\n        component: SidebarGeneratePng,\n    },\n    {\n        state: SidebarState.Pdf,\n        title: 'Generate as PDF',\n        icon: 'picture_as_pdf',\n        component: SidebarGeneratePdf,\n    },\n];\n\nexport class Sidebar extends Component<Props> {\n    handleSidebar = (state: SidebarState) => {\n        const { activeSidebar, dispatch } = this.props;\n        if (activeSidebar === state) {\n            dispatch(cardSetSetSidebarState(null));\n        } else {\n            dispatch(cardSetSetSidebarState(state));\n        }\n    };\n\n    render() {\n        const { activeSidebar } = this.props;\n        return (\n            <div className={style.sidebar}>\n                <div className={style.controls}>\n                    {SIDEBARS.map(sb => (\n                        <i\n                            key={sb.state}\n                            title={sb.title}\n                            className={`material-icons ${activeSidebar === sb.state ? style.active : ''}`}\n                            onClick={() => this.handleSidebar(sb.state)}\n                        >\n                            {sb.icon}\n                        </i>\n                    ))}\n                </div>\n                <div className={`${style.view} ${activeSidebar === null ? style.hidden : ''}`}>\n                    {SIDEBARS.map(sb => (\n                        <sb.component key={sb.state} visible={activeSidebar === sb.state} />\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        activeSidebar: state.cardset.present.activeSidebar,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, {}, State>(mapStateToProps)(Sidebar);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport shortid from 'shortid';\n\nimport { ACTIVITY_SELECTING, State } from '../reducers';\nimport { BLEED_WIDTH } from '../constants';\nimport { CardSetType, CardType, CardsCollection } from '../types';\nimport {\n    Dispatch,\n    cardSetActiveCardAndField,\n    cardSetCreateCard,\n    cardSetRenameRequest,\n    cardSetUndo,\n    cardSetRedo,\n} from '../actions';\nimport Card from './Card';\nimport EditableTitle from './EditableTitle';\nimport KawaiiMessage, { Character } from './KawaiiMessage';\nimport Loader from './Loader';\nimport Sidebar from './Sidebar';\nimport style from './CardSet.module.css';\n\ninterface StateProps {\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    isAuthenticated?: boolean;\n    cardsAllIds: string[];\n    cardsById: CardsCollection;\n    activity: number;\n    zoom: number;\n    activeCardSet: CardSetType | null;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = StateProps & DispatchProps;\n\ninterface LocalState {\n    pageWidth: number;\n    pageHeight: number;\n    topBottomMargin: number;\n    leftRightMargin: number;\n}\n\nexport class CardSet extends Component<Props, LocalState> {\n    state = {\n        pageWidth: 210,\n        pageHeight: 297,\n        topBottomMargin: 15,\n        leftRightMargin: 9,\n    };\n\n    componentDidMount() {\n        window.addEventListener('keydown', this.keyDown);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('keydown', this.keyDown);\n    }\n\n    keyDown = (event: KeyboardEvent) => {\n        const { dispatch } = this.props;\n\n        switch (event.key) {\n            case 'z':\n            case 'Z': {\n                if (event.ctrlKey && event.shiftKey) {\n                    dispatch(cardSetRedo());\n                } else if (event.ctrlKey) {\n                    dispatch(cardSetUndo());\n                }\n                break;\n            }\n            case 'y':\n            case 'Y': {\n                if (event.ctrlKey) {\n                    dispatch(cardSetRedo());\n                }\n                break;\n            }\n            // no default\n        }\n    };\n\n    handleCreateCardClick = () => {\n        const { dispatch } = this.props;\n\n        const newCard: CardType = { id: shortid.generate(), count: 1 };\n\n        dispatch(cardSetCreateCard(newCard));\n    };\n\n    handleClickOutsideOfCard = () => {\n        const { dispatch } = this.props;\n        dispatch(cardSetActiveCardAndField(undefined, false, undefined));\n    };\n\n    handleCardSetNameChange = (newName: string) => {\n        const { dispatch, activeCardSet } = this.props;\n        if (activeCardSet !== null) {\n            dispatch(cardSetRenameRequest(activeCardSet.id, newName));\n        }\n    };\n\n    render() {\n        const {\n            isAuthenticated,\n            cardsAllIds,\n            cardsById,\n            width,\n            height,\n            isTwoSided,\n            activity,\n            zoom,\n            activeCardSet,\n        } = this.props;\n\n        const widthWithBleeds = width + BLEED_WIDTH * 2;\n        const heightWithBleeds = height + BLEED_WIDTH * 2;\n\n        return (\n            isAuthenticated && (\n                <div>\n                    <KawaiiMessage character={Character.Ghost}>\n                        <p>Here you can design your cards.</p>\n                    </KawaiiMessage>\n\n                    {activeCardSet !== null && (\n                        <EditableTitle title={activeCardSet.name} onChange={this.handleCardSetNameChange} />\n                    )}\n\n                    <div className={style.cardsetview}>\n                        <div className={style.sidebar}>\n                            <Sidebar />\n                        </div>\n                        <div onMouseDown={this.handleClickOutsideOfCard} onTouchStart={this.handleClickOutsideOfCard}>\n                            {(activity & ACTIVITY_SELECTING) === ACTIVITY_SELECTING && <Loader />}\n                            <div className={style.cardset}>\n                                <ul\n                                    style={{\n                                        gridTemplateColumns: `repeat(auto-fill, minmax(${widthWithBleeds *\n                                            zoom}mm, 1fr))`,\n                                    }}\n                                >\n                                    {cardsAllIds &&\n                                        cardsAllIds.map(cardId => [\n                                            <li key={cardId}>\n                                                <Card card={cardsById[cardId]} isBack={false} />\n                                            </li>,\n                                            isTwoSided && (\n                                                <li key={`${cardId}back`}>\n                                                    <Card card={cardsById[cardId]} isBack={true} />\n                                                </li>\n                                            ),\n                                        ])}\n                                    <li key=\"newCard\">\n                                        <div\n                                            id=\"newCard\"\n                                            className={style.createCard}\n                                            style={{\n                                                width: `${widthWithBleeds * zoom}mm`,\n                                                height: `${heightWithBleeds * zoom}mm`,\n                                                position: 'relative',\n                                                overflow: 'hidden',\n                                            }}\n                                            onClick={this.handleCreateCardClick}\n                                        >\n                                            <div>\n                                                <i className=\"material-icons\">add</i>\n                                                <div>Add Card</div>\n                                            </div>\n                                        </div>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        activity: state.cardset.present.activity,\n        width: state.cardset.present.width,\n        height: state.cardset.present.height,\n        isTwoSided: state.cardset.present.isTwoSided,\n        zoom: state.cardset.present.zoom,\n        isAuthenticated: state.auth.isAuthenticated,\n        cardsAllIds: state.cardset.present.cardsAllIds,\n        cardsById: state.cardset.present.cardsById,\n        activeCardSet:\n            state.cardsets.active && state.cardsets.byId[state.cardsets.active]\n                ? state.cardsets.byId[state.cardsets.active]\n                : null,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, {}, State>(mapStateToProps)(CardSet);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport { Dispatch, cardSetSelectRequest } from './actions';\nimport { State } from './reducers';\nimport CardSet from './components/CardSet';\n\ninterface Props {\n    dispatch: Dispatch;\n    match: { params: { id: string } };\n    isAuthenticated?: boolean;\n}\n\nexport class CardSetPage extends Component<Props> {\n    componentDidMount() {\n        const { dispatch, match } = this.props;\n        dispatch(cardSetSelectRequest(match.params.id));\n    }\n\n    render() {\n        const { isAuthenticated } = this.props;\n        if (isAuthenticated) {\n            return <CardSet />;\n        } else if (isAuthenticated === false) {\n            return <Redirect to=\"/login\" />;\n        } else {\n            return null;\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => ({ isAuthenticated: state.auth.isAuthenticated });\n\nexport default connect(mapStateToProps)(CardSetPage);\n","import React, { Component } from 'react';\n\nexport default class ChangelogPage extends Component {\n    render() {\n        return (\n            <div>\n                <p>Here you can find list of future plans and what was implemented recently.</p>\n                <h2>2019-06-23</h2>\n                <ul>\n                    <li>Security improved.</li>\n                    <li>Help page added.</li>\n                    <li>Option to rotate cards added.</li>\n                    <li>Possibility to get a list of game's attributions added.</li>\n                    <li>Undo/Redo exposed in UI (while I suggest using Ctrl+Z and Ctrl+Shift+Z/Ctrl+Y instead).</li>\n                </ul>\n                <h2>2019-06-22</h2>\n                <ul>\n                    <li>TIFF, WEBP and GIF support added.</li>\n                    <li>No need to keep upload sidebar open to upload images.</li>\n                </ul>\n                <h2>2019-06-20</h2>\n                <ul>\n                    <li>Bug fix release: PDF generation, import/export fixes.</li>\n                </ul>\n                <h2>2019-06-16</h2>\n                <ul>\n                    <li>Bug fix release.</li>\n                </ul>\n                <h2>2019-06-08</h2>\n                <ul>\n                    <li>\"Apply to all cards\" work on pan and zoom as well.</li>\n                    <li>UX on mobile devices (e.g. phones) improved.</li>\n                    <li>Other minor fixes.</li>\n                </ul>\n                <h2>2019-06-04</h2>\n                <ul>\n                    <li>Possibility to zoom in and pan imaged added.</li>\n                    <li>Undo/Redo using Ctrl+Z and Ctrl+Y (or Ctrl+Shift+Z).</li>\n                    <li>More small improvements and bug fixes.</li>\n                </ul>\n                <h2>2019-05-26</h2>\n                <ul>\n                    <li>Text rendering fixes.</li>\n                    <li>Card Sets and Games list are sorted alphabetically now.</li>\n                    <li>Image handling improvements.</li>\n                </ul>\n                <h2>2019-05-18</h2>\n                <ul>\n                    <li>PDF and PNG generation improvements.</li>\n                </ul>\n                <h2>2019-05-17</h2>\n                <ul>\n                    <li>\n                        PNG generation for card set or the whole game. This will benefit if you want to publish game via{' '}\n                        <a href=\"https://www.thegamecrafter.com/\">The Game Crafter</a>,{' '}\n                        <a href=\"makeplayingcards.com\">Make Playing Cards</a> or any other place.\n                    </li>\n                </ul>\n                <h2>2019-04-13</h2>\n                <ul>\n                    <li>Option to generate cutting marks on front side only.</li>\n                    <li>Guillotine cuttings marks on card edges.</li>\n                    <li>\n                        Field move limitation is removed because if drag field outside of view you can return it using\n                        custom positions and size controls.\n                    </li>\n                    <li>Drag and drop improvement.</li>\n                </ul>\n                <h2>2019-04-07</h2>\n                <ul>\n                    <li>Snapping implemented for move, rotation and resize operations.</li>\n                    <li>Image search changes and improvements.</li>\n                    <li>\n                        Drag&Drop support for images. Images can be dropped to text field as well but it is assumed that\n                        dropped images are square when generating PDF.\n                    </li>\n                    <li>Bold and Italic support in text added.</li>\n                    <li>Other minor fixes.</li>\n                </ul>\n                <h2>2019-03-22</h2>\n                <ul>\n                    <li>Two-sided cards.</li>\n                    <li>PDF generation for all the game.</li>\n                    <li>More PDF generation options added</li>\n                    <li>Change color of images (for SVG images only, e.g. try using with \"forms\" images).</li>\n                    <li>Game rename and delete</li>\n                    <li>Card Set rename and delete</li>\n                    <li>Text: line height support</li>\n                    <li>UI/UX improvements</li>\n                </ul>\n                <h2>2019-03-03</h2>\n                <ul>\n                    <li>Data import/export in JSON and CSV formats.</li>\n                    <li>\n                        Named fields. If multiple fields have the same name then by editing one you change value in all\n                        of them. As well named fields look better in data export/import.\n                    </li>\n                </ul>\n\n                <h2>2019-03-02</h2>\n                <ul>\n                    <li>You can upload your own images now. Images are limited.</li>\n                    <li>\n                        Image order support added. E.g.: now you can upload background image and lower it to the bottom.\n                    </li>\n                    <li>Progress indicators and user messages improvements.</li>\n                </ul>\n\n                <h2>2019-02-24</h2>\n                <ul>\n                    <li>Sidebar created for lighter, cleaner and faster UI.</li>\n                    <li>Zoom added to card set for more flexibility while viewing or editing.</li>\n                </ul>\n                <h2>2019-02-23</h2>\n                <ul>\n                    <li>Text rendering changed and should be working properly now.</li>\n                    <li>Crash with new card set fixed.</li>\n                    <li>Minor UI improvements.</li>\n                </ul>\n                <h2>2019-02-17</h2>\n                <p>Initial public version.</p>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\nimport { reportError } from './utils';\n\nwindow.addEventListener('error', function(evt: ErrorEvent) {\n    let error = evt.error;\n    reportError(error);\n});\n\ninterface Props {\n    children: React.ReactNode;\n}\n\ninterface State {\n    hasError: boolean;\n}\n\nexport default class ErrorBoundary extends Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    componentDidCatch(error: Error | null) {\n        this.setState({ hasError: true });\n        if (error !== null) {\n            reportError(error);\n        }\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return (\n                <KawaiiMessage character={Character.Browser} mood=\"ko\">\n                    Something unexpected has happened. Error report is sent to me by e-mail and I will review it as soon\n                    as possible. Still feel free to contact me by e-mail{' '}\n                    <a href=\"mailto:dalius@ffff.lt\">dalius@ffff.lt</a>.\n                </KawaiiMessage>\n            );\n        }\n        return this.props.children;\n    }\n}\n","import React, { Component } from 'react';\nimport style from './ConfirmedDelete.module.css';\n\ninterface Props {\n    question: string;\n    onDelete: () => void;\n}\n\nexport default class ConfirmedDelete extends Component<Props> {\n    state = {\n        deleteClicked: false,\n    };\n\n    handleRemove = () => {\n        this.setState({ deleteClicked: !this.state.deleteClicked });\n    };\n\n    handleYes = () => {\n        this.setState({ deleteClicked: false });\n        this.props.onDelete();\n    };\n\n    handleNo = () => {\n        this.setState({ deleteClicked: false });\n    };\n\n    render() {\n        const { deleteClicked } = this.state;\n        const { question } = this.props;\n\n        return (\n            <>\n                <i title=\"Remove\" className={`material-icons ${style.button}`} onClick={this.handleRemove}>\n                    remove_circle_outline\n                </i>{' '}\n                {deleteClicked && (\n                    <>\n                        {question}{' '}\n                        <span className={style.answer} onClick={this.handleYes}>\n                            Yes\n                        </span>{' '}\n                        /{' '}\n                        <span className={style.answer} onClick={this.handleNo}>\n                            No\n                        </span>\n                    </>\n                )}\n            </>\n        );\n    }\n}\n","import { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { CardSetsCollection, GameType, IdsArray } from '../types';\nimport {\n    Dispatch,\n    cardSetCreateRequest,\n    cardSetDeleteRequest,\n    gameRenameRequest,\n    messageDisplay,\n    gameCreatePngRequest,\n    gameGetAttributionsRequest,\n} from '../actions';\nimport { State, ACTIVITY_CREATING_PNG } from '../reducers';\nimport ConfirmedDelete from './ConfirmedDelete';\nimport EditableTitle from './EditableTitle';\nimport KawaiiMessage, { Character } from './KawaiiMessage';\nimport PDFGenerator from './PDFGenerator';\nimport style from './CardSets.module.css';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated?: boolean;\n    activeGame: GameType | null;\n    allIds: IdsArray;\n    byId: CardSetsCollection;\n    isCreatingPng: boolean;\n    attributions: string[];\n}\n\ninterface LocalState {\n    cardSetName: string;\n    width: number;\n    height: number;\n    dpi: number;\n}\n\nexport class CardSets extends Component<Props, LocalState> {\n    state: LocalState = {\n        cardSetName: '',\n        width: 63.5,\n        height: 88.9,\n        dpi: 300,\n    };\n\n    handleGameNameChange = (newName: string) => {\n        const { dispatch, activeGame } = this.props;\n        if (activeGame !== null) {\n            dispatch(gameRenameRequest(activeGame.id, newName));\n        }\n    };\n\n    handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ cardSetName: event.target.value });\n    };\n\n    handleWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ width: parseFloat(event.target.value) });\n    };\n\n    handleHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ height: parseFloat(event.target.value) });\n    };\n\n    handleCreateCardSetClick = () => {\n        const { dispatch, activeGame } = this.props;\n\n        if (activeGame === null) {\n            return;\n        }\n\n        const cardSetName = this.state.cardSetName.trim();\n\n        if (cardSetName) {\n            dispatch(cardSetCreateRequest(cardSetName, this.state.width, this.state.height, activeGame.id));\n        } else {\n            dispatch(messageDisplay('error', 'Card Set name should be non empty.'));\n        }\n    };\n\n    handleCardSetDelete = (cardSetId: string) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetDeleteRequest(cardSetId));\n    };\n\n    handleDpiChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ dpi: parseInt(event.target.value) });\n    };\n\n    handleGenerate = () => {\n        const { dispatch, activeGame } = this.props;\n        const { dpi } = this.state;\n\n        if (activeGame !== null) {\n            dispatch(gameCreatePngRequest(dpi, 'games', activeGame.id));\n        }\n    };\n\n    handleGetAttributions = () => {\n        const { dispatch, activeGame } = this.props;\n\n        if (activeGame !== null) {\n            dispatch(gameGetAttributionsRequest());\n        }\n    };\n\n    render() {\n        const { isAuthenticated, activeGame, allIds, byId, isCreatingPng, attributions } = this.props;\n        const { dpi } = this.state;\n\n        let cardsets = allIds.map(cardsetId => byId[cardsetId]);\n        cardsets.sort((a, b) => (a.name < b.name ? -1 : 1));\n\n        const cardsetItems = cardsets.map(cardset => (\n            <li key={cardset.id}>\n                <Link to={`/cardset/${cardset.id}`}>{cardset.name}</Link>{' '}\n                <ConfirmedDelete\n                    question=\"Do you really want to delete this card set?\"\n                    onDelete={() => this.handleCardSetDelete(cardset.id)}\n                />\n            </li>\n        ));\n\n        return (\n            isAuthenticated &&\n            activeGame !== null && (\n                <div className={style.cardsets}>\n                    <KawaiiMessage character={Character.Ghost}>\n                        Each game is made from card sets. Card set is collection of cards that share the same properties\n                        but have different text and images.\n                    </KawaiiMessage>\n\n                    <EditableTitle title={activeGame.name} onChange={this.handleGameNameChange} />\n\n                    <ul>{cardsetItems}</ul>\n\n                    <div className=\"form\">\n                        <label htmlFor=\"cardset_name\">Card Set name:</label>\n                        <input\n                            id=\"cardset_name\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            className=\"form-control\"\n                            placeholder=\"Card Set name\"\n                        />\n                        <label htmlFor=\"card_width\">Card width:</label>\n                        <input\n                            id=\"card_width\"\n                            type=\"number\"\n                            min=\"0\"\n                            step=\"0.1\"\n                            onChange={this.handleWidthChange}\n                            className=\"form-control\"\n                            placeholder=\"Card width\"\n                            value={this.state.width}\n                        />\n                        <label htmlFor=\"card_height\">Card height:</label>\n                        <input\n                            id=\"card_height\"\n                            type=\"number\"\n                            min=\"0\"\n                            step=\"0.1\"\n                            onChange={this.handleHeightChange}\n                            className=\"form-control\"\n                            placeholder=\"Card height\"\n                            value={this.state.height}\n                        />\n                        <button onClick={this.handleCreateCardSetClick}>Create Card Set</button>\n                    </div>\n\n                    <KawaiiMessage character={Character.Ghost} mood=\"excited\">\n                        Hint: Poker card size 63.5mm x 88.9mm. Bridge card size 57.15mm x 88.9mm. But you can have cards\n                        of any size.\n                    </KawaiiMessage>\n\n                    <PDFGenerator type=\"games\" id={activeGame.id} withHelp={true} />\n\n                    <div className=\"form\">\n                        Or you can generate PNG files for all the game:\n                        <label htmlFor=\"dpi\">DPI:</label>\n                        <input\n                            id=\"dpi\"\n                            type=\"number\"\n                            min=\"1\"\n                            step=\"1\"\n                            onChange={this.handleDpiChange}\n                            className=\"form-control\"\n                            placeholder=\"DPI\"\n                            value={dpi}\n                        />\n                        <button disabled={isCreatingPng} onClick={this.handleGenerate}>\n                            Generate PNG files\n                        </button>\n                    </div>\n\n                    <div className=\"form\">\n                        Get attributions for images you have used. You don't need to do this if you have used your own\n                        images/art.\n                        <button onClick={this.handleGetAttributions}>Get attributions</button>\n                        {attributions && attributions.length > 0 && (\n                            <>\n                                Give attributions to:\n                                <ul>\n                                    {attributions.map(attribution => (\n                                        <li>{attribution}</li>\n                                    ))}\n                                </ul>\n                            </>\n                        )}\n                    </div>\n                </div>\n            )\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        activeGame:\n            state.games.active && state.games.byId[state.games.active] ? state.games.byId[state.games.active] : null,\n        allIds: state.cardsets.allIds,\n        byId: state.cardsets.byId,\n        isCreatingPng: (state.games.activity & ACTIVITY_CREATING_PNG) === ACTIVITY_CREATING_PNG,\n        attributions: state.games.attributions,\n    };\n};\n\nexport default connect(mapStateToProps)(CardSets);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport { Dispatch, gameSelectRequest } from './actions';\nimport { State } from './reducers';\nimport CardSets from './components/CardSets';\n\ninterface Props {\n    dispatch: Dispatch;\n    match: { params: { id: string } };\n    isAuthenticated?: boolean;\n}\n\nexport class GamePage extends Component<Props> {\n    componentDidMount() {\n        const { dispatch, match } = this.props;\n        dispatch(gameSelectRequest(match.params.id, true));\n    }\n\n    render() {\n        const { isAuthenticated } = this.props;\n        if (isAuthenticated) {\n            return <CardSets />;\n        } else if (isAuthenticated === false) {\n            return <Redirect to=\"/login\" />;\n        } else {\n            return null;\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => ({ isAuthenticated: state.auth.isAuthenticated });\n\nexport default connect(mapStateToProps)(GamePage);\n","import React, { Component } from 'react';\n\nexport default class AboutPage extends Component {\n    render() {\n        return (\n            <div>\n                <h2>Help</h2>\n                <p>You can learn how to use Card-a-mon from tutorials:</p>\n                <ul>\n                    <li>\n                        <a href=\"https://blog.ffff.lt/posts/cardamon-tutorial-01/\">Creating first game prototype</a>\n                    </li>\n                    <li>\n                        <a href=\"https://blog.ffff.lt/posts/cardamon-tutorial-02/\">Uploading your own images</a>\n                    </li>\n                    <li>\n                        <a href=\"https://blog.ffff.lt/posts/cardamon-tutorial-03/\">Import and export</a>\n                    </li>\n                    <li>\n                        <a href=\"https://blog.ffff.lt/posts/cardamon-tutorial-04/\">PDF generation options</a>\n                    </li>\n                </ul>\n                <p>\n                    If tutorials do not answer your question then feel free to contact me by e-mail{' '}\n                    <a href=\"mailto:dalius@ffff.lt\">dalius@ffff.lt</a>, on{' '}\n                    <a href=\"https://twitter.com/DaliusD_\">twitter</a> or{' '}\n                    <a href=\"https://www.reddit.com/user/daliusd_/\">reddit</a>.\n                </p>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\ninterface Props {\n    onLogin: (creds: { username: string; password: string }) => void;\n    onLoginFailure: (message: string) => void;\n}\n\ninterface LocalState {\n    username: string;\n    password: string;\n}\n\nexport default class Login extends Component<Props, LocalState> {\n    state = {\n        username: '',\n        password: '',\n    };\n\n    handleUsernameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ username: event.target.value });\n    };\n\n    handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ password: event.target.value });\n    };\n\n    handleSubmit = (event: React.FormEvent) => {\n        const username = this.state.username.trim();\n        const password = this.state.password.trim();\n        if (username && password) {\n            const creds = { username, password };\n            this.props.onLogin(creds);\n        } else {\n            this.props.onLoginFailure('Missing username and/or password.');\n        }\n        event.preventDefault();\n    };\n\n    render() {\n        return (\n            <div>\n                <form className=\"form\" onSubmit={this.handleSubmit}>\n                    <input\n                        type=\"text\"\n                        onChange={this.handleUsernameChange}\n                        className=\"form-control\"\n                        placeholder=\"Username\"\n                    />\n                    <input\n                        type=\"password\"\n                        onChange={this.handlePasswordChange}\n                        className=\"form-control\"\n                        placeholder=\"Password\"\n                    />\n                    <input type=\"submit\" value=\"Login\" />\n                </form>\n            </div>\n        );\n    }\n}\n","import { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, loginRequest, messageDisplay } from './actions';\nimport { State } from './reducers';\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\nimport Login from './components/Login';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated?: boolean;\n}\n\nexport class LoginPage extends Component<Props> {\n    render() {\n        const { dispatch, isAuthenticated } = this.props;\n\n        return (\n            <div className=\"App\">\n                {!isAuthenticated && (\n                    <>\n                        <KawaiiMessage character={Character.Ghost}>\n                            Please enter your credentials to login. If you don't have account yet then you can create\n                            one here: <a href=\"/signup\">Sign-up</a>.\n                        </KawaiiMessage>\n\n                        <Login\n                            onLogin={creds => dispatch(loginRequest(creds))}\n                            onLoginFailure={msg => dispatch(messageDisplay('error', msg))}\n                        />\n                    </>\n                )}\n                {isAuthenticated && <Redirect to=\"/\" />}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => ({ isAuthenticated: state.auth.isAuthenticated });\n\nexport default connect(mapStateToProps)(LoginPage);\n","import { Link } from 'react-router-dom';\nimport React, { Component } from 'react';\nimport style from './FeatureList.module.css';\nimport screenshot from './screenshot.png';\n\nexport default class FeatureList extends Component {\n    render() {\n        return (\n            <div className={style.features}>\n                <div>\n                    <img src={screenshot} alt=\"screenshot\" />\n                </div>\n                Card-a-mon has a lot of required functionality to create a card game from prototype to final product:\n                <ul>\n                    <li>\n                        <strong>Multiple card sets</strong> per game. Each with its own card size and other properties.\n                    </li>\n                    <li>\n                        <strong>Works on modern browsers</strong> both desktop and mobile.\n                    </li>\n                    <li>\n                        <strong>WYSIWYG</strong> editing of cards.\n                    </li>\n                    <li>\n                        <strong>Full images control</strong> - resize, rotation, zoom and panning. Use images from\n                        built-in collection of 8000+ images or upload your own.\n                    </li>\n                    <li>\n                        <strong>Powerful text editing</strong> - hundreds of fonts, font size, alignment, variants, line\n                        height, rotation and color control, possibility to embed images into text.\n                    </li>\n                    <li>\n                        <strong>Data export/import</strong> to/from JSON and CSV formats.\n                    </li>\n                    <li>\n                        <strong>PDF generation</strong> of full game (all card sets) with cuttings marks for print and\n                        play.\n                    </li>\n                    <li>\n                        <strong>PNG generation</strong> for printing in services like The Game Crafter, Make Playings\n                        Cards and others.\n                    </li>\n                </ul>\n                <p>\n                    Check out <Link to=\"/help\">Help</Link> for more details.\n                </p>\n            </div>\n        );\n    }\n}\n","import { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, gameCreateRequest, gameDeleteRequest, messageDisplay } from '../actions';\nimport { GamesCollection, IdsArray } from '../types';\nimport { State } from '../reducers';\nimport ConfirmedDelete from './ConfirmedDelete';\nimport KawaiiMessage, { Character } from './KawaiiMessage';\nimport FeatureList from './FeatureList';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated?: boolean;\n    allIds: IdsArray;\n    byId: GamesCollection;\n}\n\ninterface LocalState {\n    gameName: string;\n}\n\nexport class Games extends Component<Props, LocalState> {\n    state: LocalState = {\n        gameName: '',\n    };\n\n    handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ gameName: event.target.value });\n    };\n\n    handleCreateGameClick = () => {\n        const { dispatch } = this.props;\n\n        const gamename = this.state.gameName.trim();\n        if (gamename) {\n            dispatch(gameCreateRequest(gamename));\n        } else {\n            dispatch(messageDisplay('error', 'Game name should be non empty.'));\n        }\n    };\n\n    handleGameDelete = (gameId: string) => {\n        const { dispatch } = this.props;\n        dispatch(gameDeleteRequest(gameId));\n    };\n\n    render() {\n        const { isAuthenticated, allIds, byId } = this.props;\n\n        const games = allIds.map(gameId => byId[gameId]);\n        games.sort((a, b) => (a.name < b.name ? -1 : 1));\n\n        const gameItems = games.map(game => (\n            <li key={game.id}>\n                <Link to={`/game/${game.id}`}>{game.name}</Link>{' '}\n                <ConfirmedDelete\n                    question=\"Do you really want to delete this game?\"\n                    onDelete={() => this.handleGameDelete(game.id)}\n                />\n            </li>\n        ));\n\n        return (\n            isAuthenticated && (\n                <div>\n                    <KawaiiMessage character={Character.Ghost}>\n                        <FeatureList />\n                        {allIds.length === 0 && (\n                            <>Below you can create your games and see list of your games when you have some.</>\n                        )}\n                        {allIds.length > 0 && (\n                            <>Below you can see a list of your games or you can create even more games.</>\n                        )}\n                    </KawaiiMessage>\n\n                    <ul>{gameItems}</ul>\n                    <div className=\"form\">\n                        <label htmlFor=\"game_name\">Game name:</label>\n                        <input\n                            id=\"game_name\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            className=\"form-control\"\n                            placeholder=\"Game name\"\n                        />\n                        <button onClick={this.handleCreateGameClick}>Create Game</button>\n                    </div>\n                </div>\n            )\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        allIds: state.games.allIds,\n        byId: state.games.byId,\n    };\n};\n\nexport default connect(mapStateToProps)(Games);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { State } from './reducers';\nimport Games from './components/Games';\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\nimport FeatureList from './components/FeatureList';\n\ninterface Props {\n    isAuthenticated?: boolean;\n}\n\nexport class Main extends Component<Props> {\n    render() {\n        if (this.props.isAuthenticated) {\n            return <Games />;\n        } else {\n            return (\n                <KawaiiMessage character={Character.Ghost}>\n                    <FeatureList />\n                    Here you can create your own card game but you need to <a href=\"/login\">Login</a> or{' '}\n                    <a href=\"/signup\">Sign-up</a> first.\n                </KawaiiMessage>\n            );\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n    };\n};\n\nexport default connect(mapStateToProps)(Main);\n","import { State } from './reducers';\n\nexport const getActiveGame = (state: State) => (state.games.active ? state.games.byId[state.games.active] : null);\n\nexport const getActiveCardSet = (state: State) =>\n    state.cardsets.active ? state.cardsets.byId[state.cardsets.active] : null;\n","import React from 'react';\n\ninterface Props {\n    onLogout: () => void;\n}\n\nfunction Logout(props: Props) {\n    return (\n        <button onClick={() => props.onLogout()} className=\"btn btn-primary\">\n            Logout\n        </button>\n    );\n}\n\nexport default Logout;\n","import { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { CardSetType, GameType, MessageType } from '../types';\nimport { Dispatch, logoutRequest } from '../actions';\nimport { State } from '../reducers';\nimport { getActiveCardSet, getActiveGame } from '../selectors';\nimport Loader from './Loader';\nimport Logout from './Logout';\nimport style from './Navbar.module.css';\n\ninterface OwnProps {\n    isAuthenticated?: boolean;\n}\n\ninterface StateProps {\n    messages: MessageType[];\n    activeGame: GameType | null;\n    activeCardSet: CardSetType | null;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nexport class Navbar extends Component<Props> {\n    render() {\n        const { dispatch, isAuthenticated, messages, activeGame, activeCardSet } = this.props;\n\n        return (\n            <nav>\n                <div id=\"messages\" className={style.messages}>\n                    <ul>\n                        {messages.map(m => (\n                            <li key={m.id} className={m.type === 'error' ? style.error : style.info}>\n                                {m.type === 'error' && (\n                                    <>\n                                        <i className=\"material-icons\">error</i> {m.text}\n                                    </>\n                                )}\n                                {m.type === 'info' && (\n                                    <>\n                                        <i className=\"material-icons\">info</i> {m.text}\n                                    </>\n                                )}\n                                {m.type === 'progress' && (\n                                    <>\n                                        <Loader small={true} /> {m.text}\n                                    </>\n                                )}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n                <div>\n                    <h1 className={style.header}>\n                        <Link to=\"/\">CARD-A-MON</Link>\n                    </h1>\n                    <div>\n                        <ul className={style.menu}>\n                            <li>\n                                <Link to=\"/\">Main</Link>\n                            </li>\n                            {isAuthenticated && (\n                                <>\n                                    {activeGame && (\n                                        <li>\n                                            <Link to={`/game/${activeGame.id}`}>Game \"{activeGame.name}\"</Link>\n                                        </li>\n                                    )}\n                                    {activeCardSet && (\n                                        <li>\n                                            <Link to={`/cardset/${activeCardSet.id}`}>\n                                                Card Set \"{activeCardSet.name}\"\n                                            </Link>\n                                        </li>\n                                    )}\n                                </>\n                            )}\n                            <li>\n                                <Link to=\"/changelog\">Changelog</Link>\n                            </li>\n                            <li>\n                                <Link to=\"/help\">Help</Link>\n                            </li>\n                            <li>\n                                <Link to=\"/about\">About</Link>\n                            </li>\n                            {isAuthenticated && (\n                                <li>\n                                    <Logout onLogout={() => dispatch(logoutRequest())} />\n                                </li>\n                            )}\n                            {!isAuthenticated && (\n                                <>\n                                    <li>\n                                        <Link to=\"/login\">Login</Link>\n                                    </li>\n                                    <li>\n                                        <Link to=\"/signup\">Sign-up</Link>\n                                    </li>\n                                </>\n                            )}\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        messages: state.message.messages,\n        activeGame: getActiveGame(state),\n        activeCardSet: getActiveCardSet(state),\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(Navbar);\n","import React, { Component } from 'react';\n\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\n\nexport default class NotFoundPage extends Component {\n    render() {\n        return (\n            <KawaiiMessage character={Character.Browser} mood=\"sad\">\n                There is nothing here.\n            </KawaiiMessage>\n        );\n    }\n}\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Credentials } from '../types';\nimport { Dispatch, messageDisplay } from '../actions';\n\ninterface Props {\n    dispatch: Dispatch;\n    onSignUp: (cred: Credentials) => void;\n}\n\nexport class SignUp extends Component<Props> {\n    state = {\n        username: '',\n        password: '',\n        passwordRepeat: '',\n    };\n\n    handleSubmit(event: React.FormEvent) {\n        const { dispatch, onSignUp } = this.props;\n\n        if (this.state.password !== this.state.passwordRepeat) {\n            dispatch(messageDisplay('error', 'Passwords do not match.'));\n        } else {\n            const creds = {\n                username: this.state.username.trim(),\n                password: this.state.password.trim(),\n            };\n            onSignUp(creds);\n        }\n\n        event.preventDefault();\n    }\n\n    handleUsernameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ username: event.target.value });\n    };\n\n    handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ password: event.target.value });\n    };\n\n    handlePasswordRepeatChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ passwordRepeat: event.target.value });\n    };\n\n    render() {\n        return (\n            <div>\n                <form className=\"form\" onSubmit={event => this.handleSubmit(event)}>\n                    <input\n                        type=\"text\"\n                        onChange={this.handleUsernameChange}\n                        className=\"form-control\"\n                        placeholder=\"Username\"\n                    />\n                    <input\n                        type=\"password\"\n                        onChange={this.handlePasswordChange}\n                        className=\"form-control\"\n                        placeholder=\"Password\"\n                    />\n                    <input\n                        type=\"password\"\n                        onChange={this.handlePasswordRepeatChange}\n                        className=\"form-control\"\n                        placeholder=\"Repeat password here\"\n                    />\n                    <input type=\"submit\" value=\"Sign Up\" />\n                </form>\n            </div>\n        );\n    }\n}\nexport default connect()(SignUp);\n","import { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, signupRequest } from './actions';\nimport { State } from './reducers';\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\nimport SignUp from './components/SignUp';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated?: boolean;\n}\n\nexport class SignUpPage extends Component<Props> {\n    render() {\n        const { dispatch, isAuthenticated } = this.props;\n\n        return (\n            <div className=\"App\">\n                {!isAuthenticated && (\n                    <>\n                        <KawaiiMessage character={Character.Ghost}>\n                            Create your user here. Instead of user name you can use your e-mail. If you forget your\n                            password then you can send me e-mail (I will not send you any e-mails without your consent).\n                            If you use regular user name and forget your password then you will not be able to access\n                            your account.\n                        </KawaiiMessage>\n\n                        <SignUp onSignUp={creds => dispatch(signupRequest(creds))} />\n                    </>\n                )}\n                {isAuthenticated && <Redirect to=\"/\" />}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => ({ isAuthenticated: state.auth.isAuthenticated });\n\nexport default connect(mapStateToProps)(SignUpPage);\n","import './App.css';\n\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport { isIE } from 'react-device-detect';\n\nimport { Dispatch, initRequest } from './actions';\nimport { State } from './reducers';\nimport AboutPage from './AboutPage';\nimport CardSetPage from './CardSetPage';\nimport ChangelogPage from './ChangelogPage';\nimport ErrorBoundry from './ErrorBoundry';\nimport GamePage from './GamePage';\nimport HelpPage from './HelpPage';\nimport LoginPage from './LoginPage';\nimport Main from './Main';\nimport Navbar from './components/Navbar';\nimport NotFoundPage from './NotFoundPage';\nimport SignUpPage from './SignUpPage';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated?: boolean;\n}\n\nexport class App extends Component<Props> {\n    componentDidMount() {\n        this.props.dispatch(initRequest());\n    }\n\n    render() {\n        if (isIE) return <div> IE is not supported. Download Chrome/Opera/Firefox </div>;\n        const { isAuthenticated } = this.props;\n        return (\n            <Router>\n                <div className=\"App\">\n                    <ErrorBoundry>\n                        <Navbar isAuthenticated={isAuthenticated} />\n                        <Switch>\n                            <Route exact path=\"/\" component={Main} />\n                            <Route exact path=\"/login\" component={LoginPage} />\n                            <Route exact path=\"/signup\" component={SignUpPage} />\n                            <Route exact path=\"/game/:id\" component={GamePage} />\n                            <Route exact path=\"/cardset/:id\" component={CardSetPage} />\n                            <Route exact path=\"/changelog\" component={ChangelogPage} />\n                            <Route exact path=\"/help\" component={HelpPage} />\n                            <Route exact path=\"/about\" component={AboutPage} />\n                            <Route component={NotFoundPage} />\n                        </Switch>\n                        <div className=\"App-footer\">Dalius Dobravolskas &copy; {new Date().getFullYear()}</div>\n                    </ErrorBoundry>\n                </div>\n            </Router>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    const { auth } = state;\n    const { isAuthenticated } = auth;\n\n    return {\n        isAuthenticated,\n    };\n};\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ninterface Config {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import './index.css';\n\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { createAppStore } from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createAppStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__3wMPS\",\"controls\":\"Sidebar_controls__3VVbM\",\"active\":\"Sidebar_active__4ldTH\",\"view\":\"Sidebar_view__-0BeZ\",\"hidden\":\"Sidebar_hidden__3xh5q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Navbar_header__FZp4U\",\"menu\":\"Navbar_menu__1JWvN\",\"messages\":\"Navbar_messages__h_dLG\",\"error\":\"Navbar_error__3urZl\",\"info\":\"Navbar_info__1h4Zc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fixed\":\"Loader_fixed__3q8O9\",\"relative\":\"Loader_relative__1lapZ\",\"loader\":\"Loader_loader__1ZCGC\",\"small\":\"Loader_small__3TZen\",\"loader-small\":\"Loader_loader-small__3PPAu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarDetails_view__29V31\",\"disabled\":\"SidebarDetails_disabled__1htJF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardset\":\"CardSet_cardset__21qjI\",\"cardsetview\":\"CardSet_cardsetview__1rqd1\",\"sidebar\":\"CardSet_sidebar__3y8_T\",\"createCard\":\"CardSet_createCard__2bOiw\"};","module.exports = __webpack_public_path__ + \"static/media/pan.ff303319.svg\";","module.exports = __webpack_public_path__ + \"static/media/zoom.2d0b374b.svg\";","module.exports = __webpack_public_path__ + \"static/media/resize.c1fb8dc3.svg\";"],"sourceRoot":""}