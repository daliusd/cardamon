{"version":3,"sources":["components/resize.svg","components/rotate.svg","components/Card.module.css","components/FontSelector.module.css","components/SidebarText.module.css","components/image.svg","components/text.svg","actions.ts","requests.ts","workerController.ts","storage.ts","fontLoader.tsx","sagas.ts","reducers.ts","components/KawaiiMessage.tsx","AboutPage.tsx","components/FieldController.tsx","components/ImageField.tsx","components/ContentEditable.tsx","components/TextField.tsx","components/Card.tsx","components/Loader.tsx","components/SidebarDetails.tsx","components/SidebarImage.tsx","components/ColorButton.tsx","components/FontSelector.tsx","components/SidebarText.tsx","components/Sidebar.tsx","components/CardSet.tsx","CardSetPage.tsx","ChangelogPage.tsx","ErrorBoundry.tsx","components/CardSets.tsx","GamePage.tsx","components/Login.tsx","LoginPage.tsx","components/Games.tsx","Main.tsx","selectors.ts","components/Logout.tsx","components/Navbar.tsx","NotFoundPage.tsx","components/SignUp.tsx","SignUpPage.tsx","App.tsx","serviceWorker.ts","index.tsx","store.ts","components/Sidebar.module.css","components/FieldController.module.css","components/SidebarDetails.module.css","components/Loader.module.css","components/SidebarImage.module.css","components/CardSet.module.css","components/Navbar.module.css"],"names":["module","exports","__webpack_require__","p","card","active","disabled","fontFamily","fontVariant","view","SidebarState","INIT_REQUEST","MESSAGE_DISPLAY","MESSAGE_HIDE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_REQUEST","LOGOUT_FAILURE","LOGOUT_SUCCESS","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_FAILURE","GAME_CREATE_REQUEST","GAME_CREATE_SUCCESS","GAME_CREATE_FAILURE","GAME_LIST_SUCCESS","GAME_LIST_REQUEST","GAME_LIST_FAILURE","GAME_LIST_RESET","GAME_SELECT_REQUEST","GAME_SELECT_SUCCESS","GAME_SELECT_FAILURE","GAME_CREATE_PDF_REQUEST","GAME_CREATE_PDF_SUCCESS","GAME_CREATE_PDF_FAILURE","CARDSET_CREATE_REQUEST","CARDSET_CREATE_SUCCESS","CARDSET_CREATE_FAILURE","CARDSET_LIST_SUCCESS","CARDSET_LIST_REQUEST","CARDSET_LIST_FAILURE","CARDSET_LIST_RESET","CARDSET_SELECT_REQUEST","CARDSET_SELECT_SUCCESS","CARDSET_CREATE_CARD","CARDSET_CLONE_CARD","CARDSET_REMOVE_CARD","CARDSET_UPDATE_CARD_COUNT","CARDSET_ADD_TEXT_PLACEHOLDER","CARDSET_ADD_IMAGE_PLACEHOLDER","CARDSET_REMOVE_ACTIVE_PLACEHOLDER","CARDSET_CHANGE_WIDTH","CARDSET_CHANGE_HEIGHT","CARDSET_CHANGE_PLACEHOLDER_POSITION","CARDSET_CHANGE_PLACEHOLDER_SIZE","CARDSET_CHANGE_PLACEHOLDER_ANGLE","CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_ALIGN","CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_COLOR","CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY","CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_VARIANT","CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY_AND_VARIANT","CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_SIZE","CARDSET_CHANGE_TEXT","CARDSET_CHANGE_IMAGE","CARDSET_SET_ACTIVE_CARD_AND_PLACEHOLDER","CARDSET_UPDATE_DATA_REQUEST","CARDSET_UPDATE_DATA_SUCCESS","CARDSET_UPDATE_DATA_FAILURE","CARDSET_SELECT_FAILURE","CARDSET_SET_SIDEBAR_STATE","CARDSET_SET_ZOOM","IMAGE_LIST_REQUEST","IMAGE_LIST_SUCCESS","IMAGE_LIST_FAILURE","messageRequest","type","text","message","id","shortid","generate","gameCreateRequest","gamename","gameSelectRequest","updateCardSets","gameCreatePdfRequest","pageWidth","pageHeight","topBottomMargin","leftRightMargin","cardSetCreateRequest","cardsetname","width","height","gameId","cardSetCreateCard","cardSetCloneCard","cardSetRemoveCard","cardSetUpdateCardCount","count","cardSetAddTextPlaceholder","cardSetAddImagePlaceholder","cardSetRemoveActivePlaceholder","cardSetChangeWidth","cardSetChangeHeight","cardSetChangePlaceholderPosition","placeholder","x","y","cardSetChangePlaceholderSize","cardSetChangePlaceholderAngle","angle","cardSetChangeActiveTextPlaceholderAlign","align","cardSetChangeActiveTextPlaceholderColor","color","cardSetChangeActiveTextPlaceholderFontVariant","cardSetChangeActiveTextPlaceholderFontFamilyAndVariant","cardSetChangeActiveTextPlaceholderFontSize","fontSize","cardSetChangeText","cardId","placeholderId","textInfo","cardSetChangeImage","imageInfo","cardSetActiveCardAndPlaceholder","cardSetSetSidebarState","sidebarState","cardSetSetZoom","zoom","imageListRequest","filter","handleAxiosError","error","response","Error","data","request","console","log","getTokens","creds","axios","post","then","resp","catch","refreshToken","refreshTokenValue","config","headers","Authorization","concat","accessToken","deleteAccessToken","token","delete","status","deleteRefreshToken","registerUser","getRequest","url","get","postRequest","putRequest","put","generatePdfUsingWorker","cardsAllIds","cardsById","placeholders","texts","images","window","Worker","Promise","resolve","reject","worker","addEventListener","event","blobURL","tempLink","document","createElement","style","display","href","setAttribute","download","body","appendChild","click","removeChild","setTimeout","URL","revokeObjectURL","postMessage","e","saveTokens","localStorage","setItem","saveAccessToken","cleanTokens","removeItem","getTokenFromStorage","getItem","getRefreshTokenFromStorage","DEFAULT_FONT_SIZE","loadFontsUsedInPlaceholders","fontsToLoad","Set","plId","add","pl","fontToLoad","WebFont","load","Object","objectSpread","inactive","webFontsLoadPromise","google","families","toConsumableArray","Array","from","putError","handleMessageDisplay","getToken","handleLoginRequest","handleLoginSuccess","logoutToken","logoutRefreshToken","handleLogoutRequest","handleSignupRequest","handleInitRequest","authorizedGetRequest","authorizedPostRequest","authorizedPutRequest","handleGameCreateRequest","handleGameListRequest","handleGameSelectRequest","handleGameCreatePdfRequest","handleCardSetCreateRequest","handleCardSetSelectRequest","handleCardSetChange","handleImageListRequest","rootSaga","regenerator_default","a","wrap","_context","prev","next","stop","_marked","action","_context2","call","delay","_marked2","validateToken","jwtDecode","exp","Date","getTime","withErrorIfMissing","newToken","_context3","sent","abrupt","_marked3","_context4","t0","_marked4","_context5","_marked5","_context6","_marked6","_context7","_marked7","_context8","_marked8","_context9","_marked9","_context10","_marked10","_context11","_marked11","_context12","_marked12","_context13","_marked13","_context14","name","_marked14","allIds","byId","_context15","games","map","g","reduce","obj","_marked15","_context16","cardsets","_marked16","state","_context17","select","_marked17","_context18","JSON","stringify","_marked18","parsedData","_context19","parse","_marked19","cardsetId","_context20","_marked20","_context21","_marked21","_context22","all","takeEvery","takeLatest","_marked22","ACTIVITY_CREATING","ACTIVITY_LISTING","ACTIVITY_SELECTING","ACTIVITY_CREATING_PDF","ACTIVITY_UPDATING","DefaultMessageState","messages","DefaultAuthState","isAuthenticated","user","DefaultSignUpState","signingup","DefaultGameState","activity","DefaultCardSetState","activeCard","activePlaceholder","textSettings","activeSidebar","DefaultImageState","reducers","combineReducers","arguments","length","undefined","assign","m","auth","username","signup","defineProperty","newCard","index","indexOf","slice","textPlaceholder","imagePlaceholder","placeholderTexts","placeholderImages","placeholdersByCard","Details","Text","Image","Character","AboutPage","react_default","Component","FieldController","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","moving","cDiv","resizeDiv","rotateDiv","relX","relY","startX","startY","originalW","originalH","rotatedPointX","rotatedPointY","centerX","centerY","originalAngle","currentAngle","rotateVec","sinA","Math","sin","cosA","cos","rx","ry","handleBrowserDragStart","stopPropagation","preventDefault","handleMouseDown","handleDragStart","handleMouseMove","handleMouseUp","handleTouchStart","changedTouches","handleTouchMove","passive","handleTouchEnd","co","current","clientX","offsetLeft","clientY","offsetTop","handleComplete","removeEventListener","onDrag","handleDragMove","left","top","handleResizeMouseDown","handleResizeStart","handleResizeMouseMove","handleResizeMouseUp","handleResizeTouchStart","handleResizeTouchMove","handleResizeTouchEnd","clientWidth","clientHeight","dx","dy","_this$rotateVec","handleResizeComplete","_this$cDiv$current","onResize","handleResizeMove","vx","vy","_this$rotateVec2","w","h","rotatedV","nx","ny","handleRotateMouseDown","handleRotateStart","handleRotateMouseMove","handleRotateMouseUp","handleRotateTouchStart","handleRotateTouchMove","handleRotateTouchEnd","rect","getBoundingClientRect","atan2","handleRotateComplete","onRotate","handleRotateMove","transform","React","createRef","_this$props","children","isActive","isActivePlaceholder","ref","className","fieldcontroller","fieldcontrolleractiveplaceholder","fieldcontrolleractive","position","cursor","src","resize","alt","controller","right","bottom","rotate","connect","ImageField","imageDiv","wasMoved","handleDrag","dispatch","ppmm","handleResize","_this$props2","handleRotate","_this$props3","_this$props4","_this$props5","imageUrl","components_FieldController","opacity","emptyImageImage","PureComponent","ContentEditable","editDiv","currentText","currentAlign","currentColor","currentFontFamily","currentFontVariant","currentFontSize","timeout","handleStart","handleMove","focus","onFocus","textValue","range","createRange","selectNodeContents","collapse","selection","getSelection","removeAllRanges","addRange","updateContent","timeoutInMiliseconds","value","innerHTML","replace","clearTimeout","handleBlur","handleInput","nextProps","isItalic","fontWeight","parseInt","contentEditable","onBlur","onInput","textAlign","DEFAULT_FONT","fontStyle","outline","overflowWrap","lineHeight","dangerouslySetInnerHTML","__html","TextField","zIndex","emptyTextImage","components_ContentEditable","Card","dimensions","handleFieldDeselect","target","getAttribute","_this2","isActiveCard","index_esm","client","contentRect","setState","_ref","measureRef","overflow","onMouseDown","onTouchStart","values","components_ImageField","key","components_TextField","KawaiiMessage","character","mood","padding","borderRadius","backgroundColor","grid","Ghost","size","Browser","marginLeft","Loader","fixed","loader","relative","SidebarDetails","_Component","_getPrototypeOf2","_len","args","_key","apply","handleCloneCardClick","handleRemoveCardClick","handleCountChange","inherits","createClass","onClick","title","toString","onChange","SidebarImage","handleAddImageClick","handleRemoveClick","handleFilterChange","handleImageSelect","imageName","ii","Fragment","im","ColorButton","displayColorPicker","handleClick","handleClose","handleChange","getRangeAt","rangeCount","collapsed","hex","execCommand","react_color_lib","disableAlpha","options","keys","webfonts","sort","fi","label","FontSelector","getFontStringForLoad","family","variant","stringForLoad","selectedOption","activeFontVariant","wf","handleFontVariantChange","activeFont","handleFontSizeChange","parseFloat","selectedFontFamily","find","f","fontVariantOptions","fv","selectedFontVariant","activeFontSize","react_select_esm","SidebarText","handleAddTextClick","handleSetTextAlignLeft","handleSetTextAlignCenter","handleSetTextAlignRight","components_ColorButton","components_FontSelector","Sidebar","handleDetails","handleImages","handleTexts","sidebar","controls","components_SidebarDetails","components_SidebarImage","components_SidebarText","CardSet","handleCreateCardClick","handleGeneratePdfClick","_this$state","handleWidthChange","handleHeightChange","handleZoom","handlePageWidthChange","handlePageHeightChange","handleTopBottomMarginChange","handleLeftRightMarginChange","handleClickOutsideOfCard","isCreatingPdf","Loader_Loader","KawaiiMessage_KawaiiMessage","cardsetview","components_Sidebar","htmlFor","min","step","cardset","gridTemplateColumns","components_Card","CardSetPage","match","params","components_CardSet","ChangelogPage","ErrorBoundary","hasError","CardSets","cardSetName","handleCreateCardSetClick","activeGame","trim","cardsetItems","Link","to","GamePage","components_CardSets","Login","password","handleUsernameChange","handlePasswordChange","handleSubmit","onLogin","onLoginFailure","onSubmit","LoginPage","Login_Login","loginRequest","msg","Redirect","Games","gameName","handleCreateGameClick","gameItems","game","Main","components_Games","getActiveGame","getActiveCardSet","Logout","onLogout","Navbar","activeCardSet","header","menu","components_Logout","NotFoundPage","SignUp","passwordRepeat","handlePasswordRepeatChange","onSignUp","SignUpPage","components_SignUp","signupRequest","App","BrowserRouter","ErrorBoundry_ErrorBoundary","components_Navbar","Switch","Route","exact","path","component","getFullYear","Boolean","location","hostname","store","sagaMiddleware","createSagaMiddleware","createStore","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","run","createAppStore","ReactDOM","render","es","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCCxCH,EAAAC,QAAA,CAAkBG,KAAA,mBAAAC,OAAA,qBAAAC,SAAA,6CCAlBN,EAAAC,QAAA,CAAkBM,WAAA,iCAAAC,YAAA,wDCAlBR,EAAAC,QAAA,CAAkBQ,KAAA,0BAAAH,SAAA,oDCDlBN,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uKCkY5BO,sHA/XCC,EAAe,eACfC,EAAkB,kBAClBC,EAAe,eACfC,EAAgB,gBAChBC,EAAgB,gBAChBC,EAAgB,gBAChBC,EAAiB,iBACjBC,EAAiB,iBACjBC,EAAiB,iBACjBC,EAAiB,iBACjBC,EAAiB,iBACjBC,EAAiB,iBACjBC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAoB,oBACpBC,EAAoB,oBACpBC,EAAoB,oBACpBC,EAAkB,kBAClBC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAA0B,0BAC1BC,EAA0B,0BAC1BC,EAA0B,0BAC1BC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAqB,qBACrBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBACtBC,EAAqB,qBACrBC,GAAsB,sBACtBC,GAA4B,4BAC5BC,GAA+B,+BAC/BC,GAAgC,gCAChCC,GAAoC,oCACpCC,GAAuB,uBACvBC,GAAwB,wBACxBC,GAAsC,sCACtCC,GAAkC,kCAClCC,GAAmC,mCACnCC,GAA+C,+CAC/CC,GAA+C,+CAC/CC,GAAqD,qDACrDC,GACT,sDACSC,GACT,iEACSC,GAAmD,mDACnDC,GAAsB,sBACtBC,GAAuB,uBACvBC,GAA0C,0CAC1CC,GAA8B,8BAC9BC,GAA8B,8BAC9BC,GAA8B,8BAC9BC,GAAyB,yBACzBC,GAA4B,4BAC5BC,GAAmB,mBACnBC,GAAqB,qBACrBC,GAAqB,qBACrBC,GAAqB,+BA8TtBhE,gFAgFL,IAAMiE,GAAiB,SAACC,EAAcC,GACzC,MAAO,CACHD,KAAMhE,EACNkE,QAAS,CACLC,GAAIC,IAAQC,WACZL,KAAMA,EACNC,KAAMA,KA6BLK,GAAoB,SAACC,GAC9B,MAAO,CACHP,KAAMrD,EACN4D,SAAUA,IAULC,GAAoB,SAACL,EAAYM,GAC1C,MAAO,CACHT,KAAM9C,EACNiD,KACAM,mBAIKC,GAAuB,SAChCC,EACAC,EACAC,EACAC,GAEA,MAAO,CACHd,KAAM3C,EACNsD,YACAC,aACAC,kBACAC,oBAIKC,GAAuB,SAChCC,EACAC,EACAC,EACAC,GAEA,MAAO,CACHnB,KAAMxC,EACNwD,YAAaA,EACbC,QACAC,SACAC,WAWKC,GAAoB,SAAC5F,GAC9B,MAAO,CACHwE,KAAM/B,EACNzC,SAIK6F,GAAmB,SAAC7F,GAC7B,MAAO,CACHwE,KAAM9B,EACN1C,SAIK8F,GAAoB,SAAC9F,GAC9B,MAAO,CACHwE,KAAM7B,GACN3C,SAIK+F,GAAyB,SAAC/F,EAAgBgG,GACnD,MAAO,CACHxB,KAAM5B,GACN5C,OACAgG,UAIKC,GAA4B,WACrC,MAAO,CACHzB,KAAM3B,KAIDqD,GAA6B,WACtC,MAAO,CACH1B,KAAM1B,KAIDqD,GAAiC,WAC1C,MAAO,CACH3B,KAAMzB,KAIDqD,GAAqB,SAACX,GAC/B,MAAO,CACHjB,KAAMxB,GACNyC,UAIKY,GAAsB,SAACX,GAChC,MAAO,CACHlB,KAAMvB,GACNyC,WAIKY,GAAmC,SAC5CC,EACAC,EACAC,GAEA,MAAO,CACHjC,KAAMtB,GACNqD,cACAC,IACAC,MAIKC,GAA+B,SACxCH,EACAd,EACAC,GAEA,MAAO,CACHlB,KAAMrB,GACNoD,cACAd,QACAC,WAIKiB,GAAgC,SACzCJ,EACAK,GAEA,MAAO,CACHpC,KAAMpB,GACNmD,cACAK,UAIKC,GAA0C,SAACC,GACpD,MAAO,CACHtC,KAAMnB,GACNyD,UAIKC,GAA0C,SAACC,GACpD,MAAO,CACHxC,KAAMlB,GACN0D,UAaKC,GAAgD,SACzD7G,GAEA,MAAO,CACHoE,KAAMhB,GACNpD,gBAIK8G,GAAyD,SAClE/G,EACAC,GAEA,MAAO,CACHoE,KAAMf,GACNtD,aACAC,gBAIK+G,GAA6C,SACtDC,GAEA,MAAO,CACH5C,KAAMd,GACN0D,aAIKC,GAAoB,SAACC,EAAgBC,EAAuBC,GACrE,MAAO,CACHhD,KAAMb,GACN2D,SACAC,gBACAC,aAIKC,GAAqB,SAACH,EAAgBC,EAAuBG,GACtE,MAAO,CACHlD,KAAMZ,GACN0D,SACAC,gBACAG,cAIKC,GAAkC,SAC3CL,EACAC,GAEA,MAAO,CACH/C,KAAMX,GACNyD,SACAC,kBAIKK,GAAyB,SAACC,GACnC,MAAO,CACHrD,KAAMN,GACN2D,iBAIKC,GAAiB,SAACC,GAC3B,MAAO,CACHvD,KAAML,GACN4D,SAIKC,GAAmB,SAACC,GAC7B,MAAO,CACHzD,KAAMJ,GACN6D,+BC/uBD,SAASC,GAAiBC,GAC7B,MAAIA,EAAMC,SAIA,IAAIC,MAAMF,EAAMC,SAASE,KAAK5D,SAC7ByD,EAAMI,SACbC,QAAQC,IAAIN,EAAMI,SACZ,IAAIF,MAAMF,EAAMI,UAEhB,IAAIF,MAAM,oBAIjB,SAASK,GAAUC,GACtB,OAAOC,KACFC,KAAK,cAAeF,GACpBG,KAAK,SAAAC,GACF,OAAOA,EAAKT,OAEfU,MAAM,SAAAb,GACHD,GAAiBC,KAItB,SAASc,GAAaC,GACzB,IAAIC,EAAS,CACTC,QAAS,CAAEC,cAAa,UAAAC,OAAYJ,KAExC,OAAON,KACFC,KAAK,qBAAsB,GAAIM,GAC/BL,KAAK,SAAAC,GACF,OAAOA,EAAKT,KAAKiB,cAEpBP,MAAM,SAAAb,GACHD,GAAiBC,KAItB,SAASqB,GAAkBC,GAC9B,IAAIN,EAAS,CACTC,QAAS,CAAEC,cAAa,UAAAC,OAAYG,KAExC,OAAOb,KACFc,OAAO,qBAAsBP,GAC7BL,KAAK,SAAAC,GACF,OAAOA,EAAKT,OAEfU,MAAM,SAAAb,GACH,GAA8B,MAA1BA,EAAMC,SAASuB,OAAgB,MAAO,GAC1CzB,GAAiBC,KAItB,SAASyB,GAAmBH,GAC/B,IAAIN,EAAS,CACTC,QAAS,CAAEC,cAAa,UAAAC,OAAYG,KAExC,OAAOb,KACFc,OAAO,sBAAuBP,GAC9BL,KAAK,SAAAC,GACF,OAAOA,EAAKT,OAEfU,MAAM,SAAAb,GACH,GAA8B,MAA1BA,EAAMC,SAASuB,OAAgB,MAAO,GAC1CzB,GAAiBC,KAItB,SAAS0B,GAAalB,GACzB,OAAOC,KACFC,KAAK,aAAcF,GACnBG,KAAK,SAAAC,GACF,OAAOA,EAAKT,OAEfU,MAAM,SAAAb,GACHD,GAAiBC,KAItB,SAAS2B,GAAWC,EAAaN,GACpC,IAAIN,EAAS,CACTC,QAAS,CAAEC,cAAa,UAAAC,OAAYG,KAExC,OAAOb,KACFoB,IAAID,EAAKZ,GACTL,KAAK,SAAAC,GACF,OAAOA,EAAKT,OAEfU,MAAM,SAAAb,GACHD,GAAiBC,KAItB,SAAS8B,GAAYF,EAAaN,EAAenB,GACpD,IAAIa,EAAS,CACTC,QAAS,CAAEC,cAAa,UAAAC,OAAYG,KAExC,OAAOb,KACFC,KAAKkB,EAAKzB,EAAMa,GAChBL,KAAK,SAAAC,GACF,OAAOA,EAAKT,OAEfU,MAAM,SAAAb,GACHD,GAAiBC,KAItB,SAAS+B,GAAWH,EAAaN,EAAenB,GACnD,IAAIa,EAAS,CACTC,QAAS,CAAEC,cAAa,UAAAC,OAAYG,KAExC,OAAOb,KACFuB,IAAIJ,EAAKzB,EAAMa,GACfL,KAAK,SAAAC,GACF,OAAOA,EAAKT,OAEfU,MAAM,SAAAb,GACHD,GAAiBC,KCnHtB,IAAMiC,GAAyB,SAClC3E,EACAC,EACA2E,EACAC,EACAC,EACAC,EACAC,EACAtF,EACAC,EACAC,EACAC,GAGA,IAAKoF,OAAOC,OACR,MAAM,IAAItC,MAAM,mFAGpB,OAAO,IAAIuC,QAAQ,SAACC,EAASC,GACzB,IACI,IAAMC,EAAS,IAAIJ,OAAO,iBAC1BI,EAAOC,iBAAiB,UAAW,SAAAC,GAC/B,IAAMC,EAAUD,EAAM3C,KAEhB6C,EAAWC,SAASC,cAAc,KACxCF,EAASG,MAAMC,QAAU,OACzBJ,EAASK,KAAON,EAChBC,EAASM,aAAa,WAAY,YACD,qBAAtBN,EAASO,UAChBP,EAASM,aAAa,SAAU,UAEpCL,SAASO,KAAKC,YAAYT,GAC1BA,EAASU,QACTT,SAASO,KAAKG,YAAYX,GAC1BY,WAAW,WACPrB,OAAOsB,IAAIC,gBAAgBf,GAC3BL,KACD,OAGPE,EAAOmB,YAAY,CACfzG,QACAC,SACA2E,cACAC,YACAC,eACAC,QACAC,SACAtF,YACAC,aACAC,kBACAC,oBAEN,MAAO6G,GACLrB,EAAOqB,OC7DZ,SAASC,GAAW9D,GACvB+D,aAAaC,QAAQ,cAAehE,EAAKiB,aACzC8C,aAAaC,QAAQ,eAAgBhE,EAAKW,cAGvC,SAASsD,GAAgBhD,GAC5B8C,aAAaC,QAAQ,cAAe/C,GAGjC,SAASiD,KACZH,aAAaI,WAAW,eACxBJ,aAAaI,WAAW,gBAGrB,SAASC,KAEZ,OADYL,aAAaM,QAAQ,gBAAkB,KAIhD,SAASC,KAEZ,OADYP,aAAaM,QAAQ,iBAAmB,8CCd3CE,GAAoB,EAOpBC,GAA8B,SAACxE,GACxC,IAAIyE,EAA2B,IAAIC,IAEnC,IAAK,IAAMC,KADXF,EAAYG,IAXY,UAYL5E,EAAKiC,aAAc,CAClC,IAAM4C,EAAK7E,EAAKiC,aAAa0C,GAC7B,GAAgB,SAAZE,EAAG3I,MAAmB2I,EAAGhN,WAAY,CACrC,IAAIiN,EAAaD,EAAGhN,WAChBgN,EAAG/M,aAAkC,YAAnB+M,EAAG/M,cACrBgN,GAAc,IAAMD,EAAG/M,aAG3B2M,EAAYG,IAAIE,IAUxB,OA1BwB,SAACjE,GAAD,OACxB,IAAIyB,QAAQ,SAACC,EAASC,GAClBuC,KAAQC,KAARC,OAAAC,GAAA,EAAAD,CAAA,GAAkBpE,EAAlB,CAA0BlJ,OAAQ4K,EAAS4C,SAAU3C,OAwBlD4C,CANwB,CAC3BC,OAAQ,CACJC,SAASL,OAAAM,GAAA,EAAAN,CAAKO,MAAMC,KAAKhB,oBCiEpBiB,gBAIAC,gBAkBAC,gBA2BAC,gBAWAC,gBAMAC,gBAUAC,gBAUAC,gBAiBAC,gBAaAC,gBAUAC,gBAKAC,gBAKAC,gBAMAC,gBAaAC,gBAmBAC,gBA0BAC,gBA6BAC,gBAiBAC,gBAkBAC,gBAkCAC,gBAgBAC,IA1TV,SAAUrB,GAAStJ,GAAnB,OAAA4K,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACH,OADGF,EAAAE,KAAA,EACGxF,YAAI5F,GAAe,QAASG,IAD/B,wBAAA+K,EAAAG,SAAAC,IAIA,SAAU5B,GAAqB6B,GAA/B,OAAAR,EAAAC,EAAAC,KAAA,SAAAO,GAAA,cAAAA,EAAAL,KAAAK,EAAAJ,MAAA,OACH,OADGI,EAAAJ,KAAA,EACGK,YAAKC,IAAO,KADf,OAEH,OAFGF,EAAAJ,KAAA,EAEGxF,YAAI,CAAE3F,KAAM/D,EAAciE,QAASoL,EAAOpL,UAF7C,wBAAAqL,EAAAH,SAAAM,IAQA,SAASC,GAAc1G,GAC1B,IAGI,OAFgB2G,IAA2B3G,GACrB4G,KAAM,IAAIC,MAAOC,UAAY,IAAO,EAE5D,MAAOpE,GACL,OAAO,GAIR,SAAU+B,GAASsC,GAAnB,IAAA/G,EAAAP,EAAAuH,EAAA,OAAAnB,EAAAC,EAAAC,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,OACW,OADXe,EAAAf,KAAA,EACiBK,YAAKtD,IADtB,YACGjD,EADHiH,EAAAC,MAAA,CAAAD,EAAAf,KAAA,QAGoB,OAHpBe,EAAAf,KAAA,EAG0BK,YAAKG,GAAe1G,GAH9C,WAAAiH,EAAAC,KAAA,CAAAD,EAAAf,KAAA,eAAAe,EAAAE,OAAA,SAIwBnH,GAJxB,OAOuB,OAPvBiH,EAAAf,KAAA,GAO6BK,YAAKpD,IAPlC,WAOG1D,EAPHwH,EAAAC,KAAA,CAAAD,EAAAf,KAAA,aASKa,EATL,CAAAE,EAAAf,KAAA,eAS+B,IAAItH,MAAM,oBATzC,eAAAqI,EAAAE,OAAA,SAUQ,MAVR,QAauB,OAbvBF,EAAAf,KAAA,GAa6BK,YAAKG,GAAejH,GAbjD,WAAAwH,EAAAC,KAAA,CAAAD,EAAAf,KAAA,SAeC,OAfDe,EAAAf,KAAA,GAeOxF,YAAI,CAAE3F,KAAM3D,IAfnB,YAgBK2P,EAhBL,CAAAE,EAAAf,KAAA,eAgB+B,IAAItH,MAAM,oBAhBzC,eAAAqI,EAAAE,OAAA,SAiBQ,MAjBR,QAoBc,OApBdF,EAAAf,KAAA,GAoBoBK,YAAK/G,GAAcC,GApBvC,QAqBH,OADMuH,EApBHC,EAAAC,KAAAD,EAAAf,KAAA,GAqBGK,YAAKzD,GAAiBkE,GArBzB,eAAAC,EAAAE,OAAA,SAsBIH,GAtBJ,yBAAAC,EAAAd,SAAAiB,IA2BA,SAAU1C,GAAmB2B,GAA7B,IAAAxH,EAAA,OAAAgH,EAAAC,EAAAC,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,OAEc,OAFdmB,EAAApB,KAAA,EAAAoB,EAAAnB,KAAA,EAEoBK,YAAKtH,GAAWoH,EAAOnH,OAF3C,OAGC,OADML,EAFPwI,EAAAH,KAAAG,EAAAnB,KAAA,EAGOK,YAAK5D,GAAY9D,GAHxB,OAIC,OAJDwI,EAAAnB,KAAA,EAIOxF,YAAI,CAAE3F,KAAM7D,IAJnB,OAAAmQ,EAAAnB,KAAA,iBAMC,OANDmB,EAAApB,KAAA,GAAAoB,EAAAC,GAAAD,EAAA,SAAAA,EAAAnB,KAAA,GAMOxF,YAAI,CAAE3F,KAAM5D,IANnB,QAOC,OAPDkQ,EAAAnB,KAAA,GAOOK,YAAKhC,GAAU8C,EAAAC,GAAErM,SAPxB,yBAAAoM,EAAAlB,SAAAoB,GAAA,eAWA,SAAU5C,KAAV,OAAAkB,EAAAC,EAAAC,KAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,OACH,OADGsB,EAAAtB,KAAA,EACGxF,YAAI,CAAE3F,KAAMjD,IADf,wBAAA0P,EAAArB,SAAAsB,IAMA,SAAU7C,KAAV,IAAA5E,EAAA,OAAA6F,EAAAC,EAAAC,KAAA,SAAA2B,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAxB,MAAA,OACW,OADXwB,EAAAxB,KAAA,EACiBK,YAAKtD,IADtB,YACGjD,EADH0H,EAAAR,MAAA,CAAAQ,EAAAxB,KAAA,SAGoB,OAHpBwB,EAAAxB,KAAA,EAG0BK,YAAKG,GAAe1G,GAH9C,WAAA0H,EAAAR,KAAA,CAAAQ,EAAAxB,KAAA,SAKK,OALLwB,EAAAxB,KAAA,GAKWK,YAAKxG,GAAmBC,GALnC,yBAAA0H,EAAAvB,SAAAwB,IAUA,SAAU9C,KAAV,IAAApF,EAAA,OAAAoG,EAAAC,EAAAC,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,OACuB,OADvB0B,EAAA1B,KAAA,EAC6BK,YAAKpD,IADlC,YACG1D,EADHmI,EAAAV,MAAA,CAAAU,EAAA1B,KAAA,SAG2B,OAH3B0B,EAAA1B,KAAA,EAGiCK,YAAKG,GAAejH,GAHrD,WAAAmI,EAAAV,KAAA,CAAAU,EAAA1B,KAAA,SAKK,OALL0B,EAAA1B,KAAA,GAKWK,YAAKpG,GAAoBV,GALpC,yBAAAmI,EAAAzB,SAAA0B,IAUA,SAAU/C,KAAV,OAAAe,EAAAC,EAAAC,KAAA,SAAA+B,GAAA,cAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,OAEC,OAFD4B,EAAA7B,KAAA,EAAA6B,EAAA5B,KAAA,EAEOK,YAAK3B,IAFZ,OAGC,OAHDkD,EAAA5B,KAAA,EAGOK,YAAK1B,IAHZ,OAIC,OAJDiD,EAAA5B,KAAA,EAIOK,YAAKxD,IAJZ,OAMC,OAND+E,EAAA5B,KAAA,EAMOxF,YAAI,CAAE3F,KAAMlC,IANnB,OAOC,OAPDiP,EAAA5B,KAAA,GAOOxF,YAAI,CAAE3F,KAAM/C,IAPnB,QAQC,OARD8P,EAAA5B,KAAA,GAQOxF,YAAI,CAAE3F,KAAMzD,IARnB,QAAAwQ,EAAA5B,KAAA,iBAUC,OAVD4B,EAAA7B,KAAA,GAAA6B,EAAAR,GAAAQ,EAAA,SAAAA,EAAA5B,KAAA,GAUOxF,YAAI,CAAE3F,KAAM1D,IAVnB,QAWC,OAXDyQ,EAAA5B,KAAA,GAWOK,YAAKhC,GAAUuD,EAAAR,GAAErM,SAXxB,yBAAA6M,EAAA3B,SAAA4B,GAAA,eAiBA,SAAUhD,GAAoBsB,GAA9B,IAAAxH,EAAA,OAAAgH,EAAAC,EAAAC,KAAA,SAAAiC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,OAEc,OAFd8B,EAAA/B,KAAA,EAAA+B,EAAA9B,KAAA,EAEoBK,YAAKnG,GAAciG,EAAOnH,OAF9C,OAGC,OADML,EAFPmJ,EAAAd,KAAAc,EAAA9B,KAAA,EAGOK,YAAK5D,GAAY9D,GAHxB,OAIC,OAJDmJ,EAAA9B,KAAA,EAIOxF,YAAI,CAAE3F,KAAMvD,IAJnB,OAKC,OALDwQ,EAAA9B,KAAA,GAKOxF,YAAI,CAAE3F,KAAM7D,IALnB,QAAA8Q,EAAA9B,KAAA,iBAOC,OAPD8B,EAAA/B,KAAA,GAAA+B,EAAAV,GAAAU,EAAA,SAAAA,EAAA9B,KAAA,GAOOxF,YAAI,CAAE3F,KAAMtD,IAPnB,QAQC,OARDuQ,EAAA9B,KAAA,GAQOK,YAAKhC,GAAUyD,EAAAV,GAAErM,SARxB,yBAAA+M,EAAA7B,SAAA8B,GAAA,eAaA,SAAUjD,KAAV,OAAAa,EAAAC,EAAAC,KAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,OAEa,OAFbgC,EAAAjC,KAAA,EAAAiC,EAAAhC,KAAA,EAEmBK,YAAK9B,IAAU,GAFlC,WAAAyD,EAAAhB,KAAA,CAAAgB,EAAAhC,KAAA,QAIK,OAJLgC,EAAAhC,KAAA,EAIWxF,YAAI,CAAE3F,KAAM7D,IAJvB,OAAAgR,EAAAhC,KAAA,gBAAAgC,EAAAjC,KAAA,EAAAiC,EAAAZ,GAAAY,EAAA,kCAAAA,EAAA/B,SAAAgC,GAAA,cAUA,SAAUlD,GAAqB3E,GAA/B,IAAAN,EAAA,OAAA6F,EAAAC,EAAAC,KAAA,SAAAqC,GAAA,cAAAA,EAAAnC,KAAAmC,EAAAlC,MAAA,OACW,OADXkC,EAAAlC,KAAA,EACiBK,YAAK9B,IAAU,GADhC,OAEI,OADDzE,EADHoI,EAAAlB,KAAAkB,EAAAlC,KAAA,EAEUK,YAAKlG,GAAYC,EAAKN,GAFhC,cAAAoI,EAAAjB,OAAA,SAAAiB,EAAAlB,MAAA,wBAAAkB,EAAAjC,SAAAkC,IAKA,SAAUnD,GAAsB5E,EAAazB,GAA7C,IAAAmB,EAAA,OAAA6F,EAAAC,EAAAC,KAAA,SAAAuC,GAAA,cAAAA,EAAArC,KAAAqC,EAAApC,MAAA,OACW,OADXoC,EAAApC,KAAA,EACiBK,YAAK9B,IAAU,GADhC,OAEI,OADDzE,EADHsI,EAAApB,KAAAoB,EAAApC,KAAA,EAEUK,YAAK/F,GAAaF,EAAKN,EAAOnB,GAFxC,cAAAyJ,EAAAnB,OAAA,SAAAmB,EAAApB,MAAA,wBAAAoB,EAAAnC,SAAAoC,IAKA,SAAUpD,GAAqB7E,EAAazB,GAA5C,IAAAmB,EAAA,OAAA6F,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,OACW,OADXsC,EAAAtC,KAAA,EACiBK,YAAK9B,IAAU,GADhC,OAEI,OADDzE,EADHwI,EAAAtB,KAAAsB,EAAAtC,KAAA,EAEUK,YAAK9F,GAAYH,EAAKN,EAAOnB,GAFvC,cAAA2J,EAAArB,OAAA,SAAAqB,EAAAtB,MAAA,wBAAAsB,EAAArC,SAAAsC,IAMA,SAAUrD,GAAwBiB,GAAlC,OAAAR,EAAAC,EAAAC,KAAA,SAAA2C,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAxC,MAAA,OAEC,OAFDwC,EAAAzC,KAAA,EAAAyC,EAAAxC,KAAA,EAEOK,YAAKrB,GAAuB,aAAc,CAAEyD,KAAMtC,EAAO/K,WAFhE,OAGC,OAHDoN,EAAAxC,KAAA,EAGOxF,YAAI,CACN3F,KAAMpD,IAJX,OAMC,OAND+Q,EAAAxC,KAAA,EAMOxF,YAAI,CAAE3F,KAAMjD,IANnB,OAAA4Q,EAAAxC,KAAA,gBAQC,OARDwC,EAAAzC,KAAA,EAAAyC,EAAApB,GAAAoB,EAAA,SAAAA,EAAAxC,KAAA,GAQOxF,YAAI,CAAE3F,KAAMnD,IARnB,QASC,OATD8Q,EAAAxC,KAAA,GASOK,YAAKhC,GAAUmE,EAAApB,GAAErM,SATxB,yBAAAyN,EAAAvC,SAAAyC,GAAA,cAaA,SAAUvD,KAAV,IAAAxG,EAAAgK,EAAAC,EAAA,OAAAjD,EAAAC,EAAAC,KAAA,SAAAgD,GAAA,cAAAA,EAAA9C,KAAA8C,EAAA7C,MAAA,OAEc,OAFd6C,EAAA9C,KAAA,EAAA8C,EAAA7C,KAAA,EAEoBK,YAAKtB,GAAsB,cAF/C,OAQC,OANMpG,EAFPkK,EAAA7B,KAGO2B,EAAShK,EAAKmK,MAAMC,IAAI,SAACC,GAAD,OAAiBA,EAAEhO,KAC3C4N,EAAOjK,EAAKmK,MAAMG,OAAO,SAACC,EAAsBF,GAElD,OADAE,EAAIF,EAAEhO,IAAMgO,EACLE,GACR,IAPJL,EAAA7C,KAAA,EAQOxF,YAAI,CACN3F,KAAMlD,EACNgR,SACAC,SAXL,OAAAC,EAAA7C,KAAA,iBAcC,OAdD6C,EAAA9C,KAAA,GAAA8C,EAAAzB,GAAAyB,EAAA,SAAAA,EAAA7C,KAAA,GAcOxF,YAAI,CAAE3F,KAAMhD,IAdnB,QAeC,OAfDgR,EAAA7C,KAAA,GAeOK,YAAKhC,GAAUwE,EAAAzB,GAAErM,SAfxB,yBAAA8N,EAAA5C,SAAAkD,GAAA,eAmBA,SAAU/D,GAAwBe,GAAlC,IAAAxH,EAAAgK,EAAAC,EAAA,OAAAjD,EAAAC,EAAAC,KAAA,SAAAuD,GAAA,cAAAA,EAAArD,KAAAqD,EAAApD,MAAA,OAEc,OAFdoD,EAAArD,KAAA,EAAAqD,EAAApD,KAAA,EAEoBK,YAAKtB,GAAsB,cAAgBoB,EAAOnL,IAFtE,OAGC,OADM2D,EAFPyK,EAAApC,KAAAoC,EAAApD,KAAA,EAGOxF,YAAI,CACN3F,KAAM7C,EACNgD,GAAImL,EAAOnL,KALhB,WAQKmL,EAAO7K,eARZ,CAAA8N,EAAApD,KAAA,SAcK,OALM2C,EAAShK,EAAK0K,SAASN,IAAI,SAACC,GAAD,OAAoBA,EAAEhO,KACjD4N,EAAOjK,EAAK0K,SAASJ,OAAO,SAACC,EAAyBF,GAExD,OADAE,EAAIF,EAAEhO,IAAMgO,EACLE,GACR,IAbRE,EAAApD,KAAA,GAcWxF,YAAI,CACN3F,KAAMrC,EACNmQ,SACAC,SAjBT,QAAAQ,EAAApD,KAAA,iBAqBC,OArBDoD,EAAArD,KAAA,GAAAqD,EAAAhC,GAAAgC,EAAA,SAAAA,EAAApD,KAAA,GAqBOxF,YAAI,CAAE3F,KAAM5C,IArBnB,QAsBC,OAtBDmR,EAAApD,KAAA,GAsBOK,YAAKhC,GAAU+E,EAAAhC,GAAErM,SAtBxB,yBAAAqO,EAAAnD,SAAAqD,GAAA,eA0BA,SAAUjE,GAA2Bc,GAArC,IAAAoD,EAAA,OAAA5D,EAAAC,EAAAC,KAAA,SAAA2D,GAAA,cAAAA,EAAAzD,KAAAyD,EAAAxD,MAAA,OAEe,OAFfwD,EAAAzD,KAAA,EAAAyD,EAAAxD,KAAA,EAEqByD,cAFrB,OAIC,OAFMF,EAFPC,EAAAxC,KAAAwC,EAAAxD,KAAA,EAIOK,YACF5F,GACA8I,EAAMF,SAASvN,MACfyN,EAAMF,SAAStN,OACfwN,EAAMF,SAAS3I,YACf6I,EAAMF,SAAS1I,UACf4I,EAAMF,SAASzI,aACf2I,EAAMF,SAASxI,MACf0I,EAAMF,SAASvI,OACfqF,EAAO3K,UACP2K,EAAO1K,WACP0K,EAAOzK,gBACPyK,EAAOxK,iBAhBZ,OAkBC,OAlBD6N,EAAAxD,KAAA,EAkBOxF,YAAI,CACN3F,KAAM1C,IAnBX,OAAAqR,EAAAxD,KAAA,iBAsBC,OAtBDwD,EAAAzD,KAAA,GAAAyD,EAAApC,GAAAoC,EAAA,SAAAA,EAAAxD,KAAA,GAsBOxF,YAAI,CAAE3F,KAAMzC,IAtBnB,QAuBC,OAvBDoR,EAAAxD,KAAA,GAuBOK,YAAKhC,GAAUmF,EAAApC,GAAErM,SAvBxB,yBAAAyO,EAAAvD,SAAAyD,GAAA,eA6BA,SAAUpE,GAA2Ba,GAArC,OAAAR,EAAAC,EAAAC,KAAA,SAAA8D,GAAA,cAAAA,EAAA5D,KAAA4D,EAAA3D,MAAA,OAEC,OAFD2D,EAAA5D,KAAA,EAAA4D,EAAA3D,KAAA,EAEOK,YAAKrB,GAAuB,gBAAiB,CAC/CyD,KAAMtC,EAAOtK,YACbG,OAAQmK,EAAOnK,OACf2C,KAAMiL,KAAKC,UAAU,CAAE/N,MAAOqK,EAAOrK,MAAOC,OAAQoK,EAAOpK,WALhE,OAOC,OAPD4N,EAAA3D,KAAA,EAOOxF,YAAI,CACN3F,KAAMvC,IARX,OAUC,OAVDqR,EAAA3D,KAAA,EAUOxF,YAAInF,GAAkB8K,EAAOnK,QAAQ,IAV5C,OAAA2N,EAAA3D,KAAA,gBAYC,OAZD2D,EAAA5D,KAAA,EAAA4D,EAAAvC,GAAAuC,EAAA,SAAAA,EAAA3D,KAAA,GAYOxF,YAAI,CAAE3F,KAAMtC,IAZnB,QAaC,OAbDoR,EAAA3D,KAAA,GAaOK,YAAKhC,GAAUsF,EAAAvC,GAAErM,SAbxB,yBAAA4O,EAAA1D,SAAA6D,GAAA,cAiBA,SAAUvE,GAA2BY,GAArC,IAAAxH,EAAAoL,EAAA,OAAApE,EAAAC,EAAAC,KAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAAhE,MAAA,OAEc,OAFdgE,EAAAjE,KAAA,EAAAiE,EAAAhE,KAAA,EAEoBK,YAAKtB,GAAsB,iBAAmBoB,EAAOnL,IAFzE,OAIC,OAFM2D,EAFPqL,EAAAhD,KAGO+C,EAAaH,KAAKK,MAAMtL,EAAKA,MAHpCqL,EAAAhE,KAAA,EAIOK,YAAKlD,GAA6B4G,GAJzC,OAKC,OALDC,EAAAhE,KAAA,EAKOxF,YAAI,CACN3F,KAAMhC,EACNmC,GAAI2D,EAAK3D,GACTyN,KAAM9J,EAAK8J,KACX9J,KAAMoL,IATX,OAWC,OAXDC,EAAAhE,KAAA,GAWOxF,YAAInF,GAAkBsD,EAAK3C,QAAQ,IAX1C,QAAAgO,EAAAhE,KAAA,iBAaC,OAbDgE,EAAAjE,KAAA,GAAAiE,EAAA5C,GAAA4C,EAAA,SAAAA,EAAAhE,KAAA,GAaOxF,YAAI,CAAE3F,KAAMP,KAbnB,QAcC,OAdD0P,EAAAhE,KAAA,GAcOK,YAAKhC,GAAU2F,EAAA5C,GAAErM,SAdxB,yBAAAiP,EAAA/D,SAAAiE,GAAA,eAkBA,SAAU1E,KAAV,IAAA+D,EAAAY,EAAAxL,EAAA,OAAAgH,EAAAC,EAAAC,KAAA,SAAAuE,GAAA,cAAAA,EAAArE,KAAAqE,EAAApE,MAAA,OAEC,OAFDoE,EAAArE,KAAA,EAAAqE,EAAApE,KAAA,EAEOK,YAAKC,IAAO,KAFnB,OAGe,OAHf8D,EAAApE,KAAA,EAGqByD,cAHrB,OAKC,OAFMF,EAHPa,EAAApD,KAAAoD,EAAApE,KAAA,EAKOxF,YAAI,CACN3F,KAAMV,KANX,OAoBC,OAXMgQ,EAAYZ,EAAMF,SAAS/S,OAC3BqI,EAAO,CACT7C,MAAOyN,EAAMF,SAASvN,MACtBC,OAAQwN,EAAMF,SAAStN,OACvB2E,YAAa6I,EAAMF,SAAS3I,YAC5BC,UAAW4I,EAAMF,SAAS1I,UAC1BC,aAAc2I,EAAMF,SAASzI,aAC7BC,MAAO0I,EAAMF,SAASxI,MACtBC,OAAQyI,EAAMF,SAASvI,QAjB5BsJ,EAAApE,KAAA,GAoBOK,YAAKpB,GAAsB,iBAAmBkF,EAAW,CAC3D1B,KAAMc,EAAMF,SAAST,KAAKuB,GAAW1B,KACrC9J,KAAMiL,KAAKC,UAAUlL,KAtB1B,QAwBC,OAxBDyL,EAAApE,KAAA,GAwBOxF,YAAI,CACN3F,KAAMT,KAzBX,QAAAgQ,EAAApE,KAAA,iBA4BC,OA5BDoE,EAAArE,KAAA,GAAAqE,EAAAhD,GAAAgD,EAAA,SAAAA,EAAApE,KAAA,GA4BOxF,YAAI,CAAE3F,KAAMR,KA5BnB,QA6BC,OA7BD+P,EAAApE,KAAA,GA6BOK,YAAKhC,GAAU+F,EAAAhD,GAAErM,SA7BxB,yBAAAqP,EAAAnE,SAAAoE,GAAA,eAkCA,SAAU5E,GAAuBU,GAAjC,IAAAxH,EAAAmC,EAAA,OAAA6E,EAAAC,EAAAC,KAAA,SAAAyE,GAAA,cAAAA,EAAAvE,KAAAuE,EAAAtE,MAAA,OAEC,OAFDsE,EAAAvE,KAAA,EAAAuE,EAAAtE,KAAA,EAEOK,YAAKC,IAAO,KAFnB,OAGc,OAHdgE,EAAAtE,KAAA,EAGoBK,YAAKtB,GAAsB,oBAAsBoB,EAAO7H,QAH5E,OAKC,OAFMK,EAHP2L,EAAAtD,KAIOlG,EAASnC,EAAKmC,OAJrBwJ,EAAAtE,KAAA,EAKOxF,YAAI,CACN3F,KAAMH,GACNoG,WAPL,OAAAwJ,EAAAtE,KAAA,iBAUC,OAVDsE,EAAAvE,KAAA,GAAAuE,EAAAlD,GAAAkD,EAAA,SAAAA,EAAAtE,KAAA,GAUOxF,YAAI,CAAE3F,KAAMF,KAVnB,QAWC,OAXD2P,EAAAtE,KAAA,GAWOK,YAAKhC,GAAUiG,EAAAlD,GAAErM,SAXxB,yBAAAuP,EAAArE,SAAAsE,GAAA,eAgBA,SAAU7E,KAAV,OAAAC,EAAAC,EAAAC,KAAA,SAAA2E,GAAA,cAAAA,EAAAzE,KAAAyE,EAAAxE,MAAA,OACH,OADGwE,EAAAxE,KAAA,EACGyE,YAAI,CACNC,YAAU7T,EAAiByN,IAC3BqG,YAAW5T,EAAeyN,IAC1BmG,YAAW3T,EAAeyN,IAC1BkG,YAAWzT,EAAgB0N,IAC3B+F,YAAWtT,EAAgBwN,IAC3B8F,YAAWnT,EAAqB0N,IAChCyF,YAAW/S,EAAmBuN,IAC9BwF,YAAW5S,EAAqBqN,IAChCuF,YAAWzS,EAAyBmN,IACpCsF,YAAWtS,EAAwBiN,IACnCqF,YAAW/R,EAAwB2M,IAEnCoF,YAAW7R,EAAqB0M,IAChCmF,YAAW5R,EAAoByM,IAC/BmF,YAAW3R,GAAqBwM,IAChCmF,YAAW1R,GAA2BuM,IACtCmF,YAAWzR,GAA8BsM,IACzCmF,YAAWxR,GAA+BqM,IAC1CmF,YAAWvR,GAAmCoM,IAC9CmF,YAAWtR,GAAsBmM,IACjCmF,YAAWrR,GAAuBkM,IAClCmF,YAAWpR,GAAqCiM,IAChDmF,YAAWnR,GAAiCgM,IAC5CmF,YAAWlR,GAAkC+L,IAC7CmF,YAAWjR,GAA8C8L,IACzDmF,YAAWhR,GAA8C6L,IACzDmF,YAAW/Q,GAAoD4L,IAC/DmF,YAAW9Q,GAAqD2L,IAChEmF,YAAW7Q,GAAgE0L,IAC3EmF,YAAW5Q,GAAkDyL,IAC7DmF,YAAW3Q,GAAqBwL,IAChCmF,YAAW1Q,GAAsBuL,IAEjCmF,YAAWlQ,GAAoBgL,IAE/BkF,YAAW/T,EAAckO,MArC1B,wBAAA0F,EAAAvE,SAAA2E,iBCjUMC,GAAoB,EACpBC,GAAmB,EACnBC,GAAqB,EACrBC,GAAwB,EACxBC,GAAoB,GAMpBC,GAAoC,CAC7CC,SAAU,IAQDC,GAA8B,CACvCC,iBAAiB,EACjBC,KAAM,IAOGC,GAAkC,CAC3CC,WAAW,GAUFC,GAA8B,CACvC7C,KAAM,GACND,OAAQ,GACR+C,SAAU,EACVpV,OAAQ,MA8BCqV,GAAoC,CAC7C7P,MAAO,KACPC,OAAQ,KACR6M,KAAM,GACND,OAAQ,GACR+C,SAAU,EACVpV,OAAQ,KACRsK,aAAc,GACdD,UAAW,GACXD,YAAa,GACbkL,WAAY,KACZC,kBAAmB,KACnBhL,MAAO,GACPC,OAAQ,GACRgL,aAAc,CACV3O,MAAO,OACPE,MAAO,UACP7G,WF9KoB,SE+KpBC,YF9K4B,UE+K5BgH,SAAUyF,IAEd6I,cAAe,KACf3N,KAAM,GASG4N,GAAgC,CACzCN,SAAU,EACVpN,OAAQ,GACRwC,OAAQ,IAyrBZ,IASemL,GATEC,YAAgB,CAC7BnR,QArqBG,WAAiG,IAAhFwO,EAAgF4C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA1DjB,GAAqB/E,EAAqCgG,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpG,OAAQlG,EAAOtL,MACX,KAAKhE,EACD,OAAO+M,OAAO0I,OAAO,GAAI/C,EAAO,CAC5B4B,SAAU5B,EAAM4B,SAASxL,OAAOwG,EAAOpL,WAE/C,KAAKjE,EACD,OAAO8M,OAAO0I,OAAO,GAAI/C,EAAO,CAC5B4B,SAAU5B,EAAM4B,SAAS7M,OAAO,SAAAiO,GAAC,OAAIA,EAAEvR,KAAOmL,EAAOpL,QAAQC,OAErE,QACI,OAAOuO,IA2pBfiD,KAvpBG,WAAmF,IAArEjD,EAAqE4C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAlDf,GAAkBjF,EAAgCgG,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACtF,OAAQlG,EAAOtL,MACX,KAAK9D,EACD,OAAO6M,OAAO0I,OAAO,GAAI/C,EAAO,CAC5B8B,iBAAiB,EACjBC,KAAMnF,EAAOnH,MAAMyN,WAE3B,KAAKzV,EACD,OAAO4M,OAAO0I,OAAO,GAAI/C,EAAO,CAC5B8B,iBAAiB,IAEzB,KAAKpU,EAIL,KAAKG,EACD,OAAOwM,OAAO0I,OAAO,GAAI/C,EAAO,CAC5B8B,iBAAiB,IAEzB,QACI,OAAO9B,IAooBfmD,OAhoBG,WAA4F,IAA5EnD,EAA4E4C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAvDZ,GACxC,QAD+FY,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GAChFxR,MACX,KAAKxD,EACD,OAAOuM,OAAO0I,OAAO,GAAI/C,EAAO,CAC5BiC,WAAW,IAEnB,KAAKlU,EAIL,KAAKC,EACD,OAAOqM,OAAO0I,OAAO,GAAI/C,EAAO,CAC5BiC,WAAW,IAEnB,QACI,OAAOjC,IAknBfT,MA9mBG,WAAmF,IAApES,EAAoE4C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjDV,GAAkBtF,EAA+BgG,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACtF,OAAQlG,EAAOtL,MACX,KAAKrD,EACD,OAAOoM,OAAO0I,OAAO,GAAI/C,EAAO,CAC5BmC,SAAUnC,EAAMmC,SAAWb,KAEnC,KAAKpT,EAIL,KAAKC,EACD,OAAOkM,OAAO0I,OAAO,GAAI/C,EAAO,CAC5BmC,SAAUnC,EAAMmC,UAAYb,KAEpC,KAAKjT,EACD,OAAOgM,OAAO0I,OAAO,GAAI/C,EAAO,CAC5BmC,SAAUnC,EAAMmC,SAAWZ,KAEnC,KAAKnT,EACD,OAAOiM,OAAO0I,OAAO,GAAI/C,EAAO,CAC5BmC,SAAUnC,EAAMmC,UAAYZ,GAC5BlC,KAAMzC,EAAOyC,KACbD,OAAQxC,EAAOwC,SAEvB,KAAK9Q,EACD,OAAO+L,OAAO0I,OAAO,GAAI/C,EAAO,CAC5BmC,SAAUnC,EAAMmC,UAAYZ,KAEpC,KAAKhT,EACD,OAAO8L,OAAO0I,OAAO,GAAI/C,EAAO,CAC5BmC,SAAU,EACV9C,KAAM,GACND,OAAQ,KAEhB,KAAK5Q,EACD,OAAO6L,OAAO0I,OAAO,GAAI/C,EAAO,CAC5BmC,SAAUX,KAElB,KAAK/S,EACD,OAAO4L,OAAO0I,OAAO,GAAI/C,EAAO,CAC5BmC,SAAUnC,EAAMmC,UAAYX,GAC5BzU,OAAQ6P,EAAOnL,KAEvB,KAAK/C,EACD,OAAO2L,OAAO0I,OAAO,GAAI/C,EAAO,CAC5BmC,SAAUnC,EAAMmC,UAAYX,KAEpC,KAAK7S,EACD,OAAO0L,OAAO0I,OAAO,GAAI/C,EAAO,CAC5BmC,SAAUnC,EAAMmC,SAAWV,KAEnC,KAAK7S,EAIL,KAAKC,EACD,OAAOwL,OAAO0I,OAAO,GAAI/C,EAAO,CAC5BmC,SAAUnC,EAAMmC,UAAYV,KAEpC,QACI,OAAOzB,IAmjBfF,SA/iBG,WAAkG,IAAhFE,EAAgF4C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA1DR,GAAqBxF,EAAqCgG,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrG,OAAQlG,EAAOtL,MACX,KAAKxC,EACD,OAAOuL,OAAO0I,OAAO,GAAI/C,EAAO,CAC5BmC,SAAUnC,EAAMmC,SAAWb,KAEnC,KAAKvS,EAIL,KAAKC,EACD,OAAOqL,OAAO0I,OAAO,GAAI/C,EAAO,CAC5BmC,SAAUnC,EAAMmC,UAAYb,KAEpC,KAAK1Q,GACD,OAAOyJ,OAAO0I,OAAO,GAAI/C,EAAO,CAC5BmC,SAAUnC,EAAMmC,SAAWT,KAEnC,KAAK7Q,GAIL,KAAKC,GACD,OAAOuJ,OAAO0I,OAAO,GAAI/C,EAAO,CAC5BmC,SAAUnC,EAAMmC,UAAYT,KAEpC,KAAKxS,EACD,OAAOmL,OAAO0I,OAAO,GAAI/C,EAAO,CAC5BmC,SAAUnC,EAAMmC,SAAWZ,KAEnC,KAAKtS,EACD,OAAOoL,OAAO0I,OAAO,GAAI/C,EAAO,CAC5BmC,SAAUnC,EAAMmC,UAAYZ,GAC5BlC,KAAMzC,EAAOyC,KACbD,OAAQxC,EAAOwC,SAEvB,KAAKhQ,EACD,OAAOiL,OAAO0I,OAAO,GAAI/C,EAAO,CAC5BmC,SAAU,EACV9C,KAAM,GACND,OAAQ,KAEhB,KAAKjQ,EACD,OAAOkL,OAAO0I,OAAO,GAAI/C,EAAO,CAC5BmC,SAAUnC,EAAMmC,UAAYZ,KAEpC,KAAKlS,EACD,OAAOgL,OAAO0I,OAAO,GAAI/C,EAAO,CAC5BmC,SAAUnC,EAAMmC,SAAWX,KAEnC,KAAKlS,EACD,OAAO+K,OAAO0I,OAAO,GAAI/C,EAAO,CAC5BmC,SAAUnC,EAAMmC,UAAYX,GAC5BzU,OAAQ6P,EAAOnL,GACf4N,KAAMhF,OAAO0I,OAAO,GAAI/C,EAAMX,KAAxBhF,OAAA+I,GAAA,EAAA/I,CAAA,GACDuC,EAAOnL,GAAK,CACTA,GAAImL,EAAOnL,GACXyN,KAAMtC,EAAOsC,QAGrB3M,MAAOqK,EAAOxH,KAAK7C,OAAS,KAC5BC,OAAQoK,EAAOxH,KAAK5C,QAAU,KAC9B2E,YAAayF,EAAOxH,KAAK+B,aAAe,GACxCC,UAAWwF,EAAOxH,KAAKgC,WAAa,GACpCC,aAAcuF,EAAOxH,KAAKiC,cAAgB,GAC1CC,MAAOsF,EAAOxH,KAAKkC,OAAS,GAC5BC,OAAQqF,EAAOxH,KAAKmC,QAAU,GAC9B8K,WAAY,KACZC,kBAAmB,OAE3B,KAAKvR,GACD,OAAOsJ,OAAO0I,OAAO,GAAI/C,EAAO,CAC5BmC,SAAUnC,EAAMmC,UAAYX,KAEpC,KAAKjS,EACD,OAAO8K,OAAAC,GAAA,EAAAD,CAAA,GACA2F,EADP,CAEI5I,UAAUiD,OAAAC,GAAA,EAAAD,CAAA,GACH2F,EAAM5I,UADJiD,OAAA+I,GAAA,EAAA/I,CAAA,GAEJuC,EAAO9P,KAAK2E,GAAKmL,EAAO9P,OAE7BqK,YAAa6I,EAAM7I,YAAc6I,EAAM7I,YAAYf,OAAOwG,EAAO9P,KAAK2E,IAAM,CAACmL,EAAO9P,KAAK2E,MAEjG,KAAKjC,EACD,IAAI6T,EAAOhJ,OAAAC,GAAA,EAAAD,CAAA,GAAQuC,EAAO9P,KAAf,CAAqB2E,GAAIC,IAAQC,aAEtC2R,EAAQtD,EAAM7I,YAAYoM,QAAQ3G,EAAO9P,KAAK2E,IAAM,EACpD0F,EAAW,GAAAf,OAAAiE,OAAAM,GAAA,EAAAN,CAAO2F,EAAM7I,YAAYqM,MAAM,EAAGF,IAAlC,CAA0CD,EAAQ5R,IAAlD4I,OAAAM,GAAA,EAAAN,CAAyD2F,EAAM7I,YAAYqM,MAAMF,KAElG,OAAOjJ,OAAAC,GAAA,EAAAD,CAAA,GACA2F,EADP,CAEI5I,UAAUiD,OAAAC,GAAA,EAAAD,CAAA,GACH2F,EAAM5I,UADJiD,OAAA+I,GAAA,EAAA/I,CAAA,GAEJgJ,EAAQ5R,GAAK4R,IAElBlM,cACAG,MAAM+C,OAAAC,GAAA,EAAAD,CAAA,GACC2F,EAAM1I,MADR+C,OAAA+I,GAAA,EAAA/I,CAAA,GAEAgJ,EAAQ5R,GAFR4I,OAAAC,GAAA,EAAAD,CAAA,GAGM2F,EAAM1I,MAAMsF,EAAO9P,KAAK2E,OAGnC8F,OAAO8C,OAAAC,GAAA,EAAAD,CAAA,GACA2F,EAAMzI,OADP8C,OAAA+I,GAAA,EAAA/I,CAAA,GAEDgJ,EAAQ5R,GAFP4I,OAAAC,GAAA,EAAAD,CAAA,GAGK2F,EAAMzI,OAAOqF,EAAO9P,KAAK2E,SAK5C,KAAKhC,GACD,IAAM2E,EAASwI,EAAO9P,KAAK2E,GACvB2F,EAASiD,OAAAC,GAAA,EAAAD,CAAA,GAAQ2F,EAAM5I,kBACpBA,EAAUhD,GAEjB,IAAIkD,EAAK+C,OAAAC,GAAA,EAAAD,CAAA,GAAQ2F,EAAM1I,OACnBlD,KAAUkD,UACHA,EAAMlD,GAGjB,IAAImD,EAAM8C,OAAAC,GAAA,EAAAD,CAAA,GAAQ2F,EAAMzI,QACpBnD,KAAUmD,UACHA,EAAOnD,GAGlB,IAAIiO,EAAarC,EAAMqC,aAAejO,EAAS,KAAO4L,EAAMqC,WAEtDlL,EAAc6I,EAAM7I,YAAYpC,OAAO,SAAAtD,GAAE,OAAIA,IAAO2C,IAEtDiD,EAAe2I,EAAM3I,aAKzB,OAJ2B,IAAvBF,EAAY0L,SACZxL,EAAe,IAGZgD,OAAAC,GAAA,EAAAD,CAAA,GACA2F,EADP,CAEI5I,YACAD,cACAE,eACAC,QACAC,SACA8K,eAGR,KAAK3S,GACD,IAAM0E,EAASwI,EAAO9P,KAAK2E,GACvB3E,EAAIuN,OAAAC,GAAA,EAAAD,CAAA,GAAQ2F,EAAM5I,UAAUhD,IAGhC,OAFAtH,EAAKgG,MAAQ8J,EAAO9J,MAEbuH,OAAAC,GAAA,EAAAD,CAAA,GACA2F,EADP,CAEI5I,UAAUiD,OAAAC,GAAA,EAAAD,CAAA,GACH2F,EAAM5I,UADJiD,OAAA+I,GAAA,EAAA/I,CAAA,GAEJjG,EAAStH,MAItB,KAAK6C,GACD,IAAI4S,EAAYlI,OAAAC,GAAA,EAAAD,CAAA,GAAQ2F,EAAMuC,cACxB9Q,EAAKC,IAAQC,WACb8R,EAAuC,CACzChS,KACAH,KAAM,OACNgC,EAAG,EACHC,EAAG,EACHhB,MAAO,GACPC,OAAQ,GACRkB,MAAO,EACPE,MAAO2O,EAAa3O,MACpBE,MAAOyO,EAAazO,MACpB7G,WAAYsV,EAAatV,WACzBC,YAAaqV,EAAarV,YAC1BgH,SAAUqO,EAAarO,UAG3B,OAAOmG,OAAAC,GAAA,EAAAD,CAAA,GACA2F,EADP,CAEI3I,aAAagD,OAAAC,GAAA,EAAAD,CAAA,GACN2F,EAAM3I,aADDgD,OAAA+I,GAAA,EAAA/I,CAAA,GAEP5I,EAAKgS,MAIlB,KAAK7T,GACD,IAAM6B,EAAKC,IAAQC,WACb+R,EAAyC,CAC3CjS,KACAH,KAAM,QACNgC,EAAG,EACHC,EAAG,EACHhB,MAAO,GACPC,OAAQ,GACRkB,MAAO,GAGX,OAAO2G,OAAAC,GAAA,EAAAD,CAAA,GACA2F,EADP,CAEI3I,aAAagD,OAAAC,GAAA,EAAAD,CAAA,GACN2F,EAAM3I,aADDgD,OAAA+I,GAAA,EAAA/I,CAAA,GAEP5I,EAAKiS,MAIlB,KAAK7T,GACD,IAAMwE,EAAgB2L,EAAMsC,kBAC5B,QAAsBQ,IAAlBzO,GAAiD,OAAlBA,EAAwB,CACvD,IAAIgD,EAAYgD,OAAAC,GAAA,EAAAD,CAAA,GAAQ2F,EAAM3I,cAC1BhD,KAAiBgD,UACVA,EAAahD,GAGxB,IAAIiD,EAAK+C,OAAAC,GAAA,EAAAD,CAAA,GAAQ2F,EAAM1I,OACvB,IAAK,IAAMlD,KAAUkD,EACjB,GAAIjD,KAAiBiD,EAAMlD,GAAS,CAChC,IAAIuP,EAAgBtJ,OAAAC,GAAA,EAAAD,CAAA,GAAQ/C,EAAMlD,WAC3BuP,EAAiBtP,GACxBiD,EAAMlD,GAAUuP,EAIxB,IAAIpM,EAAM8C,OAAAC,GAAA,EAAAD,CAAA,GAAQ2F,EAAMzI,QACxB,IAAK,IAAMnD,KAAUmD,EACjB,GAAIlD,KAAiBkD,EAAOnD,GAAS,CACjC,IAAIwP,EAAiBvJ,OAAAC,GAAA,EAAAD,CAAA,GAAQ9C,EAAOnD,WAC7BwP,EAAkBvP,GACzBkD,EAAOnD,GAAUwP,EAIzB,OAAOvJ,OAAAC,GAAA,EAAAD,CAAA,GACA2F,EADP,CAEI3I,eACAC,QACAC,SACA+K,kBAAmB,OAG3B,OAAOtC,EAEX,KAAKlQ,GACD,OAAOuK,OAAAC,GAAA,EAAAD,CAAA,GACA2F,EADP,CAEIzN,MAAOqK,EAAOrK,QAGtB,KAAKxC,GACD,OAAOsK,OAAAC,GAAA,EAAAD,CAAA,GACA2F,EADP,CAEIxN,OAAQoK,EAAOpK,SAGvB,KAAKxC,GACD,IAAMqD,EAAWgH,OAAAC,GAAA,EAAAD,CAAA,GACV2F,EAAM3I,aAAauF,EAAOvJ,YAAY5B,IAD5B,CAEb6B,EAAGsJ,EAAOtJ,EACVC,EAAGqJ,EAAOrJ,IAGd,OAAO8G,OAAAC,GAAA,EAAAD,CAAA,GACA2F,EADP,CAEI3I,aAAagD,OAAAC,GAAA,EAAAD,CAAA,GACN2F,EAAM3I,aADDgD,OAAA+I,GAAA,EAAA/I,CAAA,GAEPuC,EAAOvJ,YAAY5B,GAAK4B,MAIrC,KAAKpD,GACD,IAAMoD,EAAWgH,OAAAC,GAAA,EAAAD,CAAA,GACV2F,EAAM3I,aAAauF,EAAOvJ,YAAY5B,IAD5B,CAEbc,MAAOqK,EAAOrK,MACdC,OAAQoK,EAAOpK,SAGnB,OAAO6H,OAAAC,GAAA,EAAAD,CAAA,GACA2F,EADP,CAEI3I,aAAagD,OAAAC,GAAA,EAAAD,CAAA,GACN2F,EAAM3I,aADDgD,OAAA+I,GAAA,EAAA/I,CAAA,GAEPuC,EAAOvJ,YAAY5B,GAAK4B,MAIrC,KAAKnD,GACD,IAAMmD,EAAWgH,OAAAC,GAAA,EAAAD,CAAA,GACV2F,EAAM3I,aAAauF,EAAOvJ,YAAY5B,IAD5B,CAEbiC,MAAOkJ,EAAOlJ,QAGlB,OAAO2G,OAAAC,GAAA,EAAAD,CAAA,GACA2F,EADP,CAEI3I,aAAagD,OAAAC,GAAA,EAAAD,CAAA,GACN2F,EAAM3I,aADDgD,OAAA+I,GAAA,EAAA/I,CAAA,GAEPuC,EAAOvJ,YAAY5B,GAAK4B,MAIrC,KAAKlD,GACD,IAAIoS,EAAYlI,OAAAC,GAAA,EAAAD,CAAA,GACT2F,EAAMuC,aADG,CAEZ3O,MAAOgJ,EAAOhJ,QAGlB,GAAIoM,EAAMsC,kBAAmB,CACzB,IAAMmB,EAAepJ,OAAAC,GAAA,EAAAD,CAAA,GACd2F,EAAM3I,aAAa2I,EAAMsC,mBADX,CAEjB1O,MAAOgJ,EAAOhJ,QAGlB,OAAOyG,OAAAC,GAAA,EAAAD,CAAA,GACA2F,EADP,CAEI3I,aAAagD,OAAAC,GAAA,EAAAD,CAAA,GACN2F,EAAM3I,aADDgD,OAAA+I,GAAA,EAAA/I,CAAA,GAEP2F,EAAMsC,kBAAoBmB,IAE/BlB,iBAGJ,OAAOlI,OAAAC,GAAA,EAAAD,CAAA,GACA2F,EADP,CAEIuC,iBAIZ,KAAKnS,GACD,IAAImS,EAAYlI,OAAAC,GAAA,EAAAD,CAAA,GACT2F,EAAMuC,aADG,CAEZzO,MAAO8I,EAAO9I,QAGlB,GAAIkM,EAAMsC,kBAAmB,CACzB,IAAMmB,EAAepJ,OAAAC,GAAA,EAAAD,CAAA,GACd2F,EAAM3I,aAAa2I,EAAMsC,mBADX,CAEjBxO,MAAO8I,EAAO9I,QAGlB,OAAOuG,OAAAC,GAAA,EAAAD,CAAA,GACA2F,EADP,CAEI3I,aAAagD,OAAAC,GAAA,EAAAD,CAAA,GACN2F,EAAM3I,aADDgD,OAAA+I,GAAA,EAAA/I,CAAA,GAEP2F,EAAMsC,kBAAoBmB,IAE/BlB,iBAGJ,OAAOlI,OAAAC,GAAA,EAAAD,CAAA,GACA2F,EADP,CAEIuC,iBAIZ,KAAKlS,GACD,IAAIkS,EAAYlI,OAAAC,GAAA,EAAAD,CAAA,GACT2F,EAAMuC,aADG,CAEZzO,MAAO8I,EAAO3P,aAGlB,GAAI+S,EAAMsC,kBAAmB,CACzB,IAAMmB,EAAepJ,OAAAC,GAAA,EAAAD,CAAA,GACd2F,EAAM3I,aAAa2I,EAAMsC,mBADX,CAEjBrV,WAAY2P,EAAO3P,aAGvB,OAAOoN,OAAAC,GAAA,EAAAD,CAAA,GACA2F,EADP,CAEI3I,aAAagD,OAAAC,GAAA,EAAAD,CAAA,GACN2F,EAAM3I,aADDgD,OAAA+I,GAAA,EAAA/I,CAAA,GAEP2F,EAAMsC,kBAAoBmB,IAE/BlB,iBAGJ,OAAOlI,OAAAC,GAAA,EAAAD,CAAA,GACA2F,EADP,CAEIuC,iBAIZ,KAAKjS,GACD,IAAIiS,EAAYlI,OAAAC,GAAA,EAAAD,CAAA,GACT2F,EAAMuC,aADG,CAEZzO,MAAO8I,EAAO1P,cAGlB,GAAI8S,EAAMsC,kBAAmB,CACzB,IAAMmB,EAAepJ,OAAAC,GAAA,EAAAD,CAAA,GACd2F,EAAM3I,aAAa2I,EAAMsC,mBADX,CAEjBpV,YAAa0P,EAAO1P,cAGxB,OAAOmN,OAAAC,GAAA,EAAAD,CAAA,GACA2F,EADP,CAEI3I,aAAagD,OAAAC,GAAA,EAAAD,CAAA,GACN2F,EAAM3I,aADDgD,OAAA+I,GAAA,EAAA/I,CAAA,GAEP2F,EAAMsC,kBAAoBmB,IAE/BlB,iBAGJ,OAAOlI,OAAAC,GAAA,EAAAD,CAAA,GACA2F,EADP,CAEIuC,iBAIZ,KAAKhS,GACD,IAAIgS,EAAYlI,OAAAC,GAAA,EAAAD,CAAA,GACT2F,EAAMuC,aADG,CAEZtV,WAAY2P,EAAO3P,WACnBC,YAAa0P,EAAO1P,cAGxB,GAAI8S,EAAMsC,kBAAmB,CACzB,IAAMmB,EAAepJ,OAAAC,GAAA,EAAAD,CAAA,GACd2F,EAAM3I,aAAa2I,EAAMsC,mBADX,CAEjBrV,WAAY2P,EAAO3P,WACnBC,YAAa0P,EAAO1P,cAGxB,OAAOmN,OAAAC,GAAA,EAAAD,CAAA,GACA2F,EADP,CAEI3I,aAAagD,OAAAC,GAAA,EAAAD,CAAA,GACN2F,EAAM3I,aADDgD,OAAA+I,GAAA,EAAA/I,CAAA,GAEP2F,EAAMsC,kBAAoBmB,IAE/BlB,iBAGJ,OAAOlI,OAAAC,GAAA,EAAAD,CAAA,GACA2F,EADP,CAEIuC,iBAIZ,KAAK/R,GACD,IAAI+R,EAAYlI,OAAAC,GAAA,EAAAD,CAAA,GACT2F,EAAMuC,aADG,CAEZrO,SAAU0I,EAAO1I,WAGrB,GAAI8L,EAAMsC,kBAAmB,CACzB,IAAMmB,GAAepJ,OAAAC,GAAA,EAAAD,CAAA,GACd2F,EAAM3I,aAAa2I,EAAMsC,mBADX,CAEjBpO,SAAU0I,EAAO1I,WAGrB,OAAOmG,OAAAC,GAAA,EAAAD,CAAA,GACA2F,EADP,CAEI3I,aAAagD,OAAAC,GAAA,EAAAD,CAAA,GACN2F,EAAM3I,aADDgD,OAAA+I,GAAA,EAAA/I,CAAA,GAEP2F,EAAMsC,kBAAoBmB,KAE/BlB,iBAGJ,OAAOlI,OAAAC,GAAA,EAAAD,CAAA,GACA2F,EADP,CAEIuC,iBAIZ,KAAK9R,GACD,IAAIoT,GAAqD,GAMzD,OALI7D,EAAM1I,OAASsF,EAAOxI,UAAU4L,EAAM1I,QACtCuM,GAAkBxJ,OAAAC,GAAA,EAAAD,CAAA,GAAQ2F,EAAM1I,MAAMsF,EAAOxI,UAEjDyP,GAAmBjH,EAAOvI,eAAiBuI,EAAOtI,SAE3C+F,OAAAC,GAAA,EAAAD,CAAA,GACA2F,EADP,CAEI1I,MAAM+C,OAAAC,GAAA,EAAAD,CAAA,GACC2F,EAAM1I,MADR+C,OAAA+I,GAAA,EAAA/I,CAAA,GAEAuC,EAAOxI,OAASyP,OAI7B,KAAKnT,GACD,IAAImT,GAAsD,GAM1D,OALI7D,EAAMzI,QAAUqF,EAAOxI,UAAU4L,EAAMzI,SACvCsM,GAAkBxJ,OAAAC,GAAA,EAAAD,CAAA,GAAQ2F,EAAMzI,OAAOqF,EAAOxI,UAElDyP,GAAmBjH,EAAOvI,eAAiBuI,EAAOpI,UAE3C6F,OAAAC,GAAA,EAAAD,CAAA,GACA2F,EADP,CAEIzI,OAAO8C,OAAAC,GAAA,EAAAD,CAAA,GACA2F,EAAMzI,OADP8C,OAAA+I,GAAA,EAAA/I,CAAA,GAEDuC,EAAOxI,OAASyP,OAI7B,KAAKlT,GACD,IAAI4R,GAAYlI,OAAAC,GAAA,EAAAD,CAAA,GAAQ2F,EAAMuC,cAC1BC,GAAkC,OAAlB5F,EAAOxI,OAAkBhH,EAAa0W,QAAU9D,EAAMwC,cAC1E,GAA6B,OAAzB5F,EAAOvI,cAAwB,CAC/B,IAAMhB,GAAc2M,EAAM3I,aAAauF,EAAOvI,eACrB,SAArBhB,GAAY/B,MACZiR,GAAa3O,MAAQP,GAAYO,MACjC2O,GAAazO,MAAQT,GAAYS,MACjCyO,GAAatV,WAAaoG,GAAYpG,WACtCsV,GAAarV,YAAcmG,GAAYnG,YACvCqV,GAAarO,SAAWb,GAAYa,SAEpCsO,GAAgBpV,EAAa2W,MAE7BvB,GAAgBpV,EAAa4W,MAIrC,OAAO3J,OAAAC,GAAA,EAAAD,CAAA,GACA2F,EADP,CAEIqC,WAAYzF,EAAOxI,OACnBkO,kBAAmB1F,EAAOvI,cAC1BkO,gBACAC,mBAIR,KAAKxR,GACD,OAAOqJ,OAAAC,GAAA,EAAAD,CAAA,GACA2F,EADP,CAEIwC,cAAe5F,EAAOjI,eAG9B,KAAK1D,GACD,OAAOoJ,OAAAC,GAAA,EAAAD,CAAA,GACA2F,EADP,CAEInL,KAAM+H,EAAO/H,OAGrB,QACI,OAAOmL,IA+BfzI,OA3BG,WAA4F,IAA5EyI,EAA4E4C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAxDH,GAAmB7F,EAAqCgG,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/F,OAAQlG,EAAOtL,MACX,KAAKJ,GACD,OAAOmJ,OAAO0I,OAAO,GAAI/C,EAAO,CAC5BjL,OAAQ6H,EAAO7H,OACfoN,SAAUnC,EAAMmC,SAAWZ,KAEnC,KAAKpQ,GACD,OAAOkJ,OAAO0I,OAAO,GAAI/C,EAAO,CAC5BmC,SAAUnC,EAAMmC,UAAYZ,GAC5BhK,OAAQqF,EAAOrF,SAEvB,KAAKnG,GACD,OAAOiJ,OAAO0I,OAAO,GAAI/C,EAAO,CAC5BmC,SAAUnC,EAAMmC,UAAYZ,KAEpC,QACI,OAAOvB,UCr3BPiE,kFCDSC,yLAEb,OACIC,EAAA9H,EAAAlE,cAAA,WACIgM,EAAA9H,EAAAlE,cAAA,mBACAgM,EAAA9H,EAAAlE,cAAA,sUAIiBgM,EAAA9H,EAAAlE,cAAA,KAAGG,KAAK,yBAAR,kBAJjB,KAMA6L,EAAA9H,EAAAlE,cAAA,qBARJ,0FAUIgM,EAAA9H,EAAAlE,cAAA,UACIgM,EAAA9H,EAAAlE,cAAA,UACIgM,EAAA9H,EAAAlE,cAAA,KAAGG,KAAK,wBAAR,SADJ,qCAGA6L,EAAA9H,EAAAlE,cAAA,UACIgM,EAAA9H,EAAAlE,cAAA,KAAGG,KAAK,6BAAR,iBAEJ6L,EAAA9H,EAAAlE,cAAA,UACIgM,EAAA9H,EAAAlE,cAAA,KAAGG,KAAK,uCAAR,eAEJ6L,EAAA9H,EAAAlE,cAAA,UACIgM,EAAA9H,EAAAlE,cAAA,KAAGG,KAAK,sBAAR,YAGR6L,EAAA9H,EAAAlE,cAAA,uCA3BuBiM,qFCgCjCC,eAkBF,SAAAA,EAAYC,GAAc,IAAAC,EAAA,OAAAlK,OAAAmK,GAAA,EAAAnK,CAAAoK,KAAAJ,IACtBE,EAAAlK,OAAAqK,GAAA,EAAArK,CAAAoK,KAAApK,OAAAsK,GAAA,EAAAtK,CAAAgK,GAAAvH,KAAA2H,KAAMH,KAlBVM,YAiB0B,EAAAL,EAhB1BM,UAgB0B,EAAAN,EAf1BO,eAe0B,EAAAP,EAd1BQ,eAc0B,EAAAR,EAb1BS,UAa0B,EAAAT,EAZ1BU,UAY0B,EAAAV,EAX1BW,YAW0B,EAAAX,EAV1BY,YAU0B,EAAAZ,EAT1Ba,eAS0B,EAAAb,EAR1Bc,eAQ0B,EAAAd,EAP1Be,mBAO0B,EAAAf,EAN1BgB,mBAM0B,EAAAhB,EAL1BiB,aAK0B,EAAAjB,EAJ1BkB,aAI0B,EAAAlB,EAH1BmB,mBAG0B,EAAAnB,EAF1BoB,kBAE0B,EAAApB,EAwC1BqB,UAAY,SAACtS,EAAWC,EAAW8I,GAC/B,IAAMwJ,EAAOC,KAAKC,IAAI1J,GAChB2J,EAAOF,KAAKG,IAAI5J,GAItB,MAAO,CAAE6J,GAHEF,EAAO1S,EAAIuS,EAAOtS,EAGhB4S,GAFFN,EAAOvS,EAAI0S,EAAOzS,IA5CPgR,EAiD1B6B,uBAAyB,SAACrO,GACtBA,EAAMsO,kBACNtO,EAAMuO,kBAnDgB/B,EAwD1BgC,gBAAkB,SAACxO,GACfwM,EAAKiC,gBAAgBzO,GAErBG,SAASJ,iBAAiB,YAAayM,EAAKkC,iBAC5CvO,SAASJ,iBAAiB,UAAWyM,EAAKmC,eAC1C3O,EAAMsO,mBA7DgB9B,EAgE1BoC,iBAAmB,SAAC5O,GAChBwM,EAAKiC,gBAAgBzO,EAAM6O,eAAe,IAE1C1O,SAASJ,iBAAiB,YAAayM,EAAKsC,gBAAiB,CAAEC,SAAS,IACxE5O,SAASJ,iBAAiB,WAAYyM,EAAKwC,eAAgB,CAAED,SAAS,IACtE/O,EAAMsO,mBArEgB9B,EAwE1BiC,gBAAkB,SAACQ,GACW,OAAtBzC,EAAKM,KAAKoC,UACd1C,EAAKS,KAAOgC,EAAGE,QAAU3C,EAAKM,KAAKoC,QAAQE,WAC3C5C,EAAKU,KAAO+B,EAAGI,QAAU7C,EAAKM,KAAKoC,QAAQI,YA3ErB9C,EA8E1BmC,cAAgB,SAAC3O,GACbwM,EAAK+C,eAAevP,GAEpBG,SAASqP,oBAAoB,YAAahD,EAAKkC,iBAC/CvO,SAASqP,oBAAoB,UAAWhD,EAAKmC,gBAlFvBnC,EAqF1BwC,eAAiB,SAAChP,GACdwM,EAAK+C,eAAevP,GAEpBG,SAASqP,oBAAoB,YAAahD,EAAKsC,iBAC/C3O,SAASqP,oBAAoB,WAAYhD,EAAKwC,iBAzFxBxC,EA4F1B+C,eAAiB,SAACvP,GACY,OAAtBwM,EAAKM,KAAKoC,UACV1C,EAAKK,SACLL,EAAKD,MAAMkD,OAAOjD,EAAKM,KAAKoC,QAAQE,WAAY5C,EAAKM,KAAKoC,QAAQI,WAClE9C,EAAKK,QAAS,GAElB7M,EAAMuO,mBAlGgB/B,EAqG1BkC,gBAAkB,SAAC1O,GACfwM,EAAKkD,eAAe1P,GACpBA,EAAMuO,kBAvGgB/B,EA0G1BsC,gBAAkB,SAAC9O,GACfwM,EAAKkD,eAAe1P,EAAM6O,eAAe,IACzC7O,EAAMuO,kBA5GgB/B,EA+G1BkD,eAAiB,SAACT,GACd,GAA0B,OAAtBzC,EAAKM,KAAKoC,QAAd,CACA1C,EAAKK,QAAS,EAEd,IAAMtR,EAAI0T,EAAGE,QAAU3C,EAAKS,KACtBzR,EAAIyT,EAAGI,QAAU7C,EAAKU,KAC5BV,EAAKM,KAAKoC,QAAQ7O,MAAMsP,KAAOpU,EAAI,KACnCiR,EAAKM,KAAKoC,QAAQ7O,MAAMuP,IAAMpU,EAAI,OAtHZgR,EA2H1BqD,sBAAwB,SAAC7P,GACrBwM,EAAKsD,kBAAkB9P,GAEvBG,SAASJ,iBAAiB,YAAayM,EAAKuD,uBAC5C5P,SAASJ,iBAAiB,UAAWyM,EAAKwD,qBAC1ChQ,EAAMsO,kBACNtO,EAAMuO,kBAjIgB/B,EAoI1ByD,uBAAyB,SAACjQ,GACtBwM,EAAKsD,kBAAkB9P,EAAM6O,eAAe,IAE5C1O,SAASJ,iBAAiB,YAAayM,EAAK0D,sBAAuB,CAAEnB,SAAS,IAC9E5O,SAASJ,iBAAiB,WAAYyM,EAAK2D,qBAAsB,CAAEpB,SAAS,IAC5E/O,EAAMsO,mBAzIgB9B,EA4I1BsD,kBAAoB,SAACb,GACjB,GAA0B,OAAtBzC,EAAKM,KAAKoC,QAAd,CACA1C,EAAKa,UAAYb,EAAKM,KAAKoC,QAAQkB,YACnC5D,EAAKc,UAAYd,EAAKM,KAAKoC,QAAQmB,aAEnC,IAAMC,EAAK9D,EAAKM,KAAKoC,QAAQkB,YAAc,EACrCG,EAAK/D,EAAKM,KAAKoC,QAAQmB,aAAe,EANkBG,EAO3ChE,EAAKqB,WAAWyC,GAAKC,EAAI/D,EAAKoB,cAAzCO,EAPsDqC,EAOtDrC,GAAIC,EAPkDoC,EAOlDpC,GAEZ5B,EAAKe,cAAgBf,EAAKM,KAAKoC,QAAQE,WAAakB,EAAKnC,EACzD3B,EAAKgB,cAAgBhB,EAAKM,KAAKoC,QAAQI,UAAYiB,EAAKnC,EAExD5B,EAAKW,OAAS8B,EAAGE,QACjB3C,EAAKY,OAAS6B,EAAGI,UAzJK7C,EA4J1BwD,oBAAsB,SAAChQ,GACnBwM,EAAKiE,qBAAqBzQ,GAE1BG,SAASqP,oBAAoB,YAAahD,EAAKuD,uBAC/C5P,SAASqP,oBAAoB,UAAWhD,EAAKwD,sBAhKvBxD,EAmK1B2D,qBAAuB,SAACnQ,GACpBwM,EAAKiE,qBAAqBzQ,GAE1BG,SAASqP,oBAAoB,YAAahD,EAAK0D,uBAC/C/P,SAASqP,oBAAoB,WAAYhD,EAAK2D,uBAvKxB3D,EA0K1BiE,qBAAuB,SAACzQ,GACpB,GAA0B,OAAtBwM,EAAKM,KAAKoC,QAAd,CACA,GAAI1C,EAAKK,OAAQ,KAAA6D,EACgDlE,EAAKM,KAAKoC,QAA/DE,EADKsB,EACLtB,WAAYE,EADPoB,EACOpB,UAAWc,EADlBM,EACkBN,YAAaC,EAD/BK,EAC+BL,aAC5C7D,EAAKD,MAAMkD,OAAOL,EAAYE,GAC9B9C,EAAKD,MAAMoE,SAASP,EAAaC,GACjC7D,EAAKK,QAAS,EAElB7M,EAAMuO,mBAlLgB/B,EAqL1BuD,sBAAwB,SAAC/P,GACrBwM,EAAKoE,iBAAiB5Q,GACtBA,EAAMuO,kBAvLgB/B,EA0L1B0D,sBAAwB,SAAClQ,GACrBwM,EAAKoE,iBAAiB5Q,EAAM6O,eAAe,IAC3C7O,EAAMuO,kBA5LgB/B,EA+L1BoE,iBAAmB,SAAC3B,GAChB,GAA0B,OAAtBzC,EAAKM,KAAKoC,QAAd,CACA1C,EAAKK,QAAS,EAEd,IAAMgE,EAAK5B,EAAGE,QAAU3C,EAAKW,OACvB2D,EAAK7B,EAAGI,QAAU7C,EAAKY,OALgC2D,EAO1CvE,EAAKqB,UAAUgD,EAAIC,GAAKtE,EAAKoB,cAAxCO,EAPqD4C,EAOrD5C,GAAIC,EAPiD2C,EAOjD3C,GAEN4C,EAAIxE,EAAKa,UAAYc,EACrB8C,EAAIzE,EAAKc,UAAYc,EAC3B5B,EAAKM,KAAKoC,QAAQ7O,MAAM7F,MAAQwW,EAAI,KACpCxE,EAAKM,KAAKoC,QAAQ7O,MAAM5F,OAASwW,EAAI,KAErC,IAAMC,EAAW1E,EAAKqB,UAAUmD,EAAI,EAAGC,EAAI,EAAGzE,EAAKoB,cAC7CuD,EAAK3E,EAAKe,cAAgB2D,EAAS/C,GACnCiD,EAAK5E,EAAKgB,cAAgB0D,EAAS9C,GAEzC5B,EAAKM,KAAKoC,QAAQ7O,MAAMsP,KAAOwB,EAAKH,EAAI,EAAI,KAC5CxE,EAAKM,KAAKoC,QAAQ7O,MAAMuP,IAAMwB,EAAKH,EAAI,EAAI,OAlNrBzE,EAuN1B6E,sBAAwB,SAACrR,GACrBwM,EAAK8E,kBAAkBtR,GAEvBG,SAASJ,iBAAiB,YAAayM,EAAK+E,uBAC5CpR,SAASJ,iBAAiB,UAAWyM,EAAKgF,qBAC1CxR,EAAMsO,kBACNtO,EAAMuO,kBA7NgB/B,EAgO1BiF,uBAAyB,SAACzR,GACtBwM,EAAK8E,kBAAkBtR,EAAM6O,eAAe,IAE5C1O,SAASJ,iBAAiB,YAAayM,EAAKkF,sBAAuB,CAAE3C,SAAS,IAC9E5O,SAASJ,iBAAiB,WAAYyM,EAAKmF,qBAAsB,CAAE5C,SAAS,IAC5E/O,EAAMsO,mBArOgB9B,EAwO1B8E,kBAAoB,SAACrC,GACjB,GAA0B,OAAtBzC,EAAKM,KAAKoC,QAAd,CACA,IAAM0C,EAAOpF,EAAKM,KAAKoC,QAAQ2C,wBAC/BrF,EAAKiB,QAAUmE,EAAKjC,KAAOnD,EAAKM,KAAKoC,QAAQkB,YAAc,EAC3D5D,EAAKkB,QAAUkE,EAAKhC,IAAMpD,EAAKM,KAAKoC,QAAQmB,aAAe,EAE3D7D,EAAKmB,cAAgBI,KAAK+D,MAAMtF,EAAKiB,QAAUwB,EAAGE,QAAS3C,EAAKkB,QAAUuB,EAAGI,SAAW7C,EAAKoB,eA9OvEpB,EAiP1BgF,oBAAsB,SAACxR,GACnBwM,EAAKuF,qBAAqB/R,GAE1BG,SAASqP,oBAAoB,YAAahD,EAAK+E,uBAC/CpR,SAASqP,oBAAoB,UAAWhD,EAAKgF,sBArPvBhF,EAwP1BmF,qBAAuB,SAAC3R,GACpBwM,EAAKuF,qBAAqB/R,GAE1BG,SAASqP,oBAAoB,YAAahD,EAAKkF,uBAC/CvR,SAASqP,oBAAoB,WAAYhD,EAAKmF,uBA5PxBnF,EA+P1BuF,qBAAuB,SAAC/R,GAChBwM,EAAKK,SACLL,EAAKD,MAAMyF,SAASxF,EAAKoB,cACzBpB,EAAKK,QAAS,GAElB7M,EAAMuO,kBApQgB/B,EAuQ1B+E,sBAAwB,SAACvR,GACrBwM,EAAKyF,iBAAiBjS,GACtBA,EAAMuO,kBAzQgB/B,EA4Q1BkF,sBAAwB,SAAC1R,GACrBwM,EAAKyF,iBAAiBjS,EAAM6O,eAAe,IAC3C7O,EAAMuO,kBA9QgB/B,EAiR1ByF,iBAAmB,SAAChD,GAChB,GAA0B,OAAtBzC,EAAKM,KAAKoC,QAAd,CACA1C,EAAKK,QAAS,EAEd,IAAMlR,EAAQoS,KAAK+D,MAAMtF,EAAKiB,QAAUwB,EAAGE,QAAS3C,EAAKkB,QAAUuB,EAAGI,SACtE7C,EAAKoB,aAAepB,EAAKmB,cAAgBhS,EAEzC6Q,EAAKM,KAAKoC,QAAQ7O,MAAM6R,UAAxB,UAAA7T,OAA8CmO,EAAKoB,aAAnD,UAtRApB,EAAKM,KAAOqF,IAAMC,YAClB5F,EAAKO,UAAYoF,IAAMC,YACvB5F,EAAKQ,UAAYmF,IAAMC,YACvB5F,EAAKoB,aAAerB,EAAM5Q,MAC1B6Q,EAAKK,QAAS,EACdL,EAAKS,KAAO,EACZT,EAAKU,KAAO,EACZV,EAAKW,OAAS,EACdX,EAAKY,OAAS,EACdZ,EAAKa,UAAY,EACjBb,EAAKc,UAAY,EACjBd,EAAKe,cAAgB,EACrBf,EAAKgB,cAAgB,EACrBhB,EAAKiB,QAAU,EACfjB,EAAKkB,QAAU,EACflB,EAAKmB,cAAgB,EAjBCnB,qFAqBI,OAAtBE,KAAKI,KAAKoC,SACiB,OAA3BxC,KAAKK,UAAUmC,SACY,OAA3BxC,KAAKM,UAAUkC,UAEnBxC,KAAKI,KAAKoC,QAAQnP,iBAAiB,YAAa2M,KAAK2B,wBACrD3B,KAAKI,KAAKoC,QAAQnP,iBAAiB,YAAa2M,KAAK8B,iBACrD9B,KAAKI,KAAKoC,QAAQnP,iBAAiB,aAAc2M,KAAKkC,kBACtDlC,KAAKK,UAAUmC,QAAQnP,iBAAiB,YAAa2M,KAAKmD,uBAC1DnD,KAAKK,UAAUmC,QAAQnP,iBAAiB,aAAc2M,KAAKuD,wBAC3DvD,KAAKM,UAAUkC,QAAQnP,iBAAiB,YAAa2M,KAAK2E,uBAC1D3E,KAAKM,UAAUkC,QAAQnP,iBAAiB,aAAc2M,KAAK+E,sEAIjC,OAAtB/E,KAAKI,KAAKoC,UAEdxC,KAAKkB,aAAelB,KAAKH,MAAM5Q,wCAwP1B,IAAA0W,EAC2E3F,KAAKH,MAA7EhR,EADH8W,EACG9W,EAAGC,EADN6W,EACM7W,EAAGhB,EADT6X,EACS7X,MAAOC,EADhB4X,EACgB5X,OAAQkB,EADxB0W,EACwB1W,MAAO2W,EAD/BD,EAC+BC,SAAUC,EADzCF,EACyCE,SAAUC,EADnDH,EACmDG,oBAExD,OACIpG,EAAA9H,EAAAlE,cAAA,OACIqS,IAAK/F,KAAKI,KACV4F,UAAS,GAAArU,OAAKgC,KAAMsS,gBAAX,KAAAtU,OACLmU,EAAsBnS,KAAMuS,iCAAmC,GAD1D,KAAAvU,OAELkU,EAAWlS,KAAMwS,sBAAwB,IAC7CxS,MAAO,CACHyS,SAAU,WACVnD,KAAMpU,EACNqU,IAAKpU,EACLhB,MAAOA,EACPC,OAAQA,EACRsY,OAAQ,OACRb,UAAS,UAAA7T,OAAY1C,EAAZ,UAGZ2W,EACDlG,EAAA9H,EAAAlE,cAAA,OACI4S,IAAKC,KACLC,IAAI,SACJT,IAAK/F,KAAKK,UACV2F,UAAWrS,KAAM8S,WACjB9S,MAAO,CACHyS,SAAU,WACVM,MAAO,EACPC,OAAQ,EACRN,OAAM,OAAA1U,OAAS4U,KAAT,cAGd7G,EAAA9H,EAAAlE,cAAA,OACI4S,IAAKM,KACLJ,IAAI,SACJT,IAAK/F,KAAKM,UACV0F,UAAWrS,KAAM8S,WACjB9S,MAAO,CACHyS,SAAU,WACVnD,KAAM,EACN0D,OAAQ,EACRN,OAAM,OAAA1U,OAASiV,KAAT,sBAxVAnB,IAAM9F,WAwWrBkH,eARS,SAACtL,EAAcsE,GACnC,MAAO,CACHgG,SACIhG,EAAMlQ,SAAW4L,EAAMF,SAASuC,YAAciC,EAAMjQ,gBAAkB2L,EAAMF,SAASwC,kBACzFiI,oBAAqBjG,EAAMjQ,gBAAkB2L,EAAMF,SAASwC,oBAIrDgJ,CAAqEjH,yBC3W9EkH,eAIF,SAAAA,EAAYjH,GAAc,IAAAC,EAAA,OAAAlK,OAAAmK,GAAA,EAAAnK,CAAAoK,KAAA8G,IACtBhH,EAAAlK,OAAAqK,GAAA,EAAArK,CAAAoK,KAAApK,OAAAsK,GAAA,EAAAtK,CAAAkR,GAAAzO,KAAA2H,KAAMH,KAJVkH,cAG0B,EAAAjH,EAF1BkH,cAE0B,EAAAlH,EAgB1BmH,WAAa,SAACpY,EAAWC,GAAc,IAAA6W,EACU7F,EAAKD,MAA1CqH,EAD2BvB,EAC3BuB,SAAUjI,EADiB0G,EACjB1G,iBAAkBkI,EADDxB,EACCwB,KACpCD,EAASvY,GAAiCsQ,EAAkBpQ,EAAIsY,EAAMrY,EAAIqY,KAlBpDrH,EAqB1BsH,aAAe,SAACtZ,EAAeC,GAAmB,IAAAsZ,EACDvH,EAAKD,MAA1CqH,EADsCG,EACtCH,SAAUjI,EAD4BoI,EAC5BpI,iBAAkBkI,EADUE,EACVF,KACpCD,EAASnY,GAA6BkQ,EAAkBnR,EAAQqZ,EAAMpZ,EAASoZ,KAvBzDrH,EA0B1BwH,aAAe,SAACrY,GAAkB,IAAAsY,EACSzH,EAAKD,MAApCqH,EADsBK,EACtBL,SAAUjI,EADYsI,EACZtI,iBAClBiI,EAASlY,GAA8BiQ,EAAkBhQ,KA5BnC6Q,EA+B1BgC,gBAAkB,SAACxO,GACfwM,EAAKkH,UAAW,EAChB1T,EAAMuO,kBAjCgB/B,EAoC1BoC,iBAAmB,SAAC5O,GAChBwM,EAAKkH,UAAW,EAChB1T,EAAMuO,kBAtCgB/B,EAyC1BkC,gBAAkB,SAAC1O,GACfwM,EAAKkH,UAAW,EAChB1T,EAAMuO,kBA3CgB/B,EA8C1BsC,gBAAkB,SAAC9O,GACfwM,EAAKkH,UAAW,EAChB1T,EAAMuO,kBAhDgB/B,EAmD1BmC,cAAgB,SAAC3O,GACbwM,EAAK+C,eAAevP,IApDEwM,EAuD1BwC,eAAiB,SAAChP,GACdwM,EAAK+C,eAAevP,IAxDEwM,EA2D1B+C,eAAiB,SAACvP,GAAiB,IAAAkU,EACgB1H,EAAKD,MAA5CqH,EADuBM,EACvBN,SAAUvX,EADa6X,EACb7X,OAAQsP,EADKuI,EACLvI,iBACrBa,EAAKkH,WACN1T,EAAMuO,iBACNqF,EAASlX,GAAgCL,EAAQsP,EAAiBjS,OA7DtE8S,EAAKiH,SAAWtB,IAAMC,YACtB5F,EAAKkH,UAAW,EAHMlH,qFAOjBE,KAAK+G,SAASvE,UACnBxC,KAAK+G,SAASvE,QAAQnP,iBAAiB,YAAa2M,KAAK8B,iBACzD9B,KAAK+G,SAASvE,QAAQnP,iBAAiB,aAAc2M,KAAKkC,kBAC1DlC,KAAK+G,SAASvE,QAAQnP,iBAAiB,YAAa2M,KAAKgC,iBACzDhC,KAAK+G,SAASvE,QAAQnP,iBAAiB,YAAa2M,KAAKoC,gBAAiB,CAAEC,SAAS,IACrFrC,KAAK+G,SAASvE,QAAQnP,iBAAiB,UAAW2M,KAAKiC,eACvDjC,KAAK+G,SAASvE,QAAQnP,iBAAiB,WAAY2M,KAAKsC,eAAgB,CAAED,SAAS,sCAsD9E,IAAAoF,EACwCzH,KAAKH,MAA1CZ,EADHwI,EACGxI,iBAAkByI,EADrBD,EACqBC,SAAUP,EAD/BM,EAC+BN,KAEpC,OACIzH,EAAA9H,EAAAlE,cAACiU,GAAD,CACIhY,OAAQqQ,KAAKH,MAAMlQ,OACnBC,cAAeqP,EAAiBjS,GAChC6B,EAAGoQ,EAAiBpQ,EAAIsY,EACxBrY,EAAGmQ,EAAiBnQ,EAAIqY,EACxBrZ,MAAOmR,EAAiBnR,MAAQqZ,EAChCpZ,OAAQkR,EAAiBlR,OAASoZ,EAClClY,MAAOgQ,EAAiBhQ,MACxB8T,OAAQ/C,KAAKiH,WACbhD,SAAUjE,KAAKoH,aACf9B,SAAUtF,KAAKsH,cAEf5H,EAAA9H,EAAAlE,cAAA,OACIqS,IAAK/F,KAAK+G,SACVpT,MAAO,CACH7F,MAAO,OACPC,OAAQ,SAGZ2R,EAAA9H,EAAAlE,cAAA,OACIC,MAAO,CAAEiU,QAASF,EAAStJ,OAAS,EAAI,EAAI,GAAKtQ,MAAO,OAAQC,OAAQ,QACxEuY,IAAKoB,GAAYG,KACjBrB,IAAI,cAjGHsB,iBAqHVjB,eAZS,SAACtL,EAAcsE,GAOnC,MAAO,CACH6H,SANAnM,EAAMF,SAASvI,QACfyI,EAAMF,SAASvI,OAAO+M,EAAMlQ,SAC5B4L,EAAMF,SAASvI,OAAO+M,EAAMlQ,QAAQkQ,EAAMZ,iBAAiBjS,IACrDuO,EAAMF,SAASvI,OAAO+M,EAAMlQ,QAAQkQ,EAAMZ,iBAAiBjS,IAAIoF,IAC/D,KAMCyU,CAAqEC,ICxH9EiB,eAWF,SAAAA,EAAYlI,GAAc,IAAAC,EAAA,OAAAlK,OAAAmK,GAAA,EAAAnK,CAAAoK,KAAA+H,IACtBjI,EAAAlK,OAAAqK,GAAA,EAAArK,CAAAoK,KAAApK,OAAAsK,GAAA,EAAAtK,CAAAmS,GAAA1P,KAAA2H,KAAMH,KAXVmI,aAU0B,EAAAlI,EAT1BmI,iBAS0B,EAAAnI,EAR1BoI,kBAQ0B,EAAApI,EAP1BqI,kBAO0B,EAAArI,EAN1BsI,uBAM0B,EAAAtI,EAL1BuI,wBAK0B,EAAAvI,EAJ1BwI,qBAI0B,EAAAxI,EAH1ByI,aAG0B,EAAAzI,EAF1BkH,cAE0B,EAAAlH,EAqD1BgC,gBAAkB,SAACxO,GACfwM,EAAK0I,YAAYlV,IAtDKwM,EAyD1BoC,iBAAmB,SAAC5O,GAChBwM,EAAK0I,YAAYlV,IA1DKwM,EA6D1B0I,YAAc,SAAClV,GACUwM,EAAKD,MAAlBgG,SAEJvS,EAAMsO,mBAEN9B,EAAKkH,UAAW,EAChB1T,EAAMuO,mBAnEY/B,EAuE1BkC,gBAAkB,SAAC1O,GACfwM,EAAK2I,WAAWnV,IAxEMwM,EA2E1BsC,gBAAkB,SAAC9O,GACfwM,EAAK2I,WAAWnV,IA5EMwM,EA+E1B2I,WAAa,SAACnV,GACWwM,EAAKD,MAAlBgG,SAEJvS,EAAMsO,mBAEN9B,EAAKkH,UAAW,EAChB1T,EAAMuO,mBArFY/B,EAyF1BmC,cAAgB,SAAC3O,GACbwM,EAAK+C,eAAevP,IA1FEwM,EA6F1BwC,eAAiB,SAAChP,GACdwM,EAAK+C,eAAevP,IA9FEwM,EAiG1B+C,eAAiB,SAACvP,GAAiB,IAAAqS,EACuB7F,EAAKD,MAAnDqH,EADuBvB,EACvBuB,SAAUvX,EADagW,EACbhW,OAAQC,EADK+V,EACL/V,cAC1B,GAF+B+V,EACUE,SAErCvS,EAAMsO,uBACH,IAAK9B,EAAKkH,SAAU,CAIvB,GAHA1T,EAAMuO,iBACNqF,EAASlX,GAAgCL,EAAQC,KAE5CkQ,EAAKkI,QAAQxF,QAAS,OAC3B1C,EAAKkI,QAAQxF,QAAQkG,UA1GH5I,EA8G1B6I,QAAU,WACN,GAAK7I,EAAKkI,QAAQxF,QAAlB,CADY,IAAA6E,EAG2DvH,EAAKD,MAApE+I,EAHIvB,EAGJuB,UAAWzZ,EAHPkY,EAGOlY,MAAOE,EAHdgY,EAGchY,MAAO7G,EAHrB6e,EAGqB7e,WAAYC,EAHjC4e,EAGiC5e,YAAagH,EAH9C4X,EAG8C5X,SAC1DqQ,EAAKmI,YAAcW,EACnB9I,EAAKoI,aAAe/Y,EACpB2Q,EAAKqI,aAAe9Y,EACpByQ,EAAKsI,kBAAoB5f,EACzBsX,EAAKuI,mBAAqB5f,EAC1BqX,EAAKwI,gBAAkB7Y,EAEvB,IAAMoZ,EAAQpV,SAASqV,cACvBD,EAAME,mBAAmBjJ,EAAKkI,QAAQxF,SACtCqG,EAAMG,UAAS,GACf,IAAMC,EAAYlW,OAAOmW,eACzBD,EAAUE,kBACVF,EAAUG,SAASP,KA9HG/I,EAiI1BuJ,cAAgB,SAACC,GACb,GAAKxJ,EAAKkI,QAAQxF,QAAlB,CACA,IAAI+G,EAAQzJ,EAAKkI,QAAQxF,QAAQgH,WACjCD,EAAQA,EAAME,QAAQ,QAAS,OAEjB3J,EAAKmI,cACfnI,EAAKmI,YAAcsB,EAEfzJ,EAAKyI,SACLmB,aAAa5J,EAAKyI,SAGtBzI,EAAKyI,QAAUnU,WAAW,WAAM,IAAAmT,EACgBzH,EAAKD,MAAzCqH,EADoBK,EACpBL,SAAUvX,EADU4X,EACV5X,OAAQC,EADE2X,EACF3X,cAG1BsX,EAASxX,GAAkBC,EAAQC,EAFR,CAAE2Z,YAG9BD,MAlJexJ,EAsJ1B6J,WAAa,WACT7J,EAAKuJ,cAAc,IAvJGvJ,EA0J1B8J,YAAc,WACV9J,EAAKuJ,cAAc,MAzJnBvJ,EAAKkI,QAAUvC,IAAMC,YACrB5F,EAAKmI,YAAc,GACnBnI,EAAKoI,aAAe,GACpBpI,EAAKqI,aAAe,GACpBrI,EAAKsI,kBAAoB,GACzBtI,EAAKuI,mBAAqB,GAC1BvI,EAAKwI,gBAAkBpT,GACvB4K,EAAKyI,QAAU,KACfzI,EAAKkH,UAAW,EAVMlH,qFAaN,IACR+F,EAAa7F,KAAKH,MAAlBgG,SAEH7F,KAAKgI,QAAQxF,UAElBxC,KAAKgI,QAAQxF,QAAQnP,iBAAiB,YAAa2M,KAAK8B,iBACxD9B,KAAKgI,QAAQxF,QAAQnP,iBAAiB,aAAc2M,KAAKkC,kBACzDlC,KAAKgI,QAAQxF,QAAQnP,iBAAiB,YAAa2M,KAAKgC,iBACxDhC,KAAKgI,QAAQxF,QAAQnP,iBAAiB,YAAa2M,KAAKoC,gBAAiB,CAAEC,SAAS,IACpFrC,KAAKgI,QAAQxF,QAAQnP,iBAAiB,UAAW2M,KAAKiC,eACtDjC,KAAKgI,QAAQxF,QAAQnP,iBAAiB,WAAY2M,KAAKsC,eAAgB,CAAED,SAAS,IAE9EwD,GACA7F,KAAKgI,QAAQxF,QAAQkG,uDAIPmB,GAUlB,OARIA,EAAUjB,YAAc5I,KAAKiI,aAC7B4B,EAAU1a,QAAU6Q,KAAKkI,cACzB2B,EAAUxa,QAAU2Q,KAAKmI,cACzB0B,EAAUrhB,aAAewX,KAAKoI,mBAC9ByB,EAAUphB,cAAgBuX,KAAKqI,oBAC/BwB,EAAUpa,WAAauQ,KAAKsI,iBAC5BtI,KAAKH,MAAMgG,WAAagE,EAAUhE,sDAKrB,IAAA2B,EACsDxH,KAAKH,MAApE+I,EADSpB,EACToB,UAAWzZ,EADFqY,EACErY,MAAOE,EADTmY,EACSnY,MAAO7G,EADhBgf,EACgBhf,WAAYC,EAD5B+e,EAC4B/e,YAAagH,EADzC+X,EACyC/X,SAC1DuQ,KAAKiI,YAAcW,EACnB5I,KAAKkI,aAAe/Y,EACpB6Q,KAAKmI,aAAe9Y,EACpB2Q,KAAKoI,kBAAoB5f,EACzBwX,KAAKqI,mBAAqB5f,EAC1BuX,KAAKsI,gBAAkB7Y,mCA4GlB,IAAAgY,EACuDzH,KAAKH,MAAzDxQ,EADHoY,EACGpY,MAAOF,EADVsY,EACUtY,MAAO3G,EADjBif,EACiBjf,WAAYC,EAD7Bgf,EAC6Bhf,YAAagH,EAD1CgY,EAC0ChY,SACzCqa,EAAWrhB,IAAkD,IAAnCA,EAAYqW,QAAQ,UAC9CiL,EAAaD,EACG,WAAhBrhB,EACI,IACAuhB,SAASvhB,EAAYsW,MAAM,EAAG,IAClB,YAAhBtW,EACA,IACAuhB,SAASvhB,GAEf,OACIiX,EAAA9H,EAAAlE,cAAA,OACIqS,IAAK/F,KAAKgI,QACViC,iBAAiB,EACjBtB,QAAS3I,KAAK2I,QACduB,OAAQlK,KAAK2J,WACbQ,QAASnK,KAAK4J,YACdjW,MAAO,CACH7F,MAAO,OACPC,OAAQ,OACRqc,UAAqB,SAAVjb,EAAmB,OAAmB,UAAVA,EAAoB,QAAU,SACrEE,MAAOA,EACP7G,WAAY,IAAAmJ,OAAInJ,EAAJ,OAAqB6hB,EACjCC,UAAWR,EAAW,SAAW,SACjCC,aACAta,SAAQ,GAAAkC,OAAKlC,EAAL,MACR8a,QAAS,OACTC,aAAc,aACdC,WAAY,MAEhBC,wBAAyB,CAAEC,OAAQ3K,KAAKH,MAAM+I,oBAxMhCjJ,aA4NfkH,eAdS,SAACtL,EAAcsE,GAOnC,MAAO,CACH+I,WANArN,EAAMF,SAASxI,OACf0I,EAAMF,SAASxI,MAAMgN,EAAMlQ,SAC3B4L,EAAMF,SAASxI,MAAMgN,EAAMlQ,QAAQkQ,EAAMjQ,eACnC2L,EAAMF,SAASxI,MAAMgN,EAAMlQ,QAAQkQ,EAAMjQ,eACzC,CAAE2Z,MAAO,KAEKA,MACpB1D,SACIhG,EAAMlQ,SAAW4L,EAAMF,SAASuC,YAAciC,EAAMjQ,gBAAkB2L,EAAMF,SAASwC,oBAIlFgJ,CAAqEkB,yBCzN9E6C,iNACF3D,WAAa,SAACpY,EAAWC,GAAc,IAAA6W,EACS7F,EAAKD,MAAzCqH,EAD2BvB,EAC3BuB,SAAUlI,EADiB2G,EACjB3G,gBAAiBmI,EADAxB,EACAwB,KACnCD,EAASvY,GAAiCqQ,EAAiBnQ,EAAIsY,EAAMrY,EAAIqY,OAG7EC,aAAe,SAACtZ,EAAeC,GAAmB,IAAAsZ,EACFvH,EAAKD,MAAzCqH,EADsCG,EACtCH,SAAUlI,EAD4BqI,EAC5BrI,gBAAiBmI,EADWE,EACXF,KACnCD,EAASnY,GAA6BiQ,EAAiBlR,EAAQqZ,EAAMpZ,EAASoZ,OAGlFG,aAAe,SAACrY,GAAkB,IAAAsY,EACQzH,EAAKD,MAAnCqH,EADsBK,EACtBL,SAAUlI,EADYuI,EACZvI,gBAClBkI,EAASlY,GAA8BgQ,EAAiB/P,+EAGnD,IAAAuY,EACmCxH,KAAKH,MAArCb,EADHwI,EACGxI,gBAAiBlS,EADpB0a,EACoB1a,KAAMqa,EAD1BK,EAC0BL,KAE/B,OACIzH,EAAA9H,EAAAlE,cAACiU,GAAD,CACIhY,OAAQqQ,KAAKH,MAAMlQ,OACnBC,cAAeoP,EAAgBhS,GAC/B6B,EAAGmQ,EAAgBnQ,EAAIsY,EACvBrY,EAAGkQ,EAAgBlQ,EAAIqY,EACvBrZ,MAAOkR,EAAgBlR,MAAQqZ,EAC/BpZ,OAAQiR,EAAgBjR,OAASoZ,EACjClY,MAAO+P,EAAgB/P,MACvB8T,OAAQ/C,KAAKiH,WACbhD,SAAUjE,KAAKoH,aACf9B,SAAUtF,KAAKsH,cAEL,KAATxa,GACG4S,EAAA9H,EAAAlE,cAAA,OACIC,MAAO,CACH7F,MAAO,OACPC,OAAQ,OACRqY,SAAU,QACVnD,KAAM,EACNC,IAAK,EACL2H,QAAS,EACTT,UAC8B,SAA1BpL,EAAgB7P,MACV,OAC0B,UAA1B6P,EAAgB7P,MAChB,QACA,WAGduQ,EAAA9H,EAAAlE,cAAA,OAAKC,MAAO,CAAEiU,QAAS,GAAK9Z,MAAO,OAAQC,OAAQ,QAAUuY,IAAKwE,KAAgBtE,IAAI,MAI9F9G,EAAA9H,EAAAlE,cAACqX,GAAD,CACIpb,OAAQqQ,KAAKH,MAAMlQ,OACnBC,cAAeoP,EAAgBhS,GAC/BmC,MAAO6P,EAAgB7P,MACvBE,MAAO2P,EAAgB3P,MACvB7G,WAAYwW,EAAgBxW,WAC5BC,YAAauW,EAAgBvW,YAC7BgH,SAAUuP,EAAgBvP,SAAW0X,YA5DjCW,iBA+ETjB,eAZS,SAACtL,EAAcsE,GAOnC,MAAO,CACH/S,KANAyO,EAAMF,SAASxI,OACf0I,EAAMF,SAASxI,MAAMgN,EAAMlQ,SAC3B4L,EAAMF,SAASxI,MAAMgN,EAAMlQ,QAAQkQ,EAAMb,gBAAgBhS,IACnDuO,EAAMF,SAASxI,MAAMgN,EAAMlQ,QAAQkQ,EAAMb,gBAAgBhS,IAAIuc,MAC7D,KAMC1C,CAAqE+D,yBC3E9EI,iNACFzP,MAAQ,CACJ0P,WAAY,CACRnd,OAAQ,EACRC,QAAS,MAIjBmd,oBAAsB,SAAC5X,GAA+C,IAAAqS,EACvC7F,EAAKD,MAAxBqH,EAD0DvB,EAC1DuB,SAAU7e,EADgDsd,EAChDtd,KACPiL,EAAM6X,OACVC,aAAa,QAAhB,QAAAzZ,OAAkCtJ,EAAK2E,MACvCka,EAASlX,GAAgC3H,EAAK2E,GAAI,OAClDsG,EAAMsO,8FAIL,IAAAyJ,EAAArL,KAAAqH,EAC6DrH,KAAKH,MAA/DjN,EADHyU,EACGzU,aAAcvK,EADjBgf,EACiBhf,KAAMyF,EADvBuZ,EACuBvZ,MAAOC,EAD9BsZ,EAC8BtZ,OAAQud,EADtCjE,EACsCiE,aAAclb,EADpDiX,EACoDjX,KACnD+W,EAAOnH,KAAKzE,MAAM0P,WAAWnd,MAAQA,EAE3C,OACI4R,EAAA9H,EAAAlE,cAAC6X,GAAA,EAAD,CACIC,QAAM,EACNvH,SAAU,SAAAwH,GACDA,EAAYD,QAGjBH,EAAKK,SAAS,CAAET,WAAYQ,EAAYD,WAG3C,SAAAG,GAAA,IAAGC,EAAHD,EAAGC,WAAH,OACGlM,EAAA9H,EAAAlE,cAAA,OACIsS,UAAS,GAAArU,OAAKgC,KAAMtL,KAAX,KAAAsJ,OAAmB2Z,EAAe3X,KAAMrL,OAAS,IAC1D0E,GAAE,QAAA2E,OAAUtJ,EAAK2E,IACjB+Y,IAAK6F,EACLjY,MAAO,CACH7F,MAAK,GAAA6D,OAAK7D,EAAQsC,EAAb,MACLrC,OAAM,GAAA4D,OAAK5D,EAASqC,EAAd,MACNgW,SAAU,WACVyF,SAAU,UAEdC,YAAaT,EAAKH,oBAClBa,aAAcV,EAAKH,qBAElBtV,OAAOoW,OAAOpZ,GAAcmI,IAAI,SAAA3S,GAC7B,MAAe,UAAXA,EAAEyE,KACK6S,EAAA9H,EAAAlE,cAACuY,GAAD,CAAYC,IAAK9jB,EAAE4E,GAAI2C,OAAQtH,EAAK2E,GAAIiS,iBAAkB7W,EAAG+e,KAAMA,IACxD,SAAX/e,EAAEyE,KACF6S,EAAA9H,EAAAlE,cAACyY,GAAD,CAAWD,IAAK9jB,EAAE4E,GAAI2C,OAAQtH,EAAK2E,GAAIgS,gBAAiB5W,EAAG+e,KAAMA,IAErE,iBAnDhBxH,aAsEJkH,eAVS,SAACtL,EAAcsE,GACnC,MAAO,CACHjN,aAAc2I,EAAMF,SAASzI,aAC7B9E,MAAOyN,EAAMF,SAASvN,MACtBC,OAAQwN,EAAMF,SAAStN,OACvBud,aAAc/P,EAAMF,SAASuC,aAAeiC,EAAMxX,KAAK2E,GACvDoD,KAAMmL,EAAMF,SAASjL,OAIdyW,CAAqEmE,kCNtGxExL,mEASS4M,yLACR,IAAAzG,EACuB3F,KAAKH,MAAzBwM,EADH1G,EACG0G,UAAWC,EADd3G,EACc2G,KAEnB,OACI5M,EAAA9H,EAAAlE,cAAA,OACIC,MAAO,CACH4Y,QAAS,MACTC,aAAc,MACdC,gBAAiB,iBACjB7Y,QAAS,OACT8Y,KAAM,wCAGTL,IAAc7M,GAAUmN,OAASjN,EAAA9H,EAAAlE,cAACiZ,GAAA,EAAD,CAAOC,KAAM,IAAKN,KAAMA,GAAQ,WAAYjd,MAAM,YACnFgd,IAAc7M,GAAUqN,SAAWnN,EAAA9H,EAAAlE,cAACmZ,GAAA,EAAD,CAASD,KAAM,IAAKN,KAAMA,GAAQ,WAAYjd,MAAM,YACxFqQ,EAAA9H,EAAAlE,cAAA,OAAKC,MAAO,CAAEmZ,WAAY,QAAU9M,KAAKH,MAAM+F,kBAhBpBjG,iCOJtBoN,yLACR,IACGC,EAAUhN,KAAKH,MAAfmN,MAER,OACItN,EAAA9H,EAAAlE,cAAA,OAAKsS,UAAS,GAAArU,OAAKgC,KAAMsZ,OAAX,KAAAtb,OAAqBqb,EAAQrZ,KAAMqZ,MAAQrZ,KAAMuZ,WAC3DxN,EAAA9H,EAAAlE,cAAA,YACAgM,EAAA9H,EAAAlE,cAAA,oBAPoBiM,iCCUvBwN,GAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAvN,EAAAlK,OAAAmK,GAAA,EAAAnK,CAAAoK,KAAAmN,GAAA,QAAAG,EAAAnP,UAAAC,OAAAmP,EAAA,IAAApX,MAAAmX,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAArP,UAAAqP,GAAA,OAAA1N,EAAAlK,OAAAqK,GAAA,EAAArK,CAAAoK,MAAAqN,EAAAzX,OAAAsK,GAAA,EAAAtK,CAAAuX,IAAA9U,KAAAoV,MAAAJ,EAAA,CAAArN,MAAArO,OAAA4b,MACIG,qBAAuB,WAAM,IAAA/H,EACQ7F,EAAKD,MAA9BjC,EADiB+H,EACjB/H,WAAYsJ,EADKvB,EACLuB,SACD,OAAftJ,GACAsJ,EAAShZ,GAAiB0P,KAJtCkC,EAQI6N,sBAAwB,WAAM,IAAAtG,EACOvH,EAAKD,MAA9BjC,EADkByJ,EAClBzJ,WAAYsJ,EADMG,EACNH,SACD,OAAftJ,GACAsJ,EAAS/Y,GAAkByP,KAXvCkC,EAeI8N,kBAAoB,SAACta,GAA+C,IAAAiU,EAC/BzH,EAAKD,MAA9BjC,EADwD2J,EACxD3J,WAAYsJ,EAD4CK,EAC5CL,SACD,OAAftJ,GACAsJ,EAAS9Y,GAAuBwP,EAAYoM,SAAS1W,EAAM6X,OAAO5B,UAlB9EzJ,EAAA,OAAAlK,OAAAiY,GAAA,EAAAjY,CAAAuX,EAAAC,GAAAxX,OAAAkY,GAAA,EAAAlY,CAAAuX,EAAA,EAAAjB,IAAA,SAAA3C,MAAA,WAsBa,IACG3L,EAAeoC,KAAKH,MAApBjC,WAER,OACI8B,EAAA9H,EAAAlE,cAAA,OAAKsS,UAAWrS,KAAMjL,MAClBgX,EAAA9H,EAAAlE,cAAA,UACIqa,QAAS/N,KAAK0N,qBACdM,MAAM,aACNhI,UAA0B,OAAfpI,EAAsBjK,KAAMpL,SAAW,IAElDmX,EAAA9H,EAAAlE,cAAA,KAAGsS,UAAU,kBAAb,cAGJtG,EAAA9H,EAAAlE,cAAA,SACI7G,KAAK,SACL0c,MAAsB,OAAf3L,EAAsBA,EAAWvP,MAAM4f,WAAa,EAC3DC,SAAUlO,KAAK4N,kBACfI,MAAM,0BACNhI,UAA0B,OAAfpI,EAAsBjK,KAAMpL,SAAW,KAEtDmX,EAAA9H,EAAAlE,cAAA,UACIqa,QAAS/N,KAAK2N,sBACdK,MAAM,cACNhI,UAA0B,OAAfpI,EAAsBjK,KAAMpL,SAAW,IAElDmX,EAAA9H,EAAAlE,cAAA,KAAGsS,UAAU,kBAAb,gBA/CpBmH,EAAA,CAAoCxN,aA6DrBkH,eAPS,SAACtL,GACrB,MAAO,CACH8B,gBAAiB9B,EAAMiD,KAAKnB,gBAC5BO,WAA0C,OAA9BrC,EAAMF,SAASuC,WAAsBrC,EAAMF,SAAS1I,UAAU4I,EAAMF,SAASuC,YAAc,OAIhGiJ,CAA+DsG,wBC/CjEgB,GAAb,SAAAf,GAAA,SAAAe,IAAA,IAAAd,EAAAvN,EAAAlK,OAAAmK,GAAA,EAAAnK,CAAAoK,KAAAmO,GAAA,QAAAb,EAAAnP,UAAAC,OAAAmP,EAAA,IAAApX,MAAAmX,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAArP,UAAAqP,GAAA,OAAA1N,EAAAlK,OAAAqK,GAAA,EAAArK,CAAAoK,MAAAqN,EAAAzX,OAAAsK,GAAA,EAAAtK,CAAAuY,IAAA9V,KAAAoV,MAAAJ,EAAA,CAAArN,MAAArO,OAAA4b,MACIa,oBAAsB,YAElBlH,EADqBpH,EAAKD,MAAlBqH,UACC3Y,OAHjBuR,EAMIuO,kBAAoB,WAAM,IAAA1I,EACkB7F,EAAKD,MAArChC,EADc8H,EACd9H,kBAAmBqJ,EADLvB,EACKuB,SACD,OAAtBrJ,GACAqJ,EAAS1Y,OATrBsR,EAaIwO,mBAAqB,SAAChb,IAElB4T,EADqBpH,EAAKD,MAAlBqH,UACC7W,GAAiBiD,EAAM6X,OAAO5B,SAf/CzJ,EAkBIyO,kBAAoB,SAACC,GAAsB,IAAAnH,EACavH,EAAKD,MAAjDqH,EAD+BG,EAC/BH,SAAUtJ,EADqByJ,EACrBzJ,WAAYC,EADSwJ,EACTxJ,kBAE9B,GAAID,GAAcC,EAAmB,CACjC,IAAM4Q,EAAgB,CAAErc,IAAG,mBAAAT,OAAqB6c,IAChDtH,EAASpX,GAAmB8N,EAAW5Q,GAAI6Q,EAAkB7Q,GAAIyhB,MAvB7E3O,EAAA,OAAAlK,OAAAiY,GAAA,EAAAjY,CAAAuY,EAAAf,GAAAxX,OAAAkY,GAAA,EAAAlY,CAAAuY,EAAA,EAAAjC,IAAA,SAAA3C,MAAA,WA2Ba,IAAA8B,EAAArL,KAAAuH,EAC2CvH,KAAKH,MAA7ChC,EADH0J,EACG1J,kBAAmB6J,EADtBH,EACsBG,SAAUpX,EADhCiX,EACgCjX,OAErC,OACIoP,EAAA9H,EAAAlE,cAAA,OAAKsS,UAAWrS,KAAMjL,MAClBgX,EAAA9H,EAAAlE,cAAA,WACIgM,EAAA9H,EAAAlE,cAAA,UAAQqa,QAAS/N,KAAKoO,oBAAqBJ,MAAM,mBAC7CtO,EAAA9H,EAAAlE,cAAA,KAAGsS,UAAU,kBAAb,wBAGJtG,EAAA9H,EAAAlE,cAAA,UACIsS,UAAiC,OAAtBnI,EAA6BlK,KAAMpL,SAAW,GACzDwlB,QAAS/N,KAAKqO,kBACdL,MAAM,gBAENtO,EAAA9H,EAAAlE,cAAA,KAAGsS,UAAU,kBAAb,YAIPnI,GAAgD,UAA3BA,EAAkBhR,MACpC6S,EAAA9H,EAAAlE,cAAAgM,EAAA9H,EAAA8W,SAAA,KACIhP,EAAA9H,EAAAlE,cAAA,WACIgM,EAAA9H,EAAAlE,cAAA,OACI4S,IAAKoB,EACLlB,IAAI,GACJ7S,MAAO,CACH7F,MAAO,IACPC,OAAQ,QAKpB2R,EAAA9H,EAAAlE,cAAA,WACIgM,EAAA9H,EAAAlE,cAAA,SAAO7G,KAAK,OAAO0c,MAAOjZ,EAAQ4d,SAAUlO,KAAKsO,sBAGrD5O,EAAA9H,EAAAlE,cAAA,OAAKsS,UAAWrS,KAAMb,QACjBkN,KAAKH,MAAM/M,OAAOiI,IAAI,SAAA4T,GACnB,OACIjP,EAAA9H,EAAAlE,cAAA,OACIwY,IAAKyC,EAAG3hB,GACRsZ,IAAG,mBAAA3U,OAAqBgd,EAAGlU,MAC3BsT,QAAS,kBAAM1C,EAAKkD,kBAAkBI,EAAGlU,OACzC+L,IAAI,GACJ7S,MAAO,CACH7F,MAAO,IACPC,OAAQ,gBAzEpDogB,EAAA,CAAkCxO,aAkHnBkH,eA5BS,SAACtL,GACrB,IAAMsC,EACmC,OAArCtC,EAAMF,SAASwC,kBACTtC,EAAMF,SAASzI,aAAa2I,EAAMF,SAASwC,mBAC3C,KAEJD,EAA2C,OAA9BrC,EAAMF,SAASuC,WAAsBrC,EAAMF,SAAS1I,UAAU4I,EAAMF,SAASuC,YAAc,KAExG8J,EACFnM,EAAMF,SAASvI,QACf8K,GACArC,EAAMF,SAASvI,OAAO8K,EAAW5Q,KACX,OAAtB6Q,GAC2B,UAA3BA,EAAkBhR,MAClB0O,EAAMF,SAASvI,OAAO8K,EAAW5Q,IAAI6Q,EAAkB7Q,IACjDuO,EAAMF,SAASvI,OAAO8K,EAAW5Q,IAAI6Q,EAAkB7Q,IAAIoF,IAC3D,GAEV,MAAO,CACHiL,gBAAiB9B,EAAMiD,KAAKnB,gBAC5BQ,oBACA6J,WACA9J,aACA9K,OAAQyI,EAAMzI,OAAOA,OACrBxC,OAAQiL,EAAMzI,OAAOxC,SAIduW,CAA+DsH,cCrIxES,iNACFrT,MAAQ,CACJsT,oBAAoB,KAGxBC,YAAc,WACVhP,EAAK4L,SAAS,CAAEmD,oBAAqB/O,EAAKvE,MAAMsT,wBAGpDE,YAAc,WACVjP,EAAK4L,SAAS,CAAEmD,oBAAoB,OAGxCG,aAAe,SAAC3f,GACZ,IAAM4Z,EAAYlW,OAAOmW,eACnBL,EAAQI,EAAUgG,WAAW,GACN,IAAzBhG,EAAUiG,YAAoBrG,EAAMsG,WAEpCjI,EADqBpH,EAAKD,MAAlBqH,UACC9X,GAAwCC,EAAM+f,MAEvD3b,SAAS4b,YAAY,aAAa,EAAOhgB,EAAM+f,gFAgBnD,OACI1P,EAAA9H,EAAAlE,cAAAgM,EAAA9H,EAAA8W,SAAA,KACIhP,EAAA9H,EAAAlE,cAAA,UAAQqa,QAAS/N,KAAK8O,YAAad,MAAM,qBACrCtO,EAAA9H,EAAAlE,cAAA,KAAGsS,UAAU,kBAAb,sBAEHhG,KAAKzE,MAAMsT,mBACRnP,EAAA9H,EAAAlE,cAAA,OAAKC,MAjBoB,CACjCyS,SAAU,WACVyE,OAAQ,IAgBInL,EAAA9H,EAAAlE,cAAA,OAAKC,MAdc,CAC/ByS,SAAU,QACVlD,IAAK,MACLwD,MAAO,MACPC,OAAQ,MACR1D,KAAM,OASyB8K,QAAS/N,KAAK+O,cACjCrP,EAAA9H,EAAAlE,cAAC4b,GAAA,aAAD,CAAcC,cAAc,EAAMrB,SAAUlO,KAAKgP,gBAErD,aA9CMrP,aAoDXkH,iBAAU+H,4CCvCnBY,GAAwB5Z,OAAO6Z,KAAKC,IACrCC,OACA5U,IAAI,SAAA6U,GAAE,MAAK,CAAErG,MAAOqG,EAAIC,MAAOD,KAc9BE,iNACFC,qBAAuB,SAACC,EAAgBC,GACpC,IAAIC,EAAgBF,EAIpB,MAHgB,YAAZC,IACAC,GAAiB,IAAMD,GAEpBC,KAGXlB,aAAe,SAACmB,GACZ,GAAKA,EAAL,CAEA,IAAM3nB,EAAc2nB,EAA8B5G,MAE9C9gB,EAAcqX,EAAKD,MAAMuQ,kBACvBC,EAAmBX,GACnBjnB,KAAe4nB,EAAG7nB,KACpBC,EAAcmN,OAAO6Z,KAAKY,EAAG7nB,IAAamnB,OAAO,IAGrDja,KAAQC,KAAK,CACTK,OAAQ,CACJC,SAAU,CAAC6J,EAAKiQ,qBAAqBvnB,EAAYC,KAErDH,OAAQ,YAEJ4e,EADqBpH,EAAKD,MAAlBqH,UACC3X,GAAuD/G,EAAYC,WAKxF6nB,wBAA0B,SAACH,GACvB,GAAKA,EAAL,CAEA,IAAM5G,EAAS4G,EAA8B5G,MAC7C7T,KAAQC,KAAK,CACTK,OAAQ,CACJC,SAAU,CAAC6J,EAAKiQ,qBAAqBjQ,EAAKD,MAAM0Q,WAAYhH,KAEhEjhB,OAAQ,YAEJ4e,EADqBpH,EAAKD,MAAlBqH,UACC5X,GAA8Cia,WAKnEiH,qBAAuB,SAACld,IAEpB4T,EADqBpH,EAAKD,MAAlBqH,UACC1X,GAA2CihB,WAAWnd,EAAM6X,OAAO5B,oFAGvE,IAAA8B,EAAArL,KACC0Q,EAAqBlB,GAAQmB,KAAK,SAAAC,GAAC,OAAIA,EAAErH,QAAU8B,EAAKxL,MAAM0Q,aAE9DM,EAAmCjb,OAAO6Z,KAAMC,GAA0B1P,KAAKH,MAAM0Q,aACtFZ,OACA5U,IAAI,SAAA+V,GAAE,MAAK,CAAEvH,MAAOuH,EAAIjB,MAAOiB,KAE9BC,EAAsBF,EAAmBF,KAAK,SAAAC,GAAC,OAAIA,EAAErH,QAAU8B,EAAKxL,MAAMuQ,oBAEhF,OACI1Q,EAAA9H,EAAAlE,cAAAgM,EAAA9H,EAAA8W,SAAA,KACIhP,EAAA9H,EAAAlE,cAAA,SACI7G,KAAK,SACL0c,MAAOvJ,KAAKH,MAAMmR,eAClB9C,SAAUlO,KAAKwQ,qBACfxC,MAAM,cAEVtO,EAAA9H,EAAAlE,cAACud,GAAA,EAAD,CACIjL,UAAWrS,KAAMnL,WACjB+gB,MAAOmH,EACPxC,SAAUlO,KAAKgP,aACfQ,QAASA,KAEb9P,EAAA9H,EAAAlE,cAACud,GAAA,EAAD,CACIjL,UAAWrS,KAAMlL,YACjB8gB,MAAOwH,EACP7C,SAAUlO,KAAKsQ,wBACfd,QAASqB,YA9EFlR,aAiGZkH,eAZS,SAACtL,GAKrB,MAAO,CACHgV,WALahV,EAAMF,SAASyC,aAAatV,WAMzC4nB,kBALoB7U,EAAMF,SAASyC,aAAarV,YAMhDuoB,eALiBzV,EAAMF,SAASyC,aAAarO,WAStCoX,CAA+DiJ,yBCjHjEoB,GAAb,SAAA9D,GAAA,SAAA8D,IAAA,IAAA7D,EAAAvN,EAAAlK,OAAAmK,GAAA,EAAAnK,CAAAoK,KAAAkR,GAAA,QAAA5D,EAAAnP,UAAAC,OAAAmP,EAAA,IAAApX,MAAAmX,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAArP,UAAAqP,GAAA,OAAA1N,EAAAlK,OAAAqK,GAAA,EAAArK,CAAAoK,MAAAqN,EAAAzX,OAAAsK,GAAA,EAAAtK,CAAAsb,IAAA7Y,KAAAoV,MAAAJ,EAAA,CAAArN,MAAArO,OAAA4b,MACI4D,mBAAqB,YAEjBjK,EADqBpH,EAAKD,MAAlBqH,UACC5Y,OAHjBwR,EAMIsR,uBAAyB,YAErBlK,EADqBpH,EAAKD,MAAlBqH,UACChY,GAAwC,UARzD4Q,EAWIuR,yBAA2B,YAEvBnK,EADqBpH,EAAKD,MAAlBqH,UACChY,GAAwC,YAbzD4Q,EAgBIwR,wBAA0B,YAEtBpK,EADqBpH,EAAKD,MAAlBqH,UACChY,GAAwC,WAlBzD4Q,EAqBIuO,kBAAoB,WAAM,IAAA1I,EACkB7F,EAAKD,MAArChC,EADc8H,EACd9H,kBAAmBqJ,EADLvB,EACKuB,SACD,OAAtBrJ,GACAqJ,EAAS1Y,OAxBrBsR,EAAA,OAAAlK,OAAAiY,GAAA,EAAAjY,CAAAsb,EAAA9D,GAAAxX,OAAAkY,GAAA,EAAAlY,CAAAsb,EAAA,EAAAhF,IAAA,SAAA3C,MAAA,WA4Ba,IACG1L,EAAsBmC,KAAKH,MAA3BhC,kBAER,OACI6B,EAAA9H,EAAAlE,cAAA,OAAKsS,UAAWrS,KAAMjL,MAClBgX,EAAA9H,EAAAlE,cAAA,UAAQqa,QAAS/N,KAAKmR,mBAAoBnD,MAAM,kBAC5CtO,EAAA9H,EAAAlE,cAAA,KAAGsS,UAAU,kBAAb,gBAEJtG,EAAA9H,EAAAlE,cAAA,UAAQqa,QAAS/N,KAAKoR,uBAAwBpD,MAAM,mBAChDtO,EAAA9H,EAAAlE,cAAA,KAAGsS,UAAU,kBAAb,sBAEJtG,EAAA9H,EAAAlE,cAAA,UAAQqa,QAAS/N,KAAKqR,yBAA0BrD,MAAM,qBAClDtO,EAAA9H,EAAAlE,cAAA,KAAGsS,UAAU,kBAAb,wBAEJtG,EAAA9H,EAAAlE,cAAA,UAAQqa,QAAS/N,KAAKsR,wBAAyBtD,MAAM,oBACjDtO,EAAA9H,EAAAlE,cAAA,KAAGsS,UAAU,kBAAb,uBAEJtG,EAAA9H,EAAAlE,cAAC6d,GAAD,MACA7R,EAAA9H,EAAAlE,cAAC8d,GAAD,MAEA9R,EAAA9H,EAAAlE,cAAA,UACIsS,UAAiC,OAAtBnI,EAA6BlK,KAAMpL,SAAW,GACzDwlB,QAAS/N,KAAKqO,kBACdL,MAAM,gBAENtO,EAAA9H,EAAAlE,cAAA,KAAGsS,UAAU,kBAAb,gBArDpBkL,EAAA,CAAiCvR,aAwElBkH,eAZS,SAACtL,GACrB,IAAMsC,EACmC,OAArCtC,EAAMF,SAASwC,kBACTtC,EAAMF,SAASzI,aAAa2I,EAAMF,SAASwC,mBAC3C,KAEV,MAAO,CACHR,gBAAiB9B,EAAMiD,KAAKnB,gBAC5BQ,sBAIOgJ,CAA+DqK,wBC7EjEO,GAAb,SAAArE,GAAA,SAAAqE,IAAA,IAAApE,EAAAvN,EAAAlK,OAAAmK,GAAA,EAAAnK,CAAAoK,KAAAyR,GAAA,QAAAnE,EAAAnP,UAAAC,OAAAmP,EAAA,IAAApX,MAAAmX,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAArP,UAAAqP,GAAA,OAAA1N,EAAAlK,OAAAqK,GAAA,EAAArK,CAAAoK,MAAAqN,EAAAzX,OAAAsK,GAAA,EAAAtK,CAAA6b,IAAApZ,KAAAoV,MAAAJ,EAAA,CAAArN,MAAArO,OAAA4b,MACImE,cAAgB,WAAM,IAAA/L,EACkB7F,EAAKD,MAAjC9B,EADU4H,EACV5H,cAAemJ,EADLvB,EACKuB,SACnBnJ,IAAkBpV,EAAa0W,QAC/B6H,EAASjX,GAAuB,OAEhCiX,EAASjX,GAAuBtH,EAAa0W,WANzDS,EAUI6R,aAAe,WAAM,IAAAtK,EACmBvH,EAAKD,MAAjC9B,EADSsJ,EACTtJ,cAAemJ,EADNG,EACMH,SACnBnJ,IAAkBpV,EAAa4W,MAC/B2H,EAASjX,GAAuB,OAEhCiX,EAASjX,GAAuBtH,EAAa4W,SAfzDO,EAmBI8R,YAAc,WAAM,IAAArK,EACoBzH,EAAKD,MAAjC9B,EADQwJ,EACRxJ,cAAemJ,EADPK,EACOL,SACnBnJ,IAAkBpV,EAAa2W,KAC/B4H,EAASjX,GAAuB,OAEhCiX,EAASjX,GAAuBtH,EAAa2W,QAxBzDQ,EAAA,OAAAlK,OAAAiY,GAAA,EAAAjY,CAAA6b,EAAArE,GAAAxX,OAAAkY,GAAA,EAAAlY,CAAA6b,EAAA,EAAAvF,IAAA,SAAA3C,MAAA,WA4Ba,IACGxL,EAAkBiC,KAAKH,MAAvB9B,cACR,OACI2B,EAAA9H,EAAAlE,cAAA,OAAKsS,UAAWrS,KAAMke,SAClBnS,EAAA9H,EAAAlE,cAAA,OAAKsS,UAAWrS,KAAMme,UAClBpS,EAAA9H,EAAAlE,cAAA,KACIsa,MAAM,UACNhI,UAAS,kBAAArU,OAAoBoM,IAAkBpV,EAAa0W,QAAU1L,KAAMrL,OAAS,IACrFylB,QAAS/N,KAAK0R,eAHlB,WAOAhS,EAAA9H,EAAAlE,cAAA,KACIsa,MAAM,SACNhI,UAAS,kBAAArU,OAAoBoM,IAAkBpV,EAAa4W,MAAQ5L,KAAMrL,OAAS,IACnFylB,QAAS/N,KAAK2R,cAHlB,SAOAjS,EAAA9H,EAAAlE,cAAA,KACIsa,MAAM,QACNhI,UAAS,kBAAArU,OAAoBoM,IAAkBpV,EAAa2W,KAAO3L,KAAMrL,OAAS,IAClFylB,QAAS/N,KAAK4R,aAHlB,gBASe,OAAlB7T,GACG2B,EAAA9H,EAAAlE,cAAA,OAAKsS,UAAWrS,KAAMjL,MACjBqV,IAAkBpV,EAAa0W,SAAWK,EAAA9H,EAAAlE,cAACqe,GAAD,MAC1ChU,IAAkBpV,EAAa4W,OAASG,EAAA9H,EAAAlE,cAACse,GAAD,MACxCjU,IAAkBpV,EAAa2W,MAAQI,EAAA9H,EAAAlE,cAACue,GAAD,YA5DhER,EAAA,CAA6B9R,aA2EdkH,eAPS,SAACtL,GACrB,MAAO,CACH8B,gBAAiB9B,EAAMiD,KAAKnB,gBAC5BU,cAAexC,EAAMF,SAAS0C,gBAIvB8I,CAA+D4K,wBClDjES,GAAb,SAAA9E,GAAA,SAAA8E,IAAA,IAAA7E,EAAAvN,EAAAlK,OAAAmK,GAAA,EAAAnK,CAAAoK,KAAAkS,GAAA,QAAA5E,EAAAnP,UAAAC,OAAAmP,EAAA,IAAApX,MAAAmX,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAArP,UAAAqP,GAAA,OAAA1N,EAAAlK,OAAAqK,GAAA,EAAArK,CAAAoK,MAAAqN,EAAAzX,OAAAsK,GAAA,EAAAtK,CAAAsc,IAAA7Z,KAAAoV,MAAAJ,EAAA,CAAArN,MAAArO,OAAA4b,MACIhS,MAAQ,CACJ/N,UAAW,IACXC,WAAY,IACZC,gBAAiB,GACjBC,gBAAiB,GALzBmS,EAQIqS,sBAAwB,WAAM,IAClBjL,EAAapH,EAAKD,MAAlBqH,SAEFtI,EAAoB,CAAE5R,GAAIC,IAAQC,WAAYmB,MAAO,GAE3D6Y,EAASjZ,GAAkB2Q,KAbnCkB,EAgBIsS,uBAAyB,WAAM,IACnBlL,EAAapH,EAAKD,MAAlBqH,SADmBmL,EAEyCvS,EAAKvE,MAAjE/N,EAFmB6kB,EAEnB7kB,UAAWC,EAFQ4kB,EAER5kB,WAAYC,EAFJ2kB,EAEI3kB,gBAAiBC,EAFrB0kB,EAEqB1kB,gBAEhDuZ,EAAS3Z,GAAqBC,EAAWC,EAAYC,EAAiBC,KApB9EmS,EAuBIwS,kBAAoB,SAAChf,IAEjB4T,EADqBpH,EAAKD,MAAlBqH,UACCzY,GAAmBgiB,WAAWnd,EAAM6X,OAAO5B,UAzB5DzJ,EA4BIyS,mBAAqB,SAACjf,IAElB4T,EADqBpH,EAAKD,MAAlBqH,UACCxY,GAAoB+hB,WAAWnd,EAAM6X,OAAO5B,UA9B7DzJ,EAiCI0S,WAAa,SAAClf,IAEV4T,EADqBpH,EAAKD,MAAlBqH,UACC/W,GAAesgB,WAAWnd,EAAM6X,OAAO5B,UAnCxDzJ,EAsCI2S,sBAAwB,SAACnf,GACrBwM,EAAK4L,SAAS,CAAEle,UAAWijB,WAAWnd,EAAM6X,OAAO5B,UAvC3DzJ,EA0CI4S,uBAAyB,SAACpf,GACtBwM,EAAK4L,SAAS,CAAEje,WAAYgjB,WAAWnd,EAAM6X,OAAO5B,UA3C5DzJ,EA8CI6S,4BAA8B,SAACrf,GAC3BwM,EAAK4L,SAAS,CAAEhe,gBAAiB+iB,WAAWnd,EAAM6X,OAAO5B,UA/CjEzJ,EAkDI8S,4BAA8B,SAACtf,GAC3BwM,EAAK4L,SAAS,CAAE/d,gBAAiB8iB,WAAWnd,EAAM6X,OAAO5B,UAnDjEzJ,EAsDI+S,yBAA2B,YAEvB3L,EADqBpH,EAAKD,MAAlBqH,UACClX,GAAgC,KAAM,QAxDvD8P,EAAA,OAAAlK,OAAAiY,GAAA,EAAAjY,CAAAsc,EAAA9E,GAAAxX,OAAAkY,GAAA,EAAAlY,CAAAsc,EAAA,EAAAhG,IAAA,SAAA3C,MAAA,WA2Da,IAAA5D,EAC6F3F,KAAKH,MAA/FxC,EADHsI,EACGtI,gBAAiB3K,EADpBiT,EACoBjT,YAAaC,EADjCgT,EACiChT,UAAW7E,EAD5C6X,EAC4C7X,MAAOC,EADnD4X,EACmD5X,OAAQ+kB,EAD3DnN,EAC2DmN,cAAepV,EAD1EiI,EAC0EjI,SAAUtN,EADpFuV,EACoFvV,KAEzF,OACIiN,GACIqC,EAAA9H,EAAAlE,cAAA,YACMgK,EAAWT,MAAuBA,IAAqByC,EAAA9H,EAAAlE,cAACqf,GAAD,CAAQ/F,OAAO,IACxEtN,EAAA9H,EAAAlE,cAACsf,GAAD,CAAe3G,UAAW7M,GAAUmN,OAChCjN,EAAA9H,EAAAlE,cAAA,6CAGJgM,EAAA9H,EAAAlE,cAAA,OAAKsS,UAAWrS,KAAMsf,aAClBvT,EAAA9H,EAAAlE,cAAA,OAAKsS,UAAWrS,KAAMke,SAClBnS,EAAA9H,EAAAlE,cAACwf,GAAD,OAEJxT,EAAA9H,EAAAlE,cAAA,OAAKoY,YAAa9L,KAAK6S,yBAA0B9G,aAAc/L,KAAK6S,0BAChEnT,EAAA9H,EAAAlE,cAAA,OAAKsS,UAAU,QACXtG,EAAA9H,EAAAlE,cAAA,SAAOyf,QAAQ,cAAf,oBACAzT,EAAA9H,EAAAlE,cAAA,SACI1G,GAAG,aACHH,KAAK,SACLumB,IAAI,IACJC,KAAK,MACLnF,SAAUlO,KAAKsS,kBACftM,UAAU,eACVpX,YAAY,QACZ2a,MAAOzb,IAEX4R,EAAA9H,EAAAlE,cAAA,SAAOyf,QAAQ,eAAf,qBACAzT,EAAA9H,EAAAlE,cAAA,SACI1G,GAAG,cACHH,KAAK,SACLumB,IAAI,IACJC,KAAK,MACLnF,SAAUlO,KAAKuS,mBACfvM,UAAU,eACVpX,YAAY,SACZ2a,MAAOxb,KAGf2R,EAAA9H,EAAAlE,cAAA,OAAKsS,UAAU,QACXtG,EAAA9H,EAAAlE,cAAA,SAAOyf,QAAQ,QAAf,oDACAzT,EAAA9H,EAAAlE,cAAA,SACI1G,GAAG,OACHH,KAAK,SACLumB,IAAI,MACJC,KAAK,MACLnF,SAAUlO,KAAKwS,WACfxM,UAAU,eACVpX,YAAY,OACZ2a,MAAOnZ,MAGbsN,EAAWX,MAAwBA,IAAsB2C,EAAA9H,EAAAlE,cAACqf,GAAD,MAC3DrT,EAAA9H,EAAAlE,cAAA,OAAKsS,UAAWrS,KAAM2f,SAClB5T,EAAA9H,EAAAlE,cAAA,MACIC,MAAO,CACH4f,oBAAmB,4BAAA5hB,OAA8B7D,EAAQsC,EAAtC,eAGtBsC,GACGA,EAAYqI,IAAI,SAAApL,GAAM,OAClB+P,EAAA9H,EAAAlE,cAAA,MAAIwY,IAAKvc,GACL+P,EAAA9H,EAAAlE,cAAC8f,GAAD,CAAMnrB,KAAMsK,EAAUhD,UAK1C+P,EAAA9H,EAAAlE,cAAA,OAAKsS,UAAU,QACXtG,EAAA9H,EAAAlE,cAAA,UAAQqa,QAAS/N,KAAKmS,uBAAtB,kBAKZzS,EAAA9H,EAAAlE,cAACsf,GAAD,CAAe3G,UAAW7M,GAAUmN,MAAOL,KAAK,WAC5C5M,EAAA9H,EAAAlE,cAAA,wDACAgM,EAAA9H,EAAAlE,cAAA,2FACAgM,EAAA9H,EAAAlE,cAAA,iDAGJgM,EAAA9H,EAAAlE,cAAA,OAAKsS,UAAU,QACXtG,EAAA9H,EAAAlE,cAAA,SAAOyf,QAAQ,cAAf,oBACAzT,EAAA9H,EAAAlE,cAAA,SACI1G,GAAG,aACHH,KAAK,SACLqhB,SAAUlO,KAAKyS,sBACf7jB,YAAY,aACZ2a,MAAOvJ,KAAKzE,MAAM/N,YAEtBkS,EAAA9H,EAAAlE,cAAA,SAAOyf,QAAQ,eAAf,qBACAzT,EAAA9H,EAAAlE,cAAA,SACI1G,GAAG,cACHH,KAAK,SACLqhB,SAAUlO,KAAK0S,uBACf9jB,YAAY,cACZ2a,MAAOvJ,KAAKzE,MAAM9N,aAEtBiS,EAAA9H,EAAAlE,cAAA,SAAOyf,QAAQ,yBAAf,gCACAzT,EAAA9H,EAAAlE,cAAA,SACI1G,GAAG,wBACHH,KAAK,SACLqhB,SAAUlO,KAAK2S,4BACf/jB,YAAY,oBACZ2a,MAAOvJ,KAAKzE,MAAM7N,kBAEtBgS,EAAA9H,EAAAlE,cAAA,SAAOyf,QAAQ,yBAAf,gCACAzT,EAAA9H,EAAAlE,cAAA,SACI1G,GAAG,wBACHH,KAAK,SACLqhB,SAAUlO,KAAK4S,4BACfhkB,YAAY,oBACZ2a,MAAOvJ,KAAKzE,MAAM5N,kBAEtB+R,EAAA9H,EAAAlE,cAAA,UAAQnL,SAAUuqB,EAAe/E,QAAS/N,KAAKoS,wBAA/C,sBA5KxBF,EAAA,CAA6BvS,aAmMdkH,eAbS,SAACtL,GACrB,MAAO,CACHmC,SAAUnC,EAAMF,SAASqC,SACzB5P,MAAOyN,EAAMF,SAASvN,MACtBC,OAAQwN,EAAMF,SAAStN,OACvBqC,KAAMmL,EAAMF,SAASjL,KACrBiN,gBAAiB9B,EAAMiD,KAAKnB,gBAC5B3K,YAAa6I,EAAMF,SAAS3I,YAC5BC,UAAW4I,EAAMF,SAAS1I,UAC1BmgB,eAAgBvX,EAAMT,MAAM4C,SAAWV,MAA2BA,KAI3D6J,CAA+DqL,ICpOjEuB,GAAb,SAAArG,GAAA,SAAAqG,IAAA,OAAA7d,OAAAmK,GAAA,EAAAnK,CAAAoK,KAAAyT,GAAA7d,OAAAqK,GAAA,EAAArK,CAAAoK,KAAApK,OAAAsK,GAAA,EAAAtK,CAAA6d,GAAAhG,MAAAzN,KAAA7B,YAAA,OAAAvI,OAAAiY,GAAA,EAAAjY,CAAA6d,EAAArG,GAAAxX,OAAAkY,GAAA,EAAAlY,CAAA6d,EAAA,EAAAvH,IAAA,oBAAA3C,MAAA,WACwB,ItB0hBavc,EsB1hBb2Y,EACY3F,KAAKH,MAAzBqH,EADQvB,EACRuB,SAAUwM,EADF/N,EACE+N,MAClBxM,GtBwhB6Bla,EsBxhBC0mB,EAAMC,OAAO3mB,GtByhBxC,CACHH,KAAMjC,EACNoC,UsB9hBR,CAAAkf,IAAA,SAAA3C,MAAA,WAOQ,OAAO7J,EAAA9H,EAAAlE,cAACkgB,GAAD,UAPfH,EAAA,CAAiC9T,aAalBkH,eAFS,SAACtL,GAAD,MAAmB,CAAE8B,gBAAiB9B,EAAMiD,KAAKnB,kBAE1DwJ,CAAyB4M,ICxBnBI,yLAEb,OACInU,EAAA9H,EAAAlE,cAAA,WACIgM,EAAA9H,EAAAlE,cAAA,sFACAgM,EAAA9H,EAAAlE,cAAA,0BACAgM,EAAA9H,EAAAlE,cAAA,UACIgM,EAAA9H,EAAAlE,cAAA,gCAEIgM,EAAA9H,EAAAlE,cAAA,UACIgM,EAAA9H,EAAAlE,cAAA,qCACAgM,EAAA9H,EAAAlE,cAAA,sDACAgM,EAAA9H,EAAAlE,cAAA,8EACAgM,EAAA9H,EAAAlE,cAAA,2DAGRgM,EAAA9H,EAAAlE,cAAA,6BACAgM,EAAA9H,EAAAlE,cAAA,8BACAgM,EAAA9H,EAAAlE,cAAA,gFACAgM,EAAA9H,EAAAlE,cAAA,8CACAgM,EAAA9H,EAAAlE,cAAA,kCACAgM,EAAA9H,EAAAlE,cAAA,mDACAgM,EAAA9H,EAAAlE,cAAA,4FAEJgM,EAAA9H,EAAAlE,cAAA,wBACAgM,EAAA9H,EAAAlE,cAAA,UACIgM,EAAA9H,EAAAlE,cAAA,iEACAgM,EAAA9H,EAAAlE,cAAA,oFAEJgM,EAAA9H,EAAAlE,cAAA,wBACAgM,EAAA9H,EAAAlE,cAAA,UACIgM,EAAA9H,EAAAlE,cAAA,wEACAgM,EAAA9H,EAAAlE,cAAA,4CACAgM,EAAA9H,EAAAlE,cAAA,qCAEJgM,EAAA9H,EAAAlE,cAAA,wBACAgM,EAAA9H,EAAAlE,cAAA,4CApC2BiM,aCUtBmU,eACjB,SAAAA,EAAYjU,GAAc,IAAAC,EAAA,OAAAlK,OAAAmK,GAAA,EAAAnK,CAAAoK,KAAA8T,IACtBhU,EAAAlK,OAAAqK,GAAA,EAAArK,CAAAoK,KAAApK,OAAAsK,GAAA,EAAAtK,CAAAke,GAAAzb,KAAA2H,KAAMH,KACDtE,MAAQ,CAAEwY,UAAU,GAFHjU,qFAMtBE,KAAK0L,SAAS,CAAEqI,UAAU,qCAM1B,OAAI/T,KAAKzE,MAAMwY,SAEPrU,EAAA9H,EAAAlE,cAACsf,GAAD,CAAe3G,UAAW7M,GAAUqN,QAASP,KAAK,MAAlD,sFACwF,IACpF5M,EAAA9H,EAAAlE,cAAA,KAAGG,KAAK,yBAAR,kBAFJ,KAMDmM,KAAKH,MAAM+F,gBArBiBjG,uBCU9BqU,GAAb,SAAA5G,GAAA,SAAA4G,IAAA,IAAA3G,EAAAvN,EAAAlK,OAAAmK,GAAA,EAAAnK,CAAAoK,KAAAgU,GAAA,QAAA1G,EAAAnP,UAAAC,OAAAmP,EAAA,IAAApX,MAAAmX,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAArP,UAAAqP,GAAA,OAAA1N,EAAAlK,OAAAqK,GAAA,EAAArK,CAAAoK,MAAAqN,EAAAzX,OAAAsK,GAAA,EAAAtK,CAAAoe,IAAA3b,KAAAoV,MAAAJ,EAAA,CAAArN,MAAArO,OAAA4b,MACIhS,MAAoB,CAChB0Y,YAAa,GACbnmB,MAAO,KACPC,OAAQ,MAJhB+R,EAOIkP,aAAe,SAAC1b,GACZwM,EAAK4L,SAAS,CAAEuI,YAAa3gB,EAAM6X,OAAO5B,SARlDzJ,EAWIwS,kBAAoB,SAAChf,GACjBwM,EAAK4L,SAAS,CAAE5d,MAAO2iB,WAAWnd,EAAM6X,OAAO5B,UAZvDzJ,EAeIyS,mBAAqB,SAACjf,GAClBwM,EAAK4L,SAAS,CAAE3d,OAAQ0iB,WAAWnd,EAAM6X,OAAO5B,UAhBxDzJ,EAmBIoU,yBAA2B,WAAM,IAAAvO,EACI7F,EAAKD,MAA9BqH,EADqBvB,EACrBuB,SAAUiN,EADWxO,EACXwO,WAElB,GAAmB,OAAfA,EAAJ,CAIA,IAAMF,EAAcnU,EAAKvE,MAAM0Y,YAAYG,OAGvClN,EADA+M,EACSrmB,GAAqBqmB,EAAanU,EAAKvE,MAAMzN,MAAOgS,EAAKvE,MAAMxN,OAAQomB,GAEvEvnB,GAAe,QAAS,yCA/B7CkT,EAAA,OAAAlK,OAAAiY,GAAA,EAAAjY,CAAAoe,EAAA5G,GAAAxX,OAAAkY,GAAA,EAAAlY,CAAAoe,EAAA,EAAA9H,IAAA,SAAA3C,MAAA,WAmCa,IAAAlC,EACiDrH,KAAKH,MAAnDxC,EADHgK,EACGhK,gBAAiB8W,EADpB9M,EACoB8M,WAAYxZ,EADhC0M,EACgC1M,OAAQC,EADxCyM,EACwCzM,KAEvCyZ,EAAe1Z,EAChBI,IAAI,SAAA/M,GAAM,OAAI4M,EAAK5M,KACnB+M,IAAI,SAAAuY,GAAO,OACR5T,EAAA9H,EAAAlE,cAAA,MAAIwY,IAAKoH,EAAQtmB,IACb0S,EAAA9H,EAAAlE,cAAC4gB,GAAA,EAAD,CAAMC,GAAE,YAAA5iB,OAAc2hB,EAAQtmB,KAAOsmB,EAAQ7Y,SAIzD,OACI4C,GACe,OAAf8W,GACIzU,EAAA9H,EAAAlE,cAAA,WACIgM,EAAA9H,EAAAlE,cAACsf,GAAD,CAAe3G,UAAW7M,GAAUmN,OAApC,wIAKAjN,EAAA9H,EAAAlE,cAAA,UAAK2gB,GAEL3U,EAAA9H,EAAAlE,cAAA,OAAKsS,UAAU,QACXtG,EAAA9H,EAAAlE,cAAA,SAAOyf,QAAQ,gBAAf,kBACAzT,EAAA9H,EAAAlE,cAAA,SACI1G,GAAG,eACHH,KAAK,OACLqhB,SAAUlO,KAAKgP,aACfhJ,UAAU,eACVpX,YAAY,kBAEhB8Q,EAAA9H,EAAAlE,cAAA,SAAOyf,QAAQ,cAAf,eACAzT,EAAA9H,EAAAlE,cAAA,SACI1G,GAAG,aACHH,KAAK,SACLumB,IAAI,IACJC,KAAK,MACLnF,SAAUlO,KAAKsS,kBACftM,UAAU,eACVpX,YAAY,aACZ2a,MAAOvJ,KAAKzE,MAAMzN,QAEtB4R,EAAA9H,EAAAlE,cAAA,SAAOyf,QAAQ,eAAf,gBACAzT,EAAA9H,EAAAlE,cAAA,SACI1G,GAAG,cACHH,KAAK,SACLumB,IAAI,IACJC,KAAK,MACLnF,SAAUlO,KAAKuS,mBACfvM,UAAU,eACVpX,YAAY,cACZ2a,MAAOvJ,KAAKzE,MAAMxN,SAEtB2R,EAAA9H,EAAAlE,cAAA,UAAQqa,QAAS/N,KAAKkU,0BAAtB,oBAGJxU,EAAA9H,EAAAlE,cAACsf,GAAD,CAAe3G,UAAW7M,GAAUmN,MAAOL,KAAK,WAAhD,8GA3FpB0H,EAAA,CAA8BrU,aA8GfkH,eATS,SAACtL,GACrB,MAAO,CACH8B,gBAAiB9B,EAAMiD,KAAKnB,gBAC5B8W,WAAY5Y,EAAMT,MAAMxS,OACxBqS,OAAQY,EAAMF,SAASV,OACvBC,KAAMW,EAAMF,SAAST,OAIdiM,CAAyBmN,ICvH3BQ,GAAb,SAAApH,GAAA,SAAAoH,IAAA,OAAA5e,OAAAmK,GAAA,EAAAnK,CAAAoK,KAAAwU,GAAA5e,OAAAqK,GAAA,EAAArK,CAAAoK,KAAApK,OAAAsK,GAAA,EAAAtK,CAAA4e,GAAA/G,MAAAzN,KAAA7B,YAAA,OAAAvI,OAAAiY,GAAA,EAAAjY,CAAA4e,EAAApH,GAAAxX,OAAAkY,GAAA,EAAAlY,CAAA4e,EAAA,EAAAtI,IAAA,oBAAA3C,MAAA,WACwB,IAAA5D,EACY3F,KAAKH,MAAzBqH,EADQvB,EACRuB,SAAUwM,EADF/N,EACE+N,MAClBxM,EAAS7Z,GAAkBqmB,EAAMC,OAAO3mB,IAAI,MAHpD,CAAAkf,IAAA,SAAA3C,MAAA,WAOQ,OAAO7J,EAAA9H,EAAAlE,cAAC+gB,GAAD,UAPfD,EAAA,CAA8B7U,aAafkH,eAFS,SAACtL,GAAD,MAAmB,CAAE8B,gBAAiB9B,EAAMiD,KAAKnB,kBAE1DwJ,CAAyB2N,cCdnBE,iNACjBnZ,MAAQ,CACJkD,SAAU,GACVkW,SAAU,MAGdC,qBAAuB,SAACthB,GACpBwM,EAAK4L,SAAS,CAAEjN,SAAUnL,EAAM6X,OAAO5B,WAG3CsL,qBAAuB,SAACvhB,GACpBwM,EAAK4L,SAAS,CAAEiJ,SAAUrhB,EAAM6X,OAAO5B,WAG3CuL,aAAe,SAACxhB,GACZ,IAAMmL,EAAWqB,EAAKvE,MAAMkD,SAAS2V,OAC/BO,EAAW7U,EAAKvE,MAAMoZ,SAASP,OACrC,GAAI3V,GAAYkW,EAAU,CACtB,IAAM3jB,EAAQ,CAAEyN,WAAUkW,YAC1B7U,EAAKD,MAAMkV,QAAQ/jB,QAEnB8O,EAAKD,MAAMmV,eAAe,qCAE9B1hB,EAAMuO,4FAIN,OACInC,EAAA9H,EAAAlE,cAAA,WACIgM,EAAA9H,EAAAlE,cAAA,QAAMsS,UAAU,OAAOiP,SAAUjV,KAAK8U,cAClCpV,EAAA9H,EAAAlE,cAAA,SACI7G,KAAK,OACLqhB,SAAUlO,KAAK4U,qBACf5O,UAAU,eACVpX,YAAY,aAEhB8Q,EAAA9H,EAAAlE,cAAA,SACI7G,KAAK,WACLqhB,SAAUlO,KAAK6U,qBACf7O,UAAU,eACVpX,YAAY,aAEhB8Q,EAAA9H,EAAAlE,cAAA,SAAO7G,KAAK,SAAS0c,MAAM,mBA1CZ5J,aCEtBuV,GAAb,SAAA9H,GAAA,SAAA8H,IAAA,OAAAtf,OAAAmK,GAAA,EAAAnK,CAAAoK,KAAAkV,GAAAtf,OAAAqK,GAAA,EAAArK,CAAAoK,KAAApK,OAAAsK,GAAA,EAAAtK,CAAAsf,GAAAzH,MAAAzN,KAAA7B,YAAA,OAAAvI,OAAAiY,GAAA,EAAAjY,CAAAsf,EAAA9H,GAAAxX,OAAAkY,GAAA,EAAAlY,CAAAsf,EAAA,EAAAhJ,IAAA,SAAA3C,MAAA,WACa,IAAA5D,EACiC3F,KAAKH,MAAnCqH,EADHvB,EACGuB,SAAU7J,EADbsI,EACatI,gBAElB,OACIqC,EAAA9H,EAAAlE,cAAA,OAAKsS,UAAU,QACT3I,GACEqC,EAAA9H,EAAAlE,cAAAgM,EAAA9H,EAAA8W,SAAA,KACIhP,EAAA9H,EAAAlE,cAACsf,GAAD,CAAe3G,UAAW7M,GAAUmN,OAApC,uGAEcjN,EAAA9H,EAAAlE,cAAA,KAAGG,KAAK,WAAR,WAFd,KAKA6L,EAAA9H,EAAAlE,cAACyhB,GAAD,CACIJ,QAAS,SAAA/jB,GAAK,OAAIkW,E5BqclB,SAAClW,GACzB,MAAO,CACHnE,KAAM9D,EACNiI,MAAOA,G4BxcwCokB,CAAapkB,KACxCgkB,eAAgB,SAAAK,GAAG,OAAInO,EAASta,GAAe,QAASyoB,QAInEhY,GAAmBqC,EAAA9H,EAAAlE,cAAC4hB,GAAA,EAAD,CAAUf,GAAG,WAnBjDW,EAAA,CAA+BvV,aA2BhBkH,eAFS,SAACtL,GAAD,MAAmB,CAAE8B,gBAAiB9B,EAAMiD,KAAKnB,kBAE1DwJ,CAAyBqO,ICtB3BK,GAAb,SAAAnI,GAAA,SAAAmI,IAAA,IAAAlI,EAAAvN,EAAAlK,OAAAmK,GAAA,EAAAnK,CAAAoK,KAAAuV,GAAA,QAAAjI,EAAAnP,UAAAC,OAAAmP,EAAA,IAAApX,MAAAmX,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAArP,UAAAqP,GAAA,OAAA1N,EAAAlK,OAAAqK,GAAA,EAAArK,CAAAoK,MAAAqN,EAAAzX,OAAAsK,GAAA,EAAAtK,CAAA2f,IAAAld,KAAAoV,MAAAJ,EAAA,CAAArN,MAAArO,OAAA4b,MACIhS,MAAoB,CAChBia,SAAU,IAFlB1V,EAKIkP,aAAe,SAAC1b,GACZwM,EAAK4L,SAAS,CAAE8J,SAAUliB,EAAM6X,OAAO5B,SAN/CzJ,EASI2V,sBAAwB,WAAM,IAClBvO,EAAapH,EAAKD,MAAlBqH,SAEF9Z,EAAW0S,EAAKvE,MAAMia,SAASpB,OAEjClN,EADA9Z,EACSD,GAAkBC,GAElBR,GAAe,QAAS,oCAhB7CkT,EAAA,OAAAlK,OAAAiY,GAAA,EAAAjY,CAAA2f,EAAAnI,GAAAxX,OAAAkY,GAAA,EAAAlY,CAAA2f,EAAA,EAAArJ,IAAA,SAAA3C,MAAA,WAoBa,IAAA5D,EACqC3F,KAAKH,MAAvCxC,EADHsI,EACGtI,gBAAiB1C,EADpBgL,EACoBhL,OAAQC,EAD5B+K,EAC4B/K,KAE3B8a,EAAY/a,EACbI,IAAI,SAAA/M,GAAM,OAAI4M,EAAK5M,KACnB+M,IAAI,SAAA4a,GAAI,OACLjW,EAAA9H,EAAAlE,cAAA,MAAIwY,IAAKyJ,EAAK3oB,IACV0S,EAAA9H,EAAAlE,cAAC4gB,GAAA,EAAD,CAAMC,GAAE,SAAA5iB,OAAWgkB,EAAK3oB,KAAO2oB,EAAKlb,SAIhD,OACI4C,GACIqC,EAAA9H,EAAAlE,cAAA,WACIgM,EAAA9H,EAAAlE,cAACsf,GAAD,CAAe3G,UAAW7M,GAAUmN,OACb,IAAlBhS,EAAOyD,QACJsB,EAAA9H,EAAAlE,cAAAgM,EAAA9H,EAAA8W,SAAA,sFAEH/T,EAAOyD,OAAS,GACbsB,EAAA9H,EAAAlE,cAAAgM,EAAA9H,EAAA8W,SAAA,kFAIRhP,EAAA9H,EAAAlE,cAAA,UAAKgiB,GACLhW,EAAA9H,EAAAlE,cAAA,OAAKsS,UAAU,QACXtG,EAAA9H,EAAAlE,cAAA,SAAOyf,QAAQ,aAAf,cACAzT,EAAA9H,EAAAlE,cAAA,SACI1G,GAAG,YACHH,KAAK,OACLqhB,SAAUlO,KAAKgP,aACfhJ,UAAU,eACVpX,YAAY,cAEhB8Q,EAAA9H,EAAAlE,cAAA,UAAQqa,QAAS/N,KAAKyV,uBAAtB,qBArDxBF,EAAA,CAA2B5V,aAqEZkH,eARS,SAACtL,GACrB,MAAO,CACH8B,gBAAiB9B,EAAMiD,KAAKnB,gBAC5B1C,OAAQY,EAAMT,MAAMH,OACpBC,KAAMW,EAAMT,MAAMF,OAIXiM,CAAyB0O,IC7E3BK,GAAb,SAAAxI,GAAA,SAAAwI,IAAA,OAAAhgB,OAAAmK,GAAA,EAAAnK,CAAAoK,KAAA4V,GAAAhgB,OAAAqK,GAAA,EAAArK,CAAAoK,KAAApK,OAAAsK,GAAA,EAAAtK,CAAAggB,GAAAnI,MAAAzN,KAAA7B,YAAA,OAAAvI,OAAAiY,GAAA,EAAAjY,CAAAggB,EAAAxI,GAAAxX,OAAAkY,GAAA,EAAAlY,CAAAggB,EAAA,EAAA1J,IAAA,SAAA3C,MAAA,WAEQ,OAAIvJ,KAAKH,MAAMxC,gBACJqC,EAAA9H,EAAAlE,cAACmiB,GAAD,MAGHnW,EAAA9H,EAAAlE,cAACsf,GAAD,CAAe3G,UAAW7M,GAAUmN,OAApC,+DACgEjN,EAAA9H,EAAAlE,cAAA,KAAGG,KAAK,UAAR,SADhE,MAC8F,IAC1F6L,EAAA9H,EAAAlE,cAAA,KAAGG,KAAK,WAAR,WAFJ,eANhB+hB,EAAA,CAA0BjW,aAqBXkH,eANS,SAACtL,GACrB,MAAO,CACH8B,gBAAiB9B,EAAMiD,KAAKnB,kBAIrBwJ,CAAyB+O,IC9B3BE,GAAgB,SAACva,GAAD,OAAmBA,EAAMT,MAAMxS,OAASiT,EAAMT,MAAMF,KAAKW,EAAMT,MAAMxS,QAAU,MAE/FytB,GAAmB,SAACxa,GAAD,OAC5BA,EAAMF,SAAS/S,OAASiT,EAAMF,SAAST,KAAKW,EAAMF,SAAS/S,QAAU,MCS1D0tB,OARf,SAAgBnW,GACZ,OACIH,EAAA9H,EAAAlE,cAAA,UAAQqa,QAAS,kBAAMlO,EAAMoW,YAAYjQ,UAAU,mBAAnD,+BCkBKkQ,GAAb,SAAA9I,GAAA,SAAA8I,IAAA,OAAAtgB,OAAAmK,GAAA,EAAAnK,CAAAoK,KAAAkW,GAAAtgB,OAAAqK,GAAA,EAAArK,CAAAoK,KAAApK,OAAAsK,GAAA,EAAAtK,CAAAsgB,GAAAzI,MAAAzN,KAAA7B,YAAA,OAAAvI,OAAAiY,GAAA,EAAAjY,CAAAsgB,EAAA9I,GAAAxX,OAAAkY,GAAA,EAAAlY,CAAAsgB,EAAA,EAAAhK,IAAA,SAAA3C,MAAA,WACa,IAAA5D,EACsE3F,KAAKH,MAAxEqH,EADHvB,EACGuB,SAAU7J,EADbsI,EACatI,gBAAiBF,EAD9BwI,EAC8BxI,SAAUgX,EADxCxO,EACwCwO,WAAYgC,EADpDxQ,EACoDwQ,cAEzD,OACIzW,EAAA9H,EAAAlE,cAAA,WACIgM,EAAA9H,EAAAlE,cAAA,OAAK1G,GAAG,WAAWgZ,UAAWrS,KAAMwJ,UAChCuC,EAAA9H,EAAAlE,cAAA,UACKyJ,EAASpC,IAAI,SAAAwD,GAAC,OACXmB,EAAA9H,EAAAlE,cAAA,MAAIwY,IAAK3N,EAAEvR,IACP0S,EAAA9H,EAAAlE,cAAA,KAAGsS,UAAU,kBAAb,SADJ,IAC6CzH,EAAEzR,UAK3D4S,EAAA9H,EAAAlE,cAAA,WACIgM,EAAA9H,EAAAlE,cAAA,MAAIsS,UAAWrS,KAAMyiB,QACjB1W,EAAA9H,EAAAlE,cAAC4gB,GAAA,EAAD,CAAMC,GAAG,KAAT,eAEJ7U,EAAA9H,EAAAlE,cAAA,WACIgM,EAAA9H,EAAAlE,cAAA,MAAIsS,UAAWrS,KAAM0iB,MAChBhZ,GACGqC,EAAA9H,EAAAlE,cAAAgM,EAAA9H,EAAA8W,SAAA,KACIhP,EAAA9H,EAAAlE,cAAA,UACIgM,EAAA9H,EAAAlE,cAAC4gB,GAAA,EAAD,CAAMC,GAAG,KAAT,SAEHJ,GACGzU,EAAA9H,EAAAlE,cAAA,UACIgM,EAAA9H,EAAAlE,cAAC4gB,GAAA,EAAD,CAAMC,GAAE,SAAA5iB,OAAWwiB,EAAWnnB,KAA9B,SAA2CmnB,EAAW1Z,KAAtD,MAGP0b,GACGzW,EAAA9H,EAAAlE,cAAA,UACIgM,EAAA9H,EAAAlE,cAAC4gB,GAAA,EAAD,CAAMC,GAAE,YAAA5iB,OAAcwkB,EAAcnpB,KAApC,aACempB,EAAc1b,KAD7B,OAOhBiF,EAAA9H,EAAAlE,cAAA,UACIgM,EAAA9H,EAAAlE,cAAC4gB,GAAA,EAAD,CAAMC,GAAG,cAAT,cAEJ7U,EAAA9H,EAAAlE,cAAA,UACIgM,EAAA9H,EAAAlE,cAAC4gB,GAAA,EAAD,CAAMC,GAAG,UAAT,UAEHlX,GACGqC,EAAA9H,EAAAlE,cAAA,UACIgM,EAAA9H,EAAAlE,cAAC4iB,GAAD,CAAQL,SAAU,kBAAM/O,EjC+ZjD,CACHra,KAAM3D,SiC7ZgBmU,GACEqC,EAAA9H,EAAAlE,cAAAgM,EAAA9H,EAAA8W,SAAA,KACIhP,EAAA9H,EAAAlE,cAAA,UACIgM,EAAA9H,EAAAlE,cAAC4gB,GAAA,EAAD,CAAMC,GAAG,UAAT,UAEJ7U,EAAA9H,EAAAlE,cAAA,UACIgM,EAAA9H,EAAAlE,cAAC4gB,GAAA,EAAD,CAAMC,GAAG,WAAT,qBAzDxC2B,EAAA,CAA4BvW,aA8EbkH,eATS,SAACtL,GACrB,MAAO,CACH8B,gBAAiB9B,EAAMiD,KAAKnB,gBAC5BF,SAAU5B,EAAMxO,QAAQoQ,SACxBgX,WAAY2B,GAAcva,GAC1B4a,cAAeJ,GAAiBxa,KAIzBsL,CAAqEqP,ICpG/DK,yLAEb,OACI7W,EAAA9H,EAAAlE,cAACsf,GAAD,CAAe3G,UAAW7M,GAAUqN,QAASP,KAAK,OAAlD,iCAH8B3M,aCM7B6W,GAAb,SAAApJ,GAAA,SAAAoJ,IAAA,IAAAnJ,EAAAvN,EAAAlK,OAAAmK,GAAA,EAAAnK,CAAAoK,KAAAwW,GAAA,QAAAlJ,EAAAnP,UAAAC,OAAAmP,EAAA,IAAApX,MAAAmX,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAArP,UAAAqP,GAAA,OAAA1N,EAAAlK,OAAAqK,GAAA,EAAArK,CAAAoK,MAAAqN,EAAAzX,OAAAsK,GAAA,EAAAtK,CAAA4gB,IAAAne,KAAAoV,MAAAJ,EAAA,CAAArN,MAAArO,OAAA4b,MACIhS,MAAQ,CACJkD,SAAU,GACVkW,SAAU,GACV8B,eAAgB,IAJxB3W,EAuBI8U,qBAAuB,SAACthB,GACpBwM,EAAK4L,SAAS,CAAEjN,SAAUnL,EAAM6X,OAAO5B,SAxB/CzJ,EA2BI+U,qBAAuB,SAACvhB,GACpBwM,EAAK4L,SAAS,CAAEiJ,SAAUrhB,EAAM6X,OAAO5B,SA5B/CzJ,EA+BI4W,2BAA6B,SAACpjB,GAC1BwM,EAAK4L,SAAS,CAAE+K,eAAgBnjB,EAAM6X,OAAO5B,SAhCrDzJ,EAAA,OAAAlK,OAAAiY,GAAA,EAAAjY,CAAA4gB,EAAApJ,GAAAxX,OAAAkY,GAAA,EAAAlY,CAAA4gB,EAAA,EAAAtK,IAAA,eAAA3C,MAAA,SAOiBjW,GAAwB,IAAAqS,EACF3F,KAAKH,MAA5BqH,EADyBvB,EACzBuB,SAAUyP,EADehR,EACfgR,SAEd3W,KAAKzE,MAAMoZ,WAAa3U,KAAKzE,MAAMkb,eACnCvP,EAASta,GAAe,QAAS,4BAMjC+pB,EAJc,CACVlY,SAAUuB,KAAKzE,MAAMkD,SAAS2V,OAC9BO,SAAU3U,KAAKzE,MAAMoZ,SAASP,SAKtC9gB,EAAMuO,mBApBd,CAAAqK,IAAA,SAAA3C,MAAA,WAmCa,IAAA8B,EAAArL,KACL,OACIN,EAAA9H,EAAAlE,cAAA,WACIgM,EAAA9H,EAAAlE,cAAA,QAAMsS,UAAU,OAAOiP,SAAU,SAAA3hB,GAAK,OAAI+X,EAAKyJ,aAAaxhB,KACxDoM,EAAA9H,EAAAlE,cAAA,SACI7G,KAAK,OACLqhB,SAAUlO,KAAK4U,qBACf5O,UAAU,eACVpX,YAAY,aAEhB8Q,EAAA9H,EAAAlE,cAAA,SACI7G,KAAK,WACLqhB,SAAUlO,KAAK6U,qBACf7O,UAAU,eACVpX,YAAY,aAEhB8Q,EAAA9H,EAAAlE,cAAA,SACI7G,KAAK,WACLqhB,SAAUlO,KAAK0W,2BACf1Q,UAAU,eACVpX,YAAY,yBAEhB8Q,EAAA9H,EAAAlE,cAAA,SAAO7G,KAAK,SAAS0c,MAAM,kBAzD/CiN,EAAA,CAA4B7W,aA+DbkH,iBAAU2P,IC3DZI,GAAb,SAAAxJ,GAAA,SAAAwJ,IAAA,OAAAhhB,OAAAmK,GAAA,EAAAnK,CAAAoK,KAAA4W,GAAAhhB,OAAAqK,GAAA,EAAArK,CAAAoK,KAAApK,OAAAsK,GAAA,EAAAtK,CAAAghB,GAAAnJ,MAAAzN,KAAA7B,YAAA,OAAAvI,OAAAiY,GAAA,EAAAjY,CAAAghB,EAAAxJ,GAAAxX,OAAAkY,GAAA,EAAAlY,CAAAghB,EAAA,EAAA1K,IAAA,SAAA3C,MAAA,WACa,IAAA5D,EACiC3F,KAAKH,MAAnCqH,EADHvB,EACGuB,SAAU7J,EADbsI,EACatI,gBAElB,OACIqC,EAAA9H,EAAAlE,cAAA,OAAKsS,UAAU,QACT3I,GACEqC,EAAA9H,EAAAlE,cAAAgM,EAAA9H,EAAA8W,SAAA,KACIhP,EAAA9H,EAAAlE,cAACsf,GAAD,CAAe3G,UAAW7M,GAAUmN,OAApC,gSAOAjN,EAAA9H,EAAAlE,cAACmjB,GAAD,CAAQF,SAAU,SAAA3lB,GAAK,OAAIkW,EpCidtB,SAAClW,GAC1B,MAAO,CACHnE,KAAMxD,EACN2H,MAAOA,GoCpd6C8lB,CAAc9lB,QAGzDqM,GAAmBqC,EAAA9H,EAAAlE,cAAC4hB,GAAA,EAAD,CAAUf,GAAG,WAlBjDqC,EAAA,CAAgCjX,aA0BjBkH,eAFS,SAACtL,GAAD,MAAmB,CAAE8B,gBAAiB9B,EAAMiD,KAAKnB,kBAE1DwJ,CAAyB+P,IChB3BG,GAAb,SAAA3J,GAAA,SAAA2J,IAAA,OAAAnhB,OAAAmK,GAAA,EAAAnK,CAAAoK,KAAA+W,GAAAnhB,OAAAqK,GAAA,EAAArK,CAAAoK,KAAApK,OAAAsK,GAAA,EAAAtK,CAAAmhB,GAAAtJ,MAAAzN,KAAA7B,YAAA,OAAAvI,OAAAiY,GAAA,EAAAjY,CAAAmhB,EAAA3J,GAAAxX,OAAAkY,GAAA,EAAAlY,CAAAmhB,EAAA,EAAA7K,IAAA,oBAAA3C,MAAA,WAEQvJ,KAAKH,MAAMqH,SrCocR,CAAEra,KAAMjE,MqCtcnB,CAAAsjB,IAAA,SAAA3C,MAAA,WAKa,IACGlM,EAAoB2C,KAAKH,MAAzBxC,gBACR,OACIqC,EAAA9H,EAAAlE,cAACsjB,GAAA,EAAD,KACItX,EAAA9H,EAAAlE,cAAA,OAAKsS,UAAU,OACXtG,EAAA9H,EAAAlE,cAACujB,GAAD,KACIvX,EAAA9H,EAAAlE,cAACwjB,GAAD,CAAQ7Z,gBAAiBA,IACzBqC,EAAA9H,EAAAlE,cAACyjB,GAAA,EAAD,KACIzX,EAAA9H,EAAAlE,cAAC0jB,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW3B,KACjClW,EAAA9H,EAAAlE,cAAC0jB,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWrC,KACtCxV,EAAA9H,EAAAlE,cAAC0jB,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAWX,KACvClX,EAAA9H,EAAAlE,cAAC0jB,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAAYC,UAAW/C,KACzC9U,EAAA9H,EAAAlE,cAAC0jB,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,eAAeC,UAAW9D,KAC5C/T,EAAA9H,EAAAlE,cAAC0jB,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,aAAaC,UAAW1D,KAC1CnU,EAAA9H,EAAAlE,cAAC0jB,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAW9X,KACtCC,EAAA9H,EAAAlE,cAAC0jB,GAAA,EAAD,CAAOG,UAAWhB,MAEtB7W,EAAA9H,EAAAlE,cAAA,OAAKsS,UAAU,cAAf,6BAAwD,IAAIrN,MAAO6e,sBAtB3FT,EAAA,CAAyBpX,aAuCVkH,eATS,SAACtL,GAIrB,MAAO,CACH8B,gBAJa9B,EAATiD,KACAnB,kBAOGwJ,CAAyBkQ,ICnDpBU,QACa,cAA7B1kB,OAAO2kB,SAASC,UAEiB,UAA7B5kB,OAAO2kB,SAASC,UAEhB5kB,OAAO2kB,SAASC,SAASjE,MAAM,2DCPvC,IAAMkE,GCJC,WACH,IAAMC,EAAiBC,cACjBF,EAAQG,YACV9Z,GAEAlL,OAAOilB,6BACDC,YACIC,YAAgBL,GAEhB9kB,OAAOilB,gCAEXE,YAAgBL,IAG1B,OADAA,EAAeM,IAAIzgB,IACZkgB,EDVGQ,GAEdC,IAASC,OACL5Y,EAAA9H,EAAAlE,cAAC6kB,EAAA,EAAD,CAAUX,MAAOA,IACblY,EAAA9H,EAAAlE,cAAC8kB,GAAD,OAEJ/kB,SAASglB,eAAe,SD+GpB,kBAAmBC,WACnBA,UAAUC,cAAcC,MAAMznB,KAAK,SAAA0nB,GAC/BA,EAAaC,mCGhIzB7wB,EAAAC,QAAA,CAAkB2pB,QAAA,yBAAAC,SAAA,0BAAAxpB,OAAA,wBAAAI,KAAA,2CCAlBT,EAAAC,QAAA,CAAkB+d,gBAAA,yCAAAC,iCAAA,0DAAAC,sBAAA,+CAAAM,WAAA,yDCAlBxe,EAAAC,QAAA,CAAkBQ,KAAA,6BAAAH,SAAA,sDCAlBN,EAAAC,QAAA,CAAkB8kB,MAAA,sBAAAE,SAAA,yBAAAD,OAAA,4CCAlBhlB,EAAAC,QAAA,CAAkBQ,KAAA,2BAAAH,SAAA,+BAAAuK,OAAA,ujyNCAlB7K,EAAAC,QAAA,CAAkBorB,QAAA,yBAAAL,YAAA,6BAAApB,QAAA,8CCAlB5pB,EAAAC,QAAA,CAAkBkuB,OAAA,uBAAAC,KAAA,qBAAAlZ,SAAA","file":"static/js/main.cfdb3f77.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/resize.c1974254.svg\";","module.exports = __webpack_public_path__ + \"static/media/rotate.f3e2a3bc.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1Ltkv\",\"active\":\"Card_active__XOmoJ\",\"disabled\":\"Card_disabled__2Ob5l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fontFamily\":\"FontSelector_fontFamily__zlBcJ\",\"fontVariant\":\"FontSelector_fontVariant__2pA4n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarText_view__3s9r0\",\"disabled\":\"SidebarText_disabled__3efIG\"};","module.exports = __webpack_public_path__ + \"static/media/image.60f0926c.svg\";","module.exports = __webpack_public_path__ + \"static/media/text.f7f9443c.svg\";","import shortid from 'shortid';\nimport { Dispatch as ReduxDispatch } from 'redux';\n\nexport const INIT_REQUEST = 'INIT_REQUEST';\nexport const MESSAGE_DISPLAY = 'MESSAGE_DISPLAY';\nexport const MESSAGE_HIDE = 'MESSAGE_HIDE';\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\nexport const LOGOUT_FAILURE = 'LOGOUT_FAILURE';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const SIGNUP_REQUEST = 'SIGNUP_REQUEST';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAILURE = 'SIGNUP_FAILURE';\nexport const GAME_CREATE_REQUEST = 'GAME_CREATE_REQUEST';\nexport const GAME_CREATE_SUCCESS = 'GAME_CREATE_SUCCESS';\nexport const GAME_CREATE_FAILURE = 'GAME_CREATE_FAILURE';\nexport const GAME_LIST_SUCCESS = 'GAME_LIST_SUCCESS';\nexport const GAME_LIST_REQUEST = 'GAME_LIST_REQUEST';\nexport const GAME_LIST_FAILURE = 'GAME_LIST_FAILURE';\nexport const GAME_LIST_RESET = 'GAME_LIST_RESET';\nexport const GAME_SELECT_REQUEST = 'GAME_SELECT_REQUEST';\nexport const GAME_SELECT_SUCCESS = 'GAME_SELECT_SUCCESS';\nexport const GAME_SELECT_FAILURE = 'GAME_SELECT_FAILURE';\nexport const GAME_CREATE_PDF_REQUEST = 'GAME_CREATE_PDF_REQUEST';\nexport const GAME_CREATE_PDF_SUCCESS = 'GAME_CREATE_PDF_SUCCESS';\nexport const GAME_CREATE_PDF_FAILURE = 'GAME_CREATE_PDF_FAILURE';\nexport const CARDSET_CREATE_REQUEST = 'CARDSET_CREATE_REQUEST';\nexport const CARDSET_CREATE_SUCCESS = 'CARDSET_CREATE_SUCCESS';\nexport const CARDSET_CREATE_FAILURE = 'CARDSET_CREATE_FAILURE';\nexport const CARDSET_LIST_SUCCESS = 'CARDSET_LIST_SUCCESS';\nexport const CARDSET_LIST_REQUEST = 'CARDSET_LIST_REQUEST';\nexport const CARDSET_LIST_FAILURE = 'CARDSET_LIST_FAILURE';\nexport const CARDSET_LIST_RESET = 'CARDSET_LIST_RESET';\nexport const CARDSET_SELECT_REQUEST = 'CARDSET_SELECT_REQUEST';\nexport const CARDSET_SELECT_SUCCESS = 'CARDSET_SELECT_SUCCESS';\nexport const CARDSET_CREATE_CARD = 'CARDSET_CREATE_CARD';\nexport const CARDSET_CLONE_CARD = 'CARDSET_CLONE_CARD';\nexport const CARDSET_REMOVE_CARD = 'CARDSET_REMOVE_CARD';\nexport const CARDSET_UPDATE_CARD_COUNT = 'CARDSET_UPDATE_CARD_COUNT';\nexport const CARDSET_ADD_TEXT_PLACEHOLDER = 'CARDSET_ADD_TEXT_PLACEHOLDER';\nexport const CARDSET_ADD_IMAGE_PLACEHOLDER = 'CARDSET_ADD_IMAGE_PLACEHOLDER';\nexport const CARDSET_REMOVE_ACTIVE_PLACEHOLDER = 'CARDSET_REMOVE_ACTIVE_PLACEHOLDER';\nexport const CARDSET_CHANGE_WIDTH = 'CARDSET_CHANGE_WIDTH';\nexport const CARDSET_CHANGE_HEIGHT = 'CARDSET_CHANGE_HEIGHT';\nexport const CARDSET_CHANGE_PLACEHOLDER_POSITION = 'CARDSET_CHANGE_PLACEHOLDER_POSITION';\nexport const CARDSET_CHANGE_PLACEHOLDER_SIZE = 'CARDSET_CHANGE_PLACEHOLDER_SIZE';\nexport const CARDSET_CHANGE_PLACEHOLDER_ANGLE = 'CARDSET_CHANGE_PLACEHOLDER_ANGLE';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_ALIGN = 'CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_ALIGN';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_COLOR = 'CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_COLOR';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY = 'CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_VARIANT =\n    'CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_VARIANT';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY_AND_VARIANT =\n    'CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY_AND_VARIANT';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_SIZE = 'CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_SIZE';\nexport const CARDSET_CHANGE_TEXT = 'CARDSET_CHANGE_TEXT';\nexport const CARDSET_CHANGE_IMAGE = 'CARDSET_CHANGE_IMAGE';\nexport const CARDSET_SET_ACTIVE_CARD_AND_PLACEHOLDER = 'CARDSET_SET_ACTIVE_CARD_AND_PLACEHOLDER';\nexport const CARDSET_UPDATE_DATA_REQUEST = 'CARDSET_UPDATE_DATA_REQUEST';\nexport const CARDSET_UPDATE_DATA_SUCCESS = 'CARDSET_UPDATE_DATA_SUCCESS';\nexport const CARDSET_UPDATE_DATA_FAILURE = 'CARDSET_UPDATE_DATA_FAILURE';\nexport const CARDSET_SELECT_FAILURE = 'CARDSET_SELECT_FAILURE';\nexport const CARDSET_SET_SIDEBAR_STATE = 'CARDSET_SET_SIDEBAR_STATE';\nexport const CARDSET_SET_ZOOM = 'CARDSET_SET_ZOOM';\nexport const IMAGE_LIST_REQUEST = 'IMAGE_LIST_REQUEST';\nexport const IMAGE_LIST_SUCCESS = 'IMAGE_LIST_SUCCESS';\nexport const IMAGE_LIST_FAILURE = 'IMAGE_LIST_FAILURE';\n\n// Data types\n\nexport type IdsArray = string[];\n\nexport interface MessageType {\n    id: string;\n    type: string;\n    text: string;\n}\n\nexport interface GameType {\n    id: string;\n    name: string;\n}\n\nexport interface GamesCollection {\n    [propName: string]: GameType;\n}\n\nexport interface TextPlaceholderType {\n    id: string;\n    type: 'text';\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    angle: number;\n    align: string;\n    color: string;\n    fontFamily: string;\n    fontVariant: string;\n    fontSize: number;\n}\n\nexport interface ImagePlaceholderType {\n    id: string;\n    type: 'image';\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    angle: number;\n}\n\nexport type PlaceholderType = TextPlaceholderType | ImagePlaceholderType;\n\nexport interface PlaceholdersCollection {\n    [propName: string]: PlaceholderType;\n}\n\nexport interface TextInfo {\n    value: string;\n}\n\nexport interface PlaceholdersTextInfoCollection {\n    [propName: string]: TextInfo;\n}\n\nexport interface PlaceholdersTextInfoByCardCollection {\n    [propName: string]: PlaceholdersTextInfoCollection;\n}\n\nexport interface ImageInfo {\n    url: string;\n}\n\nexport interface PlaceholdersImageInfoCollection {\n    [propName: string]: ImageInfo;\n}\n\nexport interface PlaceholdersImageInfoByCardCollection {\n    [propName: string]: PlaceholdersImageInfoCollection;\n}\n\nexport interface CardType {\n    id: string;\n    count: number;\n}\n\nexport interface CardsCollection {\n    [propName: string]: CardType;\n}\n\nexport interface CardSetType {\n    id: string;\n    name: string;\n}\n\nexport interface CardSetsCollection {\n    [propName: string]: CardSetType;\n}\n\nexport interface Credentials {\n    username: string;\n    password: string;\n}\n\nexport interface Image {\n    id: number;\n    name: string;\n}\n\nexport type ImageArray = Image[];\n\n// Actions\n\nexport interface InitAction {\n    type: typeof INIT_REQUEST;\n}\n\nexport type MessageAction =\n    | { type: typeof MESSAGE_DISPLAY; message: MessageType }\n    | { type: typeof MESSAGE_HIDE; message: MessageType };\n\nexport interface LoginRequest {\n    type: typeof LOGIN_REQUEST;\n    creds: Credentials;\n}\nexport type LoginAction =\n    | LoginRequest\n    | { type: typeof LOGIN_SUCCESS }\n    | { type: typeof LOGIN_FAILURE; message: string }\n    | { type: typeof LOGOUT_REQUEST }\n    | { type: typeof LOGOUT_FAILURE }\n    | { type: typeof LOGOUT_SUCCESS };\n\nexport interface SignUpRequest {\n    type: typeof SIGNUP_REQUEST;\n    creds: Credentials;\n}\nexport type SignUpAction = SignUpRequest | { type: typeof SIGNUP_SUCCESS } | { type: typeof SIGNUP_FAILURE };\n\nexport interface GameCreateRequest {\n    type: typeof GAME_CREATE_REQUEST;\n    gamename: string;\n}\nexport type GameCreateAction =\n    | GameCreateRequest\n    | { type: typeof GAME_CREATE_SUCCESS }\n    | { type: typeof GAME_CREATE_FAILURE };\n\nexport interface GameListSuccess {\n    type: typeof GAME_LIST_SUCCESS;\n    byId: GamesCollection;\n    allIds: IdsArray;\n}\nexport type GameListAction =\n    | { type: typeof GAME_LIST_REQUEST }\n    | GameListSuccess\n    | { type: typeof GAME_LIST_FAILURE }\n    | { type: typeof GAME_LIST_RESET };\n\nexport interface GameSelectRequest {\n    type: typeof GAME_SELECT_REQUEST;\n    id: string;\n    updateCardSets: boolean;\n}\nexport type GameSelectAction =\n    | GameSelectRequest\n    | { type: typeof GAME_SELECT_SUCCESS; id: string }\n    | { type: typeof GAME_SELECT_FAILURE };\n\nexport interface GameCreatePdfRequest {\n    type: typeof GAME_CREATE_PDF_REQUEST;\n    pageWidth: number;\n    pageHeight: number;\n    topBottomMargin: number;\n    leftRightMargin: number;\n}\n\nexport type GameCreatePdfAction =\n    | GameCreatePdfRequest\n    | { type: typeof GAME_CREATE_PDF_SUCCESS }\n    | { type: typeof GAME_CREATE_PDF_FAILURE };\n\nexport type GameAction = GameCreateAction | GameListAction | GameSelectAction | GameCreatePdfAction;\n\nexport interface CardSetCreateRequest {\n    type: typeof CARDSET_CREATE_REQUEST;\n    cardsetname: string;\n    width: number;\n    height: number;\n    gameId: string;\n}\nexport type CardSetCreateAction =\n    | CardSetCreateRequest\n    | { type: typeof CARDSET_CREATE_SUCCESS }\n    | { type: typeof CARDSET_CREATE_FAILURE };\n\nexport interface CardSetListSuccess {\n    type: typeof CARDSET_LIST_SUCCESS;\n    byId: CardSetsCollection;\n    allIds: IdsArray;\n}\nexport type CardSetListAction =\n    | { type: typeof CARDSET_LIST_REQUEST }\n    | CardSetListSuccess\n    | { type: typeof CARDSET_LIST_FAILURE }\n    | { type: typeof CARDSET_LIST_RESET };\n\nexport interface CardSetSelectRequest {\n    type: typeof CARDSET_SELECT_REQUEST;\n    id: string;\n}\nexport interface CardSetSelectSuccess {\n    type: typeof CARDSET_SELECT_SUCCESS;\n    id: string;\n    name: string;\n    data: {\n        width: number;\n        height: number;\n        cardsAllIds: IdsArray;\n        cardsById: CardsCollection;\n        placeholders: PlaceholdersCollection;\n        texts: PlaceholdersTextInfoByCardCollection;\n        images: PlaceholdersImageInfoByCardCollection;\n    };\n    gameId: string;\n}\nexport interface CardSetCreateCard {\n    type: typeof CARDSET_CREATE_CARD;\n    card: CardType;\n}\nexport interface CardSetCloneCard {\n    type: typeof CARDSET_CLONE_CARD;\n    card: CardType;\n}\nexport interface CardSetRemoveCard {\n    type: typeof CARDSET_REMOVE_CARD;\n    card: CardType;\n}\nexport interface CardSetUpdateCardCount {\n    type: typeof CARDSET_UPDATE_CARD_COUNT;\n    card: CardType;\n    count: number;\n}\nexport interface CardSetAddTextPlaceholder {\n    type: typeof CARDSET_ADD_TEXT_PLACEHOLDER;\n}\nexport interface CardSetAddImagePlaceholder {\n    type: typeof CARDSET_ADD_IMAGE_PLACEHOLDER;\n}\nexport interface CardSetRemoveActivePlaceholder {\n    type: typeof CARDSET_REMOVE_ACTIVE_PLACEHOLDER;\n}\n\nexport interface CardSetChangeWidth {\n    type: typeof CARDSET_CHANGE_WIDTH;\n    width: number;\n}\n\nexport interface CardSetChangeHeight {\n    type: typeof CARDSET_CHANGE_HEIGHT;\n    height: number;\n}\n\nexport interface CardSetChangePlaceholderPosition {\n    type: typeof CARDSET_CHANGE_PLACEHOLDER_POSITION;\n    placeholder: PlaceholderType;\n    x: number;\n    y: number;\n}\nexport interface CardSetChangePlaceholderSize {\n    type: typeof CARDSET_CHANGE_PLACEHOLDER_SIZE;\n    placeholder: PlaceholderType;\n    width: number;\n    height: number;\n}\nexport interface CardSetChangePlaceholderAngle {\n    type: typeof CARDSET_CHANGE_PLACEHOLDER_ANGLE;\n    placeholder: PlaceholderType;\n    angle: number;\n}\nexport interface CardSetChangeActiveTextPlaceholderAlign {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_ALIGN;\n    align: string;\n}\nexport interface CardSetChangeActiveTextPlaceholderColor {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_COLOR;\n    color: string;\n}\nexport interface CardSetChangeActiveTextPlaceholderFontFamily {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY;\n    fontFamily: string;\n}\nexport interface CardSetChangeActiveTextPlaceholderFontVariant {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_VARIANT;\n    fontVariant: string;\n}\nexport interface CardSetChangeActiveTextPlaceholderFontFamilyAndVariant {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY_AND_VARIANT;\n    fontFamily: string;\n    fontVariant: string;\n}\nexport interface CardSetChangeActiveTextPlaceholderFontSize {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_SIZE;\n    fontSize: number;\n}\nexport interface CardSetChangeText {\n    type: typeof CARDSET_CHANGE_TEXT;\n    cardId: string;\n    placeholderId: string;\n    textInfo: TextInfo;\n}\nexport interface CardSetChangeImage {\n    type: typeof CARDSET_CHANGE_IMAGE;\n    cardId: string;\n    placeholderId: string;\n    imageInfo: ImageInfo;\n}\nexport interface CardSetSetActiveCardAndPlaceholder {\n    type: typeof CARDSET_SET_ACTIVE_CARD_AND_PLACEHOLDER;\n    cardId: string | null;\n    placeholderId: string | null;\n}\n\nexport enum SidebarState {\n    Details,\n    Image,\n    Text,\n}\nexport interface CardSetSetSidebarState {\n    type: typeof CARDSET_SET_SIDEBAR_STATE;\n    sidebarState: SidebarState | null;\n}\nexport interface CardSetSetZoom {\n    type: typeof CARDSET_SET_ZOOM;\n    zoom: number;\n}\n\nexport type CardSetSelectAction = CardSetSelectRequest | CardSetSelectSuccess | { type: typeof CARDSET_SELECT_FAILURE };\n\nexport interface CardSetUpdateDataRequest {\n    type: typeof CARDSET_UPDATE_DATA_REQUEST;\n}\nexport interface CardSetUpdateDataSuccess {\n    type: typeof CARDSET_UPDATE_DATA_SUCCESS;\n}\nexport interface CardSetUpdateDataFailure {\n    type: typeof CARDSET_UPDATE_DATA_FAILURE;\n}\nexport type CardSetUpdateDataAction = CardSetUpdateDataRequest | CardSetUpdateDataSuccess | CardSetUpdateDataFailure;\n\nexport type CardSetModifyAction =\n    | CardSetCreateCard\n    | CardSetCloneCard\n    | CardSetRemoveCard\n    | CardSetUpdateCardCount\n    | CardSetAddTextPlaceholder\n    | CardSetAddImagePlaceholder\n    | CardSetRemoveActivePlaceholder\n    | CardSetChangeWidth\n    | CardSetChangeHeight\n    | CardSetChangePlaceholderPosition\n    | CardSetChangePlaceholderSize\n    | CardSetChangePlaceholderAngle\n    | CardSetChangeActiveTextPlaceholderAlign\n    | CardSetChangeActiveTextPlaceholderColor\n    | CardSetChangeActiveTextPlaceholderFontFamily\n    | CardSetChangeActiveTextPlaceholderFontVariant\n    | CardSetChangeActiveTextPlaceholderFontFamilyAndVariant\n    | CardSetChangeActiveTextPlaceholderFontSize\n    | CardSetChangeText\n    | CardSetChangeImage\n    | CardSetSetActiveCardAndPlaceholder\n    | CardSetSetSidebarState\n    | CardSetSetZoom;\n\nexport type CardSetAction =\n    | CardSetCreateAction\n    | CardSetListAction\n    | CardSetSelectAction\n    | CardSetUpdateDataAction\n    | CardSetModifyAction;\n\nexport interface ImageListRequest {\n    type: typeof IMAGE_LIST_REQUEST;\n    filter: string;\n}\nexport interface ImageListSuccess {\n    type: typeof IMAGE_LIST_SUCCESS;\n    images: ImageArray;\n}\nexport type ImageListAction = ImageListRequest | ImageListSuccess | { type: typeof IMAGE_LIST_FAILURE };\n\nexport type Action =\n    | InitAction\n    | LoginAction\n    | SignUpAction\n    | GameAction\n    | CardSetAction\n    | ImageListAction\n    | MessageAction;\n\nexport type Dispatch = ReduxDispatch<Action>;\n\nexport const messageRequest = (type: string, text: string): MessageAction => {\n    return {\n        type: MESSAGE_DISPLAY,\n        message: {\n            id: shortid.generate(),\n            type: type,\n            text: text,\n        },\n    };\n};\n\nexport const initRequest = (): InitAction => {\n    return { type: INIT_REQUEST };\n};\n\nexport const loginRequest = (creds: Credentials): LoginAction => {\n    return {\n        type: LOGIN_REQUEST,\n        creds: creds,\n    };\n};\n\nexport const logoutRequest = (): LoginAction => {\n    return {\n        type: LOGOUT_REQUEST,\n    };\n};\n\nexport const signupRequest = (creds: Credentials): SignUpAction => {\n    return {\n        type: SIGNUP_REQUEST,\n        creds: creds,\n    };\n};\n\nexport const gameCreateRequest = (gamename: string): GameAction => {\n    return {\n        type: GAME_CREATE_REQUEST,\n        gamename: gamename,\n    };\n};\n\nexport const gameListRequest = (): GameAction => {\n    return {\n        type: GAME_LIST_REQUEST,\n    };\n};\n\nexport const gameSelectRequest = (id: string, updateCardSets: boolean): GameAction => {\n    return {\n        type: GAME_SELECT_REQUEST,\n        id,\n        updateCardSets,\n    };\n};\n\nexport const gameCreatePdfRequest = (\n    pageWidth: number,\n    pageHeight: number,\n    topBottomMargin: number,\n    leftRightMargin: number,\n): GameCreatePdfRequest => {\n    return {\n        type: GAME_CREATE_PDF_REQUEST,\n        pageWidth,\n        pageHeight,\n        topBottomMargin,\n        leftRightMargin,\n    };\n};\n\nexport const cardSetCreateRequest = (\n    cardsetname: string,\n    width: number,\n    height: number,\n    gameId: string,\n): CardSetAction => {\n    return {\n        type: CARDSET_CREATE_REQUEST,\n        cardsetname: cardsetname,\n        width,\n        height,\n        gameId,\n    };\n};\n\nexport const cardSetSelectRequest = (id: string): CardSetSelectRequest => {\n    return {\n        type: CARDSET_SELECT_REQUEST,\n        id,\n    };\n};\n\nexport const cardSetCreateCard = (card: CardType): CardSetCreateCard => {\n    return {\n        type: CARDSET_CREATE_CARD,\n        card,\n    };\n};\n\nexport const cardSetCloneCard = (card: CardType): CardSetCloneCard => {\n    return {\n        type: CARDSET_CLONE_CARD,\n        card,\n    };\n};\n\nexport const cardSetRemoveCard = (card: CardType): CardSetRemoveCard => {\n    return {\n        type: CARDSET_REMOVE_CARD,\n        card,\n    };\n};\n\nexport const cardSetUpdateCardCount = (card: CardType, count: number): CardSetUpdateCardCount => {\n    return {\n        type: CARDSET_UPDATE_CARD_COUNT,\n        card,\n        count,\n    };\n};\n\nexport const cardSetAddTextPlaceholder = (): CardSetAddTextPlaceholder => {\n    return {\n        type: CARDSET_ADD_TEXT_PLACEHOLDER,\n    };\n};\n\nexport const cardSetAddImagePlaceholder = (): CardSetAddImagePlaceholder => {\n    return {\n        type: CARDSET_ADD_IMAGE_PLACEHOLDER,\n    };\n};\n\nexport const cardSetRemoveActivePlaceholder = (): CardSetRemoveActivePlaceholder => {\n    return {\n        type: CARDSET_REMOVE_ACTIVE_PLACEHOLDER,\n    };\n};\n\nexport const cardSetChangeWidth = (width: number): CardSetChangeWidth => {\n    return {\n        type: CARDSET_CHANGE_WIDTH,\n        width,\n    };\n};\n\nexport const cardSetChangeHeight = (height: number): CardSetChangeHeight => {\n    return {\n        type: CARDSET_CHANGE_HEIGHT,\n        height,\n    };\n};\n\nexport const cardSetChangePlaceholderPosition = (\n    placeholder: PlaceholderType,\n    x: number,\n    y: number,\n): CardSetChangePlaceholderPosition => {\n    return {\n        type: CARDSET_CHANGE_PLACEHOLDER_POSITION,\n        placeholder,\n        x,\n        y,\n    };\n};\n\nexport const cardSetChangePlaceholderSize = (\n    placeholder: PlaceholderType,\n    width: number,\n    height: number,\n): CardSetChangePlaceholderSize => {\n    return {\n        type: CARDSET_CHANGE_PLACEHOLDER_SIZE,\n        placeholder,\n        width,\n        height,\n    };\n};\n\nexport const cardSetChangePlaceholderAngle = (\n    placeholder: PlaceholderType,\n    angle: number,\n): CardSetChangePlaceholderAngle => {\n    return {\n        type: CARDSET_CHANGE_PLACEHOLDER_ANGLE,\n        placeholder,\n        angle,\n    };\n};\n\nexport const cardSetChangeActiveTextPlaceholderAlign = (align: string): CardSetChangeActiveTextPlaceholderAlign => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_ALIGN,\n        align,\n    };\n};\n\nexport const cardSetChangeActiveTextPlaceholderColor = (color: string): CardSetChangeActiveTextPlaceholderColor => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_COLOR,\n        color,\n    };\n};\n\nexport const cardSetChangeActiveTextPlaceholderFontFamily = (\n    fontFamily: string,\n): CardSetChangeActiveTextPlaceholderFontFamily => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY,\n        fontFamily,\n    };\n};\n\nexport const cardSetChangeActiveTextPlaceholderFontVariant = (\n    fontVariant: string,\n): CardSetChangeActiveTextPlaceholderFontVariant => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_VARIANT,\n        fontVariant,\n    };\n};\n\nexport const cardSetChangeActiveTextPlaceholderFontFamilyAndVariant = (\n    fontFamily: string,\n    fontVariant: string,\n): CardSetChangeActiveTextPlaceholderFontFamilyAndVariant => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY_AND_VARIANT,\n        fontFamily,\n        fontVariant,\n    };\n};\n\nexport const cardSetChangeActiveTextPlaceholderFontSize = (\n    fontSize: number,\n): CardSetChangeActiveTextPlaceholderFontSize => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_SIZE,\n        fontSize,\n    };\n};\n\nexport const cardSetChangeText = (cardId: string, placeholderId: string, textInfo: TextInfo): CardSetChangeText => {\n    return {\n        type: CARDSET_CHANGE_TEXT,\n        cardId,\n        placeholderId,\n        textInfo,\n    };\n};\n\nexport const cardSetChangeImage = (cardId: string, placeholderId: string, imageInfo: ImageInfo): CardSetChangeImage => {\n    return {\n        type: CARDSET_CHANGE_IMAGE,\n        cardId,\n        placeholderId,\n        imageInfo,\n    };\n};\n\nexport const cardSetActiveCardAndPlaceholder = (\n    cardId: string | null,\n    placeholderId: string | null,\n): CardSetSetActiveCardAndPlaceholder => {\n    return {\n        type: CARDSET_SET_ACTIVE_CARD_AND_PLACEHOLDER,\n        cardId,\n        placeholderId,\n    };\n};\n\nexport const cardSetSetSidebarState = (sidebarState: SidebarState | null): CardSetSetSidebarState => {\n    return {\n        type: CARDSET_SET_SIDEBAR_STATE,\n        sidebarState,\n    };\n};\n\nexport const cardSetSetZoom = (zoom: number): CardSetSetZoom => {\n    return {\n        type: CARDSET_SET_ZOOM,\n        zoom,\n    };\n};\n\nexport const imageListRequest = (filter: string): ImageListAction => {\n    return {\n        type: IMAGE_LIST_REQUEST,\n        filter,\n    };\n};\n","import axios, { AxiosError } from 'axios';\n\nimport { Credentials } from './actions';\n\nexport function handleAxiosError(error: AxiosError) {\n    if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        // error.response.status);\n        throw new Error(error.response.data.message);\n    } else if (error.request) {\n        console.log(error.request);\n        throw new Error(error.request);\n    } else {\n        throw new Error('Unknown error :(');\n    }\n}\n\nexport function getTokens(creds: Credentials) {\n    return axios\n        .post('/api/tokens', creds)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function refreshToken(refreshTokenValue: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${refreshTokenValue}` },\n    };\n    return axios\n        .post('/api/access_tokens', {}, config)\n        .then(resp => {\n            return resp.data.accessToken;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function deleteAccessToken(token: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .delete('/api/access_tokens', config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            if (error.response.status === 401) return {};\n            handleAxiosError(error);\n        });\n}\n\nexport function deleteRefreshToken(token: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .delete('/api/refresh_tokens', config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            if (error.response.status === 401) return {};\n            handleAxiosError(error);\n        });\n}\n\nexport function registerUser(creds: Credentials) {\n    return axios\n        .post('/api/users', creds)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function getRequest(url: string, token: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .get(url, config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function postRequest(url: string, token: string, data: object) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .post(url, data, config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function putRequest(url: string, token: string, data: object) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .put(url, data, config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n","import {\n    CardsCollection,\n    PlaceholdersCollection,\n    PlaceholdersImageInfoByCardCollection,\n    PlaceholdersTextInfoByCardCollection,\n} from './actions';\n\nexport const generatePdfUsingWorker = (\n    width: number,\n    height: number,\n    cardsAllIds: string[],\n    cardsById: CardsCollection,\n    placeholders: PlaceholdersCollection,\n    texts: PlaceholdersTextInfoByCardCollection,\n    images: PlaceholdersImageInfoByCardCollection,\n    pageWidth: number,\n    pageHeight: number,\n    topBottomMargin: number,\n    leftRightMargin: number,\n) => {\n    // @ts-ignore\n    if (!window.Worker) {\n        throw new Error('We can not generate PDF because of browser you use. Try using different browser');\n    }\n\n    return new Promise((resolve, reject) => {\n        try {\n            const worker = new Worker('/js/worker.js');\n            worker.addEventListener('message', event => {\n                const blobURL = event.data;\n\n                const tempLink = document.createElement('a');\n                tempLink.style.display = 'none';\n                tempLink.href = blobURL;\n                tempLink.setAttribute('download', 'card.pdf');\n                if (typeof tempLink.download === 'undefined') {\n                    tempLink.setAttribute('target', '_blank');\n                }\n                document.body.appendChild(tempLink);\n                tempLink.click();\n                document.body.removeChild(tempLink);\n                setTimeout(() => {\n                    window.URL.revokeObjectURL(blobURL);\n                    resolve();\n                }, 100);\n            });\n\n            worker.postMessage({\n                width,\n                height,\n                cardsAllIds,\n                cardsById,\n                placeholders,\n                texts,\n                images,\n                pageWidth,\n                pageHeight,\n                topBottomMargin,\n                leftRightMargin,\n            });\n        } catch (e) {\n            reject(e);\n        }\n    });\n};\n","export function saveTokens(data: { accessToken: string; refreshToken: string }) {\n    localStorage.setItem('accessToken', data.accessToken);\n    localStorage.setItem('refreshToken', data.refreshToken);\n}\n\nexport function saveAccessToken(accessToken: string) {\n    localStorage.setItem('accessToken', accessToken);\n}\n\nexport function cleanTokens() {\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n}\n\nexport function getTokenFromStorage() {\n    let token = localStorage.getItem('accessToken') || null;\n    return token;\n}\n\nexport function getRefreshTokenFromStorage() {\n    let token = localStorage.getItem('refreshToken') || null;\n    return token;\n}\n","import WebFont from 'webfontloader';\n\nimport { PlaceholdersCollection } from './actions';\n\nexport const DEFAULT_FONT = 'Roboto';\nexport const DEFAULT_FONT_VARIANT = 'regular';\nexport const DEFAULT_FONT_SIZE = 8;\n\nconst webFontsLoadPromise = (config: WebFont.Config) =>\n    new Promise((resolve, reject) => {\n        WebFont.load({ ...config, active: resolve, inactive: reject });\n    });\n\nexport const loadFontsUsedInPlaceholders = (data: { placeholders: PlaceholdersCollection }) => {\n    let fontsToLoad: Set<string> = new Set();\n    fontsToLoad.add(DEFAULT_FONT);\n    for (const plId in data.placeholders) {\n        const pl = data.placeholders[plId];\n        if (pl.type === 'text' && pl.fontFamily) {\n            let fontToLoad = pl.fontFamily;\n            if (pl.fontVariant && pl.fontVariant !== 'regular') {\n                fontToLoad += ':' + pl.fontVariant;\n            }\n\n            fontsToLoad.add(fontToLoad);\n        }\n    }\n\n    const config: WebFont.Config = {\n        google: {\n            families: [...Array.from(fontsToLoad)],\n        },\n    };\n\n    return webFontsLoadPromise(config);\n};\n","import { all, call, put, select, takeEvery, takeLatest } from 'redux-saga/effects';\nimport { delay, SagaIterator } from 'redux-saga';\nimport jwtDecode from 'jwt-decode';\n\nimport {\n    CARDSET_ADD_IMAGE_PLACEHOLDER,\n    CARDSET_ADD_TEXT_PLACEHOLDER,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_ALIGN,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_COLOR,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY_AND_VARIANT,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_SIZE,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_VARIANT,\n    CARDSET_CHANGE_HEIGHT,\n    CARDSET_CHANGE_IMAGE,\n    CARDSET_CHANGE_PLACEHOLDER_ANGLE,\n    CARDSET_CHANGE_PLACEHOLDER_POSITION,\n    CARDSET_CHANGE_PLACEHOLDER_SIZE,\n    CARDSET_CHANGE_TEXT,\n    CARDSET_CHANGE_WIDTH,\n    CARDSET_CLONE_CARD,\n    CARDSET_CREATE_CARD,\n    CARDSET_CREATE_FAILURE,\n    CARDSET_CREATE_REQUEST,\n    CARDSET_CREATE_SUCCESS,\n    CARDSET_LIST_RESET,\n    CARDSET_LIST_SUCCESS,\n    CARDSET_REMOVE_ACTIVE_PLACEHOLDER,\n    CARDSET_REMOVE_CARD,\n    CARDSET_SELECT_FAILURE,\n    CARDSET_SELECT_REQUEST,\n    CARDSET_SELECT_SUCCESS,\n    CARDSET_UPDATE_CARD_COUNT,\n    CARDSET_UPDATE_DATA_FAILURE,\n    CARDSET_UPDATE_DATA_REQUEST,\n    CARDSET_UPDATE_DATA_SUCCESS,\n    CardSetCreateRequest,\n    CardSetSelectRequest,\n    CardSetType,\n    CardSetsCollection,\n    GAME_CREATE_FAILURE,\n    GAME_CREATE_PDF_FAILURE,\n    GAME_CREATE_PDF_REQUEST,\n    GAME_CREATE_PDF_SUCCESS,\n    GAME_CREATE_REQUEST,\n    GAME_CREATE_SUCCESS,\n    GAME_LIST_FAILURE,\n    GAME_LIST_REQUEST,\n    GAME_LIST_RESET,\n    GAME_LIST_SUCCESS,\n    GAME_SELECT_FAILURE,\n    GAME_SELECT_REQUEST,\n    GAME_SELECT_SUCCESS,\n    GameCreatePdfRequest,\n    GameCreateRequest,\n    GameSelectRequest,\n    GameType,\n    GamesCollection,\n    IMAGE_LIST_FAILURE,\n    IMAGE_LIST_REQUEST,\n    IMAGE_LIST_SUCCESS,\n    INIT_REQUEST,\n    ImageListRequest,\n    LOGIN_FAILURE,\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGOUT_FAILURE,\n    LOGOUT_REQUEST,\n    LOGOUT_SUCCESS,\n    LoginRequest,\n    MESSAGE_DISPLAY,\n    MESSAGE_HIDE,\n    MessageAction,\n    SIGNUP_FAILURE,\n    SIGNUP_REQUEST,\n    SIGNUP_SUCCESS,\n    SignUpRequest,\n    gameSelectRequest,\n    messageRequest,\n} from './actions';\nimport {\n    deleteAccessToken,\n    deleteRefreshToken,\n    getRequest,\n    getTokens,\n    postRequest,\n    putRequest,\n    refreshToken,\n    registerUser,\n} from './requests';\nimport { generatePdfUsingWorker } from './workerController';\nimport { getTokenFromStorage, getRefreshTokenFromStorage, saveAccessToken, saveTokens, cleanTokens } from './storage';\nimport { loadFontsUsedInPlaceholders } from './fontLoader';\n\n// Messages\nexport function* putError(message: string): SagaIterator {\n    yield put(messageRequest('error', message));\n}\n\nexport function* handleMessageDisplay(action: MessageAction): SagaIterator {\n    yield call(delay, 5000);\n    yield put({ type: MESSAGE_HIDE, message: action.message });\n}\n\n// Login & Signup\n// Token handling\n\nexport function validateToken(token: string): boolean {\n    try {\n        const decoded = jwtDecode<{ exp: number }>(token);\n        const valid = decoded.exp - new Date().getTime() / 1000 > 5;\n        return valid;\n    } catch (e) {\n        return false;\n    }\n}\n\nexport function* getToken(withErrorIfMissing: boolean): SagaIterator {\n    const token = yield call(getTokenFromStorage);\n    if (token) {\n        const tokenValid = yield call(validateToken, token);\n        if (tokenValid) return token;\n    }\n\n    const refreshTokenValue = yield call(getRefreshTokenFromStorage);\n    if (!refreshTokenValue) {\n        if (withErrorIfMissing) throw new Error('Token not found.');\n        return null;\n    }\n\n    const refreshTokenValid = yield call(validateToken, refreshTokenValue);\n    if (!refreshTokenValid) {\n        yield put({ type: LOGOUT_REQUEST });\n        if (withErrorIfMissing) throw new Error('Token not found.');\n        return null;\n    }\n\n    const newToken = yield call(refreshToken, refreshTokenValue);\n    yield call(saveAccessToken, newToken);\n    return newToken;\n}\n\n// Login\n\nexport function* handleLoginRequest(action: LoginRequest): SagaIterator {\n    try {\n        const data = yield call(getTokens, action.creds);\n        yield call(saveTokens, data);\n        yield put({ type: LOGIN_SUCCESS });\n    } catch (e) {\n        yield put({ type: LOGIN_FAILURE });\n        yield call(putError, e.message);\n    }\n}\n\nexport function* handleLoginSuccess(): SagaIterator {\n    yield put({ type: GAME_LIST_REQUEST });\n}\n\n// Logout\n\nexport function* logoutToken(): SagaIterator {\n    const token = yield call(getTokenFromStorage);\n    if (token) {\n        const tokenValid = yield call(validateToken, token);\n        if (tokenValid) {\n            yield call(deleteAccessToken, token);\n        }\n    }\n}\n\nexport function* logoutRefreshToken(): SagaIterator {\n    const refreshTokenValue = yield call(getRefreshTokenFromStorage);\n    if (refreshTokenValue) {\n        const refreshTokenValid = yield call(validateToken, refreshTokenValue);\n        if (refreshTokenValid) {\n            yield call(deleteRefreshToken, refreshTokenValue);\n        }\n    }\n}\n\nexport function* handleLogoutRequest(): SagaIterator {\n    try {\n        yield call(logoutToken);\n        yield call(logoutRefreshToken);\n        yield call(cleanTokens);\n\n        yield put({ type: CARDSET_LIST_RESET });\n        yield put({ type: GAME_LIST_RESET });\n        yield put({ type: LOGOUT_SUCCESS });\n    } catch (e) {\n        yield put({ type: LOGOUT_FAILURE });\n        yield call(putError, e.message);\n    }\n}\n\n// Sign-up\n\nexport function* handleSignupRequest(action: SignUpRequest): SagaIterator {\n    try {\n        const data = yield call(registerUser, action.creds);\n        yield call(saveTokens, data);\n        yield put({ type: SIGNUP_SUCCESS });\n        yield put({ type: LOGIN_SUCCESS });\n    } catch (e) {\n        yield put({ type: SIGNUP_FAILURE });\n        yield call(putError, e.message);\n    }\n}\n\n// Init\nexport function* handleInitRequest(): SagaIterator {\n    try {\n        let token = yield call(getToken, false);\n        if (token) {\n            yield put({ type: LOGIN_SUCCESS });\n        }\n    } catch (e) {}\n}\n\n// Authorized Requests\nexport function* authorizedGetRequest(url: string): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(getRequest, url, token);\n}\n\nexport function* authorizedPostRequest(url: string, data: object): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(postRequest, url, token, data);\n}\n\nexport function* authorizedPutRequest(url: string, data: object): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(putRequest, url, token, data);\n}\n\n// Game\nexport function* handleGameCreateRequest(action: GameCreateRequest): SagaIterator {\n    try {\n        yield call(authorizedPostRequest, '/api/games', { name: action.gamename });\n        yield put({\n            type: GAME_CREATE_SUCCESS,\n        });\n        yield put({ type: GAME_LIST_REQUEST });\n    } catch (e) {\n        yield put({ type: GAME_CREATE_FAILURE });\n        yield call(putError, e.message);\n    }\n}\n\nexport function* handleGameListRequest(): SagaIterator {\n    try {\n        const data = yield call(authorizedGetRequest, '/api/games');\n        const allIds = data.games.map((g: GameType) => g.id);\n        const byId = data.games.reduce((obj: GamesCollection, g: GameType) => {\n            obj[g.id] = g;\n            return obj;\n        }, {});\n        yield put({\n            type: GAME_LIST_SUCCESS,\n            allIds,\n            byId,\n        });\n    } catch (e) {\n        yield put({ type: GAME_LIST_FAILURE });\n        yield call(putError, e.message);\n    }\n}\n\nexport function* handleGameSelectRequest(action: GameSelectRequest): SagaIterator {\n    try {\n        const data = yield call(authorizedGetRequest, '/api/games/' + action.id);\n        yield put({\n            type: GAME_SELECT_SUCCESS,\n            id: action.id,\n        });\n\n        if (action.updateCardSets) {\n            const allIds = data.cardsets.map((g: CardSetType) => g.id);\n            const byId = data.cardsets.reduce((obj: CardSetsCollection, g: CardSetType) => {\n                obj[g.id] = g;\n                return obj;\n            }, {});\n            yield put({\n                type: CARDSET_LIST_SUCCESS,\n                allIds,\n                byId,\n            });\n        }\n    } catch (e) {\n        yield put({ type: GAME_SELECT_FAILURE });\n        yield call(putError, e.message);\n    }\n}\n\nexport function* handleGameCreatePdfRequest(action: GameCreatePdfRequest): SagaIterator {\n    try {\n        const state = yield select();\n\n        yield call(\n            generatePdfUsingWorker,\n            state.cardsets.width,\n            state.cardsets.height,\n            state.cardsets.cardsAllIds,\n            state.cardsets.cardsById,\n            state.cardsets.placeholders,\n            state.cardsets.texts,\n            state.cardsets.images,\n            action.pageWidth,\n            action.pageHeight,\n            action.topBottomMargin,\n            action.leftRightMargin,\n        );\n        yield put({\n            type: GAME_CREATE_PDF_SUCCESS,\n        });\n    } catch (e) {\n        yield put({ type: GAME_CREATE_PDF_FAILURE });\n        yield call(putError, e.message);\n    }\n}\n\n// Card Set\n\nexport function* handleCardSetCreateRequest(action: CardSetCreateRequest): SagaIterator {\n    try {\n        yield call(authorizedPostRequest, '/api/cardsets', {\n            name: action.cardsetname,\n            gameId: action.gameId,\n            data: JSON.stringify({ width: action.width, height: action.height }),\n        });\n        yield put({\n            type: CARDSET_CREATE_SUCCESS,\n        });\n        yield put(gameSelectRequest(action.gameId, true));\n    } catch (e) {\n        yield put({ type: CARDSET_CREATE_FAILURE });\n        yield call(putError, e.message);\n    }\n}\n\nexport function* handleCardSetSelectRequest(action: CardSetSelectRequest): SagaIterator {\n    try {\n        const data = yield call(authorizedGetRequest, '/api/cardsets/' + action.id);\n        const parsedData = JSON.parse(data.data);\n        yield call(loadFontsUsedInPlaceholders, parsedData);\n        yield put({\n            type: CARDSET_SELECT_SUCCESS,\n            id: data.id,\n            name: data.name,\n            data: parsedData,\n        });\n        yield put(gameSelectRequest(data.gameId, false));\n    } catch (e) {\n        yield put({ type: CARDSET_SELECT_FAILURE });\n        yield call(putError, e.message);\n    }\n}\n\nexport function* handleCardSetChange(): SagaIterator {\n    try {\n        yield call(delay, 1000);\n        const state = yield select();\n\n        yield put({\n            type: CARDSET_UPDATE_DATA_REQUEST,\n        });\n\n        const cardsetId = state.cardsets.active;\n        const data = {\n            width: state.cardsets.width,\n            height: state.cardsets.height,\n            cardsAllIds: state.cardsets.cardsAllIds,\n            cardsById: state.cardsets.cardsById,\n            placeholders: state.cardsets.placeholders,\n            texts: state.cardsets.texts,\n            images: state.cardsets.images,\n        };\n\n        yield call(authorizedPutRequest, '/api/cardsets/' + cardsetId, {\n            name: state.cardsets.byId[cardsetId].name,\n            data: JSON.stringify(data),\n        });\n        yield put({\n            type: CARDSET_UPDATE_DATA_SUCCESS,\n        });\n    } catch (e) {\n        yield put({ type: CARDSET_UPDATE_DATA_FAILURE });\n        yield call(putError, e.message);\n    }\n}\n\n// Images\nexport function* handleImageListRequest(action: ImageListRequest): SagaIterator {\n    try {\n        yield call(delay, 200);\n        const data = yield call(authorizedGetRequest, '/api/images?name=' + action.filter);\n        const images = data.images;\n        yield put({\n            type: IMAGE_LIST_SUCCESS,\n            images,\n        });\n    } catch (e) {\n        yield put({ type: IMAGE_LIST_FAILURE });\n        yield call(putError, e.message);\n    }\n}\n\n// All\nexport function* rootSaga(): SagaIterator {\n    yield all([\n        takeEvery(MESSAGE_DISPLAY, handleMessageDisplay),\n        takeLatest(LOGIN_REQUEST, handleLoginRequest),\n        takeLatest(LOGIN_SUCCESS, handleLoginSuccess),\n        takeLatest(LOGOUT_REQUEST, handleLogoutRequest),\n        takeLatest(SIGNUP_REQUEST, handleSignupRequest),\n        takeLatest(GAME_CREATE_REQUEST, handleGameCreateRequest),\n        takeLatest(GAME_LIST_REQUEST, handleGameListRequest),\n        takeLatest(GAME_SELECT_REQUEST, handleGameSelectRequest),\n        takeLatest(GAME_CREATE_PDF_REQUEST, handleGameCreatePdfRequest),\n        takeLatest(CARDSET_CREATE_REQUEST, handleCardSetCreateRequest),\n        takeLatest(CARDSET_SELECT_REQUEST, handleCardSetSelectRequest),\n\n        takeLatest(CARDSET_CREATE_CARD, handleCardSetChange),\n        takeLatest(CARDSET_CLONE_CARD, handleCardSetChange),\n        takeLatest(CARDSET_REMOVE_CARD, handleCardSetChange),\n        takeLatest(CARDSET_UPDATE_CARD_COUNT, handleCardSetChange),\n        takeLatest(CARDSET_ADD_TEXT_PLACEHOLDER, handleCardSetChange),\n        takeLatest(CARDSET_ADD_IMAGE_PLACEHOLDER, handleCardSetChange),\n        takeLatest(CARDSET_REMOVE_ACTIVE_PLACEHOLDER, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_WIDTH, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_HEIGHT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_PLACEHOLDER_POSITION, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_PLACEHOLDER_SIZE, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_PLACEHOLDER_ANGLE, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_ALIGN, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_COLOR, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_VARIANT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY_AND_VARIANT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_SIZE, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_TEXT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_IMAGE, handleCardSetChange),\n\n        takeLatest(IMAGE_LIST_REQUEST, handleImageListRequest),\n\n        takeLatest(INIT_REQUEST, handleInitRequest),\n    ]);\n}\n","import { combineReducers } from 'redux';\nimport shortid from 'shortid';\n\nimport {\n    CARDSET_ADD_IMAGE_PLACEHOLDER,\n    CARDSET_ADD_TEXT_PLACEHOLDER,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_ALIGN,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_COLOR,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY_AND_VARIANT,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_SIZE,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_VARIANT,\n    CARDSET_CHANGE_HEIGHT,\n    CARDSET_CHANGE_IMAGE,\n    CARDSET_CHANGE_PLACEHOLDER_ANGLE,\n    CARDSET_CHANGE_PLACEHOLDER_POSITION,\n    CARDSET_CHANGE_PLACEHOLDER_SIZE,\n    CARDSET_CHANGE_TEXT,\n    CARDSET_CHANGE_WIDTH,\n    CARDSET_CLONE_CARD,\n    CARDSET_CREATE_CARD,\n    CARDSET_CREATE_FAILURE,\n    CARDSET_CREATE_REQUEST,\n    CARDSET_CREATE_SUCCESS,\n    CARDSET_LIST_FAILURE,\n    CARDSET_LIST_REQUEST,\n    CARDSET_LIST_RESET,\n    CARDSET_LIST_SUCCESS,\n    CARDSET_REMOVE_ACTIVE_PLACEHOLDER,\n    CARDSET_REMOVE_CARD,\n    CARDSET_SELECT_FAILURE,\n    CARDSET_SELECT_REQUEST,\n    CARDSET_SELECT_SUCCESS,\n    CARDSET_SET_ACTIVE_CARD_AND_PLACEHOLDER,\n    CARDSET_SET_SIDEBAR_STATE,\n    CARDSET_SET_ZOOM,\n    CARDSET_UPDATE_CARD_COUNT,\n    CARDSET_UPDATE_DATA_FAILURE,\n    CARDSET_UPDATE_DATA_REQUEST,\n    CARDSET_UPDATE_DATA_SUCCESS,\n    CardSetAction,\n    CardSetsCollection,\n    CardsCollection,\n    GAME_CREATE_FAILURE,\n    GAME_CREATE_PDF_FAILURE,\n    GAME_CREATE_PDF_REQUEST,\n    GAME_CREATE_PDF_SUCCESS,\n    GAME_CREATE_REQUEST,\n    GAME_CREATE_SUCCESS,\n    GAME_LIST_FAILURE,\n    GAME_LIST_REQUEST,\n    GAME_LIST_RESET,\n    GAME_LIST_SUCCESS,\n    GAME_SELECT_FAILURE,\n    GAME_SELECT_REQUEST,\n    GAME_SELECT_SUCCESS,\n    GameAction,\n    GamesCollection,\n    IMAGE_LIST_FAILURE,\n    IMAGE_LIST_REQUEST,\n    IMAGE_LIST_SUCCESS,\n    IdsArray,\n    ImageArray,\n    ImageListAction,\n    ImagePlaceholderType,\n    LOGIN_FAILURE,\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGOUT_SUCCESS,\n    LoginAction,\n    MESSAGE_DISPLAY,\n    MESSAGE_HIDE,\n    MessageAction,\n    MessageType,\n    PlaceholdersCollection,\n    PlaceholdersImageInfoByCardCollection,\n    PlaceholdersImageInfoCollection,\n    PlaceholdersTextInfoByCardCollection,\n    PlaceholdersTextInfoCollection,\n    SIGNUP_FAILURE,\n    SIGNUP_REQUEST,\n    SIGNUP_SUCCESS,\n    SidebarState,\n    SignUpAction,\n    TextPlaceholderType,\n} from './actions';\nimport { DEFAULT_FONT, DEFAULT_FONT_SIZE, DEFAULT_FONT_VARIANT } from './fontLoader';\n\nexport const ACTIVITY_CREATING = 0x1;\nexport const ACTIVITY_LISTING = 0x2;\nexport const ACTIVITY_SELECTING = 0x4;\nexport const ACTIVITY_CREATING_PDF = 0x8;\nexport const ACTIVITY_UPDATING = 0x10;\n\nexport interface MessageState {\n    messages: MessageType[];\n}\n\nexport const DefaultMessageState: MessageState = {\n    messages: [],\n};\n\nexport interface AuthState {\n    isAuthenticated: boolean;\n    user: string;\n}\n\nexport const DefaultAuthState: AuthState = {\n    isAuthenticated: false,\n    user: '',\n};\n\nexport interface SignUpState {\n    signingup: boolean;\n}\n\nexport const DefaultSignUpState: SignUpState = {\n    signingup: false,\n};\n\nexport interface GameState {\n    byId: GamesCollection;\n    allIds: IdsArray;\n    activity: number;\n    active: string | null;\n}\n\nexport const DefaultGameState: GameState = {\n    byId: {},\n    allIds: [],\n    activity: 0,\n    active: null,\n};\n\nexport interface TextSettings {\n    align: string;\n    color: string;\n    fontFamily: string;\n    fontVariant: string;\n    fontSize: number;\n}\n\nexport interface CardSetState {\n    width: number;\n    height: number;\n    byId: CardSetsCollection;\n    allIds: IdsArray;\n    activity: number;\n    active: string | null;\n    cardsAllIds: IdsArray;\n    cardsById: CardsCollection;\n    activeCard: string | null;\n    activePlaceholder: string | null;\n    placeholders: PlaceholdersCollection;\n    texts: PlaceholdersTextInfoByCardCollection;\n    images: PlaceholdersImageInfoByCardCollection;\n    textSettings: TextSettings;\n    activeSidebar: SidebarState | null;\n    zoom: number;\n}\n\nexport const DefaultCardSetState: CardSetState = {\n    width: 63.5,\n    height: 88.9,\n    byId: {},\n    allIds: [],\n    activity: 0,\n    active: null,\n    placeholders: {},\n    cardsById: {},\n    cardsAllIds: [],\n    activeCard: null,\n    activePlaceholder: null,\n    texts: {},\n    images: {},\n    textSettings: {\n        align: 'left',\n        color: '#000000',\n        fontFamily: DEFAULT_FONT,\n        fontVariant: DEFAULT_FONT_VARIANT,\n        fontSize: DEFAULT_FONT_SIZE,\n    },\n    activeSidebar: null,\n    zoom: 1,\n};\n\nexport interface ImageState {\n    activity: number;\n    filter: string;\n    images: ImageArray;\n}\n\nexport const DefaultImageState: ImageState = {\n    activity: 0,\n    filter: '',\n    images: [],\n};\n\nexport interface State {\n    message: MessageState;\n    auth: AuthState;\n    signup: SignUpState;\n    games: GameState;\n    cardsets: CardSetState;\n    images: ImageState;\n}\n\nexport const DefaultState: State = {\n    message: DefaultMessageState,\n    auth: DefaultAuthState,\n    signup: DefaultSignUpState,\n    games: DefaultGameState,\n    cardsets: DefaultCardSetState,\n    images: DefaultImageState,\n};\n\nexport function message(state: MessageState = DefaultMessageState, action: MessageAction): MessageState {\n    switch (action.type) {\n        case MESSAGE_DISPLAY:\n            return Object.assign({}, state, {\n                messages: state.messages.concat(action.message),\n            });\n        case MESSAGE_HIDE:\n            return Object.assign({}, state, {\n                messages: state.messages.filter(m => m.id !== action.message.id),\n            });\n        default:\n            return state;\n    }\n}\n\nexport function auth(state: AuthState = DefaultAuthState, action: LoginAction): AuthState {\n    switch (action.type) {\n        case LOGIN_REQUEST:\n            return Object.assign({}, state, {\n                isAuthenticated: false,\n                user: action.creds.username,\n            });\n        case LOGIN_SUCCESS:\n            return Object.assign({}, state, {\n                isAuthenticated: true,\n            });\n        case LOGIN_FAILURE:\n            return Object.assign({}, state, {\n                isAuthenticated: false,\n            });\n        case LOGOUT_SUCCESS:\n            return Object.assign({}, state, {\n                isAuthenticated: false,\n            });\n        default:\n            return state;\n    }\n}\n\nexport function signup(state: SignUpState = DefaultSignUpState, action: SignUpAction): SignUpState {\n    switch (action.type) {\n        case SIGNUP_REQUEST:\n            return Object.assign({}, state, {\n                signingup: true,\n            });\n        case SIGNUP_SUCCESS:\n            return Object.assign({}, state, {\n                signingup: false,\n            });\n        case SIGNUP_FAILURE:\n            return Object.assign({}, state, {\n                signingup: false,\n            });\n        default:\n            return state;\n    }\n}\n\nexport function games(state: GameState = DefaultGameState, action: GameAction): GameState {\n    switch (action.type) {\n        case GAME_CREATE_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_CREATING,\n            });\n        case GAME_CREATE_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING,\n            });\n        case GAME_CREATE_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING,\n            });\n        case GAME_LIST_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_LISTING,\n            });\n        case GAME_LIST_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_LISTING,\n                byId: action.byId,\n                allIds: action.allIds,\n            });\n        case GAME_LIST_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_LISTING,\n            });\n        case GAME_LIST_RESET:\n            return Object.assign({}, state, {\n                activity: 0,\n                byId: {},\n                allIds: [],\n            });\n        case GAME_SELECT_REQUEST:\n            return Object.assign({}, state, {\n                activity: ACTIVITY_SELECTING,\n            });\n        case GAME_SELECT_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_SELECTING,\n                active: action.id,\n            });\n        case GAME_SELECT_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_SELECTING,\n            });\n        case GAME_CREATE_PDF_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_CREATING_PDF,\n            });\n        case GAME_CREATE_PDF_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING_PDF,\n            });\n        case GAME_CREATE_PDF_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING_PDF,\n            });\n        default:\n            return state;\n    }\n}\n\nexport function cardsets(state: CardSetState = DefaultCardSetState, action: CardSetAction): CardSetState {\n    switch (action.type) {\n        case CARDSET_CREATE_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_CREATING,\n            });\n        case CARDSET_CREATE_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING,\n            });\n        case CARDSET_CREATE_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING,\n            });\n        case CARDSET_UPDATE_DATA_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_UPDATING,\n            });\n        case CARDSET_UPDATE_DATA_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_UPDATING,\n            });\n        case CARDSET_UPDATE_DATA_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_UPDATING,\n            });\n        case CARDSET_LIST_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_LISTING,\n            });\n        case CARDSET_LIST_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_LISTING,\n                byId: action.byId,\n                allIds: action.allIds,\n            });\n        case CARDSET_LIST_RESET:\n            return Object.assign({}, state, {\n                activity: 0,\n                byId: {},\n                allIds: [],\n            });\n        case CARDSET_LIST_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_LISTING,\n            });\n        case CARDSET_SELECT_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_SELECTING,\n            });\n        case CARDSET_SELECT_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_SELECTING,\n                active: action.id,\n                byId: Object.assign({}, state.byId, {\n                    [action.id]: {\n                        id: action.id,\n                        name: action.name,\n                    },\n                }),\n                width: action.data.width || 63.5,\n                height: action.data.height || 88.9,\n                cardsAllIds: action.data.cardsAllIds || [],\n                cardsById: action.data.cardsById || {},\n                placeholders: action.data.placeholders || {},\n                texts: action.data.texts || {},\n                images: action.data.images || {},\n                activeCard: null,\n                activePlaceholder: null,\n            });\n        case CARDSET_SELECT_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_SELECTING,\n            });\n        case CARDSET_CREATE_CARD:\n            return {\n                ...state,\n                cardsById: {\n                    ...state.cardsById,\n                    [action.card.id]: action.card,\n                },\n                cardsAllIds: state.cardsAllIds ? state.cardsAllIds.concat(action.card.id) : [action.card.id],\n            };\n        case CARDSET_CLONE_CARD: {\n            let newCard = { ...action.card, id: shortid.generate() };\n\n            const index = state.cardsAllIds.indexOf(action.card.id) + 1;\n            const cardsAllIds = [...state.cardsAllIds.slice(0, index), newCard.id, ...state.cardsAllIds.slice(index)];\n\n            return {\n                ...state,\n                cardsById: {\n                    ...state.cardsById,\n                    [newCard.id]: newCard,\n                },\n                cardsAllIds,\n                texts: {\n                    ...state.texts,\n                    [newCard.id]: {\n                        ...state.texts[action.card.id],\n                    },\n                },\n                images: {\n                    ...state.images,\n                    [newCard.id]: {\n                        ...state.images[action.card.id],\n                    },\n                },\n            };\n        }\n        case CARDSET_REMOVE_CARD: {\n            const cardId = action.card.id;\n            let cardsById = { ...state.cardsById };\n            delete cardsById[cardId];\n\n            let texts = { ...state.texts };\n            if (cardId in texts) {\n                delete texts[cardId];\n            }\n\n            let images = { ...state.images };\n            if (cardId in images) {\n                delete images[cardId];\n            }\n\n            let activeCard = state.activeCard === cardId ? null : state.activeCard;\n\n            const cardsAllIds = state.cardsAllIds.filter(id => id !== cardId);\n\n            let placeholders = state.placeholders;\n            if (cardsAllIds.length === 0) {\n                placeholders = {};\n            }\n\n            return {\n                ...state,\n                cardsById,\n                cardsAllIds,\n                placeholders,\n                texts,\n                images,\n                activeCard,\n            };\n        }\n        case CARDSET_UPDATE_CARD_COUNT: {\n            const cardId = action.card.id;\n            let card = { ...state.cardsById[cardId] };\n            card.count = action.count;\n\n            return {\n                ...state,\n                cardsById: {\n                    ...state.cardsById,\n                    [cardId]: card,\n                },\n            };\n        }\n        case CARDSET_ADD_TEXT_PLACEHOLDER: {\n            let textSettings = { ...state.textSettings };\n            const id = shortid.generate();\n            const textPlaceholder: TextPlaceholderType = {\n                id,\n                type: 'text',\n                x: 5,\n                y: 5,\n                width: 20,\n                height: 10,\n                angle: 0,\n                align: textSettings.align,\n                color: textSettings.color,\n                fontFamily: textSettings.fontFamily,\n                fontVariant: textSettings.fontVariant,\n                fontSize: textSettings.fontSize,\n            };\n\n            return {\n                ...state,\n                placeholders: {\n                    ...state.placeholders,\n                    [id]: textPlaceholder,\n                },\n            };\n        }\n        case CARDSET_ADD_IMAGE_PLACEHOLDER: {\n            const id = shortid.generate();\n            const imagePlaceholder: ImagePlaceholderType = {\n                id,\n                type: 'image',\n                x: 5,\n                y: 5,\n                width: 20,\n                height: 20,\n                angle: 0,\n            };\n\n            return {\n                ...state,\n                placeholders: {\n                    ...state.placeholders,\n                    [id]: imagePlaceholder,\n                },\n            };\n        }\n        case CARDSET_REMOVE_ACTIVE_PLACEHOLDER: {\n            const placeholderId = state.activePlaceholder;\n            if (placeholderId !== undefined && placeholderId !== null) {\n                let placeholders = { ...state.placeholders };\n                if (placeholderId in placeholders) {\n                    delete placeholders[placeholderId];\n                }\n\n                let texts = { ...state.texts };\n                for (const cardId in texts) {\n                    if (placeholderId in texts[cardId]) {\n                        let placeholderTexts = { ...texts[cardId] };\n                        delete placeholderTexts[placeholderId];\n                        texts[cardId] = placeholderTexts;\n                    }\n                }\n\n                let images = { ...state.images };\n                for (const cardId in images) {\n                    if (placeholderId in images[cardId]) {\n                        let placeholderImages = { ...images[cardId] };\n                        delete placeholderImages[placeholderId];\n                        images[cardId] = placeholderImages;\n                    }\n                }\n\n                return {\n                    ...state,\n                    placeholders,\n                    texts,\n                    images,\n                    activePlaceholder: null,\n                };\n            }\n            return state;\n        }\n        case CARDSET_CHANGE_WIDTH: {\n            return {\n                ...state,\n                width: action.width,\n            };\n        }\n        case CARDSET_CHANGE_HEIGHT: {\n            return {\n                ...state,\n                height: action.height,\n            };\n        }\n        case CARDSET_CHANGE_PLACEHOLDER_POSITION: {\n            const placeholder = {\n                ...state.placeholders[action.placeholder.id],\n                x: action.x,\n                y: action.y,\n            };\n\n            return {\n                ...state,\n                placeholders: {\n                    ...state.placeholders,\n                    [action.placeholder.id]: placeholder,\n                },\n            };\n        }\n        case CARDSET_CHANGE_PLACEHOLDER_SIZE: {\n            const placeholder = {\n                ...state.placeholders[action.placeholder.id],\n                width: action.width,\n                height: action.height,\n            };\n\n            return {\n                ...state,\n                placeholders: {\n                    ...state.placeholders,\n                    [action.placeholder.id]: placeholder,\n                },\n            };\n        }\n        case CARDSET_CHANGE_PLACEHOLDER_ANGLE: {\n            const placeholder = {\n                ...state.placeholders[action.placeholder.id],\n                angle: action.angle,\n            };\n\n            return {\n                ...state,\n                placeholders: {\n                    ...state.placeholders,\n                    [action.placeholder.id]: placeholder,\n                },\n            };\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_ALIGN: {\n            let textSettings = {\n                ...state.textSettings,\n                align: action.align,\n            };\n\n            if (state.activePlaceholder) {\n                const textPlaceholder = {\n                    ...state.placeholders[state.activePlaceholder],\n                    align: action.align,\n                };\n\n                return {\n                    ...state,\n                    placeholders: {\n                        ...state.placeholders,\n                        [state.activePlaceholder]: textPlaceholder,\n                    },\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_COLOR: {\n            let textSettings = {\n                ...state.textSettings,\n                color: action.color,\n            };\n\n            if (state.activePlaceholder) {\n                const textPlaceholder = {\n                    ...state.placeholders[state.activePlaceholder],\n                    color: action.color,\n                };\n\n                return {\n                    ...state,\n                    placeholders: {\n                        ...state.placeholders,\n                        [state.activePlaceholder]: textPlaceholder,\n                    },\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY: {\n            let textSettings = {\n                ...state.textSettings,\n                color: action.fontFamily,\n            };\n\n            if (state.activePlaceholder) {\n                const textPlaceholder = {\n                    ...state.placeholders[state.activePlaceholder],\n                    fontFamily: action.fontFamily,\n                };\n\n                return {\n                    ...state,\n                    placeholders: {\n                        ...state.placeholders,\n                        [state.activePlaceholder]: textPlaceholder,\n                    },\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_VARIANT: {\n            let textSettings = {\n                ...state.textSettings,\n                color: action.fontVariant,\n            };\n\n            if (state.activePlaceholder) {\n                const textPlaceholder = {\n                    ...state.placeholders[state.activePlaceholder],\n                    fontVariant: action.fontVariant,\n                };\n\n                return {\n                    ...state,\n                    placeholders: {\n                        ...state.placeholders,\n                        [state.activePlaceholder]: textPlaceholder,\n                    },\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY_AND_VARIANT: {\n            let textSettings = {\n                ...state.textSettings,\n                fontFamily: action.fontFamily,\n                fontVariant: action.fontVariant,\n            };\n\n            if (state.activePlaceholder) {\n                const textPlaceholder = {\n                    ...state.placeholders[state.activePlaceholder],\n                    fontFamily: action.fontFamily,\n                    fontVariant: action.fontVariant,\n                };\n\n                return {\n                    ...state,\n                    placeholders: {\n                        ...state.placeholders,\n                        [state.activePlaceholder]: textPlaceholder,\n                    },\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_SIZE: {\n            let textSettings = {\n                ...state.textSettings,\n                fontSize: action.fontSize,\n            };\n\n            if (state.activePlaceholder) {\n                const textPlaceholder = {\n                    ...state.placeholders[state.activePlaceholder],\n                    fontSize: action.fontSize,\n                };\n\n                return {\n                    ...state,\n                    placeholders: {\n                        ...state.placeholders,\n                        [state.activePlaceholder]: textPlaceholder,\n                    },\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_TEXT: {\n            let placeholdersByCard: PlaceholdersTextInfoCollection = {};\n            if (state.texts && action.cardId in state.texts) {\n                placeholdersByCard = { ...state.texts[action.cardId] };\n            }\n            placeholdersByCard[action.placeholderId] = action.textInfo;\n\n            return {\n                ...state,\n                texts: {\n                    ...state.texts,\n                    [action.cardId]: placeholdersByCard,\n                },\n            };\n        }\n        case CARDSET_CHANGE_IMAGE: {\n            let placeholdersByCard: PlaceholdersImageInfoCollection = {};\n            if (state.images && action.cardId in state.images) {\n                placeholdersByCard = { ...state.images[action.cardId] };\n            }\n            placeholdersByCard[action.placeholderId] = action.imageInfo;\n\n            return {\n                ...state,\n                images: {\n                    ...state.images,\n                    [action.cardId]: placeholdersByCard,\n                },\n            };\n        }\n        case CARDSET_SET_ACTIVE_CARD_AND_PLACEHOLDER: {\n            let textSettings = { ...state.textSettings };\n            let activeSidebar = action.cardId !== null ? SidebarState.Details : state.activeSidebar;\n            if (action.placeholderId !== null) {\n                const placeholder = state.placeholders[action.placeholderId];\n                if (placeholder.type === 'text') {\n                    textSettings.align = placeholder.align;\n                    textSettings.color = placeholder.color;\n                    textSettings.fontFamily = placeholder.fontFamily;\n                    textSettings.fontVariant = placeholder.fontVariant;\n                    textSettings.fontSize = placeholder.fontSize;\n\n                    activeSidebar = SidebarState.Text;\n                } else {\n                    activeSidebar = SidebarState.Image;\n                }\n            }\n\n            return {\n                ...state,\n                activeCard: action.cardId,\n                activePlaceholder: action.placeholderId,\n                textSettings,\n                activeSidebar,\n            };\n        }\n\n        case CARDSET_SET_SIDEBAR_STATE: {\n            return {\n                ...state,\n                activeSidebar: action.sidebarState,\n            };\n        }\n        case CARDSET_SET_ZOOM: {\n            return {\n                ...state,\n                zoom: action.zoom,\n            };\n        }\n        default:\n            return state;\n    }\n}\n\nexport function images(state: ImageState = DefaultImageState, action: ImageListAction): ImageState {\n    switch (action.type) {\n        case IMAGE_LIST_REQUEST:\n            return Object.assign({}, state, {\n                filter: action.filter,\n                activity: state.activity | ACTIVITY_LISTING,\n            });\n        case IMAGE_LIST_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_LISTING,\n                images: action.images,\n            });\n        case IMAGE_LIST_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_LISTING,\n            });\n        default:\n            return state;\n    }\n}\n\nconst reducers = combineReducers({\n    message,\n    auth,\n    signup,\n    games,\n    cardsets,\n    images,\n});\n\nexport default reducers;\n","import { Ghost, Browser } from 'react-kawaii';\nimport React, { Component } from 'react';\n\nexport enum Character {\n    Ghost,\n    Browser,\n}\ninterface Props {\n    character: Character;\n    mood?: string;\n}\n\nexport default class KawaiiMessage extends Component<Props> {\n    render() {\n        const { character, mood } = this.props;\n\n        return (\n            <div\n                style={{\n                    padding: '1em',\n                    borderRadius: '1em',\n                    backgroundColor: 'var(--color-2)',\n                    display: 'grid',\n                    grid: 'auto-flow / minmax(120px, auto) 1fr',\n                }}\n            >\n                {character === Character.Ghost && <Ghost size={120} mood={mood || 'blissful'} color=\"#faebef\" />}\n                {character === Character.Browser && <Browser size={120} mood={mood || 'blissful'} color=\"#faebef\" />}\n                <div style={{ marginLeft: '1em' }}>{this.props.children}</div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nexport default class AboutPage extends Component {\n    render() {\n        return (\n            <div>\n                <h2>About</h2>\n                <p>\n                    \"Card-a-mon\" is card game development tool. At the moment it is project of single person (me) with a\n                    vision. My aim is to create affordable and practical tool to develop card games from A (prototyping)\n                    to Z (printing). If you have ideas, suggestions, proposals, comments and etc. then you can contact\n                    me by e-mail <a href=\"mailto:dalius@ffff.lt\">dalius@ffff.lt</a>.\n                </p>\n                <h2>Credits</h2>\n                This project is available because of number amazing open source projects. Some of them:\n                <ul>\n                    <li>\n                        <a href=\"https://reactjs.org/\">React</a> and all the ecosystem around it.\n                    </li>\n                    <li>\n                        <a href=\"https://fonts.google.com/\">Google Fonts</a>\n                    </li>\n                    <li>\n                        <a href=\"https://github.com/game-icons/icons\">Game icons</a>\n                    </li>\n                    <li>\n                        <a href=\"http://pdfkit.org/\">PDFKit</a>\n                    </li>\n                </ul>\n                <p>... and many more.</p>\n            </div>\n        );\n    }\n}\n","import { connect } from 'react-redux';\nimport React from 'react';\n\nimport { Dispatch } from '../actions';\nimport { State } from '../reducers';\nimport resize from './resize.svg';\nimport rotate from './rotate.svg';\nimport style from './FieldController.module.css';\n\ninterface OwnProps {\n    cardId: string;\n    placeholderId: string;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    angle: number;\n    children: React.ReactNode;\n    onDrag: (x: number, y: number) => void;\n    onResize: (width: number, height: number) => void;\n    onRotate: (angle: number) => void;\n}\n\ninterface StateProps {\n    isActive: boolean;\n    isActivePlaceholder: boolean;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass FieldController extends React.Component<Props> {\n    moving: boolean;\n    cDiv: React.RefObject<HTMLDivElement>;\n    resizeDiv: React.RefObject<HTMLImageElement>;\n    rotateDiv: React.RefObject<HTMLImageElement>;\n    relX: number;\n    relY: number;\n    startX: number;\n    startY: number;\n    originalW: number;\n    originalH: number;\n    rotatedPointX: number;\n    rotatedPointY: number;\n    centerX: number;\n    centerY: number;\n    originalAngle: number;\n    currentAngle: number;\n\n    constructor(props: Props) {\n        super(props);\n        this.cDiv = React.createRef();\n        this.resizeDiv = React.createRef();\n        this.rotateDiv = React.createRef();\n        this.currentAngle = props.angle;\n        this.moving = false;\n        this.relX = 0;\n        this.relY = 0;\n        this.startX = 0;\n        this.startY = 0;\n        this.originalW = 0;\n        this.originalH = 0;\n        this.rotatedPointX = 0;\n        this.rotatedPointY = 0;\n        this.centerX = 0;\n        this.centerY = 0;\n        this.originalAngle = 0;\n    }\n\n    componentDidMount() {\n        if (this.cDiv.current === null) return;\n        if (this.resizeDiv.current === null) return;\n        if (this.rotateDiv.current === null) return;\n\n        this.cDiv.current.addEventListener('dragstart', this.handleBrowserDragStart);\n        this.cDiv.current.addEventListener('mousedown', this.handleMouseDown);\n        this.cDiv.current.addEventListener('touchstart', this.handleTouchStart);\n        this.resizeDiv.current.addEventListener('mousedown', this.handleResizeMouseDown);\n        this.resizeDiv.current.addEventListener('touchstart', this.handleResizeTouchStart);\n        this.rotateDiv.current.addEventListener('mousedown', this.handleRotateMouseDown);\n        this.rotateDiv.current.addEventListener('touchstart', this.handleRotateTouchStart);\n    }\n\n    componentDidUpdate() {\n        if (this.cDiv.current === null) return;\n\n        this.currentAngle = this.props.angle;\n    }\n\n    rotateVec = (x: number, y: number, a: number) => {\n        const sinA = Math.sin(a);\n        const cosA = Math.cos(a);\n        const rx = cosA * x - sinA * y;\n        const ry = sinA * x + cosA * y;\n\n        return { rx, ry };\n    };\n\n    handleBrowserDragStart = (event: DragEvent) => {\n        event.stopPropagation();\n        event.preventDefault();\n    };\n\n    // Dragging handling\n\n    handleMouseDown = (event: MouseEvent) => {\n        this.handleDragStart(event);\n\n        document.addEventListener('mousemove', this.handleMouseMove);\n        document.addEventListener('mouseup', this.handleMouseUp);\n        event.stopPropagation();\n    };\n\n    handleTouchStart = (event: TouchEvent) => {\n        this.handleDragStart(event.changedTouches[0]);\n\n        document.addEventListener('touchmove', this.handleTouchMove, { passive: false });\n        document.addEventListener('touchend', this.handleTouchEnd, { passive: false });\n        event.stopPropagation();\n    };\n\n    handleDragStart = (co: { clientX: number; clientY: number }) => {\n        if (this.cDiv.current === null) return;\n        this.relX = co.clientX - this.cDiv.current.offsetLeft;\n        this.relY = co.clientY - this.cDiv.current.offsetTop;\n    };\n\n    handleMouseUp = (event: MouseEvent) => {\n        this.handleComplete(event);\n\n        document.removeEventListener('mousemove', this.handleMouseMove);\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleTouchEnd = (event: TouchEvent) => {\n        this.handleComplete(event);\n\n        document.removeEventListener('touchmove', this.handleTouchMove);\n        document.removeEventListener('touchend', this.handleTouchEnd);\n    };\n\n    handleComplete = (event: Event) => {\n        if (this.cDiv.current === null) return;\n        if (this.moving) {\n            this.props.onDrag(this.cDiv.current.offsetLeft, this.cDiv.current.offsetTop);\n            this.moving = false;\n        }\n        event.preventDefault();\n    };\n\n    handleMouseMove = (event: MouseEvent) => {\n        this.handleDragMove(event);\n        event.preventDefault();\n    };\n\n    handleTouchMove = (event: TouchEvent) => {\n        this.handleDragMove(event.changedTouches[0]);\n        event.preventDefault();\n    };\n\n    handleDragMove = (co: { clientX: number; clientY: number }) => {\n        if (this.cDiv.current === null) return;\n        this.moving = true;\n\n        const x = co.clientX - this.relX;\n        const y = co.clientY - this.relY;\n        this.cDiv.current.style.left = x + 'px';\n        this.cDiv.current.style.top = y + 'px';\n    };\n\n    // Resize handling\n\n    handleResizeMouseDown = (event: MouseEvent) => {\n        this.handleResizeStart(event);\n\n        document.addEventListener('mousemove', this.handleResizeMouseMove);\n        document.addEventListener('mouseup', this.handleResizeMouseUp);\n        event.stopPropagation();\n        event.preventDefault();\n    };\n\n    handleResizeTouchStart = (event: TouchEvent) => {\n        this.handleResizeStart(event.changedTouches[0]);\n\n        document.addEventListener('touchmove', this.handleResizeTouchMove, { passive: false });\n        document.addEventListener('touchend', this.handleResizeTouchEnd, { passive: false });\n        event.stopPropagation();\n    };\n\n    handleResizeStart = (co: { clientX: number; clientY: number }) => {\n        if (this.cDiv.current === null) return;\n        this.originalW = this.cDiv.current.clientWidth;\n        this.originalH = this.cDiv.current.clientHeight;\n\n        const dx = this.cDiv.current.clientWidth / 2;\n        const dy = this.cDiv.current.clientHeight / 2;\n        const { rx, ry } = this.rotateVec(-dx, -dy, this.currentAngle);\n\n        this.rotatedPointX = this.cDiv.current.offsetLeft + dx + rx;\n        this.rotatedPointY = this.cDiv.current.offsetTop + dy + ry;\n\n        this.startX = co.clientX;\n        this.startY = co.clientY;\n    };\n\n    handleResizeMouseUp = (event: MouseEvent) => {\n        this.handleResizeComplete(event);\n\n        document.removeEventListener('mousemove', this.handleResizeMouseMove);\n        document.removeEventListener('mouseup', this.handleResizeMouseUp);\n    };\n\n    handleResizeTouchEnd = (event: TouchEvent) => {\n        this.handleResizeComplete(event);\n\n        document.removeEventListener('touchmove', this.handleResizeTouchMove);\n        document.removeEventListener('touchend', this.handleResizeTouchEnd);\n    };\n\n    handleResizeComplete = (event: Event) => {\n        if (this.cDiv.current === null) return;\n        if (this.moving) {\n            const { offsetLeft, offsetTop, clientWidth, clientHeight } = this.cDiv.current;\n            this.props.onDrag(offsetLeft, offsetTop);\n            this.props.onResize(clientWidth, clientHeight);\n            this.moving = false;\n        }\n        event.preventDefault();\n    };\n\n    handleResizeMouseMove = (event: MouseEvent) => {\n        this.handleResizeMove(event);\n        event.preventDefault();\n    };\n\n    handleResizeTouchMove = (event: TouchEvent) => {\n        this.handleResizeMove(event.changedTouches[0]);\n        event.preventDefault();\n    };\n\n    handleResizeMove = (co: { clientX: number; clientY: number }) => {\n        if (this.cDiv.current === null) return;\n        this.moving = true;\n\n        const vx = co.clientX - this.startX;\n        const vy = co.clientY - this.startY;\n\n        const { rx, ry } = this.rotateVec(vx, vy, -this.currentAngle);\n\n        const w = this.originalW + rx;\n        const h = this.originalH + ry;\n        this.cDiv.current.style.width = w + 'px';\n        this.cDiv.current.style.height = h + 'px';\n\n        const rotatedV = this.rotateVec(w / 2, h / 2, this.currentAngle);\n        const nx = this.rotatedPointX + rotatedV.rx;\n        const ny = this.rotatedPointY + rotatedV.ry;\n\n        this.cDiv.current.style.left = nx - w / 2 + 'px';\n        this.cDiv.current.style.top = ny - h / 2 + 'px';\n    };\n\n    // Rotation handling\n\n    handleRotateMouseDown = (event: MouseEvent) => {\n        this.handleRotateStart(event);\n\n        document.addEventListener('mousemove', this.handleRotateMouseMove);\n        document.addEventListener('mouseup', this.handleRotateMouseUp);\n        event.stopPropagation();\n        event.preventDefault();\n    };\n\n    handleRotateTouchStart = (event: TouchEvent) => {\n        this.handleRotateStart(event.changedTouches[0]);\n\n        document.addEventListener('touchmove', this.handleRotateTouchMove, { passive: false });\n        document.addEventListener('touchend', this.handleRotateTouchEnd, { passive: false });\n        event.stopPropagation();\n    };\n\n    handleRotateStart = (co: { clientX: number; clientY: number }) => {\n        if (this.cDiv.current === null) return;\n        const rect = this.cDiv.current.getBoundingClientRect();\n        this.centerX = rect.left + this.cDiv.current.clientWidth / 2;\n        this.centerY = rect.top + this.cDiv.current.clientHeight / 2;\n\n        this.originalAngle = Math.atan2(this.centerX - co.clientX, this.centerY - co.clientY) + this.currentAngle;\n    };\n\n    handleRotateMouseUp = (event: MouseEvent) => {\n        this.handleRotateComplete(event);\n\n        document.removeEventListener('mousemove', this.handleRotateMouseMove);\n        document.removeEventListener('mouseup', this.handleRotateMouseUp);\n    };\n\n    handleRotateTouchEnd = (event: TouchEvent) => {\n        this.handleRotateComplete(event);\n\n        document.removeEventListener('touchmove', this.handleRotateTouchMove);\n        document.removeEventListener('touchend', this.handleRotateTouchEnd);\n    };\n\n    handleRotateComplete = (event: Event) => {\n        if (this.moving) {\n            this.props.onRotate(this.currentAngle);\n            this.moving = false;\n        }\n        event.preventDefault();\n    };\n\n    handleRotateMouseMove = (event: MouseEvent) => {\n        this.handleRotateMove(event);\n        event.preventDefault();\n    };\n\n    handleRotateTouchMove = (event: TouchEvent) => {\n        this.handleRotateMove(event.changedTouches[0]);\n        event.preventDefault();\n    };\n\n    handleRotateMove = (co: { clientX: number; clientY: number }) => {\n        if (this.cDiv.current === null) return;\n        this.moving = true;\n\n        const angle = Math.atan2(this.centerX - co.clientX, this.centerY - co.clientY);\n        this.currentAngle = this.originalAngle - angle;\n\n        this.cDiv.current.style.transform = `rotate(${this.currentAngle}rad)`;\n    };\n\n    // Rendering\n\n    render() {\n        const { x, y, width, height, angle, children, isActive, isActivePlaceholder } = this.props;\n\n        return (\n            <div\n                ref={this.cDiv}\n                className={`${style.fieldcontroller} ${\n                    isActivePlaceholder ? style.fieldcontrolleractiveplaceholder : ''\n                } ${isActive ? style.fieldcontrolleractive : ''}`}\n                style={{\n                    position: 'absolute',\n                    left: x,\n                    top: y,\n                    width: width,\n                    height: height,\n                    cursor: 'grab',\n                    transform: `rotate(${angle}rad)`,\n                }}\n            >\n                {children}\n                <img\n                    src={resize}\n                    alt=\"resize\"\n                    ref={this.resizeDiv}\n                    className={style.controller}\n                    style={{\n                        position: 'absolute',\n                        right: 0,\n                        bottom: 0,\n                        cursor: `url(${resize}), auto`,\n                    }}\n                />\n                <img\n                    src={rotate}\n                    alt=\"rotate\"\n                    ref={this.rotateDiv}\n                    className={style.controller}\n                    style={{\n                        position: 'absolute',\n                        left: 0,\n                        bottom: 0,\n                        cursor: `url(${rotate}), auto`,\n                    }}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    return {\n        isActive:\n            props.cardId === state.cardsets.activeCard && props.placeholderId === state.cardsets.activePlaceholder,\n        isActivePlaceholder: props.placeholderId === state.cardsets.activePlaceholder,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(FieldController);\n","import { connect } from 'react-redux';\nimport React, { PureComponent } from 'react';\n\nimport {\n    Dispatch,\n    ImagePlaceholderType,\n    cardSetActiveCardAndPlaceholder,\n    cardSetChangePlaceholderAngle,\n    cardSetChangePlaceholderPosition,\n    cardSetChangePlaceholderSize,\n} from '../actions';\nimport { State } from '../reducers';\nimport FieldController from './FieldController';\nimport emptyImageImage from './image.svg';\n\ninterface OwnProps {\n    cardId: string;\n    ppmm: number;\n    imagePlaceholder: ImagePlaceholderType;\n}\n\ninterface StateProps {\n    imageUrl: string;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass ImageField extends PureComponent<Props> {\n    imageDiv: React.RefObject<HTMLDivElement>;\n    wasMoved: boolean;\n\n    constructor(props: Props) {\n        super(props);\n        this.imageDiv = React.createRef();\n        this.wasMoved = false;\n    }\n\n    componentDidMount() {\n        if (!this.imageDiv.current) return;\n        this.imageDiv.current.addEventListener('mousedown', this.handleMouseDown);\n        this.imageDiv.current.addEventListener('touchstart', this.handleTouchStart);\n        this.imageDiv.current.addEventListener('mousemove', this.handleMouseMove);\n        this.imageDiv.current.addEventListener('touchmove', this.handleTouchMove, { passive: false });\n        this.imageDiv.current.addEventListener('mouseup', this.handleMouseUp);\n        this.imageDiv.current.addEventListener('touchend', this.handleTouchEnd, { passive: false });\n    }\n\n    handleDrag = (x: number, y: number) => {\n        const { dispatch, imagePlaceholder, ppmm } = this.props;\n        dispatch(cardSetChangePlaceholderPosition(imagePlaceholder, x / ppmm, y / ppmm));\n    };\n\n    handleResize = (width: number, height: number) => {\n        const { dispatch, imagePlaceholder, ppmm } = this.props;\n        dispatch(cardSetChangePlaceholderSize(imagePlaceholder, width / ppmm, height / ppmm));\n    };\n\n    handleRotate = (angle: number) => {\n        const { dispatch, imagePlaceholder } = this.props;\n        dispatch(cardSetChangePlaceholderAngle(imagePlaceholder, angle));\n    };\n\n    handleMouseDown = (event: MouseEvent) => {\n        this.wasMoved = false;\n        event.preventDefault();\n    };\n\n    handleTouchStart = (event: TouchEvent) => {\n        this.wasMoved = false;\n        event.preventDefault();\n    };\n\n    handleMouseMove = (event: MouseEvent) => {\n        this.wasMoved = true;\n        event.preventDefault();\n    };\n\n    handleTouchMove = (event: TouchEvent) => {\n        this.wasMoved = true;\n        event.preventDefault();\n    };\n\n    handleMouseUp = (event: MouseEvent) => {\n        this.handleComplete(event);\n    };\n\n    handleTouchEnd = (event: TouchEvent) => {\n        this.handleComplete(event);\n    };\n\n    handleComplete = (event: Event) => {\n        const { dispatch, cardId, imagePlaceholder } = this.props;\n        if (!this.wasMoved) {\n            event.preventDefault();\n            dispatch(cardSetActiveCardAndPlaceholder(cardId, imagePlaceholder.id));\n        }\n    };\n\n    render() {\n        const { imagePlaceholder, imageUrl, ppmm } = this.props;\n\n        return (\n            <FieldController\n                cardId={this.props.cardId}\n                placeholderId={imagePlaceholder.id}\n                x={imagePlaceholder.x * ppmm}\n                y={imagePlaceholder.y * ppmm}\n                width={imagePlaceholder.width * ppmm}\n                height={imagePlaceholder.height * ppmm}\n                angle={imagePlaceholder.angle}\n                onDrag={this.handleDrag}\n                onResize={this.handleResize}\n                onRotate={this.handleRotate}\n            >\n                <div\n                    ref={this.imageDiv}\n                    style={{\n                        width: '100%',\n                        height: '100%',\n                    }}\n                >\n                    <img\n                        style={{ opacity: imageUrl.length > 0 ? 1 : 0.5, width: '100%', height: 'auto' }}\n                        src={imageUrl || emptyImageImage}\n                        alt=\"\"\n                    />\n                </div>\n            </FieldController>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    const imageUrl =\n        state.cardsets.images &&\n        state.cardsets.images[props.cardId] &&\n        state.cardsets.images[props.cardId][props.imagePlaceholder.id]\n            ? state.cardsets.images[props.cardId][props.imagePlaceholder.id].url\n            : '';\n    return {\n        imageUrl,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(ImageField);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DEFAULT_FONT, DEFAULT_FONT_SIZE } from '../fontLoader';\nimport { Dispatch, TextInfo, cardSetActiveCardAndPlaceholder, cardSetChangeText } from '../actions';\nimport { State } from '../reducers';\n\ninterface OwnProps {\n    cardId: string;\n    placeholderId: string;\n    align: string;\n    color: string;\n    fontFamily: string;\n    fontVariant: string;\n    fontSize: number;\n}\n\ninterface StateProps {\n    isActive: boolean;\n    textValue: string;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass ContentEditable extends Component<Props> {\n    editDiv: React.RefObject<HTMLDivElement>;\n    currentText: string;\n    currentAlign: string;\n    currentColor: string;\n    currentFontFamily: string;\n    currentFontVariant: string;\n    currentFontSize: number;\n    timeout: NodeJS.Timeout | null;\n    wasMoved: boolean;\n\n    constructor(props: Props) {\n        super(props);\n        this.editDiv = React.createRef();\n        this.currentText = '';\n        this.currentAlign = '';\n        this.currentColor = '';\n        this.currentFontFamily = '';\n        this.currentFontVariant = '';\n        this.currentFontSize = DEFAULT_FONT_SIZE;\n        this.timeout = null;\n        this.wasMoved = false;\n    }\n\n    componentDidMount() {\n        const { isActive } = this.props;\n\n        if (!this.editDiv.current) return;\n\n        this.editDiv.current.addEventListener('mousedown', this.handleMouseDown);\n        this.editDiv.current.addEventListener('touchstart', this.handleTouchStart);\n        this.editDiv.current.addEventListener('mousemove', this.handleMouseMove);\n        this.editDiv.current.addEventListener('touchmove', this.handleTouchMove, { passive: false });\n        this.editDiv.current.addEventListener('mouseup', this.handleMouseUp);\n        this.editDiv.current.addEventListener('touchend', this.handleTouchEnd, { passive: false });\n\n        if (isActive) {\n            this.editDiv.current.focus();\n        }\n    }\n\n    shouldComponentUpdate(nextProps: Props) {\n        const shouldUpdate =\n            nextProps.textValue !== this.currentText ||\n            nextProps.align !== this.currentAlign ||\n            nextProps.color !== this.currentColor ||\n            nextProps.fontFamily !== this.currentFontFamily ||\n            nextProps.fontVariant !== this.currentFontVariant ||\n            nextProps.fontSize !== this.currentFontSize ||\n            this.props.isActive !== nextProps.isActive;\n\n        return shouldUpdate;\n    }\n\n    componentDidUpdate() {\n        const { textValue, align, color, fontFamily, fontVariant, fontSize } = this.props;\n        this.currentText = textValue;\n        this.currentAlign = align;\n        this.currentColor = color;\n        this.currentFontFamily = fontFamily;\n        this.currentFontVariant = fontVariant;\n        this.currentFontSize = fontSize;\n    }\n\n    handleMouseDown = (event: MouseEvent) => {\n        this.handleStart(event);\n    };\n\n    handleTouchStart = (event: TouchEvent) => {\n        this.handleStart(event);\n    };\n\n    handleStart = (event: Event) => {\n        const { isActive } = this.props;\n        if (isActive) {\n            event.stopPropagation();\n        } else {\n            this.wasMoved = false;\n            event.preventDefault();\n        }\n    };\n\n    handleMouseMove = (event: MouseEvent) => {\n        this.handleMove(event);\n    };\n\n    handleTouchMove = (event: TouchEvent) => {\n        this.handleMove(event);\n    };\n\n    handleMove = (event: Event) => {\n        const { isActive } = this.props;\n        if (isActive) {\n            event.stopPropagation();\n        } else {\n            this.wasMoved = true;\n            event.preventDefault();\n        }\n    };\n\n    handleMouseUp = (event: MouseEvent) => {\n        this.handleComplete(event);\n    };\n\n    handleTouchEnd = (event: TouchEvent) => {\n        this.handleComplete(event);\n    };\n\n    handleComplete = (event: Event) => {\n        const { dispatch, cardId, placeholderId, isActive } = this.props;\n        if (isActive) {\n            event.stopPropagation();\n        } else if (!this.wasMoved) {\n            event.preventDefault();\n            dispatch(cardSetActiveCardAndPlaceholder(cardId, placeholderId));\n\n            if (!this.editDiv.current) return;\n            this.editDiv.current.focus();\n        }\n    };\n\n    onFocus = () => {\n        if (!this.editDiv.current) return;\n\n        const { textValue, align, color, fontFamily, fontVariant, fontSize } = this.props;\n        this.currentText = textValue;\n        this.currentAlign = align;\n        this.currentColor = color;\n        this.currentFontFamily = fontFamily;\n        this.currentFontVariant = fontVariant;\n        this.currentFontSize = fontSize;\n\n        const range = document.createRange();\n        range.selectNodeContents(this.editDiv.current);\n        range.collapse(false);\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    };\n\n    updateContent = (timeoutInMiliseconds: number) => {\n        if (!this.editDiv.current) return;\n        let value = this.editDiv.current.innerHTML;\n        value = value.replace(/<br>/g, '');\n\n        if (value !== this.currentText) {\n            this.currentText = value;\n\n            if (this.timeout) {\n                clearTimeout(this.timeout);\n            }\n\n            this.timeout = setTimeout(() => {\n                const { dispatch, cardId, placeholderId } = this.props;\n                const textInfo: TextInfo = { value };\n\n                dispatch(cardSetChangeText(cardId, placeholderId, textInfo));\n            }, timeoutInMiliseconds);\n        }\n    };\n\n    handleBlur = () => {\n        this.updateContent(0);\n    };\n\n    handleInput = () => {\n        this.updateContent(500);\n    };\n\n    render() {\n        const { color, align, fontFamily, fontVariant, fontSize } = this.props;\n        const isItalic = fontVariant && fontVariant.indexOf('italic') !== -1;\n        const fontWeight = isItalic\n            ? fontVariant === 'italic'\n                ? 400\n                : parseInt(fontVariant.slice(0, 3))\n            : fontVariant === 'regular'\n            ? 400\n            : parseInt(fontVariant);\n\n        return (\n            <div\n                ref={this.editDiv}\n                contentEditable={true}\n                onFocus={this.onFocus}\n                onBlur={this.handleBlur}\n                onInput={this.handleInput}\n                style={{\n                    width: '100%',\n                    height: '100%',\n                    textAlign: align === 'left' ? 'left' : align === 'right' ? 'right' : 'center',\n                    color: color,\n                    fontFamily: `'${fontFamily}'` || DEFAULT_FONT,\n                    fontStyle: isItalic ? 'italic' : 'normal',\n                    fontWeight,\n                    fontSize: `${fontSize}px`,\n                    outline: 'none',\n                    overflowWrap: 'break-word',\n                    lineHeight: 1.27,\n                }}\n                dangerouslySetInnerHTML={{ __html: this.props.textValue }}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    const textInfo =\n        state.cardsets.texts &&\n        state.cardsets.texts[props.cardId] &&\n        state.cardsets.texts[props.cardId][props.placeholderId]\n            ? state.cardsets.texts[props.cardId][props.placeholderId]\n            : { value: '' };\n    return {\n        textValue: textInfo.value,\n        isActive:\n            props.cardId === state.cardsets.activeCard && props.placeholderId === state.cardsets.activePlaceholder,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(ContentEditable);\n","import { connect } from 'react-redux';\nimport React, { PureComponent } from 'react';\n\nimport {\n    Dispatch,\n    TextPlaceholderType,\n    cardSetChangePlaceholderAngle,\n    cardSetChangePlaceholderPosition,\n    cardSetChangePlaceholderSize,\n} from '../actions';\nimport { State } from '../reducers';\nimport ContentEditable from './ContentEditable';\nimport FieldController from './FieldController';\nimport emptyTextImage from './text.svg';\n\ninterface OwnProps {\n    cardId: string;\n    ppmm: number;\n    textPlaceholder: TextPlaceholderType;\n}\n\ninterface StateProps {\n    text: string;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass TextField extends PureComponent<Props> {\n    handleDrag = (x: number, y: number) => {\n        const { dispatch, textPlaceholder, ppmm } = this.props;\n        dispatch(cardSetChangePlaceholderPosition(textPlaceholder, x / ppmm, y / ppmm));\n    };\n\n    handleResize = (width: number, height: number) => {\n        const { dispatch, textPlaceholder, ppmm } = this.props;\n        dispatch(cardSetChangePlaceholderSize(textPlaceholder, width / ppmm, height / ppmm));\n    };\n\n    handleRotate = (angle: number) => {\n        const { dispatch, textPlaceholder } = this.props;\n        dispatch(cardSetChangePlaceholderAngle(textPlaceholder, angle));\n    };\n\n    render() {\n        const { textPlaceholder, text, ppmm } = this.props;\n\n        return (\n            <FieldController\n                cardId={this.props.cardId}\n                placeholderId={textPlaceholder.id}\n                x={textPlaceholder.x * ppmm}\n                y={textPlaceholder.y * ppmm}\n                width={textPlaceholder.width * ppmm}\n                height={textPlaceholder.height * ppmm}\n                angle={textPlaceholder.angle}\n                onDrag={this.handleDrag}\n                onResize={this.handleResize}\n                onRotate={this.handleRotate}\n            >\n                {text === '' && (\n                    <div\n                        style={{\n                            width: '100%',\n                            height: '100%',\n                            position: 'fixed',\n                            left: 0,\n                            top: 0,\n                            zIndex: -1,\n                            textAlign:\n                                textPlaceholder.align === 'left'\n                                    ? 'left'\n                                    : textPlaceholder.align === 'right'\n                                    ? 'right'\n                                    : 'center',\n                        }}\n                    >\n                        <img style={{ opacity: 0.5, width: 'auto', height: '100%' }} src={emptyTextImage} alt=\"\" />\n                    </div>\n                )}\n\n                <ContentEditable\n                    cardId={this.props.cardId}\n                    placeholderId={textPlaceholder.id}\n                    align={textPlaceholder.align}\n                    color={textPlaceholder.color}\n                    fontFamily={textPlaceholder.fontFamily}\n                    fontVariant={textPlaceholder.fontVariant}\n                    fontSize={textPlaceholder.fontSize * ppmm}\n                />\n            </FieldController>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    let text =\n        state.cardsets.texts &&\n        state.cardsets.texts[props.cardId] &&\n        state.cardsets.texts[props.cardId][props.textPlaceholder.id]\n            ? state.cardsets.texts[props.cardId][props.textPlaceholder.id].value\n            : '';\n    return {\n        text,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(TextField);\n","import { connect } from 'react-redux';\nimport Measure from 'react-measure';\nimport React, { Component } from 'react';\n\nimport { CardType, Dispatch, PlaceholdersCollection, cardSetActiveCardAndPlaceholder } from '../actions';\nimport { State } from '../reducers';\nimport ImageField from './ImageField';\nimport TextField from './TextField';\nimport style from './Card.module.css';\n\ninterface OwnProps {\n    card: CardType;\n}\n\ninterface StateProps {\n    placeholders: PlaceholdersCollection;\n    width: number;\n    height: number;\n    isActiveCard: boolean;\n    zoom: number;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\ninterface LocalState {\n    dimensions: {\n        width: number;\n        height: number;\n    };\n}\n\nclass Card extends Component<Props, LocalState> {\n    state = {\n        dimensions: {\n            width: -1,\n            height: -1,\n        },\n    };\n\n    handleFieldDeselect = (event: React.MouseEvent | React.TouchEvent) => {\n        const { dispatch, card } = this.props;\n        const el = event.target as HTMLElement;\n        if (el.getAttribute('id') === `card_${card.id}`) {\n            dispatch(cardSetActiveCardAndPlaceholder(card.id, null));\n            event.stopPropagation();\n        }\n    };\n\n    render() {\n        const { placeholders, card, width, height, isActiveCard, zoom } = this.props;\n        const ppmm = this.state.dimensions.width / width;\n\n        return (\n            <Measure\n                client\n                onResize={contentRect => {\n                    if (!contentRect.client) {\n                        return;\n                    }\n                    this.setState({ dimensions: contentRect.client });\n                }}\n            >\n                {({ measureRef }) => (\n                    <div\n                        className={`${style.card} ${isActiveCard ? style.active : ''}`}\n                        id={`card_${card.id}`}\n                        ref={measureRef}\n                        style={{\n                            width: `${width * zoom}mm`,\n                            height: `${height * zoom}mm`,\n                            position: 'relative',\n                            overflow: 'hidden',\n                        }}\n                        onMouseDown={this.handleFieldDeselect}\n                        onTouchStart={this.handleFieldDeselect}\n                    >\n                        {Object.values(placeholders).map(p => {\n                            if (p.type === 'image') {\n                                return <ImageField key={p.id} cardId={card.id} imagePlaceholder={p} ppmm={ppmm} />;\n                            } else if (p.type === 'text') {\n                                return <TextField key={p.id} cardId={card.id} textPlaceholder={p} ppmm={ppmm} />;\n                            }\n                            return null;\n                        })}\n                    </div>\n                )}\n            </Measure>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    return {\n        placeholders: state.cardsets.placeholders,\n        width: state.cardsets.width,\n        height: state.cardsets.height,\n        isActiveCard: state.cardsets.activeCard === props.card.id,\n        zoom: state.cardsets.zoom,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(Card);\n","import React, { Component } from 'react';\n\nimport style from './Loader.module.css';\n\ninterface Props {\n    fixed?: boolean;\n}\n\nexport default class Loader extends Component<Props> {\n    render() {\n        const { fixed } = this.props;\n\n        return (\n            <div className={`${style.loader} ${fixed ? style.fixed : style.relative}`}>\n                <div />\n                <div />\n            </div>\n        );\n    }\n}\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { CardType, Dispatch, cardSetCloneCard, cardSetRemoveCard, cardSetUpdateCardCount } from '../actions';\nimport { State } from '../reducers';\nimport style from './SidebarDetails.module.css';\n\ninterface StateProps {\n    isAuthenticated: boolean;\n    activeCard: CardType | null;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = StateProps & DispatchProps;\n\nexport class SidebarDetails extends Component<Props> {\n    handleCloneCardClick = () => {\n        const { activeCard, dispatch } = this.props;\n        if (activeCard !== null) {\n            dispatch(cardSetCloneCard(activeCard));\n        }\n    };\n\n    handleRemoveCardClick = () => {\n        const { activeCard, dispatch } = this.props;\n        if (activeCard !== null) {\n            dispatch(cardSetRemoveCard(activeCard));\n        }\n    };\n\n    handleCountChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeCard, dispatch } = this.props;\n        if (activeCard !== null) {\n            dispatch(cardSetUpdateCardCount(activeCard, parseInt(event.target.value)));\n        }\n    };\n\n    render() {\n        const { activeCard } = this.props;\n\n        return (\n            <div className={style.view}>\n                <button\n                    onClick={this.handleCloneCardClick}\n                    title=\"Clone card\"\n                    className={activeCard === null ? style.disabled : ''}\n                >\n                    <i className=\"material-icons\">file_copy</i>\n                </button>\n\n                <input\n                    type=\"number\"\n                    value={activeCard !== null ? activeCard.count.toString() : 0}\n                    onChange={this.handleCountChange}\n                    title=\"Number of card's copies\"\n                    className={activeCard === null ? style.disabled : ''}\n                />\n                <button\n                    onClick={this.handleRemoveCardClick}\n                    title=\"Remove card\"\n                    className={activeCard === null ? style.disabled : ''}\n                >\n                    <i className=\"material-icons\">delete</i>\n                </button>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        activeCard: state.cardsets.activeCard !== null ? state.cardsets.cardsById[state.cardsets.activeCard] : null,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, {}, State>(mapStateToProps)(SidebarDetails);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport {\n    CardType,\n    Dispatch,\n    ImageArray,\n    ImageInfo,\n    PlaceholderType,\n    cardSetAddImagePlaceholder,\n    cardSetChangeImage,\n    cardSetRemoveActivePlaceholder,\n    imageListRequest,\n} from '../actions';\nimport { State } from '../reducers';\nimport style from './SidebarImage.module.css';\n\ninterface StateProps {\n    isAuthenticated: boolean;\n    activePlaceholder: PlaceholderType | null;\n    imageUrl: string;\n    activeCard: CardType | null;\n    filter: string;\n    images: ImageArray;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = StateProps & DispatchProps;\n\nexport class SidebarImage extends Component<Props> {\n    handleAddImageClick = () => {\n        const { dispatch } = this.props;\n        dispatch(cardSetAddImagePlaceholder());\n    };\n\n    handleRemoveClick = () => {\n        const { activePlaceholder, dispatch } = this.props;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetRemoveActivePlaceholder());\n        }\n    };\n\n    handleFilterChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(imageListRequest(event.target.value));\n    };\n\n    handleImageSelect = (imageName: string) => {\n        const { dispatch, activeCard, activePlaceholder } = this.props;\n\n        if (activeCard && activePlaceholder) {\n            const ii: ImageInfo = { url: `/api/imagefiles/${imageName}` };\n            dispatch(cardSetChangeImage(activeCard.id, activePlaceholder.id, ii));\n        }\n    };\n\n    render() {\n        const { activePlaceholder, imageUrl, filter } = this.props;\n\n        return (\n            <div className={style.view}>\n                <div>\n                    <button onClick={this.handleAddImageClick} title=\"Add image field\">\n                        <i className=\"material-icons\">add_photo_alternate</i>\n                    </button>\n\n                    <button\n                        className={activePlaceholder === null ? style.disabled : ''}\n                        onClick={this.handleRemoveClick}\n                        title=\"Remove field\"\n                    >\n                        <i className=\"material-icons\">remove</i>\n                    </button>\n                </div>\n\n                {activePlaceholder && activePlaceholder.type === 'image' && (\n                    <>\n                        <div>\n                            <img\n                                src={imageUrl}\n                                alt=\"\"\n                                style={{\n                                    width: 100,\n                                    height: 100,\n                                }}\n                            />\n                        </div>\n\n                        <div>\n                            <input type=\"text\" value={filter} onChange={this.handleFilterChange} />\n                        </div>\n\n                        <div className={style.images}>\n                            {this.props.images.map(im => {\n                                return (\n                                    <img\n                                        key={im.id}\n                                        src={`/api/imagefiles/${im.name}`}\n                                        onClick={() => this.handleImageSelect(im.name)}\n                                        alt=\"\"\n                                        style={{\n                                            width: 100,\n                                            height: 100,\n                                        }}\n                                    />\n                                );\n                            })}\n                        </div>\n                    </>\n                )}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    const activePlaceholder =\n        state.cardsets.activePlaceholder !== null\n            ? state.cardsets.placeholders[state.cardsets.activePlaceholder]\n            : null;\n\n    const activeCard = state.cardsets.activeCard !== null ? state.cardsets.cardsById[state.cardsets.activeCard] : null;\n\n    const imageUrl =\n        state.cardsets.images &&\n        activeCard &&\n        state.cardsets.images[activeCard.id] &&\n        activePlaceholder !== null &&\n        activePlaceholder.type === 'image' &&\n        state.cardsets.images[activeCard.id][activePlaceholder.id]\n            ? state.cardsets.images[activeCard.id][activePlaceholder.id].url\n            : '';\n\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        activePlaceholder,\n        imageUrl,\n        activeCard,\n        images: state.images.images,\n        filter: state.images.filter,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, {}, State>(mapStateToProps)(SidebarImage);\n","import { ChromePicker, ColorResult } from 'react-color';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, cardSetChangeActiveTextPlaceholderColor } from '../actions';\n\ninterface Props {\n    dispatch: Dispatch;\n}\ninterface State {\n    displayColorPicker: boolean;\n}\n\nclass ColorButton extends Component<Props, State> {\n    state = {\n        displayColorPicker: false,\n    };\n\n    handleClick = () => {\n        this.setState({ displayColorPicker: !this.state.displayColorPicker });\n    };\n\n    handleClose = () => {\n        this.setState({ displayColorPicker: false });\n    };\n\n    handleChange = (color: ColorResult) => {\n        const selection = window.getSelection();\n        const range = selection.getRangeAt(0);\n        if (selection.rangeCount === 1 && range.collapsed) {\n            const { dispatch } = this.props;\n            dispatch(cardSetChangeActiveTextPlaceholderColor(color.hex));\n        } else {\n            document.execCommand('forecolor', false, color.hex);\n        }\n    };\n\n    render() {\n        const popover: React.CSSProperties = {\n            position: 'absolute',\n            zIndex: 2,\n        };\n        const cover: React.CSSProperties = {\n            position: 'fixed',\n            top: '0px',\n            right: '0px',\n            bottom: '0px',\n            left: '0px',\n        };\n        return (\n            <>\n                <button onClick={this.handleClick} title=\"Change text color\">\n                    <i className=\"material-icons\">format_color_text</i>\n                </button>\n                {this.state.displayColorPicker ? (\n                    <div style={popover}>\n                        <div style={cover} onClick={this.handleClose} />\n                        <ChromePicker disableAlpha={true} onChange={this.handleChange} />\n                    </div>\n                ) : null}\n            </>\n        );\n    }\n}\n\nexport default connect()(ColorButton);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport WebFont from 'webfontloader';\n\nimport {\n    Dispatch,\n    cardSetChangeActiveTextPlaceholderFontFamilyAndVariant,\n    cardSetChangeActiveTextPlaceholderFontSize,\n    cardSetChangeActiveTextPlaceholderFontVariant,\n} from '../actions';\nimport { State } from '../reducers';\nimport style from './FontSelector.module.css';\nimport webfonts from './webfonts.json';\n\ninterface WebFontsInfo {\n    [propName: string]: {\n        [propName: string]: string;\n    };\n}\n\ninterface FontOption {\n    value: string;\n    label: string;\n}\n\nconst options: FontOption[] = Object.keys(webfonts)\n    .sort()\n    .map(fi => ({ value: fi, label: fi }));\n\ninterface StateProps {\n    activeFont: string;\n    activeFontVariant: string;\n    activeFontSize: number;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = StateProps & DispatchProps;\n\nclass FontSelector extends Component<Props> {\n    getFontStringForLoad = (family: string, variant: string) => {\n        let stringForLoad = family;\n        if (variant !== 'regular') {\n            stringForLoad += ':' + variant;\n        }\n        return stringForLoad;\n    };\n\n    handleChange = (selectedOption?: FontOption | FontOption[] | null) => {\n        if (!selectedOption) return;\n\n        const fontFamily = (selectedOption as FontOption).value;\n\n        let fontVariant = this.props.activeFontVariant;\n        const wf: WebFontsInfo = webfonts;\n        if (!(fontVariant in wf[fontFamily])) {\n            fontVariant = Object.keys(wf[fontFamily]).sort()[0];\n        }\n\n        WebFont.load({\n            google: {\n                families: [this.getFontStringForLoad(fontFamily, fontVariant)],\n            },\n            active: () => {\n                const { dispatch } = this.props;\n                dispatch(cardSetChangeActiveTextPlaceholderFontFamilyAndVariant(fontFamily, fontVariant));\n            },\n        });\n    };\n\n    handleFontVariantChange = (selectedOption?: FontOption | FontOption[] | null) => {\n        if (!selectedOption) return;\n\n        const value = (selectedOption as FontOption).value;\n        WebFont.load({\n            google: {\n                families: [this.getFontStringForLoad(this.props.activeFont, value)],\n            },\n            active: () => {\n                const { dispatch } = this.props;\n                dispatch(cardSetChangeActiveTextPlaceholderFontVariant(value));\n            },\n        });\n    };\n\n    handleFontSizeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeActiveTextPlaceholderFontSize(parseFloat(event.target.value)));\n    };\n\n    render() {\n        const selectedFontFamily = options.find(f => f.value === this.props.activeFont);\n\n        const fontVariantOptions: FontOption[] = Object.keys((webfonts as WebFontsInfo)[this.props.activeFont])\n            .sort()\n            .map(fv => ({ value: fv, label: fv }));\n\n        const selectedFontVariant = fontVariantOptions.find(f => f.value === this.props.activeFontVariant);\n\n        return (\n            <>\n                <input\n                    type=\"number\"\n                    value={this.props.activeFontSize}\n                    onChange={this.handleFontSizeChange}\n                    title=\"Font size\"\n                />\n                <Select\n                    className={style.fontFamily}\n                    value={selectedFontFamily}\n                    onChange={this.handleChange}\n                    options={options}\n                />\n                <Select\n                    className={style.fontVariant}\n                    value={selectedFontVariant}\n                    onChange={this.handleFontVariantChange}\n                    options={fontVariantOptions}\n                />\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    let activeFont = state.cardsets.textSettings.fontFamily;\n    let activeFontVariant = state.cardsets.textSettings.fontVariant;\n    let activeFontSize = state.cardsets.textSettings.fontSize;\n\n    return {\n        activeFont,\n        activeFontVariant,\n        activeFontSize,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, {}, State>(mapStateToProps)(FontSelector);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport {\n    Dispatch,\n    PlaceholderType,\n    cardSetAddTextPlaceholder,\n    cardSetChangeActiveTextPlaceholderAlign,\n    cardSetRemoveActivePlaceholder,\n} from '../actions';\nimport { State } from '../reducers';\nimport ColorButton from './ColorButton';\nimport FontSelector from './FontSelector';\nimport style from './SidebarText.module.css';\n\ninterface StateProps {\n    isAuthenticated: boolean;\n    activePlaceholder: PlaceholderType | null;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = StateProps & DispatchProps;\n\nexport class SidebarText extends Component<Props> {\n    handleAddTextClick = () => {\n        const { dispatch } = this.props;\n        dispatch(cardSetAddTextPlaceholder());\n    };\n\n    handleSetTextAlignLeft = () => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeActiveTextPlaceholderAlign('left'));\n    };\n\n    handleSetTextAlignCenter = () => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeActiveTextPlaceholderAlign('center'));\n    };\n\n    handleSetTextAlignRight = () => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeActiveTextPlaceholderAlign('right'));\n    };\n\n    handleRemoveClick = () => {\n        const { activePlaceholder, dispatch } = this.props;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetRemoveActivePlaceholder());\n        }\n    };\n\n    render() {\n        const { activePlaceholder } = this.props;\n\n        return (\n            <div className={style.view}>\n                <button onClick={this.handleAddTextClick} title=\"Add text field\">\n                    <i className=\"material-icons\">text_fields</i>\n                </button>\n                <button onClick={this.handleSetTextAlignLeft} title=\"Align text left\">\n                    <i className=\"material-icons\">format_align_left</i>\n                </button>\n                <button onClick={this.handleSetTextAlignCenter} title=\"Align text center\">\n                    <i className=\"material-icons\">format_align_center</i>\n                </button>\n                <button onClick={this.handleSetTextAlignRight} title=\"Align text right\">\n                    <i className=\"material-icons\">format_align_right</i>\n                </button>\n                <ColorButton />\n                <FontSelector />\n\n                <button\n                    className={activePlaceholder === null ? style.disabled : ''}\n                    onClick={this.handleRemoveClick}\n                    title=\"Remove field\"\n                >\n                    <i className=\"material-icons\">remove</i>\n                </button>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    const activePlaceholder =\n        state.cardsets.activePlaceholder !== null\n            ? state.cardsets.placeholders[state.cardsets.activePlaceholder]\n            : null;\n\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        activePlaceholder,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, {}, State>(mapStateToProps)(SidebarText);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, SidebarState, cardSetSetSidebarState } from '../actions';\nimport { State } from '../reducers';\nimport SidebarDetails from './SidebarDetails';\nimport SidebarImage from './SidebarImage';\nimport SidebarText from './SidebarText';\nimport style from './Sidebar.module.css';\n\ninterface StateProps {\n    isAuthenticated: boolean;\n    activeSidebar: SidebarState | null;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = StateProps & DispatchProps;\n\nexport class Sidebar extends Component<Props> {\n    handleDetails = () => {\n        const { activeSidebar, dispatch } = this.props;\n        if (activeSidebar === SidebarState.Details) {\n            dispatch(cardSetSetSidebarState(null));\n        } else {\n            dispatch(cardSetSetSidebarState(SidebarState.Details));\n        }\n    };\n\n    handleImages = () => {\n        const { activeSidebar, dispatch } = this.props;\n        if (activeSidebar === SidebarState.Image) {\n            dispatch(cardSetSetSidebarState(null));\n        } else {\n            dispatch(cardSetSetSidebarState(SidebarState.Image));\n        }\n    };\n\n    handleTexts = () => {\n        const { activeSidebar, dispatch } = this.props;\n        if (activeSidebar === SidebarState.Text) {\n            dispatch(cardSetSetSidebarState(null));\n        } else {\n            dispatch(cardSetSetSidebarState(SidebarState.Text));\n        }\n    };\n\n    render() {\n        const { activeSidebar } = this.props;\n        return (\n            <div className={style.sidebar}>\n                <div className={style.controls}>\n                    <i\n                        title=\"Details\"\n                        className={`material-icons ${activeSidebar === SidebarState.Details ? style.active : ''}`}\n                        onClick={this.handleDetails}\n                    >\n                        details\n                    </i>\n                    <i\n                        title=\"Images\"\n                        className={`material-icons ${activeSidebar === SidebarState.Image ? style.active : ''}`}\n                        onClick={this.handleImages}\n                    >\n                        photo\n                    </i>\n                    <i\n                        title=\"Texts\"\n                        className={`material-icons ${activeSidebar === SidebarState.Text ? style.active : ''}`}\n                        onClick={this.handleTexts}\n                    >\n                        text_fields\n                    </i>\n                    {/*<i className=\"material-icons\">picture_as_pdf</i>*/}\n                </div>\n                {activeSidebar !== null && (\n                    <div className={style.view}>\n                        {activeSidebar === SidebarState.Details && <SidebarDetails />}\n                        {activeSidebar === SidebarState.Image && <SidebarImage />}\n                        {activeSidebar === SidebarState.Text && <SidebarText />}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        activeSidebar: state.cardsets.activeSidebar,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, {}, State>(mapStateToProps)(Sidebar);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport shortid from 'shortid';\n\nimport { ACTIVITY_CREATING_PDF, ACTIVITY_SELECTING, ACTIVITY_UPDATING, State } from '../reducers';\nimport {\n    CardType,\n    CardsCollection,\n    Dispatch,\n    cardSetActiveCardAndPlaceholder,\n    cardSetChangeHeight,\n    cardSetChangeWidth,\n    cardSetCreateCard,\n    cardSetSetZoom,\n    gameCreatePdfRequest,\n} from '../actions';\nimport Card from './Card';\nimport KawaiiMessage, { Character } from './KawaiiMessage';\nimport Loader from './Loader';\nimport Sidebar from './Sidebar';\nimport style from './CardSet.module.css';\n\ninterface StateProps {\n    width: number;\n    height: number;\n    isAuthenticated: boolean;\n    cardsAllIds: string[];\n    cardsById: CardsCollection;\n    isCreatingPdf: boolean;\n    activity: number;\n    zoom: number;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = StateProps & DispatchProps;\n\ninterface LocalState {\n    pageWidth: number;\n    pageHeight: number;\n    topBottomMargin: number;\n    leftRightMargin: number;\n}\n\nexport class CardSet extends Component<Props, LocalState> {\n    state = {\n        pageWidth: 210,\n        pageHeight: 297,\n        topBottomMargin: 15,\n        leftRightMargin: 9,\n    };\n\n    handleCreateCardClick = () => {\n        const { dispatch } = this.props;\n\n        const newCard: CardType = { id: shortid.generate(), count: 1 };\n\n        dispatch(cardSetCreateCard(newCard));\n    };\n\n    handleGeneratePdfClick = () => {\n        const { dispatch } = this.props;\n        const { pageWidth, pageHeight, topBottomMargin, leftRightMargin } = this.state;\n\n        dispatch(gameCreatePdfRequest(pageWidth, pageHeight, topBottomMargin, leftRightMargin));\n    };\n\n    handleWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeWidth(parseFloat(event.target.value)));\n    };\n\n    handleHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeHeight(parseFloat(event.target.value)));\n    };\n\n    handleZoom = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetSetZoom(parseFloat(event.target.value)));\n    };\n\n    handlePageWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ pageWidth: parseFloat(event.target.value) });\n    };\n\n    handlePageHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ pageHeight: parseFloat(event.target.value) });\n    };\n\n    handleTopBottomMarginChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ topBottomMargin: parseFloat(event.target.value) });\n    };\n\n    handleLeftRightMarginChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ leftRightMargin: parseFloat(event.target.value) });\n    };\n\n    handleClickOutsideOfCard = () => {\n        const { dispatch } = this.props;\n        dispatch(cardSetActiveCardAndPlaceholder(null, null));\n    };\n\n    render() {\n        const { isAuthenticated, cardsAllIds, cardsById, width, height, isCreatingPdf, activity, zoom } = this.props;\n\n        return (\n            isAuthenticated && (\n                <div>\n                    {(activity & ACTIVITY_UPDATING) === ACTIVITY_UPDATING && <Loader fixed={true} />}\n                    <KawaiiMessage character={Character.Ghost}>\n                        <p>Here you can design your cards.</p>\n                    </KawaiiMessage>\n\n                    <div className={style.cardsetview}>\n                        <div className={style.sidebar}>\n                            <Sidebar />\n                        </div>\n                        <div onMouseDown={this.handleClickOutsideOfCard} onTouchStart={this.handleClickOutsideOfCard}>\n                            <div className=\"form\">\n                                <label htmlFor=\"card_width\">Card width (mm):</label>\n                                <input\n                                    id=\"card_width\"\n                                    type=\"number\"\n                                    min=\"0\"\n                                    step=\"0.1\"\n                                    onChange={this.handleWidthChange}\n                                    className=\"form-control\"\n                                    placeholder=\"width\"\n                                    value={width}\n                                />\n                                <label htmlFor=\"card_height\">Card height (mm):</label>\n                                <input\n                                    id=\"card_height\"\n                                    type=\"number\"\n                                    min=\"0\"\n                                    step=\"0.1\"\n                                    onChange={this.handleHeightChange}\n                                    className=\"form-control\"\n                                    placeholder=\"height\"\n                                    value={height}\n                                />\n                            </div>\n                            <div className=\"form\">\n                                <label htmlFor=\"zoom\">Zoom (if you want to see details or big picture)</label>\n                                <input\n                                    id=\"zoom\"\n                                    type=\"number\"\n                                    min=\"0.1\"\n                                    step=\"0.1\"\n                                    onChange={this.handleZoom}\n                                    className=\"form-control\"\n                                    placeholder=\"zoom\"\n                                    value={zoom}\n                                />\n                            </div>\n                            {(activity & ACTIVITY_SELECTING) === ACTIVITY_SELECTING && <Loader />}\n                            <div className={style.cardset}>\n                                <ul\n                                    style={{\n                                        gridTemplateColumns: `repeat(auto-fill, minmax(${width * zoom}mm, 1fr))`,\n                                    }}\n                                >\n                                    {cardsAllIds &&\n                                        cardsAllIds.map(cardId => (\n                                            <li key={cardId}>\n                                                <Card card={cardsById[cardId]} />\n                                            </li>\n                                        ))}\n                                </ul>\n                            </div>\n                            <div className=\"form\">\n                                <button onClick={this.handleCreateCardClick}>Create Card</button>\n                            </div>\n                        </div>\n                    </div>\n\n                    <KawaiiMessage character={Character.Ghost} mood=\"excited\">\n                        <p>Here you can generate PDF for your cardset.</p>\n                        <p>Hint 1: A4 page size is 210 mm x 297 mm. Letter page size is 215.9 x 279.4 mm.</p>\n                        <p>Hint 2: 1 inch is equal to 25.4 mm.</p>\n                    </KawaiiMessage>\n\n                    <div className=\"form\">\n                        <label htmlFor=\"page_width\">Page width (mm):</label>\n                        <input\n                            id=\"page_width\"\n                            type=\"number\"\n                            onChange={this.handlePageWidthChange}\n                            placeholder=\"Page width\"\n                            value={this.state.pageWidth}\n                        />\n                        <label htmlFor=\"page_height\">Page height (mm):</label>\n                        <input\n                            id=\"page_height\"\n                            type=\"number\"\n                            onChange={this.handlePageHeightChange}\n                            placeholder=\"Page Height\"\n                            value={this.state.pageHeight}\n                        />\n                        <label htmlFor=\"page_topbottom_margin\">Margin from top/bottom (mm):</label>\n                        <input\n                            id=\"page_topbottom_margin\"\n                            type=\"number\"\n                            onChange={this.handleTopBottomMarginChange}\n                            placeholder=\"Top/Bottom margin\"\n                            value={this.state.topBottomMargin}\n                        />\n                        <label htmlFor=\"page_leftright_margin\">Margin from left/right (mm):</label>\n                        <input\n                            id=\"page_leftright_margin\"\n                            type=\"number\"\n                            onChange={this.handleLeftRightMarginChange}\n                            placeholder=\"Left/Right margin\"\n                            value={this.state.leftRightMargin}\n                        />\n                        <button disabled={isCreatingPdf} onClick={this.handleGeneratePdfClick}>\n                            Generate PDF\n                        </button>\n                    </div>\n                </div>\n            )\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        activity: state.cardsets.activity,\n        width: state.cardsets.width,\n        height: state.cardsets.height,\n        zoom: state.cardsets.zoom,\n        isAuthenticated: state.auth.isAuthenticated,\n        cardsAllIds: state.cardsets.cardsAllIds,\n        cardsById: state.cardsets.cardsById,\n        isCreatingPdf: (state.games.activity & ACTIVITY_CREATING_PDF) === ACTIVITY_CREATING_PDF,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, {}, State>(mapStateToProps)(CardSet);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, cardSetSelectRequest } from './actions';\nimport { State } from './reducers';\nimport CardSet from './components/CardSet';\n\ninterface Props {\n    dispatch: Dispatch;\n    match: { params: { id: string } };\n    isAuthenticated: boolean;\n}\n\nexport class CardSetPage extends Component<Props> {\n    componentDidMount() {\n        const { dispatch, match } = this.props;\n        dispatch(cardSetSelectRequest(match.params.id));\n    }\n\n    render() {\n        return <CardSet />;\n    }\n}\n\nconst mapStateToProps = (state: State) => ({ isAuthenticated: state.auth.isAuthenticated });\n\nexport default connect(mapStateToProps)(CardSetPage);\n","import React, { Component } from 'react';\n\nexport default class ChangelogPage extends Component {\n    render() {\n        return (\n            <div>\n                <p>Here you can find list of future plans and what was implemented recently.</p>\n                <h2>Future plans</h2>\n                <ul>\n                    <li>\n                        Image improvements:\n                        <ul>\n                            <li>Upload your own images.</li>\n                            <li>Change color of images (for SVG images).</li>\n                            <li>Generating list of author's of icons if attribution is required.</li>\n                            <li>Various ideas for advances images controls.</li>\n                        </ul>\n                    </li>\n                    <li>Card templates.</li>\n                    <li>Two-sided cards.</li>\n                    <li>UI improvements (snapping, field lock, keyboard support and etc.).</li>\n                    <li>PDF generation for all the game.</li>\n                    <li>Backgrounds support.</li>\n                    <li>Data export/import from JSON and CSV.</li>\n                    <li>Possibility to order your games for printing from various printing providers.</li>\n                </ul>\n                <h2>2019-02-24</h2>\n                <ul>\n                    <li>Sidebar created for lighter, cleaner and faster UI.</li>\n                    <li>Zoom added to card set for more flexibility while viewing or editing.</li>\n                </ul>\n                <h2>2019-02-23</h2>\n                <ul>\n                    <li>Text rendering changed and should be working properly now.</li>\n                    <li>Crash with new card set fixed.</li>\n                    <li>Minor UI improvements.</li>\n                </ul>\n                <h2>2019-02-17</h2>\n                <p>Initial public version.</p>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\n\ninterface Props {\n    children: React.ReactNode;\n}\n\ninterface State {\n    hasError: boolean;\n}\n\nexport default class ErrorBoundary extends Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    componentDidCatch() {\n        this.setState({ hasError: true });\n        // You can also log the error to an error reporting service\n        // logErrorToMyService(error, info);\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return (\n                <KawaiiMessage character={Character.Browser} mood=\"ko\">\n                    Something unexpected has happened. If you want this problem to be fixed write me to{' '}\n                    <a href=\"mailto:dalius@ffff.lt\">dalius@ffff.lt</a>.\n                </KawaiiMessage>\n            );\n        }\n        return this.props.children;\n    }\n}\n","import { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { CardSetsCollection, Dispatch, IdsArray, cardSetCreateRequest, messageRequest } from '../actions';\nimport { State } from '../reducers';\nimport KawaiiMessage, { Character } from './KawaiiMessage';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated: boolean;\n    activeGame: string | null;\n    allIds: IdsArray;\n    byId: CardSetsCollection;\n}\n\ninterface LocalState {\n    cardSetName: string;\n    width: number;\n    height: number;\n}\n\nexport class CardSets extends Component<Props, LocalState> {\n    state: LocalState = {\n        cardSetName: '',\n        width: 63.5,\n        height: 88.9,\n    };\n\n    handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ cardSetName: event.target.value });\n    };\n\n    handleWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ width: parseFloat(event.target.value) });\n    };\n\n    handleHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ height: parseFloat(event.target.value) });\n    };\n\n    handleCreateCardSetClick = () => {\n        const { dispatch, activeGame } = this.props;\n\n        if (activeGame === null) {\n            return;\n        }\n\n        const cardSetName = this.state.cardSetName.trim();\n\n        if (cardSetName) {\n            dispatch(cardSetCreateRequest(cardSetName, this.state.width, this.state.height, activeGame));\n        } else {\n            dispatch(messageRequest('error', 'Card Set name should be non empty.'));\n        }\n    };\n\n    render() {\n        const { isAuthenticated, activeGame, allIds, byId } = this.props;\n\n        const cardsetItems = allIds\n            .map(gameId => byId[gameId])\n            .map(cardset => (\n                <li key={cardset.id}>\n                    <Link to={`/cardset/${cardset.id}`}>{cardset.name}</Link>\n                </li>\n            ));\n\n        return (\n            isAuthenticated &&\n            activeGame !== null && (\n                <div>\n                    <KawaiiMessage character={Character.Ghost}>\n                        Each game is made from card sets. Card set is collection of cards that share the same properties\n                        but have different text and images.\n                    </KawaiiMessage>\n\n                    <ul>{cardsetItems}</ul>\n\n                    <div className=\"form\">\n                        <label htmlFor=\"cardset_name\">Card Set name:</label>\n                        <input\n                            id=\"cardset_name\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            className=\"form-control\"\n                            placeholder=\"Card Set name\"\n                        />\n                        <label htmlFor=\"card_width\">Card width:</label>\n                        <input\n                            id=\"card_width\"\n                            type=\"number\"\n                            min=\"0\"\n                            step=\"0.1\"\n                            onChange={this.handleWidthChange}\n                            className=\"form-control\"\n                            placeholder=\"Card width\"\n                            value={this.state.width}\n                        />\n                        <label htmlFor=\"card_height\">Card height:</label>\n                        <input\n                            id=\"card_height\"\n                            type=\"number\"\n                            min=\"0\"\n                            step=\"0.1\"\n                            onChange={this.handleHeightChange}\n                            className=\"form-control\"\n                            placeholder=\"Card height\"\n                            value={this.state.height}\n                        />\n                        <button onClick={this.handleCreateCardSetClick}>Create Card Set</button>\n                    </div>\n\n                    <KawaiiMessage character={Character.Ghost} mood=\"excited\">\n                        Hint: Poker card size 63.5mm x 88.9mm. Bridge card size 56mm x 88.9mm. But you can cards of any\n                        size.\n                    </KawaiiMessage>\n                </div>\n            )\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        activeGame: state.games.active,\n        allIds: state.cardsets.allIds,\n        byId: state.cardsets.byId,\n    };\n};\n\nexport default connect(mapStateToProps)(CardSets);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, gameSelectRequest } from './actions';\nimport { State } from './reducers';\nimport CardSets from './components/CardSets';\n\ninterface Props {\n    dispatch: Dispatch;\n    match: { params: { id: string } };\n    isAuthenticated: boolean;\n}\n\nexport class GamePage extends Component<Props> {\n    componentDidMount() {\n        const { dispatch, match } = this.props;\n        dispatch(gameSelectRequest(match.params.id, true));\n    }\n\n    render() {\n        return <CardSets />;\n    }\n}\n\nconst mapStateToProps = (state: State) => ({ isAuthenticated: state.auth.isAuthenticated });\n\nexport default connect(mapStateToProps)(GamePage);\n","import React, { Component } from 'react';\n\ninterface Props {\n    onLogin: (creds: { username: string; password: string }) => void;\n    onLoginFailure: (message: string) => void;\n}\n\ninterface LocalState {\n    username: string;\n    password: string;\n}\n\nexport default class Login extends Component<Props, LocalState> {\n    state = {\n        username: '',\n        password: '',\n    };\n\n    handleUsernameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ username: event.target.value });\n    };\n\n    handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ password: event.target.value });\n    };\n\n    handleSubmit = (event: React.FormEvent) => {\n        const username = this.state.username.trim();\n        const password = this.state.password.trim();\n        if (username && password) {\n            const creds = { username, password };\n            this.props.onLogin(creds);\n        } else {\n            this.props.onLoginFailure('Missing username and/or password.');\n        }\n        event.preventDefault();\n    };\n\n    render() {\n        return (\n            <div>\n                <form className=\"form\" onSubmit={this.handleSubmit}>\n                    <input\n                        type=\"text\"\n                        onChange={this.handleUsernameChange}\n                        className=\"form-control\"\n                        placeholder=\"Username\"\n                    />\n                    <input\n                        type=\"password\"\n                        onChange={this.handlePasswordChange}\n                        className=\"form-control\"\n                        placeholder=\"Password\"\n                    />\n                    <input type=\"submit\" value=\"Login\" />\n                </form>\n            </div>\n        );\n    }\n}\n","import { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, loginRequest, messageRequest } from './actions';\nimport { State } from './reducers';\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\nimport Login from './components/Login';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated: boolean;\n}\n\nexport class LoginPage extends Component<Props> {\n    render() {\n        const { dispatch, isAuthenticated } = this.props;\n\n        return (\n            <div className=\"App\">\n                {!isAuthenticated && (\n                    <>\n                        <KawaiiMessage character={Character.Ghost}>\n                            Please enter your credentials to login. If you don't have account yet then you can create\n                            one here: <a href=\"/signup\">Sign-up</a>.\n                        </KawaiiMessage>\n\n                        <Login\n                            onLogin={creds => dispatch(loginRequest(creds))}\n                            onLoginFailure={msg => dispatch(messageRequest('error', msg))}\n                        />\n                    </>\n                )}\n                {isAuthenticated && <Redirect to=\"/\" />}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => ({ isAuthenticated: state.auth.isAuthenticated });\n\nexport default connect(mapStateToProps)(LoginPage);\n","import { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, GamesCollection, IdsArray, gameCreateRequest, messageRequest } from '../actions';\nimport { State } from '../reducers';\nimport KawaiiMessage, { Character } from './KawaiiMessage';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated: boolean;\n    allIds: IdsArray;\n    byId: GamesCollection;\n}\n\ninterface LocalState {\n    gameName: string;\n}\n\nexport class Games extends Component<Props, LocalState> {\n    state: LocalState = {\n        gameName: '',\n    };\n\n    handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ gameName: event.target.value });\n    };\n\n    handleCreateGameClick = () => {\n        const { dispatch } = this.props;\n\n        const gamename = this.state.gameName.trim();\n        if (gamename) {\n            dispatch(gameCreateRequest(gamename));\n        } else {\n            dispatch(messageRequest('error', 'Game name should be non empty.'));\n        }\n    };\n\n    render() {\n        const { isAuthenticated, allIds, byId } = this.props;\n\n        const gameItems = allIds\n            .map(gameId => byId[gameId])\n            .map(game => (\n                <li key={game.id}>\n                    <Link to={`/game/${game.id}`}>{game.name}</Link>\n                </li>\n            ));\n\n        return (\n            isAuthenticated && (\n                <div>\n                    <KawaiiMessage character={Character.Ghost}>\n                        {allIds.length === 0 && (\n                            <>Here you can create your games and see list of your games when you have some.</>\n                        )}\n                        {allIds.length > 0 && (\n                            <>Here you can see a list of your games or you can create even more games.</>\n                        )}\n                    </KawaiiMessage>\n\n                    <ul>{gameItems}</ul>\n                    <div className=\"form\">\n                        <label htmlFor=\"game_name\">Game name:</label>\n                        <input\n                            id=\"game_name\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            className=\"form-control\"\n                            placeholder=\"Game name\"\n                        />\n                        <button onClick={this.handleCreateGameClick}>Create Game</button>\n                    </div>\n                </div>\n            )\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        allIds: state.games.allIds,\n        byId: state.games.byId,\n    };\n};\n\nexport default connect(mapStateToProps)(Games);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { State } from './reducers';\nimport Games from './components/Games';\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\n\ninterface Props {\n    isAuthenticated: boolean;\n}\n\nexport class Main extends Component<Props> {\n    render() {\n        if (this.props.isAuthenticated) {\n            return <Games />;\n        } else {\n            return (\n                <KawaiiMessage character={Character.Ghost}>\n                    Hey! Here you can create your own card game but you need to <a href=\"/login\">Login</a> or{' '}\n                    <a href=\"/signup\">Sign-up</a> first.\n                </KawaiiMessage>\n            );\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n    };\n};\n\nexport default connect(mapStateToProps)(Main);\n","import { State } from './reducers';\n\nexport const getActiveGame = (state: State) => (state.games.active ? state.games.byId[state.games.active] : null);\n\nexport const getActiveCardSet = (state: State) =>\n    state.cardsets.active ? state.cardsets.byId[state.cardsets.active] : null;\n","import React from 'react';\n\ninterface Props {\n    onLogout: () => void;\n}\n\nfunction Logout(props: Props) {\n    return (\n        <button onClick={() => props.onLogout()} className=\"btn btn-primary\">\n            Logout\n        </button>\n    );\n}\n\nexport default Logout;\n","import { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { CardSetType, Dispatch, GameType, MessageType, logoutRequest } from '../actions';\nimport { State } from '../reducers';\nimport { getActiveCardSet, getActiveGame } from '../selectors';\nimport Logout from './Logout';\nimport style from './Navbar.module.css';\n\ninterface OwnProps {\n    isAuthenticated: boolean;\n}\n\ninterface StateProps {\n    messages: MessageType[];\n    activeGame: GameType | null;\n    activeCardSet: CardSetType | null;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nexport class Navbar extends Component<Props> {\n    render() {\n        const { dispatch, isAuthenticated, messages, activeGame, activeCardSet } = this.props;\n\n        return (\n            <nav>\n                <div id=\"messages\" className={style.messages}>\n                    <ul>\n                        {messages.map(m => (\n                            <li key={m.id}>\n                                <i className=\"material-icons\">error</i> {m.text}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n                <div>\n                    <h1 className={style.header}>\n                        <Link to=\"/\">CARD-A-MON</Link>\n                    </h1>\n                    <div>\n                        <ul className={style.menu}>\n                            {isAuthenticated && (\n                                <>\n                                    <li>\n                                        <Link to=\"/\">Main</Link>\n                                    </li>\n                                    {activeGame && (\n                                        <li>\n                                            <Link to={`/game/${activeGame.id}`}>Game \"{activeGame.name}\"</Link>\n                                        </li>\n                                    )}\n                                    {activeCardSet && (\n                                        <li>\n                                            <Link to={`/cardset/${activeCardSet.id}`}>\n                                                Card Set \"{activeCardSet.name}\"\n                                            </Link>\n                                        </li>\n                                    )}\n                                </>\n                            )}\n                            <li>\n                                <Link to=\"/changelog\">Changelog</Link>\n                            </li>\n                            <li>\n                                <Link to=\"/about\">About</Link>\n                            </li>\n                            {isAuthenticated && (\n                                <li>\n                                    <Logout onLogout={() => dispatch(logoutRequest())} />\n                                </li>\n                            )}\n                            {!isAuthenticated && (\n                                <>\n                                    <li>\n                                        <Link to=\"/login\">Login</Link>\n                                    </li>\n                                    <li>\n                                        <Link to=\"/signup\">Sign-up</Link>\n                                    </li>\n                                </>\n                            )}\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        messages: state.message.messages,\n        activeGame: getActiveGame(state),\n        activeCardSet: getActiveCardSet(state),\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(Navbar);\n","import React, { Component } from 'react';\n\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\n\nexport default class NotFoundPage extends Component {\n    render() {\n        return (\n            <KawaiiMessage character={Character.Browser} mood=\"sad\">\n                There is nothing here.\n            </KawaiiMessage>\n        );\n    }\n}\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Credentials, Dispatch, messageRequest } from '../actions';\n\ninterface Props {\n    dispatch: Dispatch;\n    onSignUp: (cred: Credentials) => void;\n}\n\nexport class SignUp extends Component<Props> {\n    state = {\n        username: '',\n        password: '',\n        passwordRepeat: '',\n    };\n\n    handleSubmit(event: React.FormEvent) {\n        const { dispatch, onSignUp } = this.props;\n\n        if (this.state.password !== this.state.passwordRepeat) {\n            dispatch(messageRequest('error', 'Passwords do not match.'));\n        } else {\n            const creds = {\n                username: this.state.username.trim(),\n                password: this.state.password.trim(),\n            };\n            onSignUp(creds);\n        }\n\n        event.preventDefault();\n    }\n\n    handleUsernameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ username: event.target.value });\n    };\n\n    handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ password: event.target.value });\n    };\n\n    handlePasswordRepeatChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ passwordRepeat: event.target.value });\n    };\n\n    render() {\n        return (\n            <div>\n                <form className=\"form\" onSubmit={event => this.handleSubmit(event)}>\n                    <input\n                        type=\"text\"\n                        onChange={this.handleUsernameChange}\n                        className=\"form-control\"\n                        placeholder=\"Username\"\n                    />\n                    <input\n                        type=\"password\"\n                        onChange={this.handlePasswordChange}\n                        className=\"form-control\"\n                        placeholder=\"Password\"\n                    />\n                    <input\n                        type=\"password\"\n                        onChange={this.handlePasswordRepeatChange}\n                        className=\"form-control\"\n                        placeholder=\"Repeat password here\"\n                    />\n                    <input type=\"submit\" value=\"Sign Up\" />\n                </form>\n            </div>\n        );\n    }\n}\nexport default connect()(SignUp);\n","import { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, signupRequest } from './actions';\nimport { State } from './reducers';\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\nimport SignUp from './components/SignUp';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated: boolean;\n}\n\nexport class SignUpPage extends Component<Props> {\n    render() {\n        const { dispatch, isAuthenticated } = this.props;\n\n        return (\n            <div className=\"App\">\n                {!isAuthenticated && (\n                    <>\n                        <KawaiiMessage character={Character.Ghost}>\n                            Create your user here. Instead of user name you can use your e-mail. If you forget your\n                            password then you can send me e-mail (I will not send you any e-mails without your consent).\n                            If you use regular user name and forget your password then you will not be able to access\n                            your account.\n                        </KawaiiMessage>\n\n                        <SignUp onSignUp={creds => dispatch(signupRequest(creds))} />\n                    </>\n                )}\n                {isAuthenticated && <Redirect to=\"/\" />}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => ({ isAuthenticated: state.auth.isAuthenticated });\n\nexport default connect(mapStateToProps)(SignUpPage);\n","import './App.css';\n\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, initRequest } from './actions';\nimport { State } from './reducers';\nimport AboutPage from './AboutPage';\nimport CardSetPage from './CardSetPage';\nimport ChangelogPage from './ChangelogPage';\nimport ErrorBoundry from './ErrorBoundry';\nimport GamePage from './GamePage';\nimport LoginPage from './LoginPage';\nimport Main from './Main';\nimport Navbar from './components/Navbar';\nimport NotFoundPage from './NotFoundPage';\nimport SignUpPage from './SignUpPage';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated: boolean;\n}\n\nexport class App extends Component<Props> {\n    componentDidMount() {\n        this.props.dispatch(initRequest());\n    }\n\n    render() {\n        const { isAuthenticated } = this.props;\n        return (\n            <Router>\n                <div className=\"App\">\n                    <ErrorBoundry>\n                        <Navbar isAuthenticated={isAuthenticated} />\n                        <Switch>\n                            <Route exact path=\"/\" component={Main} />\n                            <Route exact path=\"/login\" component={LoginPage} />\n                            <Route exact path=\"/signup\" component={SignUpPage} />\n                            <Route exact path=\"/game/:id\" component={GamePage} />\n                            <Route exact path=\"/cardset/:id\" component={CardSetPage} />\n                            <Route exact path=\"/changelog\" component={ChangelogPage} />\n                            <Route exact path=\"/about\" component={AboutPage} />\n                            <Route component={NotFoundPage} />\n                        </Switch>\n                        <div className=\"App-footer\">Dalius Dobravolskas &copy; {new Date().getFullYear()}</div>\n                    </ErrorBoundry>\n                </div>\n            </Router>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    const { auth } = state;\n    const { isAuthenticated } = auth;\n\n    return {\n        isAuthenticated,\n    };\n};\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ninterface Config {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import './index.css';\n\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { createAppStore } from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createAppStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { rootSaga } from './sagas';\nimport reducers from './reducers';\n\nexport function createAppStore() {\n    const sagaMiddleware = createSagaMiddleware();\n    const store = createStore(\n        reducers,\n        // @ts-ignore: __REDUX_DEVTOOLS_EXTENSION__ does not exists on window\n        window.__REDUX_DEVTOOLS_EXTENSION__\n            ? compose(\n                  applyMiddleware(sagaMiddleware),\n                  // @ts-ignore: __REDUX_DEVTOOLS_EXTENSION__ does not exists on window\n                  window.__REDUX_DEVTOOLS_EXTENSION__(),\n              )\n            : applyMiddleware(sagaMiddleware),\n    );\n    sagaMiddleware.run(rootSaga);\n    return store;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__3wMPS\",\"controls\":\"Sidebar_controls__3VVbM\",\"active\":\"Sidebar_active__4ldTH\",\"view\":\"Sidebar_view__-0BeZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldcontroller\":\"FieldController_fieldcontroller__3ifWc\",\"fieldcontrolleractiveplaceholder\":\"FieldController_fieldcontrolleractiveplaceholder__3XZOP\",\"fieldcontrolleractive\":\"FieldController_fieldcontrolleractive__3fSLl\",\"controller\":\"FieldController_controller__VCesw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarDetails_view__29V31\",\"disabled\":\"SidebarDetails_disabled__1htJF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fixed\":\"Loader_fixed__3q8O9\",\"relative\":\"Loader_relative__1lapZ\",\"loader\":\"Loader_loader__1ZCGC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarImage_view__2LKQM\",\"disabled\":\"SidebarImage_disabled__1tNhN\",\"images\":\"SidebarImage_images__3zDK2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardset\":\"CardSet_cardset__21qjI\",\"cardsetview\":\"CardSet_cardsetview__1rqd1\",\"sidebar\":\"CardSet_sidebar__3y8_T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Navbar_header__FZp4U\",\"menu\":\"Navbar_menu__1JWvN\",\"messages\":\"Navbar_messages__h_dLG\"};"],"sourceRoot":""}