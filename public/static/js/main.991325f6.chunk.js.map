{"version":3,"sources":["components/rotate.svg","components/Card.module.css","components/SidebarImage.module.css","components/ConfirmedDelete.module.css","components/EditableTitle.module.css","components/FontSelector.module.css","components/SidebarText.module.css","components/image.svg","components/ImageField.module.css","components/ContentEditable.module.css","components/text.svg","components/SidebarGeneratePng.module.css","components/SidebarGeneratePdf.module.css","components/SidebarMeasurements.module.css","components/SidebarSettings.module.css","components/SidebarUpload.module.css","components/CardSets.module.css","components/FeatureList.module.css","components/screenshot.png","components/FieldController.module.css","actions.ts","constants.ts","requests.ts","utils.ts","types.ts","workerController.ts","storage.ts","fontLoader.tsx","sagas.ts","reducers.ts","store.ts","components/KawaiiMessage.tsx","AboutPage.tsx","components/FieldController.tsx","components/ImageField.tsx","components/ContentEditable.tsx","components/TextField.tsx","components/Card.tsx","components/EditableTitle.tsx","components/Loader.tsx","components/SidebarDetails.tsx","components/SidebarGeneratePng.tsx","components/PDFGenerator.tsx","components/SidebarGeneratePdf.tsx","components/ColorButton.tsx","components/SidebarImage.tsx","components/SidebarImportExport.tsx","components/SidebarMeasurements.tsx","components/SidebarSettings.tsx","components/FontSelector.tsx","components/SidebarText.tsx","components/SidebarUpload.tsx","components/Sidebar.tsx","components/CardSet.tsx","CardSetPage.tsx","ChangelogPage.tsx","ErrorBoundry.tsx","components/ConfirmedDelete.tsx","components/CardSets.tsx","GamePage.tsx","components/Login.tsx","LoginPage.tsx","components/FeatureList.tsx","components/Games.tsx","Main.tsx","selectors.ts","components/Logout.tsx","components/Navbar.tsx","NotFoundPage.tsx","components/SignUp.tsx","SignUpPage.tsx","App.tsx","serviceWorker.ts","index.tsx","components/Sidebar.module.css","components/Navbar.module.css","components/Loader.module.css","components/SidebarDetails.module.css","components/CardSet.module.css","components/pan.svg","components/zoom.svg","components/resize.svg"],"names":["module","exports","__webpack_require__","p","card","title","active","disabled","view","images","button","answer","input","fontFamily","fontVariant","over","content","cardsets","features","fieldcontroller","fieldcontrolleractivefield","fieldcontrolleractive","controller","touchactivated","SidebarState","CURRENT_CARDSET_VERSION","DEFAULT_FONT_SIZE","DEFAULT_LINE_HEIGHT","BLEED_WIDTH","INIT_REQUEST","MESSAGE_DISPLAY","MESSAGE_HIDE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_REQUEST","LOGOUT_FAILURE","LOGOUT_SUCCESS","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_FAILURE","GAME_CREATE_REQUEST","GAME_CREATE_SUCCESS","GAME_DELETE_REQUEST","GAME_RENAME_REQUEST","GAME_LIST_SUCCESS","GAME_LIST_REQUEST","GAME_LIST_FAILURE","GAME_LIST_RESET","GAME_SELECT_REQUEST","GAME_SELECT_SUCCESS","GAME_SELECT_FAILURE","GAME_CREATE_PDF_REQUEST","GAME_CREATE_PDF_SUCCESS","GAME_CREATE_PDF_FAILURE","GAME_CREATE_PNG_REQUEST","GAME_CREATE_PNG_SUCCESS","GAME_CREATE_PNG_FAILURE","CARDSETS_SELECT_SUCCESS","CARDSET_CREATE_REQUEST","CARDSET_CREATE_SUCCESS","CARDSET_CREATE_FAILURE","CARDSET_DELETE_REQUEST","CARDSET_RENAME_REQUEST","CARDSET_IMPORT_DATA","CARDSET_LIST_SUCCESS","CARDSET_LIST_RESET","CARDSET_SELECT_REQUEST","CARDSET_SELECT_SUCCESS","CARDSET_CREATE_CARD","CARDSET_CLONE_CARD","CARDSET_REMOVE_CARD","CARDSET_UPDATE_CARD_COUNT","CARDSET_ADD_TEXT_FIELD","CARDSET_ADD_IMAGE_FIELD","CARDSET_CHANGE_ACTIVE_FIELD_NAME","CARDSET_REMOVE_ACTIVE_FIELD","CARDSET_RAISE_ACTIVE_FIELD","CARDSET_RAISE_ACTIVE_FIELD_TO_TOP","CARDSET_LOWER_ACTIVE_FIELD","CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM","CARDSET_LOCK_ACTIVE_FIELD","CARDSET_UNLOCK_ACTIVE_FIELD","CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD","CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD","CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD","CARDSET_CHANGE_WIDTH","CARDSET_CHANGE_HEIGHT","CARDSET_CHANGE_IS_TWO_SIDED","CARDSET_CHANGE_SNAPPING_DISTANCE","CARDSET_CHANGE_FIELD_POSITION","CARDSET_CHANGE_FIELD_PAN","CARDSET_CHANGE_FIELD_ZOOM","CARDSET_CHANGE_FIELD_SIZE","CARDSET_CHANGE_FIELD_ANGLE","CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN","CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR","CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY","CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT","CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT","CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE","CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT","CARDSET_CHANGE_TEXT","CARDSET_CHANGE_IMAGE","CARDSET_CHANGE_IMAGE_BASE64","CARDSET_SET_ACTIVE_CARD_AND_FIELD","CARDSET_CHANGE_APPLY_TO_ALLCARDS","CARDSET_SELECT_FAILURE","CARDSET_SET_SIDEBAR_STATE","CARDSET_SET_ZOOM","CARDSET_UPLOAD_IMAGE","CARDSET_UPLOAD_IMAGE_SUCCESS","CARDSET_UPLOAD_IMAGE_FAILURE","CARDSET_DELETE_IMAGE","CARDSET_UNDO","CARDSET_REDO","IMAGE_LIST_REQUEST","IMAGE_LIST_SUCCESS","IMAGE_LIST_FAILURE","messageDisplay","type","text","id","message","shortid","generate","gameCreateRequest","gamename","gameDeleteRequest","gameId","gameRenameRequest","newName","gameSelectRequest","updateCardSets","gameCreatePdfRequest","collectionType","collectionId","pageWidth","pageHeight","topBottomMargin","leftRightMargin","verticalSpace","horizontalSpace","includeBleedingArea","cutMarksForScissors","cutMarksForGuillotine","cutMarksInMarginArea","cutMarksOnFrontSideOnly","gameCreatePngRequest","dpi","cardSetCreateRequest","cardsetname","width","height","cardSetDeleteRequest","cardSetId","cardSetRenameRequest","cardSetImportData","data","cardSetCreateCard","cardSetCloneCard","cardSetRemoveCard","cardSetUpdateCardCount","count","cardSetAddTextField","cardSetAddImageField","cardSetChangeActiveFieldName","name","cardSetRemoveActiveField","cardSetRaiseActiveField","cardSetRaiseActiveFieldToTop","cardSetLowerActiveField","cardSetLowerActiveFieldToBottom","cardSetLockActiveField","cardSetUnlockActiveField","cardSetChangeFitForActiveField","fit","cardSetChangeCropForActiveField","crop","cardSetChangeUnclickableForActiveField","unclickable","cardSetChangeWidth","maintainAspectRatio","resizeContent","cardSetChangeHeight","cardSetChangeIsTwoSided","isTwoSided","cardSetChangeSnappingDistance","snappingDistance","cardSetChangeFieldPosition","cardId","fieldId","x","y","group","cardSetChangeFieldPan","cx","cy","cardSetChangeFieldZoom","zoom","cardSetChangeFieldSize","cardSetChangeFieldAngle","angle","cardSetChangeActiveTextFieldAlign","align","cardSetChangeActiveTextFieldColor","color","cardSetChangeActiveTextFieldFontVariant","cardSetChangeActiveTextFieldFontFamilyAndVariant","cardSetChangeActiveTextFieldFontSize","fontSize","cardSetChangeActiveTextFieldLineHeight","lineHeight","cardSetChangeText","textInfo","cardSetChangeImage","imageInfo","cardSetChangeImageBase64","base64","cardSetActiveCardAndField","isBackActive","cardSetChangeApplyToAllCards","applyToAllCards","cardSetSetSidebarState","sidebarState","cardSetSetZoom","cardSetUploadImage","file","load","error","progress","abort","cancelToken","cardSetDeleteImage","imageId","cardSetUndo","cardSetRedo","imageListRequest","filter","location","handleAxiosError","response","Error","request","console","log","getTokens","creds","axios","post","then","resp","catch","refreshToken","refreshTokenValue","config","headers","Authorization","concat","accessToken","deleteAccessToken","token","delete","status","deleteRefreshToken","registerUser","getRequest","url","get","postRequest","postRequestFormDataCancelable","progressCallback","cancelCallback","Content-Type","onUploadProgress","isCancel","putRequest","put","deleteRequest","downloadBlob","blobURL","filename","resolve","tempLink","document","createElement","style","display","href","setAttribute","download","body","appendChild","click","removeChild","setTimeout","window","URL","revokeObjectURL","rotateVec","a","sinA","Math","sin","cosA","cos","rx","ry","calculateImageDimensions","imageFieldInfo","calculatedImageWidth","calculatedImageHeight","imageWidth","imageHeight","UserError","_Error","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","wrapNativeSuper","reportError","StackTrace","fromError","stackframes","stringifiedStack","map","sf","toString","join","state","store","JSON","stringify","getState","stack","ImageType","generatePdfUsingWorker","Worker","Promise","reject","worker","addEventListener","event","postMessage","e","loadImage","img","Image","onload","onerror","src","prepareImageToDrawSpace","context","imageToDraw","ptpmm","save","translate","rotate","ax","ay","rect","clip","fixWidthAndHeightInSvg","doc","XmlDocument","attr","viewBox","split","btoa","compressed","PNGGenerator","_this","tasksQueue","push","cardSetData","cardIdx","isBack","cardsetFolder","offscreenCanvas","calculatedWidth","round","calculatedHeight","getContext","fillStyle","fillRect","stopped","length","task","shift","SVG_PATH","scale","Path2D","fill","restore","IMAGE","SVG","undefined","dim","image","svgData","atob","drawImage","BLOCK_START","BLOCK_END","subType","delay","dataUrl","toDataURL","slice","padStart","zip","cardsetsList","cardsetInfo","generateCardset","cardsetId","parse","folder","cardsAllIds","entries","generateCard","generatePngUsingWorker","_ref4","asyncToGenerator","regenerator_default","mark","_callee4","pngGenerator","blob","wrap","_context4","prev","next","JSZip","generateGame","generateAsync","sent","createObjectURL","stop","_x15","_x16","_x17","_x18","saveTokens","localStorage","setItem","saveUsername","username","saveAccessToken","cleanTokens","removeItem","getTokenFromStorage","getItem","getRefreshTokenFromStorage","getUsernameFromStorage","loadFontsUsedInPlaceholders","fontsToLoad","Set","add","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","fieldsAllIds","Symbol","iterator","done","value","field","fields","fontToLoad","err","return","WebFont","objectSpread","inactive","webFontsLoadPromise","google","families","toConsumableArray","Array","from","putError","putInfo","putProgress","hideProgress","handleMessageDisplay","getToken","handleLoginRequest","handleLoginSuccess","logoutToken","logoutRefreshToken","handleLogoutRequest","handleSignupRequest","handleInitRequest","authorizedGetRequest","authorizedPostRequest","authorizedDeleteRequest","authorizedPostFormDataRequest","authorizedPutRequest","handleGameCreateRequest","handleGameDeleteRequest","handleGameRenameRequest","handleGameListRequest","handleGameSelectRequest","handleGameCreatePdfRequest","handleGameCreatePngRequest","handleCardSetCreateRequest","handleCardSetDeleteRequest","handleCardSetRenameRequest","handleCardSetSelectRequest","handleCardSetUploadImage","handleCardSetDeleteImage","handleCardSetFitChange","handleCardSetChangeImage","handleCardSetChange","handleImageListRequest","rootSaga","_context","call","_marked","_context2","_marked2","_context3","abrupt","_marked3","messageId","_marked4","action","_context5","_marked5","validateToken","jwtDecode","exp","Date","getTime","withErrorIfMissing","getFreshToken","newToken","_args6","_context6","_marked6","_context7","t0","_marked7","_context8","_marked8","_context9","_marked9","_context10","_marked10","_context11","_marked11","_context12","_marked12","_context13","_marked13","_context14","_marked14","_context15","_marked15","_context16","_marked16","_context17","_marked17","_context18","_marked18","_context19","_marked19","_context20","_marked20","_context21","_marked21","allIds","byId","_context22","games","g","reduce","obj","_marked22","_context23","_marked23","progressId","_context24","_marked24","_context25","_marked25","_context26","version","_marked26","_context27","select","_marked27","_context28","_marked28","loadImageInfo","naturalWidth","naturalHeight","processData","_x","_processData","_callee","processedData","plId","placeholder","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_iterator4","_step4","_placeholder","_cardId","_fieldId","fieldInfo","info","_context37","placeholdersAllIds","keys","placeholders","global","texts","finish","t1","cardsById","t2","t3","t4","t5","parsedData","_context29","ActionCreators","clearHistory","_marked29","formData","_context30","FormData","set","append","lengthComputable","loaded","total","_marked30","_context31","_marked31","adjustSvg","preserveAspectRatio","walkChildren","node","children","child","imageResp","svg","_svg","_context32","cardset","present","activeFieldId","_marked32","cardsToFix","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","cardFields","_svg2","_context33","_marked33","closeHandler","preventDefault","returnValue","allowWindowClose","removeEventListener","_context34","_marked34","game","_context35","encodeURIComponent","_marked35","_context36","all","takeEvery","takeLatest","_marked36","ACTIVITY_SELECTING","ACTIVITY_CREATING_PDF","ACTIVITY_CREATING_PNG","DefaultMessageState","messages","DefaultAuthState","isAuthenticated","user","DefaultSignUpState","signingup","DefaultGameState","activity","DefaultCardSetsState","DefaultCardSetState","activeCardId","textSettings","activeSidebar","DefaultImageState","resizeFields","widthRatio","heightRatio","newFields","undoableCardset","undoable","assign","defineProperty","newCard","index","indexOf","isOnBack","fieldIndex","splice","locked","unshift","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","fitImageWidth","fitImageHeight","min","max","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","oldZoom","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","nx","ny","_rotateVec","ratio","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","testFieldInfo","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","Measurements","Details","Text","ignoreInitialState","undoType","redoType","groupBy","startsWith","reducers","combineReducers","find","m","auth","signup","Character","AboutPage","react_default","Component","FieldController","props","cDiv","panDiv","zoomDiv","resizeDiv","rotateDiv","originalBodyCursor","handleBrowserDragStart","stopPropagation","handleMouseDown","handleDragStart","handleMouseMove","handleMouseUp","handleTouchStart","touches","changedTouches","handleTouchMove","passive","handleTouchEnd","co","current","cursor","setState","startX","clientX","startY","clientY","handleDragMove","ctrlKey","disableSnapping","_this$props","isLocked","_this$props2","ppmm","onDrag","handleComplete","isTouchEvent","_this$props3","activatedUsingTouch","handlePanMouseDown","handlePanStart","handlePanMouseMove","handlePanMouseUp","handlePanTouchStart","handlePanTouchMove","handlePanTouchEnd","panIcon","handlePanMove","_this$props4","onPan","newCx","newCy","handlePanComplete","_this$props5","handleZoomMouseDown","handleZoomStart","handleZoomMouseMove","handleZoomMouseUp","handleZoomTouchStart","handleZoomTouchMove","handleZoomTouchEnd","zoomIcon","handleZoomMove","_this$props6","onZoom","dx","dy","z","abs","newZoom","handleZoomComplete","handleResizeMouseDown","handleResizeStart","handleResizeMouseMove","handleResizeMouseUp","handleResizeTouchStart","handleResizeTouchMove","handleResizeTouchEnd","resizeIcon","handleResizeMove","_this$props7","onResize","_rotateVec2","newWidth","newHeight","handleResizeComplete","_this$props8","handleRotateMouseDown","handleRotateStart","handleRotateMouseMove","handleRotateMouseUp","handleRotateTouchStart","handleRotateTouchMove","handleRotateTouchEnd","_this$props9","rotateIcon","getBoundingClientRect","left","clientWidth","top","clientHeight","originalAngle","atan2","handleRotateMove","_this$props10","onRotate","_this$state","newAngle","PI","handleRotateComplete","React","createRef","_this$props11","isActive","isActiveField","isUnclickable","ref","onDragStart","className","position","transform","pointerEvents","alt","right","bottom","connect","ImageField","handleDrag","cardOnly","dispatch","handlePan","handleZoom","handleResize","handleRotate","wasMoved","handleDragOver","dragIsOver","handleDragLeave","handleDrop","dataTransfer","getData","imagefilesPos","ii","substr","imageUrl","cardWidth","cardHeight","components_FieldController","overflow","onMouseDown","onTouchStart","onMouseMove","onTouchMove","onMouseUp","onTouchEnd","onDragOver","onDragLeave","onDrop","opacity","emptyImageImage","PureComponent","ContentEditable","editDiv","currentText","currentAlign","currentColor","currentFontFamily","currentFontVariant","currentFontSize","currentLineHeight","timeout","handleStart","handleMove","focus","onFocus","textValue","range","createRange","selectNodeContents","collapse","selection","getSelection","removeAllRanges","addRange","updateContent","timeoutInMiliseconds","innerHTML","imgUrlIdx","clearTimeout","handleBlur","handleInput","handlePaste","clipboardData","s","replace","execCommand","nextProps","isItalic","fontWeight","parseInt","contentEditable","onBlur","onInput","onPaste","textAlign","DEFAULT_FONT","fontStyle","outline","overflowWrap","dangerouslySetInnerHTML","__html","TextField","textFieldInfo","zIndex","emptyTextImage","components_ContentEditable","Card","dimensions","handleFieldDeselect","target","getAttribute","_this2","fieldsIds","isActiveCard","widthWithBleeds","heightWithBleeds","index_esm","client","contentRect","_ref","measureRef","components_ImageField","key","components_TextField","border","borderRadius","EditableTitle","titleIsEdited","handleClick","handleChange","onChange","Fragment","onClick","autoFocus","KawaiiMessage","character","mood","marginTop","marginBottom","padding","backgroundColor","grid","Ghost","size","Browser","marginLeft","Loader","fixed","small","loader","relative","SidebarDetails","_Component","_getPrototypeOf2","_len","args","_key","handleCloneCardClick","activeCard","handleRemoveCardClick","handleCountChange","createClass","visible","SidebarGeneratePng","handleDpiChange","handleGenerate","activeCardset","isCreatingPng","htmlFor","step","PDFGenerator","handleGeneratePdfClick","handlePageWidthChange","parseFloat","handlePageHeightChange","handleTopBottomMarginChange","handleLeftRightMarginChange","handleVerticalSpaceChange","handleHorizontalSpaceChange","handleIncludeBleedingAreaChange","checked","handleCutMarksForScissors","handleCutMarksForGuillotine","handleCutMarksInMarginArea","handleCutMarksOnFrontSideOnly","isCreatingPdf","withHelp","KawaiiMessage_KawaiiMessage","SidebarGeneratePdf","activeCardSetId","components_PDFGenerator","ColorButton","displayColorPicker","handleClose","react_color_lib","disableAlpha","SidebarImage","handleAddImageClick","changeImage","activeFieldInfo","handleRemoveImageFromFieldClick","handleRemoveClick","handleNameChange","trim","handleFilterChange","handleImageSelect","imageName","handleRaise","handleLower","handleLockField","handleUnlockField","handleFitOptionChange","handleOptionChange","handleColorChange","hex","handleRemoveColorClick","handleApplyToAllCardChange","handleChangeCrop","ColorButton_ColorButton","im","data-width","data-height","registerPlugin","FilePondPluginFileValidateType","SidebarImportExport","prepareImagePaths","activeGame","ending","md5","preparedImages","fieldsByCard","endsWith","handleExportJson","json","Blob","handleExportCsv","preparedFields","csvData","header","usedNames","dataRow","written","fieldIndo","csv","Papa","unparse","handleProcess","fieldName","metadata","reader","FileReader","readAsText","result","isGlobal","newCardsAllIds","newCardsById","row","handleRevert","uniqueFileId","react_filepond","server","process","revert","acceptedFileTypes","SidebarMeasurements","handlePrevField","activeField","prevField","idx","handleNextField","nextField","handleWidthChange","handleHeightChange","handleXChange","handleYChange","handleAngleChange","_this$props12","handleChangeUnclickable","_this$props13","_this$props14","SidebarSettings","_this$state2","handleIsTwoSidedChange","handleSnappingDistance","_this$state3","options","webfonts","sort","fi","label","FontSelector","getFontStringForLoad","family","variant","stringForLoad","selectedOption","activeFontVariant","wf","handleFontVariantChange","activeFont","handleFontSizeChange","handleLineHeightChange","selectedFontFamily","f","fontVariantOptions","fv","selectedFontVariant","activeFontSize","react_select_esm","activeLineHeight","SidebarText","handleAddTextClick","handleSetTextAlignLeft","getRangeAt","rangeCount","collapsed","handleSetTextAlignCenter","handleSetTextAlignRight","handleSetTextBold","handleSetTextItalic","components_FontSelector","FilePondPluginFileValidateSize","SidebarUpload","source","CancelToken","cancel","allowMultiple","allowFileSizeValidation","maxFileSize","SIDEBARS","Settings","icon","component","Upload","ImportExport","Png","Pdf","Sidebar","handleSidebar","sidebar","controls","sb","hidden","CardSet","keyDown","shiftKey","handleCreateCardClick","handleClickOutsideOfCard","handleCardSetNameChange","activeCardSet","EditableTitle_EditableTitle","cardsetview","components_Sidebar","Loader_Loader","gridTemplateColumns","components_Card","createCard","CardSetPage","match","params","components_CardSet","Redirect","to","ChangelogPage","evt","ErrorBoundary","hasError","ConfirmedDelete","deleteClicked","handleRemove","handleYes","onDelete","handleNo","question","CardSets","cardSetName","handleGameNameChange","handleCreateCardSetClick","handleCardSetDelete","b","cardsetItems","Link","ConfirmedDelete_ConfirmedDelete","GamePage","components_CardSets","Login","password","handleUsernameChange","handlePasswordChange","handleSubmit","onLogin","onLoginFailure","onSubmit","LoginPage","Login_Login","loginRequest","msg","FeatureList","screenshot","Games","gameName","handleCreateGameClick","handleGameDelete","gameItems","FeatureList_FeatureList","Main","components_Games","getActiveGame","getActiveCardSet","Logout","onLogout","Navbar","menu","components_Logout","NotFoundPage","SignUp","passwordRepeat","handlePasswordRepeatChange","onSignUp","SignUpPage","components_SignUp","signupRequest","App","isIE","BrowserRouter","ErrorBoundry_ErrorBoundary","components_Navbar","Switch","Route","exact","path","getFullYear","Boolean","hostname","sagaMiddleware","createSagaMiddleware","createStore","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","run","createAppStore","ReactDOM","render","es","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister","loader-small"],"mappings":"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of,EAAAre,EAAAf,cAAA,4FAEJof,EAAAre,EAAAf,cAAA,wBACAof,EAAAre,EAAAf,cAAA,UACIof,EAAAre,EAAAf,cAAA,+BAEJof,EAAAre,EAAAf,cAAA,wBACAof,EAAAre,EAAAf,cAAA,UACIof,EAAAre,EAAAf,cAAA,gEACAof,EAAAre,EAAAf,cAAA,0DACAof,EAAAre,EAAAf,cAAA,iCAEJof,EAAAre,EAAAf,cAAA,wBACAof,EAAAre,EAAAf,cAAA,UACIof,EAAAre,EAAAf,cAAA,0DACAof,EAAAre,EAAAf,cAAA,kEACAof,EAAAre,EAAAf,cAAA,qDAEJof,EAAAre,EAAAf,cAAA,wBACAof,EAAAre,EAAAf,cAAA,UACIof,EAAAre,EAAAf,cAAA,mCAGAof,EAAAre,EAAAf,cAAA,qEAGAof,EAAAre,EAAAf,cAAA,2CAIJof,EAAAre,EAAAf,cAAA,wBACAof,EAAAre,EAAAf,cAAA,UACIof,EAAAre,EAAAf,cAAA,mDAIJof,EAAAre,EAAAf,cAAA,wBACAof,EAAAre,EAAAf,cAAA,UACIof,EAAAre,EAAAf,cAAA,6GACqG,IACjGof,EAAAre,EAAAf,cAAA,KAAGG,KAAK,mCAAR,oBAFJ,IAEoE,IAChEif,EAAAre,EAAAf,cAAA,KAAGG,KAAK,wBAAR,sBAHJ,yBAMJif,EAAAre,EAAAf,cAAA,wBACAof,EAAAre,EAAAf,cAAA,UACIof,EAAAre,EAAAf,cAAA,kEACAof,EAAAre,EAAAf,cAAA,sDACAof,EAAAre,EAAAf,cAAA,gJAIAof,EAAAre,EAAAf,cAAA,yCAEJof,EAAAre,EAAAf,cAAA,wBACAof,EAAAre,EAAAf,cAAA,UACIof,EAAAre,EAAAf,cAAA,4EACAof,EAAAre,EAAAf,cAAA,oDACAof,EAAAre,EAAAf,cAAA,6JAIAof,EAAAre,EAAAf,cAAA,oDACAof,EAAAre,EAAAf,cAAA,iCAEJof,EAAAre,EAAAf,cAAA,wBACAof,EAAAre,EAAAf,cAAA,UACIof,EAAAre,EAAAf,cAAA,8BACAof,EAAAre,EAAAf,cAAA,8CACAof,EAA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","file":"static/js/main.991325f6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rotate.4a37bc7b.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1Ltkv\",\"title\":\"Card_title__1KiIj\",\"active\":\"Card_active__XOmoJ\",\"disabled\":\"Card_disabled__2Ob5l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarImage_view__2LKQM\",\"disabled\":\"SidebarImage_disabled__1tNhN\",\"images\":\"SidebarImage_images__3zDK2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ConfirmedDelete_button__1o8h4\",\"answer\":\"ConfirmedDelete_answer__1OsVc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"EditableTitle_input__2Y_6m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fontFamily\":\"FontSelector_fontFamily__zlBcJ\",\"fontVariant\":\"FontSelector_fontVariant__2pA4n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarText_view__3s9r0\",\"disabled\":\"SidebarText_disabled__3efIG\"};","module.exports = __webpack_public_path__ + \"static/media/image.60f0926c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"over\":\"ImageField_over__3Q9AT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ContentEditable_content__1p7up\"};","module.exports = __webpack_public_path__ + \"static/media/text.f7f9443c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarGeneratePng_view__1_3fy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarGeneratePdf_view__10OR4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarMeasurements_view__3BCmn\",\"disabled\":\"SidebarMeasurements_disabled__2Rrd2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarSettings_view__DwnQN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarUpload_view__k69sP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardsets\":\"CardSets_cardsets__mQSav\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"features\":\"FeatureList_features__3xjD3\"};","module.exports = __webpack_public_path__ + \"static/media/screenshot.ec7615c5.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldcontroller\":\"FieldController_fieldcontroller__3ifWc\",\"fieldcontrolleractivefield\":\"FieldController_fieldcontrolleractivefield__9anIa\",\"fieldcontrolleractive\":\"FieldController_fieldcontrolleractive__3fSLl\",\"controller\":\"FieldController_controller__VCesw\",\"touchactivated\":\"FieldController_touchactivated__16s2w\"};","import { CancelToken } from 'axios';\nimport { Dispatch as ReduxDispatch } from 'redux';\nimport shortid from 'shortid';\n\nimport {\n    CardSetsCollection,\n    CardType,\n    CardsCollection,\n    Credentials,\n    GamesCollection,\n    IdsArray,\n    ImageArray,\n    ImageInfo,\n    MessageType,\n    PlaceholdersCollection,\n    PlaceholdersImageInfoByCardCollection,\n    PlaceholdersTextInfoByCardCollection,\n    TextInfo,\n    FieldInfoByCardCollection,\n} from './types';\n\nexport const INIT_REQUEST = 'INIT_REQUEST';\nexport const MESSAGE_DISPLAY = 'MESSAGE_DISPLAY';\nexport const MESSAGE_HIDE = 'MESSAGE_HIDE';\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\nexport const LOGOUT_FAILURE = 'LOGOUT_FAILURE';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const SIGNUP_REQUEST = 'SIGNUP_REQUEST';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAILURE = 'SIGNUP_FAILURE';\nexport const GAME_CREATE_REQUEST = 'GAME_CREATE_REQUEST';\nexport const GAME_CREATE_SUCCESS = 'GAME_CREATE_SUCCESS';\nexport const GAME_DELETE_REQUEST = 'GAME_DELETE_REQUEST';\nexport const GAME_RENAME_REQUEST = 'GAME_RENAME_REQUEST';\nexport const GAME_LIST_SUCCESS = 'GAME_LIST_SUCCESS';\nexport const GAME_LIST_REQUEST = 'GAME_LIST_REQUEST';\nexport const GAME_LIST_FAILURE = 'GAME_LIST_FAILURE';\nexport const GAME_LIST_RESET = 'GAME_LIST_RESET';\nexport const GAME_SELECT_REQUEST = 'GAME_SELECT_REQUEST';\nexport const GAME_SELECT_SUCCESS = 'GAME_SELECT_SUCCESS';\nexport const GAME_SELECT_FAILURE = 'GAME_SELECT_FAILURE';\nexport const GAME_CREATE_PDF_REQUEST = 'GAME_CREATE_PDF_REQUEST';\nexport const GAME_CREATE_PDF_SUCCESS = 'GAME_CREATE_PDF_SUCCESS';\nexport const GAME_CREATE_PDF_FAILURE = 'GAME_CREATE_PDF_FAILURE';\nexport const GAME_CREATE_PNG_REQUEST = 'GAME_CREATE_PNG_REQUEST';\nexport const GAME_CREATE_PNG_SUCCESS = 'GAME_CREATE_PNG_SUCCESS';\nexport const GAME_CREATE_PNG_FAILURE = 'GAME_CREATE_PNG_FAILURE';\nexport const CARDSETS_SELECT_SUCCESS = 'CARDSETS_SELECT_SUCCESS';\nexport const CARDSET_CREATE_REQUEST = 'CARDSET_CREATE_REQUEST';\nexport const CARDSET_CREATE_SUCCESS = 'CARDSET_CREATE_SUCCESS';\nexport const CARDSET_CREATE_FAILURE = 'CARDSET_CREATE_FAILURE';\nexport const CARDSET_DELETE_REQUEST = 'CARDSET_DELETE_REQUEST';\nexport const CARDSET_RENAME_REQUEST = 'CARDSET_RENAME_REQUEST';\nexport const CARDSET_IMPORT_DATA = 'CARDSET_IMPORT_DATA';\nexport const CARDSET_LIST_SUCCESS = 'CARDSET_LIST_SUCCESS';\nexport const CARDSET_LIST_REQUEST = 'CARDSET_LIST_REQUEST';\nexport const CARDSET_LIST_FAILURE = 'CARDSET_LIST_FAILURE';\nexport const CARDSET_LIST_RESET = 'CARDSET_LIST_RESET';\nexport const CARDSET_SELECT_REQUEST = 'CARDSET_SELECT_REQUEST';\nexport const CARDSET_SELECT_SUCCESS = 'CARDSET_SELECT_SUCCESS';\nexport const CARDSET_CREATE_CARD = 'CARDSET_CREATE_CARD';\nexport const CARDSET_CLONE_CARD = 'CARDSET_CLONE_CARD';\nexport const CARDSET_REMOVE_CARD = 'CARDSET_REMOVE_CARD';\nexport const CARDSET_UPDATE_CARD_COUNT = 'CARDSET_UPDATE_CARD_COUNT';\nexport const CARDSET_ADD_TEXT_FIELD = 'CARDSET_ADD_TEXT_FIELD';\nexport const CARDSET_ADD_IMAGE_FIELD = 'CARDSET_ADD_IMAGE_FIELD';\nexport const CARDSET_CHANGE_ACTIVE_FIELD_NAME = 'CARDSET_CHANGE_ACTIVE_FIELD_NAME';\nexport const CARDSET_REMOVE_ACTIVE_FIELD = 'CARDSET_REMOVE_ACTIVE_FIELD';\nexport const CARDSET_RAISE_ACTIVE_FIELD = 'CARDSET_RAISE_ACTIVE_FIELD';\nexport const CARDSET_RAISE_ACTIVE_FIELD_TO_TOP = 'CARDSET_RAISE_ACTIVE_FIELD_TO_TOP';\nexport const CARDSET_LOWER_ACTIVE_FIELD = 'CARDSET_LOWER_ACTIVE';\nexport const CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM = 'CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM';\nexport const CARDSET_LOCK_ACTIVE_FIELD = 'CARDSET_LOCK_ACTIVE_FIELD';\nexport const CARDSET_UNLOCK_ACTIVE_FIELD = 'CARDSET_UNLOCK_ACTIVE_FIELD';\nexport const CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD = 'CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD';\nexport const CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD = 'CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD';\nexport const CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD = 'CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD';\nexport const CARDSET_CHANGE_WIDTH = 'CARDSET_CHANGE_WIDTH';\nexport const CARDSET_CHANGE_HEIGHT = 'CARDSET_CHANGE_HEIGHT';\nexport const CARDSET_CHANGE_IS_TWO_SIDED = 'CARDSET_CHANGE_IS_TWO_SIDED';\nexport const CARDSET_CHANGE_SNAPPING_DISTANCE = 'CARDSET_CHANGE_SNAPPING_DISTANCE';\nexport const CARDSET_CHANGE_FIELD_POSITION = 'CARDSET_CHANGE_FIELD_POSITION';\nexport const CARDSET_CHANGE_FIELD_PAN = 'CARDSET_CHANGE_FIELD_PAN';\nexport const CARDSET_CHANGE_FIELD_ZOOM = 'CARDSET_CHANGE_FIELD_ZOOM';\nexport const CARDSET_CHANGE_FIELD_SIZE = 'CARDSET_CHANGE_FIELD_SIZE';\nexport const CARDSET_CHANGE_FIELD_ANGLE = 'CARDSET_CHANGE_FIELD_ANGLE';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN = 'CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR = 'CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY = 'CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT = 'CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT =\n    'CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE = 'CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT = 'CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT';\nexport const CARDSET_CHANGE_TEXT = 'CARDSET_CHANGE_TEXT';\nexport const CARDSET_CHANGE_IMAGE = 'CARDSET_CHANGE_IMAGE';\nexport const CARDSET_CHANGE_IMAGE_BASE64 = 'CARDSET_CHANGE_IMAGE_BASE64';\nexport const CARDSET_SET_ACTIVE_CARD_AND_FIELD = 'CARDSET_SET_ACTIVE_CARD_AND_FIELD';\nexport const CARDSET_CHANGE_APPLY_TO_ALLCARDS = 'CARDSET_CHANGE_APPLY_TO_ALLCARDS';\nexport const CARDSET_SELECT_FAILURE = 'CARDSET_SELECT_FAILURE';\nexport const CARDSET_SET_SIDEBAR_STATE = 'CARDSET_SET_SIDEBAR_STATE';\nexport const CARDSET_SET_ZOOM = 'CARDSET_SET_ZOOM';\nexport const CARDSET_UPLOAD_IMAGE = 'CARDSET_UPLOAD_IMAGE';\nexport const CARDSET_UPLOAD_IMAGE_SUCCESS = 'CARDSET_UPLOAD_IMAGE_SUCCESS';\nexport const CARDSET_UPLOAD_IMAGE_FAILURE = 'CARDSET_UPLOAD_IMAGE_FAILURE';\nexport const CARDSET_DELETE_IMAGE = 'CARDSET_DELETE_IMAGE';\nexport const CARDSET_UNDO = 'CARDSET_UNDO';\nexport const CARDSET_REDO = 'CARDSET_REDO';\nexport const IMAGE_LIST_REQUEST = 'IMAGE_LIST_REQUEST';\nexport const IMAGE_LIST_SUCCESS = 'IMAGE_LIST_SUCCESS';\nexport const IMAGE_LIST_FAILURE = 'IMAGE_LIST_FAILURE';\n\n// Actions\n\nexport interface InitAction {\n    type: typeof INIT_REQUEST;\n}\n\nexport interface MessageDisplay {\n    type: typeof MESSAGE_DISPLAY;\n    message: MessageType;\n}\nexport type MessageAction = MessageDisplay | { type: typeof MESSAGE_HIDE; messageId: string };\n\nexport interface LoginRequest {\n    type: typeof LOGIN_REQUEST;\n    creds: Credentials;\n}\nexport type LoginAction =\n    | LoginRequest\n    | { type: typeof LOGIN_SUCCESS; username: string }\n    | { type: typeof LOGIN_FAILURE; message: string }\n    | { type: typeof LOGOUT_REQUEST }\n    | { type: typeof LOGOUT_FAILURE }\n    | { type: typeof LOGOUT_SUCCESS };\n\nexport interface SignUpRequest {\n    type: typeof SIGNUP_REQUEST;\n    creds: Credentials;\n}\nexport type SignUpAction = SignUpRequest | { type: typeof SIGNUP_SUCCESS } | { type: typeof SIGNUP_FAILURE };\n\nexport interface GameCreateRequest {\n    type: typeof GAME_CREATE_REQUEST;\n    gamename: string;\n}\nexport type GameCreateAction = GameCreateRequest | { type: typeof GAME_CREATE_SUCCESS };\n\nexport interface GameDeleteRequest {\n    type: typeof GAME_DELETE_REQUEST;\n    gameId: string;\n}\n\nexport type GameDeleteAction = GameDeleteRequest;\n\nexport interface GameRenameRequest {\n    type: typeof GAME_RENAME_REQUEST;\n    gameId: string;\n    newName: string;\n}\n\nexport type GameRenameAction = GameRenameRequest;\n\nexport interface GameListSuccess {\n    type: typeof GAME_LIST_SUCCESS;\n    byId: GamesCollection;\n    allIds: IdsArray;\n}\nexport type GameListAction =\n    | { type: typeof GAME_LIST_REQUEST }\n    | GameListSuccess\n    | { type: typeof GAME_LIST_FAILURE }\n    | { type: typeof GAME_LIST_RESET };\n\nexport interface GameSelectRequest {\n    type: typeof GAME_SELECT_REQUEST;\n    id: string;\n    updateCardSets: boolean;\n}\nexport type GameSelectAction =\n    | GameSelectRequest\n    | { type: typeof GAME_SELECT_SUCCESS; id: string }\n    | { type: typeof GAME_SELECT_FAILURE };\n\nexport interface GameCreatePdfRequest {\n    type: typeof GAME_CREATE_PDF_REQUEST;\n    collectionType: string;\n    collectionId: string;\n    pageWidth: number;\n    pageHeight: number;\n    topBottomMargin: number;\n    leftRightMargin: number;\n    verticalSpace: number;\n    horizontalSpace: number;\n    includeBleedingArea: boolean;\n    cutMarksForScissors: boolean;\n    cutMarksForGuillotine: boolean;\n    cutMarksInMarginArea: boolean;\n    cutMarksOnFrontSideOnly: boolean;\n}\n\nexport type GameCreatePdfAction =\n    | GameCreatePdfRequest\n    | { type: typeof GAME_CREATE_PDF_SUCCESS }\n    | { type: typeof GAME_CREATE_PDF_FAILURE };\n\nexport interface GameCreatePngRequest {\n    type: typeof GAME_CREATE_PNG_REQUEST;\n    dpi: number;\n    collectionType: string;\n    collectionId: string;\n}\n\nexport type GameCreatePngAction =\n    | GameCreatePngRequest\n    | { type: typeof GAME_CREATE_PNG_SUCCESS }\n    | { type: typeof GAME_CREATE_PNG_FAILURE };\n\nexport type GameAction =\n    | GameCreateAction\n    | GameDeleteAction\n    | GameRenameAction\n    | GameListAction\n    | GameSelectAction\n    | GameCreatePdfAction\n    | GameCreatePngAction;\n\nexport interface CardSetCreateRequest {\n    type: typeof CARDSET_CREATE_REQUEST;\n    cardsetname: string;\n    width: number;\n    height: number;\n    gameId: string;\n}\nexport type CardSetCreateAction =\n    | CardSetCreateRequest\n    | { type: typeof CARDSET_CREATE_SUCCESS }\n    | { type: typeof CARDSET_CREATE_FAILURE };\n\nexport interface CardSetDeleteRequest {\n    type: typeof CARDSET_DELETE_REQUEST;\n    cardSetId: string;\n}\n\nexport interface CardSetRenameRequest {\n    type: typeof CARDSET_RENAME_REQUEST;\n    cardSetId: string;\n    newName: string;\n}\n\nexport interface CardSetsSelectSuccess {\n    type: typeof CARDSETS_SELECT_SUCCESS;\n    id: string;\n    name: string;\n}\n\nexport type CardSetsAction =\n    | CardSetsSelectSuccess\n    | CardSetCreateAction\n    | CardSetDeleteRequest\n    | CardSetRenameRequest\n    | CardSetListAction;\n\nexport interface CardSetImportData {\n    type: typeof CARDSET_IMPORT_DATA;\n    data: object;\n}\n\nexport interface CardSetListSuccess {\n    type: typeof CARDSET_LIST_SUCCESS;\n    byId: CardSetsCollection;\n    allIds: IdsArray;\n}\nexport type CardSetListAction =\n    | { type: typeof CARDSET_LIST_REQUEST }\n    | CardSetListSuccess\n    | { type: typeof CARDSET_LIST_FAILURE }\n    | { type: typeof CARDSET_LIST_RESET };\n\nexport interface CardSetSelectRequest {\n    type: typeof CARDSET_SELECT_REQUEST;\n    id: string;\n}\n\nexport interface CardSetSelectSuccessDataBase {\n    version: string;\n}\n\nexport interface CardSetSelectSuccessDataV2 {\n    version: 2;\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    snappingDistance: number;\n    cardsAllIds: IdsArray;\n    cardsById: CardsCollection;\n    placeholders: PlaceholdersCollection;\n    placeholdersAllIds: IdsArray;\n    texts: PlaceholdersTextInfoByCardCollection;\n    images: PlaceholdersImageInfoByCardCollection;\n    zoom: number;\n}\n\nexport interface CardSetSelectSuccessDataV3 {\n    version: 3;\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    snappingDistance: number;\n    cardsAllIds: IdsArray;\n    cardsById: CardsCollection;\n    fields: FieldInfoByCardCollection;\n    fieldsAllIds: IdsArray;\n    zoom: number;\n}\n\nexport type CardSetSelectSuccessData = CardSetSelectSuccessDataV2 | CardSetSelectSuccessDataV3;\n\nexport interface CardSetSelectSuccess {\n    type: typeof CARDSET_SELECT_SUCCESS;\n    id: string;\n    name: string;\n    data: CardSetSelectSuccessDataV3;\n    gameId: string;\n}\nexport interface CardSetCreateCard {\n    type: typeof CARDSET_CREATE_CARD;\n    card: CardType;\n}\nexport interface CardSetCloneCard {\n    type: typeof CARDSET_CLONE_CARD;\n    card: CardType;\n}\nexport interface CardSetRemoveCard {\n    type: typeof CARDSET_REMOVE_CARD;\n    card: CardType;\n}\nexport interface CardSetUpdateCardCount {\n    type: typeof CARDSET_UPDATE_CARD_COUNT;\n    card: CardType;\n    count: number;\n}\nexport interface CardSetAddTextField {\n    type: typeof CARDSET_ADD_TEXT_FIELD;\n}\nexport interface CardSetAddImageField {\n    type: typeof CARDSET_ADD_IMAGE_FIELD;\n}\nexport interface CardSetChangeActiveFieldName {\n    type: typeof CARDSET_CHANGE_ACTIVE_FIELD_NAME;\n    name: string;\n}\nexport interface CardSetRemoveActiveField {\n    type: typeof CARDSET_REMOVE_ACTIVE_FIELD;\n}\nexport interface CardSetRaiseActiveField {\n    type: typeof CARDSET_RAISE_ACTIVE_FIELD;\n}\nexport interface CardSetRaiseActiveFieldToTop {\n    type: typeof CARDSET_RAISE_ACTIVE_FIELD_TO_TOP;\n}\nexport interface CardSetLowerActiveField {\n    type: typeof CARDSET_LOWER_ACTIVE_FIELD;\n}\nexport interface CardSetLowerActiveFieldToBottom {\n    type: typeof CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM;\n}\nexport interface CardSetLockActiveField {\n    type: typeof CARDSET_LOCK_ACTIVE_FIELD;\n}\nexport interface CardSetUnlockActiveField {\n    type: typeof CARDSET_UNLOCK_ACTIVE_FIELD;\n}\nexport interface CardSetChangeFitForActiveField {\n    type: typeof CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD;\n    fit: string;\n}\nexport interface CardSetChangeCropForActiveField {\n    type: typeof CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD;\n    crop: boolean;\n}\n\nexport interface CardSetChangeUnclickableForActiveField {\n    type: typeof CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD;\n    unclickable: boolean;\n}\n\nexport interface CardSetChangeWidth {\n    type: typeof CARDSET_CHANGE_WIDTH;\n    width: number;\n    maintainAspectRatio: boolean;\n    resizeContent: boolean;\n}\n\nexport interface CardSetChangeHeight {\n    type: typeof CARDSET_CHANGE_HEIGHT;\n    height: number;\n    maintainAspectRatio: boolean;\n    resizeContent: boolean;\n}\n\nexport interface CardSetChangeIsTwoSided {\n    type: typeof CARDSET_CHANGE_IS_TWO_SIDED;\n    isTwoSided: boolean;\n}\n\nexport interface CardSetChangeSnappingDistance {\n    type: typeof CARDSET_CHANGE_SNAPPING_DISTANCE;\n    snappingDistance: number;\n}\n\nexport interface CardSetChangeFieldPosition {\n    type: typeof CARDSET_CHANGE_FIELD_POSITION;\n    cardId?: string;\n    fieldId: string;\n    x: number;\n    y: number;\n    group: string;\n}\n\nexport interface CardSetChangeFieldPan {\n    type: typeof CARDSET_CHANGE_FIELD_PAN;\n    cardId?: string;\n    fieldId: string;\n    cx: number;\n    cy: number;\n    group: string;\n}\n\nexport interface CardSetChangeFieldZoom {\n    type: typeof CARDSET_CHANGE_FIELD_ZOOM;\n    cardId?: string;\n    fieldId: string;\n    zoom: number;\n    group: string;\n}\n\nexport interface CardSetChangeFieldSize {\n    type: typeof CARDSET_CHANGE_FIELD_SIZE;\n    cardId?: string;\n    fieldId: string;\n    width: number;\n    height: number;\n    group: string;\n}\nexport interface CardSetChangeFieldAngle {\n    type: typeof CARDSET_CHANGE_FIELD_ANGLE;\n    cardId?: string;\n    fieldId: string;\n    angle: number;\n    group: string;\n}\nexport interface CardSetChangeActiveTextFieldAlign {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN;\n    align: string;\n}\nexport interface CardSetChangeActiveTextFieldColor {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR;\n    color: string;\n}\nexport interface CardSetChangeActiveTextFieldFontFamily {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY;\n    fontFamily: string;\n}\nexport interface CardSetChangeActiveTextFieldFontVariant {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT;\n    fontVariant: string;\n}\nexport interface CardSetChangeActiveTextFieldFontFamilyAndVariant {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT;\n    fontFamily: string;\n    fontVariant: string;\n}\nexport interface CardSetChangeActiveTextFieldFontSize {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE;\n    fontSize: number;\n}\nexport interface CardSetChangeActiveTextFieldLineHeight {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT;\n    lineHeight: number;\n}\nexport interface CardSetChangeText {\n    type: typeof CARDSET_CHANGE_TEXT;\n    cardId: string;\n    fieldId: string;\n    textInfo: TextInfo;\n}\nexport interface CardSetChangeImage {\n    type: typeof CARDSET_CHANGE_IMAGE;\n    cardId: string | undefined;\n    fieldId: string;\n    imageInfo: ImageInfo;\n}\nexport interface CardSetChangeImageBase64 {\n    type: typeof CARDSET_CHANGE_IMAGE_BASE64;\n    cardId: string;\n    fieldId: string;\n    base64?: string;\n}\nexport interface CardSetSetActiveCardAndField {\n    type: typeof CARDSET_SET_ACTIVE_CARD_AND_FIELD;\n    cardId?: string;\n    isBackActive: boolean;\n    fieldId?: string;\n}\nexport interface CardSetChangeApplyToAllCards {\n    type: typeof CARDSET_CHANGE_APPLY_TO_ALLCARDS;\n    applyToAllCards: boolean;\n}\n\nexport enum SidebarState {\n    Settings,\n    Details,\n    Measurements,\n    Image,\n    Text,\n    Upload,\n    ImportExport,\n    Png,\n    Pdf,\n}\nexport interface CardSetSetSidebarState {\n    type: typeof CARDSET_SET_SIDEBAR_STATE;\n    sidebarState: SidebarState | null;\n}\nexport interface CardSetSetZoom {\n    type: typeof CARDSET_SET_ZOOM;\n    zoom: number;\n}\n\nexport type FPLoadCallback = (id: string) => void;\nexport type FPErrorCallback = (error: string) => void;\nexport type FPProgressCallback = (computable: boolean, loaded: number, total: number) => void;\nexport type FPAbortCallback = () => void;\nexport type FPRevertLoadCallback = () => void;\n\nexport interface CardSetUploadImage {\n    type: typeof CARDSET_UPLOAD_IMAGE;\n    gameId: string;\n    file: File;\n    load: FPLoadCallback;\n    error: FPErrorCallback;\n    progress: FPProgressCallback;\n    abort: FPAbortCallback;\n    cancelToken: CancelToken;\n}\n\nexport interface CardSetDeleteImage {\n    type: typeof CARDSET_DELETE_IMAGE;\n    imageId: string;\n    load: FPRevertLoadCallback;\n    error: FPErrorCallback;\n}\n\nexport interface CardSetUndo {\n    type: typeof CARDSET_UNDO;\n}\n\nexport interface CardSetRedo {\n    type: typeof CARDSET_REDO;\n}\n\nexport interface CardSetUploadImageSuccess {\n    type: typeof CARDSET_UPLOAD_IMAGE_SUCCESS;\n}\n\nexport interface CardSetUploadImageFailure {\n    type: typeof CARDSET_UPLOAD_IMAGE_FAILURE;\n}\n\nexport type CardSetSelectAction = CardSetSelectRequest | CardSetSelectSuccess | { type: typeof CARDSET_SELECT_FAILURE };\n\nexport type CardSetModifyAction =\n    | CardSetCreateCard\n    | CardSetCloneCard\n    | CardSetRemoveCard\n    | CardSetUpdateCardCount\n    | CardSetAddTextField\n    | CardSetAddImageField\n    | CardSetChangeActiveFieldName\n    | CardSetRemoveActiveField\n    | CardSetRaiseActiveField\n    | CardSetRaiseActiveFieldToTop\n    | CardSetLowerActiveField\n    | CardSetLowerActiveFieldToBottom\n    | CardSetLockActiveField\n    | CardSetUnlockActiveField\n    | CardSetChangeFitForActiveField\n    | CardSetChangeCropForActiveField\n    | CardSetChangeUnclickableForActiveField\n    | CardSetChangeWidth\n    | CardSetChangeHeight\n    | CardSetChangeIsTwoSided\n    | CardSetChangeSnappingDistance\n    | CardSetChangeFieldPosition\n    | CardSetChangeFieldPan\n    | CardSetChangeFieldZoom\n    | CardSetChangeFieldSize\n    | CardSetChangeFieldAngle\n    | CardSetChangeActiveTextFieldAlign\n    | CardSetChangeActiveTextFieldColor\n    | CardSetChangeActiveTextFieldFontFamily\n    | CardSetChangeActiveTextFieldFontVariant\n    | CardSetChangeActiveTextFieldFontFamilyAndVariant\n    | CardSetChangeActiveTextFieldFontSize\n    | CardSetChangeActiveTextFieldLineHeight\n    | CardSetChangeText\n    | CardSetChangeImage\n    | CardSetChangeImageBase64\n    | CardSetSetActiveCardAndField\n    | CardSetChangeApplyToAllCards\n    | CardSetSetSidebarState\n    | CardSetSetZoom\n    | CardSetUploadImage\n    | CardSetDeleteImage\n    | CardSetUndo\n    | CardSetRedo\n    | CardSetUploadImageSuccess\n    | CardSetUploadImageFailure;\n\nexport type CardSetAction = CardSetImportData | CardSetSelectAction | CardSetModifyAction;\n\nexport interface ImageListRequest {\n    type: typeof IMAGE_LIST_REQUEST;\n    filter: string;\n    location: string;\n}\nexport interface ImageListSuccess {\n    type: typeof IMAGE_LIST_SUCCESS;\n    images: ImageArray;\n}\nexport type ImageListAction = ImageListRequest | ImageListSuccess | { type: typeof IMAGE_LIST_FAILURE };\n\nexport type Action =\n    | InitAction\n    | LoginAction\n    | SignUpAction\n    | GameAction\n    | CardSetsAction\n    | CardSetAction\n    | ImageListAction\n    | MessageAction;\n\nexport type Dispatch = ReduxDispatch<Action>;\n\nexport const messageDisplay = (type: string, text: string, id?: string): MessageDisplay => {\n    return {\n        type: MESSAGE_DISPLAY,\n        message: {\n            id: id || shortid.generate(),\n            type: type,\n            text: text,\n        },\n    };\n};\n\nexport const initRequest = (): InitAction => {\n    return { type: INIT_REQUEST };\n};\n\nexport const loginRequest = (creds: Credentials): LoginAction => {\n    return {\n        type: LOGIN_REQUEST,\n        creds: creds,\n    };\n};\n\nexport const logoutRequest = (): LoginAction => {\n    return {\n        type: LOGOUT_REQUEST,\n    };\n};\n\nexport const signupRequest = (creds: Credentials): SignUpAction => {\n    return {\n        type: SIGNUP_REQUEST,\n        creds: creds,\n    };\n};\n\nexport const gameCreateRequest = (gamename: string): GameAction => {\n    return {\n        type: GAME_CREATE_REQUEST,\n        gamename: gamename,\n    };\n};\n\nexport const gameDeleteRequest = (gameId: string): GameAction => {\n    return {\n        type: GAME_DELETE_REQUEST,\n        gameId,\n    };\n};\n\nexport const gameRenameRequest = (gameId: string, newName: string): GameAction => {\n    return {\n        type: GAME_RENAME_REQUEST,\n        gameId,\n        newName,\n    };\n};\n\nexport const gameListRequest = (): GameAction => {\n    return {\n        type: GAME_LIST_REQUEST,\n    };\n};\n\nexport const gameSelectRequest = (id: string, updateCardSets: boolean): GameAction => {\n    return {\n        type: GAME_SELECT_REQUEST,\n        id,\n        updateCardSets,\n    };\n};\n\nexport const gameCreatePdfRequest = (\n    collectionType: string,\n    collectionId: string,\n    pageWidth: number,\n    pageHeight: number,\n    topBottomMargin: number,\n    leftRightMargin: number,\n    verticalSpace: number,\n    horizontalSpace: number,\n    includeBleedingArea: boolean,\n    cutMarksForScissors: boolean,\n    cutMarksForGuillotine: boolean,\n    cutMarksInMarginArea: boolean,\n    cutMarksOnFrontSideOnly: boolean,\n): GameCreatePdfRequest => {\n    return {\n        type: GAME_CREATE_PDF_REQUEST,\n        collectionType,\n        collectionId,\n        pageWidth,\n        pageHeight,\n        topBottomMargin,\n        leftRightMargin,\n        verticalSpace,\n        horizontalSpace,\n        includeBleedingArea,\n        cutMarksForScissors,\n        cutMarksForGuillotine,\n        cutMarksInMarginArea,\n        cutMarksOnFrontSideOnly,\n    };\n};\n\nexport const gameCreatePngRequest = (\n    dpi: number,\n    collectionType: string,\n    collectionId: string,\n): GameCreatePngRequest => {\n    return {\n        type: GAME_CREATE_PNG_REQUEST,\n        dpi,\n        collectionType,\n        collectionId,\n    };\n};\n\nexport const cardSetCreateRequest = (\n    cardsetname: string,\n    width: number,\n    height: number,\n    gameId: string,\n): CardSetsAction => {\n    return {\n        type: CARDSET_CREATE_REQUEST,\n        cardsetname: cardsetname,\n        width,\n        height,\n        gameId,\n    };\n};\n\nexport const cardSetDeleteRequest = (cardSetId: string): CardSetsAction => {\n    return {\n        type: CARDSET_DELETE_REQUEST,\n        cardSetId,\n    };\n};\n\nexport const cardSetRenameRequest = (cardSetId: string, newName: string): CardSetsAction => {\n    return {\n        type: CARDSET_RENAME_REQUEST,\n        cardSetId,\n        newName,\n    };\n};\n\nexport const cardSetImportData = (data: object): CardSetImportData => {\n    return {\n        type: CARDSET_IMPORT_DATA,\n        data,\n    };\n};\n\nexport const cardSetSelectRequest = (id: string): CardSetSelectRequest => {\n    return {\n        type: CARDSET_SELECT_REQUEST,\n        id,\n    };\n};\n\nexport const cardSetCreateCard = (card: CardType): CardSetCreateCard => {\n    return {\n        type: CARDSET_CREATE_CARD,\n        card,\n    };\n};\n\nexport const cardSetCloneCard = (card: CardType): CardSetCloneCard => {\n    return {\n        type: CARDSET_CLONE_CARD,\n        card,\n    };\n};\n\nexport const cardSetRemoveCard = (card: CardType): CardSetRemoveCard => {\n    return {\n        type: CARDSET_REMOVE_CARD,\n        card,\n    };\n};\n\nexport const cardSetUpdateCardCount = (card: CardType, count: number): CardSetUpdateCardCount => {\n    return {\n        type: CARDSET_UPDATE_CARD_COUNT,\n        card,\n        count,\n    };\n};\n\nexport const cardSetAddTextField = (): CardSetAddTextField => {\n    return {\n        type: CARDSET_ADD_TEXT_FIELD,\n    };\n};\n\nexport const cardSetAddImageField = (): CardSetAddImageField => {\n    return {\n        type: CARDSET_ADD_IMAGE_FIELD,\n    };\n};\n\nexport const cardSetChangeActiveFieldName = (name: string): CardSetChangeActiveFieldName => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_FIELD_NAME,\n        name,\n    };\n};\n\nexport const cardSetRemoveActiveField = (): CardSetRemoveActiveField => {\n    return {\n        type: CARDSET_REMOVE_ACTIVE_FIELD,\n    };\n};\n\nexport const cardSetRaiseActiveField = (): CardSetRaiseActiveField => {\n    return {\n        type: CARDSET_RAISE_ACTIVE_FIELD,\n    };\n};\n\nexport const cardSetRaiseActiveFieldToTop = (): CardSetRaiseActiveFieldToTop => {\n    return {\n        type: CARDSET_RAISE_ACTIVE_FIELD_TO_TOP,\n    };\n};\n\nexport const cardSetLowerActiveField = (): CardSetLowerActiveField => {\n    return {\n        type: CARDSET_LOWER_ACTIVE_FIELD,\n    };\n};\n\nexport const cardSetLowerActiveFieldToBottom = (): CardSetLowerActiveFieldToBottom => {\n    return {\n        type: CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM,\n    };\n};\n\nexport const cardSetLockActiveField = (): CardSetLockActiveField => {\n    return {\n        type: CARDSET_LOCK_ACTIVE_FIELD,\n    };\n};\n\nexport const cardSetUnlockActiveField = (): CardSetUnlockActiveField => {\n    return {\n        type: CARDSET_UNLOCK_ACTIVE_FIELD,\n    };\n};\n\nexport const cardSetChangeFitForActiveField = (fit: string): CardSetChangeFitForActiveField => {\n    return {\n        type: CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD,\n        fit,\n    };\n};\n\nexport const cardSetChangeCropForActiveField = (crop: boolean): CardSetChangeCropForActiveField => {\n    return {\n        type: CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD,\n        crop,\n    };\n};\n\nexport const cardSetChangeUnclickableForActiveField = (\n    unclickable: boolean,\n): CardSetChangeUnclickableForActiveField => {\n    return {\n        type: CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD,\n        unclickable,\n    };\n};\n\nexport const cardSetChangeWidth = (\n    width: number,\n    maintainAspectRatio: boolean,\n    resizeContent: boolean,\n): CardSetChangeWidth => {\n    return {\n        type: CARDSET_CHANGE_WIDTH,\n        width,\n        maintainAspectRatio,\n        resizeContent,\n    };\n};\n\nexport const cardSetChangeHeight = (\n    height: number,\n    maintainAspectRatio: boolean,\n    resizeContent: boolean,\n): CardSetChangeHeight => {\n    return {\n        type: CARDSET_CHANGE_HEIGHT,\n        height,\n        maintainAspectRatio,\n        resizeContent,\n    };\n};\n\nexport const cardSetChangeIsTwoSided = (isTwoSided: boolean): CardSetChangeIsTwoSided => {\n    return {\n        type: CARDSET_CHANGE_IS_TWO_SIDED,\n        isTwoSided,\n    };\n};\n\nexport const cardSetChangeSnappingDistance = (snappingDistance: number): CardSetChangeSnappingDistance => {\n    return {\n        type: CARDSET_CHANGE_SNAPPING_DISTANCE,\n        snappingDistance,\n    };\n};\n\nexport const cardSetChangeFieldPosition = (\n    cardId: string | undefined,\n    fieldId: string,\n    x: number,\n    y: number,\n    group: string,\n): CardSetChangeFieldPosition => {\n    return {\n        type: CARDSET_CHANGE_FIELD_POSITION,\n        cardId,\n        fieldId,\n        x,\n        y,\n        group,\n    };\n};\n\nexport const cardSetChangeFieldPan = (\n    cardId: string | undefined,\n    fieldId: string,\n    cx: number,\n    cy: number,\n    group: string,\n): CardSetChangeFieldPan => {\n    return {\n        type: CARDSET_CHANGE_FIELD_PAN,\n        cardId,\n        fieldId,\n        cx,\n        cy,\n        group,\n    };\n};\n\nexport const cardSetChangeFieldZoom = (\n    cardId: string | undefined,\n    fieldId: string,\n    zoom: number,\n    group: string,\n): CardSetChangeFieldZoom => {\n    return {\n        type: CARDSET_CHANGE_FIELD_ZOOM,\n        cardId,\n        fieldId,\n        zoom,\n        group,\n    };\n};\n\nexport const cardSetChangeFieldSize = (\n    cardId: string | undefined,\n    fieldId: string,\n    width: number,\n    height: number,\n    group: string,\n): CardSetChangeFieldSize => {\n    return {\n        type: CARDSET_CHANGE_FIELD_SIZE,\n        cardId,\n        fieldId,\n        width,\n        height,\n        group,\n    };\n};\n\nexport const cardSetChangeFieldAngle = (\n    cardId: string | undefined,\n    fieldId: string,\n    angle: number,\n    group: string,\n): CardSetChangeFieldAngle => {\n    return {\n        type: CARDSET_CHANGE_FIELD_ANGLE,\n        cardId,\n        fieldId,\n        angle,\n        group,\n    };\n};\n\nexport const cardSetChangeActiveTextFieldAlign = (align: string): CardSetChangeActiveTextFieldAlign => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN,\n        align,\n    };\n};\n\nexport const cardSetChangeActiveTextFieldColor = (color: string): CardSetChangeActiveTextFieldColor => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR,\n        color,\n    };\n};\n\nexport const cardSetChangeActiveTextFieldFontFamily = (fontFamily: string): CardSetChangeActiveTextFieldFontFamily => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY,\n        fontFamily,\n    };\n};\n\nexport const cardSetChangeActiveTextFieldFontVariant = (\n    fontVariant: string,\n): CardSetChangeActiveTextFieldFontVariant => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT,\n        fontVariant,\n    };\n};\n\nexport const cardSetChangeActiveTextFieldFontFamilyAndVariant = (\n    fontFamily: string,\n    fontVariant: string,\n): CardSetChangeActiveTextFieldFontFamilyAndVariant => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT,\n        fontFamily,\n        fontVariant,\n    };\n};\n\nexport const cardSetChangeActiveTextFieldFontSize = (fontSize: number): CardSetChangeActiveTextFieldFontSize => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE,\n        fontSize,\n    };\n};\n\nexport const cardSetChangeActiveTextFieldLineHeight = (lineHeight: number): CardSetChangeActiveTextFieldLineHeight => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT,\n        lineHeight,\n    };\n};\n\nexport const cardSetChangeText = (cardId: string, fieldId: string, textInfo: TextInfo): CardSetChangeText => {\n    return {\n        type: CARDSET_CHANGE_TEXT,\n        cardId,\n        fieldId,\n        textInfo,\n    };\n};\n\nexport const cardSetChangeImage = (\n    cardId: string | undefined,\n    fieldId: string,\n    imageInfo: ImageInfo,\n): CardSetChangeImage => {\n    return {\n        type: CARDSET_CHANGE_IMAGE,\n        cardId,\n        fieldId,\n        imageInfo,\n    };\n};\n\nexport const cardSetChangeImageBase64 = (\n    cardId: string,\n    fieldId: string,\n    base64?: string,\n): CardSetChangeImageBase64 => {\n    return {\n        type: CARDSET_CHANGE_IMAGE_BASE64,\n        cardId,\n        fieldId,\n        base64,\n    };\n};\n\nexport const cardSetActiveCardAndField = (\n    cardId: string | undefined,\n    isBackActive: boolean,\n    fieldId: string | undefined,\n): CardSetSetActiveCardAndField => {\n    return {\n        type: CARDSET_SET_ACTIVE_CARD_AND_FIELD,\n        cardId,\n        isBackActive,\n        fieldId,\n    };\n};\n\nexport const cardSetChangeApplyToAllCards = (applyToAllCards: boolean): CardSetChangeApplyToAllCards => {\n    return {\n        type: CARDSET_CHANGE_APPLY_TO_ALLCARDS,\n        applyToAllCards,\n    };\n};\n\nexport const cardSetSetSidebarState = (sidebarState: SidebarState | null): CardSetSetSidebarState => {\n    return {\n        type: CARDSET_SET_SIDEBAR_STATE,\n        sidebarState,\n    };\n};\n\nexport const cardSetSetZoom = (zoom: number): CardSetSetZoom => {\n    return {\n        type: CARDSET_SET_ZOOM,\n        zoom,\n    };\n};\n\nexport const cardSetUploadImage = (\n    gameId: string,\n    file: File,\n    load: FPLoadCallback,\n    error: FPErrorCallback,\n    progress: FPProgressCallback,\n    abort: FPAbortCallback,\n    cancelToken: CancelToken,\n): CardSetUploadImage => {\n    return {\n        type: CARDSET_UPLOAD_IMAGE,\n        gameId,\n        file,\n        load,\n        error,\n        progress,\n        abort,\n        cancelToken,\n    };\n};\n\nexport const cardSetDeleteImage = (\n    imageId: string,\n    load: FPRevertLoadCallback,\n    error: FPErrorCallback,\n): CardSetDeleteImage => {\n    return {\n        type: CARDSET_DELETE_IMAGE,\n        imageId,\n        load,\n        error,\n    };\n};\n\nexport const cardSetUndo = (): CardSetUndo => {\n    return {\n        type: CARDSET_UNDO,\n    };\n};\n\nexport const cardSetRedo = (): CardSetRedo => {\n    return {\n        type: CARDSET_REDO,\n    };\n};\n\nexport const imageListRequest = (filter: string, location: string): ImageListAction => {\n    return {\n        type: IMAGE_LIST_REQUEST,\n        filter,\n        location,\n    };\n};\n","export const CURRENT_CARDSET_VERSION = 3;\nexport const DEFAULT_FONT = 'Roboto';\nexport const DEFAULT_FONT_VARIANT = 'regular';\nexport const DEFAULT_FONT_SIZE = 8;\nexport const DEFAULT_LINE_HEIGHT = 1.27;\n\nexport const BLEED_WIDTH = 25.4 / 8; // 1/8th of inch in mm\n","import axios, { AxiosError, CancelToken } from 'axios';\n\nimport { Credentials } from './types';\n\nexport function handleAxiosError(error: AxiosError) {\n    if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        // error.response.status);\n        throw new Error(error.response.data.message);\n    } else if (error.request) {\n        console.log(error.request);\n        throw new Error(error.request);\n    } else {\n        throw new Error('Unknown error :(');\n    }\n}\n\nexport function getTokens(creds: Credentials) {\n    return axios\n        .post('/api/tokens', creds)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function refreshToken(refreshTokenValue: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${refreshTokenValue}` },\n    };\n    return axios\n        .post('/api/access_tokens', {}, config)\n        .then(resp => {\n            return resp.data.accessToken;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function deleteAccessToken(token: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .delete('/api/access_tokens', config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            if (error.response.status === 401) return {};\n            handleAxiosError(error);\n        });\n}\n\nexport function deleteRefreshToken(token: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .delete('/api/refresh_tokens', config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            if (error.response.status === 401) return {};\n            handleAxiosError(error);\n        });\n}\n\nexport function registerUser(creds: Credentials) {\n    return axios\n        .post('/api/users', creds)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function getRequest(url: string, token: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .get(url, config)\n        .then(resp => {\n            return resp;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function postRequest(url: string, token: string, data: object) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .post(url, data, config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function postRequestFormDataCancelable(\n    url: string,\n    token: string,\n    data: FormData,\n    progressCallback: (event: ProgressEvent) => void,\n    cancelToken: CancelToken,\n    cancelCallback: () => void,\n) {\n    let config = {\n        headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'multipart/form-data',\n        },\n        cancelToken,\n        onUploadProgress: progressCallback,\n    };\n\n    return axios\n        .post(url, data, config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            if (axios.isCancel(error)) {\n                cancelCallback();\n            } else {\n                handleAxiosError(error);\n            }\n        });\n}\n\nexport function putRequest(url: string, token: string, data: object) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .put(url, data, config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function deleteRequest(url: string, token: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .delete(url, config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n","import axios from 'axios';\nimport StackTrace from 'stacktrace-js';\n\nimport { ImageFieldInfo, ImageToDraw } from './types';\nimport { store } from './store';\n\nexport function downloadBlob(blobURL: string, filename: string, resolve?: () => void) {\n    const tempLink = document.createElement('a');\n    tempLink.style.display = 'none';\n    tempLink.href = blobURL;\n    tempLink.setAttribute('download', filename);\n    if (typeof tempLink.download === 'undefined') {\n        tempLink.setAttribute('target', '_blank');\n    }\n    document.body.appendChild(tempLink);\n    tempLink.click();\n    document.body.removeChild(tempLink);\n    setTimeout(() => {\n        window.URL.revokeObjectURL(blobURL);\n        if (resolve) resolve();\n    }, 100);\n}\n\nexport function rotateVec(x: number, y: number, a: number) {\n    const sinA = Math.sin(a);\n    const cosA = Math.cos(a);\n    const rx = cosA * x - sinA * y;\n    const ry = sinA * x + cosA * y;\n\n    return { rx, ry };\n}\n\nexport function calculateImageDimensions(imageFieldInfo: ImageFieldInfo | ImageToDraw) {\n    let calculatedImageWidth, calculatedImageHeight;\n    let imageWidth = imageFieldInfo.imageWidth || 1;\n    let imageHeight = imageFieldInfo.imageHeight || 1;\n\n    if (!imageFieldInfo.fit || imageFieldInfo.fit === 'width') {\n        calculatedImageWidth = imageFieldInfo.width;\n        calculatedImageHeight = (imageFieldInfo.width * imageHeight) / imageWidth;\n    } else if (imageFieldInfo.fit === 'height') {\n        calculatedImageWidth = (imageFieldInfo.height * imageWidth) / imageHeight;\n        calculatedImageHeight = imageFieldInfo.height;\n    } else {\n        // strech\n        calculatedImageWidth = imageFieldInfo.width;\n        calculatedImageHeight = imageFieldInfo.height;\n    }\n\n    calculatedImageWidth *= imageFieldInfo.zoom || 1;\n    calculatedImageHeight *= imageFieldInfo.zoom || 1;\n\n    return { width: calculatedImageWidth, height: calculatedImageHeight };\n}\n\nexport class UserError extends Error {}\n\nexport function reportError(error: Error) {\n    if (error instanceof UserError) {\n        return;\n    }\n\n    StackTrace.fromError(error).then(stackframes => {\n        var stringifiedStack = stackframes\n            .map(function(sf) {\n                return sf.toString();\n            })\n            .join('\\n');\n\n        if (process.env.NODE_ENV === 'production') {\n            let state = '';\n            if (store) {\n                state = JSON.stringify(store.getState());\n            }\n            axios.post('/api/reports', { message: error.message, stack: stringifiedStack, state });\n        } else {\n            console.log(stringifiedStack);\n        }\n    });\n}\n","import { Dispatch } from './actions';\n\nexport interface SidebarOwnProps {\n    visible: boolean;\n}\n\nexport interface DispatchProps {\n    dispatch: Dispatch;\n}\n\nexport type IdsArray = string[];\n\nexport interface MessageType {\n    id: string;\n    type: string;\n    text: string;\n}\n\nexport interface GameType {\n    id: string;\n    name: string;\n}\n\nexport interface GamesCollection {\n    [propName: string]: GameType;\n}\n\nexport interface PlaceholderBase {\n    id: string;\n    type: string;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    angle: number;\n    locked?: boolean;\n    name?: string;\n    isOnBack?: boolean;\n}\n\nexport interface TextPlaceholderType extends PlaceholderBase {\n    type: 'text';\n    align: string;\n    color: string;\n    fontFamily: string;\n    fontVariant: string;\n    fontSize: number;\n    lineHeight?: number;\n}\n\nexport interface ImagePlaceholderType extends PlaceholderBase {\n    id: string;\n    type: 'image';\n    fit?: string;\n    zoom?: number;\n    cx?: number;\n    cy?: number;\n    crop?: boolean;\n}\n\nexport type PlaceholderType = TextPlaceholderType | ImagePlaceholderType;\n\nexport interface PlaceholdersCollection {\n    [propName: string]: PlaceholderType;\n}\n\nexport interface TextInfo {\n    value: string;\n}\n\nexport interface PlaceholdersTextInfoCollection {\n    [propName: string]: TextInfo;\n}\n\nexport interface PlaceholdersTextInfoByCardCollection {\n    [propName: string]: PlaceholdersTextInfoCollection;\n}\n\nexport interface ImageInfo {\n    url?: string;\n    global?: boolean;\n    base64?: string;\n    color?: string;\n    width?: number;\n    height?: number;\n}\n\nexport interface PlaceholdersImageInfoCollection {\n    [propName: string]: ImageInfo;\n}\n\nexport interface PlaceholdersImageInfoByCardCollection {\n    [propName: string]: PlaceholdersImageInfoCollection;\n}\n\nexport interface FieldBaseInfo {\n    id: string;\n    type: string;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    angle: number;\n    locked?: boolean;\n    name?: string;\n    isOnBack?: boolean;\n    unclickable?: boolean;\n}\n\nexport interface TextFieldInfo extends FieldBaseInfo {\n    type: 'text';\n    value: string;\n    align: string;\n    color: string;\n    fontFamily: string;\n    fontVariant: string;\n    fontSize: number;\n    lineHeight?: number;\n}\n\nexport interface ImageFieldInfo extends FieldBaseInfo {\n    type: 'image';\n    url?: string;\n    global?: boolean;\n    base64?: string;\n    color?: string;\n    imageWidth?: number;\n    imageHeight?: number;\n    fit?: string;\n    zoom?: number;\n    cx?: number;\n    cy?: number;\n    crop?: boolean;\n}\n\nexport type FieldInfo = TextFieldInfo | ImageFieldInfo;\n\nexport interface FieldInfoCollection {\n    [propName: string]: FieldInfo;\n}\n\nexport interface FieldInfoByCardCollection {\n    [propName: string]: FieldInfoCollection;\n}\n\nexport interface CardType {\n    id: string;\n    count: number;\n}\n\nexport interface CardsCollection {\n    [propName: string]: CardType;\n}\n\nexport interface CardSetType {\n    id: string;\n    name: string;\n}\n\nexport interface CardSetsCollection {\n    [propName: string]: CardSetType;\n}\n\nexport interface Credentials {\n    username: string;\n    password: string;\n}\n\nexport interface Image {\n    id: number;\n    name: string;\n    width: number;\n    height: number;\n}\n\nexport type ImageArray = Image[];\n\nexport interface CardSetData {\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    cardsAllIds: string[];\n    cardsById: CardsCollection;\n    fieldsAllIds: string[];\n    fields: FieldInfoByCardCollection;\n}\n\nexport enum ImageType {\n    SVG,\n    SVG_PATH,\n    IMAGE,\n    BLOCK_START,\n    BLOCK_END,\n}\n\nexport interface ImageToDraw {\n    type: ImageType;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    angle: number;\n    fit?: string;\n    data: string;\n    color?: string;\n    scale?: number;\n    imageWidth?: number;\n    imageHeight?: number;\n    zoom?: number;\n    cx?: number;\n    cy?: number;\n    crop?: boolean;\n}\n","import axios from 'axios';\nimport { downloadBlob, calculateImageDimensions } from './utils';\nimport { delay } from 'redux-saga';\nimport { XmlDocument } from 'xmldoc';\nimport JSZip from 'jszip';\nimport { getRequest } from './requests';\nimport { CardSetData, ImageToDraw, ImageType } from './types';\n\nconst SVG_B64_START = 'data:image/svg+xml;base64,';\n\nexport const generatePdfUsingWorker = (\n    accessToken: string,\n    collectionType: string,\n    collectionId: string,\n    pageWidth: number,\n    pageHeight: number,\n    topBottomMargin: number,\n    leftRightMargin: number,\n    verticalSpace: number,\n    horizontalSpace: number,\n    includeBleedingArea: boolean,\n    cutMarksForScissors: boolean,\n    cutMarksForGuillotine: boolean,\n    cutMarksInMarginArea: boolean,\n    cutMarksOnFrontSideOnly: boolean,\n) => {\n    // @ts-ignore\n    if (!window.Worker) {\n        throw new Error('We can not generate PDF because of browser you use. Try using different browser');\n    }\n\n    return new Promise((resolve, reject) => {\n        try {\n            const worker = new Worker('/js/worker.js');\n            worker.addEventListener('message', event => {\n                if (event.data.type === 'generatePdf') {\n                    const blobURL = event.data.url;\n                    downloadBlob(blobURL, 'card.pdf', resolve);\n                } else if (event.data.type === 'generateError') {\n                    const error = event.data.error;\n                    reject({ message: 'PDF generation failed: ' + event.data.message, stack: error.stack });\n                }\n            });\n\n            worker.postMessage({\n                type: 'generatePdf',\n                accessToken,\n                collectionType,\n                collectionId,\n                pageWidth,\n                pageHeight,\n                topBottomMargin,\n                leftRightMargin,\n                verticalSpace,\n                horizontalSpace,\n                includeBleedingArea,\n                cutMarksForScissors,\n                cutMarksForGuillotine,\n                cutMarksInMarginArea,\n                cutMarksOnFrontSideOnly,\n            });\n        } catch (e) {\n            reject(e);\n        }\n    });\n};\n\nfunction loadImage(url: string): Promise<HTMLImageElement> {\n    return new Promise((resolve, reject) => {\n        const img = new Image();\n        img.onload = () => resolve(img);\n        img.onerror = () => reject();\n\n        img.src = url;\n    });\n}\n\nfunction prepareImageToDrawSpace(context: CanvasRenderingContext2D, imageToDraw: ImageToDraw, ptpmm: number) {\n    context.save();\n    let x = (imageToDraw.x + imageToDraw.width / 2) * ptpmm;\n    let y = (imageToDraw.y + imageToDraw.height / 2) * ptpmm;\n    context.translate(x, y);\n    context.rotate(imageToDraw.angle);\n    let ax = (-imageToDraw.width / 2) * ptpmm;\n    let ay = (-imageToDraw.height / 2) * ptpmm;\n    context.translate(ax, ay);\n    if (imageToDraw.crop) {\n        context.rect(0, 0, imageToDraw.width * ptpmm, imageToDraw.height * ptpmm);\n        context.clip();\n    }\n}\n\nfunction fixWidthAndHeightInSvg(data: string) {\n    const doc = new XmlDocument(data);\n    if (!('width' in doc.attr) || !('height' in doc.attr)) {\n        const viewBox = doc.attr['viewBox'].split(' ');\n        doc.attr['width'] = viewBox[2];\n        doc.attr['height'] = viewBox[3];\n    }\n\n    return btoa(doc.toString({ compressed: true }));\n}\n\nclass PNGGenerator {\n    tasksQueue: {\n        type: string;\n        subType: string;\n        imageToDraw?: ImageToDraw;\n        error?: { message: string; stack: string };\n    }[] = [];\n    worker: Worker;\n\n    constructor() {\n        // @ts-ignore\n        if (!window.Worker) {\n            throw new Error('We can not generate PNG because of browser you use. Try using different browser');\n        }\n\n        this.worker = new Worker('/js/worker.js');\n        this.worker.addEventListener('message', event => {\n            if (event.data.type === 'generateCard' || event.data.type === 'generateError') {\n                this.tasksQueue.push(event.data);\n            }\n        });\n    }\n\n    async generateCard(\n        cardSetData: CardSetData,\n        cardId: string,\n        cardIdx: number,\n        dpi: number,\n        isBack: boolean,\n        cardsetFolder: JSZip,\n    ) {\n        this.worker.postMessage({\n            type: 'generateCard',\n            cardSetData,\n            cardId,\n            isBack,\n        });\n\n        let offscreenCanvas = document.createElement('canvas');\n\n        const calculatedWidth = Math.round(dpi * (cardSetData.width / 25.4 + 1 / 4));\n        const calculatedHeight = Math.round(dpi * (cardSetData.height / 25.4 + 1 / 4));\n\n        offscreenCanvas.width = calculatedWidth;\n        offscreenCanvas.height = calculatedHeight;\n        var context = offscreenCanvas.getContext('2d');\n        if (context === null) {\n            throw new Error('We cannot generate PNG because of unknown reason. Try different browser.');\n        }\n        context.fillStyle = 'white';\n        context.fillRect(0, 0, calculatedWidth, calculatedHeight);\n\n        let stopped = false;\n\n        const ptpmm = dpi / 25.4;\n\n        while (!stopped) {\n            while (this.tasksQueue.length > 0) {\n                let task = this.tasksQueue.shift();\n\n                if (task && task.imageToDraw) {\n                    const imageToDraw = task.imageToDraw;\n\n                    if (imageToDraw.type === ImageType.SVG_PATH) {\n                        prepareImageToDrawSpace(context, imageToDraw, ptpmm);\n                        if (imageToDraw.scale && imageToDraw.color) {\n                            context.fillStyle = imageToDraw.color;\n                            context.scale(imageToDraw.scale * ptpmm, imageToDraw.scale * ptpmm);\n                            var p = new Path2D(imageToDraw.data);\n                            context.fill(p);\n                        }\n                        context.restore();\n                    } else if (imageToDraw.type === ImageType.IMAGE || imageToDraw.type === ImageType.SVG) {\n                        prepareImageToDrawSpace(context, imageToDraw, ptpmm);\n\n                        if (imageToDraw.cx !== undefined && imageToDraw.cy !== undefined) {\n                            context.translate(imageToDraw.cx * ptpmm, imageToDraw.cy * ptpmm);\n                        }\n                        let dim = calculateImageDimensions(imageToDraw);\n\n                        let image;\n                        if (imageToDraw.type === ImageType.SVG) {\n                            let svgData = fixWidthAndHeightInSvg(atob(imageToDraw.data));\n                            image = await loadImage(SVG_B64_START + svgData);\n                        } else {\n                            let resp = await axios.get(imageToDraw.data);\n                            if (resp.headers['content-type'] === 'image/svg+xml') {\n                                let svgData = fixWidthAndHeightInSvg(resp.data);\n                                image = await loadImage(SVG_B64_START + svgData);\n                            } else {\n                                image = await loadImage(imageToDraw.data);\n                            }\n                        }\n\n                        context.drawImage(image, 0, 0, dim.width * ptpmm, dim.height * ptpmm);\n\n                        context.restore();\n                    } else if (imageToDraw.type === ImageType.BLOCK_START) {\n                        prepareImageToDrawSpace(context, imageToDraw, ptpmm);\n                    } else if (imageToDraw.type === ImageType.BLOCK_END) {\n                        context.restore();\n                    }\n                }\n\n                if (task && task.subType === 'stop') {\n                    stopped = true;\n                }\n\n                if (task && task.type === 'generateError' && task.error) {\n                    let error = Error('Failed to generate PNG: ' + task.error.message);\n                    error.stack = task.error.stack;\n                    throw error;\n                }\n            }\n            if (!stopped) {\n                await delay(100);\n            }\n        }\n\n        let dataUrl = offscreenCanvas.toDataURL();\n        dataUrl = dataUrl.slice('data:image/png;base64,'.length);\n        cardsetFolder.file(\n            `${cardIdx.toString().padStart(4, '0')}_${cardId}_${isBack ? 'back' : 'front'}.png`,\n            dataUrl,\n            { base64: true },\n        );\n    }\n\n    async generateGame(accessToken: string, gameId: string, dpi: number, zip: JSZip) {\n        let resp = await getRequest('/api/games/' + gameId, accessToken);\n        if (!resp) return;\n\n        const cardsetsList = resp.data.cardsets;\n        for (const cardsetInfo of cardsetsList) {\n            await this.generateCardset(accessToken, cardsetInfo.id, dpi, zip);\n        }\n    }\n\n    async generateCardset(accessToken: string, cardsetId: string, dpi: number, zip: JSZip) {\n        const resp = await getRequest('/api/cardsets/' + cardsetId, accessToken);\n        if (!resp) return;\n\n        let cardSetData: CardSetData = JSON.parse(resp.data.data);\n\n        let cardsetFolder = zip.folder(resp.data.name);\n\n        for (const [cardIdx, cardId] of cardSetData.cardsAllIds.entries()) {\n            await this.generateCard(cardSetData, cardId, cardIdx, dpi, false, cardsetFolder);\n            if (cardSetData.isTwoSided) {\n                await this.generateCard(cardSetData, cardId, cardIdx, dpi, true, cardsetFolder);\n            }\n        }\n    }\n}\n\nexport const generatePngUsingWorker = async (\n    accessToken: string,\n    collectionType: string,\n    collectionId: string,\n    dpi: number,\n) => {\n    const pngGenerator = new PNGGenerator();\n\n    let zip = new JSZip();\n\n    if (collectionType === 'games') {\n        await pngGenerator.generateGame(accessToken, collectionId, dpi, zip);\n    } else if (collectionType === 'cardsets') {\n        await pngGenerator.generateCardset(accessToken, collectionId, dpi, zip);\n    }\n\n    let blob = await zip.generateAsync({ type: 'blob' });\n    let url = window.URL.createObjectURL(blob);\n    downloadBlob(url, 'cards.zip');\n};\n","export function saveTokens(data: { accessToken: string; refreshToken: string }) {\n    localStorage.setItem('accessToken', data.accessToken);\n    localStorage.setItem('refreshToken', data.refreshToken);\n}\n\nexport function saveUsername(username: string) {\n    localStorage.setItem('username', username);\n}\n\nexport function saveAccessToken(accessToken: string) {\n    localStorage.setItem('accessToken', accessToken);\n}\n\nexport function cleanTokens() {\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n}\n\nexport function cleanUsername() {\n    localStorage.removeItem('username');\n}\n\nexport function getTokenFromStorage() {\n    let token = localStorage.getItem('accessToken') || null;\n    return token;\n}\n\nexport function getRefreshTokenFromStorage() {\n    let token = localStorage.getItem('refreshToken') || null;\n    return token;\n}\n\nexport function getUsernameFromStorage() {\n    let username = localStorage.getItem('username') || null;\n    return username;\n}\n","import WebFont from 'webfontloader';\n\nimport { DEFAULT_FONT } from './constants';\nimport { CardSetSelectSuccessDataV3 } from './actions';\n\nconst webFontsLoadPromise = (config: WebFont.Config) =>\n    new Promise((resolve, reject) => {\n        WebFont.load({ ...config, active: resolve, inactive: reject });\n    });\n\nexport const loadFontsUsedInPlaceholders = (data: CardSetSelectSuccessDataV3) => {\n    if (!('fieldsAllIds' in data)) {\n        return;\n    }\n\n    let fontsToLoad: Set<string> = new Set();\n    fontsToLoad.add(DEFAULT_FONT);\n    for (const fieldId of data.fieldsAllIds) {\n        const field = data.fields[data.cardsAllIds[0]][fieldId];\n        if (field && field.type === 'text' && field.fontFamily) {\n            let fontToLoad = field.fontFamily;\n            if (field.fontVariant && field.fontVariant !== 'regular') {\n                fontToLoad += ':' + field.fontVariant;\n            }\n\n            fontsToLoad.add(fontToLoad);\n        }\n    }\n\n    const config: WebFont.Config = {\n        google: {\n            families: [...Array.from(fontsToLoad)],\n        },\n    };\n\n    return webFontsLoadPromise(config);\n};\n","import { CancelToken } from 'axios';\nimport { XmlDocument, XmlNode } from 'xmldoc';\nimport { all, call, put, select, takeEvery, takeLatest } from 'redux-saga/effects';\nimport { delay, SagaIterator } from 'redux-saga';\nimport jwtDecode from 'jwt-decode';\nimport { ActionCreators } from 'redux-undo';\n\nimport { BLEED_WIDTH, CURRENT_CARDSET_VERSION } from './constants';\nimport {\n    CARDSET_ADD_IMAGE_FIELD,\n    CARDSET_ADD_TEXT_FIELD,\n    CARDSET_CHANGE_ACTIVE_FIELD_NAME,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT,\n    CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD,\n    CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD,\n    CARDSET_CHANGE_HEIGHT,\n    CARDSET_CHANGE_IMAGE,\n    CARDSET_CHANGE_IS_TWO_SIDED,\n    CARDSET_CHANGE_FIELD_ANGLE,\n    CARDSET_CHANGE_FIELD_SIZE,\n    CARDSET_CHANGE_SNAPPING_DISTANCE,\n    CARDSET_CHANGE_TEXT,\n    CARDSET_CHANGE_WIDTH,\n    CARDSET_CLONE_CARD,\n    CARDSET_CREATE_CARD,\n    CARDSET_CREATE_FAILURE,\n    CARDSET_CREATE_REQUEST,\n    CARDSET_CREATE_SUCCESS,\n    CARDSET_DELETE_IMAGE,\n    CARDSET_DELETE_REQUEST,\n    CARDSET_IMPORT_DATA,\n    CARDSET_LIST_RESET,\n    CARDSET_LIST_SUCCESS,\n    CARDSET_LOCK_ACTIVE_FIELD,\n    CARDSET_LOWER_ACTIVE_FIELD,\n    CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM,\n    CARDSET_RAISE_ACTIVE_FIELD,\n    CARDSET_RAISE_ACTIVE_FIELD_TO_TOP,\n    CARDSET_REMOVE_ACTIVE_FIELD,\n    CARDSET_REMOVE_CARD,\n    CARDSET_RENAME_REQUEST,\n    CARDSET_SELECT_FAILURE,\n    CARDSET_SELECT_REQUEST,\n    CARDSET_SELECT_SUCCESS,\n    CARDSET_SET_ZOOM,\n    CARDSET_UNLOCK_ACTIVE_FIELD,\n    CARDSET_UPDATE_CARD_COUNT,\n    CARDSET_UPLOAD_IMAGE,\n    CARDSET_UPLOAD_IMAGE_FAILURE,\n    CARDSET_UPLOAD_IMAGE_SUCCESS,\n    CardSetChangeFitForActiveField,\n    CardSetChangeImage,\n    CardSetCreateRequest,\n    CardSetDeleteImage,\n    CardSetDeleteRequest,\n    CardSetRenameRequest,\n    CardSetSelectRequest,\n    CardSetUploadImage,\n    GAME_CREATE_PDF_FAILURE,\n    GAME_CREATE_PDF_REQUEST,\n    GAME_CREATE_PDF_SUCCESS,\n    GAME_CREATE_PNG_FAILURE,\n    GAME_CREATE_PNG_REQUEST,\n    GAME_CREATE_PNG_SUCCESS,\n    GAME_CREATE_REQUEST,\n    GAME_CREATE_SUCCESS,\n    GAME_DELETE_REQUEST,\n    GAME_LIST_FAILURE,\n    GAME_LIST_REQUEST,\n    GAME_LIST_RESET,\n    GAME_LIST_SUCCESS,\n    GAME_RENAME_REQUEST,\n    GAME_SELECT_FAILURE,\n    GAME_SELECT_REQUEST,\n    GAME_SELECT_SUCCESS,\n    GameCreatePdfRequest,\n    GameCreatePngRequest,\n    GameCreateRequest,\n    GameDeleteRequest,\n    GameRenameRequest,\n    GameSelectRequest,\n    IMAGE_LIST_FAILURE,\n    IMAGE_LIST_REQUEST,\n    IMAGE_LIST_SUCCESS,\n    INIT_REQUEST,\n    ImageListRequest,\n    LOGIN_FAILURE,\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGOUT_FAILURE,\n    LOGOUT_REQUEST,\n    LOGOUT_SUCCESS,\n    LoginRequest,\n    MESSAGE_DISPLAY,\n    MESSAGE_HIDE,\n    MessageDisplay,\n    SIGNUP_FAILURE,\n    SIGNUP_REQUEST,\n    SIGNUP_SUCCESS,\n    SignUpRequest,\n    cardSetChangeImageBase64,\n    gameSelectRequest,\n    messageDisplay,\n    CARDSET_CHANGE_FIELD_PAN,\n    CARDSET_CHANGE_FIELD_ZOOM,\n    CARDSETS_SELECT_SUCCESS,\n    CARDSET_CHANGE_FIELD_POSITION,\n    CardSetSelectSuccessData,\n    CardSetSelectSuccessDataV2,\n    CardSetSelectSuccessDataV3,\n    CARDSET_UNDO,\n    CARDSET_REDO,\n    CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD,\n} from './actions';\nimport { CardSetType, CardSetsCollection, GameType, GamesCollection, FieldInfoByCardCollection } from './types';\nimport { State } from './reducers';\nimport {\n    deleteAccessToken,\n    deleteRefreshToken,\n    deleteRequest,\n    getRequest,\n    getTokens,\n    postRequest,\n    postRequestFormDataCancelable,\n    putRequest,\n    refreshToken,\n    registerUser,\n} from './requests';\nimport { generatePdfUsingWorker, generatePngUsingWorker } from './workerController';\nimport {\n    getTokenFromStorage,\n    getRefreshTokenFromStorage,\n    saveAccessToken,\n    saveTokens,\n    cleanTokens,\n    saveUsername,\n    getUsernameFromStorage,\n} from './storage';\nimport { loadFontsUsedInPlaceholders } from './fontLoader';\nimport { reportError, UserError } from './utils';\n\n// Messages\nexport function* putError(e: Error): SagaIterator {\n    yield put(messageDisplay('error', e.message));\n    yield call(reportError, e);\n}\n\nexport function* putInfo(message: string): SagaIterator {\n    yield put(messageDisplay('info', message));\n}\n\nexport function* putProgress(text: string): SagaIterator {\n    const message = messageDisplay('progress', text, text);\n    yield put(message);\n    return message.message.id;\n}\n\nexport function* hideProgress(messageId: string): SagaIterator {\n    yield put({ type: MESSAGE_HIDE, messageId });\n}\n\nexport function* handleMessageDisplay(action: MessageDisplay): SagaIterator {\n    if (action.message.type === 'progress') return;\n\n    yield call(delay, 5000);\n    yield put({ type: MESSAGE_HIDE, messageId: action.message.id });\n}\n\n// Login & Signup\n// Token handling\n\nexport function validateToken(token: string): boolean {\n    try {\n        const decoded = jwtDecode<{ exp: number }>(token);\n        const valid = decoded.exp - new Date().getTime() / 1000 > 5;\n        return valid;\n    } catch (e) {\n        return false;\n    }\n}\n\nexport function* getToken(withErrorIfMissing: boolean, getFreshToken = false): SagaIterator {\n    const token = yield call(getTokenFromStorage);\n    if (token && !getFreshToken) {\n        const tokenValid = yield call(validateToken, token);\n        if (tokenValid) return token;\n    }\n\n    const refreshTokenValue = yield call(getRefreshTokenFromStorage);\n    if (!refreshTokenValue) {\n        yield put({ type: LOGOUT_REQUEST });\n        if (withErrorIfMissing) {\n            throw new UserError('User not logged in.');\n        }\n        return null;\n    }\n\n    const refreshTokenValid = yield call(validateToken, refreshTokenValue);\n    if (!refreshTokenValid) {\n        yield put({ type: LOGOUT_REQUEST });\n        if (withErrorIfMissing) {\n            throw new UserError('User not logged in.');\n        }\n        return null;\n    }\n\n    const newToken = yield call(refreshToken, refreshTokenValue);\n    yield call(saveAccessToken, newToken);\n    return newToken;\n}\n\n// Login\n\nexport function* handleLoginRequest(action: LoginRequest): SagaIterator {\n    try {\n        const data = yield call(getTokens, action.creds);\n        yield call(saveTokens, data);\n        yield call(saveUsername, action.creds.username);\n        yield put({ type: LOGIN_SUCCESS, username: action.creds.username });\n    } catch (e) {\n        yield put({ type: LOGIN_FAILURE });\n        yield call(putError, e);\n    }\n}\n\nexport function* handleLoginSuccess(): SagaIterator {\n    yield put({ type: GAME_LIST_REQUEST });\n}\n\n// Logout\n\nexport function* logoutToken(): SagaIterator {\n    const token = yield call(getTokenFromStorage);\n    if (token) {\n        const tokenValid = yield call(validateToken, token);\n        if (tokenValid) {\n            yield call(deleteAccessToken, token);\n        }\n    }\n}\n\nexport function* logoutRefreshToken(): SagaIterator {\n    const refreshTokenValue = yield call(getRefreshTokenFromStorage);\n    if (refreshTokenValue) {\n        const refreshTokenValid = yield call(validateToken, refreshTokenValue);\n        if (refreshTokenValid) {\n            yield call(deleteRefreshToken, refreshTokenValue);\n        }\n    }\n}\n\nexport function* handleLogoutRequest(): SagaIterator {\n    try {\n        yield call(logoutToken);\n        yield call(logoutRefreshToken);\n        yield call(cleanTokens);\n\n        yield put({ type: CARDSET_LIST_RESET });\n        yield put({ type: GAME_LIST_RESET });\n        yield put({ type: LOGOUT_SUCCESS });\n    } catch (e) {\n        yield put({ type: LOGOUT_FAILURE });\n        yield call(putError, e);\n    }\n}\n\n// Sign-up\n\nexport function* handleSignupRequest(action: SignUpRequest): SagaIterator {\n    try {\n        const data = yield call(registerUser, action.creds);\n        yield call(saveTokens, data);\n        yield call(saveUsername, action.creds.username);\n        yield put({ type: SIGNUP_SUCCESS });\n        yield put({ type: LOGIN_SUCCESS, username: action.creds.username });\n    } catch (e) {\n        yield put({ type: SIGNUP_FAILURE });\n        yield call(putError, e);\n    }\n}\n\n// Init\nexport function* handleInitRequest(): SagaIterator {\n    try {\n        let token = yield call(getToken, false);\n        if (token) {\n            const username = yield call(getUsernameFromStorage);\n            yield put({ type: LOGIN_SUCCESS, username });\n        }\n    } catch (e) {}\n}\n\n// Authorized Requests\nexport function* authorizedGetRequest(url: string): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(getRequest, url, token);\n}\n\nexport function* authorizedPostRequest(url: string, data: object): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(postRequest, url, token, data);\n}\n\nexport function* authorizedDeleteRequest(url: string): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(deleteRequest, url, token);\n}\n\nexport function* authorizedPostFormDataRequest(\n    url: string,\n    data: FormData,\n    progressCallback: (event: ProgressEvent) => void,\n    cancelToken: CancelToken,\n    cancelCallback: () => void,\n): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(postRequestFormDataCancelable, url, token, data, progressCallback, cancelToken, cancelCallback);\n}\n\nexport function* authorizedPutRequest(url: string, data: object): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(putRequest, url, token, data);\n}\n\n// Game\nexport function* handleGameCreateRequest(action: GameCreateRequest): SagaIterator {\n    try {\n        yield call(authorizedPostRequest, '/api/games', { name: action.gamename });\n        yield put({\n            type: GAME_CREATE_SUCCESS,\n        });\n        yield put({ type: GAME_LIST_REQUEST });\n    } catch (e) {\n        yield call(putError, e);\n    }\n}\n\nexport function* handleGameDeleteRequest(action: GameDeleteRequest): SagaIterator {\n    try {\n        yield call(authorizedDeleteRequest, '/api/games/' + action.gameId);\n        yield put({ type: GAME_LIST_REQUEST });\n    } catch (e) {\n        yield call(putError, e);\n    }\n}\n\nexport function* handleGameRenameRequest(action: GameRenameRequest): SagaIterator {\n    try {\n        yield call(delay, 500);\n        yield call(authorizedPutRequest, '/api/games/' + action.gameId, { name: action.newName });\n    } catch (e) {\n        yield call(putError, e);\n    }\n}\n\nexport function* handleGameListRequest(): SagaIterator {\n    try {\n        const resp = yield call(authorizedGetRequest, '/api/games');\n        const allIds = resp.data.games.map((g: GameType) => g.id);\n        const byId = resp.data.games.reduce((obj: GamesCollection, g: GameType) => {\n            obj[g.id] = g;\n            return obj;\n        }, {});\n        yield put({\n            type: GAME_LIST_SUCCESS,\n            allIds,\n            byId,\n        });\n    } catch (e) {\n        yield put({ type: GAME_LIST_FAILURE });\n        yield call(putError, e);\n    }\n}\n\nexport function* handleGameSelectRequest(action: GameSelectRequest): SagaIterator {\n    try {\n        const resp = yield call(authorizedGetRequest, '/api/games/' + action.id);\n        yield put({\n            type: GAME_SELECT_SUCCESS,\n            id: action.id,\n        });\n\n        if (action.updateCardSets) {\n            const allIds = resp.data.cardsets.map((g: CardSetType) => g.id);\n            const byId = resp.data.cardsets.reduce((obj: CardSetsCollection, g: CardSetType) => {\n                obj[g.id] = g;\n                return obj;\n            }, {});\n            yield put({\n                type: CARDSET_LIST_SUCCESS,\n                allIds,\n                byId,\n            });\n        }\n    } catch (e) {\n        yield put({ type: GAME_SELECT_FAILURE });\n        yield call(putError, e);\n    }\n}\n\nexport function* handleGameCreatePdfRequest(action: GameCreatePdfRequest): SagaIterator {\n    let progressId = null;\n    try {\n        progressId = yield call(putProgress, 'Generating PDF');\n\n        const token = yield call(getToken, true, true);\n\n        yield call(\n            generatePdfUsingWorker,\n            token,\n            action.collectionType,\n            action.collectionId,\n            action.pageWidth,\n            action.pageHeight,\n            action.topBottomMargin,\n            action.leftRightMargin,\n            action.verticalSpace,\n            action.horizontalSpace,\n            action.includeBleedingArea,\n            action.cutMarksForScissors,\n            action.cutMarksForGuillotine,\n            action.cutMarksInMarginArea,\n            action.cutMarksOnFrontSideOnly,\n        );\n        yield call(hideProgress, progressId);\n        yield call(putInfo, 'PDF generated.');\n        yield put({\n            type: GAME_CREATE_PDF_SUCCESS,\n        });\n    } catch (e) {\n        yield put({ type: GAME_CREATE_PDF_FAILURE });\n        if (progressId !== null) yield call(hideProgress, progressId);\n        yield call(putError, e);\n    }\n}\n\nexport function* handleGameCreatePngRequest(action: GameCreatePngRequest): SagaIterator {\n    let progressId = null;\n    try {\n        progressId = yield call(putProgress, 'Generating PNG');\n\n        const token = yield call(getToken, true, true);\n\n        yield call(generatePngUsingWorker, token, action.collectionType, action.collectionId, action.dpi);\n        yield call(hideProgress, progressId);\n        yield call(putInfo, 'PNG generated.');\n        yield put({\n            type: GAME_CREATE_PNG_SUCCESS,\n        });\n    } catch (e) {\n        yield put({ type: GAME_CREATE_PNG_FAILURE });\n        if (progressId !== null) yield call(hideProgress, progressId);\n        yield call(putError, e);\n    }\n}\n\n// Card Set\n\nexport function* handleCardSetCreateRequest(action: CardSetCreateRequest): SagaIterator {\n    try {\n        yield call(authorizedPostRequest, '/api/cardsets', {\n            name: action.cardsetname,\n            gameId: action.gameId,\n            data: JSON.stringify({ width: action.width, height: action.height, version: CURRENT_CARDSET_VERSION }),\n        });\n        yield put({\n            type: CARDSET_CREATE_SUCCESS,\n        });\n        yield put(gameSelectRequest(action.gameId, true));\n    } catch (e) {\n        yield put({ type: CARDSET_CREATE_FAILURE });\n        yield call(putError, e);\n    }\n}\n\nexport function* handleCardSetDeleteRequest(action: CardSetDeleteRequest): SagaIterator {\n    try {\n        yield call(authorizedDeleteRequest, '/api/cardsets/' + action.cardSetId);\n        yield put({ type: GAME_LIST_REQUEST });\n\n        const state = yield select();\n        yield put(gameSelectRequest(state.games.active, true));\n    } catch (e) {\n        yield call(putError, e);\n    }\n}\n\nexport function* handleCardSetRenameRequest(action: CardSetRenameRequest): SagaIterator {\n    try {\n        yield call(delay, 500);\n        yield call(authorizedPutRequest, '/api/cardsets/' + action.cardSetId, { name: action.newName });\n    } catch (e) {\n        yield call(putError, e);\n    }\n}\n\nfunction loadImageInfo(url: string): Promise<{ width: number; height: number }> {\n    return new Promise((resolve, reject) => {\n        try {\n            let img = new Image();\n\n            img.addEventListener('load', function() {\n                resolve({\n                    width: this.naturalWidth,\n                    height: this.naturalHeight,\n                });\n            });\n            img.src = url;\n        } catch (e) {\n            reject(e);\n        }\n    });\n}\n\nexport async function processData(data: CardSetSelectSuccessData): Promise<CardSetSelectSuccessDataV3> {\n    let processedData = data;\n\n    if (!('version' in processedData)) {\n        if (!('placeholdersAllIds' in processedData) && 'placeholders' in processedData) {\n            (processedData as CardSetSelectSuccessDataV2).placeholdersAllIds = Object.keys(\n                (processedData as CardSetSelectSuccessDataV2).placeholders,\n            );\n        }\n\n        (processedData as CardSetSelectSuccessDataV2).version = 2;\n        for (const plId in (processedData as CardSetSelectSuccessDataV2).placeholders) {\n            const placeholder = (processedData as CardSetSelectSuccessDataV2).placeholders[plId];\n            placeholder.x += BLEED_WIDTH;\n            placeholder.y += BLEED_WIDTH;\n        }\n    }\n\n    if (processedData.version === 2) {\n        let fieldsAllIds = processedData.placeholdersAllIds;\n        let fields: FieldInfoByCardCollection = {};\n\n        for (const cardId of processedData.cardsAllIds) {\n            fields[cardId] = {};\n\n            for (const fieldId of fieldsAllIds) {\n                let placeholder = processedData.placeholders[fieldId];\n                if (placeholder.type === 'image') {\n                    if (cardId in processedData.images && fieldId in processedData.images[cardId]) {\n                        let imageInfo = processedData.images[cardId][fieldId];\n                        fields[cardId][fieldId] = {\n                            type: 'image',\n                            ...placeholder,\n                            url: imageInfo && imageInfo.url,\n                            global: imageInfo && imageInfo.global,\n                            base64: imageInfo && imageInfo.base64,\n                            color: imageInfo && imageInfo.color,\n                            imageWidth: imageInfo && imageInfo.width,\n                            imageHeight: imageInfo && imageInfo.height,\n                        };\n                    } else {\n                        fields[cardId][fieldId] = {\n                            type: 'image',\n                            ...placeholder,\n                        };\n                    }\n                } else if (placeholder.type === 'text') {\n                    if (cardId in processedData.texts && fieldId in processedData.texts[cardId]) {\n                        fields[cardId][fieldId] = {\n                            type: 'text',\n                            ...placeholder,\n                            ...processedData.texts[cardId][fieldId],\n                        };\n                    } else {\n                        fields[cardId][fieldId] = {\n                            type: 'text',\n                            ...placeholder,\n                            value: '',\n                        };\n                    }\n                }\n            }\n        }\n\n        processedData = {\n            version: 3,\n            width: processedData.width,\n            height: processedData.height,\n            isTwoSided: processedData.isTwoSided,\n            snappingDistance: processedData.snappingDistance,\n            cardsAllIds: processedData.cardsAllIds,\n            cardsById: processedData.cardsById,\n            fields,\n            fieldsAllIds,\n            zoom: processedData.zoom,\n        };\n    }\n\n    // We must load image data on each new load because user can upload new images\n    // that have different dimensions.\n    for (const cardId in processedData.fields) {\n        for (const fieldId in processedData.fields[cardId]) {\n            const fieldInfo = processedData.fields[cardId][fieldId];\n            if (fieldInfo.type === 'image' && fieldInfo.url) {\n                let info = await loadImageInfo(fieldInfo.url);\n                if (info.width !== fieldInfo.imageWidth || info.height !== fieldInfo.imageHeight) {\n                    fieldInfo.imageWidth = info.width;\n                    fieldInfo.imageHeight = info.height;\n                    fieldInfo.cx = 0;\n                    fieldInfo.cy = 0;\n                    fieldInfo.zoom = 1;\n                }\n            }\n        }\n    }\n\n    return processedData;\n}\n\nexport function* handleCardSetSelectRequest(action: CardSetSelectRequest): SagaIterator {\n    try {\n        const resp = yield call(authorizedGetRequest, '/api/cardsets/' + action.id);\n        let parsedData = JSON.parse(resp.data.data);\n        let processedData: CardSetSelectSuccessDataV3 = yield call(processData, parsedData);\n\n        yield call(loadFontsUsedInPlaceholders, processedData);\n        yield put({\n            type: CARDSETS_SELECT_SUCCESS,\n            id: resp.data.id,\n            name: resp.data.name,\n        });\n        yield put({\n            type: CARDSET_SELECT_SUCCESS,\n            data: processedData,\n        });\n        yield put(gameSelectRequest(resp.data.gameId, false));\n        yield put(ActionCreators.clearHistory());\n    } catch (e) {\n        yield put({ type: CARDSET_SELECT_FAILURE });\n        yield call(putError, e);\n    }\n}\n\nexport function* handleCardSetUploadImage(action: CardSetUploadImage): SagaIterator {\n    let progressId = null;\n    try {\n        progressId = yield call(putProgress, `Uploading ${action.file.name}`);\n        const formData = new FormData();\n        formData.set('gameId', action.gameId);\n        formData.append('image', action.file, action.file.name);\n\n        const data = yield call(\n            authorizedPostFormDataRequest,\n            '/api/images',\n            formData,\n            (event: ProgressEvent) => action.progress(event.lengthComputable, event.loaded, event.total),\n            action.cancelToken,\n            () => {\n                action.abort();\n            },\n        );\n        if (data !== undefined) {\n            // not cancelled\n            action.load(data.imageId.toString());\n            yield put({ type: CARDSET_UPLOAD_IMAGE_SUCCESS });\n            yield call(putInfo, `${action.file.name} uploaded`);\n        }\n        yield call(hideProgress, progressId);\n    } catch (e) {\n        yield put({ type: CARDSET_UPLOAD_IMAGE_FAILURE });\n        if (progressId !== null) yield call(hideProgress, progressId);\n        yield call(putError, e);\n        action.error(e.message);\n    }\n}\n\nexport function* handleCardSetDeleteImage(action: CardSetDeleteImage): SagaIterator {\n    try {\n        yield call(authorizedDeleteRequest, '/api/images/' + action.imageId);\n        action.load();\n    } catch (e) {\n        action.error(e.message);\n    }\n}\n\nfunction walkChildren(node: XmlNode, color: string) {\n    if (node.type === 'element') {\n        for (let child of node.children) {\n            if (child.type === 'element')\n                if (child.name === 'path') {\n                    child.attr['fill'] = color;\n                }\n            walkChildren(child, color);\n        }\n    }\n}\n\nfunction adjustSvg(data: string, preserveAspectRatio: boolean, color?: string): string {\n    const doc = new XmlDocument(data);\n    if (!preserveAspectRatio) {\n        doc.attr['preserveAspectRatio'] = 'none';\n    }\n\n    if (color) {\n        walkChildren(doc, color);\n    }\n\n    return btoa(doc.toString({ compressed: true }));\n}\n\nexport function* handleCardSetFitChange(action: CardSetChangeFitForActiveField): SagaIterator {\n    try {\n        yield call(delay, 100);\n        const state: State = yield select();\n\n        if (state.cardset.present.activeFieldId === undefined) {\n            return;\n        }\n\n        for (const cardId in state.cardset.present.cardsById) {\n            const fieldInfo = state.cardset.present.fields[cardId][state.cardset.present.activeFieldId];\n            if (fieldInfo.type === 'image' && fieldInfo.url) {\n                const imageResp = yield call(authorizedGetRequest, fieldInfo.url);\n                if (imageResp.headers['content-type'] === 'image/svg+xml') {\n                    if (action.fit === 'stretch') {\n                        const svg = adjustSvg(imageResp.data, false, fieldInfo.color);\n                        yield put(cardSetChangeImageBase64(cardId, state.cardset.present.activeFieldId, svg));\n                    } else if (fieldInfo.color) {\n                        const svg = adjustSvg(imageResp.data, true, fieldInfo.color);\n                        yield put(cardSetChangeImageBase64(cardId, state.cardset.present.activeFieldId, svg));\n                    } else {\n                        yield put(cardSetChangeImageBase64(cardId, state.cardset.present.activeFieldId, undefined));\n                    }\n                }\n            }\n        }\n    } catch (e) {\n        yield call(putError, e);\n    }\n}\n\nexport function* handleCardSetChangeImage(action: CardSetChangeImage): SagaIterator {\n    try {\n        yield call(delay, 100);\n        const state: State = yield select();\n\n        let cardsToFix =\n            state.cardset.present.applyToAllCards || action.cardId === undefined\n                ? state.cardset.present.cardsAllIds\n                : [action.cardId];\n\n        for (const cardId of cardsToFix) {\n            const cardFields = state.cardset.present.fields[cardId];\n            const imageInfo = cardFields[action.fieldId];\n            if (imageInfo.type === 'image' && imageInfo.url) {\n                const imageResp = yield call(authorizedGetRequest, imageInfo.url);\n\n                if (imageResp.headers['content-type'] === 'image/svg+xml') {\n                    const name = imageInfo.name || imageInfo.id;\n\n                    for (const fieldId in cardFields) {\n                        const fieldInfo = cardFields[fieldId];\n\n                        if ((fieldInfo.name === name || fieldInfo.id === name) && fieldInfo.type === 'image') {\n                            if (fieldInfo.fit === 'stretch') {\n                                const svg = adjustSvg(imageResp.data, false, imageInfo.color);\n                                yield put(cardSetChangeImageBase64(cardId, fieldId, svg));\n                            } else if (imageInfo.color) {\n                                const svg = adjustSvg(imageResp.data, true, imageInfo.color);\n                                yield put(cardSetChangeImageBase64(cardId, fieldId, svg));\n                            } else {\n                                yield put(cardSetChangeImageBase64(cardId, fieldId, undefined));\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    } catch (e) {\n        yield call(putError, e);\n    }\n}\n\nfunction closeHandler(e: Event) {\n    e.preventDefault();\n    e.returnValue = true;\n}\n\nfunction preventWindowClose() {\n    window.addEventListener('beforeunload', closeHandler);\n}\n\nfunction allowWindowClose() {\n    window.removeEventListener('beforeunload', closeHandler);\n}\n\nexport function* handleCardSetChange(): SagaIterator {\n    let progressId = null;\n\n    try {\n        preventWindowClose();\n        progressId = yield call(putProgress, 'Saving Card Set');\n\n        yield call(delay, 1000);\n        const state: State = yield select();\n\n        const cardsetId = state.cardsets.active;\n        if (cardsetId === null) throw Error('Save failed.');\n        const data = {\n            width: state.cardset.present.width,\n            height: state.cardset.present.height,\n            isTwoSided: state.cardset.present.isTwoSided,\n            snappingDistance: state.cardset.present.snappingDistance,\n            version: state.cardset.present.version,\n            cardsAllIds: state.cardset.present.cardsAllIds,\n            cardsById: state.cardset.present.cardsById,\n            fieldsAllIds: state.cardset.present.fieldsAllIds,\n            fields: state.cardset.present.fields,\n            zoom: state.cardset.present.zoom,\n        };\n\n        yield call(authorizedPutRequest, '/api/cardsets/' + cardsetId, {\n            name: state.cardsets.byId[cardsetId].name,\n            data: JSON.stringify(data),\n        });\n        yield call(hideProgress, progressId);\n        yield call(putInfo, 'Card Set saved');\n        allowWindowClose();\n    } catch (e) {\n        if (progressId !== null) yield call(hideProgress, progressId);\n        yield call(putError, e);\n        allowWindowClose();\n    }\n}\n\n// Images\nexport function* handleImageListRequest(action: ImageListRequest): SagaIterator {\n    try {\n        yield call(delay, 200);\n        const state = yield select();\n\n        const filter = encodeURIComponent(action.filter);\n        const location = encodeURIComponent(action.location);\n        const game = encodeURIComponent(state.games.active);\n        const resp = yield call(authorizedGetRequest, `/api/images?name=${filter}&location=${location}&game=${game}`);\n        const images = resp.data.images;\n        yield put({\n            type: IMAGE_LIST_SUCCESS,\n            images,\n        });\n    } catch (e) {\n        yield put({ type: IMAGE_LIST_FAILURE });\n        yield call(putError, e);\n    }\n}\n\n// All\nexport function* rootSaga(): SagaIterator {\n    yield all([\n        takeEvery(MESSAGE_DISPLAY, handleMessageDisplay),\n        takeLatest(LOGIN_REQUEST, handleLoginRequest),\n        takeLatest(LOGIN_SUCCESS, handleLoginSuccess),\n        takeLatest(LOGOUT_REQUEST, handleLogoutRequest),\n        takeLatest(SIGNUP_REQUEST, handleSignupRequest),\n        takeLatest(GAME_CREATE_REQUEST, handleGameCreateRequest),\n        takeLatest(GAME_DELETE_REQUEST, handleGameDeleteRequest),\n        takeLatest(GAME_RENAME_REQUEST, handleGameRenameRequest),\n        takeLatest(GAME_LIST_REQUEST, handleGameListRequest),\n        takeLatest(GAME_SELECT_REQUEST, handleGameSelectRequest),\n        takeLatest(GAME_CREATE_PDF_REQUEST, handleGameCreatePdfRequest),\n        takeLatest(GAME_CREATE_PNG_REQUEST, handleGameCreatePngRequest),\n        takeLatest(CARDSET_CREATE_REQUEST, handleCardSetCreateRequest),\n        takeLatest(CARDSET_DELETE_REQUEST, handleCardSetDeleteRequest),\n        takeLatest(CARDSET_RENAME_REQUEST, handleCardSetRenameRequest),\n        takeLatest(CARDSET_SELECT_REQUEST, handleCardSetSelectRequest),\n        takeEvery(CARDSET_UPLOAD_IMAGE, handleCardSetUploadImage),\n        takeEvery(CARDSET_DELETE_IMAGE, handleCardSetDeleteImage),\n        takeEvery(CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD, handleCardSetFitChange),\n        takeEvery(CARDSET_CHANGE_IMAGE, handleCardSetChangeImage),\n\n        takeLatest(CARDSET_CREATE_CARD, handleCardSetChange),\n        takeLatest(CARDSET_CLONE_CARD, handleCardSetChange),\n        takeLatest(CARDSET_REMOVE_CARD, handleCardSetChange),\n        takeLatest(CARDSET_UPDATE_CARD_COUNT, handleCardSetChange),\n        takeLatest(CARDSET_ADD_TEXT_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_ADD_IMAGE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_FIELD_NAME, handleCardSetChange),\n        takeLatest(CARDSET_REMOVE_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_RAISE_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_RAISE_ACTIVE_FIELD_TO_TOP, handleCardSetChange),\n        takeLatest(CARDSET_LOWER_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM, handleCardSetChange),\n        takeLatest(CARDSET_LOCK_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_UNLOCK_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_WIDTH, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_HEIGHT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_IS_TWO_SIDED, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_SNAPPING_DISTANCE, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_FIELD_POSITION, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_FIELD_PAN, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_FIELD_ZOOM, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_FIELD_SIZE, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_FIELD_ANGLE, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_TEXT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_IMAGE, handleCardSetChange),\n        takeLatest(CARDSET_SET_ZOOM, handleCardSetChange),\n        takeLatest(CARDSET_IMPORT_DATA, handleCardSetChange),\n        takeLatest(CARDSET_UNDO, handleCardSetChange),\n        takeLatest(CARDSET_REDO, handleCardSetChange),\n\n        takeLatest(IMAGE_LIST_REQUEST, handleImageListRequest),\n\n        takeLatest(INIT_REQUEST, handleInitRequest),\n    ]);\n}\n","import { combineReducers } from 'redux';\nimport shortid from 'shortid';\nimport undoable from 'redux-undo';\n\nimport {\n    CARDSET_ADD_IMAGE_FIELD,\n    CARDSET_ADD_TEXT_FIELD,\n    CARDSET_CHANGE_ACTIVE_FIELD_NAME,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT,\n    CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD,\n    CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD,\n    CARDSET_CHANGE_HEIGHT,\n    CARDSET_CHANGE_IMAGE,\n    CARDSET_CHANGE_IMAGE_BASE64,\n    CARDSET_CHANGE_IS_TWO_SIDED,\n    CARDSET_CHANGE_FIELD_ANGLE,\n    CARDSET_CHANGE_FIELD_SIZE,\n    CARDSET_CHANGE_SNAPPING_DISTANCE,\n    CARDSET_CHANGE_TEXT,\n    CARDSET_CHANGE_WIDTH,\n    CARDSET_CLONE_CARD,\n    CARDSET_CREATE_CARD,\n    CARDSET_IMPORT_DATA,\n    CARDSET_LIST_RESET,\n    CARDSET_LIST_SUCCESS,\n    CARDSET_LOCK_ACTIVE_FIELD,\n    CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM,\n    CARDSET_RAISE_ACTIVE_FIELD_TO_TOP,\n    CARDSET_REMOVE_ACTIVE_FIELD,\n    CARDSET_REMOVE_CARD,\n    CARDSET_RENAME_REQUEST,\n    CARDSET_SELECT_FAILURE,\n    CARDSET_SELECT_REQUEST,\n    CARDSET_SELECT_SUCCESS,\n    CARDSET_SET_ACTIVE_CARD_AND_FIELD,\n    CARDSET_SET_SIDEBAR_STATE,\n    CARDSET_SET_ZOOM,\n    CARDSET_UNLOCK_ACTIVE_FIELD,\n    CARDSET_UPDATE_CARD_COUNT,\n    CardSetAction,\n    GAME_CREATE_PDF_FAILURE,\n    GAME_CREATE_PDF_REQUEST,\n    GAME_CREATE_PDF_SUCCESS,\n    GAME_CREATE_PNG_FAILURE,\n    GAME_CREATE_PNG_REQUEST,\n    GAME_CREATE_PNG_SUCCESS,\n    GAME_LIST_RESET,\n    GAME_LIST_SUCCESS,\n    GAME_RENAME_REQUEST,\n    GAME_SELECT_FAILURE,\n    GAME_SELECT_REQUEST,\n    GAME_SELECT_SUCCESS,\n    GameAction,\n    IMAGE_LIST_REQUEST,\n    IMAGE_LIST_SUCCESS,\n    ImageListAction,\n    LOGIN_FAILURE,\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGOUT_SUCCESS,\n    LoginAction,\n    MESSAGE_DISPLAY,\n    MESSAGE_HIDE,\n    MessageAction,\n    SIGNUP_FAILURE,\n    SIGNUP_REQUEST,\n    SIGNUP_SUCCESS,\n    SidebarState,\n    SignUpAction,\n    CARDSET_CHANGE_FIELD_ZOOM,\n    CARDSET_CHANGE_FIELD_PAN,\n    CardSetsAction,\n    CARDSETS_SELECT_SUCCESS,\n    CARDSET_CHANGE_FIELD_POSITION,\n    CARDSET_UNDO,\n    CARDSET_REDO,\n    Action,\n    CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD,\n    CARDSET_CHANGE_APPLY_TO_ALLCARDS,\n    CARDSET_RAISE_ACTIVE_FIELD,\n    CARDSET_LOWER_ACTIVE_FIELD,\n} from './actions';\nimport {\n    CURRENT_CARDSET_VERSION,\n    DEFAULT_FONT,\n    DEFAULT_FONT_SIZE,\n    DEFAULT_FONT_VARIANT,\n    DEFAULT_LINE_HEIGHT,\n    BLEED_WIDTH,\n} from './constants';\nimport {\n    CardSetsCollection,\n    CardsCollection,\n    GamesCollection,\n    IdsArray,\n    ImageArray,\n    MessageType,\n    FieldInfoByCardCollection,\n    FieldInfoCollection,\n} from './types';\nimport { rotateVec } from './utils';\n\nexport const ACTIVITY_SELECTING = 0x1;\nexport const ACTIVITY_CREATING_PDF = 0x2;\nexport const ACTIVITY_CREATING_PNG = 0x4;\n\nexport interface MessageState {\n    messages: MessageType[];\n}\n\nexport const DefaultMessageState: MessageState = {\n    messages: [],\n};\n\nexport interface AuthState {\n    isAuthenticated?: boolean;\n    user: string;\n}\n\nexport const DefaultAuthState: AuthState = {\n    isAuthenticated: undefined,\n    user: '', // XXX: user can manipulate this information by changing local storage. Do not trust this info.\n};\n\nexport interface SignUpState {\n    signingup: boolean;\n}\n\nexport const DefaultSignUpState: SignUpState = {\n    signingup: false,\n};\n\nexport interface GameState {\n    byId: GamesCollection;\n    allIds: IdsArray;\n    activity: number;\n    active: string | null;\n}\n\nexport const DefaultGameState: GameState = {\n    byId: {},\n    allIds: [],\n    activity: 0,\n    active: null,\n};\n\nexport interface TextSettings {\n    align: string;\n    color: string;\n    fontFamily: string;\n    fontVariant: string;\n    fontSize: number;\n    lineHeight?: number;\n}\n\nexport interface CardSetsState {\n    byId: CardSetsCollection;\n    allIds: IdsArray;\n    active: string | null;\n}\n\nexport const DefaultCardSetsState: CardSetsState = {\n    byId: {},\n    allIds: [],\n    active: null,\n};\n\nexport interface CardSetState {\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    snappingDistance: number;\n    version: number;\n    activity: number;\n    cardsAllIds: IdsArray;\n    cardsById: CardsCollection;\n    activeCardId?: string;\n    isBackActive: boolean;\n    activeFieldId?: string;\n    fieldsAllIds: IdsArray;\n    fields: FieldInfoByCardCollection;\n    textSettings: TextSettings;\n    activeSidebar: SidebarState | null;\n    zoom: number;\n    applyToAllCards: boolean;\n}\n\nexport const DefaultCardSetState: CardSetState = {\n    width: 63.5,\n    height: 88.9,\n    isTwoSided: false,\n    snappingDistance: 1,\n    version: CURRENT_CARDSET_VERSION,\n    activity: 0,\n    cardsById: {},\n    cardsAllIds: [],\n    activeCardId: undefined,\n    isBackActive: false,\n    activeFieldId: undefined,\n    fieldsAllIds: [],\n    fields: {},\n    textSettings: {\n        align: 'left',\n        color: '#000000',\n        fontFamily: DEFAULT_FONT,\n        fontVariant: DEFAULT_FONT_VARIANT,\n        fontSize: DEFAULT_FONT_SIZE,\n        lineHeight: DEFAULT_LINE_HEIGHT,\n    },\n    activeSidebar: null,\n    zoom: 1,\n    applyToAllCards: false,\n};\n\nexport interface ImageState {\n    activity: number;\n    filter: string;\n    images: ImageArray;\n}\n\nexport const DefaultImageState: ImageState = {\n    activity: 0,\n    filter: '',\n    images: [],\n};\n\nexport interface State {\n    message: MessageState;\n    auth: AuthState;\n    signup: SignUpState;\n    games: GameState;\n    cardsets: CardSetsState;\n    cardset: {\n        present: CardSetState;\n    };\n    images: ImageState;\n}\n\nexport const DefaultState: State = {\n    message: DefaultMessageState,\n    auth: DefaultAuthState,\n    signup: DefaultSignUpState,\n    games: DefaultGameState,\n    cardsets: DefaultCardSetsState,\n    cardset: {\n        present: DefaultCardSetState,\n    },\n    images: DefaultImageState,\n};\n\nexport function message(state: MessageState = DefaultMessageState, action: MessageAction): MessageState {\n    switch (action.type) {\n        case MESSAGE_DISPLAY:\n            const found = state.messages.find(m => m.id === action.message.id);\n            if (found) return state;\n\n            return {\n                ...state,\n                messages: state.messages.concat(action.message),\n            };\n        case MESSAGE_HIDE:\n            return Object.assign({}, state, {\n                messages: state.messages.filter(m => m.id !== action.messageId),\n            });\n        default:\n            return state;\n    }\n}\n\nexport function auth(state: AuthState = DefaultAuthState, action: LoginAction): AuthState {\n    switch (action.type) {\n        case LOGIN_REQUEST:\n            return Object.assign({}, state, {\n                isAuthenticated: undefined,\n                user: '',\n            });\n        case LOGIN_SUCCESS:\n            return Object.assign({}, state, {\n                isAuthenticated: true,\n                user: action.username,\n            });\n        case LOGIN_FAILURE:\n            return Object.assign({}, state, {\n                isAuthenticated: false,\n            });\n        case LOGOUT_SUCCESS:\n            return Object.assign({}, state, {\n                isAuthenticated: false,\n                user: '',\n            });\n        default:\n            return state;\n    }\n}\n\nexport function signup(state: SignUpState = DefaultSignUpState, action: SignUpAction): SignUpState {\n    switch (action.type) {\n        case SIGNUP_REQUEST:\n            return Object.assign({}, state, {\n                signingup: true,\n            });\n        case SIGNUP_SUCCESS:\n            return Object.assign({}, state, {\n                signingup: false,\n            });\n        case SIGNUP_FAILURE:\n            return Object.assign({}, state, {\n                signingup: false,\n            });\n        default:\n            return state;\n    }\n}\n\nexport function games(state: GameState = DefaultGameState, action: GameAction): GameState {\n    switch (action.type) {\n        case GAME_RENAME_REQUEST:\n            const game = state.byId[action.gameId];\n\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    [game.id]: {\n                        ...game,\n                        name: action.newName,\n                    },\n                },\n            };\n        case GAME_LIST_SUCCESS:\n            return Object.assign({}, state, {\n                byId: action.byId,\n                allIds: action.allIds,\n            });\n        case GAME_LIST_RESET:\n            return Object.assign({}, state, {\n                activity: 0,\n                byId: {},\n                allIds: [],\n            });\n        case GAME_SELECT_REQUEST:\n            return Object.assign({}, state, {\n                activity: ACTIVITY_SELECTING,\n            });\n        case GAME_SELECT_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_SELECTING,\n                active: action.id,\n            });\n        case GAME_SELECT_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_SELECTING,\n            });\n        case GAME_CREATE_PDF_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_CREATING_PDF,\n            });\n        case GAME_CREATE_PDF_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING_PDF,\n            });\n        case GAME_CREATE_PDF_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING_PDF,\n            });\n        case GAME_CREATE_PNG_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_CREATING_PNG,\n            });\n        case GAME_CREATE_PNG_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING_PNG,\n            });\n        case GAME_CREATE_PNG_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING_PNG,\n            });\n        default:\n            return state;\n    }\n}\n\nexport function cardsets(state: CardSetsState = DefaultCardSetsState, action: CardSetsAction): CardSetsState {\n    switch (action.type) {\n        case CARDSETS_SELECT_SUCCESS:\n            return {\n                ...state,\n                active: action.id,\n                byId: Object.assign({}, state.byId, {\n                    [action.id]: {\n                        id: action.id,\n                        name: action.name,\n                    },\n                }),\n            };\n        case CARDSET_RENAME_REQUEST:\n            const cardset = state.byId[action.cardSetId];\n\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    [cardset.id]: {\n                        ...cardset,\n                        name: action.newName,\n                    },\n                },\n            };\n        case CARDSET_LIST_SUCCESS:\n            return Object.assign({}, state, {\n                byId: action.byId,\n                allIds: action.allIds,\n            });\n        case CARDSET_LIST_RESET:\n            return Object.assign({}, state, {\n                byId: {},\n                allIds: [],\n            });\n        default:\n            return state;\n    }\n}\n\nfunction resizeFields(fields: FieldInfoByCardCollection, widthRatio: number, heightRatio: number) {\n    let newFields = { ...fields };\n    for (const cardId in newFields) {\n        let cardFields = { ...fields[cardId] };\n        for (const fieldId in cardFields) {\n            let fieldInfo = { ...cardFields[fieldId] };\n            fieldInfo.x = (fieldInfo.x - BLEED_WIDTH) * widthRatio + BLEED_WIDTH;\n            fieldInfo.y = (fieldInfo.y - BLEED_WIDTH) * heightRatio + BLEED_WIDTH;\n            fieldInfo.width *= widthRatio;\n            fieldInfo.height *= heightRatio;\n            if (fieldInfo.type === 'image') {\n                if (fieldInfo.cx) {\n                    fieldInfo.cx *= widthRatio;\n                }\n                if (fieldInfo.cy) {\n                    fieldInfo.cy *= heightRatio;\n                }\n            } else if (fieldInfo.type === 'text') {\n                fieldInfo.fontSize *= heightRatio;\n            }\n            cardFields[fieldId] = fieldInfo;\n        }\n        newFields[cardId] = cardFields;\n    }\n    return newFields;\n}\n\nexport function cardset(state: CardSetState = DefaultCardSetState, action: CardSetAction): CardSetState {\n    switch (action.type) {\n        case CARDSET_SELECT_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_SELECTING,\n            });\n        case CARDSET_SELECT_SUCCESS: {\n            return {\n                ...state,\n                activity: state.activity & ~ACTIVITY_SELECTING,\n                width: action.data.width || 63.5,\n                height: action.data.height || 88.9,\n                isTwoSided: action.data.isTwoSided || false,\n                snappingDistance: action.data.snappingDistance || 1,\n                version: action.data.version,\n                cardsAllIds: action.data.cardsAllIds || [],\n                cardsById: action.data.cardsById || {},\n                fields: action.data.fields || {},\n                fieldsAllIds: action.data.fieldsAllIds || [],\n                activeCardId: undefined,\n                activeFieldId: undefined,\n                isBackActive: false,\n                zoom: action.data.zoom || 1,\n            };\n        }\n        case CARDSET_SELECT_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_SELECTING,\n            });\n        case CARDSET_CREATE_CARD: {\n            let cardFields: FieldInfoCollection = {};\n            if (state.cardsAllIds.length > 0) {\n                cardFields = {\n                    ...state.fields[state.cardsAllIds[0]],\n                };\n\n                for (const fieldId of state.fieldsAllIds) {\n                    let fieldInfo = { ...cardFields[fieldId] };\n                    if (fieldInfo.type === 'text') {\n                        fieldInfo.value = '';\n                    } else if (fieldInfo.type === 'image') {\n                        delete fieldInfo.url;\n                        delete fieldInfo.base64;\n                    }\n                    cardFields[fieldId] = fieldInfo;\n                }\n            }\n            return {\n                ...state,\n                cardsById: {\n                    ...state.cardsById,\n                    [action.card.id]: action.card,\n                },\n                cardsAllIds: state.cardsAllIds ? state.cardsAllIds.concat(action.card.id) : [action.card.id],\n                fields: {\n                    ...state.fields,\n                    [action.card.id]: cardFields,\n                },\n            };\n        }\n        case CARDSET_CLONE_CARD: {\n            let newCard = { ...action.card, id: shortid.generate() };\n\n            const index = state.cardsAllIds.indexOf(action.card.id) + 1;\n            const cardsAllIds = [...state.cardsAllIds.slice(0, index), newCard.id, ...state.cardsAllIds.slice(index)];\n\n            return {\n                ...state,\n                cardsById: {\n                    ...state.cardsById,\n                    [newCard.id]: newCard,\n                },\n                cardsAllIds,\n                fields: {\n                    ...state.fields,\n                    [newCard.id]: {\n                        ...state.fields[action.card.id],\n                    },\n                },\n            };\n        }\n        case CARDSET_REMOVE_CARD: {\n            const cardId = action.card.id;\n            let cardsById = { ...state.cardsById };\n            delete cardsById[cardId];\n\n            let fields = { ...state.fields };\n            if (cardId in fields) {\n                delete fields[cardId];\n            }\n\n            let activeCardId = state.activeCardId === cardId ? undefined : state.activeCardId;\n\n            const cardsAllIds = state.cardsAllIds.filter(id => id !== cardId);\n\n            let fieldsAllIds = state.fieldsAllIds;\n            if (cardsAllIds.length === 0) {\n                fieldsAllIds = [];\n            }\n\n            return {\n                ...state,\n                cardsById,\n                cardsAllIds,\n                fieldsAllIds,\n                fields,\n                activeCardId,\n            };\n        }\n        case CARDSET_UPDATE_CARD_COUNT: {\n            const cardId = action.card.id;\n            let card = { ...state.cardsById[cardId] };\n            card.count = action.count;\n\n            return {\n                ...state,\n                cardsById: {\n                    ...state.cardsById,\n                    [cardId]: card,\n                },\n            };\n        }\n        case CARDSET_ADD_TEXT_FIELD: {\n            let textSettings = { ...state.textSettings };\n            const id = shortid.generate();\n            let fields: FieldInfoByCardCollection = {};\n            for (const cardId of state.cardsAllIds) {\n                fields[cardId] = {\n                    ...state.fields[cardId],\n                    [id]: {\n                        type: 'text',\n                        id,\n                        x: 5,\n                        y: 5,\n                        width: 20,\n                        height: 10,\n                        angle: 0,\n                        isOnBack: state.isBackActive,\n                        value: '',\n                        align: textSettings.align,\n                        color: textSettings.color,\n                        fontFamily: textSettings.fontFamily,\n                        fontVariant: textSettings.fontVariant,\n                        fontSize: textSettings.fontSize,\n                        lineHeight: textSettings.lineHeight || DEFAULT_LINE_HEIGHT,\n                    },\n                };\n            }\n\n            return {\n                ...state,\n                fieldsAllIds: [...state.fieldsAllIds, id],\n                fields,\n            };\n        }\n        case CARDSET_ADD_IMAGE_FIELD: {\n            const id = shortid.generate();\n            let fields: FieldInfoByCardCollection = {};\n            for (const cardId of state.cardsAllIds) {\n                fields[cardId] = {\n                    ...state.fields[cardId],\n                    [id]: {\n                        type: 'image',\n                        id,\n                        x: 5,\n                        y: 5,\n                        width: 20,\n                        height: 20,\n                        angle: 0,\n                        isOnBack: state.isBackActive,\n                        crop: true,\n                    },\n                };\n            }\n\n            return {\n                ...state,\n                fieldsAllIds: [...state.fieldsAllIds, id],\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_ACTIVE_FIELD_NAME: {\n            if (state.activeFieldId !== undefined) {\n                let fields: FieldInfoByCardCollection = {};\n                let id = state.activeFieldId;\n\n                for (const cardId of state.cardsAllIds) {\n                    fields[cardId] = {\n                        ...state.fields[cardId],\n                        [id]: {\n                            ...state.fields[cardId][id],\n                            name: action.name,\n                        },\n                    };\n                }\n\n                return {\n                    ...state,\n                    fields,\n                };\n            }\n\n            return state;\n        }\n\n        case CARDSET_REMOVE_ACTIVE_FIELD: {\n            const fieldId = state.activeFieldId;\n            if (fieldId !== undefined) {\n                let fieldsAllIds = [...state.fieldsAllIds];\n                let fieldIndex = fieldsAllIds.indexOf(fieldId);\n                if (fieldIndex !== -1) {\n                    fieldsAllIds.splice(fieldIndex, 1);\n                }\n\n                let fields = { ...state.fields };\n                for (const cardId in fields) {\n                    if (fieldId in fields[cardId] && !fields[cardId][fieldId].locked) {\n                        let cardFields = { ...fields[cardId] };\n                        delete cardFields[fieldId];\n                        fields[cardId] = cardFields;\n                    }\n                }\n\n                return {\n                    ...state,\n                    fieldsAllIds,\n                    fields,\n                    activeFieldId: undefined,\n                };\n            }\n            return state;\n        }\n        case CARDSET_RAISE_ACTIVE_FIELD: {\n            let fieldsAllIds = [...state.fieldsAllIds];\n\n            if (state.activeFieldId !== undefined) {\n                let index = fieldsAllIds.indexOf(state.activeFieldId);\n                if (index !== -1 && index < fieldsAllIds.length - 1) {\n                    fieldsAllIds.splice(index + 1, 0, fieldsAllIds.splice(index, 1)[0]);\n                }\n            }\n\n            return {\n                ...state,\n                fieldsAllIds,\n            };\n        }\n        case CARDSET_RAISE_ACTIVE_FIELD_TO_TOP: {\n            let fieldsAllIds = [...state.fieldsAllIds];\n\n            if (state.activeFieldId !== undefined) {\n                let index = fieldsAllIds.indexOf(state.activeFieldId);\n                if (index !== -1) {\n                    fieldsAllIds.push(fieldsAllIds.splice(index, 1)[0]);\n                }\n            }\n\n            return {\n                ...state,\n                fieldsAllIds,\n            };\n        }\n        case CARDSET_LOWER_ACTIVE_FIELD: {\n            let fieldsAllIds = [...state.fieldsAllIds];\n\n            if (state.activeFieldId !== undefined) {\n                let index = fieldsAllIds.indexOf(state.activeFieldId);\n                if (index > 0) {\n                    fieldsAllIds.splice(index - 1, 0, fieldsAllIds.splice(index, 1)[0]);\n                }\n            }\n\n            return {\n                ...state,\n                fieldsAllIds,\n            };\n        }\n        case CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM: {\n            let fieldsAllIds = [...state.fieldsAllIds];\n\n            if (state.activeFieldId !== undefined) {\n                let index = fieldsAllIds.indexOf(state.activeFieldId);\n                if (index !== -1) {\n                    fieldsAllIds.unshift(fieldsAllIds.splice(index, 1)[0]);\n                }\n            }\n\n            return {\n                ...state,\n                fieldsAllIds,\n            };\n        }\n        case CARDSET_LOCK_ACTIVE_FIELD: {\n            if (state.activeFieldId) {\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        cardFields[fieldId] = {\n                            ...cardFields[fieldId],\n                            locked: true,\n                        };\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                };\n            }\n\n            return state;\n        }\n        case CARDSET_UNLOCK_ACTIVE_FIELD: {\n            if (state.activeFieldId) {\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        cardFields[fieldId] = {\n                            ...cardFields[fieldId],\n                            locked: false,\n                        };\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                };\n            }\n\n            return state;\n        }\n        case CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD: {\n            if (state.activeFieldId) {\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = { ...cardFields[fieldId] };\n                        if (fieldInfo.type === 'image') {\n                            fieldInfo.fit = action.fit;\n                        }\n                        cardFields[fieldId] = fieldInfo;\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                };\n            }\n\n            return state;\n        }\n        case CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD: {\n            if (state.activeFieldId) {\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = { ...cardFields[fieldId] };\n                        if (fieldInfo.type === 'image') {\n                            fieldInfo.crop = action.crop;\n                        }\n                        cardFields[fieldId] = fieldInfo;\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                };\n            }\n\n            return state;\n        }\n        case CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD: {\n            if (state.activeFieldId) {\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = { ...cardFields[fieldId] };\n                        fieldInfo.unclickable = action.unclickable;\n                        cardFields[fieldId] = fieldInfo;\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                };\n            }\n\n            return state;\n        }\n        case CARDSET_CHANGE_WIDTH: {\n            if (!action.width || action.width <= 0) {\n                return state;\n            }\n\n            let height = state.height;\n            if (action.maintainAspectRatio) {\n                height = action.width * (state.height / state.width);\n            }\n\n            let fields = state.fields;\n            if (action.resizeContent) {\n                fields = resizeFields(fields, action.width / state.width, height / state.height);\n            }\n\n            return {\n                ...state,\n                width: action.width,\n                height,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_HEIGHT: {\n            if (!action.height || action.height <= 0) {\n                return state;\n            }\n\n            let width = state.width;\n            if (action.maintainAspectRatio) {\n                width = action.height * (state.width / state.height);\n            }\n\n            let fields = state.fields;\n            if (action.resizeContent) {\n                fields = resizeFields(fields, width / state.width, action.height / state.height);\n            }\n\n            return {\n                ...state,\n                height: action.height,\n                width,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_IS_TWO_SIDED: {\n            return {\n                ...state,\n                isTwoSided: action.isTwoSided,\n            };\n        }\n        case CARDSET_CHANGE_SNAPPING_DISTANCE: {\n            return {\n                ...state,\n                snappingDistance: action.snappingDistance,\n            };\n        }\n        case CARDSET_CHANGE_FIELD_POSITION: {\n            let x = action.x;\n            let y = action.y;\n            let snappingDistance = state.snappingDistance;\n\n            if (snappingDistance !== 0) {\n                x = Math.round(x / snappingDistance) * snappingDistance;\n                y = Math.round(y / snappingDistance) * snappingDistance;\n            }\n\n            let fields = { ...state.fields };\n            let fieldId = action.fieldId;\n            let cardsToFix = action.cardId ? [action.cardId] : state.cardsAllIds;\n\n            for (const cardId of cardsToFix) {\n                let cardFields = { ...fields[cardId] };\n                if (fieldId in cardFields) {\n                    cardFields[fieldId] = {\n                        ...cardFields[fieldId],\n                        x,\n                        y,\n                    };\n                }\n                fields[cardId] = cardFields;\n            }\n\n            return {\n                ...state,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_FIELD_PAN: {\n            let { cx, cy } = action;\n\n            let fields = { ...state.fields };\n            let fieldId = action.fieldId;\n            let cardsToFix = state.applyToAllCards || action.cardId === undefined ? state.cardsAllIds : [action.cardId];\n\n            for (const cardId of cardsToFix) {\n                let cardFields = { ...fields[cardId] };\n                if (fieldId in cardFields) {\n                    let fieldInfo = cardFields[fieldId];\n                    if (fieldInfo.type === 'image') {\n                        let { width, height, zoom, fit, imageWidth, imageHeight } = fieldInfo;\n                        zoom = zoom || 1;\n                        imageHeight = imageHeight || 1;\n                        imageWidth = imageWidth || 1;\n\n                        let fitImageWidth = width;\n                        let fitImageHeight = height;\n                        if (fit === 'width' || fit === undefined) {\n                            fitImageHeight = width * (imageHeight / imageWidth);\n                        } else if (fit === 'height') {\n                            fitImageWidth = height * (imageWidth / imageHeight);\n                        }\n                        cx = Math.min(Math.max(width - zoom * fitImageWidth, cx), 0);\n                        cy = Math.min(Math.max(height - zoom * fitImageHeight, cy), 0);\n\n                        cardFields[fieldId] = {\n                            ...fieldInfo,\n                            cx,\n                            cy,\n                        };\n                    }\n                }\n                fields[cardId] = cardFields;\n            }\n\n            return {\n                ...state,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_FIELD_ZOOM: {\n            let zoom = action.zoom;\n\n            let fields = { ...state.fields };\n            let fieldId = action.fieldId;\n\n            let cardsToFix = state.applyToAllCards || action.cardId === undefined ? state.cardsAllIds : [action.cardId];\n\n            for (const cardId of cardsToFix) {\n                let cardFields = { ...fields[cardId] };\n                if (fieldId in cardFields) {\n                    let fieldInfo = cardFields[fieldId];\n                    if (fieldInfo.type === 'image') {\n                        let { fit, width, height, imageWidth, imageHeight } = fieldInfo;\n\n                        imageHeight = imageHeight || 1;\n                        imageWidth = imageWidth || 1;\n\n                        let fitImageWidth = width;\n                        let fitImageHeight = height;\n                        if (fit === 'width' || fit === undefined) {\n                            fitImageHeight = width * (imageHeight / imageWidth);\n                        } else if (fit === 'height') {\n                            fitImageWidth = height * (imageWidth / imageHeight);\n                        }\n\n                        let cx = fieldInfo.cx || 0;\n                        let cy = fieldInfo.cy || 0;\n                        let oldZoom = fieldInfo.zoom || 1;\n                        cx = cx + ((oldZoom - zoom) * fitImageWidth) / 2;\n                        cy = cy + ((oldZoom - zoom) * fitImageHeight) / 2;\n\n                        cx = Math.min(Math.max(width - zoom * fitImageWidth, cx), 0);\n                        cy = Math.min(Math.max(height - zoom * fitImageHeight, cy), 0);\n\n                        cardFields[fieldId] = {\n                            ...fieldInfo,\n                            zoom,\n                            cx,\n                            cy,\n                        };\n                    }\n                }\n                fields[cardId] = cardFields;\n            }\n\n            return {\n                ...state,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_FIELD_SIZE: {\n            let width = action.width;\n            let height = action.height;\n            let snappingDistance = state.snappingDistance;\n\n            if (snappingDistance !== 0) {\n                width = Math.round(width / snappingDistance) * snappingDistance;\n                height = Math.round(height / snappingDistance) * snappingDistance;\n            }\n\n            let fields = { ...state.fields };\n            let fieldId = action.fieldId;\n            let cardsToFix = action.cardId ? [action.cardId] : state.cardsAllIds;\n\n            for (const cardId of cardsToFix) {\n                let cardFields = { ...fields[cardId] };\n                if (fieldId in cardFields) {\n                    let fieldInfo = { ...cardFields[fieldId] };\n\n                    let nx = fieldInfo.x + fieldInfo.width / 2;\n                    let ny = fieldInfo.y + fieldInfo.height / 2;\n                    let { rx, ry } = rotateVec(\n                        (width - fieldInfo.width) / 2,\n                        (height - fieldInfo.height) / 2,\n                        fieldInfo.angle,\n                    );\n\n                    nx = nx + rx - width / 2;\n                    ny = ny + ry - height / 2;\n\n                    if (fieldInfo.type === 'image' && fieldInfo.cx && fieldInfo.cy) {\n                        if (fieldInfo.fit === 'width' || fieldInfo.fit === undefined) {\n                            let ratio = width / fieldInfo.width;\n                            fieldInfo.cx *= ratio;\n                            fieldInfo.cy *= ratio;\n                        } else if (fieldInfo.fit === 'height') {\n                            let ratio = height / fieldInfo.height;\n                            fieldInfo.cx *= ratio;\n                            fieldInfo.cy *= ratio;\n                        } else {\n                            fieldInfo.cx *= width / fieldInfo.width;\n                            fieldInfo.cy *= height / fieldInfo.height;\n                        }\n                    }\n\n                    fieldInfo.x = nx;\n                    fieldInfo.y = ny;\n                    fieldInfo.width = width;\n                    fieldInfo.height = height;\n                    cardFields[fieldId] = fieldInfo;\n                }\n                fields[cardId] = cardFields;\n            }\n\n            return {\n                ...state,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_FIELD_ANGLE: {\n            let angle = action.angle;\n\n            let fields = { ...state.fields };\n            let fieldId = action.fieldId;\n\n            let cardsToFix = action.cardId ? [action.cardId] : state.cardsAllIds;\n\n            for (const cardId of cardsToFix) {\n                let cardFields = { ...fields[cardId] };\n                if (fieldId in cardFields) {\n                    cardFields[fieldId] = {\n                        ...cardFields[fieldId],\n                        angle,\n                    };\n                }\n                fields[cardId] = cardFields;\n            }\n\n            return {\n                ...state,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN: {\n            let textSettings = {\n                ...state.textSettings,\n                align: action.align,\n            };\n\n            if (state.activeFieldId) {\n                let align = action.align;\n\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'text') {\n                            cardFields[fieldId] = {\n                                ...fieldInfo,\n                                align,\n                            };\n                        }\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR: {\n            let textSettings = {\n                ...state.textSettings,\n                color: action.color,\n            };\n\n            if (state.activeFieldId) {\n                let color = action.color;\n\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'text') {\n                            cardFields[fieldId] = {\n                                ...fieldInfo,\n                                color,\n                            };\n                        }\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY: {\n            let textSettings = {\n                ...state.textSettings,\n                color: action.fontFamily,\n            };\n\n            if (state.activeFieldId) {\n                let fontFamily = action.fontFamily;\n\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'text') {\n                            cardFields[fieldId] = {\n                                ...fieldInfo,\n                                fontFamily,\n                            };\n                        }\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT: {\n            let textSettings = {\n                ...state.textSettings,\n                color: action.fontVariant,\n            };\n\n            if (state.activeFieldId) {\n                let fontVariant = action.fontVariant;\n\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'text') {\n                            cardFields[fieldId] = {\n                                ...fieldInfo,\n                                fontVariant,\n                            };\n                        }\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT: {\n            let textSettings = {\n                ...state.textSettings,\n                fontFamily: action.fontFamily,\n                fontVariant: action.fontVariant,\n            };\n\n            if (state.activeFieldId) {\n                let fontFamily = action.fontFamily;\n                let fontVariant = action.fontVariant;\n\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'text') {\n                            cardFields[fieldId] = {\n                                ...fieldInfo,\n                                fontFamily,\n                                fontVariant,\n                            };\n                        }\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE: {\n            let textSettings = {\n                ...state.textSettings,\n                fontSize: action.fontSize,\n            };\n\n            if (state.activeFieldId) {\n                let fontSize = action.fontSize;\n\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'text') {\n                            cardFields[fieldId] = {\n                                ...fieldInfo,\n                                fontSize,\n                            };\n                        }\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT: {\n            let textSettings = {\n                ...state.textSettings,\n                lineHeight: action.lineHeight,\n            };\n\n            if (state.activeFieldId) {\n                let lineHeight = action.lineHeight;\n\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'text') {\n                            cardFields[fieldId] = {\n                                ...fieldInfo,\n                                lineHeight,\n                            };\n                        }\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_TEXT: {\n            let cardFields = { ...state.fields[action.cardId] };\n\n            const fieldInfo = cardFields[action.fieldId];\n            const name = fieldInfo.name || fieldInfo.id;\n\n            for (const fieldId in cardFields) {\n                const testFieldInfo = cardFields[fieldId];\n\n                if ((testFieldInfo.name === name || testFieldInfo.id === name) && testFieldInfo.type === 'text') {\n                    cardFields[fieldId] = {\n                        ...testFieldInfo,\n                        value: action.textInfo.value,\n                    };\n                }\n            }\n\n            return {\n                ...state,\n                fields: {\n                    ...state.fields,\n                    [action.cardId]: cardFields,\n                },\n            };\n        }\n        case CARDSET_CHANGE_IMAGE: {\n            let cardsToFix = state.applyToAllCards || action.cardId === undefined ? state.cardsAllIds : [action.cardId];\n\n            let fields = { ...state.fields };\n\n            for (const cardId of cardsToFix) {\n                let cardFields = { ...state.fields[cardId] };\n\n                const fieldInfo = cardFields[action.fieldId];\n                const name = fieldInfo.name || fieldInfo.id;\n\n                for (const fieldId in cardFields) {\n                    const testFieldInfo = cardFields[fieldId];\n\n                    if ((testFieldInfo.name === name || testFieldInfo.id === name) && testFieldInfo.type === 'image') {\n                        cardFields[fieldId] = {\n                            ...testFieldInfo,\n                            url: 'url' in action.imageInfo ? action.imageInfo.url : testFieldInfo.url,\n                            base64: 'base64' in action.imageInfo ? action.imageInfo.base64 : testFieldInfo.base64,\n                            color: 'color' in action.imageInfo ? action.imageInfo.color : testFieldInfo.color,\n                            imageWidth: 'width' in action.imageInfo ? action.imageInfo.width : testFieldInfo.imageWidth,\n                            imageHeight:\n                                'height' in action.imageInfo ? action.imageInfo.height : testFieldInfo.imageHeight,\n                            cx: 0,\n                            cy: 0,\n                            zoom: 0,\n                        };\n                    }\n                }\n\n                fields[cardId] = cardFields;\n            }\n\n            return {\n                ...state,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_IMAGE_BASE64: {\n            let cardFields = { ...state.fields[action.cardId] };\n\n            const fieldInfo = cardFields[action.fieldId];\n            const name = fieldInfo.name || fieldInfo.id;\n\n            for (const fieldId in cardFields) {\n                const testFieldInfo = cardFields[fieldId];\n\n                if ((testFieldInfo.name === name || testFieldInfo.id === name) && testFieldInfo.type === 'image') {\n                    cardFields[fieldId] = {\n                        ...testFieldInfo,\n                        base64: action.base64,\n                        cx: 0,\n                        cy: 0,\n                        zoom: 0,\n                    };\n                }\n            }\n\n            return {\n                ...state,\n                fields: {\n                    ...state.fields,\n                    [action.cardId]: cardFields,\n                },\n            };\n        }\n        case CARDSET_SET_ACTIVE_CARD_AND_FIELD: {\n            let textSettings = { ...state.textSettings };\n            let activeSidebar = state.activeSidebar;\n\n            if (activeSidebar !== SidebarState.Measurements && action.cardId !== undefined) {\n                activeSidebar = SidebarState.Details;\n            }\n\n            if (action.cardId !== undefined && action.fieldId !== undefined) {\n                const fieldInfo = state.fields[action.cardId][action.fieldId];\n\n                if (fieldInfo.type === 'text') {\n                    textSettings.align = fieldInfo.align;\n                    textSettings.color = fieldInfo.color;\n                    textSettings.fontFamily = fieldInfo.fontFamily;\n                    textSettings.fontVariant = fieldInfo.fontVariant;\n                    textSettings.fontSize = fieldInfo.fontSize;\n                    textSettings.lineHeight = fieldInfo.lineHeight;\n\n                    if (activeSidebar !== SidebarState.Measurements) {\n                        activeSidebar = SidebarState.Text;\n                    }\n                } else {\n                    if (activeSidebar !== SidebarState.Measurements) {\n                        activeSidebar = SidebarState.Image;\n                    }\n                }\n            }\n\n            return {\n                ...state,\n                activeCardId: action.cardId,\n                isBackActive: action.isBackActive,\n                activeFieldId: action.fieldId,\n                textSettings,\n                activeSidebar,\n            };\n        }\n\n        case CARDSET_CHANGE_APPLY_TO_ALLCARDS: {\n            return {\n                ...state,\n                applyToAllCards: action.applyToAllCards,\n            };\n        }\n\n        case CARDSET_SET_SIDEBAR_STATE: {\n            return {\n                ...state,\n                activeSidebar: action.sidebarState,\n            };\n        }\n        case CARDSET_SET_ZOOM: {\n            return {\n                ...state,\n                zoom: action.zoom,\n            };\n        }\n        case CARDSET_IMPORT_DATA: {\n            return {\n                ...state,\n                ...action.data,\n            };\n        }\n        default:\n            return state;\n    }\n}\n\nexport function images(state: ImageState = DefaultImageState, action: ImageListAction): ImageState {\n    switch (action.type) {\n        case IMAGE_LIST_REQUEST:\n            return Object.assign({}, state, {\n                filter: action.filter,\n            });\n        case IMAGE_LIST_SUCCESS:\n            return Object.assign({}, state, {\n                images: action.images,\n            });\n        default:\n            return state;\n    }\n}\n\nconst undoableCardset = undoable(cardset, {\n    ignoreInitialState: true,\n    undoType: CARDSET_UNDO,\n    redoType: CARDSET_REDO,\n    groupBy: (action: Action) => {\n        if (\n            action.type === 'CARDSET_CHANGE_FIELD_SIZE' ||\n            action.type === 'CARDSET_CHANGE_FIELD_POSITION' ||\n            action.type === 'CARDSET_CHANGE_FIELD_ANGLE' ||\n            action.type === 'CARDSET_CHANGE_FIELD_ZOOM' ||\n            action.type === 'CARDSET_CHANGE_FIELD_PAN'\n        ) {\n            return action.group;\n        }\n        return null;\n    },\n    filter: (action: Action) => {\n        if (!action.type.startsWith('CARDSET_')) {\n            return false;\n        }\n\n        if (action.type === CARDSET_SELECT_REQUEST || action.type === CARDSET_SET_ACTIVE_CARD_AND_FIELD) {\n            return false;\n        }\n        return true;\n    },\n});\n\nconst reducers = combineReducers({\n    message,\n    auth,\n    signup,\n    games,\n    cardsets,\n    cardset: undoableCardset,\n    images,\n});\n\nexport default reducers;\n","import { applyMiddleware, compose, createStore, Store } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { rootSaga } from './sagas';\nimport reducers from './reducers';\n\nexport let store: Store | undefined;\n\nexport function createAppStore() {\n    const sagaMiddleware = createSagaMiddleware();\n    store = createStore(\n        reducers,\n        // @ts-ignore: __REDUX_DEVTOOLS_EXTENSION__ does not exists on window\n        window.__REDUX_DEVTOOLS_EXTENSION__\n            ? compose(\n                  applyMiddleware(sagaMiddleware),\n                  // @ts-ignore: __REDUX_DEVTOOLS_EXTENSION__ does not exists on window\n                  window.__REDUX_DEVTOOLS_EXTENSION__(),\n              )\n            : applyMiddleware(sagaMiddleware),\n    );\n    sagaMiddleware.run(rootSaga);\n    return store;\n}\n","import { Ghost, Browser } from 'react-kawaii';\nimport React, { Component } from 'react';\n\nexport enum Character {\n    Ghost,\n    Browser,\n}\ninterface Props {\n    character: Character;\n    mood?: string;\n}\n\nexport default class KawaiiMessage extends Component<Props> {\n    render() {\n        const { character, mood } = this.props;\n\n        return (\n            <div\n                style={{\n                    marginTop: '1em',\n                    marginBottom: '1em',\n                    padding: '1em',\n                    borderRadius: '1em',\n                    backgroundColor: 'var(--color-2)',\n                    display: 'grid',\n                    grid: 'auto-flow / minmax(120px, auto) 1fr',\n                }}\n            >\n                {character === Character.Ghost && <Ghost size={120} mood={mood || 'blissful'} color=\"#faebef\" />}\n                {character === Character.Browser && <Browser size={120} mood={mood || 'blissful'} color=\"#faebef\" />}\n                <div style={{ marginLeft: '1em' }}>{this.props.children}</div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nexport default class AboutPage extends Component {\n    render() {\n        return (\n            <div>\n                <h2>About</h2>\n                <p>\n                    \"Card-a-mon\" is card game development tool. At the moment it is project of single person (me) with a\n                    vision. My aim is to create affordable and practical tool to develop card games from A (prototyping)\n                    to Z (printing). If you have ideas, suggestions, proposals, comments and etc. then you can contact\n                    me by e-mail <a href=\"mailto:dalius@ffff.lt\">dalius@ffff.lt</a>.\n                </p>\n                <h2>Credits</h2>\n                This project is available because of number amazing open source projects. Some of them:\n                <ul>\n                    <li>\n                        <a href=\"https://reactjs.org/\">React</a> and all the ecosystem around it.\n                    </li>\n                    <li>\n                        <a href=\"https://fonts.google.com/\">Google Fonts</a>\n                    </li>\n                    <li>\n                        <a href=\"https://github.com/game-icons/icons\">Game icons</a>\n                    </li>\n                    <li>\n                        <a href=\"http://pdfkit.org/\">PDFKit</a>\n                    </li>\n                </ul>\n                <p>... and many more.</p>\n            </div>\n        );\n    }\n}\n","import { connect } from 'react-redux';\nimport React from 'react';\nimport shortid from 'shortid';\n\nimport { Dispatch } from '../actions';\nimport { State } from '../reducers';\nimport panIcon from './pan.svg';\nimport zoomIcon from './zoom.svg';\nimport resizeIcon from './resize.svg';\nimport rotateIcon from './rotate.svg';\nimport style from './FieldController.module.css';\nimport { rotateVec } from '../utils';\n\ninterface OwnProps {\n    cardId: string;\n    fieldId: string;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    angle: number;\n    zoom?: number;\n    cx?: number;\n    cy?: number;\n    children: React.ReactNode;\n    onDrag: (x: number, y: number, cardOnly: boolean, group: string) => void;\n    onResize: (width: number, height: number, cardOnly: boolean, group: string) => void;\n    onRotate: (angle: number, cardOnly: boolean, group: string) => void;\n    onZoom?: (zoom: number, cardOnly: boolean, group: string) => void;\n    onPan?: (cx: number, cy: number, cardOnly: boolean, group: string) => void;\n    cardWidth: number;\n    cardHeight: number;\n    ppmm: number;\n}\n\ninterface StateProps {\n    isActive: boolean;\n    isActiveField: boolean;\n    isLocked: boolean;\n    isUnclickable: boolean;\n    snappingDistance: number;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nexport interface LocalState {\n    startX: number;\n    startY: number;\n    originalAngle: number;\n    activatedUsingTouch: boolean;\n    group: string;\n}\n\nclass FieldController extends React.Component<Props, LocalState> {\n    cDiv: React.RefObject<HTMLDivElement>;\n    panDiv: React.RefObject<HTMLImageElement>;\n    zoomDiv: React.RefObject<HTMLImageElement>;\n    resizeDiv: React.RefObject<HTMLImageElement>;\n    rotateDiv: React.RefObject<HTMLImageElement>;\n    originalBodyCursor: string | null;\n\n    constructor(props: Props) {\n        super(props);\n        this.cDiv = React.createRef();\n        this.panDiv = React.createRef();\n        this.zoomDiv = React.createRef();\n        this.resizeDiv = React.createRef();\n        this.rotateDiv = React.createRef();\n        this.originalBodyCursor = null;\n        this.state = {\n            activatedUsingTouch: false,\n            startX: 0,\n            startY: 0,\n            originalAngle: 0,\n            group: '',\n        };\n    }\n\n    componentDidMount() {\n        if (this.cDiv.current === null) return;\n        if (this.panDiv.current === null) return;\n        if (this.zoomDiv.current === null) return;\n        if (this.resizeDiv.current === null) return;\n        if (this.rotateDiv.current === null) return;\n\n        this.originalBodyCursor = document.body.style.cursor;\n\n        this.cDiv.current.addEventListener('mousedown', this.handleMouseDown);\n        this.cDiv.current.addEventListener('touchstart', this.handleTouchStart);\n        this.panDiv.current.addEventListener('mousedown', this.handlePanMouseDown);\n        this.panDiv.current.addEventListener('touchstart', this.handlePanTouchStart);\n        this.zoomDiv.current.addEventListener('mousedown', this.handleZoomMouseDown);\n        this.zoomDiv.current.addEventListener('touchstart', this.handleZoomTouchStart);\n        this.resizeDiv.current.addEventListener('mousedown', this.handleResizeMouseDown);\n        this.resizeDiv.current.addEventListener('touchstart', this.handleResizeTouchStart);\n        this.rotateDiv.current.addEventListener('mousedown', this.handleRotateMouseDown);\n        this.rotateDiv.current.addEventListener('touchstart', this.handleRotateTouchStart);\n    }\n\n    handleBrowserDragStart = (event: React.DragEvent) => {\n        event.stopPropagation();\n        event.preventDefault();\n    };\n\n    // Dragging handling\n\n    handleMouseDown = (event: MouseEvent) => {\n        this.handleDragStart(event);\n\n        document.addEventListener('mousemove', this.handleMouseMove);\n        document.addEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleTouchStart = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleDragStart(event.changedTouches[0]);\n\n        document.addEventListener('touchmove', this.handleTouchMove, { passive: false });\n        document.addEventListener('touchend', this.handleTouchEnd, { passive: false });\n    };\n\n    handleDragStart = (co: MouseEvent | Touch) => {\n        if (this.cDiv.current === null) return;\n\n        this.cDiv.current.style.cursor = 'grabbing';\n\n        this.setState({ startX: co.clientX, startY: co.clientY, group: shortid.generate() });\n    };\n\n    handleMouseMove = (event: MouseEvent) => {\n        this.handleDragMove(event, event.ctrlKey);\n    };\n\n    handleTouchMove = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        event.preventDefault();\n        this.handleDragMove(event.changedTouches[0], event.ctrlKey);\n    };\n\n    handleDragMove = (co: MouseEvent | Touch, disableSnapping: boolean) => {\n        const { isLocked, x, y } = this.props;\n\n        if (isLocked) return;\n\n        const { ppmm, snappingDistance } = this.props;\n\n        let nx = x + co.clientX - this.state.startX;\n        let ny = y + co.clientY - this.state.startY;\n\n        if (!disableSnapping && snappingDistance !== 0) {\n            nx = Math.round(nx / ppmm / snappingDistance) * snappingDistance * ppmm;\n            ny = Math.round(ny / ppmm / snappingDistance) * snappingDistance * ppmm;\n        }\n\n        this.setState({ startX: co.clientX, startY: co.clientY });\n        this.props.onDrag(nx, ny, true, this.state.group);\n    };\n\n    handleMouseUp = (event: MouseEvent) => {\n        this.handleComplete(event, false);\n\n        document.removeEventListener('mousemove', this.handleMouseMove);\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleTouchEnd = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleComplete(event, true);\n\n        document.removeEventListener('touchmove', this.handleTouchMove);\n        document.removeEventListener('touchend', this.handleTouchEnd);\n    };\n\n    handleComplete = (event: MouseEvent | TouchEvent, isTouchEvent: boolean) => {\n        const { isLocked, x, y } = this.props;\n\n        if (this.cDiv.current === null) return;\n\n        if (!isLocked) {\n            this.props.onDrag(x, y, false, this.state.group);\n        }\n        this.setState({ activatedUsingTouch: isTouchEvent });\n\n        this.cDiv.current.style.cursor = 'grab';\n    };\n\n    // Pan handling\n\n    handlePanMouseDown = (event: MouseEvent) => {\n        this.handlePanStart(event);\n\n        document.addEventListener('mousemove', this.handlePanMouseMove);\n        document.addEventListener('mouseup', this.handlePanMouseUp);\n        event.stopPropagation();\n    };\n\n    handlePanTouchStart = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handlePanStart(event.changedTouches[0]);\n\n        document.addEventListener('touchmove', this.handlePanTouchMove, { passive: false });\n        document.addEventListener('touchend', this.handlePanTouchEnd, { passive: false });\n        event.stopPropagation();\n        event.preventDefault();\n    };\n\n    handlePanStart = (co: MouseEvent | Touch) => {\n        document.body.style.cursor = `url(${panIcon}), auto`;\n\n        this.setState({ startX: co.clientX, startY: co.clientY, group: shortid.generate() });\n    };\n\n    handlePanMouseMove = (event: MouseEvent) => {\n        this.handlePanMove(event);\n        event.preventDefault();\n    };\n\n    handlePanTouchMove = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handlePanMove(event.changedTouches[0]);\n        event.preventDefault();\n    };\n\n    handlePanMove = (co: MouseEvent | Touch) => {\n        const { cx, cy, angle, onPan } = this.props;\n        if (!onPan || cx === undefined || cy === undefined) return;\n\n        let dx = co.clientX - this.state.startX;\n        let dy = co.clientY - this.state.startY;\n        const { rx, ry } = rotateVec(dx, dy, -angle);\n\n        const newCx = cx + rx;\n        const newCy = cy + ry;\n\n        this.setState({ startX: co.clientX, startY: co.clientY });\n\n        onPan(newCx, newCy, true, this.state.group);\n    };\n\n    handlePanMouseUp = (event: MouseEvent) => {\n        this.handlePanComplete(event);\n\n        document.removeEventListener('mousemove', this.handlePanMouseMove);\n        document.removeEventListener('mouseup', this.handlePanMouseUp);\n    };\n\n    handlePanTouchEnd = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handlePanComplete(event);\n\n        document.removeEventListener('touchmove', this.handlePanTouchMove);\n        document.removeEventListener('touchend', this.handlePanTouchEnd);\n    };\n\n    handlePanComplete = (event: MouseEvent | TouchEvent) => {\n        const { cx, cy, onPan } = this.props;\n        if (onPan && cx !== undefined && cy !== undefined) {\n            onPan(cx, cy, true, this.state.group);\n        }\n\n        document.body.style.cursor = this.originalBodyCursor;\n        event.preventDefault();\n    };\n\n    // Zoom handling\n\n    handleZoomMouseDown = (event: MouseEvent) => {\n        this.handleZoomStart(event);\n\n        document.addEventListener('mousemove', this.handleZoomMouseMove);\n        document.addEventListener('mouseup', this.handleZoomMouseUp);\n        event.stopPropagation();\n    };\n\n    handleZoomTouchStart = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleZoomStart(event.changedTouches[0]);\n\n        document.addEventListener('touchmove', this.handleZoomTouchMove, { passive: false });\n        document.addEventListener('touchend', this.handleZoomTouchEnd, { passive: false });\n        event.stopPropagation();\n        event.preventDefault();\n    };\n\n    handleZoomStart = (co: { clientX: number; clientY: number }) => {\n        document.body.style.cursor = `url(${zoomIcon}), auto`;\n\n        this.setState({ startX: co.clientX, startY: co.clientY, group: shortid.generate() });\n    };\n\n    handleZoomMouseMove = (event: MouseEvent) => {\n        this.handleZoomMove(event);\n        event.preventDefault();\n    };\n\n    handleZoomTouchMove = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleZoomMove(event.changedTouches[0]);\n        event.preventDefault();\n    };\n\n    handleZoomMove = (co: MouseEvent | Touch) => {\n        const { zoom, onZoom } = this.props;\n        if (!onZoom || zoom === undefined) return;\n\n        const dx = co.clientX - this.state.startX;\n        const dy = co.clientY - this.state.startY;\n\n        let z = Math.abs(dx) > Math.abs(dy) ? dx : dy;\n\n        let newZoom = Math.max(zoom + z / 30, 1);\n        this.setState({ startX: co.clientX, startY: co.clientY });\n\n        onZoom(newZoom, true, this.state.group);\n    };\n\n    handleZoomMouseUp = (event: MouseEvent) => {\n        this.handleZoomComplete(event);\n\n        document.removeEventListener('mousemove', this.handleZoomMouseMove);\n        document.removeEventListener('mouseup', this.handleZoomMouseUp);\n    };\n\n    handleZoomTouchEnd = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleZoomComplete(event);\n\n        document.removeEventListener('touchmove', this.handleZoomTouchMove);\n        document.removeEventListener('touchend', this.handleZoomTouchEnd);\n    };\n\n    handleZoomComplete = (event: Event) => {\n        document.body.style.cursor = this.originalBodyCursor;\n        event.preventDefault();\n    };\n\n    // Resize handling\n\n    handleResizeMouseDown = (event: MouseEvent) => {\n        this.handleResizeStart(event);\n\n        document.addEventListener('mousemove', this.handleResizeMouseMove);\n        document.addEventListener('mouseup', this.handleResizeMouseUp);\n        event.stopPropagation();\n    };\n\n    handleResizeTouchStart = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleResizeStart(event.changedTouches[0]);\n\n        document.addEventListener('touchmove', this.handleResizeTouchMove, { passive: false });\n        document.addEventListener('touchend', this.handleResizeTouchEnd, { passive: false });\n        event.stopPropagation();\n        event.preventDefault();\n    };\n\n    handleResizeStart = (co: MouseEvent | Touch) => {\n        const { isLocked } = this.props;\n\n        if (isLocked) return;\n\n        document.body.style.cursor = `url(${resizeIcon}), auto`;\n\n        this.setState({ startX: co.clientX, startY: co.clientY, group: shortid.generate() });\n    };\n\n    handleResizeMouseMove = (event: MouseEvent) => {\n        this.handleResizeMove(event, event.ctrlKey);\n        event.preventDefault();\n    };\n\n    handleResizeTouchMove = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleResizeMove(event.changedTouches[0], event.ctrlKey);\n        event.preventDefault();\n    };\n\n    handleResizeMove = (co: { clientX: number; clientY: number }, disableSnapping: boolean) => {\n        const { isLocked, ppmm, width, height, angle, snappingDistance, onResize } = this.props;\n\n        if (isLocked) return;\n\n        const dx = co.clientX - this.state.startX;\n        const dy = co.clientY - this.state.startY;\n\n        const { rx, ry } = rotateVec(dx, dy, -angle);\n\n        let newWidth = width + rx;\n        let newHeight = height + ry;\n\n        if (!disableSnapping && snappingDistance !== 0) {\n            newWidth = Math.round(newWidth / ppmm / snappingDistance) * snappingDistance * ppmm;\n            newHeight = Math.round(newHeight / ppmm / snappingDistance) * snappingDistance * ppmm;\n        }\n\n        this.setState({ startX: co.clientX, startY: co.clientY });\n\n        onResize(newWidth, newHeight, true, this.state.group);\n    };\n\n    handleResizeMouseUp = (event: MouseEvent) => {\n        this.handleResizeComplete(event);\n\n        document.removeEventListener('mousemove', this.handleResizeMouseMove);\n        document.removeEventListener('mouseup', this.handleResizeMouseUp);\n    };\n\n    handleResizeTouchEnd = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleResizeComplete(event);\n\n        document.removeEventListener('touchmove', this.handleResizeTouchMove);\n        document.removeEventListener('touchend', this.handleResizeTouchEnd);\n    };\n\n    handleResizeComplete = (event: Event) => {\n        const { isLocked } = this.props;\n\n        if (!isLocked) {\n            const { width, height, onResize } = this.props;\n            onResize(width, height, false, this.state.group);\n        }\n\n        document.body.style.cursor = this.originalBodyCursor;\n\n        event.preventDefault();\n    };\n\n    // Rotation handling\n\n    handleRotateMouseDown = (event: MouseEvent) => {\n        this.handleRotateStart(event);\n\n        document.addEventListener('mousemove', this.handleRotateMouseMove);\n        document.addEventListener('mouseup', this.handleRotateMouseUp);\n        event.stopPropagation();\n    };\n\n    handleRotateTouchStart = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleRotateStart(event.changedTouches[0]);\n\n        document.addEventListener('touchmove', this.handleRotateTouchMove, { passive: false });\n        document.addEventListener('touchend', this.handleRotateTouchEnd, { passive: false });\n        event.stopPropagation();\n        event.preventDefault();\n    };\n\n    handleRotateStart = (co: { clientX: number; clientY: number }) => {\n        const { isLocked, angle } = this.props;\n\n        if (isLocked || this.cDiv.current === null) return;\n\n        document.body.style.cursor = `url(${rotateIcon}), auto`;\n\n        const rect = this.cDiv.current.getBoundingClientRect();\n        let startX = rect.left + this.cDiv.current.clientWidth / 2;\n        let startY = rect.top + this.cDiv.current.clientHeight / 2;\n\n        let originalAngle = angle + Math.atan2(startX - co.clientX, startY - co.clientY);\n\n        this.setState({ startX, startY, originalAngle, group: shortid.generate() });\n    };\n\n    handleRotateMouseMove = (event: MouseEvent) => {\n        this.handleRotateMove(event, event.ctrlKey);\n        event.preventDefault();\n    };\n\n    handleRotateTouchMove = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleRotateMove(event.changedTouches[0], event.ctrlKey);\n        event.preventDefault();\n    };\n\n    handleRotateMove = (co: MouseEvent | Touch, disableSnapping: boolean) => {\n        const { isLocked, onRotate } = this.props;\n\n        if (isLocked) return;\n\n        const { originalAngle, startX, startY } = this.state;\n\n        let curAngle = Math.atan2(startX - co.clientX, startY - co.clientY);\n        let newAngle = originalAngle - curAngle;\n\n        if (!disableSnapping) {\n            newAngle = ((Math.round(((newAngle / Math.PI) * 180) / 5) * 5) / 180) * Math.PI;\n        }\n\n        onRotate(newAngle, true, this.state.group);\n    };\n\n    handleRotateMouseUp = (event: MouseEvent) => {\n        this.handleRotateComplete(event);\n\n        document.removeEventListener('mousemove', this.handleRotateMouseMove);\n        document.removeEventListener('mouseup', this.handleRotateMouseUp);\n    };\n\n    handleRotateTouchEnd = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleRotateComplete(event);\n\n        document.removeEventListener('touchmove', this.handleRotateTouchMove);\n        document.removeEventListener('touchend', this.handleRotateTouchEnd);\n    };\n\n    handleRotateComplete = (event: Event) => {\n        const { isLocked } = this.props;\n\n        if (!isLocked) {\n            const { angle } = this.props;\n            this.props.onRotate(angle, false, this.state.group);\n        }\n\n        document.body.style.cursor = this.originalBodyCursor;\n\n        event.preventDefault();\n    };\n\n    // Rendering\n\n    render() {\n        const {\n            x,\n            y,\n            width,\n            height,\n            angle,\n            zoom,\n            cx,\n            children,\n            isActive,\n            isActiveField,\n            isLocked,\n            isUnclickable,\n        } = this.props;\n\n        return (\n            <div\n                ref={this.cDiv}\n                onDragStart={this.handleBrowserDragStart}\n                className={`${style.fieldcontroller} ${isActiveField ? style.fieldcontrolleractivefield : ''} ${\n                    isActive ? style.fieldcontrolleractive : ''\n                } ${isActive && this.state.activatedUsingTouch ? style.touchactivated : ''} `}\n                style={{\n                    position: 'absolute',\n                    left: x,\n                    top: y,\n                    width: width,\n                    height: height,\n                    cursor: 'grab',\n                    transform: `rotate(${angle}rad)`,\n                    pointerEvents: isUnclickable ? 'none' : 'initial',\n                }}\n            >\n                {children}\n                <img\n                    src={panIcon}\n                    alt=\"pan\"\n                    ref={this.panDiv}\n                    className={style.controller}\n                    style={{\n                        position: 'absolute',\n                        left: 0,\n                        top: 0,\n                        cursor: `url(${panIcon}), auto`,\n                        display: cx !== undefined && zoom !== undefined ? 'initial' : 'none',\n                    }}\n                />\n\n                <img\n                    src={zoomIcon}\n                    alt=\"zoom\"\n                    ref={this.zoomDiv}\n                    className={style.controller}\n                    style={{\n                        position: 'absolute',\n                        right: 0,\n                        top: 0,\n                        cursor: `url(${zoomIcon}), auto`,\n                        display: zoom !== undefined ? 'initial' : 'none',\n                    }}\n                />\n\n                <img\n                    src={resizeIcon}\n                    alt=\"resize\"\n                    ref={this.resizeDiv}\n                    className={style.controller}\n                    style={{\n                        position: 'absolute',\n                        right: 0,\n                        bottom: 0,\n                        cursor: `url(${resizeIcon}), auto`,\n                        display: isLocked ? 'none' : 'initial',\n                    }}\n                />\n                <img\n                    src={rotateIcon}\n                    alt=\"rotate\"\n                    ref={this.rotateDiv}\n                    className={style.controller}\n                    style={{\n                        position: 'absolute',\n                        left: 0,\n                        bottom: 0,\n                        cursor: `url(${rotateIcon}), auto`,\n                        display: isLocked ? 'none' : 'initial',\n                    }}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    const isActiveField = props.fieldId === state.cardset.present.activeFieldId;\n    const isActive =\n        props.cardId === state.cardset.present.activeCardId && props.fieldId === state.cardset.present.activeFieldId;\n    const fieldInfo = state.cardset.present.fields[props.cardId][props.fieldId];\n    const isLocked = fieldInfo.locked === true;\n    const isUnclickable = fieldInfo.unclickable === true;\n\n    return {\n        isActive,\n        isActiveField,\n        isLocked,\n        isUnclickable,\n        snappingDistance: state.cardset.present.snappingDistance,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(FieldController);\n","import { connect } from 'react-redux';\nimport React, { PureComponent } from 'react';\n\nimport {\n    Dispatch,\n    cardSetActiveCardAndField,\n    cardSetChangeImage,\n    cardSetChangeFieldPosition,\n    cardSetChangeFieldAngle,\n    cardSetChangeFieldPan,\n    cardSetChangeFieldZoom,\n    cardSetChangeFieldSize,\n} from '../actions';\nimport { ImageInfo, ImageFieldInfo } from '../types';\nimport { State } from '../reducers';\nimport FieldController from './FieldController';\nimport emptyImageImage from './image.svg';\nimport style from './ImageField.module.css';\nimport { calculateImageDimensions } from '../utils';\n\ninterface OwnProps {\n    cardId: string;\n    isOnBack: boolean;\n    ppmm: number;\n    imageFieldInfo: ImageFieldInfo;\n    cardWidth: number;\n    cardHeight: number;\n}\n\ninterface StateProps {\n    imageUrl?: string;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\ninterface LocalState {\n    dragIsOver: boolean;\n    wasMoved: boolean;\n    x: number;\n    y: number;\n}\n\nclass ImageField extends PureComponent<Props, LocalState> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            dragIsOver: false,\n            wasMoved: false,\n            x: 0,\n            y: 0,\n        };\n    }\n\n    handleDrag = (x: number, y: number, cardOnly: boolean, group: string) => {\n        const { dispatch, cardId, imageFieldInfo, ppmm } = this.props;\n        dispatch(\n            cardSetChangeFieldPosition(cardOnly ? cardId : undefined, imageFieldInfo.id, x / ppmm, y / ppmm, group),\n        );\n    };\n\n    handlePan = (cx: number, cy: number, cardOnly: boolean, group: string) => {\n        const { dispatch, cardId, imageFieldInfo, ppmm } = this.props;\n        dispatch(cardSetChangeFieldPan(cardOnly ? cardId : undefined, imageFieldInfo.id, cx / ppmm, cy / ppmm, group));\n    };\n\n    handleZoom = (zoom: number, cardOnly: boolean, group: string) => {\n        const { dispatch, cardId, imageFieldInfo } = this.props;\n        dispatch(cardSetChangeFieldZoom(cardOnly ? cardId : undefined, imageFieldInfo.id, zoom, group));\n    };\n\n    handleResize = (width: number, height: number, cardOnly: boolean, group: string) => {\n        const { dispatch, imageFieldInfo, cardId, ppmm } = this.props;\n        dispatch(\n            cardSetChangeFieldSize(\n                cardOnly ? cardId : undefined,\n                imageFieldInfo.id,\n                width / ppmm,\n                height / ppmm,\n                group,\n            ),\n        );\n    };\n\n    handleRotate = (angle: number, cardOnly: boolean, group: string) => {\n        const { dispatch, cardId, imageFieldInfo } = this.props;\n        dispatch(cardSetChangeFieldAngle(cardOnly ? cardId : undefined, imageFieldInfo.id, angle, group));\n    };\n\n    handleMouseDown = () => {\n        this.setState({ wasMoved: false });\n    };\n\n    handleTouchStart = (event: React.TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.setState({ wasMoved: false, x: event.changedTouches[0].clientX, y: event.changedTouches[0].clientY });\n    };\n\n    handleMouseMove = () => {\n        this.setState({ wasMoved: true });\n    };\n\n    handleTouchMove = (event: React.TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        const { x, y } = this.state;\n        if (Math.abs(event.changedTouches[0].clientX - x) > 3 || Math.abs(event.changedTouches[0].clientY - y) > 3) {\n            this.setState({ wasMoved: true });\n        }\n    };\n\n    handleMouseUp = () => {\n        this.handleComplete();\n    };\n\n    handleTouchEnd = (event: React.TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleComplete();\n    };\n\n    handleComplete = () => {\n        const { dispatch, cardId, isOnBack, imageFieldInfo } = this.props;\n        if (!this.state.wasMoved) {\n            dispatch(cardSetActiveCardAndField(cardId, isOnBack, imageFieldInfo.id));\n        }\n    };\n\n    handleDragOver = (event: React.DragEvent<HTMLDivElement>) => {\n        this.setState({ dragIsOver: true });\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDragLeave = (event: React.DragEvent<HTMLDivElement>) => {\n        this.setState({ dragIsOver: false });\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = (event: React.DragEvent<HTMLDivElement>) => {\n        this.setState({ dragIsOver: false });\n        event.preventDefault();\n        event.stopPropagation();\n\n        const url = event.dataTransfer.getData('URL');\n        const imagefilesPos = url.indexOf('/api/imagefiles/');\n\n        if (imagefilesPos !== -1) {\n            const { cardId, imageFieldInfo, dispatch } = this.props;\n            let img = new Image();\n\n            img.addEventListener('load', function() {\n                const ii: ImageInfo = {\n                    url: url.substr(imagefilesPos),\n                    width: this.naturalWidth,\n                    height: this.naturalHeight,\n                };\n                dispatch(cardSetChangeImage(cardId, imageFieldInfo.id, ii));\n            });\n            img.src = url;\n        }\n    };\n\n    render() {\n        const { imageFieldInfo, imageUrl, ppmm, cardWidth, cardHeight } = this.props;\n\n        let dim = calculateImageDimensions(imageFieldInfo);\n        let calculatedImageWidth = dim.width * ppmm;\n        let calculatedImageHeight = dim.height * ppmm;\n\n        return (\n            <FieldController\n                cardId={this.props.cardId}\n                fieldId={imageFieldInfo.id}\n                x={imageFieldInfo.x * ppmm}\n                y={imageFieldInfo.y * ppmm}\n                width={imageFieldInfo.width * ppmm}\n                height={imageFieldInfo.height * ppmm}\n                cx={(imageFieldInfo.cx || 0) * ppmm}\n                cy={(imageFieldInfo.cy || 0) * ppmm}\n                zoom={imageFieldInfo.zoom || 1}\n                angle={imageFieldInfo.angle}\n                onDrag={this.handleDrag}\n                onPan={this.handlePan}\n                onZoom={this.handleZoom}\n                onResize={this.handleResize}\n                onRotate={this.handleRotate}\n                cardWidth={cardWidth}\n                cardHeight={cardHeight}\n                ppmm={ppmm}\n            >\n                <div\n                    style={{\n                        width: '100%',\n                        height: '100%',\n                        position: 'relative',\n                        overflow: imageFieldInfo.crop ? 'hidden' : 'visible',\n                    }}\n                    className={this.state.dragIsOver ? style.over : ''}\n                    onMouseDown={this.handleMouseDown}\n                    onTouchStart={this.handleTouchStart}\n                    onMouseMove={this.handleMouseMove}\n                    onTouchMove={this.handleTouchMove}\n                    onMouseUp={this.handleMouseUp}\n                    onTouchEnd={this.handleTouchEnd}\n                    onDragOver={this.handleDragOver}\n                    onDragLeave={this.handleDragLeave}\n                    onDrop={this.handleDrop}\n                >\n                    <img\n                        style={{\n                            position: 'absolute',\n                            opacity: imageUrl && imageUrl.length > 0 ? 1 : 0.5,\n                            left: (imageFieldInfo.cx || 0) * ppmm,\n                            top: (imageFieldInfo.cy || 0) * ppmm,\n                            width: calculatedImageWidth,\n                            height: calculatedImageHeight,\n                        }}\n                        src={imageUrl || emptyImageImage}\n                        alt=\"\"\n                    />\n                </div>\n            </FieldController>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    let imageUrl: string | undefined = '';\n    if (props.imageFieldInfo && props.imageFieldInfo.type === 'image') {\n        if (props.imageFieldInfo.base64) {\n            imageUrl = 'data:image/svg+xml;base64,' + props.imageFieldInfo.base64;\n        } else {\n            imageUrl = props.imageFieldInfo && props.imageFieldInfo.url;\n        }\n    }\n\n    return {\n        imageUrl,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(ImageField);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DEFAULT_FONT, DEFAULT_FONT_SIZE, DEFAULT_LINE_HEIGHT } from '../constants';\nimport { Dispatch, cardSetActiveCardAndField, cardSetChangeText } from '../actions';\nimport { State } from '../reducers';\nimport { TextInfo } from '../types';\nimport style from './ContentEditable.module.css';\n\ninterface OwnProps {\n    cardId: string;\n    isOnBack: boolean;\n    fieldId: string;\n    align: string;\n    color: string;\n    fontFamily: string;\n    fontVariant: string;\n    fontSize: number;\n    lineHeight: number;\n}\n\ninterface StateProps {\n    isActive: boolean;\n    textValue: string;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass ContentEditable extends Component<Props> {\n    editDiv: React.RefObject<HTMLDivElement>;\n    currentText: string;\n    currentAlign: string;\n    currentColor: string;\n    currentFontFamily: string;\n    currentFontVariant: string;\n    currentFontSize: number;\n    currentLineHeight: number;\n    timeout: NodeJS.Timeout | null;\n    wasMoved: boolean;\n    x: number;\n    y: number;\n\n    constructor(props: Props) {\n        super(props);\n        this.editDiv = React.createRef();\n        this.currentText = '';\n        this.currentAlign = '';\n        this.currentColor = '';\n        this.currentFontFamily = '';\n        this.currentFontVariant = '';\n        this.currentFontSize = DEFAULT_FONT_SIZE;\n        this.currentLineHeight = DEFAULT_LINE_HEIGHT;\n        this.timeout = null;\n        this.wasMoved = false;\n        this.x = 0;\n        this.y = 0;\n    }\n\n    componentDidMount() {\n        const { isActive } = this.props;\n\n        if (!this.editDiv.current) return;\n\n        this.editDiv.current.addEventListener('mousedown', this.handleMouseDown);\n        this.editDiv.current.addEventListener('touchstart', this.handleTouchStart);\n        this.editDiv.current.addEventListener('mousemove', this.handleMouseMove);\n        this.editDiv.current.addEventListener('touchmove', this.handleTouchMove, { passive: false });\n        this.editDiv.current.addEventListener('mouseup', this.handleMouseUp);\n        this.editDiv.current.addEventListener('touchend', this.handleTouchEnd, { passive: false });\n\n        if (isActive) {\n            this.editDiv.current.focus();\n        }\n    }\n\n    shouldComponentUpdate(nextProps: Props) {\n        const shouldUpdate =\n            nextProps.textValue !== this.currentText ||\n            nextProps.align !== this.currentAlign ||\n            nextProps.color !== this.currentColor ||\n            nextProps.fontFamily !== this.currentFontFamily ||\n            nextProps.fontVariant !== this.currentFontVariant ||\n            nextProps.fontSize !== this.currentFontSize ||\n            nextProps.lineHeight !== this.currentLineHeight ||\n            this.props.isActive !== nextProps.isActive;\n\n        return shouldUpdate;\n    }\n\n    componentDidUpdate() {\n        const { textValue, align, color, fontFamily, fontVariant, fontSize, lineHeight } = this.props;\n        this.currentText = textValue;\n        this.currentAlign = align;\n        this.currentColor = color;\n        this.currentFontFamily = fontFamily;\n        this.currentFontVariant = fontVariant;\n        this.currentFontSize = fontSize;\n        this.currentLineHeight = lineHeight;\n    }\n\n    handleMouseDown = (event: MouseEvent) => {\n        this.handleStart(event);\n    };\n\n    handleTouchStart = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.x = event.changedTouches[0].clientX;\n        this.y = event.changedTouches[0].clientY;\n        this.handleStart(event);\n    };\n\n    handleStart = (event: Event) => {\n        const { isActive } = this.props;\n        if (isActive) {\n            event.stopPropagation();\n        } else {\n            this.wasMoved = false;\n            event.preventDefault();\n        }\n    };\n\n    handleMouseMove = (event: MouseEvent) => {\n        this.handleMove(event);\n    };\n\n    handleTouchMove = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        if (\n            Math.abs(event.changedTouches[0].clientX - this.x) > 3 ||\n            Math.abs(event.changedTouches[0].clientY - this.y) > 3\n        ) {\n            this.handleMove(event);\n        }\n    };\n\n    handleMove = (event: Event) => {\n        const { isActive } = this.props;\n        if (isActive) {\n            event.stopPropagation();\n        } else {\n            this.wasMoved = true;\n            event.preventDefault();\n        }\n    };\n\n    handleMouseUp = (event: MouseEvent) => {\n        this.handleComplete(event);\n    };\n\n    handleTouchEnd = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleComplete(event);\n    };\n\n    handleComplete = (event: Event) => {\n        const { dispatch, cardId, isOnBack, fieldId, isActive } = this.props;\n        if (isActive) {\n            event.stopPropagation();\n        } else if (!this.wasMoved) {\n            event.preventDefault();\n            dispatch(cardSetActiveCardAndField(cardId, isOnBack, fieldId));\n\n            if (!this.editDiv.current) return;\n            this.editDiv.current.focus();\n        }\n    };\n\n    onFocus = () => {\n        if (!this.editDiv.current) return;\n\n        const { textValue, align, color, fontFamily, fontVariant, fontSize } = this.props;\n        this.currentText = textValue;\n        this.currentAlign = align;\n        this.currentColor = color;\n        this.currentFontFamily = fontFamily;\n        this.currentFontVariant = fontVariant;\n        this.currentFontSize = fontSize;\n\n        const range = document.createRange();\n        range.selectNodeContents(this.editDiv.current);\n        range.collapse(false);\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    };\n\n    updateContent = (timeoutInMiliseconds: number) => {\n        if (!this.editDiv.current) return;\n        let value = this.editDiv.current.innerHTML;\n\n        let imgUrlIdx = -1;\n        while ((imgUrlIdx = value.indexOf('<img src=\"http')) !== -1) {\n            value = value.slice(0, imgUrlIdx + 10) + value.slice(value.indexOf('/', imgUrlIdx + 18));\n        }\n\n        if (value !== this.currentText) {\n            this.currentText = value;\n\n            if (this.timeout) {\n                clearTimeout(this.timeout);\n            }\n\n            this.timeout = setTimeout(() => {\n                const { dispatch, cardId, fieldId } = this.props;\n                const textInfo: TextInfo = { value };\n\n                dispatch(cardSetChangeText(cardId, fieldId, textInfo));\n            }, timeoutInMiliseconds);\n        }\n    };\n\n    handleBlur = () => {\n        this.updateContent(0);\n    };\n\n    handleInput = () => {\n        this.updateContent(500);\n    };\n\n    handlePaste = (event: React.ClipboardEvent) => {\n        function escapeHtml(unsafe: string) {\n            return unsafe\n                .replace(/&/g, '&amp;')\n                .replace(/</g, '&lt;')\n                .replace(/>/g, '&gt;')\n                .replace(/\"/g, '&quot;')\n                .replace(/'/g, '&#039;');\n        }\n\n        event.preventDefault();\n\n        let text = '';\n        text = event.clipboardData.getData('text/plain');\n\n        text = text\n            .split('\\n')\n            .map((s: string) => `<div>${escapeHtml(s)}</div>`)\n            .join('');\n        document.execCommand('insertHTML', false, text);\n    };\n\n    render() {\n        const { color, align, fontFamily, fontVariant, fontSize, lineHeight } = this.props;\n        const isItalic = fontVariant && fontVariant.indexOf('italic') !== -1;\n        const fontWeight = isItalic\n            ? fontVariant === 'italic'\n                ? 400\n                : parseInt(fontVariant.slice(0, 3))\n            : fontVariant === 'regular'\n            ? 400\n            : parseInt(fontVariant);\n\n        return (\n            <div\n                ref={this.editDiv}\n                className={style.content}\n                contentEditable={true}\n                onFocus={this.onFocus}\n                onBlur={this.handleBlur}\n                onInput={this.handleInput}\n                onPaste={this.handlePaste}\n                style={{\n                    width: '100%',\n                    height: '100%',\n                    textAlign: align === 'left' ? 'left' : align === 'right' ? 'right' : 'center',\n                    color: color,\n                    fontFamily: `'${fontFamily}'` || DEFAULT_FONT,\n                    fontStyle: isItalic ? 'italic' : 'normal',\n                    fontWeight,\n                    fontSize: `${fontSize}px`,\n                    outline: 'none',\n                    overflowWrap: 'break-word',\n                    lineHeight,\n                }}\n                dangerouslySetInnerHTML={{ __html: this.props.textValue }}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    let fieldInfo = state.cardset.present.fields[props.cardId][props.fieldId];\n    const textValue = fieldInfo.type === 'text' ? fieldInfo.value : '';\n    return {\n        textValue,\n        isActive:\n            props.cardId === state.cardset.present.activeCardId &&\n            props.fieldId === state.cardset.present.activeFieldId,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(ContentEditable);\n","import { connect } from 'react-redux';\nimport React, { PureComponent } from 'react';\n\nimport { DEFAULT_LINE_HEIGHT } from '../constants';\nimport { Dispatch, cardSetChangeFieldAngle, cardSetChangeFieldPosition, cardSetChangeFieldSize } from '../actions';\nimport { State } from '../reducers';\nimport { TextFieldInfo } from '../types';\nimport ContentEditable from './ContentEditable';\nimport FieldController from './FieldController';\nimport emptyTextImage from './text.svg';\n\ninterface OwnProps {\n    cardId: string;\n    isOnBack: boolean;\n    ppmm: number;\n    textFieldInfo: TextFieldInfo;\n    cardWidth: number;\n    cardHeight: number;\n}\n\ninterface StateProps {\n    text: string;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass TextField extends PureComponent<Props> {\n    handleDrag = (x: number, y: number, cardOnly: boolean, group: string) => {\n        const { dispatch, cardId, textFieldInfo, ppmm } = this.props;\n        dispatch(\n            cardSetChangeFieldPosition(cardOnly ? cardId : undefined, textFieldInfo.id, x / ppmm, y / ppmm, group),\n        );\n    };\n\n    handleResize = (width: number, height: number, cardOnly: boolean, group: string) => {\n        const { dispatch, textFieldInfo, cardId, ppmm } = this.props;\n        dispatch(\n            cardSetChangeFieldSize(cardOnly ? cardId : undefined, textFieldInfo.id, width / ppmm, height / ppmm, group),\n        );\n    };\n\n    handleRotate = (angle: number, cardOnly: boolean, group: string) => {\n        const { dispatch, textFieldInfo, cardId } = this.props;\n        dispatch(cardSetChangeFieldAngle(cardOnly ? cardId : undefined, textFieldInfo.id, angle, group));\n    };\n\n    render() {\n        const { textFieldInfo, text, ppmm, cardWidth, cardHeight } = this.props;\n\n        return (\n            <FieldController\n                cardId={this.props.cardId}\n                fieldId={textFieldInfo.id}\n                x={textFieldInfo.x * ppmm}\n                y={textFieldInfo.y * ppmm}\n                width={textFieldInfo.width * ppmm}\n                height={textFieldInfo.height * ppmm}\n                angle={textFieldInfo.angle}\n                onDrag={this.handleDrag}\n                onResize={this.handleResize}\n                onRotate={this.handleRotate}\n                cardWidth={cardWidth}\n                cardHeight={cardHeight}\n                ppmm={ppmm}\n            >\n                {text === '' && (\n                    <div\n                        style={{\n                            width: '100%',\n                            height: '100%',\n                            position: 'fixed',\n                            left: 0,\n                            top: 0,\n                            zIndex: -1,\n                            textAlign:\n                                textFieldInfo.align === 'left'\n                                    ? 'left'\n                                    : textFieldInfo.align === 'right'\n                                    ? 'right'\n                                    : 'center',\n                        }}\n                    >\n                        <img style={{ opacity: 0.5, width: 'auto', height: '100%' }} src={emptyTextImage} alt=\"\" />\n                    </div>\n                )}\n\n                <ContentEditable\n                    cardId={this.props.cardId}\n                    isOnBack={this.props.isOnBack}\n                    fieldId={textFieldInfo.id}\n                    align={textFieldInfo.align}\n                    color={textFieldInfo.color}\n                    fontFamily={textFieldInfo.fontFamily}\n                    fontVariant={textFieldInfo.fontVariant}\n                    fontSize={textFieldInfo.fontSize * ppmm}\n                    lineHeight={textFieldInfo.lineHeight || DEFAULT_LINE_HEIGHT}\n                />\n            </FieldController>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    let fieldInfo = state.cardset.present.fields[props.cardId][props.textFieldInfo.id];\n    let text = fieldInfo.type === 'text' ? fieldInfo.value : '';\n    return {\n        text,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(TextField);\n","import { connect } from 'react-redux';\nimport Measure from 'react-measure';\nimport React, { Component } from 'react';\n\nimport { BLEED_WIDTH } from '../constants';\nimport { CardType, IdsArray, FieldInfoCollection } from '../types';\nimport { Dispatch, cardSetActiveCardAndField } from '../actions';\nimport { State } from '../reducers';\nimport ImageField from './ImageField';\nimport TextField from './TextField';\nimport style from './Card.module.css';\n\ninterface OwnProps {\n    card: CardType;\n    isBack: boolean;\n}\n\ninterface StateProps {\n    cardFields: FieldInfoCollection;\n    fieldsIds: IdsArray;\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    isActiveCard: boolean;\n    zoom: number;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\ninterface LocalState {\n    dimensions: {\n        width: number;\n        height: number;\n    };\n}\n\nclass Card extends Component<Props, LocalState> {\n    state = {\n        dimensions: {\n            width: -1,\n            height: -1,\n        },\n    };\n\n    handleFieldDeselect = (event: React.MouseEvent | React.TouchEvent) => {\n        const { dispatch, card, isBack } = this.props;\n        const el = event.target as HTMLElement;\n        if (el.getAttribute('id') === `card_${card.id}`) {\n            dispatch(cardSetActiveCardAndField(card.id, isBack, undefined));\n            event.stopPropagation();\n        }\n    };\n\n    render() {\n        const { cardFields, fieldsIds, card, isBack, width, height, isActiveCard, zoom, isTwoSided } = this.props;\n        const widthWithBleeds = width + BLEED_WIDTH * 2;\n        const heightWithBleeds = height + BLEED_WIDTH * 2;\n\n        const ppmm = this.state.dimensions.width / widthWithBleeds;\n\n        return (\n            <div>\n                <Measure\n                    client\n                    onResize={contentRect => {\n                        if (!contentRect.client) {\n                            return;\n                        }\n                        this.setState({ dimensions: contentRect.client });\n                    }}\n                >\n                    {({ measureRef }) => (\n                        <div\n                            className={`${style.card} ${isActiveCard ? style.active : ''}`}\n                            id={`card_${card.id}`}\n                            ref={measureRef}\n                            style={{\n                                width: `${widthWithBleeds * zoom}mm`,\n                                height: `${heightWithBleeds * zoom}mm`,\n                                position: 'relative',\n                                overflow: 'hidden',\n                            }}\n                            onMouseDown={this.handleFieldDeselect}\n                            onTouchStart={this.handleFieldDeselect}\n                        >\n                            {fieldsIds.map(id => {\n                                if (!(id in cardFields)) {\n                                    return null;\n                                }\n                                const p = cardFields[id];\n                                if (p.type === 'image') {\n                                    return (\n                                        <ImageField\n                                            key={p.id}\n                                            cardId={card.id}\n                                            isOnBack={isBack}\n                                            imageFieldInfo={p}\n                                            ppmm={ppmm}\n                                            cardWidth={this.state.dimensions.width}\n                                            cardHeight={this.state.dimensions.height}\n                                        />\n                                    );\n                                } else if (p.type === 'text') {\n                                    return (\n                                        <TextField\n                                            key={p.id}\n                                            cardId={card.id}\n                                            isOnBack={isBack}\n                                            textFieldInfo={p}\n                                            ppmm={ppmm}\n                                            cardWidth={this.state.dimensions.width}\n                                            cardHeight={this.state.dimensions.height}\n                                        />\n                                    );\n                                }\n                                return null;\n                            })}\n\n                            <div\n                                style={{\n                                    position: 'absolute',\n                                    width: `${width * zoom}mm`,\n                                    height: `${height * zoom}mm`,\n                                    left: `${BLEED_WIDTH * zoom}mm`,\n                                    top: `${BLEED_WIDTH * zoom}mm`,\n                                    border: '1px dashed black',\n                                    borderRadius: '5mm',\n                                    pointerEvents: 'none',\n                                }}\n                            />\n\n                            <div\n                                style={{\n                                    position: 'absolute',\n                                    width: `${(width - BLEED_WIDTH * 2) * zoom}mm`,\n                                    height: `${(height - BLEED_WIDTH * 2) * zoom}mm`,\n                                    left: `${BLEED_WIDTH * 2 * zoom}mm`,\n                                    top: `${BLEED_WIDTH * 2 * zoom}mm`,\n                                    border: '1px dashed red',\n                                    borderRadius: '5mm',\n                                    pointerEvents: 'none',\n                                }}\n                            />\n                        </div>\n                    )}\n                </Measure>\n                {isTwoSided && (\n                    <div\n                        className={style.title}\n                        style={{\n                            width: `${widthWithBleeds * zoom}mm`,\n                            position: 'relative',\n                        }}\n                    >\n                        {isBack ? 'Back' : 'Front'}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    let cardFields = state.cardset.present.fields[props.card.id] || {};\n\n    return {\n        cardFields,\n        fieldsIds: state.cardset.present.fieldsAllIds.filter(\n            id => ((id in cardFields && cardFields[id].isOnBack) || false) === props.isBack,\n        ),\n        width: state.cardset.present.width,\n        height: state.cardset.present.height,\n        isTwoSided: state.cardset.present.isTwoSided,\n        isActiveCard:\n            state.cardset.present.activeCardId === props.card.id && state.cardset.present.isBackActive === props.isBack,\n        zoom: state.cardset.present.zoom,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(Card);\n","import React, { Component } from 'react';\nimport style from './EditableTitle.module.css';\n\ninterface Props {\n    title: string;\n    onChange: (newName: string) => void;\n}\n\nexport default class EditableTitle extends Component<Props> {\n    state = {\n        titleIsEdited: false,\n    };\n\n    handleClick = () => {\n        this.setState({ titleIsEdited: true });\n    };\n\n    handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.props.onChange(event.target.value);\n    };\n\n    handleBlur = () => {\n        this.setState({ titleIsEdited: false });\n    };\n\n    render() {\n        const { titleIsEdited } = this.state;\n        const { title } = this.props;\n\n        return (\n            <>\n                {!titleIsEdited && (\n                    <h1 className={style.input} onClick={this.handleClick}>\n                        {title}\n                    </h1>\n                )}\n                {titleIsEdited && (\n                    <input\n                        autoFocus\n                        type=\"text\"\n                        className={style.input}\n                        value={title}\n                        onChange={this.handleChange}\n                        onBlur={this.handleBlur}\n                    />\n                )}\n            </>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nimport style from './Loader.module.css';\n\ninterface Props {\n    fixed?: boolean;\n    small?: boolean;\n}\n\nexport default class Loader extends Component<Props> {\n    render() {\n        const { fixed, small } = this.props;\n\n        return (\n            <div className={`${style.loader} ${fixed ? style.fixed : style.relative} ${small ? style.small : ''}`}>\n                <div />\n                <div />\n            </div>\n        );\n    }\n}\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { CardType, DispatchProps, SidebarOwnProps } from '../types';\nimport { State } from '../reducers';\nimport { cardSetCloneCard, cardSetRemoveCard, cardSetUpdateCardCount } from '../actions';\nimport style from './SidebarDetails.module.css';\n\ninterface StateProps {\n    activeCard: CardType | null;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarDetails extends Component<Props> {\n    handleCloneCardClick = () => {\n        const { activeCard, dispatch } = this.props;\n        if (activeCard !== null) {\n            dispatch(cardSetCloneCard(activeCard));\n        }\n    };\n\n    handleRemoveCardClick = () => {\n        const { activeCard, dispatch } = this.props;\n        if (activeCard !== null) {\n            dispatch(cardSetRemoveCard(activeCard));\n        }\n    };\n\n    handleCountChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeCard, dispatch } = this.props;\n        if (activeCard !== null) {\n            dispatch(cardSetUpdateCardCount(activeCard, parseInt(event.target.value)));\n        }\n    };\n\n    render() {\n        const { activeCard, visible } = this.props;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'initial' : 'none' }}>\n                <button\n                    onClick={this.handleCloneCardClick}\n                    title=\"Clone card\"\n                    className={activeCard === null ? style.disabled : ''}\n                >\n                    <i className=\"material-icons\">file_copy</i>\n                </button>\n\n                <input\n                    type=\"number\"\n                    value={activeCard !== null ? activeCard.count.toString() : 0}\n                    onChange={this.handleCountChange}\n                    title=\"Number of card's copies\"\n                    className={activeCard === null ? style.disabled : ''}\n                />\n                <button\n                    onClick={this.handleRemoveCardClick}\n                    title=\"Remove card\"\n                    className={activeCard === null ? style.disabled : ''}\n                >\n                    <i className=\"material-icons\">delete</i>\n                </button>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        activeCard:\n            state.cardset.present.activeCardId !== undefined\n                ? state.cardset.present.cardsById[state.cardset.present.activeCardId]\n                : null,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarDetails);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { ACTIVITY_CREATING_PNG, State } from '../reducers';\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport { gameCreatePngRequest } from '../actions';\nimport style from './SidebarGeneratePng.module.css';\n\ninterface StateProps {\n    width: number;\n    height: number;\n    isCreatingPng: boolean;\n    activeCardset: string | null;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\ninterface LocalState {\n    dpi: number;\n}\n\nexport class SidebarGeneratePng extends Component<Props, LocalState> {\n    state: LocalState = {\n        dpi: 300,\n    };\n\n    handleDpiChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ dpi: parseInt(event.target.value) });\n    };\n\n    handleGenerate = () => {\n        const { dispatch, activeCardset } = this.props;\n        const { dpi } = this.state;\n\n        if (activeCardset !== null) {\n            dispatch(gameCreatePngRequest(dpi, 'cardsets', activeCardset));\n        }\n    };\n\n    render() {\n        const { visible, width, height, isCreatingPng } = this.props;\n        const { dpi } = this.state;\n\n        const calculatedWidth = Math.round(dpi * (width / 25.4 + 1 / 4));\n        const calculatedHeight = Math.round(dpi * (height / 25.4 + 1 / 4));\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'grid' : 'none' }}>\n                <div>Here you can generate your cards as PNG images.</div>\n                <label htmlFor=\"dpi\">DPI:</label>\n                <input\n                    id=\"dpi\"\n                    type=\"number\"\n                    min=\"1\"\n                    step=\"1\"\n                    onChange={this.handleDpiChange}\n                    className=\"form-control\"\n                    placeholder=\"DPI\"\n                    value={dpi}\n                />\n\n                <div>Width in pixels: {calculatedWidth}</div>\n                <div>Height in pixels: {calculatedHeight}</div>\n\n                <button disabled={isCreatingPng} onClick={this.handleGenerate}>\n                    Generate\n                </button>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        width: state.cardset.present.width,\n        height: state.cardset.present.height,\n        isCreatingPng: (state.games.activity & ACTIVITY_CREATING_PNG) === ACTIVITY_CREATING_PNG,\n        activeCardset: state.cardsets.active,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarGeneratePng);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { ACTIVITY_CREATING_PDF, State } from '../reducers';\nimport { Dispatch, gameCreatePdfRequest } from '../actions';\nimport KawaiiMessage, { Character } from './KawaiiMessage';\n\ninterface OwnProps {\n    type: string;\n    id: string;\n    withHelp?: boolean;\n}\n\ninterface StateProps {\n    isCreatingPdf: boolean;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = StateProps & DispatchProps & OwnProps;\n\ninterface LocalState {\n    pageWidth: number;\n    pageHeight: number;\n    topBottomMargin: number;\n    leftRightMargin: number;\n    verticalSpace: number;\n    horizontalSpace: number;\n    includeBleedingArea: boolean;\n    cutMarksForScissors: boolean;\n    cutMarksForGuillotine: boolean;\n    cutMarksInMarginArea: boolean;\n    cutMarksOnFrontSideOnly: boolean;\n}\n\nexport class PDFGenerator extends Component<Props, LocalState> {\n    state = {\n        pageWidth: 210,\n        pageHeight: 297,\n        topBottomMargin: 15,\n        leftRightMargin: 9,\n        verticalSpace: 0,\n        horizontalSpace: 0,\n        includeBleedingArea: false,\n        cutMarksForScissors: true,\n        cutMarksForGuillotine: false,\n        cutMarksInMarginArea: false,\n        cutMarksOnFrontSideOnly: false,\n    };\n\n    handleGeneratePdfClick = () => {\n        const { dispatch } = this.props;\n        const {\n            pageWidth,\n            pageHeight,\n            topBottomMargin,\n            leftRightMargin,\n            verticalSpace,\n            horizontalSpace,\n            includeBleedingArea,\n            cutMarksForScissors,\n            cutMarksForGuillotine,\n            cutMarksInMarginArea,\n            cutMarksOnFrontSideOnly,\n        } = this.state;\n\n        dispatch(\n            gameCreatePdfRequest(\n                this.props.type,\n                this.props.id,\n                pageWidth,\n                pageHeight,\n                topBottomMargin,\n                leftRightMargin,\n                verticalSpace,\n                horizontalSpace,\n                includeBleedingArea,\n                cutMarksForScissors,\n                cutMarksForGuillotine,\n                cutMarksInMarginArea,\n                cutMarksOnFrontSideOnly,\n            ),\n        );\n    };\n\n    handlePageWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ pageWidth: parseFloat(event.target.value) });\n    };\n\n    handlePageHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ pageHeight: parseFloat(event.target.value) });\n    };\n\n    handleTopBottomMarginChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ topBottomMargin: parseFloat(event.target.value) });\n    };\n\n    handleLeftRightMarginChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ leftRightMargin: parseFloat(event.target.value) });\n    };\n\n    handleVerticalSpaceChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ verticalSpace: parseFloat(event.target.value) });\n    };\n\n    handleHorizontalSpaceChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ horizontalSpace: parseFloat(event.target.value) });\n    };\n\n    handleIncludeBleedingAreaChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ includeBleedingArea: event.target.checked });\n    };\n\n    handleCutMarksForScissors = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ cutMarksForScissors: event.target.checked });\n    };\n\n    handleCutMarksForGuillotine = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ cutMarksForGuillotine: event.target.checked });\n    };\n\n    handleCutMarksInMarginArea = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ cutMarksInMarginArea: event.target.checked });\n    };\n\n    handleCutMarksOnFrontSideOnly = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ cutMarksOnFrontSideOnly: event.target.checked });\n    };\n\n    render() {\n        const { isCreatingPdf, withHelp } = this.props;\n\n        return (\n            <>\n                {withHelp && (\n                    <KawaiiMessage character={Character.Ghost} mood=\"excited\">\n                        <p>Here you can generate PDF.</p>\n                        <p>Hint 1: A4 page size is 210 mm x 297 mm. Letter page size is 215.9 x 279.4 mm.</p>\n                        <p>Hint 2: 1 inch is equal to 25.4 mm.</p>\n                    </KawaiiMessage>\n                )}\n\n                <div className=\"form\">\n                    <label htmlFor=\"page_width\">Page width (mm):</label>\n                    <input\n                        id=\"page_width\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handlePageWidthChange}\n                        placeholder=\"Page width\"\n                        value={this.state.pageWidth}\n                    />\n                    <label htmlFor=\"page_height\">Page height (mm):</label>\n                    <input\n                        id=\"page_height\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handlePageHeightChange}\n                        placeholder=\"Page Height\"\n                        value={this.state.pageHeight}\n                    />\n                    <label htmlFor=\"page_topbottom_margin\">Margin from top/bottom (mm):</label>\n                    <input\n                        id=\"page_topbottom_margin\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handleTopBottomMarginChange}\n                        placeholder=\"Top/Bottom margin\"\n                        value={this.state.topBottomMargin}\n                    />\n                    <label htmlFor=\"page_leftright_margin\">Margin from left/right (mm):</label>\n                    <input\n                        id=\"page_leftright_margin\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handleLeftRightMarginChange}\n                        placeholder=\"Left/Right margin\"\n                        value={this.state.leftRightMargin}\n                    />\n\n                    <label htmlFor=\"card_vertical_space\">Vertical space between cards (mm):</label>\n                    <input\n                        id=\"card_vertical_space\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handleVerticalSpaceChange}\n                        placeholder=\"Vertical space\"\n                        value={this.state.verticalSpace}\n                    />\n\n                    <label htmlFor=\"card_horizontal_space\">Horizontal space between cards (mm):</label>\n                    <input\n                        id=\"card_horizontal_space\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handleHorizontalSpaceChange}\n                        placeholder=\"Horizontal space\"\n                        value={this.state.horizontalSpace}\n                    />\n\n                    <label\n                        title=\"You might need this for Cardmogrifier or professional printing. Do\n                        not check this if all you are interested in is card (area inside black dashed rectangle).\"\n                    >\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.includeBleedingArea}\n                            onChange={this.handleIncludeBleedingAreaChange}\n                        />\n                        Generate with bleeding area.\n                    </label>\n\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.cutMarksForScissors}\n                            onChange={this.handleCutMarksForScissors}\n                        />\n                        Generate with cut marks for paper scissors.\n                    </label>\n\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.cutMarksForGuillotine}\n                            onChange={this.handleCutMarksForGuillotine}\n                        />\n                        Generate with cut marks for paper guillotine.\n                    </label>\n\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.cutMarksInMarginArea}\n                            onChange={this.handleCutMarksInMarginArea}\n                        />\n                        Generate with cut marks for paper guillotine in margin area.\n                    </label>\n\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.cutMarksOnFrontSideOnly}\n                            onChange={this.handleCutMarksOnFrontSideOnly}\n                        />\n                        Generate cut marks on front side only (useful for printing on both sides).\n                    </label>\n\n                    <button disabled={isCreatingPdf} onClick={this.handleGeneratePdfClick}>\n                        Generate PDF\n                    </button>\n                </div>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        isCreatingPdf: (state.games.activity & ACTIVITY_CREATING_PDF) === ACTIVITY_CREATING_PDF,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(PDFGenerator);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport { State } from '../reducers';\nimport PDFGenerator from './PDFGenerator';\nimport style from './SidebarGeneratePdf.module.css';\n\ninterface StateProps {\n    activeCardSetId: string | null;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarGeneratePdf extends Component<Props> {\n    render() {\n        const { activeCardSetId, visible } = this.props;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'grid' : 'none' }}>\n                {activeCardSetId !== null && <PDFGenerator type=\"cardsets\" id={activeCardSetId} />}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        activeCardSetId: state.cardsets.active,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarGeneratePdf);\n","import { ChromePicker, ColorResult } from 'react-color';\nimport React, { Component } from 'react';\n\ninterface Props {\n    onChange: (color: ColorResult) => void;\n    color: string;\n}\n\ninterface State {\n    displayColorPicker: boolean;\n}\n\nexport default class ColorButton extends Component<Props, State> {\n    state = {\n        displayColorPicker: false,\n    };\n\n    handleClick = () => {\n        this.setState({ displayColorPicker: !this.state.displayColorPicker });\n    };\n\n    handleClose = () => {\n        this.setState({ displayColorPicker: false });\n    };\n\n    handleChange = (color: ColorResult) => {\n        this.props.onChange(color);\n    };\n\n    render() {\n        const popover: React.CSSProperties = {\n            position: 'absolute',\n            zIndex: 2,\n        };\n        const cover: React.CSSProperties = {\n            position: 'fixed',\n            top: '0px',\n            right: '0px',\n            bottom: '0px',\n            left: '0px',\n        };\n        return (\n            <>\n                <button onClick={this.handleClick} title=\"Change color\">\n                    <i className=\"material-icons\">color_lens</i>\n                </button>\n                {this.state.displayColorPicker ? (\n                    <div style={popover}>\n                        <div style={cover} onClick={this.handleClose} />\n                        <ChromePicker color={this.props.color} disableAlpha={true} onChange={this.handleChange} />\n                    </div>\n                ) : null}\n            </>\n        );\n    }\n}\n","import { ColorResult } from 'react-color';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, IdsArray, ImageArray, SidebarOwnProps, FieldInfo, ImageInfo } from '../types';\nimport { State } from '../reducers';\nimport {\n    cardSetAddImageField,\n    cardSetChangeActiveFieldName,\n    cardSetChangeFitForActiveField,\n    cardSetChangeCropForActiveField,\n    cardSetChangeImage,\n    cardSetLockActiveField,\n    cardSetLowerActiveFieldToBottom,\n    cardSetRaiseActiveFieldToTop,\n    cardSetRemoveActiveField,\n    cardSetUnlockActiveField,\n    imageListRequest,\n    cardSetChangeApplyToAllCards,\n    cardSetRaiseActiveField,\n    cardSetLowerActiveField,\n} from '../actions';\nimport ColorButton from './ColorButton';\nimport style from './SidebarImage.module.css';\n\ninterface StateProps {\n    activeFieldInfo?: FieldInfo;\n    crop: boolean;\n    activeCardId?: string;\n    filter: string;\n    images: ImageArray;\n    cardsAllIds: IdsArray;\n    applyToAllCards: boolean;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\ninterface LocalState {\n    location: string;\n}\n\nexport class SidebarImage extends Component<Props, LocalState> {\n    state = {\n        location: 'all',\n    };\n\n    handleAddImageClick = () => {\n        const { dispatch } = this.props;\n        dispatch(cardSetAddImageField());\n    };\n\n    changeImage = (ii: ImageInfo) => {\n        const { activeCardId, activeFieldInfo, dispatch } = this.props;\n\n        if (activeFieldInfo) {\n            dispatch(cardSetChangeImage(activeCardId ? activeCardId : undefined, activeFieldInfo.id, ii));\n        }\n    };\n\n    handleRemoveImageFromFieldClick = () => {\n        const ii: ImageInfo = { url: undefined, base64: undefined };\n        this.changeImage(ii);\n    };\n\n    handleRemoveClick = () => {\n        const { activeFieldInfo, dispatch } = this.props;\n        if (activeFieldInfo !== undefined) {\n            dispatch(cardSetRemoveActiveField());\n        }\n    };\n\n    handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeFieldInfo, dispatch } = this.props;\n        const name = event.target.value.trim();\n        if (activeFieldInfo !== undefined) {\n            dispatch(cardSetChangeActiveFieldName(name));\n        }\n    };\n\n    handleFilterChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        const { location } = this.state;\n        const filter = event.target.value;\n        dispatch(imageListRequest(filter, location));\n    };\n\n    handleImageSelect = (imageName: string, width: number, height: number) => {\n        const { activeFieldInfo } = this.props;\n\n        if (activeFieldInfo !== undefined) {\n            const color = activeFieldInfo && activeFieldInfo.color;\n\n            const ii: ImageInfo = { url: `/api/imagefiles/${imageName}`, color, width, height, base64: undefined };\n            this.changeImage(ii);\n        }\n    };\n\n    handleRaise = (event: React.MouseEvent) => {\n        const { activeFieldInfo, dispatch } = this.props;\n        if (activeFieldInfo !== undefined) {\n            if (event.ctrlKey) {\n                dispatch(cardSetRaiseActiveFieldToTop());\n            } else {\n                dispatch(cardSetRaiseActiveField());\n            }\n        }\n    };\n\n    handleLower = (event: React.MouseEvent) => {\n        const { activeFieldInfo, dispatch } = this.props;\n        if (activeFieldInfo !== undefined) {\n            if (event.ctrlKey) {\n                dispatch(cardSetLowerActiveFieldToBottom());\n            } else {\n                dispatch(cardSetLowerActiveField());\n            }\n        }\n    };\n\n    handleLockField = () => {\n        const { activeFieldInfo, dispatch } = this.props;\n        if (activeFieldInfo !== undefined) {\n            dispatch(cardSetLockActiveField());\n        }\n    };\n\n    handleUnlockField = () => {\n        const { activeFieldInfo, dispatch } = this.props;\n        if (activeFieldInfo !== undefined) {\n            dispatch(cardSetUnlockActiveField());\n        }\n    };\n\n    handleFitOptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        const fit = event.target.value;\n\n        dispatch(cardSetChangeFitForActiveField(fit));\n    };\n\n    handleOptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { filter, dispatch } = this.props;\n        const location = event.target.value;\n\n        this.setState({ location });\n        dispatch(imageListRequest(filter, location));\n    };\n\n    handleColorChange = (color: ColorResult) => {\n        const ii: ImageInfo = { color: color.hex };\n        this.changeImage(ii);\n    };\n\n    handleRemoveColorClick = () => {\n        const ii: ImageInfo = { color: undefined };\n        this.changeImage(ii);\n    };\n\n    handleApplyToAllCardChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeApplyToAllCards(event.target.checked));\n    };\n\n    handleChangeCrop = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeFieldInfo, dispatch } = this.props;\n        if (activeFieldInfo !== undefined) {\n            dispatch(cardSetChangeCropForActiveField(event.target.checked));\n        }\n    };\n\n    render() {\n        const { activeFieldInfo, crop, filter, visible, applyToAllCards } = this.props;\n        const { location } = this.state;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'grid' : 'none' }}>\n                <div>\n                    <button onClick={this.handleAddImageClick} title=\"Add image field\">\n                        <i className=\"material-icons\">add_photo_alternate</i>\n                    </button>\n\n                    {activeFieldInfo !== undefined && (\n                        <>\n                            <button onClick={this.handleRaise} title=\"Raise image (with Ctrl - raise to top)\">\n                                <i className=\"material-icons\">arrow_upward</i>\n                            </button>\n                            <button onClick={this.handleLower} title=\"Lower image (with Ctrl - lower to bottom)\">\n                                <i className=\"material-icons\">arrow_downward</i>\n                            </button>\n                        </>\n                    )}\n\n                    {activeFieldInfo &&\n                        activeFieldInfo.type === 'image' &&\n                        (activeFieldInfo.url || activeFieldInfo.base64) && (\n                            <button onClick={this.handleRemoveImageFromFieldClick} title=\"Remove image from field\">\n                                <i className=\"material-icons\">remove_circle_outline</i>\n                            </button>\n                        )}\n\n                    {activeFieldInfo !== undefined && !activeFieldInfo.locked && (\n                        <button\n                            onClick={this.handleLockField}\n                            title=\"Lock image field. Locked field can't be dragged, rotated, resized and removed.\"\n                        >\n                            <i className=\"material-icons\">lock_open</i>\n                        </button>\n                    )}\n\n                    {activeFieldInfo !== undefined && activeFieldInfo.locked && (\n                        <button\n                            onClick={this.handleUnlockField}\n                            title=\"Unlock image field. Unlocked text field can be dragged, rotated, resized and removed.\"\n                        >\n                            <i className=\"material-icons\">lock</i>\n                        </button>\n                    )}\n\n                    <button\n                        className={activeFieldInfo === undefined || activeFieldInfo.locked ? style.disabled : ''}\n                        onClick={this.handleRemoveClick}\n                        title=\"Remove field\"\n                    >\n                        <i className=\"material-icons\">remove</i>\n                    </button>\n\n                    {activeFieldInfo !== undefined && (\n                        <input\n                            type=\"text\"\n                            value={activeFieldInfo.name || ''}\n                            placeholder={activeFieldInfo.id}\n                            onChange={this.handleNameChange}\n                            title=\"Change name of image field.\"\n                        />\n                    )}\n\n                    {activeFieldInfo && activeFieldInfo.type === 'image' && (\n                        <form>\n                            <div>\n                                Fit:\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        value=\"width\"\n                                        checked={!activeFieldInfo.fit || activeFieldInfo.fit === 'width'}\n                                        onChange={this.handleFitOptionChange}\n                                    />\n                                    width\n                                </label>\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        value=\"height\"\n                                        checked={activeFieldInfo.fit === 'height'}\n                                        onChange={this.handleFitOptionChange}\n                                    />\n                                    height\n                                </label>\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        value=\"stretch\"\n                                        checked={activeFieldInfo.fit === 'stretch'}\n                                        onChange={this.handleFitOptionChange}\n                                    />\n                                    stretch\n                                </label>\n                            </div>\n                        </form>\n                    )}\n                </div>\n\n                {activeFieldInfo && activeFieldInfo.type === 'image' && (\n                    <>\n                        <div>\n                            <label>\n                                <input type=\"checkbox\" checked={crop} onChange={this.handleChangeCrop} />\n                                Crop\n                            </label>\n                            <ColorButton\n                                color={(activeFieldInfo && activeFieldInfo.color) || '#FFFFFF'}\n                                onChange={this.handleColorChange}\n                            />\n                            {activeFieldInfo && activeFieldInfo.color && (\n                                <button onClick={this.handleRemoveColorClick} title=\"Remove color\">\n                                    <i className=\"material-icons\">remove_circle</i>\n                                </button>\n                            )}\n                            <label>\n                                <input\n                                    type=\"checkbox\"\n                                    checked={applyToAllCards}\n                                    onChange={this.handleApplyToAllCardChange}\n                                />\n                                Apply to all cards\n                            </label>\n                        </div>\n                    </>\n                )}\n                <div>\n                    <form>\n                        Source:\n                        <label>\n                            <input\n                                type=\"radio\"\n                                value=\"all\"\n                                checked={location === 'all'}\n                                onChange={this.handleOptionChange}\n                            />\n                            All\n                        </label>\n                        <label>\n                            <input\n                                type=\"radio\"\n                                value=\"user\"\n                                checked={location === 'user'}\n                                onChange={this.handleOptionChange}\n                            />\n                            User\n                        </label>\n                        <label>\n                            <input\n                                type=\"radio\"\n                                value=\"game\"\n                                checked={location === 'game'}\n                                onChange={this.handleOptionChange}\n                            />\n                            Game\n                        </label>\n                    </form>\n                </div>\n\n                <div>\n                    <input type=\"text\" placeholder=\"Search...\" value={filter} onChange={this.handleFilterChange} />\n                </div>\n                <div className={style.images}>\n                    {this.props.images.map(im => {\n                        return (\n                            <img\n                                key={im.id}\n                                src={`/api/imagefiles/${im.name}`}\n                                data-width={im.width}\n                                data-height={im.height}\n                                onClick={() => this.handleImageSelect(im.name, im.width, im.height)}\n                                alt={im.name}\n                            />\n                        );\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    const activeFieldInfo =\n        state.cardset.present.activeCardId !== undefined && state.cardset.present.activeFieldId !== undefined\n            ? state.cardset.present.fields[state.cardset.present.activeCardId][state.cardset.present.activeFieldId]\n            : undefined;\n\n    const activeCardId = state.cardset.present.activeCardId;\n\n    return {\n        activeFieldInfo,\n        crop: activeFieldInfo && activeFieldInfo.type === 'image' ? activeFieldInfo.crop || false : false,\n        activeCardId,\n        images: state.images.images,\n        filter: state.images.filter,\n        cardsAllIds: state.cardset.present.cardsAllIds,\n        applyToAllCards: state.cardset.present.applyToAllCards,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarImage);\n","import 'filepond/dist/filepond.min.css';\n\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport { connect } from 'react-redux';\nimport FilePondPluginFileValidateType from 'filepond-plugin-file-validate-type';\nimport Papa from 'papaparse';\nimport React, { Component } from 'react';\nimport md5 from 'md5';\nimport shortid from 'shortid';\n\nimport {\n    CardType,\n    CardsCollection,\n    DispatchProps,\n    IdsArray,\n    SidebarOwnProps,\n    FieldInfoByCardCollection,\n    FieldInfoCollection,\n} from '../types';\nimport { FPLoadCallback, FPRevertLoadCallback, cardSetImportData, messageDisplay } from '../actions';\nimport { State } from '../reducers';\nimport { downloadBlob } from '../utils';\nimport style from './SidebarImportExport.module.css';\n\nregisterPlugin(FilePondPluginFileValidateType);\n\ninterface StateProps {\n    activeGame: string | null;\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    cardsAllIds: IdsArray;\n    cardsById: CardsCollection;\n    fieldsAllIds: IdsArray;\n    fields: FieldInfoByCardCollection;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarImportExport extends Component<Props> {\n    prepareImagePaths = (fields: FieldInfoByCardCollection) => {\n        const { activeGame } = this.props;\n        if (activeGame === null) return fields;\n\n        const ending = '_' + md5(activeGame);\n\n        let preparedImages: FieldInfoByCardCollection = {};\n\n        for (const cardId in fields) {\n            let fieldsByCard = { ...fields[cardId] };\n            for (const fieldId in fieldsByCard) {\n                let imageInfo = { ...fieldsByCard[fieldId] };\n                if (imageInfo.type === 'image') {\n                    let url = imageInfo.url || '';\n                    if (url.endsWith(ending)) {\n                        url = url.replace(ending, '');\n                    } else {\n                        imageInfo.global = true;\n                    }\n\n                    imageInfo.url = url.replace('/api/imagefiles/', '');\n                }\n                fieldsByCard[fieldId] = imageInfo;\n            }\n            preparedImages[cardId] = fieldsByCard;\n        }\n\n        return preparedImages;\n    };\n\n    handleExportJson = () => {\n        const { width, height, isTwoSided, cardsAllIds, cardsById, fields, fieldsAllIds } = this.props;\n\n        const preparedFields = this.prepareImagePaths(fields);\n\n        const data = {\n            width,\n            height,\n            isTwoSided,\n            cardsAllIds,\n            cardsById,\n            fields: preparedFields,\n            fieldsAllIds,\n        };\n\n        let json = JSON.stringify(data, null, 4);\n        let blob = new Blob([json], { type: 'octet/stream' });\n        let url = window.URL.createObjectURL(blob);\n        downloadBlob(url, 'cardset.json');\n    };\n\n    handleExportCsv = () => {\n        const { cardsAllIds, cardsById, fields, fieldsAllIds } = this.props;\n\n        const preparedFields = this.prepareImagePaths(fields);\n\n        let csvData: (string | number)[][] = [];\n        let header = ['card_id', 'card_count'];\n        let usedNames: { [key: string]: boolean } = {};\n        for (const plId of fieldsAllIds) {\n            const fieldInfo = fields[cardsAllIds[0]][plId];\n            const name = fieldInfo.name || fieldInfo.id;\n            if (!(name in usedNames)) {\n                header.push(name);\n                if (fieldInfo.type === 'image') {\n                    header.push(`${name}_global`);\n                }\n                usedNames[name] = false;\n            }\n        }\n        csvData.push(header);\n\n        for (const cardId of cardsAllIds) {\n            let card = cardsById[cardId];\n\n            let dataRow: (string | number)[] = [cardId, card.count];\n\n            let written = { ...usedNames };\n            for (const fieldId of fieldsAllIds) {\n                const fieldIndo = fields[cardId][fieldId];\n                const name = fieldIndo.name || fieldIndo.id;\n\n                if (!written[name]) {\n                    let fieldInfo = preparedFields[cardId][fieldId];\n                    if (fieldInfo.type === 'text') {\n                        dataRow.push(fieldInfo.value);\n                    } else if (fieldInfo.type === 'image') {\n                        dataRow.push(fieldInfo.url || '');\n                        dataRow.push(fieldInfo.global ? 'y' : 'n');\n                    }\n                    written[name] = true;\n                }\n            }\n            csvData.push(dataRow);\n        }\n\n        let csv = Papa.unparse(csvData);\n        let blob = new Blob([csv], { type: 'octet/stream' });\n        let url = window.URL.createObjectURL(blob);\n        downloadBlob(url, 'cardset.csv');\n    };\n\n    handleProcess = (fieldName: string, file: File, metadata: { [propName: string]: string }, load: FPLoadCallback) => {\n        const { dispatch, activeGame, fields, fieldsAllIds, cardsById, cardsAllIds } = this.props;\n        if (activeGame === null) return;\n\n        var reader = new FileReader();\n        reader.readAsText(file, 'UTF-8');\n        reader.onload = function(e) {\n            if (e.target === null) return;\n\n            let data = null;\n            const ending = '_' + md5(activeGame);\n\n            if (file.type === 'application/json') {\n                // eslint-disable-next-line\n                data = JSON.parse((e.target as any).result);\n\n                for (const cardId in data.fields) {\n                    const cardFields: FieldInfoCollection = data.fields[cardId];\n                    for (const fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'image') {\n                            let isGlobal = fieldInfo.global || false;\n\n                            fieldInfo.url = `/api/imagefiles/${fieldInfo.url}${isGlobal ? '' : ending}`;\n                            delete fieldInfo.global;\n                        }\n                    }\n                }\n            } else if (file.type === 'text/csv') {\n                // eslint-disable-next-line\n                const csvData = Papa.parse((e.target as any).result, { header: true });\n\n                let newCardsAllIds: IdsArray = [];\n                let newCardsById: CardsCollection = {};\n                let newFields: FieldInfoByCardCollection = {};\n\n                for (const row of csvData.data) {\n                    const card: CardType = {\n                        id: row['card_id'] || shortid.generate(),\n                        count: row['card_count'] || 1,\n                    };\n\n                    newFields[card.id] = {\n                        ...fields[card.id in cardsById ? card.id : cardsAllIds[0]],\n                    };\n\n                    newCardsAllIds.push(card.id);\n                    newCardsById[card.id] = card;\n\n                    for (const fieldId of fieldsAllIds) {\n                        const fieldInfo = newFields[card.id][fieldId];\n                        const name = fieldInfo.name || fieldInfo.id;\n\n                        if (row[name]) {\n                            if (fieldInfo.type === 'image') {\n                                const isGlobal = row[`${name}_global`] === 'y';\n                                const url = row[name];\n\n                                newFields[card.id][fieldId] = {\n                                    ...fieldInfo,\n                                    url: `/api/imagefiles/${url}${isGlobal ? '' : ending}`,\n                                };\n                            } else if (fieldInfo.type === 'text') {\n                                newFields[card.id][fieldId] = {\n                                    ...fieldInfo,\n                                    value: row[name],\n                                };\n                            }\n                        }\n                    }\n                }\n\n                data = {\n                    cardsAllIds: newCardsAllIds,\n                    cardsById: newCardsById,\n                    fields: newFields,\n                };\n            }\n\n            if (data !== null) {\n                dispatch(cardSetImportData(data));\n            }\n        };\n        reader.onerror = function() {\n            dispatch(messageDisplay('error', 'Problem during import.'));\n        };\n\n        load(file.name);\n    };\n\n    handleRevert = (uniqueFileId: string, load: FPRevertLoadCallback) => {\n        load();\n    };\n\n    render() {\n        const { visible } = this.props;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'grid' : 'none' }}>\n                <div>\n                    Here you can export and import your card set data. JSON file contains templates of cards, text and\n                    image data by card, CSV file contains only text and image data by card.\n                </div>\n                <button onClick={this.handleExportJson}>\n                    <i className=\"material-icons\">cloud_download</i> Get JSON\n                </button>\n                <button onClick={this.handleExportCsv}>\n                    <i className=\"material-icons\">cloud_download</i> Get CSV\n                </button>\n\n                <div>Drag & Drop or browser for JSON or CSV file here:</div>\n\n                <FilePond\n                    server={{\n                        process: this.handleProcess,\n                        revert: this.handleRevert,\n                    }}\n                    acceptedFileTypes={['text/csv', 'application/json']}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        activeGame: state.games.active,\n        width: state.cardset.present.width,\n        height: state.cardset.present.height,\n        isTwoSided: state.cardset.present.isTwoSided,\n        cardsAllIds: state.cardset.present.cardsAllIds,\n        cardsById: state.cardset.present.cardsById,\n        fieldsAllIds: state.cardset.present.fieldsAllIds,\n        fields: state.cardset.present.fields,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarImportExport);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, IdsArray, SidebarOwnProps, FieldInfo, FieldInfoByCardCollection } from '../types';\nimport { State } from '../reducers';\nimport {\n    cardSetActiveCardAndField,\n    cardSetChangeActiveFieldName,\n    cardSetChangeFieldAngle,\n    cardSetChangeFieldSize,\n    cardSetLockActiveField,\n    cardSetChangeFieldPosition,\n    cardSetLowerActiveField,\n    cardSetLowerActiveFieldToBottom,\n    cardSetRaiseActiveField,\n    cardSetRaiseActiveFieldToTop,\n    cardSetUnlockActiveField,\n    cardSetChangeUnclickableForActiveField,\n} from '../actions';\nimport style from './SidebarMeasurements.module.css';\nimport shortid from 'shortid';\n\ninterface StateProps {\n    activeField?: FieldInfo;\n    activeCardId?: string;\n    fields: FieldInfoByCardCollection;\n    fieldsAllIds: IdsArray;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarMeasurements extends Component<Props> {\n    handlePrevField = () => {\n        const { activeCardId, activeField, fieldsAllIds, dispatch } = this.props;\n        if (fieldsAllIds.length === 0 || activeCardId === null) return;\n\n        let prevField = fieldsAllIds[fieldsAllIds.length - 1];\n        if (activeField !== undefined) {\n            let idx = fieldsAllIds.indexOf(activeField.id);\n            if (idx > 0) prevField = fieldsAllIds[idx - 1];\n        }\n\n        dispatch(cardSetActiveCardAndField(activeCardId, (activeField && activeField.isOnBack) || false, prevField));\n    };\n\n    handleNextField = () => {\n        const { activeCardId, activeField, fieldsAllIds, dispatch } = this.props;\n        if (fieldsAllIds.length === 0 || activeCardId === null) return;\n\n        let nextField = fieldsAllIds[0];\n        if (activeField !== undefined) {\n            let idx = fieldsAllIds.indexOf(activeField.id);\n            if (idx !== -1 && idx !== fieldsAllIds.length - 1) nextField = fieldsAllIds[idx + 1];\n        }\n\n        dispatch(cardSetActiveCardAndField(activeCardId, (activeField && activeField.isOnBack) || false, nextField));\n    };\n\n    handleRaise = (event: React.MouseEvent) => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            if (event.ctrlKey) {\n                dispatch(cardSetRaiseActiveFieldToTop());\n            } else {\n                dispatch(cardSetRaiseActiveField());\n            }\n        }\n    };\n\n    handleLower = (event: React.MouseEvent) => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            if (event.ctrlKey) {\n                dispatch(cardSetLowerActiveFieldToBottom());\n            } else {\n                dispatch(cardSetLowerActiveField());\n            }\n        }\n    };\n\n    handleLockField = () => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            dispatch(cardSetLockActiveField());\n        }\n    };\n\n    handleUnlockField = () => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            dispatch(cardSetUnlockActiveField());\n        }\n    };\n\n    handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        const name = event.target.value.trim();\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeActiveFieldName(name));\n        }\n    };\n\n    handleWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        const width = parseFloat(event.target.value);\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeFieldSize(undefined, activeField.id, width, activeField.height, shortid.generate()));\n        }\n    };\n\n    handleHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        const height = parseFloat(event.target.value);\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeFieldSize(undefined, activeField.id, activeField.width, height, shortid.generate()));\n        }\n    };\n\n    handleXChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        const x = parseFloat(event.target.value);\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeFieldPosition(undefined, activeField.id, x, activeField.y, shortid.generate()));\n        }\n    };\n\n    handleYChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        const y = parseFloat(event.target.value);\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeFieldPosition(undefined, activeField.id, activeField.x, y, shortid.generate()));\n        }\n    };\n\n    handleAngleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        const angle = (parseFloat(event.target.value) * Math.PI) / 180;\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeFieldAngle(undefined, activeField.id, angle, shortid.generate()));\n        }\n    };\n\n    handleChangeUnclickable = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeUnclickableForActiveField(event.target.checked));\n        }\n    };\n\n    render() {\n        const { activeCardId, activeField, visible } = this.props;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'initial' : 'none' }}>\n                {activeCardId !== undefined && (\n                    <>\n                        <button onClick={this.handlePrevField} title=\"Previous field\">\n                            <i className=\"material-icons\">arrow_back</i>\n                        </button>\n                        <button onClick={this.handleNextField} title=\"Next field\">\n                            <i className=\"material-icons\">arrow_forward</i>\n                        </button>\n                    </>\n                )}\n\n                {activeField !== undefined && (\n                    <>\n                        <button onClick={this.handleRaise} title=\"Raise text (with Ctrl - raise to top)\">\n                            <i className=\"material-icons\">arrow_upward</i>\n                        </button>\n                        <button onClick={this.handleLower} title=\"Lower text (with Ctrl - lower to bottom)\">\n                            <i className=\"material-icons\">arrow_downward</i>\n                        </button>\n                    </>\n                )}\n\n                {activeField !== undefined && !activeField.locked && (\n                    <button\n                        onClick={this.handleLockField}\n                        title=\"Lock field. Locked field can't be dragged, rotated, resized and removed.\"\n                    >\n                        <i className=\"material-icons\">lock_open</i>\n                    </button>\n                )}\n\n                {activeField !== undefined && activeField.locked && (\n                    <button\n                        onClick={this.handleUnlockField}\n                        title=\"Unlock field. Unlocked field can be dragged, rotated, resized and removed.\"\n                    >\n                        <i className=\"material-icons\">lock</i>\n                    </button>\n                )}\n\n                {activeField !== undefined && (\n                    <div>\n                        <label>\n                            Unclickable field:{' '}\n                            <input\n                                type=\"checkbox\"\n                                onChange={this.handleChangeUnclickable}\n                                className=\"form-control\"\n                                checked={activeField.unclickable ? true : false}\n                            />\n                        </label>\n                    </div>\n                )}\n\n                {activeField !== undefined && (\n                    <div>\n                        <label>\n                            Field name:\n                            <input\n                                type=\"text\"\n                                value={activeField.name || ''}\n                                placeholder={activeField.id}\n                                onChange={this.handleNameChange}\n                                title=\"Change name of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            Width:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={activeField.width}\n                                placeholder=\"Width\"\n                                onChange={this.handleWidthChange}\n                                title=\"Change width of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            Height:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={activeField.height}\n                                placeholder=\"Height\"\n                                onChange={this.handleHeightChange}\n                                title=\"Change width of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            X:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={activeField.x}\n                                placeholder=\"Width\"\n                                onChange={this.handleXChange}\n                                title=\"Change x coordinate of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            Y:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={activeField.y}\n                                placeholder=\"Height\"\n                                onChange={this.handleYChange}\n                                title=\"Change y coordinate of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            Angle:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={(activeField.angle * 180) / Math.PI}\n                                placeholder=\"Angle\"\n                                onChange={this.handleAngleChange}\n                                title=\"Change rotation angle of field.\"\n                            />\n                        </label>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    const activeField =\n        state.cardset.present.activeCardId !== undefined && state.cardset.present.activeFieldId !== undefined\n            ? state.cardset.present.fields[state.cardset.present.activeCardId][state.cardset.present.activeFieldId]\n            : undefined;\n\n    return {\n        activeField,\n        activeCardId: state.cardset.present.activeCardId,\n        fields: state.cardset.present.fields,\n        fieldsAllIds: state.cardset.present.fieldsAllIds,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarMeasurements);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport { State } from '../reducers';\nimport {\n    cardSetChangeHeight,\n    cardSetChangeIsTwoSided,\n    cardSetChangeSnappingDistance,\n    cardSetChangeWidth,\n    cardSetSetZoom,\n} from '../actions';\nimport style from './SidebarSettings.module.css';\n\ninterface StateProps {\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    snappingDistance: number;\n    zoom: number;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\ninterface LocalState {\n    maintainAspectRatio: boolean;\n    resizeContent: boolean;\n}\n\nexport class SidebarSettings extends Component<Props, LocalState> {\n    state: LocalState = {\n        maintainAspectRatio: true,\n        resizeContent: false,\n    };\n\n    handleWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        const { maintainAspectRatio, resizeContent } = this.state;\n        dispatch(cardSetChangeWidth(parseFloat(event.target.value), maintainAspectRatio, resizeContent));\n    };\n\n    handleHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        const { maintainAspectRatio, resizeContent } = this.state;\n        dispatch(cardSetChangeHeight(parseFloat(event.target.value), maintainAspectRatio, resizeContent));\n    };\n\n    handleIsTwoSidedChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeIsTwoSided(event.target.checked));\n    };\n\n    handleZoom = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetSetZoom(parseFloat(event.target.value)));\n    };\n\n    handleSnappingDistance = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeSnappingDistance(parseFloat(event.target.value)));\n    };\n\n    render() {\n        const { width, height, isTwoSided, snappingDistance, visible, zoom } = this.props;\n        const { maintainAspectRatio, resizeContent } = this.state;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'initial' : 'none' }}>\n                <label htmlFor=\"card_width\">Card width (mm):</label>\n                <input\n                    id=\"card_width\"\n                    type=\"number\"\n                    min=\"0\"\n                    step=\"0.1\"\n                    onChange={this.handleWidthChange}\n                    className=\"form-control\"\n                    placeholder=\"width\"\n                    value={width}\n                />\n                <label htmlFor=\"card_height\">Card height (mm):</label>\n                <input\n                    id=\"card_height\"\n                    type=\"number\"\n                    min=\"0\"\n                    step=\"0.1\"\n                    onChange={this.handleHeightChange}\n                    className=\"form-control\"\n                    placeholder=\"height\"\n                    value={height}\n                />\n                <div>\n                    <label>\n                        Maintain aspect ratio:{' '}\n                        <input\n                            type=\"checkbox\"\n                            onChange={() => {\n                                this.setState({ maintainAspectRatio: !maintainAspectRatio });\n                            }}\n                            className=\"form-control\"\n                            checked={maintainAspectRatio}\n                        />\n                    </label>\n                </div>\n\n                <div>\n                    <label>\n                        Resize content:{' '}\n                        <input\n                            type=\"checkbox\"\n                            onChange={() => {\n                                this.setState({ resizeContent: !resizeContent });\n                            }}\n                            className=\"form-control\"\n                            checked={resizeContent}\n                        />\n                    </label>\n                </div>\n\n                <label>\n                    Cards have two sides:{' '}\n                    <input\n                        type=\"checkbox\"\n                        onChange={this.handleIsTwoSidedChange}\n                        className=\"form-control\"\n                        checked={isTwoSided}\n                    />\n                </label>\n                <div>\n                    <label htmlFor=\"zoom\">Zoom (if you want to see details or big picture)</label>\n                    <input\n                        id=\"zoom\"\n                        type=\"number\"\n                        min=\"0.1\"\n                        step=\"0.1\"\n                        onChange={this.handleZoom}\n                        className=\"form-control\"\n                        placeholder=\"zoom\"\n                        value={zoom}\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"zoom\">Snapping distance in mm. 0 to disable.</label>\n                    <input\n                        id=\"zoom\"\n                        type=\"number\"\n                        min=\"0\"\n                        step=\"0.1\"\n                        onChange={this.handleSnappingDistance}\n                        className=\"form-control\"\n                        placeholder=\"Snapping distance\"\n                        value={snappingDistance}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        width: state.cardset.present.width,\n        height: state.cardset.present.height,\n        isTwoSided: state.cardset.present.isTwoSided,\n        snappingDistance: state.cardset.present.snappingDistance,\n        zoom: state.cardset.present.zoom,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarSettings);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport WebFont from 'webfontloader';\n\nimport { DEFAULT_LINE_HEIGHT } from '../constants';\nimport {\n    Dispatch,\n    cardSetChangeActiveTextFieldFontFamilyAndVariant,\n    cardSetChangeActiveTextFieldFontSize,\n    cardSetChangeActiveTextFieldFontVariant,\n    cardSetChangeActiveTextFieldLineHeight,\n} from '../actions';\nimport { State } from '../reducers';\nimport style from './FontSelector.module.css';\nimport webfonts from './webfonts.json';\n\ninterface WebFontsInfo {\n    [propName: string]: {\n        [propName: string]: string;\n    };\n}\n\ninterface FontOption {\n    value: string;\n    label: string;\n}\n\nconst options: FontOption[] = Object.keys(webfonts)\n    .sort()\n    .map(fi => ({ value: fi, label: fi }));\n\ninterface StateProps {\n    activeFont: string;\n    activeFontVariant: string;\n    activeFontSize: number;\n    activeLineHeight: number;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = StateProps & DispatchProps;\n\nclass FontSelector extends Component<Props> {\n    getFontStringForLoad = (family: string, variant: string) => {\n        let stringForLoad = family;\n        if (variant !== 'regular') {\n            stringForLoad += ':' + variant;\n        }\n        return stringForLoad;\n    };\n\n    handleChange = (selectedOption?: FontOption | FontOption[] | null) => {\n        if (!selectedOption) return;\n\n        const fontFamily = (selectedOption as FontOption).value;\n\n        let fontVariant = this.props.activeFontVariant;\n        const wf: WebFontsInfo = webfonts;\n        if (!(fontVariant in wf[fontFamily])) {\n            fontVariant = Object.keys(wf[fontFamily]).sort()[0];\n        }\n\n        WebFont.load({\n            google: {\n                families: [this.getFontStringForLoad(fontFamily, fontVariant)],\n            },\n            active: () => {\n                const { dispatch } = this.props;\n                dispatch(cardSetChangeActiveTextFieldFontFamilyAndVariant(fontFamily, fontVariant));\n            },\n        });\n    };\n\n    handleFontVariantChange = (selectedOption?: FontOption | FontOption[] | null) => {\n        if (!selectedOption) return;\n\n        const value = (selectedOption as FontOption).value;\n        WebFont.load({\n            google: {\n                families: [this.getFontStringForLoad(this.props.activeFont, value)],\n            },\n            active: () => {\n                const { dispatch } = this.props;\n                dispatch(cardSetChangeActiveTextFieldFontVariant(value));\n            },\n        });\n    };\n\n    handleFontSizeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeActiveTextFieldFontSize(parseFloat(event.target.value)));\n    };\n\n    handleLineHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeActiveTextFieldLineHeight(parseFloat(event.target.value)));\n    };\n\n    render() {\n        const selectedFontFamily = options.find(f => f.value === this.props.activeFont);\n\n        const fontVariantOptions: FontOption[] = Object.keys((webfonts as WebFontsInfo)[this.props.activeFont])\n            .sort()\n            .map(fv => ({ value: fv, label: fv }));\n\n        const selectedFontVariant = fontVariantOptions.find(f => f.value === this.props.activeFontVariant);\n\n        return (\n            <>\n                <input\n                    type=\"number\"\n                    value={this.props.activeFontSize}\n                    onChange={this.handleFontSizeChange}\n                    title=\"Font size\"\n                />\n                <Select\n                    className={style.fontFamily}\n                    value={selectedFontFamily}\n                    onChange={this.handleChange}\n                    options={options}\n                />\n                <Select\n                    className={style.fontVariant}\n                    value={selectedFontVariant}\n                    onChange={this.handleFontVariantChange}\n                    options={fontVariantOptions}\n                />\n                <input\n                    type=\"number\"\n                    value={this.props.activeLineHeight}\n                    onChange={this.handleLineHeightChange}\n                    title=\"Line height\"\n                    step=\"0.01\"\n                />\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    let activeFont = state.cardset.present.textSettings.fontFamily;\n    let activeFontVariant = state.cardset.present.textSettings.fontVariant;\n    let activeFontSize = state.cardset.present.textSettings.fontSize;\n    let activeLineHeight = state.cardset.present.textSettings.lineHeight || DEFAULT_LINE_HEIGHT;\n\n    return {\n        activeFont,\n        activeFontVariant,\n        activeFontSize,\n        activeLineHeight,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, {}, State>(mapStateToProps)(FontSelector);\n","import { ColorResult } from 'react-color';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, SidebarOwnProps, FieldInfo } from '../types';\nimport { State } from '../reducers';\nimport {\n    cardSetAddTextField,\n    cardSetChangeActiveFieldName,\n    cardSetChangeActiveTextFieldAlign,\n    cardSetLockActiveField,\n    cardSetLowerActiveFieldToBottom,\n    cardSetRaiseActiveFieldToTop,\n    cardSetRemoveActiveField,\n    cardSetUnlockActiveField,\n    cardSetChangeActiveTextFieldColor,\n    cardSetRaiseActiveField,\n    cardSetLowerActiveField,\n} from '../actions';\nimport ColorButton from './ColorButton';\nimport FontSelector from './FontSelector';\nimport style from './SidebarText.module.css';\n\ninterface StateProps {\n    activeField?: FieldInfo;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarText extends Component<Props> {\n    handleAddTextClick = () => {\n        const { dispatch } = this.props;\n        dispatch(cardSetAddTextField());\n    };\n\n    handleSetTextAlignLeft = () => {\n        const selection = window.getSelection();\n        const range = selection.getRangeAt(0);\n        if (selection.rangeCount === 1 && range.collapsed) {\n            const { dispatch } = this.props;\n            dispatch(cardSetChangeActiveTextFieldAlign('left'));\n        } else {\n            document.execCommand('justifyleft');\n        }\n    };\n\n    handleSetTextAlignCenter = () => {\n        const selection = window.getSelection();\n        const range = selection.getRangeAt(0);\n        if (selection.rangeCount === 1 && range.collapsed) {\n            const { dispatch } = this.props;\n            dispatch(cardSetChangeActiveTextFieldAlign('center'));\n        } else {\n            document.execCommand('justifycenter');\n        }\n    };\n\n    handleSetTextAlignRight = () => {\n        const selection = window.getSelection();\n        const range = selection.getRangeAt(0);\n        if (selection.rangeCount === 1 && range.collapsed) {\n            const { dispatch } = this.props;\n            dispatch(cardSetChangeActiveTextFieldAlign('right'));\n        } else {\n            document.execCommand('justifyright');\n        }\n    };\n\n    handleSetTextBold = () => {\n        document.execCommand('bold');\n    };\n\n    handleSetTextItalic = () => {\n        document.execCommand('italic');\n    };\n\n    handleRemoveClick = () => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            dispatch(cardSetRemoveActiveField());\n        }\n    };\n\n    handleRaise = (event: React.MouseEvent) => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            if (event.ctrlKey) {\n                dispatch(cardSetRaiseActiveFieldToTop());\n            } else {\n                dispatch(cardSetRaiseActiveField());\n            }\n        }\n    };\n\n    handleLower = (event: React.MouseEvent) => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            if (event.ctrlKey) {\n                dispatch(cardSetLowerActiveFieldToBottom());\n            } else {\n                dispatch(cardSetLowerActiveField());\n            }\n        }\n    };\n\n    handleLockField = () => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            dispatch(cardSetLockActiveField());\n        }\n    };\n\n    handleUnlockField = () => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            dispatch(cardSetUnlockActiveField());\n        }\n    };\n\n    handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        const name = event.target.value.trim();\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeActiveFieldName(name));\n        }\n    };\n\n    handleColorChange = (color: ColorResult) => {\n        const selection = window.getSelection();\n        const range = selection.getRangeAt(0);\n        if (selection.rangeCount === 1 && range.collapsed) {\n            const { dispatch } = this.props;\n            dispatch(cardSetChangeActiveTextFieldColor(color.hex));\n        } else {\n            document.execCommand('forecolor', false, color.hex);\n        }\n    };\n\n    render() {\n        const { activeField, visible } = this.props;\n\n        let color = '#000000';\n        if (activeField && activeField.type === 'text' && activeField.color) {\n            color = activeField.color;\n        }\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'initial' : 'none' }}>\n                <button onClick={this.handleAddTextClick} title=\"Add text field\">\n                    <i className=\"material-icons\">text_fields</i>\n                </button>\n                {activeField !== undefined && (\n                    <>\n                        <button onClick={this.handleRaise} title=\"Raise text (with Ctrl - raise to top)\">\n                            <i className=\"material-icons\">arrow_upward</i>\n                        </button>\n                        <button onClick={this.handleLower} title=\"Lower text (with Ctrl - lower to bottom)\">\n                            <i className=\"material-icons\">arrow_downward</i>\n                        </button>\n                    </>\n                )}\n\n                {activeField !== undefined && !activeField.locked && (\n                    <button\n                        onClick={this.handleLockField}\n                        title=\"Lock text field. Locked field can't be dragged, rotated, resized and removed.\"\n                    >\n                        <i className=\"material-icons\">lock_open</i>\n                    </button>\n                )}\n\n                {activeField !== undefined && activeField.locked && (\n                    <button\n                        onClick={this.handleUnlockField}\n                        title=\"Unlock text field. Unlocked text field can be dragged, rotated, resized and removed.\"\n                    >\n                        <i className=\"material-icons\">lock</i>\n                    </button>\n                )}\n\n                <button\n                    className={activeField === undefined || activeField.locked ? style.disabled : ''}\n                    onClick={this.handleRemoveClick}\n                    title=\"Remove field\"\n                >\n                    <i className=\"material-icons\">remove</i>\n                </button>\n\n                {activeField !== undefined && (\n                    <input\n                        type=\"text\"\n                        value={activeField.name || ''}\n                        placeholder={activeField.id}\n                        onChange={this.handleNameChange}\n                        title=\"Change name of text field.\"\n                    />\n                )}\n\n                <div>\n                    <button onClick={this.handleSetTextAlignLeft} title=\"Align text left\">\n                        <i className=\"material-icons\">format_align_left</i>\n                    </button>\n                    <button onClick={this.handleSetTextAlignCenter} title=\"Align text center\">\n                        <i className=\"material-icons\">format_align_center</i>\n                    </button>\n                    <button onClick={this.handleSetTextAlignRight} title=\"Align text right\">\n                        <i className=\"material-icons\">format_align_right</i>\n                    </button>\n                    <button onClick={this.handleSetTextBold} title=\"Makes selected text bold\">\n                        <i className=\"material-icons\">format_bold</i>\n                    </button>\n                    <button onClick={this.handleSetTextItalic} title=\"Makes selected text italic\">\n                        <i className=\"material-icons\">format_italic</i>\n                    </button>\n                    <ColorButton color={color} onChange={this.handleColorChange} />\n                    <FontSelector />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    const activeField =\n        state.cardset.present.activeCardId !== undefined && state.cardset.present.activeFieldId !== undefined\n            ? state.cardset.present.fields[state.cardset.present.activeCardId][state.cardset.present.activeFieldId]\n            : undefined;\n\n    return {\n        activeField,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarText);\n","import 'filepond/dist/filepond.min.css';\n\nimport './SidebarUpload.css';\n\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport { connect } from 'react-redux';\nimport FilePondPluginFileValidateSize from 'filepond-plugin-file-validate-size';\nimport FilePondPluginFileValidateType from 'filepond-plugin-file-validate-type';\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport {\n    FPAbortCallback,\n    FPErrorCallback,\n    FPLoadCallback,\n    FPProgressCallback,\n    FPRevertLoadCallback,\n    cardSetDeleteImage,\n    cardSetUploadImage,\n} from '../actions';\nimport { State } from '../reducers';\nimport style from './SidebarUpload.module.css';\n\nregisterPlugin(FilePondPluginFileValidateSize);\nregisterPlugin(FilePondPluginFileValidateType);\n\ninterface StateProps {\n    activeGame: string | null;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarUpload extends Component<Props> {\n    handleProcess = (\n        fieldName: string,\n        file: File,\n        metadata: { [propName: string]: string },\n        load: FPLoadCallback,\n        error: FPErrorCallback,\n        progress: FPProgressCallback,\n        abort: FPAbortCallback,\n    ) => {\n        const { dispatch, activeGame } = this.props;\n\n        if (activeGame === null) {\n            abort();\n            return;\n        }\n\n        let source = axios.CancelToken.source();\n\n        dispatch(cardSetUploadImage(activeGame, file, load, error, progress, abort, source.token));\n\n        return { abort: source.cancel };\n    };\n\n    handleRevert = (uniqueFileId: string, load: FPRevertLoadCallback, error: FPErrorCallback) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetDeleteImage(uniqueFileId, load, error));\n    };\n\n    render() {\n        const { visible } = this.props;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'grid' : 'none' }}>\n                <div>\n                    Uploaded imaged are kept for limited time. If they are deleted then simply re-upload them again.\n                </div>\n                <FilePond\n                    allowMultiple={true}\n                    server={{\n                        process: this.handleProcess,\n                        revert: this.handleRevert,\n                    }}\n                    acceptedFileTypes={['image/png', 'image/jpeg', 'image/svg+xml']}\n                    allowFileSizeValidation={true}\n                    maxFileSize=\"500KB\"\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        activeGame: state.games.active,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarUpload);\n","import { connect, ConnectedComponentClass } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport { SidebarState, cardSetSetSidebarState } from '../actions';\nimport { State } from '../reducers';\nimport SidebarDetails from './SidebarDetails';\nimport SidebarGeneratePng from './SidebarGeneratePng';\nimport SidebarGeneratePdf from './SidebarGeneratePdf';\nimport SidebarImage from './SidebarImage';\nimport SidebarImportExport from './SidebarImportExport';\nimport SidebarMeasurements from './SidebarMeasurements';\nimport SidebarSettings from './SidebarSettings';\nimport SidebarText from './SidebarText';\nimport SidebarUpload from './SidebarUpload';\nimport style from './Sidebar.module.css';\n\ninterface StateProps {\n    activeSidebar: SidebarState | null;\n}\n\ntype Props = StateProps & DispatchProps;\n\ninterface SidebarInfo {\n    state: SidebarState;\n    title: string;\n    icon: string;\n    component: ConnectedComponentClass<typeof Component, SidebarOwnProps>;\n}\n\nconst SIDEBARS: SidebarInfo[] = [\n    {\n        state: SidebarState.Settings,\n        title: 'Settings',\n        icon: 'settings',\n        component: SidebarSettings,\n    },\n    {\n        state: SidebarState.Details,\n        title: 'Details',\n        icon: 'details',\n        component: SidebarDetails,\n    },\n    {\n        state: SidebarState.Measurements,\n        title: 'Measurements',\n        icon: 'format_shapes',\n        component: SidebarMeasurements,\n    },\n    {\n        state: SidebarState.Image,\n        title: 'Images',\n        icon: 'photo',\n        component: SidebarImage,\n    },\n    {\n        state: SidebarState.Text,\n        title: 'Texts',\n        icon: 'text_fields',\n        component: SidebarText,\n    },\n    {\n        state: SidebarState.Upload,\n        title: 'Upload',\n        icon: 'cloud_upload',\n        component: SidebarUpload,\n    },\n    {\n        state: SidebarState.ImportExport,\n        title: 'Import/Export',\n        icon: 'import_export',\n        component: SidebarImportExport,\n    },\n    {\n        state: SidebarState.Png,\n        title: 'Generate as PNG',\n        icon: 'photo_library',\n        component: SidebarGeneratePng,\n    },\n    {\n        state: SidebarState.Pdf,\n        title: 'Generate as PDF',\n        icon: 'picture_as_pdf',\n        component: SidebarGeneratePdf,\n    },\n];\n\nexport class Sidebar extends Component<Props> {\n    handleSidebar = (state: SidebarState) => {\n        const { activeSidebar, dispatch } = this.props;\n        if (activeSidebar === state) {\n            dispatch(cardSetSetSidebarState(null));\n        } else {\n            dispatch(cardSetSetSidebarState(state));\n        }\n    };\n\n    render() {\n        const { activeSidebar } = this.props;\n        return (\n            <div className={style.sidebar}>\n                <div className={style.controls}>\n                    {SIDEBARS.map(sb => (\n                        <i\n                            key={sb.state}\n                            title={sb.title}\n                            className={`material-icons ${activeSidebar === sb.state ? style.active : ''}`}\n                            onClick={() => this.handleSidebar(sb.state)}\n                        >\n                            {sb.icon}\n                        </i>\n                    ))}\n                </div>\n                <div className={`${style.view} ${activeSidebar === null ? style.hidden : ''}`}>\n                    {SIDEBARS.map(sb => (\n                        <sb.component key={sb.state} visible={activeSidebar === sb.state} />\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        activeSidebar: state.cardset.present.activeSidebar,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, {}, State>(mapStateToProps)(Sidebar);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport shortid from 'shortid';\n\nimport { ACTIVITY_SELECTING, State } from '../reducers';\nimport { BLEED_WIDTH } from '../constants';\nimport { CardSetType, CardType, CardsCollection } from '../types';\nimport {\n    Dispatch,\n    cardSetActiveCardAndField,\n    cardSetCreateCard,\n    cardSetRenameRequest,\n    cardSetUndo,\n    cardSetRedo,\n} from '../actions';\nimport Card from './Card';\nimport EditableTitle from './EditableTitle';\nimport KawaiiMessage, { Character } from './KawaiiMessage';\nimport Loader from './Loader';\nimport Sidebar from './Sidebar';\nimport style from './CardSet.module.css';\n\ninterface StateProps {\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    isAuthenticated?: boolean;\n    cardsAllIds: string[];\n    cardsById: CardsCollection;\n    activity: number;\n    zoom: number;\n    activeCardSet: CardSetType | null;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = StateProps & DispatchProps;\n\ninterface LocalState {\n    pageWidth: number;\n    pageHeight: number;\n    topBottomMargin: number;\n    leftRightMargin: number;\n}\n\nexport class CardSet extends Component<Props, LocalState> {\n    state = {\n        pageWidth: 210,\n        pageHeight: 297,\n        topBottomMargin: 15,\n        leftRightMargin: 9,\n    };\n\n    componentDidMount() {\n        window.addEventListener('keydown', this.keyDown);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('keydown', this.keyDown);\n    }\n\n    keyDown = (event: KeyboardEvent) => {\n        const { dispatch } = this.props;\n\n        switch (event.key) {\n            case 'z':\n            case 'Z': {\n                if (event.ctrlKey && event.shiftKey) {\n                    dispatch(cardSetRedo());\n                } else if (event.ctrlKey) {\n                    dispatch(cardSetUndo());\n                }\n                break;\n            }\n            case 'y':\n            case 'Y': {\n                if (event.ctrlKey) {\n                    dispatch(cardSetRedo());\n                }\n                break;\n            }\n            // no default\n        }\n    };\n\n    handleCreateCardClick = () => {\n        const { dispatch } = this.props;\n\n        const newCard: CardType = { id: shortid.generate(), count: 1 };\n\n        dispatch(cardSetCreateCard(newCard));\n    };\n\n    handleClickOutsideOfCard = () => {\n        const { dispatch } = this.props;\n        dispatch(cardSetActiveCardAndField(undefined, false, undefined));\n    };\n\n    handleCardSetNameChange = (newName: string) => {\n        const { dispatch, activeCardSet } = this.props;\n        if (activeCardSet !== null) {\n            dispatch(cardSetRenameRequest(activeCardSet.id, newName));\n        }\n    };\n\n    render() {\n        const {\n            isAuthenticated,\n            cardsAllIds,\n            cardsById,\n            width,\n            height,\n            isTwoSided,\n            activity,\n            zoom,\n            activeCardSet,\n        } = this.props;\n\n        const widthWithBleeds = width + BLEED_WIDTH * 2;\n        const heightWithBleeds = height + BLEED_WIDTH * 2;\n\n        return (\n            isAuthenticated && (\n                <div>\n                    <KawaiiMessage character={Character.Ghost}>\n                        <p>Here you can design your cards.</p>\n                    </KawaiiMessage>\n\n                    {activeCardSet !== null && (\n                        <EditableTitle title={activeCardSet.name} onChange={this.handleCardSetNameChange} />\n                    )}\n\n                    <div className={style.cardsetview}>\n                        <div className={style.sidebar}>\n                            <Sidebar />\n                        </div>\n                        <div onMouseDown={this.handleClickOutsideOfCard} onTouchStart={this.handleClickOutsideOfCard}>\n                            {(activity & ACTIVITY_SELECTING) === ACTIVITY_SELECTING && <Loader />}\n                            <div className={style.cardset}>\n                                <ul\n                                    style={{\n                                        gridTemplateColumns: `repeat(auto-fill, minmax(${widthWithBleeds *\n                                            zoom}mm, 1fr))`,\n                                    }}\n                                >\n                                    {cardsAllIds &&\n                                        cardsAllIds.map(cardId => [\n                                            <li key={cardId}>\n                                                <Card card={cardsById[cardId]} isBack={false} />\n                                            </li>,\n                                            isTwoSided && (\n                                                <li key={`${cardId}back`}>\n                                                    <Card card={cardsById[cardId]} isBack={true} />\n                                                </li>\n                                            ),\n                                        ])}\n                                    <li key=\"newCard\">\n                                        <div\n                                            id=\"newCard\"\n                                            className={style.createCard}\n                                            style={{\n                                                width: `${widthWithBleeds * zoom}mm`,\n                                                height: `${heightWithBleeds * zoom}mm`,\n                                                position: 'relative',\n                                                overflow: 'hidden',\n                                            }}\n                                            onClick={this.handleCreateCardClick}\n                                        >\n                                            <div>\n                                                <i className=\"material-icons\">add</i>\n                                                <div>Add Card</div>\n                                            </div>\n                                        </div>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        activity: state.cardset.present.activity,\n        width: state.cardset.present.width,\n        height: state.cardset.present.height,\n        isTwoSided: state.cardset.present.isTwoSided,\n        zoom: state.cardset.present.zoom,\n        isAuthenticated: state.auth.isAuthenticated,\n        cardsAllIds: state.cardset.present.cardsAllIds,\n        cardsById: state.cardset.present.cardsById,\n        activeCardSet:\n            state.cardsets.active && state.cardsets.byId[state.cardsets.active]\n                ? state.cardsets.byId[state.cardsets.active]\n                : null,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, {}, State>(mapStateToProps)(CardSet);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport { Dispatch, cardSetSelectRequest } from './actions';\nimport { State } from './reducers';\nimport CardSet from './components/CardSet';\n\ninterface Props {\n    dispatch: Dispatch;\n    match: { params: { id: string } };\n    isAuthenticated?: boolean;\n}\n\nexport class CardSetPage extends Component<Props> {\n    componentDidMount() {\n        const { dispatch, match } = this.props;\n        dispatch(cardSetSelectRequest(match.params.id));\n    }\n\n    render() {\n        const { isAuthenticated } = this.props;\n        if (isAuthenticated) {\n            return <CardSet />;\n        } else if (isAuthenticated === false) {\n            return <Redirect to=\"/login\" />;\n        } else {\n            return null;\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => ({ isAuthenticated: state.auth.isAuthenticated });\n\nexport default connect(mapStateToProps)(CardSetPage);\n","import React, { Component } from 'react';\n\nexport default class ChangelogPage extends Component {\n    render() {\n        return (\n            <div>\n                <p>Here you can find list of future plans and what was implemented recently.</p>\n                <h2>Future plans</h2>\n                <ul>\n                    <li>Generating list of author's of icons if attribution is required.</li>\n                    <li>Card templates.</li>\n                    <li>Keyboard shortcuts.</li>\n                    <li>Possibility to order your games for printing from various printing providers.</li>\n                </ul>\n                <h2>2019-06-16</h2>\n                <ul>\n                    <li>Bug fix release.</li>\n                </ul>\n                <h2>2019-06-08</h2>\n                <ul>\n                    <li>\"Apply to all cards\" work on pan and zoom as well.</li>\n                    <li>UX on mobile devices (e.g. phones) improved.</li>\n                    <li>Other minor fixes.</li>\n                </ul>\n                <h2>2019-06-04</h2>\n                <ul>\n                    <li>Possibility to zoom in and pan imaged added.</li>\n                    <li>Undo/Redo using Ctrl+Z and Ctrl+Y (or Ctrl+Shift+Z).</li>\n                    <li>More small improvements and bug fixes.</li>\n                </ul>\n                <h2>2019-05-26</h2>\n                <ul>\n                    <li>\n                        Text rendering fixes.\n                    </li>\n                    <li>\n                        Card Sets and Games list are sorted alphabetically now.\n                    </li>\n                    <li>\n                        Image handling improvements.\n                    </li>\n                </ul>\n                <h2>2019-05-18</h2>\n                <ul>\n                    <li>\n                        PDF and PNG generation improvements.\n                    </li>\n                </ul>\n                <h2>2019-05-17</h2>\n                <ul>\n                    <li>\n                        PNG generation for card set or the whole game. This will benefit if you want to publish game via{' '}\n                        <a href=\"https://www.thegamecrafter.com/\">The Game Crafter</a>,{' '}\n                        <a href=\"makeplayingcards.com\">Make Playing Cards</a> or any other place.\n                    </li>\n                </ul>\n                <h2>2019-04-13</h2>\n                <ul>\n                    <li>Option to generate cutting marks on front side only.</li>\n                    <li>Guillotine cuttings marks on card edges.</li>\n                    <li>\n                        Field move limitation is removed because if drag field outside of view you can return it using\n                        custom positions and size controls.\n                    </li>\n                    <li>Drag and drop improvement.</li>\n                </ul>\n                <h2>2019-04-07</h2>\n                <ul>\n                    <li>Snapping implemented for move, rotation and resize operations.</li>\n                    <li>Image search changes and improvements.</li>\n                    <li>\n                        Drag&Drop support for images. Images can be dropped to text field as well but it is assumed that\n                        dropped images are square when generating PDF.\n                    </li>\n                    <li>Bold and Italic support in text added.</li>\n                    <li>Other minor fixes.</li>\n                </ul>\n                <h2>2019-03-22</h2>\n                <ul>\n                    <li>Two-sided cards.</li>\n                    <li>PDF generation for all the game.</li>\n                    <li>More PDF generation options added</li>\n                    <li>Change color of images (for SVG images only, e.g. try using with \"forms\" images).</li>\n                    <li>Game rename and delete</li>\n                    <li>Card Set rename and delete</li>\n                    <li>Text: line height support</li>\n                    <li>UI/UX improvements</li>\n                </ul>\n                <h2>2019-03-03</h2>\n                <ul>\n                    <li>Data import/export in JSON and CSV formats.</li>\n                    <li>\n                        Named fields. If multiple fields have the same name then by editing one you change value in all\n                        of them. As well named fields look better in data export/import.\n                    </li>\n                </ul>\n\n                <h2>2019-03-02</h2>\n                <ul>\n                    <li>You can upload your own images now. Images are limited.</li>\n                    <li>\n                        Image order support added. E.g.: now you can upload background image and lower it to the bottom.\n                    </li>\n                    <li>Progress indicators and user messages improvements.</li>\n                </ul>\n\n                <h2>2019-02-24</h2>\n                <ul>\n                    <li>Sidebar created for lighter, cleaner and faster UI.</li>\n                    <li>Zoom added to card set for more flexibility while viewing or editing.</li>\n                </ul>\n                <h2>2019-02-23</h2>\n                <ul>\n                    <li>Text rendering changed and should be working properly now.</li>\n                    <li>Crash with new card set fixed.</li>\n                    <li>Minor UI improvements.</li>\n                </ul>\n                <h2>2019-02-17</h2>\n                <p>Initial public version.</p>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\nimport { reportError } from './utils';\n\nwindow.addEventListener('error', function(evt: ErrorEvent) {\n    let error = evt.error;\n    reportError(error);\n});\n\ninterface Props {\n    children: React.ReactNode;\n}\n\ninterface State {\n    hasError: boolean;\n}\n\nexport default class ErrorBoundary extends Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    componentDidCatch(error: Error | null) {\n        this.setState({ hasError: true });\n        if (error !== null) {\n            reportError(error);\n        }\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return (\n                <KawaiiMessage character={Character.Browser} mood=\"ko\">\n                    Something unexpected has happened. Error report is sent to me by e-mail and I will review it as soon\n                    as possible. Still feel free to contact me by e-mail{' '}\n                    <a href=\"mailto:dalius@ffff.lt\">dalius@ffff.lt</a>.\n                </KawaiiMessage>\n            );\n        }\n        return this.props.children;\n    }\n}\n","import React, { Component } from 'react';\nimport style from './ConfirmedDelete.module.css';\n\ninterface Props {\n    question: string;\n    onDelete: () => void;\n}\n\nexport default class ConfirmedDelete extends Component<Props> {\n    state = {\n        deleteClicked: false,\n    };\n\n    handleRemove = () => {\n        this.setState({ deleteClicked: !this.state.deleteClicked });\n    };\n\n    handleYes = () => {\n        this.setState({ deleteClicked: false });\n        this.props.onDelete();\n    };\n\n    handleNo = () => {\n        this.setState({ deleteClicked: false });\n    };\n\n    render() {\n        const { deleteClicked } = this.state;\n        const { question } = this.props;\n\n        return (\n            <>\n                <i title=\"Remove\" className={`material-icons ${style.button}`} onClick={this.handleRemove}>\n                    remove_circle_outline\n                </i>{' '}\n                {deleteClicked && (\n                    <>\n                        {question}{' '}\n                        <span className={style.answer} onClick={this.handleYes}>\n                            Yes\n                        </span>{' '}\n                        /{' '}\n                        <span className={style.answer} onClick={this.handleNo}>\n                            No\n                        </span>\n                    </>\n                )}\n            </>\n        );\n    }\n}\n","import { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { CardSetsCollection, GameType, IdsArray } from '../types';\nimport {\n    Dispatch,\n    cardSetCreateRequest,\n    cardSetDeleteRequest,\n    gameRenameRequest,\n    messageDisplay,\n    gameCreatePngRequest,\n} from '../actions';\nimport { State, ACTIVITY_CREATING_PNG } from '../reducers';\nimport ConfirmedDelete from './ConfirmedDelete';\nimport EditableTitle from './EditableTitle';\nimport KawaiiMessage, { Character } from './KawaiiMessage';\nimport PDFGenerator from './PDFGenerator';\nimport style from './CardSets.module.css';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated?: boolean;\n    activeGame: GameType | null;\n    allIds: IdsArray;\n    byId: CardSetsCollection;\n    isCreatingPng: boolean;\n}\n\ninterface LocalState {\n    cardSetName: string;\n    width: number;\n    height: number;\n    dpi: number;\n}\n\nexport class CardSets extends Component<Props, LocalState> {\n    state: LocalState = {\n        cardSetName: '',\n        width: 63.5,\n        height: 88.9,\n        dpi: 300,\n    };\n\n    handleGameNameChange = (newName: string) => {\n        const { dispatch, activeGame } = this.props;\n        if (activeGame !== null) {\n            dispatch(gameRenameRequest(activeGame.id, newName));\n        }\n    };\n\n    handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ cardSetName: event.target.value });\n    };\n\n    handleWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ width: parseFloat(event.target.value) });\n    };\n\n    handleHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ height: parseFloat(event.target.value) });\n    };\n\n    handleCreateCardSetClick = () => {\n        const { dispatch, activeGame } = this.props;\n\n        if (activeGame === null) {\n            return;\n        }\n\n        const cardSetName = this.state.cardSetName.trim();\n\n        if (cardSetName) {\n            dispatch(cardSetCreateRequest(cardSetName, this.state.width, this.state.height, activeGame.id));\n        } else {\n            dispatch(messageDisplay('error', 'Card Set name should be non empty.'));\n        }\n    };\n\n    handleCardSetDelete = (cardSetId: string) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetDeleteRequest(cardSetId));\n    };\n\n    handleDpiChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ dpi: parseInt(event.target.value) });\n    };\n\n    handleGenerate = () => {\n        const { dispatch, activeGame } = this.props;\n        const { dpi } = this.state;\n\n        if (activeGame !== null) {\n            dispatch(gameCreatePngRequest(dpi, 'games', activeGame.id));\n        }\n    };\n\n    render() {\n        const { isAuthenticated, activeGame, allIds, byId, isCreatingPng } = this.props;\n        const { dpi } = this.state;\n\n        let cardsets = allIds.map(cardsetId => byId[cardsetId]);\n        cardsets.sort((a, b) => (a.name < b.name ? -1 : 1));\n\n        const cardsetItems = cardsets.map(cardset => (\n            <li key={cardset.id}>\n                <Link to={`/cardset/${cardset.id}`}>{cardset.name}</Link>{' '}\n                <ConfirmedDelete\n                    question=\"Do you really want to delete this card set?\"\n                    onDelete={() => this.handleCardSetDelete(cardset.id)}\n                />\n            </li>\n        ));\n\n        return (\n            isAuthenticated &&\n            activeGame !== null && (\n                <div className={style.cardsets}>\n                    <KawaiiMessage character={Character.Ghost}>\n                        Each game is made from card sets. Card set is collection of cards that share the same properties\n                        but have different text and images.\n                    </KawaiiMessage>\n\n                    <EditableTitle title={activeGame.name} onChange={this.handleGameNameChange} />\n\n                    <ul>{cardsetItems}</ul>\n\n                    <div className=\"form\">\n                        <label htmlFor=\"cardset_name\">Card Set name:</label>\n                        <input\n                            id=\"cardset_name\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            className=\"form-control\"\n                            placeholder=\"Card Set name\"\n                        />\n                        <label htmlFor=\"card_width\">Card width:</label>\n                        <input\n                            id=\"card_width\"\n                            type=\"number\"\n                            min=\"0\"\n                            step=\"0.1\"\n                            onChange={this.handleWidthChange}\n                            className=\"form-control\"\n                            placeholder=\"Card width\"\n                            value={this.state.width}\n                        />\n                        <label htmlFor=\"card_height\">Card height:</label>\n                        <input\n                            id=\"card_height\"\n                            type=\"number\"\n                            min=\"0\"\n                            step=\"0.1\"\n                            onChange={this.handleHeightChange}\n                            className=\"form-control\"\n                            placeholder=\"Card height\"\n                            value={this.state.height}\n                        />\n                        <button onClick={this.handleCreateCardSetClick}>Create Card Set</button>\n                    </div>\n\n                    <KawaiiMessage character={Character.Ghost} mood=\"excited\">\n                        Hint: Poker card size 63.5mm x 88.9mm. Bridge card size 57.15mm x 88.9mm. But you can have cards\n                        of any size.\n                    </KawaiiMessage>\n\n                    <PDFGenerator type=\"games\" id={activeGame.id} withHelp={true} />\n\n                    <div className=\"form\">\n                        Or you can generate PNG files for all the game:\n                        <label htmlFor=\"dpi\">DPI:</label>\n                        <input\n                            id=\"dpi\"\n                            type=\"number\"\n                            min=\"1\"\n                            step=\"1\"\n                            onChange={this.handleDpiChange}\n                            className=\"form-control\"\n                            placeholder=\"DPI\"\n                            value={dpi}\n                        />\n                        <button disabled={isCreatingPng} onClick={this.handleGenerate}>\n                            Generate PNG files\n                        </button>\n                    </div>\n                </div>\n            )\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        activeGame:\n            state.games.active && state.games.byId[state.games.active] ? state.games.byId[state.games.active] : null,\n        allIds: state.cardsets.allIds,\n        byId: state.cardsets.byId,\n        isCreatingPng: (state.games.activity & ACTIVITY_CREATING_PNG) === ACTIVITY_CREATING_PNG,\n    };\n};\n\nexport default connect(mapStateToProps)(CardSets);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport { Dispatch, gameSelectRequest } from './actions';\nimport { State } from './reducers';\nimport CardSets from './components/CardSets';\n\ninterface Props {\n    dispatch: Dispatch;\n    match: { params: { id: string } };\n    isAuthenticated?: boolean;\n}\n\nexport class GamePage extends Component<Props> {\n    componentDidMount() {\n        const { dispatch, match } = this.props;\n        dispatch(gameSelectRequest(match.params.id, true));\n    }\n\n    render() {\n        const { isAuthenticated } = this.props;\n        if (isAuthenticated) {\n            return <CardSets />;\n        } else if (isAuthenticated === false) {\n            return <Redirect to=\"/login\" />;\n        } else {\n            return null;\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => ({ isAuthenticated: state.auth.isAuthenticated });\n\nexport default connect(mapStateToProps)(GamePage);\n","import React, { Component } from 'react';\n\ninterface Props {\n    onLogin: (creds: { username: string; password: string }) => void;\n    onLoginFailure: (message: string) => void;\n}\n\ninterface LocalState {\n    username: string;\n    password: string;\n}\n\nexport default class Login extends Component<Props, LocalState> {\n    state = {\n        username: '',\n        password: '',\n    };\n\n    handleUsernameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ username: event.target.value });\n    };\n\n    handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ password: event.target.value });\n    };\n\n    handleSubmit = (event: React.FormEvent) => {\n        const username = this.state.username.trim();\n        const password = this.state.password.trim();\n        if (username && password) {\n            const creds = { username, password };\n            this.props.onLogin(creds);\n        } else {\n            this.props.onLoginFailure('Missing username and/or password.');\n        }\n        event.preventDefault();\n    };\n\n    render() {\n        return (\n            <div>\n                <form className=\"form\" onSubmit={this.handleSubmit}>\n                    <input\n                        type=\"text\"\n                        onChange={this.handleUsernameChange}\n                        className=\"form-control\"\n                        placeholder=\"Username\"\n                    />\n                    <input\n                        type=\"password\"\n                        onChange={this.handlePasswordChange}\n                        className=\"form-control\"\n                        placeholder=\"Password\"\n                    />\n                    <input type=\"submit\" value=\"Login\" />\n                </form>\n            </div>\n        );\n    }\n}\n","import { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, loginRequest, messageDisplay } from './actions';\nimport { State } from './reducers';\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\nimport Login from './components/Login';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated?: boolean;\n}\n\nexport class LoginPage extends Component<Props> {\n    render() {\n        const { dispatch, isAuthenticated } = this.props;\n\n        return (\n            <div className=\"App\">\n                {!isAuthenticated && (\n                    <>\n                        <KawaiiMessage character={Character.Ghost}>\n                            Please enter your credentials to login. If you don't have account yet then you can create\n                            one here: <a href=\"/signup\">Sign-up</a>.\n                        </KawaiiMessage>\n\n                        <Login\n                            onLogin={creds => dispatch(loginRequest(creds))}\n                            onLoginFailure={msg => dispatch(messageDisplay('error', msg))}\n                        />\n                    </>\n                )}\n                {isAuthenticated && <Redirect to=\"/\" />}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => ({ isAuthenticated: state.auth.isAuthenticated });\n\nexport default connect(mapStateToProps)(LoginPage);\n","import React, { Component } from 'react';\nimport style from './FeatureList.module.css';\nimport screenshot from './screenshot.png';\n\nexport default class FeatureList extends Component {\n    render() {\n        return (\n            <div className={style.features}>\n                <div>\n                    <img src={screenshot} alt=\"screenshot\" />\n                </div>\n                Card-a-mon has a lot of required functionality to create a card game from prototype to final product:\n                <ul>\n                    <li>\n                        <strong>Multiple card sets</strong> per game. Each with its own card size and other properties.\n                    </li>\n                    <li>\n                        <strong>Works on modern browsers</strong> both desktop and mobile.\n                    </li>\n                    <li>\n                        <strong>WYSIWYG</strong> editing of cards.\n                    </li>\n                    <li>\n                        <strong>Full images control</strong> - resize, rotation, zoom and panning. Use images from\n                        built-in collection of 8000+ images or upload your own.\n                    </li>\n                    <li>\n                        <strong>Powerful text editing</strong> - hundreds of fonts, font size, alignment, variants, line\n                        height, rotation and color control, possibility to embed images into text.\n                    </li>\n                    <li>\n                        <strong>Data export/import</strong> to/from JSON and CSV formats.\n                    </li>\n                    <li>\n                        <strong>PDF generation</strong> of full game (all card sets) with cuttings marks for print and\n                        play.\n                    </li>\n                    <li>\n                        <strong>PNG generation</strong> for printing in services like The Game Crafter, Make Playings\n                        Cards and others.\n                    </li>\n                </ul>\n            </div>\n        );\n    }\n}\n","import { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, gameCreateRequest, gameDeleteRequest, messageDisplay } from '../actions';\nimport { GamesCollection, IdsArray } from '../types';\nimport { State } from '../reducers';\nimport ConfirmedDelete from './ConfirmedDelete';\nimport KawaiiMessage, { Character } from './KawaiiMessage';\nimport FeatureList from './FeatureList';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated?: boolean;\n    allIds: IdsArray;\n    byId: GamesCollection;\n}\n\ninterface LocalState {\n    gameName: string;\n}\n\nexport class Games extends Component<Props, LocalState> {\n    state: LocalState = {\n        gameName: '',\n    };\n\n    handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ gameName: event.target.value });\n    };\n\n    handleCreateGameClick = () => {\n        const { dispatch } = this.props;\n\n        const gamename = this.state.gameName.trim();\n        if (gamename) {\n            dispatch(gameCreateRequest(gamename));\n        } else {\n            dispatch(messageDisplay('error', 'Game name should be non empty.'));\n        }\n    };\n\n    handleGameDelete = (gameId: string) => {\n        const { dispatch } = this.props;\n        dispatch(gameDeleteRequest(gameId));\n    };\n\n    render() {\n        const { isAuthenticated, allIds, byId } = this.props;\n\n        const games = allIds.map(gameId => byId[gameId]);\n        games.sort((a, b) => (a.name < b.name ? -1 : 1));\n\n        const gameItems = games.map(game => (\n            <li key={game.id}>\n                <Link to={`/game/${game.id}`}>{game.name}</Link>{' '}\n                <ConfirmedDelete\n                    question=\"Do you really want to delete this game?\"\n                    onDelete={() => this.handleGameDelete(game.id)}\n                />\n            </li>\n        ));\n\n        return (\n            isAuthenticated && (\n                <div>\n                    <KawaiiMessage character={Character.Ghost}>\n                        <FeatureList />\n                        {allIds.length === 0 && (\n                            <>Below you can create your games and see list of your games when you have some.</>\n                        )}\n                        {allIds.length > 0 && (\n                            <>Below you can see a list of your games or you can create even more games.</>\n                        )}\n                    </KawaiiMessage>\n\n                    <ul>{gameItems}</ul>\n                    <div className=\"form\">\n                        <label htmlFor=\"game_name\">Game name:</label>\n                        <input\n                            id=\"game_name\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            className=\"form-control\"\n                            placeholder=\"Game name\"\n                        />\n                        <button onClick={this.handleCreateGameClick}>Create Game</button>\n                    </div>\n                </div>\n            )\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        allIds: state.games.allIds,\n        byId: state.games.byId,\n    };\n};\n\nexport default connect(mapStateToProps)(Games);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { State } from './reducers';\nimport Games from './components/Games';\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\nimport FeatureList from './components/FeatureList';\n\ninterface Props {\n    isAuthenticated?: boolean;\n}\n\nexport class Main extends Component<Props> {\n    render() {\n        if (this.props.isAuthenticated) {\n            return <Games />;\n        } else {\n            return (\n                <KawaiiMessage character={Character.Ghost}>\n                    <FeatureList />\n                    Here you can create your own card game but you need to <a href=\"/login\">Login</a> or{' '}\n                    <a href=\"/signup\">Sign-up</a> first.\n                </KawaiiMessage>\n            );\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n    };\n};\n\nexport default connect(mapStateToProps)(Main);\n","import { State } from './reducers';\n\nexport const getActiveGame = (state: State) => (state.games.active ? state.games.byId[state.games.active] : null);\n\nexport const getActiveCardSet = (state: State) =>\n    state.cardsets.active ? state.cardsets.byId[state.cardsets.active] : null;\n","import React from 'react';\n\ninterface Props {\n    onLogout: () => void;\n}\n\nfunction Logout(props: Props) {\n    return (\n        <button onClick={() => props.onLogout()} className=\"btn btn-primary\">\n            Logout\n        </button>\n    );\n}\n\nexport default Logout;\n","import { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { CardSetType, GameType, MessageType } from '../types';\nimport { Dispatch, logoutRequest } from '../actions';\nimport { State } from '../reducers';\nimport { getActiveCardSet, getActiveGame } from '../selectors';\nimport Loader from './Loader';\nimport Logout from './Logout';\nimport style from './Navbar.module.css';\n\ninterface OwnProps {\n    isAuthenticated?: boolean;\n}\n\ninterface StateProps {\n    messages: MessageType[];\n    activeGame: GameType | null;\n    activeCardSet: CardSetType | null;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nexport class Navbar extends Component<Props> {\n    render() {\n        const { dispatch, isAuthenticated, messages, activeGame, activeCardSet } = this.props;\n\n        return (\n            <nav>\n                <div id=\"messages\" className={style.messages}>\n                    <ul>\n                        {messages.map(m => (\n                            <li key={m.id} className={m.type === 'error' ? style.error : style.info}>\n                                {m.type === 'error' && (\n                                    <>\n                                        <i className=\"material-icons\">error</i> {m.text}\n                                    </>\n                                )}\n                                {m.type === 'info' && (\n                                    <>\n                                        <i className=\"material-icons\">info</i> {m.text}\n                                    </>\n                                )}\n                                {m.type === 'progress' && (\n                                    <>\n                                        <Loader small={true} /> {m.text}\n                                    </>\n                                )}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n                <div>\n                    <h1 className={style.header}>\n                        <Link to=\"/\">CARD-A-MON</Link>\n                    </h1>\n                    <div>\n                        <ul className={style.menu}>\n                            <li>\n                                <Link to=\"/\">Main</Link>\n                            </li>\n                            {isAuthenticated && (\n                                <>\n                                    {activeGame && (\n                                        <li>\n                                            <Link to={`/game/${activeGame.id}`}>Game \"{activeGame.name}\"</Link>\n                                        </li>\n                                    )}\n                                    {activeCardSet && (\n                                        <li>\n                                            <Link to={`/cardset/${activeCardSet.id}`}>\n                                                Card Set \"{activeCardSet.name}\"\n                                            </Link>\n                                        </li>\n                                    )}\n                                </>\n                            )}\n                            <li>\n                                <Link to=\"/changelog\">Changelog</Link>\n                            </li>\n                            <li>\n                                <Link to=\"/about\">About</Link>\n                            </li>\n                            {isAuthenticated && (\n                                <li>\n                                    <Logout onLogout={() => dispatch(logoutRequest())} />\n                                </li>\n                            )}\n                            {!isAuthenticated && (\n                                <>\n                                    <li>\n                                        <Link to=\"/login\">Login</Link>\n                                    </li>\n                                    <li>\n                                        <Link to=\"/signup\">Sign-up</Link>\n                                    </li>\n                                </>\n                            )}\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        messages: state.message.messages,\n        activeGame: getActiveGame(state),\n        activeCardSet: getActiveCardSet(state),\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(Navbar);\n","import React, { Component } from 'react';\n\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\n\nexport default class NotFoundPage extends Component {\n    render() {\n        return (\n            <KawaiiMessage character={Character.Browser} mood=\"sad\">\n                There is nothing here.\n            </KawaiiMessage>\n        );\n    }\n}\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Credentials } from '../types';\nimport { Dispatch, messageDisplay } from '../actions';\n\ninterface Props {\n    dispatch: Dispatch;\n    onSignUp: (cred: Credentials) => void;\n}\n\nexport class SignUp extends Component<Props> {\n    state = {\n        username: '',\n        password: '',\n        passwordRepeat: '',\n    };\n\n    handleSubmit(event: React.FormEvent) {\n        const { dispatch, onSignUp } = this.props;\n\n        if (this.state.password !== this.state.passwordRepeat) {\n            dispatch(messageDisplay('error', 'Passwords do not match.'));\n        } else {\n            const creds = {\n                username: this.state.username.trim(),\n                password: this.state.password.trim(),\n            };\n            onSignUp(creds);\n        }\n\n        event.preventDefault();\n    }\n\n    handleUsernameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ username: event.target.value });\n    };\n\n    handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ password: event.target.value });\n    };\n\n    handlePasswordRepeatChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ passwordRepeat: event.target.value });\n    };\n\n    render() {\n        return (\n            <div>\n                <form className=\"form\" onSubmit={event => this.handleSubmit(event)}>\n                    <input\n                        type=\"text\"\n                        onChange={this.handleUsernameChange}\n                        className=\"form-control\"\n                        placeholder=\"Username\"\n                    />\n                    <input\n                        type=\"password\"\n                        onChange={this.handlePasswordChange}\n                        className=\"form-control\"\n                        placeholder=\"Password\"\n                    />\n                    <input\n                        type=\"password\"\n                        onChange={this.handlePasswordRepeatChange}\n                        className=\"form-control\"\n                        placeholder=\"Repeat password here\"\n                    />\n                    <input type=\"submit\" value=\"Sign Up\" />\n                </form>\n            </div>\n        );\n    }\n}\nexport default connect()(SignUp);\n","import { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, signupRequest } from './actions';\nimport { State } from './reducers';\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\nimport SignUp from './components/SignUp';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated?: boolean;\n}\n\nexport class SignUpPage extends Component<Props> {\n    render() {\n        const { dispatch, isAuthenticated } = this.props;\n\n        return (\n            <div className=\"App\">\n                {!isAuthenticated && (\n                    <>\n                        <KawaiiMessage character={Character.Ghost}>\n                            Create your user here. Instead of user name you can use your e-mail. If you forget your\n                            password then you can send me e-mail (I will not send you any e-mails without your consent).\n                            If you use regular user name and forget your password then you will not be able to access\n                            your account.\n                        </KawaiiMessage>\n\n                        <SignUp onSignUp={creds => dispatch(signupRequest(creds))} />\n                    </>\n                )}\n                {isAuthenticated && <Redirect to=\"/\" />}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => ({ isAuthenticated: state.auth.isAuthenticated });\n\nexport default connect(mapStateToProps)(SignUpPage);\n","import './App.css';\n\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport { isIE } from 'react-device-detect';\n\nimport { Dispatch, initRequest } from './actions';\nimport { State } from './reducers';\nimport AboutPage from './AboutPage';\nimport CardSetPage from './CardSetPage';\nimport ChangelogPage from './ChangelogPage';\nimport ErrorBoundry from './ErrorBoundry';\nimport GamePage from './GamePage';\nimport LoginPage from './LoginPage';\nimport Main from './Main';\nimport Navbar from './components/Navbar';\nimport NotFoundPage from './NotFoundPage';\nimport SignUpPage from './SignUpPage';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated?: boolean;\n}\n\nexport class App extends Component<Props> {\n    componentDidMount() {\n        this.props.dispatch(initRequest());\n    }\n\n    render() {\n        if (isIE) return <div> IE is not supported. Download Chrome/Opera/Firefox </div>;\n        const { isAuthenticated } = this.props;\n        return (\n            <Router>\n                <div className=\"App\">\n                    <ErrorBoundry>\n                        <Navbar isAuthenticated={isAuthenticated} />\n                        <Switch>\n                            <Route exact path=\"/\" component={Main} />\n                            <Route exact path=\"/login\" component={LoginPage} />\n                            <Route exact path=\"/signup\" component={SignUpPage} />\n                            <Route exact path=\"/game/:id\" component={GamePage} />\n                            <Route exact path=\"/cardset/:id\" component={CardSetPage} />\n                            <Route exact path=\"/changelog\" component={ChangelogPage} />\n                            <Route exact path=\"/about\" component={AboutPage} />\n                            <Route component={NotFoundPage} />\n                        </Switch>\n                        <div className=\"App-footer\">Dalius Dobravolskas &copy; {new Date().getFullYear()}</div>\n                    </ErrorBoundry>\n                </div>\n            </Router>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    const { auth } = state;\n    const { isAuthenticated } = auth;\n\n    return {\n        isAuthenticated,\n    };\n};\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ninterface Config {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import './index.css';\n\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { createAppStore } from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createAppStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__3wMPS\",\"controls\":\"Sidebar_controls__3VVbM\",\"active\":\"Sidebar_active__4ldTH\",\"view\":\"Sidebar_view__-0BeZ\",\"hidden\":\"Sidebar_hidden__3xh5q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Navbar_header__FZp4U\",\"menu\":\"Navbar_menu__1JWvN\",\"messages\":\"Navbar_messages__h_dLG\",\"error\":\"Navbar_error__3urZl\",\"info\":\"Navbar_info__1h4Zc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fixed\":\"Loader_fixed__3q8O9\",\"relative\":\"Loader_relative__1lapZ\",\"loader\":\"Loader_loader__1ZCGC\",\"small\":\"Loader_small__3TZen\",\"loader-small\":\"Loader_loader-small__3PPAu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarDetails_view__29V31\",\"disabled\":\"SidebarDetails_disabled__1htJF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardset\":\"CardSet_cardset__21qjI\",\"cardsetview\":\"CardSet_cardsetview__1rqd1\",\"sidebar\":\"CardSet_sidebar__3y8_T\",\"createCard\":\"CardSet_createCard__2bOiw\"};","module.exports = __webpack_public_path__ + \"static/media/pan.ff303319.svg\";","module.exports = __webpack_public_path__ + \"static/media/zoom.2d0b374b.svg\";","module.exports = __webpack_public_path__ + \"static/media/resize.c1fb8dc3.svg\";"],"sourceRoot":""}