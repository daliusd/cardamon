{"version":3,"sources":["components/EditableTitle.module.css","components/FontSelector.module.css","components/SidebarText.module.css","components/image.svg","components/ContentEditable.module.css","components/text.svg","components/SidebarMeasurements.module.css","components/SidebarSettings.module.css","components/SidebarUpload.module.css","actions.ts","constants.ts","requests.ts","utils.ts","workerController.ts","storage.ts","fontLoader.tsx","sagas.ts","reducers.ts","components/KawaiiMessage.tsx","AboutPage.tsx","components/FieldController.tsx","components/ImageField.tsx","components/ContentEditable.tsx","components/TextField.tsx","components/Card.tsx","components/EditableTitle.tsx","components/Loader.tsx","components/PDFGenerator.tsx","components/SidebarDetails.tsx","components/ColorButton.tsx","components/SidebarImage.tsx","components/SidebarImportExport.tsx","components/SidebarMeasurements.tsx","components/SidebarSettings.tsx","components/FontSelector.tsx","components/SidebarText.tsx","components/SidebarUpload.tsx","components/Sidebar.tsx","components/CardSet.tsx","CardSetPage.tsx","ChangelogPage.tsx","ErrorBoundry.tsx","components/ConfirmedDelete.tsx","components/CardSets.tsx","GamePage.tsx","components/Login.tsx","LoginPage.tsx","components/Games.tsx","Main.tsx","selectors.ts","components/Logout.tsx","components/Navbar.tsx","NotFoundPage.tsx","components/SignUp.tsx","SignUpPage.tsx","App.tsx","serviceWorker.ts","index.tsx","store.ts","components/FieldController.module.css","components/Sidebar.module.css","components/Navbar.module.css","components/Loader.module.css","components/SidebarDetails.module.css","components/CardSet.module.css","components/resize.svg","components/rotate.svg","components/Card.module.css","components/SidebarImage.module.css","components/ConfirmedDelete.module.css"],"names":["module","exports","input","fontFamily","fontVariant","view","disabled","__webpack_require__","p","content","SidebarState","DEFAULT_FONT_SIZE","DEFAULT_LINE_HEIGHT","BLEED_WIDTH","INIT_REQUEST","MESSAGE_DISPLAY","MESSAGE_HIDE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_REQUEST","LOGOUT_FAILURE","LOGOUT_SUCCESS","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_FAILURE","GAME_CREATE_REQUEST","GAME_CREATE_SUCCESS","GAME_CREATE_FAILURE","GAME_DELETE_REQUEST","GAME_RENAME_REQUEST","GAME_LIST_SUCCESS","GAME_LIST_REQUEST","GAME_LIST_FAILURE","GAME_LIST_RESET","GAME_SELECT_REQUEST","GAME_SELECT_SUCCESS","GAME_SELECT_FAILURE","GAME_CREATE_PDF_REQUEST","GAME_CREATE_PDF_SUCCESS","GAME_CREATE_PDF_FAILURE","CARDSET_CREATE_REQUEST","CARDSET_CREATE_SUCCESS","CARDSET_CREATE_FAILURE","CARDSET_DELETE_REQUEST","CARDSET_RENAME_REQUEST","CARDSET_IMPORT_DATA","CARDSET_LIST_SUCCESS","CARDSET_LIST_REQUEST","CARDSET_LIST_FAILURE","CARDSET_LIST_RESET","CARDSET_SELECT_REQUEST","CARDSET_SELECT_SUCCESS","CARDSET_CREATE_CARD","CARDSET_CLONE_CARD","CARDSET_REMOVE_CARD","CARDSET_UPDATE_CARD_COUNT","CARDSET_ADD_TEXT_PLACEHOLDER","CARDSET_ADD_IMAGE_PLACEHOLDER","CARDSET_CHANGE_ACTIVE_PLACEHOLDER_NAME","CARDSET_REMOVE_ACTIVE_PLACEHOLDER","CARDSET_RAISE_ACTIVE_PLACEHOLDER_TO_TOP","CARDSET_LOWER_ACTIVE_PLACEHOLDER_TO_BOTTOM","CARDSET_LOCK_ACTIVE_PLACEHOLDER","CARDSET_UNLOCK_ACTIVE_PLACEHOLDER","CARDSET_CHANGE_FIT_FOR_ACTIVE_PLACEHOLDER","CARDSET_CHANGE_WIDTH","CARDSET_CHANGE_HEIGHT","CARDSET_CHANGE_IS_TWO_SIDED","CARDSET_CHANGE_SNAPPING_DISTANCE","CARDSET_CHANGE_PLACEHOLDER_POSITION","CARDSET_CHANGE_PLACEHOLDER_SIZE","CARDSET_CHANGE_PLACEHOLDER_ANGLE","CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_ALIGN","CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_COLOR","CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY","CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_VARIANT","CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY_AND_VARIANT","CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_SIZE","CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_LINE_HEIGHT","CARDSET_CHANGE_TEXT","CARDSET_CHANGE_IMAGE","CARDSET_CHANGE_IMAGE_BASE64","CARDSET_SET_ACTIVE_CARD_AND_PLACEHOLDER","CARDSET_UPDATE_DATA_REQUEST","CARDSET_UPDATE_DATA_SUCCESS","CARDSET_UPDATE_DATA_FAILURE","CARDSET_SELECT_FAILURE","CARDSET_SET_SIDEBAR_STATE","CARDSET_SET_ZOOM","CARDSET_UPLOAD_IMAGE","CARDSET_UPLOAD_IMAGE_SUCCESS","CARDSET_UPLOAD_IMAGE_FAILURE","CARDSET_DELETE_IMAGE","IMAGE_LIST_REQUEST","IMAGE_LIST_SUCCESS","IMAGE_LIST_FAILURE","messageDisplay","type","text","id","message","shortid","generate","gameCreateRequest","gamename","gameDeleteRequest","gameId","gameRenameRequest","newName","gameSelectRequest","updateCardSets","gameCreatePdfRequest","collectionType","collectionId","pageWidth","pageHeight","topBottomMargin","leftRightMargin","verticalSpace","horizontalSpace","includeBleedingArea","cutMarksForScissors","cutMarksForGuillotine","cardSetCreateRequest","cardsetname","width","height","cardSetDeleteRequest","cardSetId","cardSetRenameRequest","cardSetImportData","data","cardSetCreateCard","card","cardSetCloneCard","cardSetRemoveCard","cardSetUpdateCardCount","count","cardSetAddTextPlaceholder","cardSetAddImagePlaceholder","cardSetChangeActivePlaceholderName","name","cardSetRemoveActivePlaceholder","cardSetRaiseActivePlaceholderToTop","cardSetLowerActivePlaceholderToBottom","cardSetLockActivePlaceholder","cardSetUnlockActivePlaceholder","cardSetChangeFitForActivePlaceholder","fit","cardSetChangeWidth","cardSetChangeHeight","cardSetChangeIsTwoSided","isTwoSided","cardSetChangeSnappingDistance","snappingDistance","cardSetChangePlaceholderPosition","placeholder","x","y","cardSetChangePlaceholderSize","cardSetChangePlaceholderAngle","angle","cardSetChangeActiveTextPlaceholderAlign","align","cardSetChangeActiveTextPlaceholderColor","color","cardSetChangeActiveTextPlaceholderFontVariant","cardSetChangeActiveTextPlaceholderFontFamilyAndVariant","cardSetChangeActiveTextPlaceholderFontSize","fontSize","cardSetChangeActiveTextPlaceholderLineHeight","lineHeight","cardSetChangeText","cardId","placeholderId","textInfo","cardSetChangeImage","imageInfo","cardSetChangeImageBase64","base64","cardSetActiveCardAndPlaceholder","isBackActive","cardSetSetSidebarState","sidebarState","cardSetSetZoom","zoom","cardSetUploadImage","file","load","error","progress","abort","cancelToken","cardSetDeleteImage","imageId","imageListRequest","filter","location","handleAxiosError","response","Error","request","console","log","getTokens","creds","axios","post","then","resp","catch","refreshToken","refreshTokenValue","config","headers","Authorization","concat","accessToken","deleteAccessToken","token","delete","status","deleteRefreshToken","registerUser","getRequest","url","get","postRequest","postRequestFormDataCancelable","progressCallback","cancelCallback","Content-Type","onUploadProgress","isCancel","putRequest","put","deleteRequest","downloadBlob","blobURL","filename","resolve","tempLink","document","createElement","style","display","href","setAttribute","download","body","appendChild","click","removeChild","setTimeout","window","URL","revokeObjectURL","generatePdfUsingWorker","Worker","Promise","reject","worker","addEventListener","event","postMessage","e","saveTokens","localStorage","setItem","saveAccessToken","cleanTokens","removeItem","getTokenFromStorage","getItem","getRefreshTokenFromStorage","loadFontsUsedInPlaceholders","fontsToLoad","Set","plId","add","placeholders","pl","fontToLoad","WebFont","Object","objectSpread","active","inactive","webFontsLoadPromise","google","families","toConsumableArray","Array","from","putError","putInfo","putProgress","hideProgress","handleMessageDisplay","getToken","handleLoginRequest","handleLoginSuccess","logoutToken","logoutRefreshToken","handleLogoutRequest","handleSignupRequest","handleInitRequest","authorizedGetRequest","authorizedPostRequest","authorizedDeleteRequest","authorizedPostFormDataRequest","authorizedPutRequest","handleGameCreateRequest","handleGameDeleteRequest","handleGameRenameRequest","handleGameListRequest","handleGameSelectRequest","handleGameCreatePdfRequest","handleCardSetCreateRequest","handleCardSetDeleteRequest","handleCardSetRenameRequest","handleCardSetSelectRequest","handleCardSetUploadImage","handleCardSetDeleteImage","handleCardSetFitChange","handleCardSetChangeImage","handleCardSetChange","handleImageListRequest","rootSaga","regenerator_default","a","wrap","_context","prev","next","stop","_marked","_context2","_marked2","_context3","abrupt","_marked3","messageId","_context4","_marked4","action","_context5","call","delay","_marked5","validateToken","jwtDecode","exp","Date","getTime","withErrorIfMissing","getFreshToken","newToken","_args6","arguments","_context6","length","undefined","sent","_marked6","_context7","t0","_marked7","_context8","_marked8","_context9","_marked9","_context10","_marked10","_context11","_marked11","_context12","_marked12","_context13","_marked13","_context14","_marked14","_context15","_marked15","_context16","_marked16","_context17","_marked17","_context18","_marked18","_context19","_marked19","_context20","_marked20","_context21","_marked21","allIds","byId","_context22","games","map","g","reduce","obj","_marked22","_context23","cardsets","_marked23","progressId","_context24","_marked24","_context25","JSON","stringify","_marked25","state","_context26","select","_marked26","_context27","_marked27","parsedData","_context28","parse","placeholdersAllIds","keys","version","_marked28","formData","_context29","FormData","set","append","lengthComputable","loaded","total","toString","_marked29","_context30","_marked30","adjustSvg","preserveAspectRatio","doc","XmlDocument","attr","walkChildren","node","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","children","Symbol","iterator","done","child","value","err","return","btoa","compressed","image","imageResp","svg","_svg","_context31","activePlaceholder","cardsById","t1","images","t2","_marked31","_svg2","_context32","_marked32","closeHandler","preventDefault","returnValue","allowWindowClose","removeEventListener","cardsetId","_context33","cardsAllIds","texts","_marked33","game","_context34","encodeURIComponent","_marked34","_context35","all","takeEvery","takeLatest","_marked35","ACTIVITY_CREATING","ACTIVITY_LISTING","ACTIVITY_SELECTING","ACTIVITY_CREATING_PDF","ACTIVITY_UPDATING","DefaultMessageState","messages","DefaultAuthState","isAuthenticated","user","DefaultSignUpState","signingup","DefaultGameState","activity","DefaultCardSetState","activeCard","textSettings","activeSidebar","DefaultImageState","reducers","combineReducers","find","m","assign","auth","username","signup","defineProperty","cardset","newCard","index","indexOf","slice","textPlaceholder","isOnBack","imagePlaceholder","locked","placeholderIndex","splice","placeholderTexts","placeholderImages","push","unshift","Math","round","placeholdersByCard","Measurements","Details","Text","Image","Character","AboutPage","react_default","Component","FieldController","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","moving","cDiv","resizeDiv","rotateDiv","relX","relY","startX","startY","originalW","originalH","rotatedPointX","rotatedPointY","centerX","centerY","originalAngle","currentAngle","activatedUsingTouch","originalBodyCursor","rotateVec","sinA","sin","cosA","cos","rx","ry","handleBrowserDragStart","stopPropagation","handleMouseDown","handleDragStart","handleMouseMove","handleMouseUp","handleTouchStart","changedTouches","handleTouchMove","passive","handleTouchEnd","co","current","cursor","clientX","offsetLeft","clientY","offsetTop","handleComplete","isTouchEvent","isLocked","onDrag","handleDragMove","ctrlKey","disableSnapping","_this$props","cardWidth","cardHeight","ppmm","_this$rotateVec","dx","abs","dy","dx2","dy2","min","max","left","top","handleResizeMouseDown","handleResizeStart","handleResizeMouseMove","handleResizeMouseUp","handleResizeTouchStart","handleResizeTouchMove","handleResizeTouchEnd","resize","clientWidth","clientHeight","_this$rotateVec2","handleResizeComplete","_this$cDiv$current","onResize","handleResizeMove","_this$props2","vx","vy","_this$rotateVec3","w","h","rotatedV","nx","ny","handleRotateMouseDown","handleRotateStart","handleRotateMouseMove","handleRotateMouseUp","handleRotateTouchStart","handleRotateTouchMove","handleRotateTouchEnd","rotate","rect","getBoundingClientRect","atan2","handleRotateComplete","onRotate","handleRotateMove","PI","transform","React","createRef","_this$props3","isActive","isActivePlaceholder","ref","className","fieldcontroller","fieldcontrolleractiveplaceholder","fieldcontrolleractive","touchactivated","position","src","alt","controller","right","bottom","connect","ImageField","imageDiv","wasMoved","handleDrag","dispatch","handleResize","handleRotate","_this$props4","handleDragOver","handleDrop","dataTransfer","getData","imagefilesPos","_this$props5","ii","substr","_this$props6","imageUrl","components_FieldController","onDragOver","onDrop","opacity","emptyImageImage","PureComponent","ContentEditable","editDiv","currentText","currentAlign","currentColor","currentFontFamily","currentFontVariant","currentFontSize","currentLineHeight","timeout","handleStart","handleMove","focus","onFocus","textValue","range","createRange","selectNodeContents","collapse","selection","getSelection","removeAllRanges","addRange","updateContent","timeoutInMiliseconds","innerHTML","replace","clearTimeout","handleBlur","handleInput","nextProps","isItalic","fontWeight","parseInt","contentEditable","onBlur","onInput","textAlign","DEFAULT_FONT","fontStyle","outline","overflowWrap","dangerouslySetInnerHTML","__html","TextField","zIndex","emptyTextImage","components_ContentEditable","Card","dimensions","handleFieldDeselect","isBack","target","getAttribute","_this2","placeholdersIds","isActiveCard","widthWithBleeds","heightWithBleeds","index_esm","client","contentRect","setState","_ref","measureRef","overflow","onMouseDown","onTouchStart","components_ImageField","key","components_TextField","border","borderRadius","pointerEvents","title","EditableTitle","titleIsEdited","handleClick","handleChange","onChange","Fragment","onClick","autoFocus","KawaiiMessage","character","mood","marginTop","marginBottom","padding","backgroundColor","grid","Ghost","size","Browser","marginLeft","Loader","fixed","small","loader","relative","PDFGenerator","_Component","_getPrototypeOf2","_len","args","_key","apply","handleGeneratePdfClick","_this$state","handlePageWidthChange","parseFloat","handlePageHeightChange","handleTopBottomMarginChange","handleLeftRightMarginChange","handleVerticalSpaceChange","handleHorizontalSpaceChange","handleIncludeBleedingAreaChange","checked","handleCutMarksForScissors","handleCutMarksForGuillotine","inherits","createClass","isCreatingPdf","KawaiiMessage_KawaiiMessage","htmlFor","step","SidebarDetails","handleCloneCardClick","handleRemoveCardClick","handleCountChange","visible","ColorButton","displayColorPicker","handleClose","react_color_lib","disableAlpha","SidebarImage","applyToAllCards","handleAddImageClick","changeImage","handleRemoveImageFromFieldClick","handleRemoveClick","handleNameChange","trim","handleFilterChange","handleImageSelect","imageName","handleRaiseToTop","handleLowerToBottom","handleLockField","_this$props7","handleUnlockField","_this$props8","handleFitOptionChange","handleOptionChange","_this$props9","handleColorChange","hex","handleRemoveColorClick","handleApplyToAllCardChange","_this$props10","ColorButton_ColorButton","im","registerPlugin","FilePondPluginFileValidateType","SidebarImportExport","prepareImagePaths","activeGame","ending","md5","preparedImages","imagesByCard","endsWith","global","handleExportJson","json","blob","Blob","createObjectURL","handleExportCsv","csvData","header","usedNames","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","dataRow","written","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","csv","Papa","unparse","handleProcess","fieldName","metadata","reader","FileReader","readAsText","onload","result","loadedPlaceholders","isGlobal","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","row","onerror","handleRevert","uniqueFileId","react_filepond","server","process","revert","acceptedFileTypes","SidebarMeasurements","handlePrevPlaceholder","prevPlaceholder","idx","handleNextPlaceholder","nextPlaceholder","handleWidthChange","handleHeightChange","handleXChange","handleYChange","_this$props11","handleAngleChange","_this$props12","_this$props13","handleIsTwoSidedChange","handleZoom","handleSnappingDistance","options","webfonts","sort","fi","label","FontSelector","getFontStringForLoad","family","variant","stringForLoad","selectedOption","activeFontVariant","wf","handleFontVariantChange","activeFont","handleFontSizeChange","handleLineHeightChange","selectedFontFamily","f","fontVariantOptions","fv","selectedFontVariant","activeFontSize","react_select_esm","activeLineHeight","SidebarText","handleAddTextClick","handleSetTextAlignLeft","getRangeAt","rangeCount","collapsed","execCommand","handleSetTextAlignCenter","handleSetTextAlignRight","handleSetTextBold","handleSetTextItalic","components_FontSelector","FilePondPluginFileValidateSize","SidebarUpload","source","CancelToken","cancel","allowMultiple","allowFileSizeValidation","maxFileSize","SIDEBARS","Settings","icon","component","SidebarSettings","Upload","ImportExport","Sidebar","handleSidebar","sidebar","controls","sb","hidden","CardSet","handleCreateCardClick","handleClickOutsideOfCard","handleCardSetNameChange","activeCardSet","EditableTitle_EditableTitle","cardsetview","components_Sidebar","Loader_Loader","gridTemplateColumns","components_Card","createCard","components_PDFGenerator","CardSetPage","match","params","components_CardSet","ChangelogPage","ErrorBoundary","hasError","ConfirmedDelete","deleteClicked","handleRemove","handleYes","onDelete","handleNo","question","button","answer","CardSets","cardSetName","handleGameNameChange","handleCreateCardSetClick","handleCardSetDelete","cardsetItems","Link","to","ConfirmedDelete_ConfirmedDelete","GamePage","components_CardSets","Login","password","handleUsernameChange","handlePasswordChange","handleSubmit","onLogin","onLoginFailure","onSubmit","LoginPage","Login_Login","loginRequest","msg","Redirect","Games","gameName","handleCreateGameClick","handleGameDelete","gameItems","Main","components_Games","getActiveGame","getActiveCardSet","Logout","onLogout","Navbar","info","menu","components_Logout","NotFoundPage","SignUp","passwordRepeat","handlePasswordRepeatChange","onSignUp","SignUpPage","components_SignUp","signupRequest","App","BrowserRouter","ErrorBoundry_ErrorBoundary","components_Navbar","Switch","Route","exact","path","getFullYear","Boolean","hostname","store","sagaMiddleware","createSagaMiddleware","createStore","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","run","createAppStore","ReactDOM","render","es","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister","loader-small"],"mappings":"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","file":"static/js/main.f81b53ec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"EditableTitle_input__2Y_6m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fontFamily\":\"FontSelector_fontFamily__zlBcJ\",\"fontVariant\":\"FontSelector_fontVariant__2pA4n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarText_view__3s9r0\",\"disabled\":\"SidebarText_disabled__3efIG\"};","module.exports = __webpack_public_path__ + \"static/media/image.60f0926c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ContentEditable_content__1p7up\"};","module.exports = __webpack_public_path__ + \"static/media/text.f7f9443c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarMeasurements_view__3BCmn\",\"disabled\":\"SidebarMeasurements_disabled__2Rrd2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarSettings_view__DwnQN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarUpload_view__k69sP\"};","import shortid from 'shortid';\nimport { Dispatch as ReduxDispatch } from 'redux';\nimport { CancelToken } from 'axios';\n\nexport const INIT_REQUEST = 'INIT_REQUEST';\nexport const MESSAGE_DISPLAY = 'MESSAGE_DISPLAY';\nexport const MESSAGE_HIDE = 'MESSAGE_HIDE';\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\nexport const LOGOUT_FAILURE = 'LOGOUT_FAILURE';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const SIGNUP_REQUEST = 'SIGNUP_REQUEST';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAILURE = 'SIGNUP_FAILURE';\nexport const GAME_CREATE_REQUEST = 'GAME_CREATE_REQUEST';\nexport const GAME_CREATE_SUCCESS = 'GAME_CREATE_SUCCESS';\nexport const GAME_CREATE_FAILURE = 'GAME_CREATE_FAILURE';\nexport const GAME_DELETE_REQUEST = 'GAME_DELETE_REQUEST';\nexport const GAME_RENAME_REQUEST = 'GAME_RENAME_REQUEST';\nexport const GAME_LIST_SUCCESS = 'GAME_LIST_SUCCESS';\nexport const GAME_LIST_REQUEST = 'GAME_LIST_REQUEST';\nexport const GAME_LIST_FAILURE = 'GAME_LIST_FAILURE';\nexport const GAME_LIST_RESET = 'GAME_LIST_RESET';\nexport const GAME_SELECT_REQUEST = 'GAME_SELECT_REQUEST';\nexport const GAME_SELECT_SUCCESS = 'GAME_SELECT_SUCCESS';\nexport const GAME_SELECT_FAILURE = 'GAME_SELECT_FAILURE';\nexport const GAME_CREATE_PDF_REQUEST = 'GAME_CREATE_PDF_REQUEST';\nexport const GAME_CREATE_PDF_SUCCESS = 'GAME_CREATE_PDF_SUCCESS';\nexport const GAME_CREATE_PDF_FAILURE = 'GAME_CREATE_PDF_FAILURE';\nexport const CARDSET_CREATE_REQUEST = 'CARDSET_CREATE_REQUEST';\nexport const CARDSET_CREATE_SUCCESS = 'CARDSET_CREATE_SUCCESS';\nexport const CARDSET_CREATE_FAILURE = 'CARDSET_CREATE_FAILURE';\nexport const CARDSET_DELETE_REQUEST = 'CARDSET_DELETE_REQUEST';\nexport const CARDSET_RENAME_REQUEST = 'CARDSET_RENAME_REQUEST';\nexport const CARDSET_IMPORT_DATA = 'CARDSET_IMPORT_DATA';\nexport const CARDSET_LIST_SUCCESS = 'CARDSET_LIST_SUCCESS';\nexport const CARDSET_LIST_REQUEST = 'CARDSET_LIST_REQUEST';\nexport const CARDSET_LIST_FAILURE = 'CARDSET_LIST_FAILURE';\nexport const CARDSET_LIST_RESET = 'CARDSET_LIST_RESET';\nexport const CARDSET_SELECT_REQUEST = 'CARDSET_SELECT_REQUEST';\nexport const CARDSET_SELECT_SUCCESS = 'CARDSET_SELECT_SUCCESS';\nexport const CARDSET_CREATE_CARD = 'CARDSET_CREATE_CARD';\nexport const CARDSET_CLONE_CARD = 'CARDSET_CLONE_CARD';\nexport const CARDSET_REMOVE_CARD = 'CARDSET_REMOVE_CARD';\nexport const CARDSET_UPDATE_CARD_COUNT = 'CARDSET_UPDATE_CARD_COUNT';\nexport const CARDSET_ADD_TEXT_PLACEHOLDER = 'CARDSET_ADD_TEXT_PLACEHOLDER';\nexport const CARDSET_ADD_IMAGE_PLACEHOLDER = 'CARDSET_ADD_IMAGE_PLACEHOLDER';\nexport const CARDSET_CHANGE_ACTIVE_PLACEHOLDER_NAME = 'CARDSET_CHANGE_ACTIVE_PLACEHOLDER_NAME';\nexport const CARDSET_REMOVE_ACTIVE_PLACEHOLDER = 'CARDSET_REMOVE_ACTIVE_PLACEHOLDER';\nexport const CARDSET_RAISE_ACTIVE_PLACEHOLDER_TO_TOP = 'CARDSET_RAISE_ACTIVE_PLACEHOLDER_TO_TOP';\nexport const CARDSET_LOWER_ACTIVE_PLACEHOLDER_TO_BOTTOM = 'CARDSET_LOWER_ACTIVE_PLACEHOLDER_TO_BOTTOM';\nexport const CARDSET_LOCK_ACTIVE_PLACEHOLDER = 'CARDSET_LOCK_ACTIVE_PLACEHOLDER';\nexport const CARDSET_UNLOCK_ACTIVE_PLACEHOLDER = 'CARDSET_UNLOCK_ACTIVE_PLACEHOLDER';\nexport const CARDSET_CHANGE_FIT_FOR_ACTIVE_PLACEHOLDER = 'CARDSET_CHANGE_FIT_FOR_ACTIVE_PLACEHOLDER';\nexport const CARDSET_CHANGE_WIDTH = 'CARDSET_CHANGE_WIDTH';\nexport const CARDSET_CHANGE_HEIGHT = 'CARDSET_CHANGE_HEIGHT';\nexport const CARDSET_CHANGE_IS_TWO_SIDED = 'CARDSET_CHANGE_IS_TWO_SIDED';\nexport const CARDSET_CHANGE_SNAPPING_DISTANCE = 'CARDSET_CHANGE_SNAPPING_DISTANCE';\nexport const CARDSET_CHANGE_PLACEHOLDER_POSITION = 'CARDSET_CHANGE_PLACEHOLDER_POSITION';\nexport const CARDSET_CHANGE_PLACEHOLDER_SIZE = 'CARDSET_CHANGE_PLACEHOLDER_SIZE';\nexport const CARDSET_CHANGE_PLACEHOLDER_ANGLE = 'CARDSET_CHANGE_PLACEHOLDER_ANGLE';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_ALIGN = 'CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_ALIGN';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_COLOR = 'CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_COLOR';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY = 'CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_VARIANT =\n    'CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_VARIANT';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY_AND_VARIANT =\n    'CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY_AND_VARIANT';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_SIZE = 'CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_SIZE';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_LINE_HEIGHT = 'CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_LINE_HEIGHT';\nexport const CARDSET_CHANGE_TEXT = 'CARDSET_CHANGE_TEXT';\nexport const CARDSET_CHANGE_IMAGE = 'CARDSET_CHANGE_IMAGE';\nexport const CARDSET_CHANGE_IMAGE_BASE64 = 'CARDSET_CHANGE_IMAGE_BASE64';\nexport const CARDSET_SET_ACTIVE_CARD_AND_PLACEHOLDER = 'CARDSET_SET_ACTIVE_CARD_AND_PLACEHOLDER';\nexport const CARDSET_UPDATE_DATA_REQUEST = 'CARDSET_UPDATE_DATA_REQUEST';\nexport const CARDSET_UPDATE_DATA_SUCCESS = 'CARDSET_UPDATE_DATA_SUCCESS';\nexport const CARDSET_UPDATE_DATA_FAILURE = 'CARDSET_UPDATE_DATA_FAILURE';\nexport const CARDSET_SELECT_FAILURE = 'CARDSET_SELECT_FAILURE';\nexport const CARDSET_SET_SIDEBAR_STATE = 'CARDSET_SET_SIDEBAR_STATE';\nexport const CARDSET_SET_ZOOM = 'CARDSET_SET_ZOOM';\nexport const CARDSET_UPLOAD_IMAGE = 'CARDSET_UPLOAD_IMAGE';\nexport const CARDSET_UPLOAD_IMAGE_SUCCESS = 'CARDSET_UPLOAD_IMAGE_SUCCESS';\nexport const CARDSET_UPLOAD_IMAGE_FAILURE = 'CARDSET_UPLOAD_IMAGE_FAILURE';\nexport const CARDSET_DELETE_IMAGE = 'CARDSET_DELETE_IMAGE';\nexport const IMAGE_LIST_REQUEST = 'IMAGE_LIST_REQUEST';\nexport const IMAGE_LIST_SUCCESS = 'IMAGE_LIST_SUCCESS';\nexport const IMAGE_LIST_FAILURE = 'IMAGE_LIST_FAILURE';\n\n// Data types\n\nexport type IdsArray = string[];\n\nexport interface MessageType {\n    id: string;\n    type: string;\n    text: string;\n}\n\nexport interface GameType {\n    id: string;\n    name: string;\n}\n\nexport interface GamesCollection {\n    [propName: string]: GameType;\n}\n\nexport interface PlaceholderBase {\n    id: string;\n    type: string;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    angle: number;\n    locked?: boolean;\n    name?: string;\n    isOnBack?: boolean;\n}\n\nexport interface TextPlaceholderType extends PlaceholderBase {\n    type: 'text';\n    align: string;\n    color: string;\n    fontFamily: string;\n    fontVariant: string;\n    fontSize: number;\n    lineHeight?: number;\n}\n\nexport interface ImagePlaceholderType extends PlaceholderBase {\n    id: string;\n    type: 'image';\n    fit?: string;\n}\n\nexport type PlaceholderType = TextPlaceholderType | ImagePlaceholderType;\n\nexport interface PlaceholdersCollection {\n    [propName: string]: PlaceholderType;\n}\n\nexport interface TextInfo {\n    value: string;\n}\n\nexport interface PlaceholdersTextInfoCollection {\n    [propName: string]: TextInfo;\n}\n\nexport interface PlaceholdersTextInfoByCardCollection {\n    [propName: string]: PlaceholdersTextInfoCollection;\n}\n\nexport interface ImageInfo {\n    url?: string;\n    global?: boolean;\n    base64?: string;\n    color?: string;\n}\n\nexport interface PlaceholdersImageInfoCollection {\n    [propName: string]: ImageInfo;\n}\n\nexport interface PlaceholdersImageInfoByCardCollection {\n    [propName: string]: PlaceholdersImageInfoCollection;\n}\n\nexport interface CardType {\n    id: string;\n    count: number;\n}\n\nexport interface CardsCollection {\n    [propName: string]: CardType;\n}\n\nexport interface CardSetType {\n    id: string;\n    name: string;\n}\n\nexport interface CardSetsCollection {\n    [propName: string]: CardSetType;\n}\n\nexport interface Credentials {\n    username: string;\n    password: string;\n}\n\nexport interface Image {\n    id: number;\n    name: string;\n}\n\nexport type ImageArray = Image[];\n\n// Actions\n\nexport interface InitAction {\n    type: typeof INIT_REQUEST;\n}\n\nexport interface MessageDisplay {\n    type: typeof MESSAGE_DISPLAY;\n    message: MessageType;\n}\nexport type MessageAction = MessageDisplay | { type: typeof MESSAGE_HIDE; messageId: string };\n\nexport interface LoginRequest {\n    type: typeof LOGIN_REQUEST;\n    creds: Credentials;\n}\nexport type LoginAction =\n    | LoginRequest\n    | { type: typeof LOGIN_SUCCESS }\n    | { type: typeof LOGIN_FAILURE; message: string }\n    | { type: typeof LOGOUT_REQUEST }\n    | { type: typeof LOGOUT_FAILURE }\n    | { type: typeof LOGOUT_SUCCESS };\n\nexport interface SignUpRequest {\n    type: typeof SIGNUP_REQUEST;\n    creds: Credentials;\n}\nexport type SignUpAction = SignUpRequest | { type: typeof SIGNUP_SUCCESS } | { type: typeof SIGNUP_FAILURE };\n\nexport interface GameCreateRequest {\n    type: typeof GAME_CREATE_REQUEST;\n    gamename: string;\n}\nexport type GameCreateAction =\n    | GameCreateRequest\n    | { type: typeof GAME_CREATE_SUCCESS }\n    | { type: typeof GAME_CREATE_FAILURE };\n\nexport interface GameDeleteRequest {\n    type: typeof GAME_DELETE_REQUEST;\n    gameId: string;\n}\n\nexport type GameDeleteAction = GameDeleteRequest;\n\nexport interface GameRenameRequest {\n    type: typeof GAME_RENAME_REQUEST;\n    gameId: string;\n    newName: string;\n}\n\nexport type GameRenameAction = GameRenameRequest;\n\nexport interface GameListSuccess {\n    type: typeof GAME_LIST_SUCCESS;\n    byId: GamesCollection;\n    allIds: IdsArray;\n}\nexport type GameListAction =\n    | { type: typeof GAME_LIST_REQUEST }\n    | GameListSuccess\n    | { type: typeof GAME_LIST_FAILURE }\n    | { type: typeof GAME_LIST_RESET };\n\nexport interface GameSelectRequest {\n    type: typeof GAME_SELECT_REQUEST;\n    id: string;\n    updateCardSets: boolean;\n}\nexport type GameSelectAction =\n    | GameSelectRequest\n    | { type: typeof GAME_SELECT_SUCCESS; id: string }\n    | { type: typeof GAME_SELECT_FAILURE };\n\nexport interface GameCreatePdfRequest {\n    type: typeof GAME_CREATE_PDF_REQUEST;\n    collectionType: string;\n    collectionId: string;\n    pageWidth: number;\n    pageHeight: number;\n    topBottomMargin: number;\n    leftRightMargin: number;\n    verticalSpace: number;\n    horizontalSpace: number;\n    includeBleedingArea: boolean;\n    cutMarksForScissors: boolean;\n    cutMarksForGuillotine: boolean;\n}\n\nexport type GameCreatePdfAction =\n    | GameCreatePdfRequest\n    | { type: typeof GAME_CREATE_PDF_SUCCESS }\n    | { type: typeof GAME_CREATE_PDF_FAILURE };\n\nexport type GameAction =\n    | GameCreateAction\n    | GameDeleteAction\n    | GameRenameAction\n    | GameListAction\n    | GameSelectAction\n    | GameCreatePdfAction;\n\nexport interface CardSetCreateRequest {\n    type: typeof CARDSET_CREATE_REQUEST;\n    cardsetname: string;\n    width: number;\n    height: number;\n    gameId: string;\n}\nexport type CardSetCreateAction =\n    | CardSetCreateRequest\n    | { type: typeof CARDSET_CREATE_SUCCESS }\n    | { type: typeof CARDSET_CREATE_FAILURE };\n\nexport interface CardSetDeleteRequest {\n    type: typeof CARDSET_DELETE_REQUEST;\n    cardSetId: string;\n}\n\nexport interface CardSetRenameRequest {\n    type: typeof CARDSET_RENAME_REQUEST;\n    cardSetId: string;\n    newName: string;\n}\n\nexport interface CardSetImportData {\n    type: typeof CARDSET_IMPORT_DATA;\n    data: object;\n}\n\nexport interface CardSetListSuccess {\n    type: typeof CARDSET_LIST_SUCCESS;\n    byId: CardSetsCollection;\n    allIds: IdsArray;\n}\nexport type CardSetListAction =\n    | { type: typeof CARDSET_LIST_REQUEST }\n    | CardSetListSuccess\n    | { type: typeof CARDSET_LIST_FAILURE }\n    | { type: typeof CARDSET_LIST_RESET };\n\nexport interface CardSetSelectRequest {\n    type: typeof CARDSET_SELECT_REQUEST;\n    id: string;\n}\nexport interface CardSetSelectSuccess {\n    type: typeof CARDSET_SELECT_SUCCESS;\n    id: string;\n    name: string;\n    data: {\n        version: number;\n        width: number;\n        height: number;\n        isTwoSided: boolean;\n        snappingDistance: number;\n        cardsAllIds: IdsArray;\n        cardsById: CardsCollection;\n        placeholders: PlaceholdersCollection;\n        placeholdersAllIds: IdsArray;\n        texts: PlaceholdersTextInfoByCardCollection;\n        images: PlaceholdersImageInfoByCardCollection;\n        zoom: number;\n    };\n    gameId: string;\n}\nexport interface CardSetCreateCard {\n    type: typeof CARDSET_CREATE_CARD;\n    card: CardType;\n}\nexport interface CardSetCloneCard {\n    type: typeof CARDSET_CLONE_CARD;\n    card: CardType;\n}\nexport interface CardSetRemoveCard {\n    type: typeof CARDSET_REMOVE_CARD;\n    card: CardType;\n}\nexport interface CardSetUpdateCardCount {\n    type: typeof CARDSET_UPDATE_CARD_COUNT;\n    card: CardType;\n    count: number;\n}\nexport interface CardSetAddTextPlaceholder {\n    type: typeof CARDSET_ADD_TEXT_PLACEHOLDER;\n}\nexport interface CardSetAddImagePlaceholder {\n    type: typeof CARDSET_ADD_IMAGE_PLACEHOLDER;\n}\nexport interface CardSetChangeActivePlaceholderName {\n    type: typeof CARDSET_CHANGE_ACTIVE_PLACEHOLDER_NAME;\n    name: string;\n}\nexport interface CardSetRemoveActivePlaceholder {\n    type: typeof CARDSET_REMOVE_ACTIVE_PLACEHOLDER;\n}\nexport interface CardSetRaiseActivePlaceholderToTop {\n    type: typeof CARDSET_RAISE_ACTIVE_PLACEHOLDER_TO_TOP;\n}\nexport interface CardSetLowerActivePlaceholderToBottom {\n    type: typeof CARDSET_LOWER_ACTIVE_PLACEHOLDER_TO_BOTTOM;\n}\nexport interface CardSetLockActivePlaceholder {\n    type: typeof CARDSET_LOCK_ACTIVE_PLACEHOLDER;\n}\nexport interface CardSetUnlockActivePlaceholder {\n    type: typeof CARDSET_UNLOCK_ACTIVE_PLACEHOLDER;\n}\nexport interface CardSetChangeFitForActivePlaceholder {\n    type: typeof CARDSET_CHANGE_FIT_FOR_ACTIVE_PLACEHOLDER;\n    fit: string;\n}\n\nexport interface CardSetChangeWidth {\n    type: typeof CARDSET_CHANGE_WIDTH;\n    width: number;\n}\n\nexport interface CardSetChangeHeight {\n    type: typeof CARDSET_CHANGE_HEIGHT;\n    height: number;\n}\n\nexport interface CardSetChangeIsTwoSided {\n    type: typeof CARDSET_CHANGE_IS_TWO_SIDED;\n    isTwoSided: boolean;\n}\n\nexport interface CardSetChangeSnappingDistance {\n    type: typeof CARDSET_CHANGE_SNAPPING_DISTANCE;\n    snappingDistance: number;\n}\n\nexport interface CardSetChangePlaceholderPosition {\n    type: typeof CARDSET_CHANGE_PLACEHOLDER_POSITION;\n    placeholder: PlaceholderType;\n    x: number;\n    y: number;\n}\nexport interface CardSetChangePlaceholderSize {\n    type: typeof CARDSET_CHANGE_PLACEHOLDER_SIZE;\n    placeholder: PlaceholderType;\n    width: number;\n    height: number;\n}\nexport interface CardSetChangePlaceholderAngle {\n    type: typeof CARDSET_CHANGE_PLACEHOLDER_ANGLE;\n    placeholder: PlaceholderType;\n    angle: number;\n}\nexport interface CardSetChangeActiveTextPlaceholderAlign {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_ALIGN;\n    align: string;\n}\nexport interface CardSetChangeActiveTextPlaceholderColor {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_COLOR;\n    color: string;\n}\nexport interface CardSetChangeActiveTextPlaceholderFontFamily {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY;\n    fontFamily: string;\n}\nexport interface CardSetChangeActiveTextPlaceholderFontVariant {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_VARIANT;\n    fontVariant: string;\n}\nexport interface CardSetChangeActiveTextPlaceholderFontFamilyAndVariant {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY_AND_VARIANT;\n    fontFamily: string;\n    fontVariant: string;\n}\nexport interface CardSetChangeActiveTextPlaceholderFontSize {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_SIZE;\n    fontSize: number;\n}\nexport interface CardSetChangeActiveTextPlaceholderLineHeight {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_LINE_HEIGHT;\n    lineHeight: number;\n}\nexport interface CardSetChangeText {\n    type: typeof CARDSET_CHANGE_TEXT;\n    cardId: string;\n    placeholderId: string;\n    textInfo: TextInfo;\n}\nexport interface CardSetChangeImage {\n    type: typeof CARDSET_CHANGE_IMAGE;\n    cardId: string;\n    placeholderId: string;\n    imageInfo: ImageInfo;\n}\nexport interface CardSetChangeImageBase64 {\n    type: typeof CARDSET_CHANGE_IMAGE_BASE64;\n    cardId: string;\n    placeholderId: string;\n    base64?: string;\n}\nexport interface CardSetSetActiveCardAndPlaceholder {\n    type: typeof CARDSET_SET_ACTIVE_CARD_AND_PLACEHOLDER;\n    cardId: string | null;\n    isBackActive: boolean;\n    placeholderId: string | null;\n}\n\nexport enum SidebarState {\n    Settings,\n    Details,\n    Measurements,\n    Image,\n    Text,\n    Upload,\n    ImportExport,\n}\nexport interface CardSetSetSidebarState {\n    type: typeof CARDSET_SET_SIDEBAR_STATE;\n    sidebarState: SidebarState | null;\n}\nexport interface CardSetSetZoom {\n    type: typeof CARDSET_SET_ZOOM;\n    zoom: number;\n}\n\nexport type FPLoadCallback = (id: string) => void;\nexport type FPErrorCallback = (error: string) => void;\nexport type FPProgressCallback = (computable: boolean, loaded: number, total: number) => void;\nexport type FPAbortCallback = () => void;\nexport type FPRevertLoadCallback = () => void;\n\nexport interface CardSetUploadImage {\n    type: typeof CARDSET_UPLOAD_IMAGE;\n    gameId: string;\n    file: File;\n    load: FPLoadCallback;\n    error: FPErrorCallback;\n    progress: FPProgressCallback;\n    abort: FPAbortCallback;\n    cancelToken: CancelToken;\n}\n\nexport interface CardSetDeleteImage {\n    type: typeof CARDSET_DELETE_IMAGE;\n    imageId: string;\n    load: FPRevertLoadCallback;\n    error: FPErrorCallback;\n}\n\nexport interface CardSetUploadImageSuccess {\n    type: typeof CARDSET_UPLOAD_IMAGE_SUCCESS;\n}\n\nexport interface CardSetUploadImageFailure {\n    type: typeof CARDSET_UPLOAD_IMAGE_FAILURE;\n}\n\nexport type CardSetSelectAction = CardSetSelectRequest | CardSetSelectSuccess | { type: typeof CARDSET_SELECT_FAILURE };\n\nexport interface CardSetUpdateDataRequest {\n    type: typeof CARDSET_UPDATE_DATA_REQUEST;\n}\nexport interface CardSetUpdateDataSuccess {\n    type: typeof CARDSET_UPDATE_DATA_SUCCESS;\n}\nexport interface CardSetUpdateDataFailure {\n    type: typeof CARDSET_UPDATE_DATA_FAILURE;\n}\nexport type CardSetUpdateDataAction = CardSetUpdateDataRequest | CardSetUpdateDataSuccess | CardSetUpdateDataFailure;\n\nexport type CardSetModifyAction =\n    | CardSetCreateCard\n    | CardSetCloneCard\n    | CardSetRemoveCard\n    | CardSetUpdateCardCount\n    | CardSetAddTextPlaceholder\n    | CardSetAddImagePlaceholder\n    | CardSetChangeActivePlaceholderName\n    | CardSetRemoveActivePlaceholder\n    | CardSetRaiseActivePlaceholderToTop\n    | CardSetLowerActivePlaceholderToBottom\n    | CardSetLockActivePlaceholder\n    | CardSetUnlockActivePlaceholder\n    | CardSetChangeFitForActivePlaceholder\n    | CardSetChangeWidth\n    | CardSetChangeHeight\n    | CardSetChangeIsTwoSided\n    | CardSetChangeSnappingDistance\n    | CardSetChangePlaceholderPosition\n    | CardSetChangePlaceholderSize\n    | CardSetChangePlaceholderAngle\n    | CardSetChangeActiveTextPlaceholderAlign\n    | CardSetChangeActiveTextPlaceholderColor\n    | CardSetChangeActiveTextPlaceholderFontFamily\n    | CardSetChangeActiveTextPlaceholderFontVariant\n    | CardSetChangeActiveTextPlaceholderFontFamilyAndVariant\n    | CardSetChangeActiveTextPlaceholderFontSize\n    | CardSetChangeActiveTextPlaceholderLineHeight\n    | CardSetChangeText\n    | CardSetChangeImage\n    | CardSetChangeImageBase64\n    | CardSetSetActiveCardAndPlaceholder\n    | CardSetSetSidebarState\n    | CardSetSetZoom\n    | CardSetUploadImage\n    | CardSetDeleteImage\n    | CardSetUploadImageSuccess\n    | CardSetUploadImageFailure;\n\nexport type CardSetAction =\n    | CardSetCreateAction\n    | CardSetDeleteRequest\n    | CardSetRenameRequest\n    | CardSetImportData\n    | CardSetListAction\n    | CardSetSelectAction\n    | CardSetUpdateDataAction\n    | CardSetModifyAction;\n\nexport interface ImageListRequest {\n    type: typeof IMAGE_LIST_REQUEST;\n    filter: string;\n    location: string;\n}\nexport interface ImageListSuccess {\n    type: typeof IMAGE_LIST_SUCCESS;\n    images: ImageArray;\n}\nexport type ImageListAction = ImageListRequest | ImageListSuccess | { type: typeof IMAGE_LIST_FAILURE };\n\nexport type Action =\n    | InitAction\n    | LoginAction\n    | SignUpAction\n    | GameAction\n    | CardSetAction\n    | ImageListAction\n    | MessageAction;\n\nexport type Dispatch = ReduxDispatch<Action>;\n\nexport const messageDisplay = (type: string, text: string, id?: string): MessageDisplay => {\n    return {\n        type: MESSAGE_DISPLAY,\n        message: {\n            id: id || shortid.generate(),\n            type: type,\n            text: text,\n        },\n    };\n};\n\nexport const initRequest = (): InitAction => {\n    return { type: INIT_REQUEST };\n};\n\nexport const loginRequest = (creds: Credentials): LoginAction => {\n    return {\n        type: LOGIN_REQUEST,\n        creds: creds,\n    };\n};\n\nexport const logoutRequest = (): LoginAction => {\n    return {\n        type: LOGOUT_REQUEST,\n    };\n};\n\nexport const signupRequest = (creds: Credentials): SignUpAction => {\n    return {\n        type: SIGNUP_REQUEST,\n        creds: creds,\n    };\n};\n\nexport const gameCreateRequest = (gamename: string): GameAction => {\n    return {\n        type: GAME_CREATE_REQUEST,\n        gamename: gamename,\n    };\n};\n\nexport const gameDeleteRequest = (gameId: string): GameAction => {\n    return {\n        type: GAME_DELETE_REQUEST,\n        gameId,\n    };\n};\n\nexport const gameRenameRequest = (gameId: string, newName: string): GameAction => {\n    return {\n        type: GAME_RENAME_REQUEST,\n        gameId,\n        newName,\n    };\n};\n\nexport const gameListRequest = (): GameAction => {\n    return {\n        type: GAME_LIST_REQUEST,\n    };\n};\n\nexport const gameSelectRequest = (id: string, updateCardSets: boolean): GameAction => {\n    return {\n        type: GAME_SELECT_REQUEST,\n        id,\n        updateCardSets,\n    };\n};\n\nexport const gameCreatePdfRequest = (\n    collectionType: string,\n    collectionId: string,\n    pageWidth: number,\n    pageHeight: number,\n    topBottomMargin: number,\n    leftRightMargin: number,\n    verticalSpace: number,\n    horizontalSpace: number,\n    includeBleedingArea: boolean,\n    cutMarksForScissors: boolean,\n    cutMarksForGuillotine: boolean,\n): GameCreatePdfRequest => {\n    return {\n        type: GAME_CREATE_PDF_REQUEST,\n        collectionType,\n        collectionId,\n        pageWidth,\n        pageHeight,\n        topBottomMargin,\n        leftRightMargin,\n        verticalSpace,\n        horizontalSpace,\n        includeBleedingArea,\n        cutMarksForScissors,\n        cutMarksForGuillotine,\n    };\n};\n\nexport const cardSetCreateRequest = (\n    cardsetname: string,\n    width: number,\n    height: number,\n    gameId: string,\n): CardSetAction => {\n    return {\n        type: CARDSET_CREATE_REQUEST,\n        cardsetname: cardsetname,\n        width,\n        height,\n        gameId,\n    };\n};\n\nexport const cardSetDeleteRequest = (cardSetId: string): CardSetAction => {\n    return {\n        type: CARDSET_DELETE_REQUEST,\n        cardSetId,\n    };\n};\n\nexport const cardSetRenameRequest = (cardSetId: string, newName: string): CardSetAction => {\n    return {\n        type: CARDSET_RENAME_REQUEST,\n        cardSetId,\n        newName,\n    };\n};\n\nexport const cardSetImportData = (data: object): CardSetImportData => {\n    return {\n        type: CARDSET_IMPORT_DATA,\n        data,\n    };\n};\n\nexport const cardSetSelectRequest = (id: string): CardSetSelectRequest => {\n    return {\n        type: CARDSET_SELECT_REQUEST,\n        id,\n    };\n};\n\nexport const cardSetCreateCard = (card: CardType): CardSetCreateCard => {\n    return {\n        type: CARDSET_CREATE_CARD,\n        card,\n    };\n};\n\nexport const cardSetCloneCard = (card: CardType): CardSetCloneCard => {\n    return {\n        type: CARDSET_CLONE_CARD,\n        card,\n    };\n};\n\nexport const cardSetRemoveCard = (card: CardType): CardSetRemoveCard => {\n    return {\n        type: CARDSET_REMOVE_CARD,\n        card,\n    };\n};\n\nexport const cardSetUpdateCardCount = (card: CardType, count: number): CardSetUpdateCardCount => {\n    return {\n        type: CARDSET_UPDATE_CARD_COUNT,\n        card,\n        count,\n    };\n};\n\nexport const cardSetAddTextPlaceholder = (): CardSetAddTextPlaceholder => {\n    return {\n        type: CARDSET_ADD_TEXT_PLACEHOLDER,\n    };\n};\n\nexport const cardSetAddImagePlaceholder = (): CardSetAddImagePlaceholder => {\n    return {\n        type: CARDSET_ADD_IMAGE_PLACEHOLDER,\n    };\n};\n\nexport const cardSetChangeActivePlaceholderName = (name: string): CardSetChangeActivePlaceholderName => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_PLACEHOLDER_NAME,\n        name,\n    };\n};\n\nexport const cardSetRemoveActivePlaceholder = (): CardSetRemoveActivePlaceholder => {\n    return {\n        type: CARDSET_REMOVE_ACTIVE_PLACEHOLDER,\n    };\n};\n\nexport const cardSetRaiseActivePlaceholderToTop = (): CardSetRaiseActivePlaceholderToTop => {\n    return {\n        type: CARDSET_RAISE_ACTIVE_PLACEHOLDER_TO_TOP,\n    };\n};\n\nexport const cardSetLowerActivePlaceholderToBottom = (): CardSetLowerActivePlaceholderToBottom => {\n    return {\n        type: CARDSET_LOWER_ACTIVE_PLACEHOLDER_TO_BOTTOM,\n    };\n};\n\nexport const cardSetLockActivePlaceholder = (): CardSetLockActivePlaceholder => {\n    return {\n        type: CARDSET_LOCK_ACTIVE_PLACEHOLDER,\n    };\n};\n\nexport const cardSetUnlockActivePlaceholder = (): CardSetUnlockActivePlaceholder => {\n    return {\n        type: CARDSET_UNLOCK_ACTIVE_PLACEHOLDER,\n    };\n};\n\nexport const cardSetChangeFitForActivePlaceholder = (fit: string): CardSetChangeFitForActivePlaceholder => {\n    return {\n        type: CARDSET_CHANGE_FIT_FOR_ACTIVE_PLACEHOLDER,\n        fit,\n    };\n};\n\nexport const cardSetChangeWidth = (width: number): CardSetChangeWidth => {\n    return {\n        type: CARDSET_CHANGE_WIDTH,\n        width,\n    };\n};\n\nexport const cardSetChangeHeight = (height: number): CardSetChangeHeight => {\n    return {\n        type: CARDSET_CHANGE_HEIGHT,\n        height,\n    };\n};\n\nexport const cardSetChangeIsTwoSided = (isTwoSided: boolean): CardSetChangeIsTwoSided => {\n    return {\n        type: CARDSET_CHANGE_IS_TWO_SIDED,\n        isTwoSided,\n    };\n};\n\nexport const cardSetChangeSnappingDistance = (snappingDistance: number): CardSetChangeSnappingDistance => {\n    return {\n        type: CARDSET_CHANGE_SNAPPING_DISTANCE,\n        snappingDistance,\n    };\n};\n\nexport const cardSetChangePlaceholderPosition = (\n    placeholder: PlaceholderType,\n    x: number,\n    y: number,\n): CardSetChangePlaceholderPosition => {\n    return {\n        type: CARDSET_CHANGE_PLACEHOLDER_POSITION,\n        placeholder,\n        x,\n        y,\n    };\n};\n\nexport const cardSetChangePlaceholderSize = (\n    placeholder: PlaceholderType,\n    width: number,\n    height: number,\n): CardSetChangePlaceholderSize => {\n    return {\n        type: CARDSET_CHANGE_PLACEHOLDER_SIZE,\n        placeholder,\n        width,\n        height,\n    };\n};\n\nexport const cardSetChangePlaceholderAngle = (\n    placeholder: PlaceholderType,\n    angle: number,\n): CardSetChangePlaceholderAngle => {\n    return {\n        type: CARDSET_CHANGE_PLACEHOLDER_ANGLE,\n        placeholder,\n        angle,\n    };\n};\n\nexport const cardSetChangeActiveTextPlaceholderAlign = (align: string): CardSetChangeActiveTextPlaceholderAlign => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_ALIGN,\n        align,\n    };\n};\n\nexport const cardSetChangeActiveTextPlaceholderColor = (color: string): CardSetChangeActiveTextPlaceholderColor => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_COLOR,\n        color,\n    };\n};\n\nexport const cardSetChangeActiveTextPlaceholderFontFamily = (\n    fontFamily: string,\n): CardSetChangeActiveTextPlaceholderFontFamily => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY,\n        fontFamily,\n    };\n};\n\nexport const cardSetChangeActiveTextPlaceholderFontVariant = (\n    fontVariant: string,\n): CardSetChangeActiveTextPlaceholderFontVariant => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_VARIANT,\n        fontVariant,\n    };\n};\n\nexport const cardSetChangeActiveTextPlaceholderFontFamilyAndVariant = (\n    fontFamily: string,\n    fontVariant: string,\n): CardSetChangeActiveTextPlaceholderFontFamilyAndVariant => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY_AND_VARIANT,\n        fontFamily,\n        fontVariant,\n    };\n};\n\nexport const cardSetChangeActiveTextPlaceholderFontSize = (\n    fontSize: number,\n): CardSetChangeActiveTextPlaceholderFontSize => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_SIZE,\n        fontSize,\n    };\n};\n\nexport const cardSetChangeActiveTextPlaceholderLineHeight = (\n    lineHeight: number,\n): CardSetChangeActiveTextPlaceholderLineHeight => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_LINE_HEIGHT,\n        lineHeight,\n    };\n};\n\nexport const cardSetChangeText = (cardId: string, placeholderId: string, textInfo: TextInfo): CardSetChangeText => {\n    return {\n        type: CARDSET_CHANGE_TEXT,\n        cardId,\n        placeholderId,\n        textInfo,\n    };\n};\n\nexport const cardSetChangeImage = (cardId: string, placeholderId: string, imageInfo: ImageInfo): CardSetChangeImage => {\n    return {\n        type: CARDSET_CHANGE_IMAGE,\n        cardId,\n        placeholderId,\n        imageInfo,\n    };\n};\n\nexport const cardSetChangeImageBase64 = (\n    cardId: string,\n    placeholderId: string,\n    base64?: string,\n): CardSetChangeImageBase64 => {\n    return {\n        type: CARDSET_CHANGE_IMAGE_BASE64,\n        cardId,\n        placeholderId,\n        base64,\n    };\n};\n\nexport const cardSetActiveCardAndPlaceholder = (\n    cardId: string | null,\n    isBackActive: boolean,\n    placeholderId: string | null,\n): CardSetSetActiveCardAndPlaceholder => {\n    return {\n        type: CARDSET_SET_ACTIVE_CARD_AND_PLACEHOLDER,\n        cardId,\n        isBackActive,\n        placeholderId,\n    };\n};\n\nexport const cardSetSetSidebarState = (sidebarState: SidebarState | null): CardSetSetSidebarState => {\n    return {\n        type: CARDSET_SET_SIDEBAR_STATE,\n        sidebarState,\n    };\n};\n\nexport const cardSetSetZoom = (zoom: number): CardSetSetZoom => {\n    return {\n        type: CARDSET_SET_ZOOM,\n        zoom,\n    };\n};\n\nexport const cardSetUploadImage = (\n    gameId: string,\n    file: File,\n    load: FPLoadCallback,\n    error: FPErrorCallback,\n    progress: FPProgressCallback,\n    abort: FPAbortCallback,\n    cancelToken: CancelToken,\n): CardSetUploadImage => {\n    return {\n        type: CARDSET_UPLOAD_IMAGE,\n        gameId,\n        file,\n        load,\n        error,\n        progress,\n        abort,\n        cancelToken,\n    };\n};\n\nexport const cardSetDeleteImage = (\n    imageId: string,\n    load: FPRevertLoadCallback,\n    error: FPErrorCallback,\n): CardSetDeleteImage => {\n    return {\n        type: CARDSET_DELETE_IMAGE,\n        imageId,\n        load,\n        error,\n    };\n};\n\nexport const imageListRequest = (filter: string, location: string): ImageListAction => {\n    return {\n        type: IMAGE_LIST_REQUEST,\n        filter,\n        location,\n    };\n};\n","export const CURRENT_CARDSET_VERSION = 2;\nexport const DEFAULT_FONT = 'Roboto';\nexport const DEFAULT_FONT_VARIANT = 'regular';\nexport const DEFAULT_FONT_SIZE = 8;\nexport const DEFAULT_LINE_HEIGHT = 1.27;\n\nexport const BLEED_WIDTH = 25.4 / 8; // 1/8th of inch in mm\n","import axios, { AxiosError, CancelToken } from 'axios';\n\nimport { Credentials } from './actions';\n\nexport function handleAxiosError(error: AxiosError) {\n    if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        // error.response.status);\n        throw new Error(error.response.data.message);\n    } else if (error.request) {\n        console.log(error.request);\n        throw new Error(error.request);\n    } else {\n        throw new Error('Unknown error :(');\n    }\n}\n\nexport function getTokens(creds: Credentials) {\n    return axios\n        .post('/api/tokens', creds)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function refreshToken(refreshTokenValue: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${refreshTokenValue}` },\n    };\n    return axios\n        .post('/api/access_tokens', {}, config)\n        .then(resp => {\n            return resp.data.accessToken;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function deleteAccessToken(token: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .delete('/api/access_tokens', config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            if (error.response.status === 401) return {};\n            handleAxiosError(error);\n        });\n}\n\nexport function deleteRefreshToken(token: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .delete('/api/refresh_tokens', config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            if (error.response.status === 401) return {};\n            handleAxiosError(error);\n        });\n}\n\nexport function registerUser(creds: Credentials) {\n    return axios\n        .post('/api/users', creds)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function getRequest(url: string, token: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .get(url, config)\n        .then(resp => {\n            return resp;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function postRequest(url: string, token: string, data: object) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .post(url, data, config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function postRequestFormDataCancelable(\n    url: string,\n    token: string,\n    data: FormData,\n    progressCallback: (event: ProgressEvent) => void,\n    cancelToken: CancelToken,\n    cancelCallback: () => void,\n) {\n    let config = {\n        headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'multipart/form-data',\n        },\n        cancelToken,\n        onUploadProgress: progressCallback,\n    };\n\n    return axios\n        .post(url, data, config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            if (axios.isCancel(error)) {\n                cancelCallback();\n            } else {\n                handleAxiosError(error);\n            }\n        });\n}\n\nexport function putRequest(url: string, token: string, data: object) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .put(url, data, config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function deleteRequest(url: string, token: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .delete(url, config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n","export function downloadBlob(blobURL: string, filename: string, resolve?: () => void) {\n    const tempLink = document.createElement('a');\n    tempLink.style.display = 'none';\n    tempLink.href = blobURL;\n    tempLink.setAttribute('download', filename);\n    if (typeof tempLink.download === 'undefined') {\n        tempLink.setAttribute('target', '_blank');\n    }\n    document.body.appendChild(tempLink);\n    tempLink.click();\n    document.body.removeChild(tempLink);\n    setTimeout(() => {\n        window.URL.revokeObjectURL(blobURL);\n        if (resolve) resolve();\n    }, 100);\n}\n","import { downloadBlob } from './utils';\n\nexport const generatePdfUsingWorker = (\n    accessToken: string,\n    collectionType: string,\n    collectionId: string,\n    pageWidth: number,\n    pageHeight: number,\n    topBottomMargin: number,\n    leftRightMargin: number,\n    verticalSpace: number,\n    horizontalSpace: number,\n    includeBleedingArea: boolean,\n    cutMarksForScissors: boolean,\n    cutMarksForGuillotine: boolean,\n) => {\n    // @ts-ignore\n    if (!window.Worker) {\n        throw new Error('We can not generate PDF because of browser you use. Try using different browser');\n    }\n\n    return new Promise((resolve, reject) => {\n        try {\n            const worker = new Worker('/js/worker.js');\n            worker.addEventListener('message', event => {\n                const blobURL = event.data;\n                downloadBlob(blobURL, 'card.pdf', resolve);\n            });\n\n            worker.postMessage({\n                accessToken,\n                collectionType,\n                collectionId,\n                pageWidth,\n                pageHeight,\n                topBottomMargin,\n                leftRightMargin,\n                verticalSpace,\n                horizontalSpace,\n                includeBleedingArea,\n                cutMarksForScissors,\n                cutMarksForGuillotine,\n            });\n        } catch (e) {\n            reject(e);\n        }\n    });\n};\n","export function saveTokens(data: { accessToken: string; refreshToken: string }) {\n    localStorage.setItem('accessToken', data.accessToken);\n    localStorage.setItem('refreshToken', data.refreshToken);\n}\n\nexport function saveAccessToken(accessToken: string) {\n    localStorage.setItem('accessToken', accessToken);\n}\n\nexport function cleanTokens() {\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n}\n\nexport function getTokenFromStorage() {\n    let token = localStorage.getItem('accessToken') || null;\n    return token;\n}\n\nexport function getRefreshTokenFromStorage() {\n    let token = localStorage.getItem('refreshToken') || null;\n    return token;\n}\n","import WebFont from 'webfontloader';\n\nimport { DEFAULT_FONT } from './constants';\nimport { PlaceholdersCollection } from './actions';\n\nconst webFontsLoadPromise = (config: WebFont.Config) =>\n    new Promise((resolve, reject) => {\n        WebFont.load({ ...config, active: resolve, inactive: reject });\n    });\n\nexport const loadFontsUsedInPlaceholders = (data: { placeholders: PlaceholdersCollection }) => {\n    let fontsToLoad: Set<string> = new Set();\n    fontsToLoad.add(DEFAULT_FONT);\n    for (const plId in data.placeholders) {\n        const pl = data.placeholders[plId];\n        if (pl.type === 'text' && pl.fontFamily) {\n            let fontToLoad = pl.fontFamily;\n            if (pl.fontVariant && pl.fontVariant !== 'regular') {\n                fontToLoad += ':' + pl.fontVariant;\n            }\n\n            fontsToLoad.add(fontToLoad);\n        }\n    }\n\n    const config: WebFont.Config = {\n        google: {\n            families: [...Array.from(fontsToLoad)],\n        },\n    };\n\n    return webFontsLoadPromise(config);\n};\n","import { CancelToken } from 'axios';\nimport { XmlDocument, XmlNode } from 'xmldoc';\nimport { all, call, put, select, takeEvery, takeLatest } from 'redux-saga/effects';\nimport { delay, SagaIterator } from 'redux-saga';\nimport jwtDecode from 'jwt-decode';\n\nimport { BLEED_WIDTH } from './constants';\nimport {\n    CARDSET_ADD_IMAGE_PLACEHOLDER,\n    CARDSET_ADD_TEXT_PLACEHOLDER,\n    CARDSET_CHANGE_ACTIVE_PLACEHOLDER_NAME,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_ALIGN,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_COLOR,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY_AND_VARIANT,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_SIZE,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_VARIANT,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_LINE_HEIGHT,\n    CARDSET_CHANGE_FIT_FOR_ACTIVE_PLACEHOLDER,\n    CARDSET_CHANGE_HEIGHT,\n    CARDSET_CHANGE_IMAGE,\n    CARDSET_CHANGE_IS_TWO_SIDED,\n    CARDSET_CHANGE_PLACEHOLDER_ANGLE,\n    CARDSET_CHANGE_PLACEHOLDER_POSITION,\n    CARDSET_CHANGE_PLACEHOLDER_SIZE,\n    CARDSET_CHANGE_SNAPPING_DISTANCE,\n    CARDSET_CHANGE_TEXT,\n    CARDSET_CHANGE_WIDTH,\n    CARDSET_CLONE_CARD,\n    CARDSET_CREATE_CARD,\n    CARDSET_CREATE_FAILURE,\n    CARDSET_CREATE_REQUEST,\n    CARDSET_CREATE_SUCCESS,\n    CARDSET_DELETE_IMAGE,\n    CARDSET_DELETE_REQUEST,\n    CARDSET_IMPORT_DATA,\n    CARDSET_LIST_RESET,\n    CARDSET_LIST_SUCCESS,\n    CARDSET_LOCK_ACTIVE_PLACEHOLDER,\n    CARDSET_LOWER_ACTIVE_PLACEHOLDER_TO_BOTTOM,\n    CARDSET_RAISE_ACTIVE_PLACEHOLDER_TO_TOP,\n    CARDSET_REMOVE_ACTIVE_PLACEHOLDER,\n    CARDSET_REMOVE_CARD,\n    CARDSET_RENAME_REQUEST,\n    CARDSET_SELECT_FAILURE,\n    CARDSET_SELECT_REQUEST,\n    CARDSET_SELECT_SUCCESS,\n    CARDSET_SET_ZOOM,\n    CARDSET_UNLOCK_ACTIVE_PLACEHOLDER,\n    CARDSET_UPDATE_CARD_COUNT,\n    CARDSET_UPDATE_DATA_FAILURE,\n    CARDSET_UPDATE_DATA_REQUEST,\n    CARDSET_UPDATE_DATA_SUCCESS,\n    CARDSET_UPLOAD_IMAGE,\n    CARDSET_UPLOAD_IMAGE_FAILURE,\n    CARDSET_UPLOAD_IMAGE_SUCCESS,\n    CardSetChangeFitForActivePlaceholder,\n    CardSetChangeImage,\n    CardSetCreateRequest,\n    CardSetDeleteImage,\n    CardSetDeleteRequest,\n    CardSetRenameRequest,\n    CardSetSelectRequest,\n    CardSetType,\n    CardSetUploadImage,\n    CardSetsCollection,\n    GAME_CREATE_FAILURE,\n    GAME_CREATE_PDF_FAILURE,\n    GAME_CREATE_PDF_REQUEST,\n    GAME_CREATE_PDF_SUCCESS,\n    GAME_CREATE_REQUEST,\n    GAME_CREATE_SUCCESS,\n    GAME_DELETE_REQUEST,\n    GAME_LIST_FAILURE,\n    GAME_LIST_REQUEST,\n    GAME_LIST_RESET,\n    GAME_LIST_SUCCESS,\n    GAME_RENAME_REQUEST,\n    GAME_SELECT_FAILURE,\n    GAME_SELECT_REQUEST,\n    GAME_SELECT_SUCCESS,\n    GameCreatePdfRequest,\n    GameCreateRequest,\n    GameDeleteRequest,\n    GameRenameRequest,\n    GameSelectRequest,\n    GameType,\n    GamesCollection,\n    IMAGE_LIST_FAILURE,\n    IMAGE_LIST_REQUEST,\n    IMAGE_LIST_SUCCESS,\n    INIT_REQUEST,\n    ImageListRequest,\n    LOGIN_FAILURE,\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGOUT_FAILURE,\n    LOGOUT_REQUEST,\n    LOGOUT_SUCCESS,\n    LoginRequest,\n    MESSAGE_DISPLAY,\n    MESSAGE_HIDE,\n    MessageDisplay,\n    SIGNUP_FAILURE,\n    SIGNUP_REQUEST,\n    SIGNUP_SUCCESS,\n    SignUpRequest,\n    cardSetChangeImageBase64,\n    gameSelectRequest,\n    messageDisplay,\n} from './actions';\nimport { State } from './reducers';\nimport {\n    deleteAccessToken,\n    deleteRefreshToken,\n    deleteRequest,\n    getRequest,\n    getTokens,\n    postRequest,\n    postRequestFormDataCancelable,\n    putRequest,\n    refreshToken,\n    registerUser,\n} from './requests';\nimport { generatePdfUsingWorker } from './workerController';\nimport { getTokenFromStorage, getRefreshTokenFromStorage, saveAccessToken, saveTokens, cleanTokens } from './storage';\nimport { loadFontsUsedInPlaceholders } from './fontLoader';\n\n// Messages\nexport function* putError(message: string): SagaIterator {\n    yield put(messageDisplay('error', message));\n}\n\nexport function* putInfo(message: string): SagaIterator {\n    yield put(messageDisplay('info', message));\n}\n\nexport function* putProgress(text: string): SagaIterator {\n    const message = messageDisplay('progress', text, text);\n    yield put(message);\n    return message.message.id;\n}\n\nexport function* hideProgress(messageId: string): SagaIterator {\n    yield put({ type: MESSAGE_HIDE, messageId });\n}\n\nexport function* handleMessageDisplay(action: MessageDisplay): SagaIterator {\n    if (action.message.type === 'progress') return;\n\n    yield call(delay, 5000);\n    yield put({ type: MESSAGE_HIDE, messageId: action.message.id });\n}\n\n// Login & Signup\n// Token handling\n\nexport function validateToken(token: string): boolean {\n    try {\n        const decoded = jwtDecode<{ exp: number }>(token);\n        const valid = decoded.exp - new Date().getTime() / 1000 > 5;\n        return valid;\n    } catch (e) {\n        return false;\n    }\n}\n\nexport function* getToken(withErrorIfMissing: boolean, getFreshToken = false): SagaIterator {\n    const token = yield call(getTokenFromStorage);\n    if (token && !getFreshToken) {\n        const tokenValid = yield call(validateToken, token);\n        if (tokenValid) return token;\n    }\n\n    const refreshTokenValue = yield call(getRefreshTokenFromStorage);\n    if (!refreshTokenValue) {\n        if (withErrorIfMissing) throw new Error('Token not found.');\n        return null;\n    }\n\n    const refreshTokenValid = yield call(validateToken, refreshTokenValue);\n    if (!refreshTokenValid) {\n        yield put({ type: LOGOUT_REQUEST });\n        if (withErrorIfMissing) throw new Error('Token not found.');\n        return null;\n    }\n\n    const newToken = yield call(refreshToken, refreshTokenValue);\n    yield call(saveAccessToken, newToken);\n    return newToken;\n}\n\n// Login\n\nexport function* handleLoginRequest(action: LoginRequest): SagaIterator {\n    try {\n        const data = yield call(getTokens, action.creds);\n        yield call(saveTokens, data);\n        yield put({ type: LOGIN_SUCCESS });\n    } catch (e) {\n        yield put({ type: LOGIN_FAILURE });\n        yield call(putError, e.message);\n    }\n}\n\nexport function* handleLoginSuccess(): SagaIterator {\n    yield put({ type: GAME_LIST_REQUEST });\n}\n\n// Logout\n\nexport function* logoutToken(): SagaIterator {\n    const token = yield call(getTokenFromStorage);\n    if (token) {\n        const tokenValid = yield call(validateToken, token);\n        if (tokenValid) {\n            yield call(deleteAccessToken, token);\n        }\n    }\n}\n\nexport function* logoutRefreshToken(): SagaIterator {\n    const refreshTokenValue = yield call(getRefreshTokenFromStorage);\n    if (refreshTokenValue) {\n        const refreshTokenValid = yield call(validateToken, refreshTokenValue);\n        if (refreshTokenValid) {\n            yield call(deleteRefreshToken, refreshTokenValue);\n        }\n    }\n}\n\nexport function* handleLogoutRequest(): SagaIterator {\n    try {\n        yield call(logoutToken);\n        yield call(logoutRefreshToken);\n        yield call(cleanTokens);\n\n        yield put({ type: CARDSET_LIST_RESET });\n        yield put({ type: GAME_LIST_RESET });\n        yield put({ type: LOGOUT_SUCCESS });\n    } catch (e) {\n        yield put({ type: LOGOUT_FAILURE });\n        yield call(putError, e.message);\n    }\n}\n\n// Sign-up\n\nexport function* handleSignupRequest(action: SignUpRequest): SagaIterator {\n    try {\n        const data = yield call(registerUser, action.creds);\n        yield call(saveTokens, data);\n        yield put({ type: SIGNUP_SUCCESS });\n        yield put({ type: LOGIN_SUCCESS });\n    } catch (e) {\n        yield put({ type: SIGNUP_FAILURE });\n        yield call(putError, e.message);\n    }\n}\n\n// Init\nexport function* handleInitRequest(): SagaIterator {\n    try {\n        let token = yield call(getToken, false);\n        if (token) {\n            yield put({ type: LOGIN_SUCCESS });\n        }\n    } catch (e) {}\n}\n\n// Authorized Requests\nexport function* authorizedGetRequest(url: string): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(getRequest, url, token);\n}\n\nexport function* authorizedPostRequest(url: string, data: object): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(postRequest, url, token, data);\n}\n\nexport function* authorizedDeleteRequest(url: string): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(deleteRequest, url, token);\n}\n\nexport function* authorizedPostFormDataRequest(\n    url: string,\n    data: FormData,\n    progressCallback: (event: ProgressEvent) => void,\n    cancelToken: CancelToken,\n    cancelCallback: () => void,\n): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(postRequestFormDataCancelable, url, token, data, progressCallback, cancelToken, cancelCallback);\n}\n\nexport function* authorizedPutRequest(url: string, data: object): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(putRequest, url, token, data);\n}\n\n// Game\nexport function* handleGameCreateRequest(action: GameCreateRequest): SagaIterator {\n    try {\n        yield call(authorizedPostRequest, '/api/games', { name: action.gamename });\n        yield put({\n            type: GAME_CREATE_SUCCESS,\n        });\n        yield put({ type: GAME_LIST_REQUEST });\n    } catch (e) {\n        yield put({ type: GAME_CREATE_FAILURE });\n        yield call(putError, e.message);\n    }\n}\n\nexport function* handleGameDeleteRequest(action: GameDeleteRequest): SagaIterator {\n    try {\n        yield call(authorizedDeleteRequest, '/api/games/' + action.gameId);\n        yield put({ type: GAME_LIST_REQUEST });\n    } catch (e) {\n        yield call(putError, e.message);\n    }\n}\n\nexport function* handleGameRenameRequest(action: GameRenameRequest): SagaIterator {\n    try {\n        yield call(delay, 500);\n        yield call(authorizedPutRequest, '/api/games/' + action.gameId, { name: action.newName });\n    } catch (e) {\n        yield call(putError, e.message);\n    }\n}\n\nexport function* handleGameListRequest(): SagaIterator {\n    try {\n        const resp = yield call(authorizedGetRequest, '/api/games');\n        const allIds = resp.data.games.map((g: GameType) => g.id);\n        const byId = resp.data.games.reduce((obj: GamesCollection, g: GameType) => {\n            obj[g.id] = g;\n            return obj;\n        }, {});\n        yield put({\n            type: GAME_LIST_SUCCESS,\n            allIds,\n            byId,\n        });\n    } catch (e) {\n        yield put({ type: GAME_LIST_FAILURE });\n        yield call(putError, e.message);\n    }\n}\n\nexport function* handleGameSelectRequest(action: GameSelectRequest): SagaIterator {\n    try {\n        const resp = yield call(authorizedGetRequest, '/api/games/' + action.id);\n        yield put({\n            type: GAME_SELECT_SUCCESS,\n            id: action.id,\n        });\n\n        if (action.updateCardSets) {\n            const allIds = resp.data.cardsets.map((g: CardSetType) => g.id);\n            const byId = resp.data.cardsets.reduce((obj: CardSetsCollection, g: CardSetType) => {\n                obj[g.id] = g;\n                return obj;\n            }, {});\n            yield put({\n                type: CARDSET_LIST_SUCCESS,\n                allIds,\n                byId,\n            });\n        }\n    } catch (e) {\n        yield put({ type: GAME_SELECT_FAILURE });\n        yield call(putError, e.message);\n    }\n}\n\nexport function* handleGameCreatePdfRequest(action: GameCreatePdfRequest): SagaIterator {\n    let progressId = null;\n    try {\n        progressId = yield call(putProgress, 'Generating PDF');\n\n        const token = yield call(getToken, true, true);\n\n        yield call(\n            generatePdfUsingWorker,\n            token,\n            action.collectionType,\n            action.collectionId,\n            action.pageWidth,\n            action.pageHeight,\n            action.topBottomMargin,\n            action.leftRightMargin,\n            action.verticalSpace,\n            action.horizontalSpace,\n            action.includeBleedingArea,\n            action.cutMarksForScissors,\n            action.cutMarksForGuillotine,\n        );\n        yield call(hideProgress, progressId);\n        yield call(putInfo, 'PDF generated.');\n        yield put({\n            type: GAME_CREATE_PDF_SUCCESS,\n        });\n    } catch (e) {\n        yield put({ type: GAME_CREATE_PDF_FAILURE });\n        if (progressId !== null) yield call(hideProgress, progressId);\n        yield call(putError, e.message);\n    }\n}\n\n// Card Set\n\nexport function* handleCardSetCreateRequest(action: CardSetCreateRequest): SagaIterator {\n    try {\n        yield call(authorizedPostRequest, '/api/cardsets', {\n            name: action.cardsetname,\n            gameId: action.gameId,\n            data: JSON.stringify({ width: action.width, height: action.height }),\n        });\n        yield put({\n            type: CARDSET_CREATE_SUCCESS,\n        });\n        yield put(gameSelectRequest(action.gameId, true));\n    } catch (e) {\n        yield put({ type: CARDSET_CREATE_FAILURE });\n        yield call(putError, e.message);\n    }\n}\n\nexport function* handleCardSetDeleteRequest(action: CardSetDeleteRequest): SagaIterator {\n    try {\n        yield call(authorizedDeleteRequest, '/api/cardsets/' + action.cardSetId);\n        yield put({ type: GAME_LIST_REQUEST });\n\n        const state = yield select();\n        yield put(gameSelectRequest(state.games.active, true));\n    } catch (e) {\n        yield call(putError, e.message);\n    }\n}\n\nexport function* handleCardSetRenameRequest(action: CardSetRenameRequest): SagaIterator {\n    try {\n        yield call(delay, 500);\n        yield call(authorizedPutRequest, '/api/cardsets/' + action.cardSetId, { name: action.newName });\n    } catch (e) {\n        yield call(putError, e.message);\n    }\n}\n\nexport function* handleCardSetSelectRequest(action: CardSetSelectRequest): SagaIterator {\n    try {\n        const resp = yield call(authorizedGetRequest, '/api/cardsets/' + action.id);\n        const parsedData = JSON.parse(resp.data.data);\n        if (!('placeholdersAllIds' in parsedData) && 'placeholders' in parsedData) {\n            parsedData.placeholdersAllIds = Object.keys(parsedData.placeholders);\n        }\n\n        if (!('version' in parsedData)) {\n            parsedData.version = 2;\n            for (const plId in parsedData.placeholders) {\n                const placeholder = parsedData.placeholders[plId];\n                placeholder.x += BLEED_WIDTH;\n                placeholder.y += BLEED_WIDTH;\n            }\n        }\n\n        yield call(loadFontsUsedInPlaceholders, parsedData);\n        yield put({\n            type: CARDSET_SELECT_SUCCESS,\n            id: resp.data.id,\n            name: resp.data.name,\n            data: parsedData,\n        });\n        yield put(gameSelectRequest(resp.data.gameId, false));\n    } catch (e) {\n        yield put({ type: CARDSET_SELECT_FAILURE });\n        yield call(putError, e.message);\n    }\n}\n\nexport function* handleCardSetUploadImage(action: CardSetUploadImage): SagaIterator {\n    let progressId = null;\n    try {\n        progressId = yield call(putProgress, `Uploading ${action.file.name}`);\n        const formData = new FormData();\n        formData.set('gameId', action.gameId);\n        formData.append('image', action.file, action.file.name);\n\n        const data = yield call(\n            authorizedPostFormDataRequest,\n            '/api/images',\n            formData,\n            (event: ProgressEvent) => action.progress(event.lengthComputable, event.loaded, event.total),\n            action.cancelToken,\n            () => {\n                action.abort();\n            },\n        );\n        if (data !== undefined) {\n            // not cancelled\n            action.load(data.imageId.toString());\n            yield put({ type: CARDSET_UPLOAD_IMAGE_SUCCESS });\n            yield call(putInfo, `${action.file.name} uploaded`);\n        }\n        yield call(hideProgress, progressId);\n    } catch (e) {\n        yield put({ type: CARDSET_UPLOAD_IMAGE_FAILURE });\n        if (progressId !== null) yield call(hideProgress, progressId);\n        yield call(putError, e.message);\n        action.error(e.message);\n    }\n}\n\nexport function* handleCardSetDeleteImage(action: CardSetDeleteImage): SagaIterator {\n    try {\n        yield call(authorizedDeleteRequest, '/api/images/' + action.imageId);\n        action.load();\n    } catch (e) {\n        action.error(e.message);\n    }\n}\n\nfunction walkChildren(node: XmlNode, color: string) {\n    if (node.type === 'element') {\n        for (let child of node.children) {\n            if (child.type === 'element')\n                if (child.name === 'path') {\n                    child.attr['fill'] = color;\n                }\n            walkChildren(child, color);\n        }\n    }\n}\n\nfunction adjustSvg(data: string, preserveAspectRatio: boolean, color?: string): string {\n    const doc = new XmlDocument(data);\n    if (!preserveAspectRatio) {\n        doc.attr['preserveAspectRatio'] = 'none';\n    }\n\n    if (color) {\n        walkChildren(doc, color);\n    }\n\n    return btoa(doc.toString({ compressed: true }));\n}\n\nexport function* handleCardSetFitChange(action: CardSetChangeFitForActivePlaceholder): SagaIterator {\n    try {\n        yield call(delay, 100);\n        const state: State = yield select();\n\n        if (state.cardsets.activePlaceholder === null) {\n            return;\n        }\n\n        for (const cardId in state.cardsets.cardsById) {\n            const image = state.cardsets.images[cardId][state.cardsets.activePlaceholder];\n            if (image.url) {\n                const imageResp = yield call(authorizedGetRequest, image.url);\n                if (imageResp.headers['content-type'] === 'image/svg+xml') {\n                    if (action.fit === 'stretch') {\n                        const svg = adjustSvg(imageResp.data, false, image.color);\n                        yield put(cardSetChangeImageBase64(cardId, state.cardsets.activePlaceholder, svg));\n                    } else if (image.color) {\n                        const svg = adjustSvg(imageResp.data, true, image.color);\n                        yield put(cardSetChangeImageBase64(cardId, state.cardsets.activePlaceholder, svg));\n                    } else {\n                        yield put(cardSetChangeImageBase64(cardId, state.cardsets.activePlaceholder, undefined));\n                    }\n                }\n            }\n        }\n    } catch (e) {\n        yield call(putError, e.message);\n    }\n}\n\nexport function* handleCardSetChangeImage(action: CardSetChangeImage): SagaIterator {\n    try {\n        yield call(delay, 100);\n        const state: State = yield select();\n\n        const placeholder = state.cardsets.placeholders[action.placeholderId];\n        const imageInfo = state.cardsets.images[action.cardId][action.placeholderId];\n        if (placeholder.type === 'image' && imageInfo.url) {\n            const imageResp = yield call(authorizedGetRequest, imageInfo.url);\n\n            if (imageResp.headers['content-type'] === 'image/svg+xml') {\n                const name = placeholder.name || placeholder.id;\n\n                for (const plId in state.cardsets.placeholders) {\n                    const pl = state.cardsets.placeholders[plId];\n\n                    if ((pl.name === name || pl.id === name) && pl.type === 'image') {\n                        if (pl.fit === 'stretch') {\n                            const svg = adjustSvg(imageResp.data, false, imageInfo.color);\n                            yield put(cardSetChangeImageBase64(action.cardId, plId, svg));\n                        } else if (imageInfo.color) {\n                            const svg = adjustSvg(imageResp.data, true, imageInfo.color);\n                            yield put(cardSetChangeImageBase64(action.cardId, plId, svg));\n                        } else {\n                            yield put(cardSetChangeImageBase64(action.cardId, plId, undefined));\n                        }\n                    }\n                }\n            }\n        }\n    } catch (e) {\n        yield call(putError, e.message);\n    }\n}\n\nfunction closeHandler(e: Event) {\n    e.preventDefault();\n    e.returnValue = true;\n}\n\nfunction preventWindowClose() {\n    window.addEventListener('beforeunload', closeHandler);\n}\n\nfunction allowWindowClose() {\n    window.removeEventListener('beforeunload', closeHandler);\n}\n\nexport function* handleCardSetChange(): SagaIterator {\n    let progressId = null;\n\n    try {\n        preventWindowClose();\n        progressId = yield call(putProgress, 'Saving Card Set');\n\n        yield call(delay, 1000);\n        const state = yield select();\n\n        yield put({\n            type: CARDSET_UPDATE_DATA_REQUEST,\n        });\n\n        const cardsetId = state.cardsets.active;\n        const data = {\n            width: state.cardsets.width,\n            height: state.cardsets.height,\n            isTwoSided: state.cardsets.isTwoSided,\n            snappingDistance: state.cardsets.snappingDistance,\n            version: state.cardsets.version,\n            cardsAllIds: state.cardsets.cardsAllIds,\n            cardsById: state.cardsets.cardsById,\n            placeholdersAllIds: state.cardsets.placeholdersAllIds,\n            placeholders: state.cardsets.placeholders,\n            texts: state.cardsets.texts,\n            images: state.cardsets.images,\n            zoom: state.cardsets.zoom,\n        };\n\n        yield call(authorizedPutRequest, '/api/cardsets/' + cardsetId, {\n            name: state.cardsets.byId[cardsetId].name,\n            data: JSON.stringify(data),\n        });\n        yield call(hideProgress, progressId);\n        yield call(putInfo, 'Card Set saved');\n        yield put({\n            type: CARDSET_UPDATE_DATA_SUCCESS,\n        });\n        allowWindowClose();\n    } catch (e) {\n        yield put({ type: CARDSET_UPDATE_DATA_FAILURE });\n        if (progressId !== null) yield call(hideProgress, progressId);\n        yield call(putError, e.message);\n        allowWindowClose();\n    }\n}\n\n// Images\nexport function* handleImageListRequest(action: ImageListRequest): SagaIterator {\n    try {\n        yield call(delay, 200);\n        const state = yield select();\n\n        const filter = encodeURIComponent(action.filter);\n        const location = encodeURIComponent(action.location);\n        const game = encodeURIComponent(state.games.active);\n        const resp = yield call(authorizedGetRequest, `/api/images?name=${filter}&location=${location}&game=${game}`);\n        const images = resp.data.images;\n        yield put({\n            type: IMAGE_LIST_SUCCESS,\n            images,\n        });\n    } catch (e) {\n        yield put({ type: IMAGE_LIST_FAILURE });\n        yield call(putError, e.message);\n    }\n}\n\n// All\nexport function* rootSaga(): SagaIterator {\n    yield all([\n        takeEvery(MESSAGE_DISPLAY, handleMessageDisplay),\n        takeLatest(LOGIN_REQUEST, handleLoginRequest),\n        takeLatest(LOGIN_SUCCESS, handleLoginSuccess),\n        takeLatest(LOGOUT_REQUEST, handleLogoutRequest),\n        takeLatest(SIGNUP_REQUEST, handleSignupRequest),\n        takeLatest(GAME_CREATE_REQUEST, handleGameCreateRequest),\n        takeLatest(GAME_DELETE_REQUEST, handleGameDeleteRequest),\n        takeLatest(GAME_RENAME_REQUEST, handleGameRenameRequest),\n        takeLatest(GAME_LIST_REQUEST, handleGameListRequest),\n        takeLatest(GAME_SELECT_REQUEST, handleGameSelectRequest),\n        takeLatest(GAME_CREATE_PDF_REQUEST, handleGameCreatePdfRequest),\n        takeLatest(CARDSET_CREATE_REQUEST, handleCardSetCreateRequest),\n        takeLatest(CARDSET_DELETE_REQUEST, handleCardSetDeleteRequest),\n        takeLatest(CARDSET_RENAME_REQUEST, handleCardSetRenameRequest),\n        takeLatest(CARDSET_SELECT_REQUEST, handleCardSetSelectRequest),\n        takeEvery(CARDSET_UPLOAD_IMAGE, handleCardSetUploadImage),\n        takeEvery(CARDSET_DELETE_IMAGE, handleCardSetDeleteImage),\n        takeEvery(CARDSET_CHANGE_FIT_FOR_ACTIVE_PLACEHOLDER, handleCardSetFitChange),\n        takeEvery(CARDSET_CHANGE_IMAGE, handleCardSetChangeImage),\n\n        takeLatest(CARDSET_CREATE_CARD, handleCardSetChange),\n        takeLatest(CARDSET_CLONE_CARD, handleCardSetChange),\n        takeLatest(CARDSET_REMOVE_CARD, handleCardSetChange),\n        takeLatest(CARDSET_UPDATE_CARD_COUNT, handleCardSetChange),\n        takeLatest(CARDSET_ADD_TEXT_PLACEHOLDER, handleCardSetChange),\n        takeLatest(CARDSET_ADD_IMAGE_PLACEHOLDER, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_PLACEHOLDER_NAME, handleCardSetChange),\n        takeLatest(CARDSET_REMOVE_ACTIVE_PLACEHOLDER, handleCardSetChange),\n        takeLatest(CARDSET_RAISE_ACTIVE_PLACEHOLDER_TO_TOP, handleCardSetChange),\n        takeLatest(CARDSET_LOWER_ACTIVE_PLACEHOLDER_TO_BOTTOM, handleCardSetChange),\n        takeLatest(CARDSET_LOCK_ACTIVE_PLACEHOLDER, handleCardSetChange),\n        takeLatest(CARDSET_UNLOCK_ACTIVE_PLACEHOLDER, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_FIT_FOR_ACTIVE_PLACEHOLDER, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_WIDTH, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_HEIGHT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_IS_TWO_SIDED, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_SNAPPING_DISTANCE, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_PLACEHOLDER_POSITION, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_PLACEHOLDER_SIZE, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_PLACEHOLDER_ANGLE, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_ALIGN, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_COLOR, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_VARIANT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY_AND_VARIANT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_SIZE, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_LINE_HEIGHT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_TEXT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_IMAGE, handleCardSetChange),\n        takeLatest(CARDSET_SET_ZOOM, handleCardSetChange),\n        takeLatest(CARDSET_IMPORT_DATA, handleCardSetChange),\n\n        takeLatest(IMAGE_LIST_REQUEST, handleImageListRequest),\n\n        takeLatest(INIT_REQUEST, handleInitRequest),\n    ]);\n}\n","import { combineReducers } from 'redux';\nimport shortid from 'shortid';\n\nimport {\n    CARDSET_ADD_IMAGE_PLACEHOLDER,\n    CARDSET_ADD_TEXT_PLACEHOLDER,\n    CARDSET_CHANGE_ACTIVE_PLACEHOLDER_NAME,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_ALIGN,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_COLOR,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY_AND_VARIANT,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_SIZE,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_VARIANT,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_LINE_HEIGHT,\n    CARDSET_CHANGE_FIT_FOR_ACTIVE_PLACEHOLDER,\n    CARDSET_CHANGE_HEIGHT,\n    CARDSET_CHANGE_IMAGE,\n    CARDSET_CHANGE_IMAGE_BASE64,\n    CARDSET_CHANGE_IS_TWO_SIDED,\n    CARDSET_CHANGE_PLACEHOLDER_ANGLE,\n    CARDSET_CHANGE_PLACEHOLDER_POSITION,\n    CARDSET_CHANGE_PLACEHOLDER_SIZE,\n    CARDSET_CHANGE_SNAPPING_DISTANCE,\n    CARDSET_CHANGE_TEXT,\n    CARDSET_CHANGE_WIDTH,\n    CARDSET_CLONE_CARD,\n    CARDSET_CREATE_CARD,\n    CARDSET_CREATE_FAILURE,\n    CARDSET_CREATE_REQUEST,\n    CARDSET_CREATE_SUCCESS,\n    CARDSET_IMPORT_DATA,\n    CARDSET_LIST_FAILURE,\n    CARDSET_LIST_REQUEST,\n    CARDSET_LIST_RESET,\n    CARDSET_LIST_SUCCESS,\n    CARDSET_LOCK_ACTIVE_PLACEHOLDER,\n    CARDSET_LOWER_ACTIVE_PLACEHOLDER_TO_BOTTOM,\n    CARDSET_RAISE_ACTIVE_PLACEHOLDER_TO_TOP,\n    CARDSET_REMOVE_ACTIVE_PLACEHOLDER,\n    CARDSET_REMOVE_CARD,\n    CARDSET_RENAME_REQUEST,\n    CARDSET_SELECT_FAILURE,\n    CARDSET_SELECT_REQUEST,\n    CARDSET_SELECT_SUCCESS,\n    CARDSET_SET_ACTIVE_CARD_AND_PLACEHOLDER,\n    CARDSET_SET_SIDEBAR_STATE,\n    CARDSET_SET_ZOOM,\n    CARDSET_UNLOCK_ACTIVE_PLACEHOLDER,\n    CARDSET_UPDATE_CARD_COUNT,\n    CARDSET_UPDATE_DATA_FAILURE,\n    CARDSET_UPDATE_DATA_REQUEST,\n    CARDSET_UPDATE_DATA_SUCCESS,\n    CardSetAction,\n    CardSetsCollection,\n    CardsCollection,\n    GAME_CREATE_FAILURE,\n    GAME_CREATE_PDF_FAILURE,\n    GAME_CREATE_PDF_REQUEST,\n    GAME_CREATE_PDF_SUCCESS,\n    GAME_CREATE_REQUEST,\n    GAME_CREATE_SUCCESS,\n    GAME_LIST_FAILURE,\n    GAME_LIST_REQUEST,\n    GAME_LIST_RESET,\n    GAME_LIST_SUCCESS,\n    GAME_RENAME_REQUEST,\n    GAME_SELECT_FAILURE,\n    GAME_SELECT_REQUEST,\n    GAME_SELECT_SUCCESS,\n    GameAction,\n    GamesCollection,\n    IMAGE_LIST_FAILURE,\n    IMAGE_LIST_REQUEST,\n    IMAGE_LIST_SUCCESS,\n    IdsArray,\n    ImageArray,\n    ImageListAction,\n    ImagePlaceholderType,\n    LOGIN_FAILURE,\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGOUT_SUCCESS,\n    LoginAction,\n    MESSAGE_DISPLAY,\n    MESSAGE_HIDE,\n    MessageAction,\n    MessageType,\n    PlaceholdersCollection,\n    PlaceholdersImageInfoByCardCollection,\n    PlaceholdersImageInfoCollection,\n    PlaceholdersTextInfoByCardCollection,\n    PlaceholdersTextInfoCollection,\n    SIGNUP_FAILURE,\n    SIGNUP_REQUEST,\n    SIGNUP_SUCCESS,\n    SidebarState,\n    SignUpAction,\n    TextPlaceholderType,\n} from './actions';\nimport {\n    CURRENT_CARDSET_VERSION,\n    DEFAULT_FONT,\n    DEFAULT_FONT_SIZE,\n    DEFAULT_FONT_VARIANT,\n    DEFAULT_LINE_HEIGHT,\n} from './constants';\n\nexport const ACTIVITY_CREATING = 0x1;\nexport const ACTIVITY_LISTING = 0x2;\nexport const ACTIVITY_SELECTING = 0x4;\nexport const ACTIVITY_CREATING_PDF = 0x8;\nexport const ACTIVITY_UPDATING = 0x10;\n\nexport interface MessageState {\n    messages: MessageType[];\n}\n\nexport const DefaultMessageState: MessageState = {\n    messages: [],\n};\n\nexport interface AuthState {\n    isAuthenticated: boolean;\n    user: string;\n}\n\nexport const DefaultAuthState: AuthState = {\n    isAuthenticated: false,\n    user: '',\n};\n\nexport interface SignUpState {\n    signingup: boolean;\n}\n\nexport const DefaultSignUpState: SignUpState = {\n    signingup: false,\n};\n\nexport interface GameState {\n    byId: GamesCollection;\n    allIds: IdsArray;\n    activity: number;\n    active: string | null;\n}\n\nexport const DefaultGameState: GameState = {\n    byId: {},\n    allIds: [],\n    activity: 0,\n    active: null,\n};\n\nexport interface TextSettings {\n    align: string;\n    color: string;\n    fontFamily: string;\n    fontVariant: string;\n    fontSize: number;\n    lineHeight?: number;\n}\n\nexport interface CardSetState {\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    snappingDistance: number;\n    version: number;\n    byId: CardSetsCollection;\n    allIds: IdsArray;\n    activity: number;\n    active: string | null;\n    cardsAllIds: IdsArray;\n    cardsById: CardsCollection;\n    activeCard: string | null;\n    isBackActive: boolean;\n    activePlaceholder: string | null;\n    placeholders: PlaceholdersCollection;\n    placeholdersAllIds: IdsArray;\n    texts: PlaceholdersTextInfoByCardCollection;\n    images: PlaceholdersImageInfoByCardCollection;\n    textSettings: TextSettings;\n    activeSidebar: SidebarState | null;\n    zoom: number;\n}\n\nexport const DefaultCardSetState: CardSetState = {\n    width: 63.5,\n    height: 88.9,\n    isTwoSided: false,\n    snappingDistance: 1,\n    version: CURRENT_CARDSET_VERSION,\n    byId: {},\n    allIds: [],\n    activity: 0,\n    active: null,\n    placeholders: {},\n    placeholdersAllIds: [],\n    cardsById: {},\n    cardsAllIds: [],\n    activeCard: null,\n    isBackActive: false,\n    activePlaceholder: null,\n    texts: {},\n    images: {},\n    textSettings: {\n        align: 'left',\n        color: '#000000',\n        fontFamily: DEFAULT_FONT,\n        fontVariant: DEFAULT_FONT_VARIANT,\n        fontSize: DEFAULT_FONT_SIZE,\n        lineHeight: DEFAULT_LINE_HEIGHT,\n    },\n    activeSidebar: null,\n    zoom: 1,\n};\n\nexport interface ImageState {\n    activity: number;\n    filter: string;\n    images: ImageArray;\n}\n\nexport const DefaultImageState: ImageState = {\n    activity: 0,\n    filter: '',\n    images: [],\n};\n\nexport interface State {\n    message: MessageState;\n    auth: AuthState;\n    signup: SignUpState;\n    games: GameState;\n    cardsets: CardSetState;\n    images: ImageState;\n}\n\nexport const DefaultState: State = {\n    message: DefaultMessageState,\n    auth: DefaultAuthState,\n    signup: DefaultSignUpState,\n    games: DefaultGameState,\n    cardsets: DefaultCardSetState,\n    images: DefaultImageState,\n};\n\nexport function message(state: MessageState = DefaultMessageState, action: MessageAction): MessageState {\n    switch (action.type) {\n        case MESSAGE_DISPLAY:\n            const found = state.messages.find(m => m.id === action.message.id);\n            if (found) return state;\n\n            return {\n                ...state,\n                messages: state.messages.concat(action.message),\n            };\n        case MESSAGE_HIDE:\n            return Object.assign({}, state, {\n                messages: state.messages.filter(m => m.id !== action.messageId),\n            });\n        default:\n            return state;\n    }\n}\n\nexport function auth(state: AuthState = DefaultAuthState, action: LoginAction): AuthState {\n    switch (action.type) {\n        case LOGIN_REQUEST:\n            return Object.assign({}, state, {\n                isAuthenticated: false,\n                user: action.creds.username,\n            });\n        case LOGIN_SUCCESS:\n            return Object.assign({}, state, {\n                isAuthenticated: true,\n            });\n        case LOGIN_FAILURE:\n            return Object.assign({}, state, {\n                isAuthenticated: false,\n            });\n        case LOGOUT_SUCCESS:\n            return Object.assign({}, state, {\n                isAuthenticated: false,\n            });\n        default:\n            return state;\n    }\n}\n\nexport function signup(state: SignUpState = DefaultSignUpState, action: SignUpAction): SignUpState {\n    switch (action.type) {\n        case SIGNUP_REQUEST:\n            return Object.assign({}, state, {\n                signingup: true,\n            });\n        case SIGNUP_SUCCESS:\n            return Object.assign({}, state, {\n                signingup: false,\n            });\n        case SIGNUP_FAILURE:\n            return Object.assign({}, state, {\n                signingup: false,\n            });\n        default:\n            return state;\n    }\n}\n\nexport function games(state: GameState = DefaultGameState, action: GameAction): GameState {\n    switch (action.type) {\n        case GAME_CREATE_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_CREATING,\n            });\n        case GAME_CREATE_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING,\n            });\n        case GAME_CREATE_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING,\n            });\n        case GAME_RENAME_REQUEST:\n            const game = state.byId[action.gameId];\n\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    [game.id]: {\n                        ...game,\n                        name: action.newName,\n                    },\n                },\n            };\n        case GAME_LIST_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_LISTING,\n            });\n        case GAME_LIST_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_LISTING,\n                byId: action.byId,\n                allIds: action.allIds,\n            });\n        case GAME_LIST_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_LISTING,\n            });\n        case GAME_LIST_RESET:\n            return Object.assign({}, state, {\n                activity: 0,\n                byId: {},\n                allIds: [],\n            });\n        case GAME_SELECT_REQUEST:\n            return Object.assign({}, state, {\n                activity: ACTIVITY_SELECTING,\n            });\n        case GAME_SELECT_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_SELECTING,\n                active: action.id,\n            });\n        case GAME_SELECT_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_SELECTING,\n            });\n        case GAME_CREATE_PDF_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_CREATING_PDF,\n            });\n        case GAME_CREATE_PDF_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING_PDF,\n            });\n        case GAME_CREATE_PDF_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING_PDF,\n            });\n        default:\n            return state;\n    }\n}\n\nexport function cardsets(state: CardSetState = DefaultCardSetState, action: CardSetAction): CardSetState {\n    switch (action.type) {\n        case CARDSET_CREATE_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_CREATING,\n            });\n        case CARDSET_CREATE_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING,\n            });\n        case CARDSET_CREATE_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING,\n            });\n        case CARDSET_RENAME_REQUEST:\n            const cardset = state.byId[action.cardSetId];\n\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    [cardset.id]: {\n                        ...cardset,\n                        name: action.newName,\n                    },\n                },\n            };\n        case CARDSET_UPDATE_DATA_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_UPDATING,\n            });\n        case CARDSET_UPDATE_DATA_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_UPDATING,\n            });\n        case CARDSET_UPDATE_DATA_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_UPDATING,\n            });\n        case CARDSET_LIST_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_LISTING,\n            });\n        case CARDSET_LIST_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_LISTING,\n                byId: action.byId,\n                allIds: action.allIds,\n            });\n        case CARDSET_LIST_RESET:\n            return Object.assign({}, state, {\n                activity: 0,\n                byId: {},\n                allIds: [],\n            });\n        case CARDSET_LIST_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_LISTING,\n            });\n        case CARDSET_SELECT_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_SELECTING,\n            });\n        case CARDSET_SELECT_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_SELECTING,\n                active: action.id,\n                byId: Object.assign({}, state.byId, {\n                    [action.id]: {\n                        id: action.id,\n                        name: action.name,\n                    },\n                }),\n                width: action.data.width || 63.5,\n                height: action.data.height || 88.9,\n                isTwoSided: action.data.isTwoSided || false,\n                snappingDistance: action.data.snappingDistance || 1,\n                version: action.data.version,\n                cardsAllIds: action.data.cardsAllIds || [],\n                cardsById: action.data.cardsById || {},\n                placeholders: action.data.placeholders || {},\n                placeholdersAllIds: action.data.placeholdersAllIds || [],\n                texts: action.data.texts || {},\n                images: action.data.images || {},\n                activeCard: null,\n                activePlaceholder: null,\n                isBackActive: false,\n                zoom: action.data.zoom || 1,\n            });\n        case CARDSET_SELECT_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_SELECTING,\n            });\n        case CARDSET_CREATE_CARD:\n            return {\n                ...state,\n                cardsById: {\n                    ...state.cardsById,\n                    [action.card.id]: action.card,\n                },\n                cardsAllIds: state.cardsAllIds ? state.cardsAllIds.concat(action.card.id) : [action.card.id],\n            };\n        case CARDSET_CLONE_CARD: {\n            let newCard = { ...action.card, id: shortid.generate() };\n\n            const index = state.cardsAllIds.indexOf(action.card.id) + 1;\n            const cardsAllIds = [...state.cardsAllIds.slice(0, index), newCard.id, ...state.cardsAllIds.slice(index)];\n\n            return {\n                ...state,\n                cardsById: {\n                    ...state.cardsById,\n                    [newCard.id]: newCard,\n                },\n                cardsAllIds,\n                texts: {\n                    ...state.texts,\n                    [newCard.id]: {\n                        ...state.texts[action.card.id],\n                    },\n                },\n                images: {\n                    ...state.images,\n                    [newCard.id]: {\n                        ...state.images[action.card.id],\n                    },\n                },\n            };\n        }\n        case CARDSET_REMOVE_CARD: {\n            const cardId = action.card.id;\n            let cardsById = { ...state.cardsById };\n            delete cardsById[cardId];\n\n            let texts = { ...state.texts };\n            if (cardId in texts) {\n                delete texts[cardId];\n            }\n\n            let images = { ...state.images };\n            if (cardId in images) {\n                delete images[cardId];\n            }\n\n            let activeCard = state.activeCard === cardId ? null : state.activeCard;\n\n            const cardsAllIds = state.cardsAllIds.filter(id => id !== cardId);\n\n            let placeholders = state.placeholders;\n            let placeholdersAllIds = state.placeholdersAllIds;\n            if (cardsAllIds.length === 0) {\n                placeholders = {};\n                placeholdersAllIds = [];\n            }\n\n            return {\n                ...state,\n                cardsById,\n                cardsAllIds,\n                placeholders,\n                placeholdersAllIds,\n                texts,\n                images,\n                activeCard,\n            };\n        }\n        case CARDSET_UPDATE_CARD_COUNT: {\n            const cardId = action.card.id;\n            let card = { ...state.cardsById[cardId] };\n            card.count = action.count;\n\n            return {\n                ...state,\n                cardsById: {\n                    ...state.cardsById,\n                    [cardId]: card,\n                },\n            };\n        }\n        case CARDSET_ADD_TEXT_PLACEHOLDER: {\n            let textSettings = { ...state.textSettings };\n            const id = shortid.generate();\n            const textPlaceholder: TextPlaceholderType = {\n                id,\n                type: 'text',\n                x: 5,\n                y: 5,\n                width: 20,\n                height: 10,\n                angle: 0,\n                align: textSettings.align,\n                color: textSettings.color,\n                fontFamily: textSettings.fontFamily,\n                fontVariant: textSettings.fontVariant,\n                fontSize: textSettings.fontSize,\n                lineHeight: textSettings.lineHeight || DEFAULT_LINE_HEIGHT,\n                isOnBack: state.isBackActive,\n            };\n\n            return {\n                ...state,\n                placeholders: {\n                    ...state.placeholders,\n                    [id]: textPlaceholder,\n                },\n                placeholdersAllIds: [...state.placeholdersAllIds, id],\n            };\n        }\n        case CARDSET_ADD_IMAGE_PLACEHOLDER: {\n            const id = shortid.generate();\n            const imagePlaceholder: ImagePlaceholderType = {\n                id,\n                type: 'image',\n                x: 5,\n                y: 5,\n                width: 20,\n                height: 20,\n                angle: 0,\n                isOnBack: state.isBackActive,\n            };\n\n            return {\n                ...state,\n                placeholders: {\n                    ...state.placeholders,\n                    [id]: imagePlaceholder,\n                },\n                placeholdersAllIds: [...state.placeholdersAllIds, id],\n            };\n        }\n        case CARDSET_CHANGE_ACTIVE_PLACEHOLDER_NAME: {\n            if (state.activePlaceholder !== null) {\n                let placeholders = { ...state.placeholders };\n                placeholders[state.activePlaceholder] = {\n                    ...placeholders[state.activePlaceholder],\n                    name: action.name,\n                };\n\n                return {\n                    ...state,\n                    placeholders,\n                };\n            }\n\n            return state;\n        }\n\n        case CARDSET_REMOVE_ACTIVE_PLACEHOLDER: {\n            const placeholderId = state.activePlaceholder;\n            if (placeholderId !== undefined && placeholderId !== null) {\n                const activePlaceholder = state.placeholders[placeholderId];\n                if (activePlaceholder.locked) {\n                    return state;\n                }\n\n                let placeholders = { ...state.placeholders };\n                let placeholdersAllIds = [...state.placeholdersAllIds];\n                if (placeholderId in placeholders) {\n                    delete placeholders[placeholderId];\n                }\n                let placeholderIndex = placeholdersAllIds.indexOf(placeholderId);\n                if (placeholderIndex !== -1) {\n                    placeholdersAllIds.splice(placeholderIndex, 1);\n                }\n\n                let texts = { ...state.texts };\n                for (const cardId in texts) {\n                    if (placeholderId in texts[cardId]) {\n                        let placeholderTexts = { ...texts[cardId] };\n                        delete placeholderTexts[placeholderId];\n                        texts[cardId] = placeholderTexts;\n                    }\n                }\n\n                let images = { ...state.images };\n                for (const cardId in images) {\n                    if (placeholderId in images[cardId]) {\n                        let placeholderImages = { ...images[cardId] };\n                        delete placeholderImages[placeholderId];\n                        images[cardId] = placeholderImages;\n                    }\n                }\n\n                return {\n                    ...state,\n                    placeholders,\n                    placeholdersAllIds,\n                    texts,\n                    images,\n                    activePlaceholder: null,\n                };\n            }\n            return state;\n        }\n        case CARDSET_RAISE_ACTIVE_PLACEHOLDER_TO_TOP: {\n            let placeholdersAllIds = [...state.placeholdersAllIds];\n\n            if (state.activePlaceholder !== null) {\n                let index = placeholdersAllIds.indexOf(state.activePlaceholder);\n                if (index !== -1) {\n                    placeholdersAllIds.push(placeholdersAllIds.splice(index, 1)[0]);\n                }\n            }\n\n            return {\n                ...state,\n                placeholdersAllIds,\n            };\n        }\n        case CARDSET_LOWER_ACTIVE_PLACEHOLDER_TO_BOTTOM: {\n            let placeholdersAllIds = [...state.placeholdersAllIds];\n\n            if (state.activePlaceholder !== null) {\n                let index = placeholdersAllIds.indexOf(state.activePlaceholder);\n                if (index !== -1) {\n                    placeholdersAllIds.unshift(placeholdersAllIds.splice(index, 1)[0]);\n                }\n            }\n\n            return {\n                ...state,\n                placeholdersAllIds,\n            };\n        }\n        case CARDSET_LOCK_ACTIVE_PLACEHOLDER: {\n            if (state.activePlaceholder) {\n                const placeholder = {\n                    ...state.placeholders[state.activePlaceholder],\n                    locked: true,\n                };\n\n                return {\n                    ...state,\n                    placeholders: {\n                        ...state.placeholders,\n                        [state.activePlaceholder]: placeholder,\n                    },\n                };\n            }\n\n            return state;\n        }\n        case CARDSET_UNLOCK_ACTIVE_PLACEHOLDER: {\n            if (state.activePlaceholder) {\n                const placeholder = {\n                    ...state.placeholders[state.activePlaceholder],\n                    locked: false,\n                };\n\n                return {\n                    ...state,\n                    placeholders: {\n                        ...state.placeholders,\n                        [state.activePlaceholder]: placeholder,\n                    },\n                };\n            }\n\n            return state;\n        }\n        case CARDSET_CHANGE_FIT_FOR_ACTIVE_PLACEHOLDER: {\n            if (state.activePlaceholder) {\n                const placeholder = {\n                    ...state.placeholders[state.activePlaceholder],\n                    fit: action.fit,\n                };\n\n                return {\n                    ...state,\n                    placeholders: {\n                        ...state.placeholders,\n                        [state.activePlaceholder]: placeholder,\n                    },\n                };\n            }\n\n            return state;\n        }\n        case CARDSET_CHANGE_WIDTH: {\n            return {\n                ...state,\n                width: action.width,\n            };\n        }\n        case CARDSET_CHANGE_HEIGHT: {\n            return {\n                ...state,\n                height: action.height,\n            };\n        }\n        case CARDSET_CHANGE_IS_TWO_SIDED: {\n            return {\n                ...state,\n                isTwoSided: action.isTwoSided,\n            };\n        }\n        case CARDSET_CHANGE_SNAPPING_DISTANCE: {\n            return {\n                ...state,\n                snappingDistance: action.snappingDistance,\n            };\n        }\n        case CARDSET_CHANGE_PLACEHOLDER_POSITION: {\n            let x = action.x;\n            let y = action.y;\n            let snappingDistance = state.snappingDistance;\n\n            if (snappingDistance !== 0) {\n                x = Math.round(x / snappingDistance) * snappingDistance;\n                y = Math.round(y / snappingDistance) * snappingDistance;\n            }\n\n            const placeholder = {\n                ...state.placeholders[action.placeholder.id],\n                x,\n                y,\n            };\n\n            return {\n                ...state,\n                placeholders: {\n                    ...state.placeholders,\n                    [action.placeholder.id]: placeholder,\n                },\n            };\n        }\n        case CARDSET_CHANGE_PLACEHOLDER_SIZE: {\n            let width = action.width;\n            let height = action.height;\n            let snappingDistance = state.snappingDistance;\n\n            if (snappingDistance !== 0) {\n                width = Math.round(width / snappingDistance) * snappingDistance;\n                height = Math.round(height / snappingDistance) * snappingDistance;\n            }\n\n            const placeholder = {\n                ...state.placeholders[action.placeholder.id],\n                width,\n                height,\n            };\n\n            return {\n                ...state,\n                placeholders: {\n                    ...state.placeholders,\n                    [action.placeholder.id]: placeholder,\n                },\n            };\n        }\n        case CARDSET_CHANGE_PLACEHOLDER_ANGLE: {\n            const placeholder = {\n                ...state.placeholders[action.placeholder.id],\n                angle: action.angle,\n            };\n\n            return {\n                ...state,\n                placeholders: {\n                    ...state.placeholders,\n                    [action.placeholder.id]: placeholder,\n                },\n            };\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_ALIGN: {\n            let textSettings = {\n                ...state.textSettings,\n                align: action.align,\n            };\n\n            if (state.activePlaceholder) {\n                const textPlaceholder = {\n                    ...state.placeholders[state.activePlaceholder],\n                    align: action.align,\n                };\n\n                return {\n                    ...state,\n                    placeholders: {\n                        ...state.placeholders,\n                        [state.activePlaceholder]: textPlaceholder,\n                    },\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_COLOR: {\n            let textSettings = {\n                ...state.textSettings,\n                color: action.color,\n            };\n\n            if (state.activePlaceholder) {\n                const textPlaceholder = {\n                    ...state.placeholders[state.activePlaceholder],\n                    color: action.color,\n                };\n\n                return {\n                    ...state,\n                    placeholders: {\n                        ...state.placeholders,\n                        [state.activePlaceholder]: textPlaceholder,\n                    },\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY: {\n            let textSettings = {\n                ...state.textSettings,\n                color: action.fontFamily,\n            };\n\n            if (state.activePlaceholder) {\n                const textPlaceholder = {\n                    ...state.placeholders[state.activePlaceholder],\n                    fontFamily: action.fontFamily,\n                };\n\n                return {\n                    ...state,\n                    placeholders: {\n                        ...state.placeholders,\n                        [state.activePlaceholder]: textPlaceholder,\n                    },\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_VARIANT: {\n            let textSettings = {\n                ...state.textSettings,\n                color: action.fontVariant,\n            };\n\n            if (state.activePlaceholder) {\n                const textPlaceholder = {\n                    ...state.placeholders[state.activePlaceholder],\n                    fontVariant: action.fontVariant,\n                };\n\n                return {\n                    ...state,\n                    placeholders: {\n                        ...state.placeholders,\n                        [state.activePlaceholder]: textPlaceholder,\n                    },\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY_AND_VARIANT: {\n            let textSettings = {\n                ...state.textSettings,\n                fontFamily: action.fontFamily,\n                fontVariant: action.fontVariant,\n            };\n\n            if (state.activePlaceholder) {\n                const textPlaceholder = {\n                    ...state.placeholders[state.activePlaceholder],\n                    fontFamily: action.fontFamily,\n                    fontVariant: action.fontVariant,\n                };\n\n                return {\n                    ...state,\n                    placeholders: {\n                        ...state.placeholders,\n                        [state.activePlaceholder]: textPlaceholder,\n                    },\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_SIZE: {\n            let textSettings = {\n                ...state.textSettings,\n                fontSize: action.fontSize,\n            };\n\n            if (state.activePlaceholder) {\n                const textPlaceholder = {\n                    ...state.placeholders[state.activePlaceholder],\n                    fontSize: action.fontSize,\n                };\n\n                return {\n                    ...state,\n                    placeholders: {\n                        ...state.placeholders,\n                        [state.activePlaceholder]: textPlaceholder,\n                    },\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_LINE_HEIGHT: {\n            let textSettings = {\n                ...state.textSettings,\n                lineHeight: action.lineHeight,\n            };\n\n            if (state.activePlaceholder) {\n                const textPlaceholder = {\n                    ...state.placeholders[state.activePlaceholder],\n                    lineHeight: action.lineHeight,\n                };\n\n                return {\n                    ...state,\n                    placeholders: {\n                        ...state.placeholders,\n                        [state.activePlaceholder]: textPlaceholder,\n                    },\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_TEXT: {\n            let placeholdersByCard: PlaceholdersTextInfoCollection = {};\n            if (state.texts && action.cardId in state.texts) {\n                placeholdersByCard = { ...state.texts[action.cardId] };\n            }\n\n            const placeholder = state.placeholders[action.placeholderId];\n            const name = placeholder.name || placeholder.id;\n\n            for (const plId in state.placeholders) {\n                const pl = state.placeholders[plId];\n\n                if ((pl.name === name || pl.id === name) && pl.type === 'text') {\n                    placeholdersByCard[plId] = action.textInfo;\n                }\n            }\n\n            return {\n                ...state,\n                texts: {\n                    ...state.texts,\n                    [action.cardId]: placeholdersByCard,\n                },\n            };\n        }\n        case CARDSET_CHANGE_IMAGE: {\n            let placeholdersByCard: PlaceholdersImageInfoCollection = {};\n            if (state.images && action.cardId in state.images) {\n                placeholdersByCard = { ...state.images[action.cardId] };\n            }\n\n            const placeholder = state.placeholders[action.placeholderId];\n            const name = placeholder.name || placeholder.id;\n\n            for (const plId in state.placeholders) {\n                const pl = state.placeholders[plId];\n\n                if ((pl.name === name || pl.id === name) && pl.type === 'image') {\n                    placeholdersByCard[plId] = {\n                        ...placeholdersByCard[plId],\n                        ...action.imageInfo,\n                    };\n                }\n            }\n\n            return {\n                ...state,\n                images: {\n                    ...state.images,\n                    [action.cardId]: placeholdersByCard,\n                },\n            };\n        }\n\n        case CARDSET_CHANGE_IMAGE_BASE64: {\n            let placeholdersByCard: PlaceholdersImageInfoCollection = {};\n            if (state.images && action.cardId in state.images) {\n                placeholdersByCard = { ...state.images[action.cardId] };\n            }\n\n            placeholdersByCard[action.placeholderId] = {\n                ...placeholdersByCard[action.placeholderId],\n                base64: action.base64,\n            };\n\n            return {\n                ...state,\n                images: {\n                    ...state.images,\n                    [action.cardId]: placeholdersByCard,\n                },\n            };\n        }\n        case CARDSET_SET_ACTIVE_CARD_AND_PLACEHOLDER: {\n            let textSettings = { ...state.textSettings };\n            let activeSidebar = state.activeSidebar;\n\n            if (activeSidebar !== SidebarState.Measurements && action.cardId !== null) {\n                activeSidebar = SidebarState.Details;\n            }\n\n            if (action.placeholderId !== null) {\n                const placeholder = state.placeholders[action.placeholderId];\n                if (placeholder.type === 'text') {\n                    textSettings.align = placeholder.align;\n                    textSettings.color = placeholder.color;\n                    textSettings.fontFamily = placeholder.fontFamily;\n                    textSettings.fontVariant = placeholder.fontVariant;\n                    textSettings.fontSize = placeholder.fontSize;\n                    textSettings.lineHeight = placeholder.lineHeight;\n\n                    if (activeSidebar !== SidebarState.Measurements) {\n                        activeSidebar = SidebarState.Text;\n                    }\n                } else {\n                    if (activeSidebar !== SidebarState.Measurements) {\n                        activeSidebar = SidebarState.Image;\n                    }\n                }\n            }\n\n            return {\n                ...state,\n                activeCard: action.cardId,\n                isBackActive: action.isBackActive,\n                activePlaceholder: action.placeholderId,\n                textSettings,\n                activeSidebar,\n            };\n        }\n\n        case CARDSET_SET_SIDEBAR_STATE: {\n            return {\n                ...state,\n                activeSidebar: action.sidebarState,\n            };\n        }\n        case CARDSET_SET_ZOOM: {\n            return {\n                ...state,\n                zoom: action.zoom,\n            };\n        }\n        case CARDSET_IMPORT_DATA: {\n            return {\n                ...state,\n                ...action.data,\n            };\n        }\n        default:\n            return state;\n    }\n}\n\nexport function images(state: ImageState = DefaultImageState, action: ImageListAction): ImageState {\n    switch (action.type) {\n        case IMAGE_LIST_REQUEST:\n            return Object.assign({}, state, {\n                filter: action.filter,\n                activity: state.activity | ACTIVITY_LISTING,\n            });\n        case IMAGE_LIST_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_LISTING,\n                images: action.images,\n            });\n        case IMAGE_LIST_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_LISTING,\n            });\n        default:\n            return state;\n    }\n}\n\nconst reducers = combineReducers({\n    message,\n    auth,\n    signup,\n    games,\n    cardsets,\n    images,\n});\n\nexport default reducers;\n","import { Ghost, Browser } from 'react-kawaii';\nimport React, { Component } from 'react';\n\nexport enum Character {\n    Ghost,\n    Browser,\n}\ninterface Props {\n    character: Character;\n    mood?: string;\n}\n\nexport default class KawaiiMessage extends Component<Props> {\n    render() {\n        const { character, mood } = this.props;\n\n        return (\n            <div\n                style={{\n                    marginTop: '1em',\n                    marginBottom: '1em',\n                    padding: '1em',\n                    borderRadius: '1em',\n                    backgroundColor: 'var(--color-2)',\n                    display: 'grid',\n                    grid: 'auto-flow / minmax(120px, auto) 1fr',\n                }}\n            >\n                {character === Character.Ghost && <Ghost size={120} mood={mood || 'blissful'} color=\"#faebef\" />}\n                {character === Character.Browser && <Browser size={120} mood={mood || 'blissful'} color=\"#faebef\" />}\n                <div style={{ marginLeft: '1em' }}>{this.props.children}</div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nexport default class AboutPage extends Component {\n    render() {\n        return (\n            <div>\n                <h2>About</h2>\n                <p>\n                    \"Card-a-mon\" is card game development tool. At the moment it is project of single person (me) with a\n                    vision. My aim is to create affordable and practical tool to develop card games from A (prototyping)\n                    to Z (printing). If you have ideas, suggestions, proposals, comments and etc. then you can contact\n                    me by e-mail <a href=\"mailto:dalius@ffff.lt\">dalius@ffff.lt</a>.\n                </p>\n                <h2>Credits</h2>\n                This project is available because of number amazing open source projects. Some of them:\n                <ul>\n                    <li>\n                        <a href=\"https://reactjs.org/\">React</a> and all the ecosystem around it.\n                    </li>\n                    <li>\n                        <a href=\"https://fonts.google.com/\">Google Fonts</a>\n                    </li>\n                    <li>\n                        <a href=\"https://github.com/game-icons/icons\">Game icons</a>\n                    </li>\n                    <li>\n                        <a href=\"http://pdfkit.org/\">PDFKit</a>\n                    </li>\n                </ul>\n                <p>... and many more.</p>\n            </div>\n        );\n    }\n}\n","import { connect } from 'react-redux';\nimport React from 'react';\n\nimport { Dispatch } from '../actions';\nimport { State } from '../reducers';\nimport resize from './resize.svg';\nimport rotate from './rotate.svg';\nimport style from './FieldController.module.css';\n\ninterface OwnProps {\n    cardId: string;\n    placeholderId: string;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    angle: number;\n    children: React.ReactNode;\n    onDrag: (x: number, y: number) => void;\n    onResize: (width: number, height: number) => void;\n    onRotate: (angle: number) => void;\n    cardWidth: number;\n    cardHeight: number;\n    ppmm: number;\n}\n\ninterface StateProps {\n    isActive: boolean;\n    isActivePlaceholder: boolean;\n    isLocked: boolean;\n    snappingDistance: number;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass FieldController extends React.Component<Props> {\n    moving: boolean;\n    cDiv: React.RefObject<HTMLDivElement>;\n    resizeDiv: React.RefObject<HTMLImageElement>;\n    rotateDiv: React.RefObject<HTMLImageElement>;\n    relX: number;\n    relY: number;\n    startX: number;\n    startY: number;\n    originalW: number;\n    originalH: number;\n    rotatedPointX: number;\n    rotatedPointY: number;\n    centerX: number;\n    centerY: number;\n    originalAngle: number;\n    currentAngle: number;\n    activatedUsingTouch: boolean;\n    originalBodyCursor: string | null;\n\n    constructor(props: Props) {\n        super(props);\n        this.cDiv = React.createRef();\n        this.resizeDiv = React.createRef();\n        this.rotateDiv = React.createRef();\n        this.currentAngle = props.angle;\n        this.moving = false;\n        this.relX = 0;\n        this.relY = 0;\n        this.startX = 0;\n        this.startY = 0;\n        this.originalW = 0;\n        this.originalH = 0;\n        this.rotatedPointX = 0;\n        this.rotatedPointY = 0;\n        this.centerX = 0;\n        this.centerY = 0;\n        this.originalAngle = 0;\n        this.activatedUsingTouch = false;\n        this.originalBodyCursor = null;\n    }\n\n    componentDidMount() {\n        if (this.cDiv.current === null) return;\n        if (this.resizeDiv.current === null) return;\n        if (this.rotateDiv.current === null) return;\n\n        this.originalBodyCursor = document.body.style.cursor;\n\n        this.cDiv.current.addEventListener('dragstart', this.handleBrowserDragStart);\n        this.cDiv.current.addEventListener('mousedown', this.handleMouseDown);\n        this.cDiv.current.addEventListener('touchstart', this.handleTouchStart);\n        this.resizeDiv.current.addEventListener('mousedown', this.handleResizeMouseDown);\n        this.resizeDiv.current.addEventListener('touchstart', this.handleResizeTouchStart);\n        this.rotateDiv.current.addEventListener('mousedown', this.handleRotateMouseDown);\n        this.rotateDiv.current.addEventListener('touchstart', this.handleRotateTouchStart);\n    }\n\n    componentDidUpdate() {\n        if (this.cDiv.current === null) return;\n\n        this.currentAngle = this.props.angle;\n    }\n\n    rotateVec = (x: number, y: number, a: number) => {\n        const sinA = Math.sin(a);\n        const cosA = Math.cos(a);\n        const rx = cosA * x - sinA * y;\n        const ry = sinA * x + cosA * y;\n\n        return { rx, ry };\n    };\n\n    handleBrowserDragStart = (event: DragEvent) => {\n        event.stopPropagation();\n        event.preventDefault();\n    };\n\n    // Dragging handling\n\n    handleMouseDown = (event: MouseEvent) => {\n        this.handleDragStart(event);\n\n        document.addEventListener('mousemove', this.handleMouseMove);\n        document.addEventListener('mouseup', this.handleMouseUp);\n        event.stopPropagation();\n    };\n\n    handleTouchStart = (event: TouchEvent) => {\n        this.handleDragStart(event.changedTouches[0]);\n\n        document.addEventListener('touchmove', this.handleTouchMove, { passive: false });\n        document.addEventListener('touchend', this.handleTouchEnd, { passive: false });\n        event.stopPropagation();\n    };\n\n    handleDragStart = (co: { clientX: number; clientY: number }) => {\n        if (this.cDiv.current === null) return;\n\n        this.cDiv.current.style.cursor = 'grabbing';\n\n        this.relX = co.clientX - this.cDiv.current.offsetLeft;\n        this.relY = co.clientY - this.cDiv.current.offsetTop;\n    };\n\n    handleMouseUp = (event: MouseEvent) => {\n        this.handleComplete(event, false);\n\n        document.removeEventListener('mousemove', this.handleMouseMove);\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleTouchEnd = (event: TouchEvent) => {\n        this.handleComplete(event, true);\n\n        document.removeEventListener('touchmove', this.handleTouchMove);\n        document.removeEventListener('touchend', this.handleTouchEnd);\n    };\n\n    handleComplete = (event: Event, isTouchEvent: boolean) => {\n        const { isLocked } = this.props;\n\n        if (this.cDiv.current === null) return;\n        if (this.moving && !isLocked) {\n            this.props.onDrag(this.cDiv.current.offsetLeft, this.cDiv.current.offsetTop);\n            this.moving = false;\n        }\n        this.activatedUsingTouch = isTouchEvent;\n\n        this.cDiv.current.style.cursor = 'grab';\n\n        event.preventDefault();\n    };\n\n    handleMouseMove = (event: MouseEvent) => {\n        this.handleDragMove(event, event.ctrlKey);\n        event.preventDefault();\n    };\n\n    handleTouchMove = (event: TouchEvent) => {\n        this.handleDragMove(event.changedTouches[0], event.ctrlKey);\n        event.preventDefault();\n    };\n\n    handleDragMove = (co: { clientX: number; clientY: number }, disableSnapping: boolean) => {\n        const { isLocked } = this.props;\n\n        if (this.cDiv.current === null || isLocked) return;\n        const { width, height, cardWidth, cardHeight, ppmm, snappingDistance } = this.props;\n        this.moving = true;\n\n        const { rx, ry } = this.rotateVec(width / 2, height / 2, this.currentAngle);\n\n        const dx = Math.abs(rx) - width / 2;\n        const dy = Math.abs(ry) - height / 2;\n        const dx2 = Math.abs(rx) + width / 2;\n        const dy2 = Math.abs(ry) + height / 2;\n\n        let x = Math.min(Math.max(co.clientX - this.relX, dx), cardWidth - dx2);\n        let y = Math.min(Math.max(co.clientY - this.relY, dy), cardHeight - dy2);\n\n        if (!disableSnapping && snappingDistance !== 0) {\n            x = Math.round(x / ppmm / snappingDistance) * snappingDistance * ppmm;\n            y = Math.round(y / ppmm / snappingDistance) * snappingDistance * ppmm;\n        }\n\n        this.cDiv.current.style.left = x + 'px';\n        this.cDiv.current.style.top = y + 'px';\n    };\n\n    // Resize handling\n\n    handleResizeMouseDown = (event: MouseEvent) => {\n        this.handleResizeStart(event);\n\n        document.addEventListener('mousemove', this.handleResizeMouseMove);\n        document.addEventListener('mouseup', this.handleResizeMouseUp);\n        event.stopPropagation();\n        event.preventDefault();\n    };\n\n    handleResizeTouchStart = (event: TouchEvent) => {\n        this.handleResizeStart(event.changedTouches[0]);\n\n        document.addEventListener('touchmove', this.handleResizeTouchMove, { passive: false });\n        document.addEventListener('touchend', this.handleResizeTouchEnd, { passive: false });\n        event.stopPropagation();\n    };\n\n    handleResizeStart = (co: { clientX: number; clientY: number }) => {\n        const { isLocked } = this.props;\n\n        if (this.cDiv.current === null || isLocked) return;\n\n        document.body.style.cursor = `url(${resize}), auto`;\n\n        this.originalW = this.cDiv.current.clientWidth;\n        this.originalH = this.cDiv.current.clientHeight;\n\n        const dx = this.cDiv.current.clientWidth / 2;\n        const dy = this.cDiv.current.clientHeight / 2;\n        const { rx, ry } = this.rotateVec(-dx, -dy, this.currentAngle);\n\n        this.rotatedPointX = this.cDiv.current.offsetLeft + dx + rx;\n        this.rotatedPointY = this.cDiv.current.offsetTop + dy + ry;\n\n        this.startX = co.clientX;\n        this.startY = co.clientY;\n    };\n\n    handleResizeMouseUp = (event: MouseEvent) => {\n        this.handleResizeComplete(event);\n\n        document.removeEventListener('mousemove', this.handleResizeMouseMove);\n        document.removeEventListener('mouseup', this.handleResizeMouseUp);\n    };\n\n    handleResizeTouchEnd = (event: TouchEvent) => {\n        this.handleResizeComplete(event);\n\n        document.removeEventListener('touchmove', this.handleResizeTouchMove);\n        document.removeEventListener('touchend', this.handleResizeTouchEnd);\n    };\n\n    handleResizeComplete = (event: Event) => {\n        const { isLocked } = this.props;\n\n        if (this.cDiv.current === null) return;\n\n        if (this.moving && !isLocked) {\n            const { offsetLeft, offsetTop, clientWidth, clientHeight } = this.cDiv.current;\n            this.props.onDrag(offsetLeft, offsetTop);\n            this.props.onResize(clientWidth, clientHeight);\n            this.moving = false;\n        }\n\n        document.body.style.cursor = this.originalBodyCursor;\n\n        event.preventDefault();\n    };\n\n    handleResizeMouseMove = (event: MouseEvent) => {\n        this.handleResizeMove(event, event.ctrlKey);\n        event.preventDefault();\n    };\n\n    handleResizeTouchMove = (event: TouchEvent) => {\n        this.handleResizeMove(event.changedTouches[0], event.ctrlKey);\n        event.preventDefault();\n    };\n\n    handleResizeMove = (co: { clientX: number; clientY: number }, disableSnapping: boolean) => {\n        const { isLocked, ppmm, snappingDistance } = this.props;\n\n        if (this.cDiv.current === null || isLocked) return;\n        this.moving = true;\n\n        const vx = co.clientX - this.startX;\n        const vy = co.clientY - this.startY;\n\n        const { rx, ry } = this.rotateVec(vx, vy, -this.currentAngle);\n\n        let w = this.originalW + rx;\n        let h = this.originalH + ry;\n\n        if (!disableSnapping && snappingDistance !== 0) {\n            w = Math.round(w / ppmm / snappingDistance) * snappingDistance * ppmm;\n            h = Math.round(h / ppmm / snappingDistance) * snappingDistance * ppmm;\n        }\n\n        this.cDiv.current.style.width = w + 'px';\n        this.cDiv.current.style.height = h + 'px';\n\n        const rotatedV = this.rotateVec(w / 2, h / 2, this.currentAngle);\n        const nx = this.rotatedPointX + rotatedV.rx;\n        const ny = this.rotatedPointY + rotatedV.ry;\n\n        this.cDiv.current.style.left = nx - w / 2 + 'px';\n        this.cDiv.current.style.top = ny - h / 2 + 'px';\n    };\n\n    // Rotation handling\n\n    handleRotateMouseDown = (event: MouseEvent) => {\n        this.handleRotateStart(event);\n\n        document.addEventListener('mousemove', this.handleRotateMouseMove);\n        document.addEventListener('mouseup', this.handleRotateMouseUp);\n        event.stopPropagation();\n        event.preventDefault();\n    };\n\n    handleRotateTouchStart = (event: TouchEvent) => {\n        this.handleRotateStart(event.changedTouches[0]);\n\n        document.addEventListener('touchmove', this.handleRotateTouchMove, { passive: false });\n        document.addEventListener('touchend', this.handleRotateTouchEnd, { passive: false });\n        event.stopPropagation();\n    };\n\n    handleRotateStart = (co: { clientX: number; clientY: number }) => {\n        const { isLocked } = this.props;\n\n        if (this.cDiv.current === null || isLocked) return;\n\n        document.body.style.cursor = `url(${rotate}), auto`;\n\n        const rect = this.cDiv.current.getBoundingClientRect();\n        this.centerX = rect.left + this.cDiv.current.clientWidth / 2;\n        this.centerY = rect.top + this.cDiv.current.clientHeight / 2;\n\n        this.originalAngle = Math.atan2(this.centerX - co.clientX, this.centerY - co.clientY) + this.currentAngle;\n    };\n\n    handleRotateMouseUp = (event: MouseEvent) => {\n        this.handleRotateComplete(event);\n\n        document.removeEventListener('mousemove', this.handleRotateMouseMove);\n        document.removeEventListener('mouseup', this.handleRotateMouseUp);\n    };\n\n    handleRotateTouchEnd = (event: TouchEvent) => {\n        this.handleRotateComplete(event);\n\n        document.removeEventListener('touchmove', this.handleRotateTouchMove);\n        document.removeEventListener('touchend', this.handleRotateTouchEnd);\n    };\n\n    handleRotateComplete = (event: Event) => {\n        const { isLocked } = this.props;\n\n        if (this.moving && !isLocked) {\n            this.props.onRotate(this.currentAngle);\n            this.moving = false;\n        }\n\n        document.body.style.cursor = this.originalBodyCursor;\n\n        event.preventDefault();\n    };\n\n    handleRotateMouseMove = (event: MouseEvent) => {\n        this.handleRotateMove(event, event.ctrlKey);\n        event.preventDefault();\n    };\n\n    handleRotateTouchMove = (event: TouchEvent) => {\n        this.handleRotateMove(event.changedTouches[0], event.ctrlKey);\n        event.preventDefault();\n    };\n\n    handleRotateMove = (co: { clientX: number; clientY: number }, disableSnapping: boolean) => {\n        const { isLocked } = this.props;\n\n        if (this.cDiv.current === null || isLocked) return;\n        this.moving = true;\n\n        let angle = Math.atan2(this.centerX - co.clientX, this.centerY - co.clientY);\n\n        angle = this.originalAngle - angle;\n        if (!disableSnapping) {\n            angle = ((Math.round(((angle / Math.PI) * 180) / 5) * 5) / 180) * Math.PI;\n        }\n\n        this.currentAngle = angle;\n\n        this.cDiv.current.style.transform = `rotate(${this.currentAngle}rad)`;\n    };\n\n    // Rendering\n\n    render() {\n        const { x, y, width, height, angle, children, isActive, isActivePlaceholder, isLocked } = this.props;\n\n        return (\n            <div\n                ref={this.cDiv}\n                className={`${style.fieldcontroller} ${\n                    isActivePlaceholder ? style.fieldcontrolleractiveplaceholder : ''\n                } ${isActive ? style.fieldcontrolleractive : ''} ${\n                    isActive && this.activatedUsingTouch ? style.touchactivated : ''\n                } `}\n                style={{\n                    position: 'absolute',\n                    left: x,\n                    top: y,\n                    width: width,\n                    height: height,\n                    cursor: 'grab',\n                    transform: `rotate(${angle}rad)`,\n                }}\n            >\n                {children}\n                <img\n                    src={resize}\n                    alt=\"resize\"\n                    ref={this.resizeDiv}\n                    className={style.controller}\n                    style={{\n                        position: 'absolute',\n                        right: 0,\n                        bottom: 0,\n                        cursor: `url(${resize}), auto`,\n                        display: isLocked ? 'none' : 'initial',\n                    }}\n                />\n                <img\n                    src={rotate}\n                    alt=\"rotate\"\n                    ref={this.rotateDiv}\n                    className={style.controller}\n                    style={{\n                        position: 'absolute',\n                        left: 0,\n                        bottom: 0,\n                        cursor: `url(${rotate}), auto`,\n                        display: isLocked ? 'none' : 'initial',\n                    }}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    const isActivePlaceholder = props.placeholderId === state.cardsets.activePlaceholder;\n    const isActive =\n        props.cardId === state.cardsets.activeCard && props.placeholderId === state.cardsets.activePlaceholder;\n    const isLocked = state.cardsets.placeholders[props.placeholderId].locked === true;\n\n    return {\n        isActive,\n        isActivePlaceholder,\n        isLocked,\n        snappingDistance: state.cardsets.snappingDistance,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(FieldController);\n","import { connect } from 'react-redux';\nimport React, { PureComponent } from 'react';\n\nimport {\n    Dispatch,\n    ImageInfo,\n    ImagePlaceholderType,\n    cardSetActiveCardAndPlaceholder,\n    cardSetChangeImage,\n    cardSetChangePlaceholderAngle,\n    cardSetChangePlaceholderPosition,\n    cardSetChangePlaceholderSize,\n} from '../actions';\nimport { State } from '../reducers';\nimport FieldController from './FieldController';\nimport emptyImageImage from './image.svg';\n\ninterface OwnProps {\n    cardId: string;\n    isOnBack: boolean;\n    ppmm: number;\n    imagePlaceholder: ImagePlaceholderType;\n    cardWidth: number;\n    cardHeight: number;\n}\n\ninterface StateProps {\n    imageUrl?: string;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass ImageField extends PureComponent<Props> {\n    imageDiv: React.RefObject<HTMLDivElement>;\n    wasMoved: boolean;\n\n    constructor(props: Props) {\n        super(props);\n        this.imageDiv = React.createRef();\n        this.wasMoved = false;\n    }\n\n    componentDidMount() {\n        if (!this.imageDiv.current) return;\n        this.imageDiv.current.addEventListener('mousedown', this.handleMouseDown);\n        this.imageDiv.current.addEventListener('touchstart', this.handleTouchStart);\n        this.imageDiv.current.addEventListener('mousemove', this.handleMouseMove);\n        this.imageDiv.current.addEventListener('touchmove', this.handleTouchMove, { passive: false });\n        this.imageDiv.current.addEventListener('mouseup', this.handleMouseUp);\n        this.imageDiv.current.addEventListener('touchend', this.handleTouchEnd, { passive: false });\n    }\n\n    handleDrag = (x: number, y: number) => {\n        const { dispatch, imagePlaceholder, ppmm } = this.props;\n        dispatch(cardSetChangePlaceholderPosition(imagePlaceholder, x / ppmm, y / ppmm));\n    };\n\n    handleResize = (width: number, height: number) => {\n        const { dispatch, imagePlaceholder, ppmm } = this.props;\n        dispatch(cardSetChangePlaceholderSize(imagePlaceholder, width / ppmm, height / ppmm));\n    };\n\n    handleRotate = (angle: number) => {\n        const { dispatch, imagePlaceholder } = this.props;\n        dispatch(cardSetChangePlaceholderAngle(imagePlaceholder, angle));\n    };\n\n    handleMouseDown = (event: MouseEvent) => {\n        this.wasMoved = false;\n        event.preventDefault();\n    };\n\n    handleTouchStart = (event: TouchEvent) => {\n        this.wasMoved = false;\n        event.preventDefault();\n    };\n\n    handleMouseMove = (event: MouseEvent) => {\n        this.wasMoved = true;\n        event.preventDefault();\n    };\n\n    handleTouchMove = (event: TouchEvent) => {\n        this.wasMoved = true;\n        event.preventDefault();\n    };\n\n    handleMouseUp = (event: MouseEvent) => {\n        this.handleComplete(event);\n    };\n\n    handleTouchEnd = (event: TouchEvent) => {\n        this.handleComplete(event);\n    };\n\n    handleComplete = (event: Event) => {\n        const { dispatch, cardId, isOnBack, imagePlaceholder } = this.props;\n        if (!this.wasMoved) {\n            event.preventDefault();\n            dispatch(cardSetActiveCardAndPlaceholder(cardId, isOnBack, imagePlaceholder.id));\n        }\n    };\n\n    handleDragOver = (event: React.DragEvent<HTMLDivElement>) => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = (event: React.DragEvent<HTMLDivElement>) => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const url = event.dataTransfer.getData('URL');\n        const imagefilesPos = url.indexOf('/api/imagefiles/');\n\n        if (imagefilesPos !== -1) {\n            const { cardId, imagePlaceholder, dispatch } = this.props;\n\n            const ii: ImageInfo = { url: url.substr(imagefilesPos) };\n            dispatch(cardSetChangeImage(cardId, imagePlaceholder.id, ii));\n        }\n    };\n\n    render() {\n        const { imagePlaceholder, imageUrl, ppmm, cardWidth, cardHeight } = this.props;\n\n        return (\n            <FieldController\n                cardId={this.props.cardId}\n                placeholderId={imagePlaceholder.id}\n                x={imagePlaceholder.x * ppmm}\n                y={imagePlaceholder.y * ppmm}\n                width={imagePlaceholder.width * ppmm}\n                height={imagePlaceholder.height * ppmm}\n                angle={imagePlaceholder.angle}\n                onDrag={this.handleDrag}\n                onResize={this.handleResize}\n                onRotate={this.handleRotate}\n                cardWidth={cardWidth}\n                cardHeight={cardHeight}\n                ppmm={ppmm}\n            >\n                <div\n                    ref={this.imageDiv}\n                    style={{\n                        width: '100%',\n                        height: '100%',\n                    }}\n                    onDragOver={this.handleDragOver}\n                    onDrop={this.handleDrop}\n                >\n                    <img\n                        style={{\n                            opacity: imageUrl && imageUrl.length > 0 ? 1 : 0.5,\n                            width: imagePlaceholder.fit === 'height' ? 'auto' : '100%',\n                            height: !imagePlaceholder.fit || imagePlaceholder.fit === 'width' ? 'auto' : '100%',\n                        }}\n                        src={imageUrl || emptyImageImage}\n                        alt=\"\"\n                    />\n                </div>\n            </FieldController>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    const imageInfo =\n        state.cardsets.images &&\n        state.cardsets.images[props.cardId] &&\n        state.cardsets.images[props.cardId][props.imagePlaceholder.id];\n\n    let imageUrl: string | undefined = '';\n    if (imageInfo) {\n        if (imageInfo.base64) {\n            imageUrl = 'data:image/svg+xml;base64,' + imageInfo.base64;\n        } else {\n            imageUrl = imageInfo && imageInfo.url;\n        }\n    }\n\n    return {\n        imageUrl,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(ImageField);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DEFAULT_FONT, DEFAULT_FONT_SIZE, DEFAULT_LINE_HEIGHT } from '../constants';\nimport { Dispatch, TextInfo, cardSetActiveCardAndPlaceholder, cardSetChangeText } from '../actions';\nimport { State } from '../reducers';\nimport style from './ContentEditable.module.css';\n\ninterface OwnProps {\n    cardId: string;\n    isOnBack: boolean;\n    placeholderId: string;\n    align: string;\n    color: string;\n    fontFamily: string;\n    fontVariant: string;\n    fontSize: number;\n    lineHeight: number;\n}\n\ninterface StateProps {\n    isActive: boolean;\n    textValue: string;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass ContentEditable extends Component<Props> {\n    editDiv: React.RefObject<HTMLDivElement>;\n    currentText: string;\n    currentAlign: string;\n    currentColor: string;\n    currentFontFamily: string;\n    currentFontVariant: string;\n    currentFontSize: number;\n    currentLineHeight: number;\n    timeout: NodeJS.Timeout | null;\n    wasMoved: boolean;\n\n    constructor(props: Props) {\n        super(props);\n        this.editDiv = React.createRef();\n        this.currentText = '';\n        this.currentAlign = '';\n        this.currentColor = '';\n        this.currentFontFamily = '';\n        this.currentFontVariant = '';\n        this.currentFontSize = DEFAULT_FONT_SIZE;\n        this.currentLineHeight = DEFAULT_LINE_HEIGHT;\n        this.timeout = null;\n        this.wasMoved = false;\n    }\n\n    componentDidMount() {\n        const { isActive } = this.props;\n\n        if (!this.editDiv.current) return;\n\n        this.editDiv.current.addEventListener('mousedown', this.handleMouseDown);\n        this.editDiv.current.addEventListener('touchstart', this.handleTouchStart);\n        this.editDiv.current.addEventListener('mousemove', this.handleMouseMove);\n        this.editDiv.current.addEventListener('touchmove', this.handleTouchMove, { passive: false });\n        this.editDiv.current.addEventListener('mouseup', this.handleMouseUp);\n        this.editDiv.current.addEventListener('touchend', this.handleTouchEnd, { passive: false });\n\n        if (isActive) {\n            this.editDiv.current.focus();\n        }\n    }\n\n    shouldComponentUpdate(nextProps: Props) {\n        const shouldUpdate =\n            nextProps.textValue !== this.currentText ||\n            nextProps.align !== this.currentAlign ||\n            nextProps.color !== this.currentColor ||\n            nextProps.fontFamily !== this.currentFontFamily ||\n            nextProps.fontVariant !== this.currentFontVariant ||\n            nextProps.fontSize !== this.currentFontSize ||\n            nextProps.lineHeight !== this.currentLineHeight ||\n            this.props.isActive !== nextProps.isActive;\n\n        return shouldUpdate;\n    }\n\n    componentDidUpdate() {\n        const { textValue, align, color, fontFamily, fontVariant, fontSize, lineHeight } = this.props;\n        this.currentText = textValue;\n        this.currentAlign = align;\n        this.currentColor = color;\n        this.currentFontFamily = fontFamily;\n        this.currentFontVariant = fontVariant;\n        this.currentFontSize = fontSize;\n        this.currentLineHeight = lineHeight;\n    }\n\n    handleMouseDown = (event: MouseEvent) => {\n        this.handleStart(event);\n    };\n\n    handleTouchStart = (event: TouchEvent) => {\n        this.handleStart(event);\n    };\n\n    handleStart = (event: Event) => {\n        const { isActive } = this.props;\n        if (isActive) {\n            event.stopPropagation();\n        } else {\n            this.wasMoved = false;\n            event.preventDefault();\n        }\n    };\n\n    handleMouseMove = (event: MouseEvent) => {\n        this.handleMove(event);\n    };\n\n    handleTouchMove = (event: TouchEvent) => {\n        this.handleMove(event);\n    };\n\n    handleMove = (event: Event) => {\n        const { isActive } = this.props;\n        if (isActive) {\n            event.stopPropagation();\n        } else {\n            this.wasMoved = true;\n            event.preventDefault();\n        }\n    };\n\n    handleMouseUp = (event: MouseEvent) => {\n        this.handleComplete(event);\n    };\n\n    handleTouchEnd = (event: TouchEvent) => {\n        this.handleComplete(event);\n    };\n\n    handleComplete = (event: Event) => {\n        const { dispatch, cardId, isOnBack, placeholderId, isActive } = this.props;\n        if (isActive) {\n            event.stopPropagation();\n        } else if (!this.wasMoved) {\n            event.preventDefault();\n            dispatch(cardSetActiveCardAndPlaceholder(cardId, isOnBack, placeholderId));\n\n            if (!this.editDiv.current) return;\n            this.editDiv.current.focus();\n        }\n    };\n\n    onFocus = () => {\n        if (!this.editDiv.current) return;\n\n        const { textValue, align, color, fontFamily, fontVariant, fontSize } = this.props;\n        this.currentText = textValue;\n        this.currentAlign = align;\n        this.currentColor = color;\n        this.currentFontFamily = fontFamily;\n        this.currentFontVariant = fontVariant;\n        this.currentFontSize = fontSize;\n\n        const range = document.createRange();\n        range.selectNodeContents(this.editDiv.current);\n        range.collapse(false);\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    };\n\n    updateContent = (timeoutInMiliseconds: number) => {\n        if (!this.editDiv.current) return;\n        let value = this.editDiv.current.innerHTML;\n        value = value.replace(/<br>/g, '');\n\n        if (value !== this.currentText) {\n            this.currentText = value;\n\n            if (this.timeout) {\n                clearTimeout(this.timeout);\n            }\n\n            this.timeout = setTimeout(() => {\n                const { dispatch, cardId, placeholderId } = this.props;\n                const textInfo: TextInfo = { value };\n\n                dispatch(cardSetChangeText(cardId, placeholderId, textInfo));\n            }, timeoutInMiliseconds);\n        }\n    };\n\n    handleBlur = () => {\n        this.updateContent(0);\n    };\n\n    handleInput = () => {\n        this.updateContent(500);\n    };\n\n    render() {\n        const { color, align, fontFamily, fontVariant, fontSize, lineHeight } = this.props;\n        const isItalic = fontVariant && fontVariant.indexOf('italic') !== -1;\n        const fontWeight = isItalic\n            ? fontVariant === 'italic'\n                ? 400\n                : parseInt(fontVariant.slice(0, 3))\n            : fontVariant === 'regular'\n            ? 400\n            : parseInt(fontVariant);\n\n        return (\n            <div\n                ref={this.editDiv}\n                className={style.content}\n                contentEditable={true}\n                onFocus={this.onFocus}\n                onBlur={this.handleBlur}\n                onInput={this.handleInput}\n                style={{\n                    width: '100%',\n                    height: '100%',\n                    textAlign: align === 'left' ? 'left' : align === 'right' ? 'right' : 'center',\n                    color: color,\n                    fontFamily: `'${fontFamily}'` || DEFAULT_FONT,\n                    fontStyle: isItalic ? 'italic' : 'normal',\n                    fontWeight,\n                    fontSize: `${fontSize}px`,\n                    outline: 'none',\n                    overflowWrap: 'break-word',\n                    lineHeight,\n                }}\n                dangerouslySetInnerHTML={{ __html: this.props.textValue }}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    const textInfo =\n        state.cardsets.texts &&\n        state.cardsets.texts[props.cardId] &&\n        state.cardsets.texts[props.cardId][props.placeholderId]\n            ? state.cardsets.texts[props.cardId][props.placeholderId]\n            : { value: '' };\n    return {\n        textValue: textInfo.value,\n        isActive:\n            props.cardId === state.cardsets.activeCard && props.placeholderId === state.cardsets.activePlaceholder,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(ContentEditable);\n","import { connect } from 'react-redux';\nimport React, { PureComponent } from 'react';\n\nimport { DEFAULT_LINE_HEIGHT } from '../constants';\nimport {\n    Dispatch,\n    TextPlaceholderType,\n    cardSetChangePlaceholderAngle,\n    cardSetChangePlaceholderPosition,\n    cardSetChangePlaceholderSize,\n} from '../actions';\nimport { State } from '../reducers';\nimport ContentEditable from './ContentEditable';\nimport FieldController from './FieldController';\nimport emptyTextImage from './text.svg';\n\ninterface OwnProps {\n    cardId: string;\n    isOnBack: boolean;\n    ppmm: number;\n    textPlaceholder: TextPlaceholderType;\n    cardWidth: number;\n    cardHeight: number;\n}\n\ninterface StateProps {\n    text: string;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass TextField extends PureComponent<Props> {\n    handleDrag = (x: number, y: number) => {\n        const { dispatch, textPlaceholder, ppmm } = this.props;\n        dispatch(cardSetChangePlaceholderPosition(textPlaceholder, x / ppmm, y / ppmm));\n    };\n\n    handleResize = (width: number, height: number) => {\n        const { dispatch, textPlaceholder, ppmm } = this.props;\n        dispatch(cardSetChangePlaceholderSize(textPlaceholder, width / ppmm, height / ppmm));\n    };\n\n    handleRotate = (angle: number) => {\n        const { dispatch, textPlaceholder } = this.props;\n        dispatch(cardSetChangePlaceholderAngle(textPlaceholder, angle));\n    };\n\n    render() {\n        const { textPlaceholder, text, ppmm, cardWidth, cardHeight } = this.props;\n\n        return (\n            <FieldController\n                cardId={this.props.cardId}\n                placeholderId={textPlaceholder.id}\n                x={textPlaceholder.x * ppmm}\n                y={textPlaceholder.y * ppmm}\n                width={textPlaceholder.width * ppmm}\n                height={textPlaceholder.height * ppmm}\n                angle={textPlaceholder.angle}\n                onDrag={this.handleDrag}\n                onResize={this.handleResize}\n                onRotate={this.handleRotate}\n                cardWidth={cardWidth}\n                cardHeight={cardHeight}\n                ppmm={ppmm}\n            >\n                {text === '' && (\n                    <div\n                        style={{\n                            width: '100%',\n                            height: '100%',\n                            position: 'fixed',\n                            left: 0,\n                            top: 0,\n                            zIndex: -1,\n                            textAlign:\n                                textPlaceholder.align === 'left'\n                                    ? 'left'\n                                    : textPlaceholder.align === 'right'\n                                    ? 'right'\n                                    : 'center',\n                        }}\n                    >\n                        <img style={{ opacity: 0.5, width: 'auto', height: '100%' }} src={emptyTextImage} alt=\"\" />\n                    </div>\n                )}\n\n                <ContentEditable\n                    cardId={this.props.cardId}\n                    isOnBack={this.props.isOnBack}\n                    placeholderId={textPlaceholder.id}\n                    align={textPlaceholder.align}\n                    color={textPlaceholder.color}\n                    fontFamily={textPlaceholder.fontFamily}\n                    fontVariant={textPlaceholder.fontVariant}\n                    fontSize={textPlaceholder.fontSize * ppmm}\n                    lineHeight={textPlaceholder.lineHeight || DEFAULT_LINE_HEIGHT}\n                />\n            </FieldController>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    let text =\n        state.cardsets.texts &&\n        state.cardsets.texts[props.cardId] &&\n        state.cardsets.texts[props.cardId][props.textPlaceholder.id]\n            ? state.cardsets.texts[props.cardId][props.textPlaceholder.id].value\n            : '';\n    return {\n        text,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(TextField);\n","import { connect } from 'react-redux';\nimport Measure from 'react-measure';\nimport React, { Component } from 'react';\n\nimport { BLEED_WIDTH } from '../constants';\nimport { CardType, Dispatch, PlaceholdersCollection, cardSetActiveCardAndPlaceholder, IdsArray } from '../actions';\nimport { State } from '../reducers';\nimport ImageField from './ImageField';\nimport TextField from './TextField';\nimport style from './Card.module.css';\n\ninterface OwnProps {\n    card: CardType;\n    isBack: boolean;\n}\n\ninterface StateProps {\n    placeholders: PlaceholdersCollection;\n    placeholdersIds: IdsArray;\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    isActiveCard: boolean;\n    zoom: number;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\ninterface LocalState {\n    dimensions: {\n        width: number;\n        height: number;\n    };\n}\n\nclass Card extends Component<Props, LocalState> {\n    state = {\n        dimensions: {\n            width: -1,\n            height: -1,\n        },\n    };\n\n    handleFieldDeselect = (event: React.MouseEvent | React.TouchEvent) => {\n        const { dispatch, card, isBack } = this.props;\n        const el = event.target as HTMLElement;\n        if (el.getAttribute('id') === `card_${card.id}`) {\n            dispatch(cardSetActiveCardAndPlaceholder(card.id, isBack, null));\n            event.stopPropagation();\n        }\n    };\n\n    render() {\n        const {\n            placeholders,\n            placeholdersIds,\n            card,\n            isBack,\n            width,\n            height,\n            isActiveCard,\n            zoom,\n            isTwoSided,\n        } = this.props;\n        const widthWithBleeds = width + BLEED_WIDTH * 2;\n        const heightWithBleeds = height + BLEED_WIDTH * 2;\n\n        const ppmm = this.state.dimensions.width / widthWithBleeds;\n\n        return (\n            <div>\n                <Measure\n                    client\n                    onResize={contentRect => {\n                        if (!contentRect.client) {\n                            return;\n                        }\n                        this.setState({ dimensions: contentRect.client });\n                    }}\n                >\n                    {({ measureRef }) => (\n                        <div\n                            className={`${style.card} ${isActiveCard ? style.active : ''}`}\n                            id={`card_${card.id}`}\n                            ref={measureRef}\n                            style={{\n                                width: `${widthWithBleeds * zoom}mm`,\n                                height: `${heightWithBleeds * zoom}mm`,\n                                position: 'relative',\n                                overflow: 'hidden',\n                            }}\n                            onMouseDown={this.handleFieldDeselect}\n                            onTouchStart={this.handleFieldDeselect}\n                        >\n                            {placeholdersIds.map(id => {\n                                const p = placeholders[id];\n                                if (p.type === 'image') {\n                                    return (\n                                        <ImageField\n                                            key={p.id}\n                                            cardId={card.id}\n                                            isOnBack={isBack}\n                                            imagePlaceholder={p}\n                                            ppmm={ppmm}\n                                            cardWidth={this.state.dimensions.width}\n                                            cardHeight={this.state.dimensions.height}\n                                        />\n                                    );\n                                } else if (p.type === 'text') {\n                                    return (\n                                        <TextField\n                                            key={p.id}\n                                            cardId={card.id}\n                                            isOnBack={isBack}\n                                            textPlaceholder={p}\n                                            ppmm={ppmm}\n                                            cardWidth={this.state.dimensions.width}\n                                            cardHeight={this.state.dimensions.height}\n                                        />\n                                    );\n                                }\n                                return null;\n                            })}\n\n                            <div\n                                style={{\n                                    position: 'absolute',\n                                    width: `${width * zoom}mm`,\n                                    height: `${height * zoom}mm`,\n                                    left: `${BLEED_WIDTH * zoom}mm`,\n                                    top: `${BLEED_WIDTH * zoom}mm`,\n                                    border: '1px dashed black',\n                                    borderRadius: '5mm',\n                                    pointerEvents: 'none',\n                                }}\n                            />\n\n                            <div\n                                style={{\n                                    position: 'absolute',\n                                    width: `${(width - BLEED_WIDTH * 2) * zoom}mm`,\n                                    height: `${(height - BLEED_WIDTH * 2) * zoom}mm`,\n                                    left: `${BLEED_WIDTH * 2 * zoom}mm`,\n                                    top: `${BLEED_WIDTH * 2 * zoom}mm`,\n                                    border: '1px dashed red',\n                                    borderRadius: '5mm',\n                                    pointerEvents: 'none',\n                                }}\n                            />\n                        </div>\n                    )}\n                </Measure>\n                {isTwoSided && (\n                    <div\n                        className={style.title}\n                        style={{\n                            width: `${widthWithBleeds * zoom}mm`,\n                            position: 'relative',\n                        }}\n                    >\n                        {isBack ? 'Back' : 'Front'}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    return {\n        placeholders: state.cardsets.placeholders,\n        placeholdersIds: state.cardsets.placeholdersAllIds.filter(\n            id => (state.cardsets.placeholders[id].isOnBack || false) === props.isBack,\n        ),\n        width: state.cardsets.width,\n        height: state.cardsets.height,\n        isTwoSided: state.cardsets.isTwoSided,\n        isActiveCard: state.cardsets.activeCard === props.card.id && state.cardsets.isBackActive === props.isBack,\n        zoom: state.cardsets.zoom,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(Card);\n","import React, { Component } from 'react';\nimport style from './EditableTitle.module.css';\n\ninterface Props {\n    title: string;\n    onChange: (newName: string) => void;\n}\n\nexport default class EditableTitle extends Component<Props> {\n    state = {\n        titleIsEdited: false,\n    };\n\n    handleClick = () => {\n        this.setState({ titleIsEdited: true });\n    };\n\n    handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.props.onChange(event.target.value);\n    };\n\n    handleBlur = () => {\n        this.setState({ titleIsEdited: false });\n    };\n\n    render() {\n        const { titleIsEdited } = this.state;\n        const { title } = this.props;\n\n        return (\n            <>\n                {!titleIsEdited && (\n                    <h1 className={style.input} onClick={this.handleClick}>\n                        {title}\n                    </h1>\n                )}\n                {titleIsEdited && (\n                    <input\n                        autoFocus\n                        type=\"text\"\n                        className={style.input}\n                        value={title}\n                        onChange={this.handleChange}\n                        onBlur={this.handleBlur}\n                    />\n                )}\n            </>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nimport style from './Loader.module.css';\n\ninterface Props {\n    fixed?: boolean;\n    small?: boolean;\n}\n\nexport default class Loader extends Component<Props> {\n    render() {\n        const { fixed, small } = this.props;\n\n        return (\n            <div className={`${style.loader} ${fixed ? style.fixed : style.relative} ${small ? style.small : ''}`}>\n                <div />\n                <div />\n            </div>\n        );\n    }\n}\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { ACTIVITY_CREATING_PDF, State } from '../reducers';\nimport { Dispatch, gameCreatePdfRequest } from '../actions';\nimport KawaiiMessage, { Character } from './KawaiiMessage';\n\ninterface OwnProps {\n    type: string;\n    id: string;\n}\n\ninterface StateProps {\n    isCreatingPdf: boolean;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = StateProps & DispatchProps & OwnProps;\n\ninterface LocalState {\n    pageWidth: number;\n    pageHeight: number;\n    topBottomMargin: number;\n    leftRightMargin: number;\n    verticalSpace: number;\n    horizontalSpace: number;\n    includeBleedingArea: boolean;\n    cutMarksForScissors: boolean;\n    cutMarksForGuillotine: boolean;\n}\n\nexport class PDFGenerator extends Component<Props, LocalState> {\n    state = {\n        pageWidth: 210,\n        pageHeight: 297,\n        topBottomMargin: 15,\n        leftRightMargin: 9,\n        verticalSpace: 0,\n        horizontalSpace: 0,\n        includeBleedingArea: false,\n        cutMarksForScissors: true,\n        cutMarksForGuillotine: false,\n    };\n\n    handleGeneratePdfClick = () => {\n        const { dispatch } = this.props;\n        const {\n            pageWidth,\n            pageHeight,\n            topBottomMargin,\n            leftRightMargin,\n            verticalSpace,\n            horizontalSpace,\n            includeBleedingArea,\n            cutMarksForScissors,\n            cutMarksForGuillotine,\n        } = this.state;\n\n        dispatch(\n            gameCreatePdfRequest(\n                this.props.type,\n                this.props.id,\n                pageWidth,\n                pageHeight,\n                topBottomMargin,\n                leftRightMargin,\n                verticalSpace,\n                horizontalSpace,\n                includeBleedingArea,\n                cutMarksForScissors,\n                cutMarksForGuillotine,\n            ),\n        );\n    };\n\n    handlePageWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ pageWidth: parseFloat(event.target.value) });\n    };\n\n    handlePageHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ pageHeight: parseFloat(event.target.value) });\n    };\n\n    handleTopBottomMarginChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ topBottomMargin: parseFloat(event.target.value) });\n    };\n\n    handleLeftRightMarginChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ leftRightMargin: parseFloat(event.target.value) });\n    };\n\n    handleVerticalSpaceChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ verticalSpace: parseFloat(event.target.value) });\n    };\n\n    handleHorizontalSpaceChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ horizontalSpace: parseFloat(event.target.value) });\n    };\n\n    handleIncludeBleedingAreaChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ includeBleedingArea: event.target.checked });\n    };\n\n    handleCutMarksForScissors = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ cutMarksForScissors: event.target.checked });\n    };\n\n    handleCutMarksForGuillotine = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ cutMarksForGuillotine: event.target.checked });\n    };\n\n    render() {\n        const { isCreatingPdf } = this.props;\n\n        return (\n            <>\n                <KawaiiMessage character={Character.Ghost} mood=\"excited\">\n                    <p>Here you can generate PDF.</p>\n                    <p>Hint 1: A4 page size is 210 mm x 297 mm. Letter page size is 215.9 x 279.4 mm.</p>\n                    <p>Hint 2: 1 inch is equal to 25.4 mm.</p>\n                </KawaiiMessage>\n\n                <div className=\"form\">\n                    <label htmlFor=\"page_width\">Page width (mm):</label>\n                    <input\n                        id=\"page_width\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handlePageWidthChange}\n                        placeholder=\"Page width\"\n                        value={this.state.pageWidth}\n                    />\n                    <label htmlFor=\"page_height\">Page height (mm):</label>\n                    <input\n                        id=\"page_height\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handlePageHeightChange}\n                        placeholder=\"Page Height\"\n                        value={this.state.pageHeight}\n                    />\n                    <label htmlFor=\"page_topbottom_margin\">Margin from top/bottom (mm):</label>\n                    <input\n                        id=\"page_topbottom_margin\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handleTopBottomMarginChange}\n                        placeholder=\"Top/Bottom margin\"\n                        value={this.state.topBottomMargin}\n                    />\n                    <label htmlFor=\"page_leftright_margin\">Margin from left/right (mm):</label>\n                    <input\n                        id=\"page_leftright_margin\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handleLeftRightMarginChange}\n                        placeholder=\"Left/Right margin\"\n                        value={this.state.leftRightMargin}\n                    />\n\n                    <label htmlFor=\"card_vertical_space\">Vertical space between cards (mm):</label>\n                    <input\n                        id=\"card_vertical_space\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handleVerticalSpaceChange}\n                        placeholder=\"Vertical space\"\n                        value={this.state.verticalSpace}\n                    />\n\n                    <label htmlFor=\"card_horizontal_space\">Horizontal space between cards (mm):</label>\n                    <input\n                        id=\"card_horizontal_space\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handleHorizontalSpaceChange}\n                        placeholder=\"Horizontal space\"\n                        value={this.state.horizontalSpace}\n                    />\n\n                    <label\n                        title=\"You might need this for Cardmogrifier or professional printing. Do\n                        not check this if all you are interested in is card (area inside black dashed rectangle).\"\n                    >\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.includeBleedingArea}\n                            onChange={this.handleIncludeBleedingAreaChange}\n                        />\n                        Generate with bleeding area.\n                    </label>\n\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.cutMarksForScissors}\n                            onChange={this.handleCutMarksForScissors}\n                        />\n                        Generate with cut marks for paper scissors.\n                    </label>\n\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.cutMarksForGuillotine}\n                            onChange={this.handleCutMarksForGuillotine}\n                        />\n                        Generate with cut marks for paper guillotine (in margin area).\n                    </label>\n\n                    <button disabled={isCreatingPdf} onClick={this.handleGeneratePdfClick}>\n                        Generate PDF\n                    </button>\n                </div>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        isCreatingPdf: (state.games.activity & ACTIVITY_CREATING_PDF) === ACTIVITY_CREATING_PDF,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(PDFGenerator);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { CardType, cardSetCloneCard, cardSetRemoveCard, cardSetUpdateCardCount } from '../actions';\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport { State } from '../reducers';\nimport style from './SidebarDetails.module.css';\n\ninterface StateProps {\n    isAuthenticated: boolean;\n    activeCard: CardType | null;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarDetails extends Component<Props> {\n    handleCloneCardClick = () => {\n        const { activeCard, dispatch } = this.props;\n        if (activeCard !== null) {\n            dispatch(cardSetCloneCard(activeCard));\n        }\n    };\n\n    handleRemoveCardClick = () => {\n        const { activeCard, dispatch } = this.props;\n        if (activeCard !== null) {\n            dispatch(cardSetRemoveCard(activeCard));\n        }\n    };\n\n    handleCountChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeCard, dispatch } = this.props;\n        if (activeCard !== null) {\n            dispatch(cardSetUpdateCardCount(activeCard, parseInt(event.target.value)));\n        }\n    };\n\n    render() {\n        const { activeCard, visible } = this.props;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'initial' : 'none' }}>\n                <button\n                    onClick={this.handleCloneCardClick}\n                    title=\"Clone card\"\n                    className={activeCard === null ? style.disabled : ''}\n                >\n                    <i className=\"material-icons\">file_copy</i>\n                </button>\n\n                <input\n                    type=\"number\"\n                    value={activeCard !== null ? activeCard.count.toString() : 0}\n                    onChange={this.handleCountChange}\n                    title=\"Number of card's copies\"\n                    className={activeCard === null ? style.disabled : ''}\n                />\n                <button\n                    onClick={this.handleRemoveCardClick}\n                    title=\"Remove card\"\n                    className={activeCard === null ? style.disabled : ''}\n                >\n                    <i className=\"material-icons\">delete</i>\n                </button>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        activeCard: state.cardsets.activeCard !== null ? state.cardsets.cardsById[state.cardsets.activeCard] : null,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarDetails);\n","import { ChromePicker, ColorResult } from 'react-color';\nimport React, { Component } from 'react';\n\ninterface Props {\n    onChange: (color: ColorResult) => void;\n    color: string;\n}\n\ninterface State {\n    displayColorPicker: boolean;\n}\n\nexport default class ColorButton extends Component<Props, State> {\n    state = {\n        displayColorPicker: false,\n    };\n\n    handleClick = () => {\n        this.setState({ displayColorPicker: !this.state.displayColorPicker });\n    };\n\n    handleClose = () => {\n        this.setState({ displayColorPicker: false });\n    };\n\n    handleChange = (color: ColorResult) => {\n        this.props.onChange(color);\n    };\n\n    render() {\n        const popover: React.CSSProperties = {\n            position: 'absolute',\n            zIndex: 2,\n        };\n        const cover: React.CSSProperties = {\n            position: 'fixed',\n            top: '0px',\n            right: '0px',\n            bottom: '0px',\n            left: '0px',\n        };\n        return (\n            <>\n                <button onClick={this.handleClick} title=\"Change color\">\n                    <i className=\"material-icons\">color_lens</i>\n                </button>\n                {this.state.displayColorPicker ? (\n                    <div style={popover}>\n                        <div style={cover} onClick={this.handleClose} />\n                        <ChromePicker color={this.props.color} disableAlpha={true} onChange={this.handleChange} />\n                    </div>\n                ) : null}\n            </>\n        );\n    }\n}\n","import { ColorResult } from 'react-color';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport {\n    CardType,\n    IdsArray,\n    ImageArray,\n    ImageInfo,\n    PlaceholderType,\n    cardSetAddImagePlaceholder,\n    cardSetChangeActivePlaceholderName,\n    cardSetChangeFitForActivePlaceholder,\n    cardSetChangeImage,\n    cardSetLockActivePlaceholder,\n    cardSetLowerActivePlaceholderToBottom,\n    cardSetRaiseActivePlaceholderToTop,\n    cardSetRemoveActivePlaceholder,\n    cardSetUnlockActivePlaceholder,\n    imageListRequest,\n} from '../actions';\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport { State } from '../reducers';\nimport ColorButton from './ColorButton';\nimport style from './SidebarImage.module.css';\n\ninterface StateProps {\n    isAuthenticated: boolean;\n    activePlaceholder: PlaceholderType | null;\n    imageInfo?: ImageInfo;\n    activeCard: CardType | null;\n    filter: string;\n    images: ImageArray;\n    cardsAllIds: IdsArray;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\ninterface LocalState {\n    location: string;\n    applyToAllCards: boolean;\n}\n\nexport class SidebarImage extends Component<Props, LocalState> {\n    state = {\n        location: 'all',\n        applyToAllCards: false,\n    };\n\n    handleAddImageClick = () => {\n        const { dispatch } = this.props;\n        dispatch(cardSetAddImagePlaceholder());\n    };\n\n    changeImage = (ii: ImageInfo) => {\n        const { cardsAllIds, activeCard, activePlaceholder, dispatch } = this.props;\n        const { applyToAllCards } = this.state;\n\n        if (activePlaceholder) {\n            if (applyToAllCards) {\n                for (const cardId of cardsAllIds) {\n                    dispatch(cardSetChangeImage(cardId, activePlaceholder.id, ii));\n                }\n            } else if (activeCard) {\n                dispatch(cardSetChangeImage(activeCard.id, activePlaceholder.id, ii));\n            }\n        }\n    };\n\n    handleRemoveImageFromFieldClick = () => {\n        const ii: ImageInfo = { url: undefined, base64: undefined };\n        this.changeImage(ii);\n    };\n\n    handleRemoveClick = () => {\n        const { activePlaceholder, dispatch } = this.props;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetRemoveActivePlaceholder());\n        }\n    };\n\n    handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activePlaceholder, dispatch } = this.props;\n        const name = event.target.value.trim();\n        if (activePlaceholder !== null) {\n            dispatch(cardSetChangeActivePlaceholderName(name));\n        }\n    };\n\n    handleFilterChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        const { location } = this.state;\n        const filter = event.target.value;\n        dispatch(imageListRequest(filter, location));\n    };\n\n    handleImageSelect = (imageName: string) => {\n        const { imageInfo, activePlaceholder } = this.props;\n\n        if (activePlaceholder !== null) {\n            const color = imageInfo && imageInfo.color;\n\n            const ii: ImageInfo = { url: `/api/imagefiles/${imageName}`, color, base64: undefined };\n            this.changeImage(ii);\n        }\n    };\n\n    handleRaiseToTop = () => {\n        const { activePlaceholder, dispatch } = this.props;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetRaiseActivePlaceholderToTop());\n        }\n    };\n\n    handleLowerToBottom = () => {\n        const { activePlaceholder, dispatch } = this.props;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetLowerActivePlaceholderToBottom());\n        }\n    };\n\n    handleLockField = () => {\n        const { activePlaceholder, dispatch } = this.props;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetLockActivePlaceholder());\n        }\n    };\n\n    handleUnlockField = () => {\n        const { activePlaceholder, dispatch } = this.props;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetUnlockActivePlaceholder());\n        }\n    };\n\n    handleFitOptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        const fit = event.target.value;\n\n        dispatch(cardSetChangeFitForActivePlaceholder(fit));\n    };\n\n    handleOptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { filter, dispatch } = this.props;\n        const location = event.target.value;\n\n        this.setState({ location });\n        dispatch(imageListRequest(filter, location));\n    };\n\n    handleColorChange = (color: ColorResult) => {\n        const ii: ImageInfo = { color: color.hex };\n        this.changeImage(ii);\n    };\n\n    handleRemoveColorClick = () => {\n        const ii: ImageInfo = { color: undefined };\n        this.changeImage(ii);\n    };\n\n    handleApplyToAllCardChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ applyToAllCards: event.target.checked });\n    };\n\n    render() {\n        const { activePlaceholder, imageInfo, filter, visible } = this.props;\n        const { location, applyToAllCards } = this.state;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'grid' : 'none' }}>\n                <div>\n                    <button onClick={this.handleAddImageClick} title=\"Add image field\">\n                        <i className=\"material-icons\">add_photo_alternate</i>\n                    </button>\n\n                    {activePlaceholder !== null && (\n                        <>\n                            <button onClick={this.handleRaiseToTop} title=\"Raise image to top\">\n                                <i className=\"material-icons\">arrow_upward</i>\n                            </button>\n                            <button onClick={this.handleLowerToBottom} title=\"Lower image to bottom\">\n                                <i className=\"material-icons\">arrow_downward</i>\n                            </button>\n                        </>\n                    )}\n\n                    {imageInfo && (\n                        <button onClick={this.handleRemoveImageFromFieldClick} title=\"Remove image from field\">\n                            <i className=\"material-icons\">remove_circle_outline</i>\n                        </button>\n                    )}\n\n                    {activePlaceholder !== null && !activePlaceholder.locked && (\n                        <button\n                            onClick={this.handleLockField}\n                            title=\"Lock image field. Locked field can't be dragged, rotated, resized and removed.\"\n                        >\n                            <i className=\"material-icons\">lock_open</i>\n                        </button>\n                    )}\n\n                    {activePlaceholder !== null && activePlaceholder.locked && (\n                        <button\n                            onClick={this.handleUnlockField}\n                            title=\"Unlock image field. Unlocked text field can be dragged, rotated, resized and removed.\"\n                        >\n                            <i className=\"material-icons\">lock</i>\n                        </button>\n                    )}\n\n                    <button\n                        className={activePlaceholder === null || activePlaceholder.locked ? style.disabled : ''}\n                        onClick={this.handleRemoveClick}\n                        title=\"Remove field\"\n                    >\n                        <i className=\"material-icons\">remove</i>\n                    </button>\n\n                    {activePlaceholder !== null && (\n                        <input\n                            type=\"text\"\n                            value={activePlaceholder.name || ''}\n                            placeholder={activePlaceholder.id}\n                            onChange={this.handleNameChange}\n                            title=\"Change name of image field.\"\n                        />\n                    )}\n\n                    {activePlaceholder && activePlaceholder.type === 'image' && (\n                        <form>\n                            <div>\n                                Fit:\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        value=\"width\"\n                                        checked={!activePlaceholder.fit || activePlaceholder.fit === 'width'}\n                                        onChange={this.handleFitOptionChange}\n                                    />\n                                    width\n                                </label>\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        value=\"height\"\n                                        checked={activePlaceholder.fit === 'height'}\n                                        onChange={this.handleFitOptionChange}\n                                    />\n                                    height\n                                </label>\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        value=\"stretch\"\n                                        checked={activePlaceholder.fit === 'stretch'}\n                                        onChange={this.handleFitOptionChange}\n                                    />\n                                    stretch\n                                </label>\n                            </div>\n                        </form>\n                    )}\n                </div>\n\n                {activePlaceholder && activePlaceholder.type === 'image' && (\n                    <>\n                        <div>\n                            <ColorButton\n                                color={(imageInfo && imageInfo.color) || '#FFFFFF'}\n                                onChange={this.handleColorChange}\n                            />\n                            {imageInfo && imageInfo.color && (\n                                <button onClick={this.handleRemoveColorClick} title=\"Remove color\">\n                                    <i className=\"material-icons\">remove_circle</i>\n                                </button>\n                            )}\n                            <label>\n                                <input\n                                    type=\"checkbox\"\n                                    checked={applyToAllCards}\n                                    onChange={this.handleApplyToAllCardChange}\n                                />\n                                Apply to all cards\n                            </label>\n                        </div>\n                    </>\n                )}\n                <div>\n                    <form>\n                        Source:\n                        <label>\n                            <input\n                                type=\"radio\"\n                                value=\"all\"\n                                checked={location === 'all'}\n                                onChange={this.handleOptionChange}\n                            />\n                            All\n                        </label>\n                        <label>\n                            <input\n                                type=\"radio\"\n                                value=\"user\"\n                                checked={location === 'user'}\n                                onChange={this.handleOptionChange}\n                            />\n                            User\n                        </label>\n                        <label>\n                            <input\n                                type=\"radio\"\n                                value=\"game\"\n                                checked={location === 'game'}\n                                onChange={this.handleOptionChange}\n                            />\n                            Game\n                        </label>\n                    </form>\n                </div>\n\n                <div>\n                    <input type=\"text\" placeholder=\"Search...\" value={filter} onChange={this.handleFilterChange} />\n                </div>\n                <div className={style.images}>\n                    {this.props.images.map(im => {\n                        return (\n                            <img\n                                key={im.id}\n                                src={`/api/imagefiles/${im.name}`}\n                                onClick={() => this.handleImageSelect(im.name)}\n                                alt={im.name}\n                            />\n                        );\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    const activePlaceholder =\n        state.cardsets.activePlaceholder !== null\n            ? state.cardsets.placeholders[state.cardsets.activePlaceholder]\n            : null;\n\n    const activeCard = state.cardsets.activeCard !== null ? state.cardsets.cardsById[state.cardsets.activeCard] : null;\n\n    let imageInfo = undefined;\n\n    if (\n        state.cardsets.images &&\n        activeCard &&\n        state.cardsets.images[activeCard.id] &&\n        activePlaceholder !== null &&\n        activePlaceholder.type === 'image' &&\n        state.cardsets.images[activeCard.id][activePlaceholder.id]\n    ) {\n        imageInfo = state.cardsets.images[activeCard.id][activePlaceholder.id];\n    }\n\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        activePlaceholder,\n        imageInfo,\n        activeCard,\n        images: state.images.images,\n        filter: state.images.filter,\n        cardsAllIds: state.cardsets.cardsAllIds,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarImage);\n","import 'filepond/dist/filepond.min.css';\n\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport { connect } from 'react-redux';\nimport FilePondPluginFileValidateType from 'filepond-plugin-file-validate-type';\nimport Papa from 'papaparse';\nimport React, { Component } from 'react';\nimport md5 from 'md5';\nimport shortid from 'shortid';\n\nimport {\n    CardType,\n    CardsCollection,\n    FPLoadCallback,\n    FPRevertLoadCallback,\n    IdsArray,\n    PlaceholdersCollection,\n    PlaceholdersImageInfoByCardCollection,\n    PlaceholdersTextInfoByCardCollection,\n    cardSetImportData,\n    messageDisplay,\n} from '../actions';\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport { State } from '../reducers';\nimport { downloadBlob } from '../utils';\nimport style from './SidebarImportExport.module.css';\n\nregisterPlugin(FilePondPluginFileValidateType);\n\ninterface StateProps {\n    activeGame: string | null;\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    cardsAllIds: IdsArray;\n    cardsById: CardsCollection;\n    placeholders: PlaceholdersCollection;\n    placeholdersAllIds: IdsArray;\n    texts: PlaceholdersTextInfoByCardCollection;\n    images: PlaceholdersImageInfoByCardCollection;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarImportExport extends Component<Props> {\n    prepareImagePaths = (images: PlaceholdersImageInfoByCardCollection) => {\n        const { activeGame } = this.props;\n        if (activeGame === null) return images;\n\n        const ending = '_' + md5(activeGame);\n\n        let preparedImages: PlaceholdersImageInfoByCardCollection = {};\n\n        for (const cardId in images) {\n            let imagesByCard = { ...images[cardId] };\n            for (const placeholderId in imagesByCard) {\n                let imageInfo = { ...imagesByCard[placeholderId] };\n                let url = imageInfo.url || '';\n                if (url.endsWith(ending)) {\n                    url = url.replace(ending, '');\n                } else {\n                    imageInfo.global = true;\n                }\n\n                imageInfo.url = url.replace('/api/imagefiles/', '');\n\n                imagesByCard[placeholderId] = imageInfo;\n            }\n            preparedImages[cardId] = imagesByCard;\n        }\n\n        return preparedImages;\n    };\n\n    handleExportJson = () => {\n        const { width, height, isTwoSided, cardsAllIds, cardsById, placeholders, placeholdersAllIds, texts, images } = this.props;\n\n        const preparedImages = this.prepareImagePaths(images);\n\n        const data = {\n            width,\n            height,\n            isTwoSided,\n            cardsAllIds,\n            cardsById,\n            placeholders,\n            placeholdersAllIds,\n            texts,\n            images: preparedImages,\n        };\n\n        let json = JSON.stringify(data, null, 4);\n        let blob = new Blob([json], { type: 'octet/stream' });\n        let url = window.URL.createObjectURL(blob);\n        downloadBlob(url, 'cardset.json');\n    };\n\n    handleExportCsv = () => {\n        const { cardsAllIds, cardsById, placeholders, placeholdersAllIds, texts, images } = this.props;\n\n        const preparedImages = this.prepareImagePaths(images);\n\n        let csvData: (string | number)[][] = [];\n        let header = ['card_id', 'card_count'];\n        let usedNames: { [key: string]: boolean } = {};\n        for (const plId of placeholdersAllIds) {\n            const placeholder = placeholders[plId];\n            const name = placeholder.name || placeholder.id;\n            if (!(name in usedNames)) {\n                header.push(name);\n                if (placeholder.type === 'image') {\n                    header.push(`${name}_global`);\n                }\n                usedNames[name] = false;\n            }\n        }\n        csvData.push(header);\n\n        for (const cardId of cardsAllIds) {\n            let card = cardsById[cardId];\n\n            let dataRow: (string | number)[] = [cardId, card.count];\n\n            let written = { ...usedNames };\n            for (const plId of placeholdersAllIds) {\n                const placeholder = placeholders[plId];\n                const name = placeholder.name || placeholder.id;\n\n                if (!written[name]) {\n                    if (placeholder.type === 'text') {\n                        dataRow.push(texts[cardId][plId].value);\n                    } else if (placeholder.type === 'image') {\n                        const image = preparedImages[cardId][plId];\n                        dataRow.push(image.url || '');\n                        dataRow.push(image.global ? 'y' : 'n');\n                    }\n                    written[name] = true;\n                }\n            }\n            csvData.push(dataRow);\n        }\n\n        let csv = Papa.unparse(csvData);\n        let blob = new Blob([csv], { type: 'octet/stream' });\n        let url = window.URL.createObjectURL(blob);\n        downloadBlob(url, 'cardset.csv');\n    };\n\n    handleProcess = (fieldName: string, file: File, metadata: { [propName: string]: string }, load: FPLoadCallback) => {\n        const { dispatch, activeGame, placeholders } = this.props;\n        if (activeGame === null) return;\n\n        var reader = new FileReader();\n        reader.readAsText(file, 'UTF-8');\n        reader.onload = function(e) {\n            if (e.target === null) return;\n\n            let data = null;\n            const ending = '_' + md5(activeGame);\n\n            if (file.type === 'application/json') {\n                // eslint-disable-next-line\n                data = JSON.parse((e.target as any).result);\n\n                for (const cardId in data.images) {\n                    const loadedPlaceholders = data.images[cardId];\n                    for (const placeholderId in loadedPlaceholders) {\n                        let imageInfo = loadedPlaceholders[placeholderId];\n                        let isGlobal = imageInfo.global || false;\n\n                        imageInfo.url = `/api/imagefiles/${imageInfo.url}${isGlobal ? '' : ending}`;\n                        delete imageInfo.global;\n                    }\n                }\n            } else if (file.type === 'text/csv') {\n                // eslint-disable-next-line\n                const csvData = Papa.parse((e.target as any).result, { header: true });\n\n                let cardsAllIds: IdsArray = [];\n                let cardsById: CardsCollection = {};\n                let texts: PlaceholdersTextInfoByCardCollection = {};\n                let images: PlaceholdersImageInfoByCardCollection = {};\n\n                for (const row of csvData.data) {\n                    const card: CardType = {\n                        id: row['card_id'] || shortid.generate(),\n                        count: row['card_count'] || 1,\n                    };\n\n                    cardsAllIds.push(card.id);\n                    cardsById[card.id] = card;\n\n                    for (const plId in placeholders) {\n                        const pl = placeholders[plId];\n                        const name = pl.name || pl.id;\n\n                        if (row[name]) {\n                            if (pl.type === 'image') {\n                                const isGlobal = row[`${name}_global`] === 'y';\n                                const url = row[name];\n\n                                if (!(card.id in images)) {\n                                    images[card.id] = {};\n                                }\n\n                                images[card.id][plId] = {\n                                    url: `/api/imagefiles/${url}${isGlobal ? '' : ending}`,\n                                };\n                            } else if (pl.type === 'text') {\n                                if (!(card.id in texts)) {\n                                    texts[card.id] = {};\n                                }\n                                texts[card.id][plId] = { value: row[name] };\n                            }\n                        }\n                    }\n                }\n\n                data = {\n                    cardsAllIds,\n                    cardsById,\n                    texts,\n                    images,\n                };\n            }\n\n            if (data !== null) {\n                dispatch(cardSetImportData(data));\n            }\n        };\n        reader.onerror = function() {\n            dispatch(messageDisplay('error', 'Problem during import.'));\n        };\n\n        load(file.name);\n    };\n\n    handleRevert = (uniqueFileId: string, load: FPRevertLoadCallback) => {\n        load();\n    };\n\n    render() {\n        const { visible } = this.props;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'grid' : 'none' }}>\n                <div>\n                    Here you can export and import your card set data. JSON file contains templates of cards, text and\n                    image data by card, CSV file contains only text and image data by card.\n                </div>\n                <button onClick={this.handleExportJson}>\n                    <i className=\"material-icons\">cloud_download</i> Get JSON\n                </button>\n                <button onClick={this.handleExportCsv}>\n                    <i className=\"material-icons\">cloud_download</i> Get CSV\n                </button>\n\n                <div>Drag & Drop or browser for JSON or CSV file here:</div>\n\n                <FilePond\n                    server={{\n                        process: this.handleProcess,\n                        revert: this.handleRevert,\n                    }}\n                    acceptedFileTypes={['text/csv', 'application/json']}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        activeGame: state.games.active,\n        width: state.cardsets.width,\n        height: state.cardsets.height,\n        isTwoSided: state.cardsets.isTwoSided,\n        cardsAllIds: state.cardsets.cardsAllIds,\n        cardsById: state.cardsets.cardsById,\n        placeholders: state.cardsets.placeholders,\n        placeholdersAllIds: state.cardsets.placeholdersAllIds,\n        texts: state.cardsets.texts,\n        images: state.cardsets.images,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarImportExport);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport {\n    IdsArray,\n    PlaceholderType,\n    PlaceholdersCollection,\n    cardSetActiveCardAndPlaceholder,\n    cardSetChangeActivePlaceholderName,\n    cardSetChangePlaceholderAngle,\n    cardSetChangePlaceholderPosition,\n    cardSetChangePlaceholderSize,\n    cardSetLockActivePlaceholder,\n    cardSetLowerActivePlaceholderToBottom,\n    cardSetRaiseActivePlaceholderToTop,\n    cardSetUnlockActivePlaceholder,\n} from '../actions';\nimport { State } from '../reducers';\nimport style from './SidebarMeasurements.module.css';\n\ninterface StateProps {\n    activePlaceholder: PlaceholderType | null;\n    activeCard: string | null;\n    placeholders: PlaceholdersCollection;\n    placeholdersAllIds: IdsArray;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarMeasurements extends Component<Props> {\n    handlePrevPlaceholder = () => {\n        const { activeCard, activePlaceholder, placeholders, placeholdersAllIds, dispatch } = this.props;\n        if (placeholdersAllIds.length === 0 || activeCard === null) return;\n\n        let prevPlaceholder = placeholdersAllIds[placeholdersAllIds.length - 1];\n        if (activePlaceholder !== null) {\n            let idx = placeholdersAllIds.indexOf(activePlaceholder.id);\n            if (idx > 0) prevPlaceholder = placeholdersAllIds[idx - 1];\n        }\n\n        dispatch(\n            cardSetActiveCardAndPlaceholder(\n                activeCard,\n                placeholders[prevPlaceholder].isOnBack || false,\n                prevPlaceholder,\n            ),\n        );\n    };\n\n    handleNextPlaceholder = () => {\n        const { activeCard, activePlaceholder, placeholders, placeholdersAllIds, dispatch } = this.props;\n        if (placeholdersAllIds.length === 0 || activeCard === null) return;\n\n        let nextPlaceholder = placeholdersAllIds[0];\n        if (activePlaceholder !== null) {\n            let idx = placeholdersAllIds.indexOf(activePlaceholder.id);\n            if (idx !== -1 && idx !== placeholdersAllIds.length - 1) nextPlaceholder = placeholdersAllIds[idx + 1];\n        }\n\n        dispatch(\n            cardSetActiveCardAndPlaceholder(\n                activeCard,\n                placeholders[nextPlaceholder].isOnBack || false,\n                nextPlaceholder,\n            ),\n        );\n    };\n\n    handleRaiseToTop = () => {\n        const { activePlaceholder, dispatch } = this.props;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetRaiseActivePlaceholderToTop());\n        }\n    };\n\n    handleLowerToBottom = () => {\n        const { activePlaceholder, dispatch } = this.props;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetLowerActivePlaceholderToBottom());\n        }\n    };\n\n    handleLockField = () => {\n        const { activePlaceholder, dispatch } = this.props;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetLockActivePlaceholder());\n        }\n    };\n\n    handleUnlockField = () => {\n        const { activePlaceholder, dispatch } = this.props;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetUnlockActivePlaceholder());\n        }\n    };\n\n    handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activePlaceholder, dispatch } = this.props;\n        const name = event.target.value.trim();\n        if (activePlaceholder !== null) {\n            dispatch(cardSetChangeActivePlaceholderName(name));\n        }\n    };\n\n    handleWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activePlaceholder, dispatch } = this.props;\n        const width = parseFloat(event.target.value);\n        if (activePlaceholder !== null) {\n            dispatch(cardSetChangePlaceholderSize(activePlaceholder, width, activePlaceholder.height));\n        }\n    };\n\n    handleHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activePlaceholder, dispatch } = this.props;\n        const height = parseFloat(event.target.value);\n        if (activePlaceholder !== null) {\n            dispatch(cardSetChangePlaceholderSize(activePlaceholder, activePlaceholder.width, height));\n        }\n    };\n\n    handleXChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activePlaceholder, dispatch } = this.props;\n        const x = parseFloat(event.target.value);\n        if (activePlaceholder !== null) {\n            dispatch(cardSetChangePlaceholderPosition(activePlaceholder, x, activePlaceholder.y));\n        }\n    };\n\n    handleYChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activePlaceholder, dispatch } = this.props;\n        const y = parseFloat(event.target.value);\n        if (activePlaceholder !== null) {\n            dispatch(cardSetChangePlaceholderPosition(activePlaceholder, activePlaceholder.x, y));\n        }\n    };\n\n    handleAngleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activePlaceholder, dispatch } = this.props;\n        const angle = (parseFloat(event.target.value) * Math.PI) / 180;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetChangePlaceholderAngle(activePlaceholder, angle));\n        }\n    };\n\n    render() {\n        const { activeCard, activePlaceholder, visible } = this.props;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'initial' : 'none' }}>\n                {activeCard !== null && (\n                    <>\n                        <button onClick={this.handlePrevPlaceholder} title=\"Previous placeholder\">\n                            <i className=\"material-icons\">arrow_back</i>\n                        </button>\n                        <button onClick={this.handleNextPlaceholder} title=\"Next placeholder\">\n                            <i className=\"material-icons\">arrow_forward</i>\n                        </button>\n                    </>\n                )}\n\n                {activePlaceholder !== null && (\n                    <>\n                        <button onClick={this.handleRaiseToTop} title=\"Raise to top\">\n                            <i className=\"material-icons\">arrow_upward</i>\n                        </button>\n                        <button onClick={this.handleLowerToBottom} title=\"Lower to bottom\">\n                            <i className=\"material-icons\">arrow_downward</i>\n                        </button>\n                    </>\n                )}\n\n                {activePlaceholder !== null && !activePlaceholder.locked && (\n                    <button\n                        onClick={this.handleLockField}\n                        title=\"Lock field. Locked field can't be dragged, rotated, resized and removed.\"\n                    >\n                        <i className=\"material-icons\">lock_open</i>\n                    </button>\n                )}\n\n                {activePlaceholder !== null && activePlaceholder.locked && (\n                    <button\n                        onClick={this.handleUnlockField}\n                        title=\"Unlock field. Unlocked field can be dragged, rotated, resized and removed.\"\n                    >\n                        <i className=\"material-icons\">lock</i>\n                    </button>\n                )}\n\n                {activePlaceholder !== null && (\n                    <div>\n                        <label>\n                            Field name:\n                            <input\n                                type=\"text\"\n                                value={activePlaceholder.name || ''}\n                                placeholder={activePlaceholder.id}\n                                onChange={this.handleNameChange}\n                                title=\"Change name of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            Width:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={activePlaceholder.width}\n                                placeholder=\"Width\"\n                                onChange={this.handleWidthChange}\n                                title=\"Change width of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            Height:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={activePlaceholder.height}\n                                placeholder=\"Height\"\n                                onChange={this.handleHeightChange}\n                                title=\"Change width of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            X:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={activePlaceholder.x}\n                                placeholder=\"Width\"\n                                onChange={this.handleXChange}\n                                title=\"Change x coordinate of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            Y:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={activePlaceholder.y}\n                                placeholder=\"Height\"\n                                onChange={this.handleYChange}\n                                title=\"Change y coordinate of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            Angle:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={(activePlaceholder.angle * 180) / Math.PI}\n                                placeholder=\"Angle\"\n                                onChange={this.handleAngleChange}\n                                title=\"Change rotation angle of field.\"\n                            />\n                        </label>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    const activePlaceholder =\n        state.cardsets.activePlaceholder !== null\n            ? state.cardsets.placeholders[state.cardsets.activePlaceholder]\n            : null;\n\n    return {\n        activePlaceholder,\n        activeCard: state.cardsets.activeCard,\n        placeholders: state.cardsets.placeholders,\n        placeholdersAllIds: state.cardsets.placeholdersAllIds,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarMeasurements);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport { State } from '../reducers';\nimport {\n    cardSetChangeHeight,\n    cardSetChangeIsTwoSided,\n    cardSetChangeSnappingDistance,\n    cardSetChangeWidth,\n    cardSetSetZoom,\n} from '../actions';\nimport style from './SidebarSettings.module.css';\n\ninterface StateProps {\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    snappingDistance: number;\n    zoom: number;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarDetails extends Component<Props> {\n    handleWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeWidth(parseFloat(event.target.value)));\n    };\n\n    handleHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeHeight(parseFloat(event.target.value)));\n    };\n\n    handleIsTwoSidedChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeIsTwoSided(event.target.checked));\n    };\n\n    handleZoom = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetSetZoom(parseFloat(event.target.value)));\n    };\n\n    handleSnappingDistance = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeSnappingDistance(parseFloat(event.target.value)));\n    };\n\n    render() {\n        const { width, height, isTwoSided, snappingDistance, visible, zoom } = this.props;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'initial' : 'none' }}>\n                <label htmlFor=\"card_width\">Card width (mm):</label>\n                <input\n                    id=\"card_width\"\n                    type=\"number\"\n                    min=\"0\"\n                    step=\"0.1\"\n                    onChange={this.handleWidthChange}\n                    className=\"form-control\"\n                    placeholder=\"width\"\n                    value={width}\n                />\n                <label htmlFor=\"card_height\">Card height (mm):</label>\n                <input\n                    id=\"card_height\"\n                    type=\"number\"\n                    min=\"0\"\n                    step=\"0.1\"\n                    onChange={this.handleHeightChange}\n                    className=\"form-control\"\n                    placeholder=\"height\"\n                    value={height}\n                />\n                <label>\n                    Cards have two sides:{' '}\n                    <input\n                        type=\"checkbox\"\n                        onChange={this.handleIsTwoSidedChange}\n                        className=\"form-control\"\n                        checked={isTwoSided}\n                    />\n                </label>\n                <div>\n                    <label htmlFor=\"zoom\">Zoom (if you want to see details or big picture)</label>\n                    <input\n                        id=\"zoom\"\n                        type=\"number\"\n                        min=\"0.1\"\n                        step=\"0.1\"\n                        onChange={this.handleZoom}\n                        className=\"form-control\"\n                        placeholder=\"zoom\"\n                        value={zoom}\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"zoom\">Snapping distance in mm. 0 to disable.</label>\n                    <input\n                        id=\"zoom\"\n                        type=\"number\"\n                        min=\"0\"\n                        step=\"0.1\"\n                        onChange={this.handleSnappingDistance}\n                        className=\"form-control\"\n                        placeholder=\"Snapping distance\"\n                        value={snappingDistance}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        width: state.cardsets.width,\n        height: state.cardsets.height,\n        isTwoSided: state.cardsets.isTwoSided,\n        snappingDistance: state.cardsets.snappingDistance,\n        zoom: state.cardsets.zoom,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarDetails);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport WebFont from 'webfontloader';\n\nimport { DEFAULT_LINE_HEIGHT } from '../constants';\nimport {\n    Dispatch,\n    cardSetChangeActiveTextPlaceholderFontFamilyAndVariant,\n    cardSetChangeActiveTextPlaceholderFontSize,\n    cardSetChangeActiveTextPlaceholderFontVariant,\n    cardSetChangeActiveTextPlaceholderLineHeight,\n} from '../actions';\nimport { State } from '../reducers';\nimport style from './FontSelector.module.css';\nimport webfonts from './webfonts.json';\n\ninterface WebFontsInfo {\n    [propName: string]: {\n        [propName: string]: string;\n    };\n}\n\ninterface FontOption {\n    value: string;\n    label: string;\n}\n\nconst options: FontOption[] = Object.keys(webfonts)\n    .sort()\n    .map(fi => ({ value: fi, label: fi }));\n\ninterface StateProps {\n    activeFont: string;\n    activeFontVariant: string;\n    activeFontSize: number;\n    activeLineHeight: number;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = StateProps & DispatchProps;\n\nclass FontSelector extends Component<Props> {\n    getFontStringForLoad = (family: string, variant: string) => {\n        let stringForLoad = family;\n        if (variant !== 'regular') {\n            stringForLoad += ':' + variant;\n        }\n        return stringForLoad;\n    };\n\n    handleChange = (selectedOption?: FontOption | FontOption[] | null) => {\n        if (!selectedOption) return;\n\n        const fontFamily = (selectedOption as FontOption).value;\n\n        let fontVariant = this.props.activeFontVariant;\n        const wf: WebFontsInfo = webfonts;\n        if (!(fontVariant in wf[fontFamily])) {\n            fontVariant = Object.keys(wf[fontFamily]).sort()[0];\n        }\n\n        WebFont.load({\n            google: {\n                families: [this.getFontStringForLoad(fontFamily, fontVariant)],\n            },\n            active: () => {\n                const { dispatch } = this.props;\n                dispatch(cardSetChangeActiveTextPlaceholderFontFamilyAndVariant(fontFamily, fontVariant));\n            },\n        });\n    };\n\n    handleFontVariantChange = (selectedOption?: FontOption | FontOption[] | null) => {\n        if (!selectedOption) return;\n\n        const value = (selectedOption as FontOption).value;\n        WebFont.load({\n            google: {\n                families: [this.getFontStringForLoad(this.props.activeFont, value)],\n            },\n            active: () => {\n                const { dispatch } = this.props;\n                dispatch(cardSetChangeActiveTextPlaceholderFontVariant(value));\n            },\n        });\n    };\n\n    handleFontSizeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeActiveTextPlaceholderFontSize(parseFloat(event.target.value)));\n    };\n\n    handleLineHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeActiveTextPlaceholderLineHeight(parseFloat(event.target.value)));\n    };\n\n    render() {\n        const selectedFontFamily = options.find(f => f.value === this.props.activeFont);\n\n        const fontVariantOptions: FontOption[] = Object.keys((webfonts as WebFontsInfo)[this.props.activeFont])\n            .sort()\n            .map(fv => ({ value: fv, label: fv }));\n\n        const selectedFontVariant = fontVariantOptions.find(f => f.value === this.props.activeFontVariant);\n\n        return (\n            <>\n                <input\n                    type=\"number\"\n                    value={this.props.activeFontSize}\n                    onChange={this.handleFontSizeChange}\n                    title=\"Font size\"\n                />\n                <Select\n                    className={style.fontFamily}\n                    value={selectedFontFamily}\n                    onChange={this.handleChange}\n                    options={options}\n                />\n                <Select\n                    className={style.fontVariant}\n                    value={selectedFontVariant}\n                    onChange={this.handleFontVariantChange}\n                    options={fontVariantOptions}\n                />\n                <input\n                    type=\"number\"\n                    value={this.props.activeLineHeight}\n                    onChange={this.handleLineHeightChange}\n                    title=\"Line height\"\n                    step=\"0.01\"\n                />\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    let activeFont = state.cardsets.textSettings.fontFamily;\n    let activeFontVariant = state.cardsets.textSettings.fontVariant;\n    let activeFontSize = state.cardsets.textSettings.fontSize;\n    let activeLineHeight = state.cardsets.textSettings.lineHeight || DEFAULT_LINE_HEIGHT;\n\n    return {\n        activeFont,\n        activeFontVariant,\n        activeFontSize,\n        activeLineHeight,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, {}, State>(mapStateToProps)(FontSelector);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport {\n    PlaceholderType,\n    cardSetAddTextPlaceholder,\n    cardSetChangeActivePlaceholderName,\n    cardSetChangeActiveTextPlaceholderAlign,\n    cardSetLockActivePlaceholder,\n    cardSetLowerActivePlaceholderToBottom,\n    cardSetRaiseActivePlaceholderToTop,\n    cardSetRemoveActivePlaceholder,\n    cardSetUnlockActivePlaceholder,\n    cardSetChangeActiveTextPlaceholderColor,\n} from '../actions';\nimport { State } from '../reducers';\nimport ColorButton from './ColorButton';\nimport FontSelector from './FontSelector';\nimport style from './SidebarText.module.css';\nimport { ColorResult } from 'react-color';\n\ninterface StateProps {\n    isAuthenticated: boolean;\n    activePlaceholder: PlaceholderType | null;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarText extends Component<Props> {\n    handleAddTextClick = () => {\n        const { dispatch } = this.props;\n        dispatch(cardSetAddTextPlaceholder());\n    };\n\n    handleSetTextAlignLeft = () => {\n        const selection = window.getSelection();\n        const range = selection.getRangeAt(0);\n        if (selection.rangeCount === 1 && range.collapsed) {\n            const { dispatch } = this.props;\n            dispatch(cardSetChangeActiveTextPlaceholderAlign('left'));\n        } else {\n            document.execCommand('justifyleft');\n        }\n    };\n\n    handleSetTextAlignCenter = () => {\n        const selection = window.getSelection();\n        const range = selection.getRangeAt(0);\n        if (selection.rangeCount === 1 && range.collapsed) {\n            const { dispatch } = this.props;\n            dispatch(cardSetChangeActiveTextPlaceholderAlign('center'));\n        } else {\n            document.execCommand('justifycenter');\n        }\n    };\n\n    handleSetTextAlignRight = () => {\n        const selection = window.getSelection();\n        const range = selection.getRangeAt(0);\n        if (selection.rangeCount === 1 && range.collapsed) {\n            const { dispatch } = this.props;\n            dispatch(cardSetChangeActiveTextPlaceholderAlign('right'));\n        } else {\n            document.execCommand('justifyright');\n        }\n    };\n\n    handleSetTextBold = () => {\n        document.execCommand('bold');\n    };\n\n    handleSetTextItalic = () => {\n        document.execCommand('italic');\n    };\n\n    handleRemoveClick = () => {\n        const { activePlaceholder, dispatch } = this.props;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetRemoveActivePlaceholder());\n        }\n    };\n\n    handleRaiseToTop = () => {\n        const { activePlaceholder, dispatch } = this.props;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetRaiseActivePlaceholderToTop());\n        }\n    };\n\n    handleLowerToBottom = () => {\n        const { activePlaceholder, dispatch } = this.props;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetLowerActivePlaceholderToBottom());\n        }\n    };\n\n    handleLockField = () => {\n        const { activePlaceholder, dispatch } = this.props;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetLockActivePlaceholder());\n        }\n    };\n\n    handleUnlockField = () => {\n        const { activePlaceholder, dispatch } = this.props;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetUnlockActivePlaceholder());\n        }\n    };\n\n    handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activePlaceholder, dispatch } = this.props;\n        const name = event.target.value.trim();\n        if (activePlaceholder !== null) {\n            dispatch(cardSetChangeActivePlaceholderName(name));\n        }\n    };\n\n    handleColorChange = (color: ColorResult) => {\n        const selection = window.getSelection();\n        const range = selection.getRangeAt(0);\n        if (selection.rangeCount === 1 && range.collapsed) {\n            const { dispatch } = this.props;\n            dispatch(cardSetChangeActiveTextPlaceholderColor(color.hex));\n        } else {\n            document.execCommand('forecolor', false, color.hex);\n        }\n    };\n\n    render() {\n        const { activePlaceholder, visible } = this.props;\n\n        let color = '#000000';\n        if (activePlaceholder && activePlaceholder.type === 'text' && activePlaceholder.color) {\n            color = activePlaceholder.color;\n        }\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'initial' : 'none' }}>\n                <button onClick={this.handleAddTextClick} title=\"Add text field\">\n                    <i className=\"material-icons\">text_fields</i>\n                </button>\n                {activePlaceholder !== null && (\n                    <>\n                        <button onClick={this.handleRaiseToTop} title=\"Raise text to top\">\n                            <i className=\"material-icons\">arrow_upward</i>\n                        </button>\n                        <button onClick={this.handleLowerToBottom} title=\"Lower text to bottom\">\n                            <i className=\"material-icons\">arrow_downward</i>\n                        </button>\n                    </>\n                )}\n\n                {activePlaceholder !== null && !activePlaceholder.locked && (\n                    <button\n                        onClick={this.handleLockField}\n                        title=\"Lock text field. Locked field can't be dragged, rotated, resized and removed.\"\n                    >\n                        <i className=\"material-icons\">lock_open</i>\n                    </button>\n                )}\n\n                {activePlaceholder !== null && activePlaceholder.locked && (\n                    <button\n                        onClick={this.handleUnlockField}\n                        title=\"Unlock text field. Unlocked text field can be dragged, rotated, resized and removed.\"\n                    >\n                        <i className=\"material-icons\">lock</i>\n                    </button>\n                )}\n\n                <button\n                    className={activePlaceholder === null || activePlaceholder.locked ? style.disabled : ''}\n                    onClick={this.handleRemoveClick}\n                    title=\"Remove field\"\n                >\n                    <i className=\"material-icons\">remove</i>\n                </button>\n\n                {activePlaceholder !== null && (\n                    <input\n                        type=\"text\"\n                        value={activePlaceholder.name || ''}\n                        placeholder={activePlaceholder.id}\n                        onChange={this.handleNameChange}\n                        title=\"Change name of text field.\"\n                    />\n                )}\n\n                <div>\n                    <button onClick={this.handleSetTextAlignLeft} title=\"Align text left\">\n                        <i className=\"material-icons\">format_align_left</i>\n                    </button>\n                    <button onClick={this.handleSetTextAlignCenter} title=\"Align text center\">\n                        <i className=\"material-icons\">format_align_center</i>\n                    </button>\n                    <button onClick={this.handleSetTextAlignRight} title=\"Align text right\">\n                        <i className=\"material-icons\">format_align_right</i>\n                    </button>\n                    <button onClick={this.handleSetTextBold} title=\"Makes selected text bold\">\n                        <i className=\"material-icons\">format_bold</i>\n                    </button>\n                    <button onClick={this.handleSetTextItalic} title=\"Makes selected text italic\">\n                        <i className=\"material-icons\">format_italic</i>\n                    </button>\n                    <ColorButton color={color} onChange={this.handleColorChange} />\n                    <FontSelector />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    const activePlaceholder =\n        state.cardsets.activePlaceholder !== null\n            ? state.cardsets.placeholders[state.cardsets.activePlaceholder]\n            : null;\n\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        activePlaceholder,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarText);\n","import 'filepond/dist/filepond.min.css';\n\nimport './SidebarUpload.css';\n\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport { connect } from 'react-redux';\nimport FilePondPluginFileValidateSize from 'filepond-plugin-file-validate-size';\nimport FilePondPluginFileValidateType from 'filepond-plugin-file-validate-type';\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport {\n    FPAbortCallback,\n    FPErrorCallback,\n    FPLoadCallback,\n    FPProgressCallback,\n    FPRevertLoadCallback,\n    cardSetDeleteImage,\n    cardSetUploadImage,\n} from '../actions';\nimport { State } from '../reducers';\nimport style from './SidebarUpload.module.css';\n\nregisterPlugin(FilePondPluginFileValidateSize);\nregisterPlugin(FilePondPluginFileValidateType);\n\ninterface StateProps {\n    activeGame: string | null;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarUpload extends Component<Props> {\n    handleProcess = (\n        fieldName: string,\n        file: File,\n        metadata: { [propName: string]: string },\n        load: FPLoadCallback,\n        error: FPErrorCallback,\n        progress: FPProgressCallback,\n        abort: FPAbortCallback,\n    ) => {\n        const { dispatch, activeGame } = this.props;\n\n        if (activeGame === null) {\n            abort();\n            return;\n        }\n\n        let source = axios.CancelToken.source();\n\n        dispatch(cardSetUploadImage(activeGame, file, load, error, progress, abort, source.token));\n\n        return { abort: source.cancel };\n    };\n\n    handleRevert = (uniqueFileId: string, load: FPRevertLoadCallback, error: FPErrorCallback) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetDeleteImage(uniqueFileId, load, error));\n    };\n\n    render() {\n        const { visible } = this.props;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'grid' : 'none' }}>\n                <div>\n                    Uploaded imaged are kept for limited time. If they are deleted then simply re-upload them again.\n                </div>\n                <FilePond\n                    allowMultiple={true}\n                    server={{\n                        process: this.handleProcess,\n                        revert: this.handleRevert,\n                    }}\n                    acceptedFileTypes={['image/png', 'image/jpeg', 'image/svg+xml']}\n                    allowFileSizeValidation={true}\n                    maxFileSize=\"500KB\"\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        activeGame: state.games.active,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarUpload);\n","import { connect, ConnectedComponentClass } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport { SidebarState, cardSetSetSidebarState } from '../actions';\nimport { State } from '../reducers';\nimport SidebarDetails from './SidebarDetails';\nimport SidebarImage from './SidebarImage';\nimport SidebarImportExport from './SidebarImportExport';\nimport SidebarMeasurements from './SidebarMeasurements';\nimport SidebarSettings from './SidebarSettings';\nimport SidebarText from './SidebarText';\nimport SidebarUpload from './SidebarUpload';\nimport style from './Sidebar.module.css';\n\ninterface StateProps {\n    isAuthenticated: boolean;\n    activeSidebar: SidebarState | null;\n}\n\ntype Props = StateProps & DispatchProps;\n\ninterface SidebarInfo {\n    state: SidebarState;\n    title: string;\n    icon: string;\n    component: ConnectedComponentClass<typeof Component, SidebarOwnProps>;\n}\n\nconst SIDEBARS: SidebarInfo[] = [\n    {\n        state: SidebarState.Settings,\n        title: 'Settings',\n        icon: 'settings',\n        component: SidebarSettings,\n    },\n    {\n        state: SidebarState.Details,\n        title: 'Details',\n        icon: 'details',\n        component: SidebarDetails,\n    },\n    {\n        state: SidebarState.Measurements,\n        title: 'Measurements',\n        icon: 'format_shapes',\n        component: SidebarMeasurements,\n    },\n    {\n        state: SidebarState.Image,\n        title: 'Images',\n        icon: 'photo',\n        component: SidebarImage,\n    },\n    {\n        state: SidebarState.Text,\n        title: 'Texts',\n        icon: 'text_fields',\n        component: SidebarText,\n    },\n    {\n        state: SidebarState.Upload,\n        title: 'Upload',\n        icon: 'cloud_upload',\n        component: SidebarUpload,\n    },\n    {\n        state: SidebarState.ImportExport,\n        title: 'Import/Export',\n        icon: 'import_export',\n        component: SidebarImportExport,\n    },\n    // picture_as_pdf\n];\n\nexport class Sidebar extends Component<Props> {\n    handleSidebar = (state: SidebarState) => {\n        const { activeSidebar, dispatch } = this.props;\n        if (activeSidebar === state) {\n            dispatch(cardSetSetSidebarState(null));\n        } else {\n            dispatch(cardSetSetSidebarState(state));\n        }\n    };\n\n    render() {\n        const { activeSidebar } = this.props;\n        return (\n            <div className={style.sidebar}>\n                <div className={style.controls}>\n                    {SIDEBARS.map(sb => (\n                        <i\n                            key={sb.state}\n                            title={sb.title}\n                            className={`material-icons ${activeSidebar === sb.state ? style.active : ''}`}\n                            onClick={() => this.handleSidebar(sb.state)}\n                        >\n                            {sb.icon}\n                        </i>\n                    ))}\n                </div>\n                <div className={`${style.view} ${activeSidebar === null ? style.hidden : ''}`}>\n                    {SIDEBARS.map(sb => (\n                        <sb.component key={sb.state} visible={activeSidebar === sb.state} />\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        activeSidebar: state.cardsets.activeSidebar,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, {}, State>(mapStateToProps)(Sidebar);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport shortid from 'shortid';\n\nimport { ACTIVITY_SELECTING, State } from '../reducers';\nimport { BLEED_WIDTH } from '../constants';\nimport {\n    CardSetType,\n    CardType,\n    CardsCollection,\n    Dispatch,\n    cardSetActiveCardAndPlaceholder,\n    cardSetCreateCard,\n    cardSetRenameRequest,\n} from '../actions';\nimport Card from './Card';\nimport EditableTitle from './EditableTitle';\nimport KawaiiMessage, { Character } from './KawaiiMessage';\nimport Loader from './Loader';\nimport PDFGenerator from './PDFGenerator';\nimport Sidebar from './Sidebar';\nimport style from './CardSet.module.css';\n\ninterface StateProps {\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    isAuthenticated: boolean;\n    cardsAllIds: string[];\n    cardsById: CardsCollection;\n    activity: number;\n    zoom: number;\n    activeCardSet: CardSetType | null;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = StateProps & DispatchProps;\n\ninterface LocalState {\n    pageWidth: number;\n    pageHeight: number;\n    topBottomMargin: number;\n    leftRightMargin: number;\n}\n\nexport class CardSet extends Component<Props, LocalState> {\n    state = {\n        pageWidth: 210,\n        pageHeight: 297,\n        topBottomMargin: 15,\n        leftRightMargin: 9,\n    };\n\n    handleCreateCardClick = () => {\n        const { dispatch } = this.props;\n\n        const newCard: CardType = { id: shortid.generate(), count: 1 };\n\n        dispatch(cardSetCreateCard(newCard));\n    };\n\n    handleClickOutsideOfCard = () => {\n        const { dispatch } = this.props;\n        dispatch(cardSetActiveCardAndPlaceholder(null, false, null));\n    };\n\n    handleCardSetNameChange = (newName: string) => {\n        const { dispatch, activeCardSet } = this.props;\n        if (activeCardSet !== null) {\n            dispatch(cardSetRenameRequest(activeCardSet.id, newName));\n        }\n    };\n\n    render() {\n        const {\n            isAuthenticated,\n            cardsAllIds,\n            cardsById,\n            width,\n            height,\n            isTwoSided,\n            activity,\n            zoom,\n            activeCardSet,\n        } = this.props;\n\n        const widthWithBleeds = width + BLEED_WIDTH * 2;\n        const heightWithBleeds = height + BLEED_WIDTH * 2;\n\n        return (\n            isAuthenticated && (\n                <div>\n                    <KawaiiMessage character={Character.Ghost}>\n                        <p>Here you can design your cards.</p>\n                    </KawaiiMessage>\n\n                    {activeCardSet !== null && (\n                        <EditableTitle title={activeCardSet.name} onChange={this.handleCardSetNameChange} />\n                    )}\n\n                    <div className={style.cardsetview}>\n                        <div className={style.sidebar}>\n                            <Sidebar />\n                        </div>\n                        <div onMouseDown={this.handleClickOutsideOfCard} onTouchStart={this.handleClickOutsideOfCard}>\n                            {(activity & ACTIVITY_SELECTING) === ACTIVITY_SELECTING && <Loader />}\n                            <div className={style.cardset}>\n                                <ul\n                                    style={{\n                                        gridTemplateColumns: `repeat(auto-fill, minmax(${widthWithBleeds *\n                                            zoom}mm, 1fr))`,\n                                    }}\n                                >\n                                    {cardsAllIds &&\n                                        cardsAllIds.map(cardId => [\n                                            <li key={cardId}>\n                                                <Card card={cardsById[cardId]} isBack={false} />\n                                            </li>,\n                                            isTwoSided && (\n                                                <li key={`${cardId}back`}>\n                                                    <Card card={cardsById[cardId]} isBack={true} />\n                                                </li>\n                                            ),\n                                        ])}\n                                    <li key=\"newCard\">\n                                        <div\n                                            id=\"newCard\"\n                                            className={style.createCard}\n                                            style={{\n                                                width: `${widthWithBleeds * zoom}mm`,\n                                                height: `${heightWithBleeds * zoom}mm`,\n                                                position: 'relative',\n                                                overflow: 'hidden',\n                                            }}\n                                            onClick={this.handleCreateCardClick}\n                                        >\n                                            <div>\n                                                <i className=\"material-icons\">add</i>\n                                                <div>Add Card</div>\n                                            </div>\n                                        </div>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n\n                    {activeCardSet !== null && <PDFGenerator type=\"cardsets\" id={activeCardSet.id} />}\n                </div>\n            )\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        activity: state.cardsets.activity,\n        width: state.cardsets.width,\n        height: state.cardsets.height,\n        isTwoSided: state.cardsets.isTwoSided,\n        zoom: state.cardsets.zoom,\n        isAuthenticated: state.auth.isAuthenticated,\n        cardsAllIds: state.cardsets.cardsAllIds,\n        cardsById: state.cardsets.cardsById,\n        activeCardSet:\n            state.cardsets.active && state.cardsets.byId[state.cardsets.active]\n                ? state.cardsets.byId[state.cardsets.active]\n                : null,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, {}, State>(mapStateToProps)(CardSet);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, cardSetSelectRequest } from './actions';\nimport { State } from './reducers';\nimport CardSet from './components/CardSet';\n\ninterface Props {\n    dispatch: Dispatch;\n    match: { params: { id: string } };\n    isAuthenticated: boolean;\n}\n\nexport class CardSetPage extends Component<Props> {\n    componentDidMount() {\n        const { dispatch, match } = this.props;\n        dispatch(cardSetSelectRequest(match.params.id));\n    }\n\n    render() {\n        return <CardSet />;\n    }\n}\n\nconst mapStateToProps = (state: State) => ({ isAuthenticated: state.auth.isAuthenticated });\n\nexport default connect(mapStateToProps)(CardSetPage);\n","import React, { Component } from 'react';\n\nexport default class ChangelogPage extends Component {\n    render() {\n        return (\n            <div>\n                <p>Here you can find list of future plans and what was implemented recently.</p>\n                <h2>Future plans</h2>\n                <ul>\n                    <li>\n                        Image improvements:\n                        <ul>\n                            <li>Generating list of author's of icons if attribution is required.</li>\n                            <li>Various ideas for advanced images controls.</li>\n                        </ul>\n                    </li>\n                    <li>Card templates.</li>\n                    <li>UI improvements (snapping, keyboard support and etc.).</li>\n                    <li>Possibility to order your games for printing from various printing providers.</li>\n                </ul>\n                <h2>2019-04-07</h2>\n                <ul>\n                    <li>Snapping implemented for move, rotation and resize operations.</li>\n                    <li>Image search changes and improvements.</li>\n                    <li>\n                        Drag&Drop support for images. Images can be dropped to text field as well but it is assumed that\n                        dropped images are square when generating PDF.\n                    </li>\n                    <li>Bold and Italic support in text added.</li>\n                    <li>Other minor fixes.</li>\n                </ul>\n                <h2>2019-03-22</h2>\n                <ul>\n                    <li>Two-sided cards.</li>\n                    <li>PDF generation for all the game.</li>\n                    <li>More PDF generation options added</li>\n                    <li>Change color of images (for SVG images only, e.g. try using with \"forms\" images).</li>\n                    <li>Game rename and delete</li>\n                    <li>Card Set rename and delete</li>\n                    <li>Text: line height support</li>\n                    <li>UI/UX improvements</li>\n                </ul>\n                <h2>2019-03-03</h2>\n                <ul>\n                    <li>Data import/export in JSON and CSV formats.</li>\n                    <li>\n                        Named fields. If multiple fields have the same name then by editing one you change value in all\n                        of them. As well named fields look better in data export/import.\n                    </li>\n                </ul>\n\n                <h2>2019-03-02</h2>\n                <ul>\n                    <li>You can upload your own images now. Images are limited.</li>\n                    <li>\n                        Image order support added. E.g.: now you can upload background image and lower it to the bottom.\n                    </li>\n                    <li>Progress indicators and user messages improvements.</li>\n                </ul>\n\n                <h2>2019-02-24</h2>\n                <ul>\n                    <li>Sidebar created for lighter, cleaner and faster UI.</li>\n                    <li>Zoom added to card set for more flexibility while viewing or editing.</li>\n                </ul>\n                <h2>2019-02-23</h2>\n                <ul>\n                    <li>Text rendering changed and should be working properly now.</li>\n                    <li>Crash with new card set fixed.</li>\n                    <li>Minor UI improvements.</li>\n                </ul>\n                <h2>2019-02-17</h2>\n                <p>Initial public version.</p>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\n\ninterface Props {\n    children: React.ReactNode;\n}\n\ninterface State {\n    hasError: boolean;\n}\n\nexport default class ErrorBoundary extends Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    componentDidCatch() {\n        this.setState({ hasError: true });\n        // You can also log the error to an error reporting service\n        // logErrorToMyService(error, info);\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return (\n                <KawaiiMessage character={Character.Browser} mood=\"ko\">\n                    Something unexpected has happened. If you want this problem to be fixed write me to{' '}\n                    <a href=\"mailto:dalius@ffff.lt\">dalius@ffff.lt</a>.\n                </KawaiiMessage>\n            );\n        }\n        return this.props.children;\n    }\n}\n","import React, { Component } from 'react';\nimport style from './ConfirmedDelete.module.css';\n\ninterface Props {\n    question: string;\n    onDelete: () => void;\n}\n\nexport default class ConfirmedDelete extends Component<Props> {\n    state = {\n        deleteClicked: false,\n    };\n\n    handleRemove = () => {\n        this.setState({ deleteClicked: !this.state.deleteClicked });\n    };\n\n    handleYes = () => {\n        this.setState({ deleteClicked: false });\n        this.props.onDelete();\n    };\n\n    handleNo = () => {\n        this.setState({ deleteClicked: false });\n    };\n\n    render() {\n        const { deleteClicked } = this.state;\n        const { question } = this.props;\n\n        return (\n            <>\n                <i title=\"Remove\" className={`material-icons ${style.button}`} onClick={this.handleRemove}>\n                    remove_circle_outline\n                </i>{' '}\n                {deleteClicked && (\n                    <>\n                        {question}{' '}\n                        <span className={style.answer} onClick={this.handleYes}>\n                            Yes\n                        </span>{' '}\n                        /{' '}\n                        <span className={style.answer} onClick={this.handleNo}>\n                            No\n                        </span>\n                    </>\n                )}\n            </>\n        );\n    }\n}\n","import { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport {\n    CardSetsCollection,\n    Dispatch,\n    GameType,\n    IdsArray,\n    cardSetCreateRequest,\n    cardSetDeleteRequest,\n    gameRenameRequest,\n    messageDisplay,\n} from '../actions';\nimport { State } from '../reducers';\nimport ConfirmedDelete from './ConfirmedDelete';\nimport EditableTitle from './EditableTitle';\nimport KawaiiMessage, { Character } from './KawaiiMessage';\nimport PDFGenerator from './PDFGenerator';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated: boolean;\n    activeGame: GameType | null;\n    allIds: IdsArray;\n    byId: CardSetsCollection;\n}\n\ninterface LocalState {\n    cardSetName: string;\n    width: number;\n    height: number;\n}\n\nexport class CardSets extends Component<Props, LocalState> {\n    state: LocalState = {\n        cardSetName: '',\n        width: 63.5,\n        height: 88.9,\n    };\n\n    handleGameNameChange = (newName: string) => {\n        const { dispatch, activeGame } = this.props;\n        if (activeGame !== null) {\n            dispatch(gameRenameRequest(activeGame.id, newName));\n        }\n    };\n\n    handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ cardSetName: event.target.value });\n    };\n\n    handleWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ width: parseFloat(event.target.value) });\n    };\n\n    handleHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ height: parseFloat(event.target.value) });\n    };\n\n    handleCreateCardSetClick = () => {\n        const { dispatch, activeGame } = this.props;\n\n        if (activeGame === null) {\n            return;\n        }\n\n        const cardSetName = this.state.cardSetName.trim();\n\n        if (cardSetName) {\n            dispatch(cardSetCreateRequest(cardSetName, this.state.width, this.state.height, activeGame.id));\n        } else {\n            dispatch(messageDisplay('error', 'Card Set name should be non empty.'));\n        }\n    };\n\n    handleCardSetDelete = (cardSetId: string) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetDeleteRequest(cardSetId));\n    };\n\n    render() {\n        const { isAuthenticated, activeGame, allIds, byId } = this.props;\n\n        const cardsetItems = allIds\n            .map(gameId => byId[gameId])\n            .map(cardset => (\n                <li key={cardset.id}>\n                    <Link to={`/cardset/${cardset.id}`}>{cardset.name}</Link>{' '}\n                    <ConfirmedDelete\n                        question=\"Do you really want to delete this card set?\"\n                        onDelete={() => this.handleCardSetDelete(cardset.id)}\n                    />\n                </li>\n            ));\n\n        return (\n            isAuthenticated &&\n            activeGame !== null && (\n                <div>\n                    <KawaiiMessage character={Character.Ghost}>\n                        Each game is made from card sets. Card set is collection of cards that share the same properties\n                        but have different text and images.\n                    </KawaiiMessage>\n\n                    <EditableTitle title={activeGame.name} onChange={this.handleGameNameChange} />\n\n                    <ul>{cardsetItems}</ul>\n\n                    <div className=\"form\">\n                        <label htmlFor=\"cardset_name\">Card Set name:</label>\n                        <input\n                            id=\"cardset_name\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            className=\"form-control\"\n                            placeholder=\"Card Set name\"\n                        />\n                        <label htmlFor=\"card_width\">Card width:</label>\n                        <input\n                            id=\"card_width\"\n                            type=\"number\"\n                            min=\"0\"\n                            step=\"0.1\"\n                            onChange={this.handleWidthChange}\n                            className=\"form-control\"\n                            placeholder=\"Card width\"\n                            value={this.state.width}\n                        />\n                        <label htmlFor=\"card_height\">Card height:</label>\n                        <input\n                            id=\"card_height\"\n                            type=\"number\"\n                            min=\"0\"\n                            step=\"0.1\"\n                            onChange={this.handleHeightChange}\n                            className=\"form-control\"\n                            placeholder=\"Card height\"\n                            value={this.state.height}\n                        />\n                        <button onClick={this.handleCreateCardSetClick}>Create Card Set</button>\n                    </div>\n\n                    <KawaiiMessage character={Character.Ghost} mood=\"excited\">\n                        Hint: Poker card size 63.5mm x 88.9mm. Bridge card size 56mm x 88.9mm. But you can cards of any\n                        size.\n                    </KawaiiMessage>\n\n                    <PDFGenerator type=\"games\" id={activeGame.id} />\n                </div>\n            )\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        activeGame:\n            state.games.active && state.games.byId[state.games.active] ? state.games.byId[state.games.active] : null,\n        allIds: state.cardsets.allIds,\n        byId: state.cardsets.byId,\n    };\n};\n\nexport default connect(mapStateToProps)(CardSets);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, gameSelectRequest } from './actions';\nimport { State } from './reducers';\nimport CardSets from './components/CardSets';\n\ninterface Props {\n    dispatch: Dispatch;\n    match: { params: { id: string } };\n    isAuthenticated: boolean;\n}\n\nexport class GamePage extends Component<Props> {\n    componentDidMount() {\n        const { dispatch, match } = this.props;\n        dispatch(gameSelectRequest(match.params.id, true));\n    }\n\n    render() {\n        return <CardSets />;\n    }\n}\n\nconst mapStateToProps = (state: State) => ({ isAuthenticated: state.auth.isAuthenticated });\n\nexport default connect(mapStateToProps)(GamePage);\n","import React, { Component } from 'react';\n\ninterface Props {\n    onLogin: (creds: { username: string; password: string }) => void;\n    onLoginFailure: (message: string) => void;\n}\n\ninterface LocalState {\n    username: string;\n    password: string;\n}\n\nexport default class Login extends Component<Props, LocalState> {\n    state = {\n        username: '',\n        password: '',\n    };\n\n    handleUsernameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ username: event.target.value });\n    };\n\n    handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ password: event.target.value });\n    };\n\n    handleSubmit = (event: React.FormEvent) => {\n        const username = this.state.username.trim();\n        const password = this.state.password.trim();\n        if (username && password) {\n            const creds = { username, password };\n            this.props.onLogin(creds);\n        } else {\n            this.props.onLoginFailure('Missing username and/or password.');\n        }\n        event.preventDefault();\n    };\n\n    render() {\n        return (\n            <div>\n                <form className=\"form\" onSubmit={this.handleSubmit}>\n                    <input\n                        type=\"text\"\n                        onChange={this.handleUsernameChange}\n                        className=\"form-control\"\n                        placeholder=\"Username\"\n                    />\n                    <input\n                        type=\"password\"\n                        onChange={this.handlePasswordChange}\n                        className=\"form-control\"\n                        placeholder=\"Password\"\n                    />\n                    <input type=\"submit\" value=\"Login\" />\n                </form>\n            </div>\n        );\n    }\n}\n","import { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, loginRequest, messageDisplay } from './actions';\nimport { State } from './reducers';\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\nimport Login from './components/Login';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated: boolean;\n}\n\nexport class LoginPage extends Component<Props> {\n    render() {\n        const { dispatch, isAuthenticated } = this.props;\n\n        return (\n            <div className=\"App\">\n                {!isAuthenticated && (\n                    <>\n                        <KawaiiMessage character={Character.Ghost}>\n                            Please enter your credentials to login. If you don't have account yet then you can create\n                            one here: <a href=\"/signup\">Sign-up</a>.\n                        </KawaiiMessage>\n\n                        <Login\n                            onLogin={creds => dispatch(loginRequest(creds))}\n                            onLoginFailure={msg => dispatch(messageDisplay('error', msg))}\n                        />\n                    </>\n                )}\n                {isAuthenticated && <Redirect to=\"/\" />}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => ({ isAuthenticated: state.auth.isAuthenticated });\n\nexport default connect(mapStateToProps)(LoginPage);\n","import { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, GamesCollection, IdsArray, gameCreateRequest, gameDeleteRequest, messageDisplay } from '../actions';\nimport { State } from '../reducers';\nimport ConfirmedDelete from './ConfirmedDelete';\nimport KawaiiMessage, { Character } from './KawaiiMessage';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated: boolean;\n    allIds: IdsArray;\n    byId: GamesCollection;\n}\n\ninterface LocalState {\n    gameName: string;\n}\n\nexport class Games extends Component<Props, LocalState> {\n    state: LocalState = {\n        gameName: '',\n    };\n\n    handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ gameName: event.target.value });\n    };\n\n    handleCreateGameClick = () => {\n        const { dispatch } = this.props;\n\n        const gamename = this.state.gameName.trim();\n        if (gamename) {\n            dispatch(gameCreateRequest(gamename));\n        } else {\n            dispatch(messageDisplay('error', 'Game name should be non empty.'));\n        }\n    };\n\n    handleGameDelete = (gameId: string) => {\n        const { dispatch } = this.props;\n        dispatch(gameDeleteRequest(gameId));\n    };\n\n    render() {\n        const { isAuthenticated, allIds, byId } = this.props;\n\n        const gameItems = allIds\n            .map(gameId => byId[gameId])\n            .map(game => (\n                <li key={game.id}>\n                    <Link to={`/game/${game.id}`}>{game.name}</Link>{' '}\n                    <ConfirmedDelete\n                        question=\"Do you really want to delete this game?\"\n                        onDelete={() => this.handleGameDelete(game.id)}\n                    />\n                </li>\n            ));\n\n        return (\n            isAuthenticated && (\n                <div>\n                    <KawaiiMessage character={Character.Ghost}>\n                        {allIds.length === 0 && (\n                            <>Here you can create your games and see list of your games when you have some.</>\n                        )}\n                        {allIds.length > 0 && (\n                            <>Here you can see a list of your games or you can create even more games.</>\n                        )}\n                    </KawaiiMessage>\n\n                    <ul>{gameItems}</ul>\n                    <div className=\"form\">\n                        <label htmlFor=\"game_name\">Game name:</label>\n                        <input\n                            id=\"game_name\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            className=\"form-control\"\n                            placeholder=\"Game name\"\n                        />\n                        <button onClick={this.handleCreateGameClick}>Create Game</button>\n                    </div>\n                </div>\n            )\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        allIds: state.games.allIds,\n        byId: state.games.byId,\n    };\n};\n\nexport default connect(mapStateToProps)(Games);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { State } from './reducers';\nimport Games from './components/Games';\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\n\ninterface Props {\n    isAuthenticated: boolean;\n}\n\nexport class Main extends Component<Props> {\n    render() {\n        if (this.props.isAuthenticated) {\n            return <Games />;\n        } else {\n            return (\n                <KawaiiMessage character={Character.Ghost}>\n                    Hey! Here you can create your own card game but you need to <a href=\"/login\">Login</a> or{' '}\n                    <a href=\"/signup\">Sign-up</a> first.\n                </KawaiiMessage>\n            );\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n    };\n};\n\nexport default connect(mapStateToProps)(Main);\n","import { State } from './reducers';\n\nexport const getActiveGame = (state: State) => (state.games.active ? state.games.byId[state.games.active] : null);\n\nexport const getActiveCardSet = (state: State) =>\n    state.cardsets.active ? state.cardsets.byId[state.cardsets.active] : null;\n","import React from 'react';\n\ninterface Props {\n    onLogout: () => void;\n}\n\nfunction Logout(props: Props) {\n    return (\n        <button onClick={() => props.onLogout()} className=\"btn btn-primary\">\n            Logout\n        </button>\n    );\n}\n\nexport default Logout;\n","import { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { CardSetType, Dispatch, GameType, MessageType, logoutRequest } from '../actions';\nimport { State } from '../reducers';\nimport { getActiveCardSet, getActiveGame } from '../selectors';\nimport Loader from './Loader';\nimport Logout from './Logout';\nimport style from './Navbar.module.css';\n\ninterface OwnProps {\n    isAuthenticated: boolean;\n}\n\ninterface StateProps {\n    messages: MessageType[];\n    activeGame: GameType | null;\n    activeCardSet: CardSetType | null;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nexport class Navbar extends Component<Props> {\n    render() {\n        const { dispatch, isAuthenticated, messages, activeGame, activeCardSet } = this.props;\n\n        return (\n            <nav>\n                <div id=\"messages\" className={style.messages}>\n                    <ul>\n                        {messages.map(m => (\n                            <li key={m.id} className={m.type === 'error' ? style.error : style.info}>\n                                {m.type === 'error' && (\n                                    <>\n                                        <i className=\"material-icons\">error</i> {m.text}\n                                    </>\n                                )}\n                                {m.type === 'info' && (\n                                    <>\n                                        <i className=\"material-icons\">info</i> {m.text}\n                                    </>\n                                )}\n                                {m.type === 'progress' && (\n                                    <>\n                                        <Loader small={true} /> {m.text}\n                                    </>\n                                )}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n                <div>\n                    <h1 className={style.header}>\n                        <Link to=\"/\">CARD-A-MON</Link>\n                    </h1>\n                    <div>\n                        <ul className={style.menu}>\n                            {isAuthenticated && (\n                                <>\n                                    <li>\n                                        <Link to=\"/\">Main</Link>\n                                    </li>\n                                    {activeGame && (\n                                        <li>\n                                            <Link to={`/game/${activeGame.id}`}>Game \"{activeGame.name}\"</Link>\n                                        </li>\n                                    )}\n                                    {activeCardSet && (\n                                        <li>\n                                            <Link to={`/cardset/${activeCardSet.id}`}>\n                                                Card Set \"{activeCardSet.name}\"\n                                            </Link>\n                                        </li>\n                                    )}\n                                </>\n                            )}\n                            <li>\n                                <Link to=\"/changelog\">Changelog</Link>\n                            </li>\n                            <li>\n                                <Link to=\"/about\">About</Link>\n                            </li>\n                            {isAuthenticated && (\n                                <li>\n                                    <Logout onLogout={() => dispatch(logoutRequest())} />\n                                </li>\n                            )}\n                            {!isAuthenticated && (\n                                <>\n                                    <li>\n                                        <Link to=\"/login\">Login</Link>\n                                    </li>\n                                    <li>\n                                        <Link to=\"/signup\">Sign-up</Link>\n                                    </li>\n                                </>\n                            )}\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        messages: state.message.messages,\n        activeGame: getActiveGame(state),\n        activeCardSet: getActiveCardSet(state),\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(Navbar);\n","import React, { Component } from 'react';\n\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\n\nexport default class NotFoundPage extends Component {\n    render() {\n        return (\n            <KawaiiMessage character={Character.Browser} mood=\"sad\">\n                There is nothing here.\n            </KawaiiMessage>\n        );\n    }\n}\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Credentials, Dispatch, messageDisplay } from '../actions';\n\ninterface Props {\n    dispatch: Dispatch;\n    onSignUp: (cred: Credentials) => void;\n}\n\nexport class SignUp extends Component<Props> {\n    state = {\n        username: '',\n        password: '',\n        passwordRepeat: '',\n    };\n\n    handleSubmit(event: React.FormEvent) {\n        const { dispatch, onSignUp } = this.props;\n\n        if (this.state.password !== this.state.passwordRepeat) {\n            dispatch(messageDisplay('error', 'Passwords do not match.'));\n        } else {\n            const creds = {\n                username: this.state.username.trim(),\n                password: this.state.password.trim(),\n            };\n            onSignUp(creds);\n        }\n\n        event.preventDefault();\n    }\n\n    handleUsernameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ username: event.target.value });\n    };\n\n    handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ password: event.target.value });\n    };\n\n    handlePasswordRepeatChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ passwordRepeat: event.target.value });\n    };\n\n    render() {\n        return (\n            <div>\n                <form className=\"form\" onSubmit={event => this.handleSubmit(event)}>\n                    <input\n                        type=\"text\"\n                        onChange={this.handleUsernameChange}\n                        className=\"form-control\"\n                        placeholder=\"Username\"\n                    />\n                    <input\n                        type=\"password\"\n                        onChange={this.handlePasswordChange}\n                        className=\"form-control\"\n                        placeholder=\"Password\"\n                    />\n                    <input\n                        type=\"password\"\n                        onChange={this.handlePasswordRepeatChange}\n                        className=\"form-control\"\n                        placeholder=\"Repeat password here\"\n                    />\n                    <input type=\"submit\" value=\"Sign Up\" />\n                </form>\n            </div>\n        );\n    }\n}\nexport default connect()(SignUp);\n","import { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, signupRequest } from './actions';\nimport { State } from './reducers';\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\nimport SignUp from './components/SignUp';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated: boolean;\n}\n\nexport class SignUpPage extends Component<Props> {\n    render() {\n        const { dispatch, isAuthenticated } = this.props;\n\n        return (\n            <div className=\"App\">\n                {!isAuthenticated && (\n                    <>\n                        <KawaiiMessage character={Character.Ghost}>\n                            Create your user here. Instead of user name you can use your e-mail. If you forget your\n                            password then you can send me e-mail (I will not send you any e-mails without your consent).\n                            If you use regular user name and forget your password then you will not be able to access\n                            your account.\n                        </KawaiiMessage>\n\n                        <SignUp onSignUp={creds => dispatch(signupRequest(creds))} />\n                    </>\n                )}\n                {isAuthenticated && <Redirect to=\"/\" />}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => ({ isAuthenticated: state.auth.isAuthenticated });\n\nexport default connect(mapStateToProps)(SignUpPage);\n","import './App.css';\n\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, initRequest } from './actions';\nimport { State } from './reducers';\nimport AboutPage from './AboutPage';\nimport CardSetPage from './CardSetPage';\nimport ChangelogPage from './ChangelogPage';\nimport ErrorBoundry from './ErrorBoundry';\nimport GamePage from './GamePage';\nimport LoginPage from './LoginPage';\nimport Main from './Main';\nimport Navbar from './components/Navbar';\nimport NotFoundPage from './NotFoundPage';\nimport SignUpPage from './SignUpPage';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated: boolean;\n}\n\nexport class App extends Component<Props> {\n    componentDidMount() {\n        this.props.dispatch(initRequest());\n    }\n\n    render() {\n        const { isAuthenticated } = this.props;\n        return (\n            <Router>\n                <div className=\"App\">\n                    <ErrorBoundry>\n                        <Navbar isAuthenticated={isAuthenticated} />\n                        <Switch>\n                            <Route exact path=\"/\" component={Main} />\n                            <Route exact path=\"/login\" component={LoginPage} />\n                            <Route exact path=\"/signup\" component={SignUpPage} />\n                            <Route exact path=\"/game/:id\" component={GamePage} />\n                            <Route exact path=\"/cardset/:id\" component={CardSetPage} />\n                            <Route exact path=\"/changelog\" component={ChangelogPage} />\n                            <Route exact path=\"/about\" component={AboutPage} />\n                            <Route component={NotFoundPage} />\n                        </Switch>\n                        <div className=\"App-footer\">Dalius Dobravolskas &copy; {new Date().getFullYear()}</div>\n                    </ErrorBoundry>\n                </div>\n            </Router>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    const { auth } = state;\n    const { isAuthenticated } = auth;\n\n    return {\n        isAuthenticated,\n    };\n};\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ninterface Config {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import './index.css';\n\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { createAppStore } from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createAppStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { rootSaga } from './sagas';\nimport reducers from './reducers';\n\nexport function createAppStore() {\n    const sagaMiddleware = createSagaMiddleware();\n    const store = createStore(\n        reducers,\n        // @ts-ignore: __REDUX_DEVTOOLS_EXTENSION__ does not exists on window\n        window.__REDUX_DEVTOOLS_EXTENSION__\n            ? compose(\n                  applyMiddleware(sagaMiddleware),\n                  // @ts-ignore: __REDUX_DEVTOOLS_EXTENSION__ does not exists on window\n                  window.__REDUX_DEVTOOLS_EXTENSION__(),\n              )\n            : applyMiddleware(sagaMiddleware),\n    );\n    sagaMiddleware.run(rootSaga);\n    return store;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldcontroller\":\"FieldController_fieldcontroller__3ifWc\",\"fieldcontrolleractiveplaceholder\":\"FieldController_fieldcontrolleractiveplaceholder__3XZOP\",\"fieldcontrolleractive\":\"FieldController_fieldcontrolleractive__3fSLl\",\"controller\":\"FieldController_controller__VCesw\",\"touchactivated\":\"FieldController_touchactivated__16s2w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__3wMPS\",\"controls\":\"Sidebar_controls__3VVbM\",\"active\":\"Sidebar_active__4ldTH\",\"view\":\"Sidebar_view__-0BeZ\",\"hidden\":\"Sidebar_hidden__3xh5q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Navbar_header__FZp4U\",\"menu\":\"Navbar_menu__1JWvN\",\"messages\":\"Navbar_messages__h_dLG\",\"error\":\"Navbar_error__3urZl\",\"info\":\"Navbar_info__1h4Zc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fixed\":\"Loader_fixed__3q8O9\",\"relative\":\"Loader_relative__1lapZ\",\"loader\":\"Loader_loader__1ZCGC\",\"small\":\"Loader_small__3TZen\",\"loader-small\":\"Loader_loader-small__3PPAu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarDetails_view__29V31\",\"disabled\":\"SidebarDetails_disabled__1htJF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardset\":\"CardSet_cardset__21qjI\",\"cardsetview\":\"CardSet_cardsetview__1rqd1\",\"sidebar\":\"CardSet_sidebar__3y8_T\",\"createCard\":\"CardSet_createCard__2bOiw\"};","module.exports = __webpack_public_path__ + \"static/media/resize.0548e063.svg\";","module.exports = __webpack_public_path__ + \"static/media/rotate.470ffe2e.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1Ltkv\",\"title\":\"Card_title__1KiIj\",\"active\":\"Card_active__XOmoJ\",\"disabled\":\"Card_disabled__2Ob5l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarImage_view__2LKQM\",\"disabled\":\"SidebarImage_disabled__1tNhN\",\"images\":\"SidebarImage_images__3zDK2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ConfirmedDelete_button__1o8h4\",\"answer\":\"ConfirmedDelete_answer__1OsVc\"};"],"sourceRoot":""}