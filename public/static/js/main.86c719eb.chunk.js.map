{"version":3,"sources":["components/SidebarImage.module.css","components/ConfirmedDelete.module.css","components/EditableTitle.module.css","components/FontSelector.module.css","components/SidebarText.module.css","components/image.svg","components/ImageField.module.css","components/ContentEditable.module.css","components/text.svg","components/SidebarGeneratePng.module.css","components/SidebarGeneratePdf.module.css","components/SidebarMeasurements.module.css","components/SidebarSettings.module.css","components/SidebarUpload.module.css","components/CardSets.module.css","components/FieldController.module.css","actions.ts","constants.ts","requests.ts","utils.ts","types.ts","workerController.ts","storage.ts","fontLoader.tsx","sagas.ts","reducers.ts","components/KawaiiMessage.tsx","AboutPage.tsx","components/FieldController.tsx","components/ImageField.tsx","components/ContentEditable.tsx","components/TextField.tsx","components/Card.tsx","components/EditableTitle.tsx","components/Loader.tsx","components/SidebarDetails.tsx","components/SidebarGeneratePng.tsx","components/PDFGenerator.tsx","components/SidebarGeneratePdf.tsx","components/ColorButton.tsx","components/SidebarImage.tsx","components/SidebarImportExport.tsx","components/SidebarMeasurements.tsx","components/SidebarSettings.tsx","components/FontSelector.tsx","components/SidebarText.tsx","components/SidebarUpload.tsx","components/Sidebar.tsx","components/CardSet.tsx","CardSetPage.tsx","ChangelogPage.tsx","ErrorBoundry.tsx","components/ConfirmedDelete.tsx","components/CardSets.tsx","GamePage.tsx","components/Login.tsx","LoginPage.tsx","components/Games.tsx","Main.tsx","selectors.ts","components/Logout.tsx","components/Navbar.tsx","NotFoundPage.tsx","components/SignUp.tsx","SignUpPage.tsx","App.tsx","serviceWorker.ts","index.tsx","store.ts","components/Sidebar.module.css","components/Navbar.module.css","components/Loader.module.css","components/SidebarDetails.module.css","components/CardSet.module.css","components/pan.svg","components/zoom.svg","components/resize.svg","components/rotate.svg","components/Card.module.css"],"names":["module","exports","view","disabled","images","button","answer","input","fontFamily","fontVariant","__webpack_require__","p","over","content","cardsets","fieldcontroller","fieldcontrolleractivefield","fieldcontrolleractive","controller","touchactivated","SidebarState","CURRENT_CARDSET_VERSION","DEFAULT_FONT_SIZE","DEFAULT_LINE_HEIGHT","BLEED_WIDTH","INIT_REQUEST","MESSAGE_DISPLAY","MESSAGE_HIDE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_REQUEST","LOGOUT_FAILURE","LOGOUT_SUCCESS","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_FAILURE","GAME_CREATE_REQUEST","GAME_CREATE_SUCCESS","GAME_DELETE_REQUEST","GAME_RENAME_REQUEST","GAME_LIST_SUCCESS","GAME_LIST_REQUEST","GAME_LIST_FAILURE","GAME_LIST_RESET","GAME_SELECT_REQUEST","GAME_SELECT_SUCCESS","GAME_SELECT_FAILURE","GAME_CREATE_PDF_REQUEST","GAME_CREATE_PDF_SUCCESS","GAME_CREATE_PDF_FAILURE","GAME_CREATE_PNG_REQUEST","GAME_CREATE_PNG_SUCCESS","GAME_CREATE_PNG_FAILURE","CARDSETS_SELECT_SUCCESS","CARDSET_CREATE_REQUEST","CARDSET_CREATE_SUCCESS","CARDSET_CREATE_FAILURE","CARDSET_DELETE_REQUEST","CARDSET_RENAME_REQUEST","CARDSET_IMPORT_DATA","CARDSET_LIST_SUCCESS","CARDSET_LIST_RESET","CARDSET_SELECT_REQUEST","CARDSET_SELECT_SUCCESS","CARDSET_CREATE_CARD","CARDSET_CLONE_CARD","CARDSET_REMOVE_CARD","CARDSET_UPDATE_CARD_COUNT","CARDSET_ADD_TEXT_FIELD","CARDSET_ADD_IMAGE_FIELD","CARDSET_CHANGE_ACTIVE_FIELD_NAME","CARDSET_REMOVE_ACTIVE_FIELD","CARDSET_RAISE_ACTIVE_FIELD_TO_TOP","CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM","CARDSET_LOCK_ACTIVE_FIELD","CARDSET_UNLOCK_ACTIVE_FIELD","CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD","CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD","CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD","CARDSET_CHANGE_WIDTH","CARDSET_CHANGE_HEIGHT","CARDSET_CHANGE_IS_TWO_SIDED","CARDSET_CHANGE_SNAPPING_DISTANCE","CARDSET_CHANGE_FIELD_POSITION","CARDSET_CHANGE_FIELD_PAN","CARDSET_CHANGE_FIELD_ZOOM","CARDSET_CHANGE_FIELD_SIZE","CARDSET_CHANGE_FIELD_ANGLE","CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN","CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR","CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY","CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT","CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT","CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE","CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT","CARDSET_CHANGE_TEXT","CARDSET_CHANGE_IMAGE","CARDSET_CHANGE_IMAGE_BASE64","CARDSET_SET_ACTIVE_CARD_AND_FIELD","CARDSET_SELECT_FAILURE","CARDSET_SET_SIDEBAR_STATE","CARDSET_SET_ZOOM","CARDSET_UPLOAD_IMAGE","CARDSET_UPLOAD_IMAGE_SUCCESS","CARDSET_UPLOAD_IMAGE_FAILURE","CARDSET_DELETE_IMAGE","CARDSET_UNDO","CARDSET_REDO","IMAGE_LIST_REQUEST","IMAGE_LIST_SUCCESS","IMAGE_LIST_FAILURE","messageDisplay","type","text","id","message","shortid","generate","gameCreateRequest","gamename","gameDeleteRequest","gameId","gameRenameRequest","newName","gameSelectRequest","updateCardSets","gameCreatePdfRequest","collectionType","collectionId","pageWidth","pageHeight","topBottomMargin","leftRightMargin","verticalSpace","horizontalSpace","includeBleedingArea","cutMarksForScissors","cutMarksForGuillotine","cutMarksInMarginArea","cutMarksOnFrontSideOnly","gameCreatePngRequest","dpi","cardSetCreateRequest","cardsetname","width","height","cardSetDeleteRequest","cardSetId","cardSetRenameRequest","cardSetImportData","data","cardSetCreateCard","card","cardSetCloneCard","cardSetRemoveCard","cardSetUpdateCardCount","count","cardSetAddTextField","cardSetAddImageField","cardSetChangeActiveFieldName","name","cardSetRemoveActiveField","cardSetRaiseActiveFieldToTop","cardSetLowerActiveFieldToBottom","cardSetLockActiveField","cardSetUnlockActiveField","cardSetChangeFitForActiveField","fit","cardSetChangeCropForActiveField","crop","cardSetChangeUnclickableForActiveField","unclickable","cardSetChangeWidth","maintainAspectRatio","resizeContent","cardSetChangeHeight","cardSetChangeIsTwoSided","isTwoSided","cardSetChangeSnappingDistance","snappingDistance","cardSetChangeFieldPosition","cardId","fieldId","x","y","group","cardSetChangeFieldPan","cx","cy","cardSetChangeFieldZoom","zoom","cardSetChangeFieldSize","cardSetChangeFieldAngle","angle","cardSetChangeActiveTextFieldAlign","align","cardSetChangeActiveTextFieldColor","color","cardSetChangeActiveTextFieldFontVariant","cardSetChangeActiveTextFieldFontFamilyAndVariant","cardSetChangeActiveTextFieldFontSize","fontSize","cardSetChangeActiveTextFieldLineHeight","lineHeight","cardSetChangeText","textInfo","cardSetChangeImage","imageInfo","cardSetChangeImageBase64","base64","cardSetActiveCardAndField","isBackActive","cardSetSetSidebarState","sidebarState","cardSetSetZoom","cardSetUploadImage","file","load","error","progress","abort","cancelToken","cardSetDeleteImage","imageId","cardSetUndo","cardSetRedo","imageListRequest","filter","location","handleAxiosError","response","Error","request","console","log","getTokens","creds","axios","post","then","resp","catch","refreshToken","refreshTokenValue","config","headers","Authorization","concat","accessToken","deleteAccessToken","token","delete","status","deleteRefreshToken","registerUser","getRequest","url","get","postRequest","postRequestFormDataCancelable","progressCallback","cancelCallback","Content-Type","onUploadProgress","isCancel","putRequest","put","deleteRequest","downloadBlob","blobURL","filename","resolve","tempLink","document","createElement","style","display","href","setAttribute","download","body","appendChild","click","removeChild","setTimeout","window","URL","revokeObjectURL","rotateVec","a","sinA","Math","sin","cosA","cos","rx","ry","calculateImageDimensions","imageFieldInfo","calculatedImageWidth","calculatedImageHeight","imageWidth","imageHeight","reportError","ImageType","generatePdfUsingWorker","Worker","Promise","reject","worker","addEventListener","event","stack","postMessage","e","loadImage","img","Image","onload","onerror","src","prepareImageToDrawSpace","context","imageToDraw","ptpmm","save","translate","rotate","ax","ay","rect","clip","fixWidthAndHeightInSvg","doc","XmlDocument","attr","viewBox","split","btoa","toString","compressed","PNGGenerator","_this","this","Object","classCallCheck","tasksQueue","push","cardSetData","cardIdx","isBack","cardsetFolder","offscreenCanvas","calculatedWidth","round","calculatedHeight","getContext","fillStyle","fillRect","stopped","length","task","shift","SVG_PATH","scale","Path2D","fill","restore","IMAGE","SVG","undefined","dim","image","svgData","atob","drawImage","BLOCK_START","BLOCK_END","subType","delay","dataUrl","toDataURL","slice","padStart","zip","cardsetsList","cardsetInfo","generateCardset","cardsetId","JSON","parse","folder","cardsAllIds","entries","generateCard","generatePngUsingWorker","_ref4","asyncToGenerator","regenerator_default","mark","_callee4","pngGenerator","blob","wrap","_context4","prev","next","JSZip","generateGame","generateAsync","sent","createObjectURL","stop","_x15","_x16","_x17","_x18","apply","arguments","saveTokens","localStorage","setItem","saveAccessToken","cleanTokens","removeItem","getTokenFromStorage","getItem","getRefreshTokenFromStorage","loadFontsUsedInPlaceholders","fontsToLoad","Set","add","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","fieldsAllIds","Symbol","iterator","done","value","field","fields","fontToLoad","err","return","WebFont","objectSpread","active","inactive","webFontsLoadPromise","google","families","toConsumableArray","Array","from","putError","putInfo","putProgress","hideProgress","handleMessageDisplay","getToken","handleLoginRequest","handleLoginSuccess","logoutToken","logoutRefreshToken","handleLogoutRequest","handleSignupRequest","handleInitRequest","authorizedGetRequest","authorizedPostRequest","authorizedDeleteRequest","authorizedPostFormDataRequest","authorizedPutRequest","handleGameCreateRequest","handleGameDeleteRequest","handleGameRenameRequest","handleGameListRequest","handleGameSelectRequest","handleGameCreatePdfRequest","handleGameCreatePngRequest","handleCardSetCreateRequest","handleCardSetDeleteRequest","handleCardSetRenameRequest","handleCardSetSelectRequest","handleCardSetUploadImage","handleCardSetDeleteImage","handleCardSetFitChange","handleCardSetChangeImage","handleCardSetChange","handleImageListRequest","rootSaga","_context","call","_marked","_context2","_marked2","_context3","abrupt","_marked3","messageId","_marked4","action","_context5","_marked5","validateToken","jwtDecode","exp","Date","getTime","withErrorIfMissing","getFreshToken","newToken","_args6","_context6","_marked6","_context7","t0","_marked7","_context8","_marked8","_context9","_marked9","_context10","_marked10","_context11","_marked11","_context12","_marked12","_context13","_marked13","_context14","_marked14","_context15","_marked15","_context16","_marked16","_context17","_marked17","_context18","_marked18","_context19","_marked19","_context20","_marked20","_context21","_marked21","allIds","byId","_context22","games","map","g","reduce","obj","_marked22","_context23","_marked23","progressId","_context24","_marked24","_context25","_marked25","_context26","stringify","version","_marked26","state","_context27","select","_marked27","_context28","_marked28","loadImageInfo","naturalWidth","naturalHeight","processData","_x","_processData","_callee","processedData","plId","placeholder","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","_placeholder","_cardId","_fieldId","fieldInfo","info","_context37","placeholdersAllIds","keys","placeholders","global","texts","finish","t1","cardsById","t2","t3","t4","t5","parsedData","_context29","ActionCreators","clearHistory","_marked29","formData","_context30","FormData","set","append","lengthComputable","loaded","total","_marked30","_context31","_marked31","adjustSvg","preserveAspectRatio","walkChildren","node","children","child","imageResp","svg","_svg","_context32","cardset","present","activeFieldId","_marked32","cardFields","_svg2","_context33","_marked33","closeHandler","preventDefault","returnValue","allowWindowClose","removeEventListener","_context34","_marked34","game","_context35","encodeURIComponent","_marked35","_context36","all","takeEvery","takeLatest","_marked36","ACTIVITY_SELECTING","ACTIVITY_CREATING_PDF","ACTIVITY_CREATING_PNG","DefaultMessageState","messages","DefaultAuthState","isAuthenticated","user","DefaultSignUpState","signingup","DefaultGameState","activity","DefaultCardSetsState","DefaultCardSetState","activeCardId","textSettings","activeSidebar","DefaultImageState","resizeFields","widthRatio","heightRatio","newFields","undoableCardset","undoable","assign","defineProperty","newCard","index","indexOf","isOnBack","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","fieldIndex","splice","locked","unshift","cardsToFix","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","fitImageWidth","fitImageHeight","min","max","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","oldZoom","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","nx","ny","_rotateVec","ratio","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","testFieldInfo","Measurements","Details","Text","ignoreInitialState","undoType","redoType","groupBy","startsWith","reducers","combineReducers","find","m","auth","username","signup","Character","AboutPage","react_default","Component","FieldController","props","possibleConstructorReturn","getPrototypeOf","cDiv","panDiv","zoomDiv","resizeDiv","rotateDiv","originalBodyCursor","handleBrowserDragStart","stopPropagation","handleMouseDown","handleDragStart","handleMouseMove","handleMouseUp","handleTouchStart","changedTouches","handleTouchMove","passive","handleTouchEnd","co","current","cursor","setState","startX","clientX","startY","clientY","handleDragMove","ctrlKey","disableSnapping","_this$props","isLocked","_this$props2","ppmm","onDrag","handleComplete","isTouchEvent","_this$props3","activatedUsingTouch","handlePanMouseDown","handlePanStart","handlePanMouseMove","handlePanMouseUp","handlePanTouchStart","handlePanTouchMove","handlePanTouchEnd","panIcon","handlePanMove","_this$props4","onPan","newCx","newCy","handlePanComplete","_this$props5","handleZoomMouseDown","handleZoomStart","handleZoomMouseMove","handleZoomMouseUp","handleZoomTouchStart","handleZoomTouchMove","handleZoomTouchEnd","zoomIcon","handleZoomMove","_this$props6","onZoom","dx","dy","z","abs","newZoom","handleZoomComplete","handleResizeMouseDown","handleResizeStart","handleResizeMouseMove","handleResizeMouseUp","handleResizeTouchStart","handleResizeTouchMove","handleResizeTouchEnd","resizeIcon","handleResizeMove","_this$props7","onResize","_rotateVec2","newWidth","newHeight","handleResizeComplete","_this$props8","handleRotateMouseDown","handleRotateStart","handleRotateMouseMove","handleRotateMouseUp","handleRotateTouchStart","handleRotateTouchMove","handleRotateTouchEnd","_this$props9","rotateIcon","getBoundingClientRect","left","clientWidth","top","clientHeight","originalAngle","atan2","handleRotateMove","_this$props10","onRotate","_this$state","newAngle","PI","handleRotateComplete","React","createRef","_this$props11","isActive","isActiveField","isUnclickable","ref","onDragStart","className","position","transform","pointerEvents","alt","right","bottom","connect","ImageField","handleDrag","cardOnly","dispatch","handlePan","handleZoom","handleResize","handleRotate","wasMoved","handleDragOver","dragIsOver","handleDragLeave","handleDrop","dataTransfer","getData","imagefilesPos","ii","substr","imageUrl","cardWidth","cardHeight","components_FieldController","overflow","onMouseDown","onTouchStart","onMouseMove","onTouchMove","onMouseUp","onTouchEnd","onDragOver","onDragLeave","onDrop","opacity","emptyImageImage","PureComponent","ContentEditable","editDiv","currentText","currentAlign","currentColor","currentFontFamily","currentFontVariant","currentFontSize","currentLineHeight","timeout","handleStart","handleMove","focus","onFocus","textValue","range","createRange","selectNodeContents","collapse","selection","getSelection","removeAllRanges","addRange","updateContent","timeoutInMiliseconds","innerHTML","imgUrlIdx","clearTimeout","handleBlur","handleInput","nextProps","isItalic","fontWeight","parseInt","contentEditable","onBlur","onInput","textAlign","DEFAULT_FONT","fontStyle","outline","overflowWrap","dangerouslySetInnerHTML","__html","TextField","textFieldInfo","zIndex","emptyTextImage","components_ContentEditable","Card","dimensions","handleFieldDeselect","target","getAttribute","_this2","fieldsIds","isActiveCard","widthWithBleeds","heightWithBleeds","index_esm","client","contentRect","_ref","measureRef","components_ImageField","key","components_TextField","border","borderRadius","title","EditableTitle","titleIsEdited","handleClick","handleChange","onChange","Fragment","onClick","autoFocus","KawaiiMessage","character","mood","marginTop","marginBottom","padding","backgroundColor","grid","Ghost","size","Browser","marginLeft","Loader","fixed","small","loader","relative","SidebarDetails","_Component","_getPrototypeOf2","_len","args","_key","handleCloneCardClick","activeCard","handleRemoveCardClick","handleCountChange","inherits","createClass","visible","SidebarGeneratePng","handleDpiChange","handleGenerate","activeCardset","isCreatingPng","htmlFor","step","PDFGenerator","handleGeneratePdfClick","handlePageWidthChange","parseFloat","handlePageHeightChange","handleTopBottomMarginChange","handleLeftRightMarginChange","handleVerticalSpaceChange","handleHorizontalSpaceChange","handleIncludeBleedingAreaChange","checked","handleCutMarksForScissors","handleCutMarksForGuillotine","handleCutMarksInMarginArea","handleCutMarksOnFrontSideOnly","isCreatingPdf","withHelp","KawaiiMessage_KawaiiMessage","SidebarGeneratePdf","activeCardSetId","components_PDFGenerator","ColorButton","displayColorPicker","handleClose","react_color_lib","disableAlpha","SidebarImage","applyToAllCards","handleAddImageClick","changeImage","activeFieldInfo","handleRemoveImageFromFieldClick","handleRemoveClick","handleNameChange","trim","handleFilterChange","handleImageSelect","imageName","handleRaiseToTop","handleLowerToBottom","handleLockField","handleUnlockField","handleFitOptionChange","handleOptionChange","handleColorChange","hex","handleRemoveColorClick","handleApplyToAllCardChange","handleChangeCrop","ColorButton_ColorButton","im","data-width","data-height","registerPlugin","FilePondPluginFileValidateType","SidebarImportExport","prepareImagePaths","activeGame","ending","md5","preparedImages","fieldsByCard","endsWith","replace","handleExportJson","json","Blob","handleExportCsv","preparedFields","csvData","header","usedNames","dataRow","written","fieldIndo","csv","Papa","unparse","handleProcess","fieldName","metadata","reader","FileReader","readAsText","result","isGlobal","newCardsAllIds","newCardsById","row","handleRevert","uniqueFileId","react_filepond","server","process","revert","acceptedFileTypes","SidebarMeasurements","handlePrevField","activeField","prevField","idx","handleNextField","nextField","handleWidthChange","handleHeightChange","handleXChange","handleYChange","handleAngleChange","_this$props12","handleChangeUnclickable","_this$props13","_this$props14","SidebarSettings","_this$state2","handleIsTwoSidedChange","handleSnappingDistance","_this$state3","options","webfonts","sort","fi","label","FontSelector","getFontStringForLoad","family","variant","stringForLoad","selectedOption","activeFontVariant","wf","handleFontVariantChange","activeFont","handleFontSizeChange","handleLineHeightChange","selectedFontFamily","f","fontVariantOptions","fv","selectedFontVariant","activeFontSize","react_select_esm","activeLineHeight","SidebarText","handleAddTextClick","handleSetTextAlignLeft","getRangeAt","rangeCount","collapsed","execCommand","handleSetTextAlignCenter","handleSetTextAlignRight","handleSetTextBold","handleSetTextItalic","components_FontSelector","FilePondPluginFileValidateSize","SidebarUpload","source","CancelToken","cancel","allowMultiple","allowFileSizeValidation","maxFileSize","SIDEBARS","Settings","icon","component","Upload","ImportExport","Png","Pdf","Sidebar","handleSidebar","sidebar","controls","sb","hidden","CardSet","keyDown","shiftKey","handleCreateCardClick","handleClickOutsideOfCard","handleCardSetNameChange","activeCardSet","EditableTitle_EditableTitle","cardsetview","components_Sidebar","Loader_Loader","gridTemplateColumns","components_Card","createCard","CardSetPage","match","params","components_CardSet","ChangelogPage","evt","ErrorBoundary","hasError","ConfirmedDelete","deleteClicked","handleRemove","handleYes","onDelete","handleNo","question","CardSets","cardSetName","handleGameNameChange","handleCreateCardSetClick","handleCardSetDelete","b","cardsetItems","Link","to","ConfirmedDelete_ConfirmedDelete","GamePage","components_CardSets","Login","password","handleUsernameChange","handlePasswordChange","handleSubmit","onLogin","onLoginFailure","onSubmit","LoginPage","Login_Login","loginRequest","msg","Redirect","Games","gameName","handleCreateGameClick","handleGameDelete","gameItems","Main","components_Games","getActiveGame","getActiveCardSet","Logout","onLogout","Navbar","menu","components_Logout","NotFoundPage","SignUp","passwordRepeat","handlePasswordRepeatChange","onSignUp","SignUpPage","components_SignUp","signupRequest","App","BrowserRouter","ErrorBoundry_ErrorBoundary","components_Navbar","Switch","Route","exact","path","getFullYear","Boolean","hostname","store","sagaMiddleware","createSagaMiddleware","createStore","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","run","createAppStore","ReactDOM","render","es","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister","loader-small"],"mappings":"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","file":"static/js/main.86c719eb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarImage_view__2LKQM\",\"disabled\":\"SidebarImage_disabled__1tNhN\",\"images\":\"SidebarImage_images__3zDK2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ConfirmedDelete_button__1o8h4\",\"answer\":\"ConfirmedDelete_answer__1OsVc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"EditableTitle_input__2Y_6m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fontFamily\":\"FontSelector_fontFamily__zlBcJ\",\"fontVariant\":\"FontSelector_fontVariant__2pA4n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarText_view__3s9r0\",\"disabled\":\"SidebarText_disabled__3efIG\"};","module.exports = __webpack_public_path__ + \"static/media/image.60f0926c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"over\":\"ImageField_over__3Q9AT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ContentEditable_content__1p7up\"};","module.exports = __webpack_public_path__ + \"static/media/text.f7f9443c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarGeneratePng_view__1_3fy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarGeneratePdf_view__10OR4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarMeasurements_view__3BCmn\",\"disabled\":\"SidebarMeasurements_disabled__2Rrd2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarSettings_view__DwnQN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarUpload_view__k69sP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardsets\":\"CardSets_cardsets__mQSav\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldcontroller\":\"FieldController_fieldcontroller__3ifWc\",\"fieldcontrolleractivefield\":\"FieldController_fieldcontrolleractivefield__9anIa\",\"fieldcontrolleractive\":\"FieldController_fieldcontrolleractive__3fSLl\",\"controller\":\"FieldController_controller__VCesw\",\"touchactivated\":\"FieldController_touchactivated__16s2w\"};","import { CancelToken } from 'axios';\nimport { Dispatch as ReduxDispatch } from 'redux';\nimport shortid from 'shortid';\n\nimport {\n    CardSetsCollection,\n    CardType,\n    CardsCollection,\n    Credentials,\n    GamesCollection,\n    IdsArray,\n    ImageArray,\n    ImageInfo,\n    MessageType,\n    PlaceholdersCollection,\n    PlaceholdersImageInfoByCardCollection,\n    PlaceholdersTextInfoByCardCollection,\n    TextInfo,\n    FieldInfoByCardCollection,\n} from './types';\n\nexport const INIT_REQUEST = 'INIT_REQUEST';\nexport const MESSAGE_DISPLAY = 'MESSAGE_DISPLAY';\nexport const MESSAGE_HIDE = 'MESSAGE_HIDE';\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\nexport const LOGOUT_FAILURE = 'LOGOUT_FAILURE';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const SIGNUP_REQUEST = 'SIGNUP_REQUEST';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAILURE = 'SIGNUP_FAILURE';\nexport const GAME_CREATE_REQUEST = 'GAME_CREATE_REQUEST';\nexport const GAME_CREATE_SUCCESS = 'GAME_CREATE_SUCCESS';\nexport const GAME_DELETE_REQUEST = 'GAME_DELETE_REQUEST';\nexport const GAME_RENAME_REQUEST = 'GAME_RENAME_REQUEST';\nexport const GAME_LIST_SUCCESS = 'GAME_LIST_SUCCESS';\nexport const GAME_LIST_REQUEST = 'GAME_LIST_REQUEST';\nexport const GAME_LIST_FAILURE = 'GAME_LIST_FAILURE';\nexport const GAME_LIST_RESET = 'GAME_LIST_RESET';\nexport const GAME_SELECT_REQUEST = 'GAME_SELECT_REQUEST';\nexport const GAME_SELECT_SUCCESS = 'GAME_SELECT_SUCCESS';\nexport const GAME_SELECT_FAILURE = 'GAME_SELECT_FAILURE';\nexport const GAME_CREATE_PDF_REQUEST = 'GAME_CREATE_PDF_REQUEST';\nexport const GAME_CREATE_PDF_SUCCESS = 'GAME_CREATE_PDF_SUCCESS';\nexport const GAME_CREATE_PDF_FAILURE = 'GAME_CREATE_PDF_FAILURE';\nexport const GAME_CREATE_PNG_REQUEST = 'GAME_CREATE_PNG_REQUEST';\nexport const GAME_CREATE_PNG_SUCCESS = 'GAME_CREATE_PNG_SUCCESS';\nexport const GAME_CREATE_PNG_FAILURE = 'GAME_CREATE_PNG_FAILURE';\nexport const CARDSETS_SELECT_SUCCESS = 'CARDSETS_SELECT_SUCCESS';\nexport const CARDSET_CREATE_REQUEST = 'CARDSET_CREATE_REQUEST';\nexport const CARDSET_CREATE_SUCCESS = 'CARDSET_CREATE_SUCCESS';\nexport const CARDSET_CREATE_FAILURE = 'CARDSET_CREATE_FAILURE';\nexport const CARDSET_DELETE_REQUEST = 'CARDSET_DELETE_REQUEST';\nexport const CARDSET_RENAME_REQUEST = 'CARDSET_RENAME_REQUEST';\nexport const CARDSET_IMPORT_DATA = 'CARDSET_IMPORT_DATA';\nexport const CARDSET_LIST_SUCCESS = 'CARDSET_LIST_SUCCESS';\nexport const CARDSET_LIST_REQUEST = 'CARDSET_LIST_REQUEST';\nexport const CARDSET_LIST_FAILURE = 'CARDSET_LIST_FAILURE';\nexport const CARDSET_LIST_RESET = 'CARDSET_LIST_RESET';\nexport const CARDSET_SELECT_REQUEST = 'CARDSET_SELECT_REQUEST';\nexport const CARDSET_SELECT_SUCCESS = 'CARDSET_SELECT_SUCCESS';\nexport const CARDSET_CREATE_CARD = 'CARDSET_CREATE_CARD';\nexport const CARDSET_CLONE_CARD = 'CARDSET_CLONE_CARD';\nexport const CARDSET_REMOVE_CARD = 'CARDSET_REMOVE_CARD';\nexport const CARDSET_UPDATE_CARD_COUNT = 'CARDSET_UPDATE_CARD_COUNT';\nexport const CARDSET_ADD_TEXT_FIELD = 'CARDSET_ADD_TEXT_FIELD';\nexport const CARDSET_ADD_IMAGE_FIELD = 'CARDSET_ADD_IMAGE_FIELD';\nexport const CARDSET_CHANGE_ACTIVE_FIELD_NAME = 'CARDSET_CHANGE_ACTIVE_FIELD_NAME';\nexport const CARDSET_REMOVE_ACTIVE_FIELD = 'CARDSET_REMOVE_ACTIVE_FIELD';\nexport const CARDSET_RAISE_ACTIVE_FIELD_TO_TOP = 'CARDSET_RAISE_ACTIVE_FIELD_TO_TOP';\nexport const CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM = 'CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM';\nexport const CARDSET_LOCK_ACTIVE_FIELD = 'CARDSET_LOCK_ACTIVE_FIELD';\nexport const CARDSET_UNLOCK_ACTIVE_FIELD = 'CARDSET_UNLOCK_ACTIVE_FIELD';\nexport const CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD = 'CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD';\nexport const CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD = 'CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD';\nexport const CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD = 'CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD';\nexport const CARDSET_CHANGE_WIDTH = 'CARDSET_CHANGE_WIDTH';\nexport const CARDSET_CHANGE_HEIGHT = 'CARDSET_CHANGE_HEIGHT';\nexport const CARDSET_CHANGE_IS_TWO_SIDED = 'CARDSET_CHANGE_IS_TWO_SIDED';\nexport const CARDSET_CHANGE_SNAPPING_DISTANCE = 'CARDSET_CHANGE_SNAPPING_DISTANCE';\nexport const CARDSET_CHANGE_FIELD_POSITION = 'CARDSET_CHANGE_FIELD_POSITION';\nexport const CARDSET_CHANGE_FIELD_PAN = 'CARDSET_CHANGE_FIELD_PAN';\nexport const CARDSET_CHANGE_FIELD_ZOOM = 'CARDSET_CHANGE_FIELD_ZOOM';\nexport const CARDSET_CHANGE_FIELD_SIZE = 'CARDSET_CHANGE_FIELD_SIZE';\nexport const CARDSET_CHANGE_FIELD_ANGLE = 'CARDSET_CHANGE_FIELD_ANGLE';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN = 'CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR = 'CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY = 'CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT = 'CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT =\n    'CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE = 'CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT = 'CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT';\nexport const CARDSET_CHANGE_TEXT = 'CARDSET_CHANGE_TEXT';\nexport const CARDSET_CHANGE_IMAGE = 'CARDSET_CHANGE_IMAGE';\nexport const CARDSET_CHANGE_IMAGE_BASE64 = 'CARDSET_CHANGE_IMAGE_BASE64';\nexport const CARDSET_SET_ACTIVE_CARD_AND_FIELD = 'CARDSET_SET_ACTIVE_CARD_AND_FIELD';\nexport const CARDSET_SELECT_FAILURE = 'CARDSET_SELECT_FAILURE';\nexport const CARDSET_SET_SIDEBAR_STATE = 'CARDSET_SET_SIDEBAR_STATE';\nexport const CARDSET_SET_ZOOM = 'CARDSET_SET_ZOOM';\nexport const CARDSET_UPLOAD_IMAGE = 'CARDSET_UPLOAD_IMAGE';\nexport const CARDSET_UPLOAD_IMAGE_SUCCESS = 'CARDSET_UPLOAD_IMAGE_SUCCESS';\nexport const CARDSET_UPLOAD_IMAGE_FAILURE = 'CARDSET_UPLOAD_IMAGE_FAILURE';\nexport const CARDSET_DELETE_IMAGE = 'CARDSET_DELETE_IMAGE';\nexport const CARDSET_UNDO = 'CARDSET_UNDO';\nexport const CARDSET_REDO = 'CARDSET_REDO';\nexport const IMAGE_LIST_REQUEST = 'IMAGE_LIST_REQUEST';\nexport const IMAGE_LIST_SUCCESS = 'IMAGE_LIST_SUCCESS';\nexport const IMAGE_LIST_FAILURE = 'IMAGE_LIST_FAILURE';\n\n// Actions\n\nexport interface InitAction {\n    type: typeof INIT_REQUEST;\n}\n\nexport interface MessageDisplay {\n    type: typeof MESSAGE_DISPLAY;\n    message: MessageType;\n}\nexport type MessageAction = MessageDisplay | { type: typeof MESSAGE_HIDE; messageId: string };\n\nexport interface LoginRequest {\n    type: typeof LOGIN_REQUEST;\n    creds: Credentials;\n}\nexport type LoginAction =\n    | LoginRequest\n    | { type: typeof LOGIN_SUCCESS }\n    | { type: typeof LOGIN_FAILURE; message: string }\n    | { type: typeof LOGOUT_REQUEST }\n    | { type: typeof LOGOUT_FAILURE }\n    | { type: typeof LOGOUT_SUCCESS };\n\nexport interface SignUpRequest {\n    type: typeof SIGNUP_REQUEST;\n    creds: Credentials;\n}\nexport type SignUpAction = SignUpRequest | { type: typeof SIGNUP_SUCCESS } | { type: typeof SIGNUP_FAILURE };\n\nexport interface GameCreateRequest {\n    type: typeof GAME_CREATE_REQUEST;\n    gamename: string;\n}\nexport type GameCreateAction = GameCreateRequest | { type: typeof GAME_CREATE_SUCCESS };\n\nexport interface GameDeleteRequest {\n    type: typeof GAME_DELETE_REQUEST;\n    gameId: string;\n}\n\nexport type GameDeleteAction = GameDeleteRequest;\n\nexport interface GameRenameRequest {\n    type: typeof GAME_RENAME_REQUEST;\n    gameId: string;\n    newName: string;\n}\n\nexport type GameRenameAction = GameRenameRequest;\n\nexport interface GameListSuccess {\n    type: typeof GAME_LIST_SUCCESS;\n    byId: GamesCollection;\n    allIds: IdsArray;\n}\nexport type GameListAction =\n    | { type: typeof GAME_LIST_REQUEST }\n    | GameListSuccess\n    | { type: typeof GAME_LIST_FAILURE }\n    | { type: typeof GAME_LIST_RESET };\n\nexport interface GameSelectRequest {\n    type: typeof GAME_SELECT_REQUEST;\n    id: string;\n    updateCardSets: boolean;\n}\nexport type GameSelectAction =\n    | GameSelectRequest\n    | { type: typeof GAME_SELECT_SUCCESS; id: string }\n    | { type: typeof GAME_SELECT_FAILURE };\n\nexport interface GameCreatePdfRequest {\n    type: typeof GAME_CREATE_PDF_REQUEST;\n    collectionType: string;\n    collectionId: string;\n    pageWidth: number;\n    pageHeight: number;\n    topBottomMargin: number;\n    leftRightMargin: number;\n    verticalSpace: number;\n    horizontalSpace: number;\n    includeBleedingArea: boolean;\n    cutMarksForScissors: boolean;\n    cutMarksForGuillotine: boolean;\n    cutMarksInMarginArea: boolean;\n    cutMarksOnFrontSideOnly: boolean;\n}\n\nexport type GameCreatePdfAction =\n    | GameCreatePdfRequest\n    | { type: typeof GAME_CREATE_PDF_SUCCESS }\n    | { type: typeof GAME_CREATE_PDF_FAILURE };\n\nexport interface GameCreatePngRequest {\n    type: typeof GAME_CREATE_PNG_REQUEST;\n    dpi: number;\n    collectionType: string;\n    collectionId: string;\n}\n\nexport type GameCreatePngAction =\n    | GameCreatePngRequest\n    | { type: typeof GAME_CREATE_PNG_SUCCESS }\n    | { type: typeof GAME_CREATE_PNG_FAILURE };\n\nexport type GameAction =\n    | GameCreateAction\n    | GameDeleteAction\n    | GameRenameAction\n    | GameListAction\n    | GameSelectAction\n    | GameCreatePdfAction\n    | GameCreatePngAction;\n\nexport interface CardSetCreateRequest {\n    type: typeof CARDSET_CREATE_REQUEST;\n    cardsetname: string;\n    width: number;\n    height: number;\n    gameId: string;\n}\nexport type CardSetCreateAction =\n    | CardSetCreateRequest\n    | { type: typeof CARDSET_CREATE_SUCCESS }\n    | { type: typeof CARDSET_CREATE_FAILURE };\n\nexport interface CardSetDeleteRequest {\n    type: typeof CARDSET_DELETE_REQUEST;\n    cardSetId: string;\n}\n\nexport interface CardSetRenameRequest {\n    type: typeof CARDSET_RENAME_REQUEST;\n    cardSetId: string;\n    newName: string;\n}\n\nexport interface CardSetsSelectSuccess {\n    type: typeof CARDSETS_SELECT_SUCCESS;\n    id: string;\n    name: string;\n}\n\nexport type CardSetsAction =\n    | CardSetsSelectSuccess\n    | CardSetCreateAction\n    | CardSetDeleteRequest\n    | CardSetRenameRequest\n    | CardSetListAction;\n\nexport interface CardSetImportData {\n    type: typeof CARDSET_IMPORT_DATA;\n    data: object;\n}\n\nexport interface CardSetListSuccess {\n    type: typeof CARDSET_LIST_SUCCESS;\n    byId: CardSetsCollection;\n    allIds: IdsArray;\n}\nexport type CardSetListAction =\n    | { type: typeof CARDSET_LIST_REQUEST }\n    | CardSetListSuccess\n    | { type: typeof CARDSET_LIST_FAILURE }\n    | { type: typeof CARDSET_LIST_RESET };\n\nexport interface CardSetSelectRequest {\n    type: typeof CARDSET_SELECT_REQUEST;\n    id: string;\n}\n\nexport interface CardSetSelectSuccessDataBase {\n    version: string;\n}\n\nexport interface CardSetSelectSuccessDataV2 {\n    version: 2;\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    snappingDistance: number;\n    cardsAllIds: IdsArray;\n    cardsById: CardsCollection;\n    placeholders: PlaceholdersCollection;\n    placeholdersAllIds: IdsArray;\n    texts: PlaceholdersTextInfoByCardCollection;\n    images: PlaceholdersImageInfoByCardCollection;\n    zoom: number;\n}\n\nexport interface CardSetSelectSuccessDataV3 {\n    version: 3;\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    snappingDistance: number;\n    cardsAllIds: IdsArray;\n    cardsById: CardsCollection;\n    fields: FieldInfoByCardCollection;\n    fieldsAllIds: IdsArray;\n    zoom: number;\n}\n\nexport type CardSetSelectSuccessData = CardSetSelectSuccessDataV2 | CardSetSelectSuccessDataV3;\n\nexport interface CardSetSelectSuccess {\n    type: typeof CARDSET_SELECT_SUCCESS;\n    id: string;\n    name: string;\n    data: CardSetSelectSuccessDataV3;\n    gameId: string;\n}\nexport interface CardSetCreateCard {\n    type: typeof CARDSET_CREATE_CARD;\n    card: CardType;\n}\nexport interface CardSetCloneCard {\n    type: typeof CARDSET_CLONE_CARD;\n    card: CardType;\n}\nexport interface CardSetRemoveCard {\n    type: typeof CARDSET_REMOVE_CARD;\n    card: CardType;\n}\nexport interface CardSetUpdateCardCount {\n    type: typeof CARDSET_UPDATE_CARD_COUNT;\n    card: CardType;\n    count: number;\n}\nexport interface CardSetAddTextField {\n    type: typeof CARDSET_ADD_TEXT_FIELD;\n}\nexport interface CardSetAddImageField {\n    type: typeof CARDSET_ADD_IMAGE_FIELD;\n}\nexport interface CardSetChangeActiveFieldName {\n    type: typeof CARDSET_CHANGE_ACTIVE_FIELD_NAME;\n    name: string;\n}\nexport interface CardSetRemoveActiveField {\n    type: typeof CARDSET_REMOVE_ACTIVE_FIELD;\n}\nexport interface CardSetRaiseActiveFieldToTop {\n    type: typeof CARDSET_RAISE_ACTIVE_FIELD_TO_TOP;\n}\nexport interface CardSetLowerActiveFieldToBottom {\n    type: typeof CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM;\n}\nexport interface CardSetLockActiveField {\n    type: typeof CARDSET_LOCK_ACTIVE_FIELD;\n}\nexport interface CardSetUnlockActiveField {\n    type: typeof CARDSET_UNLOCK_ACTIVE_FIELD;\n}\nexport interface CardSetChangeFitForActiveField {\n    type: typeof CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD;\n    fit: string;\n}\nexport interface CardSetChangeCropForActiveField {\n    type: typeof CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD;\n    crop: boolean;\n}\n\nexport interface CardSetChangeUnclickableForActiveField {\n    type: typeof CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD;\n    unclickable: boolean;\n}\n\nexport interface CardSetChangeWidth {\n    type: typeof CARDSET_CHANGE_WIDTH;\n    width: number;\n    maintainAspectRatio: boolean;\n    resizeContent: boolean;\n}\n\nexport interface CardSetChangeHeight {\n    type: typeof CARDSET_CHANGE_HEIGHT;\n    height: number;\n    maintainAspectRatio: boolean;\n    resizeContent: boolean;\n}\n\nexport interface CardSetChangeIsTwoSided {\n    type: typeof CARDSET_CHANGE_IS_TWO_SIDED;\n    isTwoSided: boolean;\n}\n\nexport interface CardSetChangeSnappingDistance {\n    type: typeof CARDSET_CHANGE_SNAPPING_DISTANCE;\n    snappingDistance: number;\n}\n\nexport interface CardSetChangeFieldPosition {\n    type: typeof CARDSET_CHANGE_FIELD_POSITION;\n    cardId?: string;\n    fieldId: string;\n    x: number;\n    y: number;\n    group: string;\n}\n\nexport interface CardSetChangeFieldPan {\n    type: typeof CARDSET_CHANGE_FIELD_PAN;\n    cardId?: string;\n    fieldId: string;\n    cx: number;\n    cy: number;\n    group: string;\n}\n\nexport interface CardSetChangeFieldZoom {\n    type: typeof CARDSET_CHANGE_FIELD_ZOOM;\n    cardId?: string;\n    fieldId: string;\n    zoom: number;\n    group: string;\n}\n\nexport interface CardSetChangeFieldSize {\n    type: typeof CARDSET_CHANGE_FIELD_SIZE;\n    cardId?: string;\n    fieldId: string;\n    width: number;\n    height: number;\n    group: string;\n}\nexport interface CardSetChangeFieldAngle {\n    type: typeof CARDSET_CHANGE_FIELD_ANGLE;\n    cardId?: string;\n    fieldId: string;\n    angle: number;\n    group: string;\n}\nexport interface CardSetChangeActiveTextFieldAlign {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN;\n    align: string;\n}\nexport interface CardSetChangeActiveTextFieldColor {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR;\n    color: string;\n}\nexport interface CardSetChangeActiveTextFieldFontFamily {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY;\n    fontFamily: string;\n}\nexport interface CardSetChangeActiveTextFieldFontVariant {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT;\n    fontVariant: string;\n}\nexport interface CardSetChangeActiveTextFieldFontFamilyAndVariant {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT;\n    fontFamily: string;\n    fontVariant: string;\n}\nexport interface CardSetChangeActiveTextFieldFontSize {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE;\n    fontSize: number;\n}\nexport interface CardSetChangeActiveTextFieldLineHeight {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT;\n    lineHeight: number;\n}\nexport interface CardSetChangeText {\n    type: typeof CARDSET_CHANGE_TEXT;\n    cardId: string;\n    fieldId: string;\n    textInfo: TextInfo;\n}\nexport interface CardSetChangeImage {\n    type: typeof CARDSET_CHANGE_IMAGE;\n    cardId: string;\n    fieldId: string;\n    imageInfo: ImageInfo;\n}\nexport interface CardSetChangeImageBase64 {\n    type: typeof CARDSET_CHANGE_IMAGE_BASE64;\n    cardId: string;\n    fieldId: string;\n    base64?: string;\n}\nexport interface CardSetSetActiveCardAndField {\n    type: typeof CARDSET_SET_ACTIVE_CARD_AND_FIELD;\n    cardId?: string;\n    isBackActive: boolean;\n    fieldId?: string;\n}\n\nexport enum SidebarState {\n    Settings,\n    Details,\n    Measurements,\n    Image,\n    Text,\n    Upload,\n    ImportExport,\n    Png,\n    Pdf,\n}\nexport interface CardSetSetSidebarState {\n    type: typeof CARDSET_SET_SIDEBAR_STATE;\n    sidebarState: SidebarState | null;\n}\nexport interface CardSetSetZoom {\n    type: typeof CARDSET_SET_ZOOM;\n    zoom: number;\n}\n\nexport type FPLoadCallback = (id: string) => void;\nexport type FPErrorCallback = (error: string) => void;\nexport type FPProgressCallback = (computable: boolean, loaded: number, total: number) => void;\nexport type FPAbortCallback = () => void;\nexport type FPRevertLoadCallback = () => void;\n\nexport interface CardSetUploadImage {\n    type: typeof CARDSET_UPLOAD_IMAGE;\n    gameId: string;\n    file: File;\n    load: FPLoadCallback;\n    error: FPErrorCallback;\n    progress: FPProgressCallback;\n    abort: FPAbortCallback;\n    cancelToken: CancelToken;\n}\n\nexport interface CardSetDeleteImage {\n    type: typeof CARDSET_DELETE_IMAGE;\n    imageId: string;\n    load: FPRevertLoadCallback;\n    error: FPErrorCallback;\n}\n\nexport interface CardSetUndo {\n    type: typeof CARDSET_UNDO;\n}\n\nexport interface CardSetRedo {\n    type: typeof CARDSET_REDO;\n}\n\nexport interface CardSetUploadImageSuccess {\n    type: typeof CARDSET_UPLOAD_IMAGE_SUCCESS;\n}\n\nexport interface CardSetUploadImageFailure {\n    type: typeof CARDSET_UPLOAD_IMAGE_FAILURE;\n}\n\nexport type CardSetSelectAction = CardSetSelectRequest | CardSetSelectSuccess | { type: typeof CARDSET_SELECT_FAILURE };\n\nexport type CardSetModifyAction =\n    | CardSetCreateCard\n    | CardSetCloneCard\n    | CardSetRemoveCard\n    | CardSetUpdateCardCount\n    | CardSetAddTextField\n    | CardSetAddImageField\n    | CardSetChangeActiveFieldName\n    | CardSetRemoveActiveField\n    | CardSetRaiseActiveFieldToTop\n    | CardSetLowerActiveFieldToBottom\n    | CardSetLockActiveField\n    | CardSetUnlockActiveField\n    | CardSetChangeFitForActiveField\n    | CardSetChangeCropForActiveField\n    | CardSetChangeUnclickableForActiveField\n    | CardSetChangeWidth\n    | CardSetChangeHeight\n    | CardSetChangeIsTwoSided\n    | CardSetChangeSnappingDistance\n    | CardSetChangeFieldPosition\n    | CardSetChangeFieldPan\n    | CardSetChangeFieldZoom\n    | CardSetChangeFieldSize\n    | CardSetChangeFieldAngle\n    | CardSetChangeActiveTextFieldAlign\n    | CardSetChangeActiveTextFieldColor\n    | CardSetChangeActiveTextFieldFontFamily\n    | CardSetChangeActiveTextFieldFontVariant\n    | CardSetChangeActiveTextFieldFontFamilyAndVariant\n    | CardSetChangeActiveTextFieldFontSize\n    | CardSetChangeActiveTextFieldLineHeight\n    | CardSetChangeText\n    | CardSetChangeImage\n    | CardSetChangeImageBase64\n    | CardSetSetActiveCardAndField\n    | CardSetSetSidebarState\n    | CardSetSetZoom\n    | CardSetUploadImage\n    | CardSetDeleteImage\n    | CardSetUndo\n    | CardSetRedo\n    | CardSetUploadImageSuccess\n    | CardSetUploadImageFailure;\n\nexport type CardSetAction = CardSetImportData | CardSetSelectAction | CardSetModifyAction;\n\nexport interface ImageListRequest {\n    type: typeof IMAGE_LIST_REQUEST;\n    filter: string;\n    location: string;\n}\nexport interface ImageListSuccess {\n    type: typeof IMAGE_LIST_SUCCESS;\n    images: ImageArray;\n}\nexport type ImageListAction = ImageListRequest | ImageListSuccess | { type: typeof IMAGE_LIST_FAILURE };\n\nexport type Action =\n    | InitAction\n    | LoginAction\n    | SignUpAction\n    | GameAction\n    | CardSetsAction\n    | CardSetAction\n    | ImageListAction\n    | MessageAction;\n\nexport type Dispatch = ReduxDispatch<Action>;\n\nexport const messageDisplay = (type: string, text: string, id?: string): MessageDisplay => {\n    return {\n        type: MESSAGE_DISPLAY,\n        message: {\n            id: id || shortid.generate(),\n            type: type,\n            text: text,\n        },\n    };\n};\n\nexport const initRequest = (): InitAction => {\n    return { type: INIT_REQUEST };\n};\n\nexport const loginRequest = (creds: Credentials): LoginAction => {\n    return {\n        type: LOGIN_REQUEST,\n        creds: creds,\n    };\n};\n\nexport const logoutRequest = (): LoginAction => {\n    return {\n        type: LOGOUT_REQUEST,\n    };\n};\n\nexport const signupRequest = (creds: Credentials): SignUpAction => {\n    return {\n        type: SIGNUP_REQUEST,\n        creds: creds,\n    };\n};\n\nexport const gameCreateRequest = (gamename: string): GameAction => {\n    return {\n        type: GAME_CREATE_REQUEST,\n        gamename: gamename,\n    };\n};\n\nexport const gameDeleteRequest = (gameId: string): GameAction => {\n    return {\n        type: GAME_DELETE_REQUEST,\n        gameId,\n    };\n};\n\nexport const gameRenameRequest = (gameId: string, newName: string): GameAction => {\n    return {\n        type: GAME_RENAME_REQUEST,\n        gameId,\n        newName,\n    };\n};\n\nexport const gameListRequest = (): GameAction => {\n    return {\n        type: GAME_LIST_REQUEST,\n    };\n};\n\nexport const gameSelectRequest = (id: string, updateCardSets: boolean): GameAction => {\n    return {\n        type: GAME_SELECT_REQUEST,\n        id,\n        updateCardSets,\n    };\n};\n\nexport const gameCreatePdfRequest = (\n    collectionType: string,\n    collectionId: string,\n    pageWidth: number,\n    pageHeight: number,\n    topBottomMargin: number,\n    leftRightMargin: number,\n    verticalSpace: number,\n    horizontalSpace: number,\n    includeBleedingArea: boolean,\n    cutMarksForScissors: boolean,\n    cutMarksForGuillotine: boolean,\n    cutMarksInMarginArea: boolean,\n    cutMarksOnFrontSideOnly: boolean,\n): GameCreatePdfRequest => {\n    return {\n        type: GAME_CREATE_PDF_REQUEST,\n        collectionType,\n        collectionId,\n        pageWidth,\n        pageHeight,\n        topBottomMargin,\n        leftRightMargin,\n        verticalSpace,\n        horizontalSpace,\n        includeBleedingArea,\n        cutMarksForScissors,\n        cutMarksForGuillotine,\n        cutMarksInMarginArea,\n        cutMarksOnFrontSideOnly,\n    };\n};\n\nexport const gameCreatePngRequest = (\n    dpi: number,\n    collectionType: string,\n    collectionId: string,\n): GameCreatePngRequest => {\n    return {\n        type: GAME_CREATE_PNG_REQUEST,\n        dpi,\n        collectionType,\n        collectionId,\n    };\n};\n\nexport const cardSetCreateRequest = (\n    cardsetname: string,\n    width: number,\n    height: number,\n    gameId: string,\n): CardSetsAction => {\n    return {\n        type: CARDSET_CREATE_REQUEST,\n        cardsetname: cardsetname,\n        width,\n        height,\n        gameId,\n    };\n};\n\nexport const cardSetDeleteRequest = (cardSetId: string): CardSetsAction => {\n    return {\n        type: CARDSET_DELETE_REQUEST,\n        cardSetId,\n    };\n};\n\nexport const cardSetRenameRequest = (cardSetId: string, newName: string): CardSetsAction => {\n    return {\n        type: CARDSET_RENAME_REQUEST,\n        cardSetId,\n        newName,\n    };\n};\n\nexport const cardSetImportData = (data: object): CardSetImportData => {\n    return {\n        type: CARDSET_IMPORT_DATA,\n        data,\n    };\n};\n\nexport const cardSetSelectRequest = (id: string): CardSetSelectRequest => {\n    return {\n        type: CARDSET_SELECT_REQUEST,\n        id,\n    };\n};\n\nexport const cardSetCreateCard = (card: CardType): CardSetCreateCard => {\n    return {\n        type: CARDSET_CREATE_CARD,\n        card,\n    };\n};\n\nexport const cardSetCloneCard = (card: CardType): CardSetCloneCard => {\n    return {\n        type: CARDSET_CLONE_CARD,\n        card,\n    };\n};\n\nexport const cardSetRemoveCard = (card: CardType): CardSetRemoveCard => {\n    return {\n        type: CARDSET_REMOVE_CARD,\n        card,\n    };\n};\n\nexport const cardSetUpdateCardCount = (card: CardType, count: number): CardSetUpdateCardCount => {\n    return {\n        type: CARDSET_UPDATE_CARD_COUNT,\n        card,\n        count,\n    };\n};\n\nexport const cardSetAddTextField = (): CardSetAddTextField => {\n    return {\n        type: CARDSET_ADD_TEXT_FIELD,\n    };\n};\n\nexport const cardSetAddImageField = (): CardSetAddImageField => {\n    return {\n        type: CARDSET_ADD_IMAGE_FIELD,\n    };\n};\n\nexport const cardSetChangeActiveFieldName = (name: string): CardSetChangeActiveFieldName => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_FIELD_NAME,\n        name,\n    };\n};\n\nexport const cardSetRemoveActiveField = (): CardSetRemoveActiveField => {\n    return {\n        type: CARDSET_REMOVE_ACTIVE_FIELD,\n    };\n};\n\nexport const cardSetRaiseActiveFieldToTop = (): CardSetRaiseActiveFieldToTop => {\n    return {\n        type: CARDSET_RAISE_ACTIVE_FIELD_TO_TOP,\n    };\n};\n\nexport const cardSetLowerActiveFieldToBottom = (): CardSetLowerActiveFieldToBottom => {\n    return {\n        type: CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM,\n    };\n};\n\nexport const cardSetLockActiveField = (): CardSetLockActiveField => {\n    return {\n        type: CARDSET_LOCK_ACTIVE_FIELD,\n    };\n};\n\nexport const cardSetUnlockActiveField = (): CardSetUnlockActiveField => {\n    return {\n        type: CARDSET_UNLOCK_ACTIVE_FIELD,\n    };\n};\n\nexport const cardSetChangeFitForActiveField = (fit: string): CardSetChangeFitForActiveField => {\n    return {\n        type: CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD,\n        fit,\n    };\n};\n\nexport const cardSetChangeCropForActiveField = (crop: boolean): CardSetChangeCropForActiveField => {\n    return {\n        type: CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD,\n        crop,\n    };\n};\n\nexport const cardSetChangeUnclickableForActiveField = (\n    unclickable: boolean,\n): CardSetChangeUnclickableForActiveField => {\n    return {\n        type: CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD,\n        unclickable,\n    };\n};\n\nexport const cardSetChangeWidth = (\n    width: number,\n    maintainAspectRatio: boolean,\n    resizeContent: boolean,\n): CardSetChangeWidth => {\n    return {\n        type: CARDSET_CHANGE_WIDTH,\n        width,\n        maintainAspectRatio,\n        resizeContent,\n    };\n};\n\nexport const cardSetChangeHeight = (\n    height: number,\n    maintainAspectRatio: boolean,\n    resizeContent: boolean,\n): CardSetChangeHeight => {\n    return {\n        type: CARDSET_CHANGE_HEIGHT,\n        height,\n        maintainAspectRatio,\n        resizeContent,\n    };\n};\n\nexport const cardSetChangeIsTwoSided = (isTwoSided: boolean): CardSetChangeIsTwoSided => {\n    return {\n        type: CARDSET_CHANGE_IS_TWO_SIDED,\n        isTwoSided,\n    };\n};\n\nexport const cardSetChangeSnappingDistance = (snappingDistance: number): CardSetChangeSnappingDistance => {\n    return {\n        type: CARDSET_CHANGE_SNAPPING_DISTANCE,\n        snappingDistance,\n    };\n};\n\nexport const cardSetChangeFieldPosition = (\n    cardId: string | undefined,\n    fieldId: string,\n    x: number,\n    y: number,\n    group: string,\n): CardSetChangeFieldPosition => {\n    return {\n        type: CARDSET_CHANGE_FIELD_POSITION,\n        cardId,\n        fieldId,\n        x,\n        y,\n        group,\n    };\n};\n\nexport const cardSetChangeFieldPan = (\n    cardId: string | undefined,\n    fieldId: string,\n    cx: number,\n    cy: number,\n    group: string,\n): CardSetChangeFieldPan => {\n    return {\n        type: CARDSET_CHANGE_FIELD_PAN,\n        cardId,\n        fieldId,\n        cx,\n        cy,\n        group,\n    };\n};\n\nexport const cardSetChangeFieldZoom = (\n    cardId: string | undefined,\n    fieldId: string,\n    zoom: number,\n    group: string,\n): CardSetChangeFieldZoom => {\n    return {\n        type: CARDSET_CHANGE_FIELD_ZOOM,\n        cardId,\n        fieldId,\n        zoom,\n        group,\n    };\n};\n\nexport const cardSetChangeFieldSize = (\n    cardId: string | undefined,\n    fieldId: string,\n    width: number,\n    height: number,\n    group: string,\n): CardSetChangeFieldSize => {\n    return {\n        type: CARDSET_CHANGE_FIELD_SIZE,\n        cardId,\n        fieldId,\n        width,\n        height,\n        group,\n    };\n};\n\nexport const cardSetChangeFieldAngle = (\n    cardId: string | undefined,\n    fieldId: string,\n    angle: number,\n    group: string,\n): CardSetChangeFieldAngle => {\n    return {\n        type: CARDSET_CHANGE_FIELD_ANGLE,\n        cardId,\n        fieldId,\n        angle,\n        group,\n    };\n};\n\nexport const cardSetChangeActiveTextFieldAlign = (align: string): CardSetChangeActiveTextFieldAlign => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN,\n        align,\n    };\n};\n\nexport const cardSetChangeActiveTextFieldColor = (color: string): CardSetChangeActiveTextFieldColor => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR,\n        color,\n    };\n};\n\nexport const cardSetChangeActiveTextFieldFontFamily = (fontFamily: string): CardSetChangeActiveTextFieldFontFamily => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY,\n        fontFamily,\n    };\n};\n\nexport const cardSetChangeActiveTextFieldFontVariant = (\n    fontVariant: string,\n): CardSetChangeActiveTextFieldFontVariant => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT,\n        fontVariant,\n    };\n};\n\nexport const cardSetChangeActiveTextFieldFontFamilyAndVariant = (\n    fontFamily: string,\n    fontVariant: string,\n): CardSetChangeActiveTextFieldFontFamilyAndVariant => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT,\n        fontFamily,\n        fontVariant,\n    };\n};\n\nexport const cardSetChangeActiveTextFieldFontSize = (fontSize: number): CardSetChangeActiveTextFieldFontSize => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE,\n        fontSize,\n    };\n};\n\nexport const cardSetChangeActiveTextFieldLineHeight = (lineHeight: number): CardSetChangeActiveTextFieldLineHeight => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT,\n        lineHeight,\n    };\n};\n\nexport const cardSetChangeText = (cardId: string, fieldId: string, textInfo: TextInfo): CardSetChangeText => {\n    return {\n        type: CARDSET_CHANGE_TEXT,\n        cardId,\n        fieldId,\n        textInfo,\n    };\n};\n\nexport const cardSetChangeImage = (cardId: string, fieldId: string, imageInfo: ImageInfo): CardSetChangeImage => {\n    return {\n        type: CARDSET_CHANGE_IMAGE,\n        cardId,\n        fieldId,\n        imageInfo,\n    };\n};\n\nexport const cardSetChangeImageBase64 = (\n    cardId: string,\n    fieldId: string,\n    base64?: string,\n): CardSetChangeImageBase64 => {\n    return {\n        type: CARDSET_CHANGE_IMAGE_BASE64,\n        cardId,\n        fieldId,\n        base64,\n    };\n};\n\nexport const cardSetActiveCardAndField = (\n    cardId: string | undefined,\n    isBackActive: boolean,\n    fieldId: string | undefined,\n): CardSetSetActiveCardAndField => {\n    return {\n        type: CARDSET_SET_ACTIVE_CARD_AND_FIELD,\n        cardId,\n        isBackActive,\n        fieldId,\n    };\n};\n\nexport const cardSetSetSidebarState = (sidebarState: SidebarState | null): CardSetSetSidebarState => {\n    return {\n        type: CARDSET_SET_SIDEBAR_STATE,\n        sidebarState,\n    };\n};\n\nexport const cardSetSetZoom = (zoom: number): CardSetSetZoom => {\n    return {\n        type: CARDSET_SET_ZOOM,\n        zoom,\n    };\n};\n\nexport const cardSetUploadImage = (\n    gameId: string,\n    file: File,\n    load: FPLoadCallback,\n    error: FPErrorCallback,\n    progress: FPProgressCallback,\n    abort: FPAbortCallback,\n    cancelToken: CancelToken,\n): CardSetUploadImage => {\n    return {\n        type: CARDSET_UPLOAD_IMAGE,\n        gameId,\n        file,\n        load,\n        error,\n        progress,\n        abort,\n        cancelToken,\n    };\n};\n\nexport const cardSetDeleteImage = (\n    imageId: string,\n    load: FPRevertLoadCallback,\n    error: FPErrorCallback,\n): CardSetDeleteImage => {\n    return {\n        type: CARDSET_DELETE_IMAGE,\n        imageId,\n        load,\n        error,\n    };\n};\n\nexport const cardSetUndo = (): CardSetUndo => {\n    return {\n        type: CARDSET_UNDO,\n    };\n};\n\nexport const cardSetRedo = (): CardSetRedo => {\n    return {\n        type: CARDSET_REDO,\n    };\n};\n\nexport const imageListRequest = (filter: string, location: string): ImageListAction => {\n    return {\n        type: IMAGE_LIST_REQUEST,\n        filter,\n        location,\n    };\n};\n","export const CURRENT_CARDSET_VERSION = 3;\nexport const DEFAULT_FONT = 'Roboto';\nexport const DEFAULT_FONT_VARIANT = 'regular';\nexport const DEFAULT_FONT_SIZE = 8;\nexport const DEFAULT_LINE_HEIGHT = 1.27;\n\nexport const BLEED_WIDTH = 25.4 / 8; // 1/8th of inch in mm\n","import axios, { AxiosError, CancelToken } from 'axios';\n\nimport { Credentials } from './types';\n\nexport function handleAxiosError(error: AxiosError) {\n    if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        // error.response.status);\n        throw new Error(error.response.data.message);\n    } else if (error.request) {\n        console.log(error.request);\n        throw new Error(error.request);\n    } else {\n        throw new Error('Unknown error :(');\n    }\n}\n\nexport function getTokens(creds: Credentials) {\n    return axios\n        .post('/api/tokens', creds)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function refreshToken(refreshTokenValue: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${refreshTokenValue}` },\n    };\n    return axios\n        .post('/api/access_tokens', {}, config)\n        .then(resp => {\n            return resp.data.accessToken;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function deleteAccessToken(token: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .delete('/api/access_tokens', config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            if (error.response.status === 401) return {};\n            handleAxiosError(error);\n        });\n}\n\nexport function deleteRefreshToken(token: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .delete('/api/refresh_tokens', config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            if (error.response.status === 401) return {};\n            handleAxiosError(error);\n        });\n}\n\nexport function registerUser(creds: Credentials) {\n    return axios\n        .post('/api/users', creds)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function getRequest(url: string, token: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .get(url, config)\n        .then(resp => {\n            return resp;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function postRequest(url: string, token: string, data: object) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .post(url, data, config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function postRequestFormDataCancelable(\n    url: string,\n    token: string,\n    data: FormData,\n    progressCallback: (event: ProgressEvent) => void,\n    cancelToken: CancelToken,\n    cancelCallback: () => void,\n) {\n    let config = {\n        headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'multipart/form-data',\n        },\n        cancelToken,\n        onUploadProgress: progressCallback,\n    };\n\n    return axios\n        .post(url, data, config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            if (axios.isCancel(error)) {\n                cancelCallback();\n            } else {\n                handleAxiosError(error);\n            }\n        });\n}\n\nexport function putRequest(url: string, token: string, data: object) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .put(url, data, config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function deleteRequest(url: string, token: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .delete(url, config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n","import axios from 'axios';\nimport { ImageFieldInfo, ImageToDraw } from './types';\n\nexport function downloadBlob(blobURL: string, filename: string, resolve?: () => void) {\n    const tempLink = document.createElement('a');\n    tempLink.style.display = 'none';\n    tempLink.href = blobURL;\n    tempLink.setAttribute('download', filename);\n    if (typeof tempLink.download === 'undefined') {\n        tempLink.setAttribute('target', '_blank');\n    }\n    document.body.appendChild(tempLink);\n    tempLink.click();\n    document.body.removeChild(tempLink);\n    setTimeout(() => {\n        window.URL.revokeObjectURL(blobURL);\n        if (resolve) resolve();\n    }, 100);\n}\n\nexport function rotateVec(x: number, y: number, a: number) {\n    const sinA = Math.sin(a);\n    const cosA = Math.cos(a);\n    const rx = cosA * x - sinA * y;\n    const ry = sinA * x + cosA * y;\n\n    return { rx, ry };\n}\n\nexport function calculateImageDimensions(imageFieldInfo: ImageFieldInfo | ImageToDraw) {\n    let calculatedImageWidth, calculatedImageHeight;\n    let imageWidth = imageFieldInfo.imageWidth || 1;\n    let imageHeight = imageFieldInfo.imageHeight || 1;\n\n    if (!imageFieldInfo.fit || imageFieldInfo.fit === 'width') {\n        calculatedImageWidth = imageFieldInfo.width;\n        calculatedImageHeight = (imageFieldInfo.width * imageHeight) / imageWidth;\n    } else if (imageFieldInfo.fit === 'height') {\n        calculatedImageWidth = (imageFieldInfo.height * imageWidth) / imageHeight;\n        calculatedImageHeight = imageFieldInfo.height;\n    } else {\n        // strech\n        calculatedImageWidth = imageFieldInfo.width;\n        calculatedImageHeight = imageFieldInfo.height;\n    }\n\n    calculatedImageWidth *= imageFieldInfo.zoom || 1;\n    calculatedImageHeight *= imageFieldInfo.zoom || 1;\n\n    return { width: calculatedImageWidth, height: calculatedImageHeight };\n}\n\nexport function reportError(error: string) {\n    return axios.post('/api/reports', { error });\n}\n","import { Dispatch } from './actions';\n\nexport interface SidebarOwnProps {\n    visible: boolean;\n}\n\nexport interface DispatchProps {\n    dispatch: Dispatch;\n}\n\nexport type IdsArray = string[];\n\nexport interface MessageType {\n    id: string;\n    type: string;\n    text: string;\n}\n\nexport interface GameType {\n    id: string;\n    name: string;\n}\n\nexport interface GamesCollection {\n    [propName: string]: GameType;\n}\n\nexport interface PlaceholderBase {\n    id: string;\n    type: string;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    angle: number;\n    locked?: boolean;\n    name?: string;\n    isOnBack?: boolean;\n}\n\nexport interface TextPlaceholderType extends PlaceholderBase {\n    type: 'text';\n    align: string;\n    color: string;\n    fontFamily: string;\n    fontVariant: string;\n    fontSize: number;\n    lineHeight?: number;\n}\n\nexport interface ImagePlaceholderType extends PlaceholderBase {\n    id: string;\n    type: 'image';\n    fit?: string;\n    zoom?: number;\n    cx?: number;\n    cy?: number;\n    crop?: boolean;\n}\n\nexport type PlaceholderType = TextPlaceholderType | ImagePlaceholderType;\n\nexport interface PlaceholdersCollection {\n    [propName: string]: PlaceholderType;\n}\n\nexport interface TextInfo {\n    value: string;\n}\n\nexport interface PlaceholdersTextInfoCollection {\n    [propName: string]: TextInfo;\n}\n\nexport interface PlaceholdersTextInfoByCardCollection {\n    [propName: string]: PlaceholdersTextInfoCollection;\n}\n\nexport interface ImageInfo {\n    url?: string;\n    global?: boolean;\n    base64?: string;\n    color?: string;\n    width?: number;\n    height?: number;\n}\n\nexport interface PlaceholdersImageInfoCollection {\n    [propName: string]: ImageInfo;\n}\n\nexport interface PlaceholdersImageInfoByCardCollection {\n    [propName: string]: PlaceholdersImageInfoCollection;\n}\n\nexport interface FieldBaseInfo {\n    id: string;\n    type: string;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    angle: number;\n    locked?: boolean;\n    name?: string;\n    isOnBack?: boolean;\n    unclickable?: boolean;\n}\n\nexport interface TextFieldInfo extends FieldBaseInfo {\n    type: 'text';\n    value: string;\n    align: string;\n    color: string;\n    fontFamily: string;\n    fontVariant: string;\n    fontSize: number;\n    lineHeight?: number;\n}\n\nexport interface ImageFieldInfo extends FieldBaseInfo {\n    type: 'image';\n    url?: string;\n    global?: boolean;\n    base64?: string;\n    color?: string;\n    imageWidth?: number;\n    imageHeight?: number;\n    fit?: string;\n    zoom?: number;\n    cx?: number;\n    cy?: number;\n    crop?: boolean;\n}\n\nexport type FieldInfo = TextFieldInfo | ImageFieldInfo;\n\nexport interface FieldInfoCollection {\n    [propName: string]: FieldInfo;\n}\n\nexport interface FieldInfoByCardCollection {\n    [propName: string]: FieldInfoCollection;\n}\n\nexport interface CardType {\n    id: string;\n    count: number;\n}\n\nexport interface CardsCollection {\n    [propName: string]: CardType;\n}\n\nexport interface CardSetType {\n    id: string;\n    name: string;\n}\n\nexport interface CardSetsCollection {\n    [propName: string]: CardSetType;\n}\n\nexport interface Credentials {\n    username: string;\n    password: string;\n}\n\nexport interface Image {\n    id: number;\n    name: string;\n    width: number;\n    height: number;\n}\n\nexport type ImageArray = Image[];\n\nexport interface CardSetData {\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    cardsAllIds: string[];\n    cardsById: CardsCollection;\n    fieldsAllIds: string[];\n    fields: FieldInfoByCardCollection;\n}\n\nexport enum ImageType {\n    SVG,\n    SVG_PATH,\n    IMAGE,\n    BLOCK_START,\n    BLOCK_END,\n}\n\nexport interface ImageToDraw {\n    type: ImageType;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    angle: number;\n    fit?: string;\n    data: string;\n    color?: string;\n    scale?: number;\n    imageWidth?: number;\n    imageHeight?: number;\n    zoom?: number;\n    cx?: number;\n    cy?: number;\n    crop?: boolean;\n}\n","import axios from 'axios';\nimport { downloadBlob, calculateImageDimensions } from './utils';\nimport { delay } from 'redux-saga';\nimport { XmlDocument } from 'xmldoc';\nimport JSZip from 'jszip';\nimport { getRequest } from './requests';\nimport { CardSetData, ImageToDraw, ImageType } from './types';\n\nconst SVG_B64_START = 'data:image/svg+xml;base64,';\n\nexport const generatePdfUsingWorker = (\n    accessToken: string,\n    collectionType: string,\n    collectionId: string,\n    pageWidth: number,\n    pageHeight: number,\n    topBottomMargin: number,\n    leftRightMargin: number,\n    verticalSpace: number,\n    horizontalSpace: number,\n    includeBleedingArea: boolean,\n    cutMarksForScissors: boolean,\n    cutMarksForGuillotine: boolean,\n    cutMarksInMarginArea: boolean,\n    cutMarksOnFrontSideOnly: boolean,\n) => {\n    // @ts-ignore\n    if (!window.Worker) {\n        throw new Error('We can not generate PDF because of browser you use. Try using different browser');\n    }\n\n    return new Promise((resolve, reject) => {\n        try {\n            const worker = new Worker('/js/worker.js');\n            worker.addEventListener('message', event => {\n                if (event.data.type === 'generatePdf') {\n                    const blobURL = event.data.url;\n                    downloadBlob(blobURL, 'card.pdf', resolve);\n                } else if (event.data.type === 'generateError') {\n                    const error = event.data.error;\n                    reject({ message: 'PDF generation failed', stack: error.stack });\n                }\n            });\n\n            worker.postMessage({\n                type: 'generatePdf',\n                accessToken,\n                collectionType,\n                collectionId,\n                pageWidth,\n                pageHeight,\n                topBottomMargin,\n                leftRightMargin,\n                verticalSpace,\n                horizontalSpace,\n                includeBleedingArea,\n                cutMarksForScissors,\n                cutMarksForGuillotine,\n                cutMarksInMarginArea,\n                cutMarksOnFrontSideOnly,\n            });\n        } catch (e) {\n            reject(e);\n        }\n    });\n};\n\nfunction loadImage(url: string): Promise<HTMLImageElement> {\n    return new Promise((resolve, reject) => {\n        const img = new Image();\n        img.onload = () => resolve(img);\n        img.onerror = () => reject();\n\n        img.src = url;\n    });\n}\n\nfunction prepareImageToDrawSpace(context: CanvasRenderingContext2D, imageToDraw: ImageToDraw, ptpmm: number) {\n    context.save();\n    let x = (imageToDraw.x + imageToDraw.width / 2) * ptpmm;\n    let y = (imageToDraw.y + imageToDraw.height / 2) * ptpmm;\n    context.translate(x, y);\n    context.rotate(imageToDraw.angle);\n    let ax = (-imageToDraw.width / 2) * ptpmm;\n    let ay = (-imageToDraw.height / 2) * ptpmm;\n    context.translate(ax, ay);\n    if (imageToDraw.crop) {\n        context.rect(0, 0, imageToDraw.width * ptpmm, imageToDraw.height * ptpmm);\n        context.clip();\n    }\n}\n\nfunction fixWidthAndHeightInSvg(data: string) {\n    const doc = new XmlDocument(data);\n    if (!('width' in doc.attr) || !('height' in doc.attr)) {\n        const viewBox = doc.attr['viewBox'].split(' ');\n        doc.attr['width'] = viewBox[2];\n        doc.attr['height'] = viewBox[3];\n    }\n\n    return btoa(doc.toString({ compressed: true }));\n}\n\nclass PNGGenerator {\n    tasksQueue: {\n        type: string;\n        subType: string;\n        imageToDraw?: ImageToDraw;\n        error?: { message: string; stack: string };\n    }[] = [];\n    worker: Worker;\n\n    constructor() {\n        // @ts-ignore\n        if (!window.Worker) {\n            throw new Error('We can not generate PNG because of browser you use. Try using different browser');\n        }\n\n        this.worker = new Worker('/js/worker.js');\n        this.worker.addEventListener('message', event => {\n            if (event.data.type === 'generateCard' || event.data.type === 'generateError') {\n                this.tasksQueue.push(event.data);\n            }\n        });\n    }\n\n    async generateCard(\n        cardSetData: CardSetData,\n        cardId: string,\n        cardIdx: number,\n        dpi: number,\n        isBack: boolean,\n        cardsetFolder: JSZip,\n    ) {\n        this.worker.postMessage({\n            type: 'generateCard',\n            cardSetData,\n            cardId,\n            isBack,\n        });\n\n        let offscreenCanvas = document.createElement('canvas');\n\n        const calculatedWidth = Math.round(dpi * (cardSetData.width / 25.4 + 1 / 4));\n        const calculatedHeight = Math.round(dpi * (cardSetData.height / 25.4 + 1 / 4));\n\n        offscreenCanvas.width = calculatedWidth;\n        offscreenCanvas.height = calculatedHeight;\n        var context = offscreenCanvas.getContext('2d');\n        if (context === null) {\n            throw new Error('We cannot generate PNG because of unknown reason. Try different browser.');\n        }\n        context.fillStyle = 'white';\n        context.fillRect(0, 0, calculatedWidth, calculatedHeight);\n\n        let stopped = false;\n\n        const ptpmm = dpi / 25.4;\n\n        while (!stopped) {\n            while (this.tasksQueue.length > 0) {\n                let task = this.tasksQueue.shift();\n\n                if (task && task.imageToDraw) {\n                    const imageToDraw = task.imageToDraw;\n\n                    if (imageToDraw.type === ImageType.SVG_PATH) {\n                        prepareImageToDrawSpace(context, imageToDraw, ptpmm);\n                        if (imageToDraw.scale && imageToDraw.color) {\n                            context.fillStyle = imageToDraw.color;\n                            context.scale(imageToDraw.scale * ptpmm, imageToDraw.scale * ptpmm);\n                            var p = new Path2D(imageToDraw.data);\n                            context.fill(p);\n                        }\n                        context.restore();\n                    } else if (imageToDraw.type === ImageType.IMAGE || imageToDraw.type === ImageType.SVG) {\n                        prepareImageToDrawSpace(context, imageToDraw, ptpmm);\n\n                        if (imageToDraw.cx !== undefined && imageToDraw.cy !== undefined) {\n                            context.translate(imageToDraw.cx * ptpmm, imageToDraw.cy * ptpmm);\n                        }\n                        let dim = calculateImageDimensions(imageToDraw);\n\n                        let image;\n                        if (imageToDraw.type === ImageType.SVG) {\n                            let svgData = fixWidthAndHeightInSvg(atob(imageToDraw.data));\n                            image = await loadImage(SVG_B64_START + svgData);\n                        } else {\n                            let resp = await axios.get(imageToDraw.data);\n                            if (resp.headers['content-type'] === 'image/svg+xml') {\n                                let svgData = fixWidthAndHeightInSvg(resp.data);\n                                image = await loadImage(SVG_B64_START + svgData);\n                            } else {\n                                image = await loadImage(imageToDraw.data);\n                            }\n                        }\n\n                        context.drawImage(image, 0, 0, dim.width * ptpmm, dim.height * ptpmm);\n\n                        context.restore();\n                    } else if (imageToDraw.type === ImageType.BLOCK_START) {\n                        prepareImageToDrawSpace(context, imageToDraw, ptpmm);\n                    } else if (imageToDraw.type === ImageType.BLOCK_END) {\n                        context.restore();\n                    }\n                }\n\n                if (task && task.subType === 'stop') {\n                    stopped = true;\n                }\n\n                if (task && task.type === 'generateError' && task.error) {\n                    let error = Error('Failed to generate PNG');\n                    error.stack = task.error.stack;\n                    throw error;\n                }\n            }\n            if (!stopped) {\n                await delay(100);\n            }\n        }\n\n        let dataUrl = offscreenCanvas.toDataURL();\n        dataUrl = dataUrl.slice('data:image/png;base64,'.length);\n        cardsetFolder.file(\n            `${cardIdx.toString().padStart(4, '0')}_${cardId}_${isBack ? 'back' : 'front'}.png`,\n            dataUrl,\n            { base64: true },\n        );\n    }\n\n    async generateGame(accessToken: string, gameId: string, dpi: number, zip: JSZip) {\n        let resp = await getRequest('/api/games/' + gameId, accessToken);\n        if (!resp) return;\n\n        const cardsetsList = resp.data.cardsets;\n        for (const cardsetInfo of cardsetsList) {\n            await this.generateCardset(accessToken, cardsetInfo.id, dpi, zip);\n        }\n    }\n\n    async generateCardset(accessToken: string, cardsetId: string, dpi: number, zip: JSZip) {\n        const resp = await getRequest('/api/cardsets/' + cardsetId, accessToken);\n        if (!resp) return;\n\n        let cardSetData: CardSetData = JSON.parse(resp.data.data);\n\n        let cardsetFolder = zip.folder(resp.data.name);\n\n        for (const [cardIdx, cardId] of cardSetData.cardsAllIds.entries()) {\n            await this.generateCard(cardSetData, cardId, cardIdx, dpi, false, cardsetFolder);\n            if (cardSetData.isTwoSided) {\n                await this.generateCard(cardSetData, cardId, cardIdx, dpi, true, cardsetFolder);\n            }\n        }\n    }\n}\n\nexport const generatePngUsingWorker = async (\n    accessToken: string,\n    collectionType: string,\n    collectionId: string,\n    dpi: number,\n) => {\n    const pngGenerator = new PNGGenerator();\n\n    let zip = new JSZip();\n\n    if (collectionType === 'games') {\n        await pngGenerator.generateGame(accessToken, collectionId, dpi, zip);\n    } else if (collectionType === 'cardsets') {\n        await pngGenerator.generateCardset(accessToken, collectionId, dpi, zip);\n    }\n\n    let blob = await zip.generateAsync({ type: 'blob' });\n    let url = window.URL.createObjectURL(blob);\n    downloadBlob(url, 'cards.zip');\n};\n","export function saveTokens(data: { accessToken: string; refreshToken: string }) {\n    localStorage.setItem('accessToken', data.accessToken);\n    localStorage.setItem('refreshToken', data.refreshToken);\n}\n\nexport function saveAccessToken(accessToken: string) {\n    localStorage.setItem('accessToken', accessToken);\n}\n\nexport function cleanTokens() {\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n}\n\nexport function getTokenFromStorage() {\n    let token = localStorage.getItem('accessToken') || null;\n    return token;\n}\n\nexport function getRefreshTokenFromStorage() {\n    let token = localStorage.getItem('refreshToken') || null;\n    return token;\n}\n","import WebFont from 'webfontloader';\n\nimport { DEFAULT_FONT } from './constants';\nimport { CardSetSelectSuccessDataV3 } from './actions';\n\nconst webFontsLoadPromise = (config: WebFont.Config) =>\n    new Promise((resolve, reject) => {\n        WebFont.load({ ...config, active: resolve, inactive: reject });\n    });\n\nexport const loadFontsUsedInPlaceholders = (data: CardSetSelectSuccessDataV3) => {\n    if (!('fieldsAllIds' in data)) {\n        return;\n    }\n\n    let fontsToLoad: Set<string> = new Set();\n    fontsToLoad.add(DEFAULT_FONT);\n    for (const fieldId of data.fieldsAllIds) {\n        const field = data.fields[data.cardsAllIds[0]][fieldId];\n        if (field && field.type === 'text' && field.fontFamily) {\n            let fontToLoad = field.fontFamily;\n            if (field.fontVariant && field.fontVariant !== 'regular') {\n                fontToLoad += ':' + field.fontVariant;\n            }\n\n            fontsToLoad.add(fontToLoad);\n        }\n    }\n\n    const config: WebFont.Config = {\n        google: {\n            families: [...Array.from(fontsToLoad)],\n        },\n    };\n\n    return webFontsLoadPromise(config);\n};\n","import { CancelToken } from 'axios';\nimport { XmlDocument, XmlNode } from 'xmldoc';\nimport { all, call, put, select, takeEvery, takeLatest } from 'redux-saga/effects';\nimport { delay, SagaIterator } from 'redux-saga';\nimport jwtDecode from 'jwt-decode';\nimport { ActionCreators } from 'redux-undo';\n\nimport { BLEED_WIDTH, CURRENT_CARDSET_VERSION } from './constants';\nimport {\n    CARDSET_ADD_IMAGE_FIELD,\n    CARDSET_ADD_TEXT_FIELD,\n    CARDSET_CHANGE_ACTIVE_FIELD_NAME,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT,\n    CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD,\n    CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD,\n    CARDSET_CHANGE_HEIGHT,\n    CARDSET_CHANGE_IMAGE,\n    CARDSET_CHANGE_IS_TWO_SIDED,\n    CARDSET_CHANGE_FIELD_ANGLE,\n    CARDSET_CHANGE_FIELD_SIZE,\n    CARDSET_CHANGE_SNAPPING_DISTANCE,\n    CARDSET_CHANGE_TEXT,\n    CARDSET_CHANGE_WIDTH,\n    CARDSET_CLONE_CARD,\n    CARDSET_CREATE_CARD,\n    CARDSET_CREATE_FAILURE,\n    CARDSET_CREATE_REQUEST,\n    CARDSET_CREATE_SUCCESS,\n    CARDSET_DELETE_IMAGE,\n    CARDSET_DELETE_REQUEST,\n    CARDSET_IMPORT_DATA,\n    CARDSET_LIST_RESET,\n    CARDSET_LIST_SUCCESS,\n    CARDSET_LOCK_ACTIVE_FIELD,\n    CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM,\n    CARDSET_RAISE_ACTIVE_FIELD_TO_TOP,\n    CARDSET_REMOVE_ACTIVE_FIELD,\n    CARDSET_REMOVE_CARD,\n    CARDSET_RENAME_REQUEST,\n    CARDSET_SELECT_FAILURE,\n    CARDSET_SELECT_REQUEST,\n    CARDSET_SELECT_SUCCESS,\n    CARDSET_SET_ZOOM,\n    CARDSET_UNLOCK_ACTIVE_FIELD,\n    CARDSET_UPDATE_CARD_COUNT,\n    CARDSET_UPLOAD_IMAGE,\n    CARDSET_UPLOAD_IMAGE_FAILURE,\n    CARDSET_UPLOAD_IMAGE_SUCCESS,\n    CardSetChangeFitForActiveField,\n    CardSetChangeImage,\n    CardSetCreateRequest,\n    CardSetDeleteImage,\n    CardSetDeleteRequest,\n    CardSetRenameRequest,\n    CardSetSelectRequest,\n    CardSetUploadImage,\n    GAME_CREATE_PDF_FAILURE,\n    GAME_CREATE_PDF_REQUEST,\n    GAME_CREATE_PDF_SUCCESS,\n    GAME_CREATE_PNG_FAILURE,\n    GAME_CREATE_PNG_REQUEST,\n    GAME_CREATE_PNG_SUCCESS,\n    GAME_CREATE_REQUEST,\n    GAME_CREATE_SUCCESS,\n    GAME_DELETE_REQUEST,\n    GAME_LIST_FAILURE,\n    GAME_LIST_REQUEST,\n    GAME_LIST_RESET,\n    GAME_LIST_SUCCESS,\n    GAME_RENAME_REQUEST,\n    GAME_SELECT_FAILURE,\n    GAME_SELECT_REQUEST,\n    GAME_SELECT_SUCCESS,\n    GameCreatePdfRequest,\n    GameCreatePngRequest,\n    GameCreateRequest,\n    GameDeleteRequest,\n    GameRenameRequest,\n    GameSelectRequest,\n    IMAGE_LIST_FAILURE,\n    IMAGE_LIST_REQUEST,\n    IMAGE_LIST_SUCCESS,\n    INIT_REQUEST,\n    ImageListRequest,\n    LOGIN_FAILURE,\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGOUT_FAILURE,\n    LOGOUT_REQUEST,\n    LOGOUT_SUCCESS,\n    LoginRequest,\n    MESSAGE_DISPLAY,\n    MESSAGE_HIDE,\n    MessageDisplay,\n    SIGNUP_FAILURE,\n    SIGNUP_REQUEST,\n    SIGNUP_SUCCESS,\n    SignUpRequest,\n    cardSetChangeImageBase64,\n    gameSelectRequest,\n    messageDisplay,\n    CARDSET_CHANGE_FIELD_PAN,\n    CARDSET_CHANGE_FIELD_ZOOM,\n    CARDSETS_SELECT_SUCCESS,\n    CARDSET_CHANGE_FIELD_POSITION,\n    CardSetSelectSuccessData,\n    CardSetSelectSuccessDataV2,\n    CardSetSelectSuccessDataV3,\n    CARDSET_UNDO,\n    CARDSET_REDO,\n    CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD,\n} from './actions';\nimport { CardSetType, CardSetsCollection, GameType, GamesCollection, FieldInfoByCardCollection } from './types';\nimport { State } from './reducers';\nimport {\n    deleteAccessToken,\n    deleteRefreshToken,\n    deleteRequest,\n    getRequest,\n    getTokens,\n    postRequest,\n    postRequestFormDataCancelable,\n    putRequest,\n    refreshToken,\n    registerUser,\n} from './requests';\nimport { generatePdfUsingWorker, generatePngUsingWorker } from './workerController';\nimport { getTokenFromStorage, getRefreshTokenFromStorage, saveAccessToken, saveTokens, cleanTokens } from './storage';\nimport { loadFontsUsedInPlaceholders } from './fontLoader';\nimport { reportError } from './utils';\n\n// Messages\nexport function* putError(e: Error): SagaIterator {\n    yield put(messageDisplay('error', e.message));\n    if (process.env.NODE_ENV === 'development') {\n        yield call(console.log, e.stack);\n    } else {\n        yield call(reportError, e.stack || e.message);\n    }\n}\n\nexport function* putInfo(message: string): SagaIterator {\n    yield put(messageDisplay('info', message));\n}\n\nexport function* putProgress(text: string): SagaIterator {\n    const message = messageDisplay('progress', text, text);\n    yield put(message);\n    return message.message.id;\n}\n\nexport function* hideProgress(messageId: string): SagaIterator {\n    yield put({ type: MESSAGE_HIDE, messageId });\n}\n\nexport function* handleMessageDisplay(action: MessageDisplay): SagaIterator {\n    if (action.message.type === 'progress') return;\n\n    yield call(delay, 5000);\n    yield put({ type: MESSAGE_HIDE, messageId: action.message.id });\n}\n\n// Login & Signup\n// Token handling\n\nexport function validateToken(token: string): boolean {\n    try {\n        const decoded = jwtDecode<{ exp: number }>(token);\n        const valid = decoded.exp - new Date().getTime() / 1000 > 5;\n        return valid;\n    } catch (e) {\n        return false;\n    }\n}\n\nexport function* getToken(withErrorIfMissing: boolean, getFreshToken = false): SagaIterator {\n    const token = yield call(getTokenFromStorage);\n    if (token && !getFreshToken) {\n        const tokenValid = yield call(validateToken, token);\n        if (tokenValid) return token;\n    }\n\n    const refreshTokenValue = yield call(getRefreshTokenFromStorage);\n    if (!refreshTokenValue) {\n        if (withErrorIfMissing) throw new Error('Token not found.');\n        return null;\n    }\n\n    const refreshTokenValid = yield call(validateToken, refreshTokenValue);\n    if (!refreshTokenValid) {\n        yield put({ type: LOGOUT_REQUEST });\n        if (withErrorIfMissing) throw new Error('Token not found.');\n        return null;\n    }\n\n    const newToken = yield call(refreshToken, refreshTokenValue);\n    yield call(saveAccessToken, newToken);\n    return newToken;\n}\n\n// Login\n\nexport function* handleLoginRequest(action: LoginRequest): SagaIterator {\n    try {\n        const data = yield call(getTokens, action.creds);\n        yield call(saveTokens, data);\n        yield put({ type: LOGIN_SUCCESS });\n    } catch (e) {\n        yield put({ type: LOGIN_FAILURE });\n        yield call(putError, e);\n    }\n}\n\nexport function* handleLoginSuccess(): SagaIterator {\n    yield put({ type: GAME_LIST_REQUEST });\n}\n\n// Logout\n\nexport function* logoutToken(): SagaIterator {\n    const token = yield call(getTokenFromStorage);\n    if (token) {\n        const tokenValid = yield call(validateToken, token);\n        if (tokenValid) {\n            yield call(deleteAccessToken, token);\n        }\n    }\n}\n\nexport function* logoutRefreshToken(): SagaIterator {\n    const refreshTokenValue = yield call(getRefreshTokenFromStorage);\n    if (refreshTokenValue) {\n        const refreshTokenValid = yield call(validateToken, refreshTokenValue);\n        if (refreshTokenValid) {\n            yield call(deleteRefreshToken, refreshTokenValue);\n        }\n    }\n}\n\nexport function* handleLogoutRequest(): SagaIterator {\n    try {\n        yield call(logoutToken);\n        yield call(logoutRefreshToken);\n        yield call(cleanTokens);\n\n        yield put({ type: CARDSET_LIST_RESET });\n        yield put({ type: GAME_LIST_RESET });\n        yield put({ type: LOGOUT_SUCCESS });\n    } catch (e) {\n        yield put({ type: LOGOUT_FAILURE });\n        yield call(putError, e);\n    }\n}\n\n// Sign-up\n\nexport function* handleSignupRequest(action: SignUpRequest): SagaIterator {\n    try {\n        const data = yield call(registerUser, action.creds);\n        yield call(saveTokens, data);\n        yield put({ type: SIGNUP_SUCCESS });\n        yield put({ type: LOGIN_SUCCESS });\n    } catch (e) {\n        yield put({ type: SIGNUP_FAILURE });\n        yield call(putError, e);\n    }\n}\n\n// Init\nexport function* handleInitRequest(): SagaIterator {\n    try {\n        let token = yield call(getToken, false);\n        if (token) {\n            yield put({ type: LOGIN_SUCCESS });\n        }\n    } catch (e) {}\n}\n\n// Authorized Requests\nexport function* authorizedGetRequest(url: string): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(getRequest, url, token);\n}\n\nexport function* authorizedPostRequest(url: string, data: object): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(postRequest, url, token, data);\n}\n\nexport function* authorizedDeleteRequest(url: string): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(deleteRequest, url, token);\n}\n\nexport function* authorizedPostFormDataRequest(\n    url: string,\n    data: FormData,\n    progressCallback: (event: ProgressEvent) => void,\n    cancelToken: CancelToken,\n    cancelCallback: () => void,\n): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(postRequestFormDataCancelable, url, token, data, progressCallback, cancelToken, cancelCallback);\n}\n\nexport function* authorizedPutRequest(url: string, data: object): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(putRequest, url, token, data);\n}\n\n// Game\nexport function* handleGameCreateRequest(action: GameCreateRequest): SagaIterator {\n    try {\n        yield call(authorizedPostRequest, '/api/games', { name: action.gamename });\n        yield put({\n            type: GAME_CREATE_SUCCESS,\n        });\n        yield put({ type: GAME_LIST_REQUEST });\n    } catch (e) {\n        yield call(putError, e);\n    }\n}\n\nexport function* handleGameDeleteRequest(action: GameDeleteRequest): SagaIterator {\n    try {\n        yield call(authorizedDeleteRequest, '/api/games/' + action.gameId);\n        yield put({ type: GAME_LIST_REQUEST });\n    } catch (e) {\n        yield call(putError, e);\n    }\n}\n\nexport function* handleGameRenameRequest(action: GameRenameRequest): SagaIterator {\n    try {\n        yield call(delay, 500);\n        yield call(authorizedPutRequest, '/api/games/' + action.gameId, { name: action.newName });\n    } catch (e) {\n        yield call(putError, e);\n    }\n}\n\nexport function* handleGameListRequest(): SagaIterator {\n    try {\n        const resp = yield call(authorizedGetRequest, '/api/games');\n        const allIds = resp.data.games.map((g: GameType) => g.id);\n        const byId = resp.data.games.reduce((obj: GamesCollection, g: GameType) => {\n            obj[g.id] = g;\n            return obj;\n        }, {});\n        yield put({\n            type: GAME_LIST_SUCCESS,\n            allIds,\n            byId,\n        });\n    } catch (e) {\n        yield put({ type: GAME_LIST_FAILURE });\n        yield call(putError, e);\n    }\n}\n\nexport function* handleGameSelectRequest(action: GameSelectRequest): SagaIterator {\n    try {\n        const resp = yield call(authorizedGetRequest, '/api/games/' + action.id);\n        yield put({\n            type: GAME_SELECT_SUCCESS,\n            id: action.id,\n        });\n\n        if (action.updateCardSets) {\n            const allIds = resp.data.cardsets.map((g: CardSetType) => g.id);\n            const byId = resp.data.cardsets.reduce((obj: CardSetsCollection, g: CardSetType) => {\n                obj[g.id] = g;\n                return obj;\n            }, {});\n            yield put({\n                type: CARDSET_LIST_SUCCESS,\n                allIds,\n                byId,\n            });\n        }\n    } catch (e) {\n        yield put({ type: GAME_SELECT_FAILURE });\n        yield call(putError, e);\n    }\n}\n\nexport function* handleGameCreatePdfRequest(action: GameCreatePdfRequest): SagaIterator {\n    let progressId = null;\n    try {\n        progressId = yield call(putProgress, 'Generating PDF');\n\n        const token = yield call(getToken, true, true);\n\n        yield call(\n            generatePdfUsingWorker,\n            token,\n            action.collectionType,\n            action.collectionId,\n            action.pageWidth,\n            action.pageHeight,\n            action.topBottomMargin,\n            action.leftRightMargin,\n            action.verticalSpace,\n            action.horizontalSpace,\n            action.includeBleedingArea,\n            action.cutMarksForScissors,\n            action.cutMarksForGuillotine,\n            action.cutMarksInMarginArea,\n            action.cutMarksOnFrontSideOnly,\n        );\n        yield call(hideProgress, progressId);\n        yield call(putInfo, 'PDF generated.');\n        yield put({\n            type: GAME_CREATE_PDF_SUCCESS,\n        });\n    } catch (e) {\n        yield put({ type: GAME_CREATE_PDF_FAILURE });\n        if (progressId !== null) yield call(hideProgress, progressId);\n        yield call(putError, e);\n    }\n}\n\nexport function* handleGameCreatePngRequest(action: GameCreatePngRequest): SagaIterator {\n    let progressId = null;\n    try {\n        progressId = yield call(putProgress, 'Generating PNG');\n\n        const token = yield call(getToken, true, true);\n\n        yield call(generatePngUsingWorker, token, action.collectionType, action.collectionId, action.dpi);\n        yield call(hideProgress, progressId);\n        yield call(putInfo, 'PNG generated.');\n        yield put({\n            type: GAME_CREATE_PNG_SUCCESS,\n        });\n    } catch (e) {\n        yield put({ type: GAME_CREATE_PNG_FAILURE });\n        if (progressId !== null) yield call(hideProgress, progressId);\n        yield call(putError, e);\n    }\n}\n\n// Card Set\n\nexport function* handleCardSetCreateRequest(action: CardSetCreateRequest): SagaIterator {\n    try {\n        yield call(authorizedPostRequest, '/api/cardsets', {\n            name: action.cardsetname,\n            gameId: action.gameId,\n            data: JSON.stringify({ width: action.width, height: action.height, version: CURRENT_CARDSET_VERSION }),\n        });\n        yield put({\n            type: CARDSET_CREATE_SUCCESS,\n        });\n        yield put(gameSelectRequest(action.gameId, true));\n    } catch (e) {\n        yield put({ type: CARDSET_CREATE_FAILURE });\n        yield call(putError, e);\n    }\n}\n\nexport function* handleCardSetDeleteRequest(action: CardSetDeleteRequest): SagaIterator {\n    try {\n        yield call(authorizedDeleteRequest, '/api/cardsets/' + action.cardSetId);\n        yield put({ type: GAME_LIST_REQUEST });\n\n        const state = yield select();\n        yield put(gameSelectRequest(state.games.active, true));\n    } catch (e) {\n        yield call(putError, e);\n    }\n}\n\nexport function* handleCardSetRenameRequest(action: CardSetRenameRequest): SagaIterator {\n    try {\n        yield call(delay, 500);\n        yield call(authorizedPutRequest, '/api/cardsets/' + action.cardSetId, { name: action.newName });\n    } catch (e) {\n        yield call(putError, e);\n    }\n}\n\nfunction loadImageInfo(url: string): Promise<{ width: number; height: number }> {\n    return new Promise((resolve, reject) => {\n        try {\n            let img = new Image();\n\n            img.addEventListener('load', function() {\n                resolve({\n                    width: this.naturalWidth,\n                    height: this.naturalHeight,\n                });\n            });\n            img.src = url;\n        } catch (e) {\n            reject(e);\n        }\n    });\n}\n\nexport async function processData(data: CardSetSelectSuccessData): Promise<CardSetSelectSuccessDataV3> {\n    let processedData = data;\n\n    if (!('version' in processedData)) {\n        if (!('placeholdersAllIds' in processedData) && 'placeholders' in processedData) {\n            (processedData as CardSetSelectSuccessDataV2).placeholdersAllIds = Object.keys(\n                (processedData as CardSetSelectSuccessDataV2).placeholders,\n            );\n        }\n\n        (processedData as CardSetSelectSuccessDataV2).version = 2;\n        for (const plId in (processedData as CardSetSelectSuccessDataV2).placeholders) {\n            const placeholder = (processedData as CardSetSelectSuccessDataV2).placeholders[plId];\n            placeholder.x += BLEED_WIDTH;\n            placeholder.y += BLEED_WIDTH;\n        }\n    }\n\n    if (processedData.version === 2) {\n        let fieldsAllIds = processedData.placeholdersAllIds;\n        let fields: FieldInfoByCardCollection = {};\n\n        for (const cardId of processedData.cardsAllIds) {\n            fields[cardId] = {};\n\n            for (const fieldId of fieldsAllIds) {\n                let placeholder = processedData.placeholders[fieldId];\n                if (placeholder.type === 'image') {\n                    if (cardId in processedData.images && fieldId in processedData.images[cardId]) {\n                        let imageInfo = processedData.images[cardId][fieldId];\n                        fields[cardId][fieldId] = {\n                            type: 'image',\n                            ...placeholder,\n                            url: imageInfo && imageInfo.url,\n                            global: imageInfo && imageInfo.global,\n                            base64: imageInfo && imageInfo.base64,\n                            color: imageInfo && imageInfo.color,\n                            imageWidth: imageInfo && imageInfo.width,\n                            imageHeight: imageInfo && imageInfo.height,\n                        };\n                    } else {\n                        fields[cardId][fieldId] = {\n                            type: 'image',\n                            ...placeholder,\n                        };\n                    }\n                } else if (placeholder.type === 'text') {\n                    if (cardId in processedData.texts && fieldId in processedData.texts[cardId]) {\n                        fields[cardId][fieldId] = {\n                            type: 'text',\n                            ...placeholder,\n                            ...processedData.texts[cardId][fieldId],\n                        };\n                    } else {\n                        fields[cardId][fieldId] = {\n                            type: 'text',\n                            ...placeholder,\n                            value: '',\n                        };\n                    }\n                }\n            }\n        }\n\n        processedData = {\n            version: 3,\n            width: processedData.width,\n            height: processedData.height,\n            isTwoSided: processedData.isTwoSided,\n            snappingDistance: processedData.snappingDistance,\n            cardsAllIds: processedData.cardsAllIds,\n            cardsById: processedData.cardsById,\n            fields,\n            fieldsAllIds,\n            zoom: processedData.zoom,\n        };\n    }\n\n    // We must load image data on each new load because user can upload new images\n    // that have different dimensions.\n    for (const cardId in processedData.fields) {\n        for (const fieldId in processedData.fields[cardId]) {\n            const fieldInfo = processedData.fields[cardId][fieldId];\n            if (fieldInfo.type === 'image' && fieldInfo.url) {\n                let info = await loadImageInfo(fieldInfo.url);\n                if (info.width !== fieldInfo.imageWidth || info.height !== fieldInfo.imageHeight) {\n                    fieldInfo.imageWidth = info.width;\n                    fieldInfo.imageHeight = info.height;\n                    fieldInfo.cx = 0;\n                    fieldInfo.cy = 0;\n                    fieldInfo.zoom = 1;\n                }\n            }\n        }\n    }\n\n    return processedData;\n}\n\nexport function* handleCardSetSelectRequest(action: CardSetSelectRequest): SagaIterator {\n    try {\n        const resp = yield call(authorizedGetRequest, '/api/cardsets/' + action.id);\n        let parsedData = JSON.parse(resp.data.data);\n        let processedData: CardSetSelectSuccessDataV3 = yield call(processData, parsedData);\n\n        yield call(loadFontsUsedInPlaceholders, processedData);\n        yield put({\n            type: CARDSETS_SELECT_SUCCESS,\n            id: resp.data.id,\n            name: resp.data.name,\n        });\n        yield put({\n            type: CARDSET_SELECT_SUCCESS,\n            data: processedData,\n        });\n        yield put(gameSelectRequest(resp.data.gameId, false));\n        yield put(ActionCreators.clearHistory());\n    } catch (e) {\n        yield put({ type: CARDSET_SELECT_FAILURE });\n        yield call(putError, e);\n    }\n}\n\nexport function* handleCardSetUploadImage(action: CardSetUploadImage): SagaIterator {\n    let progressId = null;\n    try {\n        progressId = yield call(putProgress, `Uploading ${action.file.name}`);\n        const formData = new FormData();\n        formData.set('gameId', action.gameId);\n        formData.append('image', action.file, action.file.name);\n\n        const data = yield call(\n            authorizedPostFormDataRequest,\n            '/api/images',\n            formData,\n            (event: ProgressEvent) => action.progress(event.lengthComputable, event.loaded, event.total),\n            action.cancelToken,\n            () => {\n                action.abort();\n            },\n        );\n        if (data !== undefined) {\n            // not cancelled\n            action.load(data.imageId.toString());\n            yield put({ type: CARDSET_UPLOAD_IMAGE_SUCCESS });\n            yield call(putInfo, `${action.file.name} uploaded`);\n        }\n        yield call(hideProgress, progressId);\n    } catch (e) {\n        yield put({ type: CARDSET_UPLOAD_IMAGE_FAILURE });\n        if (progressId !== null) yield call(hideProgress, progressId);\n        yield call(putError, e);\n        action.error(e.message);\n    }\n}\n\nexport function* handleCardSetDeleteImage(action: CardSetDeleteImage): SagaIterator {\n    try {\n        yield call(authorizedDeleteRequest, '/api/images/' + action.imageId);\n        action.load();\n    } catch (e) {\n        action.error(e.message);\n    }\n}\n\nfunction walkChildren(node: XmlNode, color: string) {\n    if (node.type === 'element') {\n        for (let child of node.children) {\n            if (child.type === 'element')\n                if (child.name === 'path') {\n                    child.attr['fill'] = color;\n                }\n            walkChildren(child, color);\n        }\n    }\n}\n\nfunction adjustSvg(data: string, preserveAspectRatio: boolean, color?: string): string {\n    const doc = new XmlDocument(data);\n    if (!preserveAspectRatio) {\n        doc.attr['preserveAspectRatio'] = 'none';\n    }\n\n    if (color) {\n        walkChildren(doc, color);\n    }\n\n    return btoa(doc.toString({ compressed: true }));\n}\n\nexport function* handleCardSetFitChange(action: CardSetChangeFitForActiveField): SagaIterator {\n    try {\n        yield call(delay, 100);\n        const state: State = yield select();\n\n        if (state.cardset.present.activeFieldId === undefined) {\n            return;\n        }\n\n        for (const cardId in state.cardset.present.cardsById) {\n            const fieldInfo = state.cardset.present.fields[cardId][state.cardset.present.activeFieldId];\n            if (fieldInfo.type === 'image' && fieldInfo.url) {\n                const imageResp = yield call(authorizedGetRequest, fieldInfo.url);\n                if (imageResp.headers['content-type'] === 'image/svg+xml') {\n                    if (action.fit === 'stretch') {\n                        const svg = adjustSvg(imageResp.data, false, fieldInfo.color);\n                        yield put(cardSetChangeImageBase64(cardId, state.cardset.present.activeFieldId, svg));\n                    } else if (fieldInfo.color) {\n                        const svg = adjustSvg(imageResp.data, true, fieldInfo.color);\n                        yield put(cardSetChangeImageBase64(cardId, state.cardset.present.activeFieldId, svg));\n                    } else {\n                        yield put(cardSetChangeImageBase64(cardId, state.cardset.present.activeFieldId, undefined));\n                    }\n                }\n            }\n        }\n    } catch (e) {\n        yield call(putError, e);\n    }\n}\n\nexport function* handleCardSetChangeImage(action: CardSetChangeImage): SagaIterator {\n    try {\n        yield call(delay, 100);\n        const state: State = yield select();\n\n        const cardFields = state.cardset.present.fields[action.cardId];\n        const imageInfo = cardFields[action.fieldId];\n        if (imageInfo.type === 'image' && imageInfo.url) {\n            const imageResp = yield call(authorizedGetRequest, imageInfo.url);\n\n            if (imageResp.headers['content-type'] === 'image/svg+xml') {\n                const name = imageInfo.name || imageInfo.id;\n\n                for (const fieldId in cardFields) {\n                    const fieldInfo = cardFields[fieldId];\n\n                    if ((fieldInfo.name === name || fieldInfo.id === name) && fieldInfo.type === 'image') {\n                        if (fieldInfo.fit === 'stretch') {\n                            const svg = adjustSvg(imageResp.data, false, imageInfo.color);\n                            yield put(cardSetChangeImageBase64(action.cardId, fieldId, svg));\n                        } else if (imageInfo.color) {\n                            const svg = adjustSvg(imageResp.data, true, imageInfo.color);\n                            yield put(cardSetChangeImageBase64(action.cardId, fieldId, svg));\n                        } else {\n                            yield put(cardSetChangeImageBase64(action.cardId, fieldId, undefined));\n                        }\n                    }\n                }\n            }\n        }\n    } catch (e) {\n        yield call(putError, e);\n    }\n}\n\nfunction closeHandler(e: Event) {\n    e.preventDefault();\n    e.returnValue = true;\n}\n\nfunction preventWindowClose() {\n    window.addEventListener('beforeunload', closeHandler);\n}\n\nfunction allowWindowClose() {\n    window.removeEventListener('beforeunload', closeHandler);\n}\n\nexport function* handleCardSetChange(): SagaIterator {\n    let progressId = null;\n\n    try {\n        preventWindowClose();\n        progressId = yield call(putProgress, 'Saving Card Set');\n\n        yield call(delay, 1000);\n        const state: State = yield select();\n\n        const cardsetId = state.cardsets.active;\n        if (cardsetId === null) throw Error('Save failed.');\n        const data = {\n            width: state.cardset.present.width,\n            height: state.cardset.present.height,\n            isTwoSided: state.cardset.present.isTwoSided,\n            snappingDistance: state.cardset.present.snappingDistance,\n            version: state.cardset.present.version,\n            cardsAllIds: state.cardset.present.cardsAllIds,\n            cardsById: state.cardset.present.cardsById,\n            fieldsAllIds: state.cardset.present.fieldsAllIds,\n            fields: state.cardset.present.fields,\n            zoom: state.cardset.present.zoom,\n        };\n\n        yield call(authorizedPutRequest, '/api/cardsets/' + cardsetId, {\n            name: state.cardsets.byId[cardsetId].name,\n            data: JSON.stringify(data),\n        });\n        yield call(hideProgress, progressId);\n        yield call(putInfo, 'Card Set saved');\n        allowWindowClose();\n    } catch (e) {\n        if (progressId !== null) yield call(hideProgress, progressId);\n        yield call(putError, e);\n        allowWindowClose();\n    }\n}\n\n// Images\nexport function* handleImageListRequest(action: ImageListRequest): SagaIterator {\n    try {\n        yield call(delay, 200);\n        const state = yield select();\n\n        const filter = encodeURIComponent(action.filter);\n        const location = encodeURIComponent(action.location);\n        const game = encodeURIComponent(state.games.active);\n        const resp = yield call(authorizedGetRequest, `/api/images?name=${filter}&location=${location}&game=${game}`);\n        const images = resp.data.images;\n        yield put({\n            type: IMAGE_LIST_SUCCESS,\n            images,\n        });\n    } catch (e) {\n        yield put({ type: IMAGE_LIST_FAILURE });\n        yield call(putError, e);\n    }\n}\n\n// All\nexport function* rootSaga(): SagaIterator {\n    yield all([\n        takeEvery(MESSAGE_DISPLAY, handleMessageDisplay),\n        takeLatest(LOGIN_REQUEST, handleLoginRequest),\n        takeLatest(LOGIN_SUCCESS, handleLoginSuccess),\n        takeLatest(LOGOUT_REQUEST, handleLogoutRequest),\n        takeLatest(SIGNUP_REQUEST, handleSignupRequest),\n        takeLatest(GAME_CREATE_REQUEST, handleGameCreateRequest),\n        takeLatest(GAME_DELETE_REQUEST, handleGameDeleteRequest),\n        takeLatest(GAME_RENAME_REQUEST, handleGameRenameRequest),\n        takeLatest(GAME_LIST_REQUEST, handleGameListRequest),\n        takeLatest(GAME_SELECT_REQUEST, handleGameSelectRequest),\n        takeLatest(GAME_CREATE_PDF_REQUEST, handleGameCreatePdfRequest),\n        takeLatest(GAME_CREATE_PNG_REQUEST, handleGameCreatePngRequest),\n        takeLatest(CARDSET_CREATE_REQUEST, handleCardSetCreateRequest),\n        takeLatest(CARDSET_DELETE_REQUEST, handleCardSetDeleteRequest),\n        takeLatest(CARDSET_RENAME_REQUEST, handleCardSetRenameRequest),\n        takeLatest(CARDSET_SELECT_REQUEST, handleCardSetSelectRequest),\n        takeEvery(CARDSET_UPLOAD_IMAGE, handleCardSetUploadImage),\n        takeEvery(CARDSET_DELETE_IMAGE, handleCardSetDeleteImage),\n        takeEvery(CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD, handleCardSetFitChange),\n        takeEvery(CARDSET_CHANGE_IMAGE, handleCardSetChangeImage),\n\n        takeLatest(CARDSET_CREATE_CARD, handleCardSetChange),\n        takeLatest(CARDSET_CLONE_CARD, handleCardSetChange),\n        takeLatest(CARDSET_REMOVE_CARD, handleCardSetChange),\n        takeLatest(CARDSET_UPDATE_CARD_COUNT, handleCardSetChange),\n        takeLatest(CARDSET_ADD_TEXT_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_ADD_IMAGE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_FIELD_NAME, handleCardSetChange),\n        takeLatest(CARDSET_REMOVE_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_RAISE_ACTIVE_FIELD_TO_TOP, handleCardSetChange),\n        takeLatest(CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM, handleCardSetChange),\n        takeLatest(CARDSET_LOCK_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_UNLOCK_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_WIDTH, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_HEIGHT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_IS_TWO_SIDED, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_SNAPPING_DISTANCE, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_FIELD_POSITION, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_FIELD_PAN, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_FIELD_ZOOM, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_FIELD_SIZE, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_FIELD_ANGLE, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_TEXT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_IMAGE, handleCardSetChange),\n        takeLatest(CARDSET_SET_ZOOM, handleCardSetChange),\n        takeLatest(CARDSET_IMPORT_DATA, handleCardSetChange),\n        takeLatest(CARDSET_UNDO, handleCardSetChange),\n        takeLatest(CARDSET_REDO, handleCardSetChange),\n\n        takeLatest(IMAGE_LIST_REQUEST, handleImageListRequest),\n\n        takeLatest(INIT_REQUEST, handleInitRequest),\n    ]);\n}\n","import { combineReducers } from 'redux';\nimport shortid from 'shortid';\nimport undoable from 'redux-undo';\n\nimport {\n    CARDSET_ADD_IMAGE_FIELD,\n    CARDSET_ADD_TEXT_FIELD,\n    CARDSET_CHANGE_ACTIVE_FIELD_NAME,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT,\n    CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD,\n    CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD,\n    CARDSET_CHANGE_HEIGHT,\n    CARDSET_CHANGE_IMAGE,\n    CARDSET_CHANGE_IMAGE_BASE64,\n    CARDSET_CHANGE_IS_TWO_SIDED,\n    CARDSET_CHANGE_FIELD_ANGLE,\n    CARDSET_CHANGE_FIELD_SIZE,\n    CARDSET_CHANGE_SNAPPING_DISTANCE,\n    CARDSET_CHANGE_TEXT,\n    CARDSET_CHANGE_WIDTH,\n    CARDSET_CLONE_CARD,\n    CARDSET_CREATE_CARD,\n    CARDSET_IMPORT_DATA,\n    CARDSET_LIST_RESET,\n    CARDSET_LIST_SUCCESS,\n    CARDSET_LOCK_ACTIVE_FIELD,\n    CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM,\n    CARDSET_RAISE_ACTIVE_FIELD_TO_TOP,\n    CARDSET_REMOVE_ACTIVE_FIELD,\n    CARDSET_REMOVE_CARD,\n    CARDSET_RENAME_REQUEST,\n    CARDSET_SELECT_FAILURE,\n    CARDSET_SELECT_REQUEST,\n    CARDSET_SELECT_SUCCESS,\n    CARDSET_SET_ACTIVE_CARD_AND_FIELD,\n    CARDSET_SET_SIDEBAR_STATE,\n    CARDSET_SET_ZOOM,\n    CARDSET_UNLOCK_ACTIVE_FIELD,\n    CARDSET_UPDATE_CARD_COUNT,\n    CardSetAction,\n    GAME_CREATE_PDF_FAILURE,\n    GAME_CREATE_PDF_REQUEST,\n    GAME_CREATE_PDF_SUCCESS,\n    GAME_CREATE_PNG_FAILURE,\n    GAME_CREATE_PNG_REQUEST,\n    GAME_CREATE_PNG_SUCCESS,\n    GAME_LIST_RESET,\n    GAME_LIST_SUCCESS,\n    GAME_RENAME_REQUEST,\n    GAME_SELECT_FAILURE,\n    GAME_SELECT_REQUEST,\n    GAME_SELECT_SUCCESS,\n    GameAction,\n    IMAGE_LIST_REQUEST,\n    IMAGE_LIST_SUCCESS,\n    ImageListAction,\n    LOGIN_FAILURE,\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGOUT_SUCCESS,\n    LoginAction,\n    MESSAGE_DISPLAY,\n    MESSAGE_HIDE,\n    MessageAction,\n    SIGNUP_FAILURE,\n    SIGNUP_REQUEST,\n    SIGNUP_SUCCESS,\n    SidebarState,\n    SignUpAction,\n    CARDSET_CHANGE_FIELD_ZOOM,\n    CARDSET_CHANGE_FIELD_PAN,\n    CardSetsAction,\n    CARDSETS_SELECT_SUCCESS,\n    CARDSET_CHANGE_FIELD_POSITION,\n    CARDSET_UNDO,\n    CARDSET_REDO,\n    Action,\n    CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD,\n} from './actions';\nimport {\n    CURRENT_CARDSET_VERSION,\n    DEFAULT_FONT,\n    DEFAULT_FONT_SIZE,\n    DEFAULT_FONT_VARIANT,\n    DEFAULT_LINE_HEIGHT,\n    BLEED_WIDTH,\n} from './constants';\nimport {\n    CardSetsCollection,\n    CardsCollection,\n    GamesCollection,\n    IdsArray,\n    ImageArray,\n    MessageType,\n    FieldInfoByCardCollection,\n    FieldInfoCollection,\n} from './types';\nimport { rotateVec } from './utils';\n\nexport const ACTIVITY_SELECTING = 0x1;\nexport const ACTIVITY_CREATING_PDF = 0x2;\nexport const ACTIVITY_CREATING_PNG = 0x4;\n\nexport interface MessageState {\n    messages: MessageType[];\n}\n\nexport const DefaultMessageState: MessageState = {\n    messages: [],\n};\n\nexport interface AuthState {\n    isAuthenticated: boolean;\n    user: string;\n}\n\nexport const DefaultAuthState: AuthState = {\n    isAuthenticated: false,\n    user: '',\n};\n\nexport interface SignUpState {\n    signingup: boolean;\n}\n\nexport const DefaultSignUpState: SignUpState = {\n    signingup: false,\n};\n\nexport interface GameState {\n    byId: GamesCollection;\n    allIds: IdsArray;\n    activity: number;\n    active: string | null;\n}\n\nexport const DefaultGameState: GameState = {\n    byId: {},\n    allIds: [],\n    activity: 0,\n    active: null,\n};\n\nexport interface TextSettings {\n    align: string;\n    color: string;\n    fontFamily: string;\n    fontVariant: string;\n    fontSize: number;\n    lineHeight?: number;\n}\n\nexport interface CardSetsState {\n    byId: CardSetsCollection;\n    allIds: IdsArray;\n    active: string | null;\n}\n\nexport const DefaultCardSetsState: CardSetsState = {\n    byId: {},\n    allIds: [],\n    active: null,\n};\n\nexport interface CardSetState {\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    snappingDistance: number;\n    version: number;\n    activity: number;\n    cardsAllIds: IdsArray;\n    cardsById: CardsCollection;\n    activeCardId?: string;\n    isBackActive: boolean;\n    activeFieldId?: string;\n    fieldsAllIds: IdsArray;\n    fields: FieldInfoByCardCollection;\n    textSettings: TextSettings;\n    activeSidebar: SidebarState | null;\n    zoom: number;\n}\n\nexport const DefaultCardSetState: CardSetState = {\n    width: 63.5,\n    height: 88.9,\n    isTwoSided: false,\n    snappingDistance: 1,\n    version: CURRENT_CARDSET_VERSION,\n    activity: 0,\n    cardsById: {},\n    cardsAllIds: [],\n    activeCardId: undefined,\n    isBackActive: false,\n    activeFieldId: undefined,\n    fieldsAllIds: [],\n    fields: {},\n    textSettings: {\n        align: 'left',\n        color: '#000000',\n        fontFamily: DEFAULT_FONT,\n        fontVariant: DEFAULT_FONT_VARIANT,\n        fontSize: DEFAULT_FONT_SIZE,\n        lineHeight: DEFAULT_LINE_HEIGHT,\n    },\n    activeSidebar: null,\n    zoom: 1,\n};\n\nexport interface ImageState {\n    activity: number;\n    filter: string;\n    images: ImageArray;\n}\n\nexport const DefaultImageState: ImageState = {\n    activity: 0,\n    filter: '',\n    images: [],\n};\n\nexport interface State {\n    message: MessageState;\n    auth: AuthState;\n    signup: SignUpState;\n    games: GameState;\n    cardsets: CardSetsState;\n    cardset: {\n        present: CardSetState;\n    };\n    images: ImageState;\n}\n\nexport const DefaultState: State = {\n    message: DefaultMessageState,\n    auth: DefaultAuthState,\n    signup: DefaultSignUpState,\n    games: DefaultGameState,\n    cardsets: DefaultCardSetsState,\n    cardset: {\n        present: DefaultCardSetState,\n    },\n    images: DefaultImageState,\n};\n\nexport function message(state: MessageState = DefaultMessageState, action: MessageAction): MessageState {\n    switch (action.type) {\n        case MESSAGE_DISPLAY:\n            const found = state.messages.find(m => m.id === action.message.id);\n            if (found) return state;\n\n            return {\n                ...state,\n                messages: state.messages.concat(action.message),\n            };\n        case MESSAGE_HIDE:\n            return Object.assign({}, state, {\n                messages: state.messages.filter(m => m.id !== action.messageId),\n            });\n        default:\n            return state;\n    }\n}\n\nexport function auth(state: AuthState = DefaultAuthState, action: LoginAction): AuthState {\n    switch (action.type) {\n        case LOGIN_REQUEST:\n            return Object.assign({}, state, {\n                isAuthenticated: false,\n                user: action.creds.username,\n            });\n        case LOGIN_SUCCESS:\n            return Object.assign({}, state, {\n                isAuthenticated: true,\n            });\n        case LOGIN_FAILURE:\n            return Object.assign({}, state, {\n                isAuthenticated: false,\n            });\n        case LOGOUT_SUCCESS:\n            return Object.assign({}, state, {\n                isAuthenticated: false,\n            });\n        default:\n            return state;\n    }\n}\n\nexport function signup(state: SignUpState = DefaultSignUpState, action: SignUpAction): SignUpState {\n    switch (action.type) {\n        case SIGNUP_REQUEST:\n            return Object.assign({}, state, {\n                signingup: true,\n            });\n        case SIGNUP_SUCCESS:\n            return Object.assign({}, state, {\n                signingup: false,\n            });\n        case SIGNUP_FAILURE:\n            return Object.assign({}, state, {\n                signingup: false,\n            });\n        default:\n            return state;\n    }\n}\n\nexport function games(state: GameState = DefaultGameState, action: GameAction): GameState {\n    switch (action.type) {\n        case GAME_RENAME_REQUEST:\n            const game = state.byId[action.gameId];\n\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    [game.id]: {\n                        ...game,\n                        name: action.newName,\n                    },\n                },\n            };\n        case GAME_LIST_SUCCESS:\n            return Object.assign({}, state, {\n                byId: action.byId,\n                allIds: action.allIds,\n            });\n        case GAME_LIST_RESET:\n            return Object.assign({}, state, {\n                activity: 0,\n                byId: {},\n                allIds: [],\n            });\n        case GAME_SELECT_REQUEST:\n            return Object.assign({}, state, {\n                activity: ACTIVITY_SELECTING,\n            });\n        case GAME_SELECT_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_SELECTING,\n                active: action.id,\n            });\n        case GAME_SELECT_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_SELECTING,\n            });\n        case GAME_CREATE_PDF_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_CREATING_PDF,\n            });\n        case GAME_CREATE_PDF_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING_PDF,\n            });\n        case GAME_CREATE_PDF_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING_PDF,\n            });\n        case GAME_CREATE_PNG_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_CREATING_PNG,\n            });\n        case GAME_CREATE_PNG_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING_PNG,\n            });\n        case GAME_CREATE_PNG_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING_PNG,\n            });\n        default:\n            return state;\n    }\n}\n\nexport function cardsets(state: CardSetsState = DefaultCardSetsState, action: CardSetsAction): CardSetsState {\n    switch (action.type) {\n        case CARDSETS_SELECT_SUCCESS:\n            return {\n                ...state,\n                active: action.id,\n                byId: Object.assign({}, state.byId, {\n                    [action.id]: {\n                        id: action.id,\n                        name: action.name,\n                    },\n                }),\n            };\n        case CARDSET_RENAME_REQUEST:\n            const cardset = state.byId[action.cardSetId];\n\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    [cardset.id]: {\n                        ...cardset,\n                        name: action.newName,\n                    },\n                },\n            };\n        case CARDSET_LIST_SUCCESS:\n            return Object.assign({}, state, {\n                byId: action.byId,\n                allIds: action.allIds,\n            });\n        case CARDSET_LIST_RESET:\n            return Object.assign({}, state, {\n                byId: {},\n                allIds: [],\n            });\n        default:\n            return state;\n    }\n}\n\nfunction resizeFields(fields: FieldInfoByCardCollection, widthRatio: number, heightRatio: number) {\n    let newFields = { ...fields };\n    for (const cardId in newFields) {\n        let cardFields = { ...fields[cardId] };\n        for (const fieldId in cardFields) {\n            let fieldInfo = { ...cardFields[fieldId] };\n            fieldInfo.x = (fieldInfo.x - BLEED_WIDTH) * widthRatio + BLEED_WIDTH;\n            fieldInfo.y = (fieldInfo.y - BLEED_WIDTH) * heightRatio + BLEED_WIDTH;\n            fieldInfo.width *= widthRatio;\n            fieldInfo.height *= heightRatio;\n            if (fieldInfo.type === 'image') {\n                if (fieldInfo.cx) {\n                    fieldInfo.cx *= widthRatio;\n                }\n                if (fieldInfo.cy) {\n                    fieldInfo.cy *= heightRatio;\n                }\n            } else if (fieldInfo.type === 'text') {\n                fieldInfo.fontSize *= heightRatio;\n            }\n            cardFields[fieldId] = fieldInfo;\n        }\n        newFields[cardId] = cardFields;\n    }\n    return newFields;\n}\n\nexport function cardset(state: CardSetState = DefaultCardSetState, action: CardSetAction): CardSetState {\n    switch (action.type) {\n        case CARDSET_SELECT_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_SELECTING,\n            });\n        case CARDSET_SELECT_SUCCESS: {\n            return {\n                ...state,\n                activity: state.activity & ~ACTIVITY_SELECTING,\n                width: action.data.width || 63.5,\n                height: action.data.height || 88.9,\n                isTwoSided: action.data.isTwoSided || false,\n                snappingDistance: action.data.snappingDistance || 1,\n                version: action.data.version,\n                cardsAllIds: action.data.cardsAllIds || [],\n                cardsById: action.data.cardsById || {},\n                fields: action.data.fields || {},\n                fieldsAllIds: action.data.fieldsAllIds || [],\n                activeCardId: undefined,\n                activeFieldId: undefined,\n                isBackActive: false,\n                zoom: action.data.zoom || 1,\n            };\n        }\n        case CARDSET_SELECT_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_SELECTING,\n            });\n        case CARDSET_CREATE_CARD: {\n            let cardFields: FieldInfoCollection = {};\n            if (state.cardsAllIds.length > 0) {\n                cardFields = {\n                    ...state.fields[state.cardsAllIds[0]],\n                };\n\n                for (const fieldId of state.fieldsAllIds) {\n                    let fieldInfo = { ...cardFields[fieldId] };\n                    if (fieldInfo.type === 'text') {\n                        fieldInfo.value = '';\n                    } else if (fieldInfo.type === 'image') {\n                        delete fieldInfo.url;\n                        delete fieldInfo.base64;\n                    }\n                    cardFields[fieldId] = fieldInfo;\n                }\n            }\n            return {\n                ...state,\n                cardsById: {\n                    ...state.cardsById,\n                    [action.card.id]: action.card,\n                },\n                cardsAllIds: state.cardsAllIds ? state.cardsAllIds.concat(action.card.id) : [action.card.id],\n                fields: {\n                    ...state.fields,\n                    [action.card.id]: cardFields,\n                },\n            };\n        }\n        case CARDSET_CLONE_CARD: {\n            let newCard = { ...action.card, id: shortid.generate() };\n\n            const index = state.cardsAllIds.indexOf(action.card.id) + 1;\n            const cardsAllIds = [...state.cardsAllIds.slice(0, index), newCard.id, ...state.cardsAllIds.slice(index)];\n\n            return {\n                ...state,\n                cardsById: {\n                    ...state.cardsById,\n                    [newCard.id]: newCard,\n                },\n                cardsAllIds,\n                fields: {\n                    ...state.fields,\n                    [newCard.id]: {\n                        ...state.fields[action.card.id],\n                    },\n                },\n            };\n        }\n        case CARDSET_REMOVE_CARD: {\n            const cardId = action.card.id;\n            let cardsById = { ...state.cardsById };\n            delete cardsById[cardId];\n\n            let fields = { ...state.fields };\n            if (cardId in fields) {\n                delete fields[cardId];\n            }\n\n            let activeCardId = state.activeCardId === cardId ? undefined : state.activeCardId;\n\n            const cardsAllIds = state.cardsAllIds.filter(id => id !== cardId);\n\n            let fieldsAllIds = state.fieldsAllIds;\n            if (cardsAllIds.length === 0) {\n                fieldsAllIds = [];\n            }\n\n            return {\n                ...state,\n                cardsById,\n                cardsAllIds,\n                fieldsAllIds,\n                fields,\n                activeCardId,\n            };\n        }\n        case CARDSET_UPDATE_CARD_COUNT: {\n            const cardId = action.card.id;\n            let card = { ...state.cardsById[cardId] };\n            card.count = action.count;\n\n            return {\n                ...state,\n                cardsById: {\n                    ...state.cardsById,\n                    [cardId]: card,\n                },\n            };\n        }\n        case CARDSET_ADD_TEXT_FIELD: {\n            let textSettings = { ...state.textSettings };\n            const id = shortid.generate();\n            let fields: FieldInfoByCardCollection = {};\n            for (const cardId of state.cardsAllIds) {\n                fields[cardId] = {\n                    ...state.fields[cardId],\n                    [id]: {\n                        type: 'text',\n                        id,\n                        x: 5,\n                        y: 5,\n                        width: 20,\n                        height: 10,\n                        angle: 0,\n                        isOnBack: state.isBackActive,\n                        value: '',\n                        align: textSettings.align,\n                        color: textSettings.color,\n                        fontFamily: textSettings.fontFamily,\n                        fontVariant: textSettings.fontVariant,\n                        fontSize: textSettings.fontSize,\n                        lineHeight: textSettings.lineHeight || DEFAULT_LINE_HEIGHT,\n                    },\n                };\n            }\n\n            return {\n                ...state,\n                fieldsAllIds: [...state.fieldsAllIds, id],\n                fields,\n            };\n        }\n        case CARDSET_ADD_IMAGE_FIELD: {\n            const id = shortid.generate();\n            let fields: FieldInfoByCardCollection = {};\n            for (const cardId of state.cardsAllIds) {\n                fields[cardId] = {\n                    ...state.fields[cardId],\n                    [id]: {\n                        type: 'image',\n                        id,\n                        x: 5,\n                        y: 5,\n                        width: 20,\n                        height: 20,\n                        angle: 0,\n                        isOnBack: state.isBackActive,\n                        crop: true,\n                    },\n                };\n            }\n\n            return {\n                ...state,\n                fieldsAllIds: [...state.fieldsAllIds, id],\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_ACTIVE_FIELD_NAME: {\n            if (state.activeFieldId !== undefined) {\n                let fields: FieldInfoByCardCollection = {};\n                let id = state.activeFieldId;\n\n                for (const cardId of state.cardsAllIds) {\n                    fields[cardId] = {\n                        ...state.fields[cardId],\n                        [id]: {\n                            ...state.fields[cardId][id],\n                            name: action.name,\n                        },\n                    };\n                }\n\n                return {\n                    ...state,\n                    fields,\n                };\n            }\n\n            return state;\n        }\n\n        case CARDSET_REMOVE_ACTIVE_FIELD: {\n            const fieldId = state.activeFieldId;\n            if (fieldId !== undefined) {\n                let fieldsAllIds = [...state.fieldsAllIds];\n                let fieldIndex = fieldsAllIds.indexOf(fieldId);\n                if (fieldIndex !== -1) {\n                    fieldsAllIds.splice(fieldIndex, 1);\n                }\n\n                let fields = { ...state.fields };\n                for (const cardId in fields) {\n                    if (fieldId in fields[cardId] && !fields[cardId][fieldId].locked) {\n                        let cardFields = { ...fields[cardId] };\n                        delete cardFields[fieldId];\n                        fields[cardId] = cardFields;\n                    }\n                }\n\n                return {\n                    ...state,\n                    fieldsAllIds,\n                    fields,\n                    activeFieldId: undefined,\n                };\n            }\n            return state;\n        }\n        case CARDSET_RAISE_ACTIVE_FIELD_TO_TOP: {\n            let fieldsAllIds = [...state.fieldsAllIds];\n\n            if (state.activeFieldId !== undefined) {\n                let index = fieldsAllIds.indexOf(state.activeFieldId);\n                if (index !== -1) {\n                    fieldsAllIds.push(fieldsAllIds.splice(index, 1)[0]);\n                }\n            }\n\n            return {\n                ...state,\n                fieldsAllIds,\n            };\n        }\n        case CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM: {\n            let fieldsAllIds = [...state.fieldsAllIds];\n\n            if (state.activeFieldId !== undefined) {\n                let index = fieldsAllIds.indexOf(state.activeFieldId);\n                if (index !== -1) {\n                    fieldsAllIds.unshift(fieldsAllIds.splice(index, 1)[0]);\n                }\n            }\n\n            return {\n                ...state,\n                fieldsAllIds,\n            };\n        }\n        case CARDSET_LOCK_ACTIVE_FIELD: {\n            if (state.activeFieldId) {\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        cardFields[fieldId] = {\n                            ...cardFields[fieldId],\n                            locked: true,\n                        };\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                };\n            }\n\n            return state;\n        }\n        case CARDSET_UNLOCK_ACTIVE_FIELD: {\n            if (state.activeFieldId) {\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        cardFields[fieldId] = {\n                            ...cardFields[fieldId],\n                            locked: false,\n                        };\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                };\n            }\n\n            return state;\n        }\n        case CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD: {\n            if (state.activeFieldId) {\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = { ...cardFields[fieldId] };\n                        if (fieldInfo.type === 'image') {\n                            fieldInfo.fit = action.fit;\n                        }\n                        cardFields[fieldId] = fieldInfo;\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                };\n            }\n\n            return state;\n        }\n        case CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD: {\n            if (state.activeFieldId) {\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = { ...cardFields[fieldId] };\n                        if (fieldInfo.type === 'image') {\n                            fieldInfo.crop = action.crop;\n                        }\n                        cardFields[fieldId] = fieldInfo;\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                };\n            }\n\n            return state;\n        }\n        case CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD: {\n            if (state.activeFieldId) {\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = { ...cardFields[fieldId] };\n                        fieldInfo.unclickable = action.unclickable;\n                        cardFields[fieldId] = fieldInfo;\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                };\n            }\n\n            return state;\n        }\n        case CARDSET_CHANGE_WIDTH: {\n            if (!action.width || action.width <= 0) {\n                return state;\n            }\n\n            let height = state.height;\n            if (action.maintainAspectRatio) {\n                height = action.width * (state.height / state.width);\n            }\n\n            let fields = state.fields;\n            if (action.resizeContent) {\n                fields = resizeFields(fields, action.width / state.width, height / state.height);\n            }\n\n            return {\n                ...state,\n                width: action.width,\n                height,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_HEIGHT: {\n            if (!action.height || action.height <= 0) {\n                return state;\n            }\n\n            let width = state.width;\n            if (action.maintainAspectRatio) {\n                width = action.height * (state.width / state.height);\n            }\n\n            let fields = state.fields;\n            if (action.resizeContent) {\n                fields = resizeFields(fields, width / state.width, action.height / state.height);\n            }\n\n            return {\n                ...state,\n                height: action.height,\n                width,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_IS_TWO_SIDED: {\n            return {\n                ...state,\n                isTwoSided: action.isTwoSided,\n            };\n        }\n        case CARDSET_CHANGE_SNAPPING_DISTANCE: {\n            return {\n                ...state,\n                snappingDistance: action.snappingDistance,\n            };\n        }\n        case CARDSET_CHANGE_FIELD_POSITION: {\n            let x = action.x;\n            let y = action.y;\n            let snappingDistance = state.snappingDistance;\n\n            if (snappingDistance !== 0) {\n                x = Math.round(x / snappingDistance) * snappingDistance;\n                y = Math.round(y / snappingDistance) * snappingDistance;\n            }\n\n            let fields = { ...state.fields };\n            let fieldId = action.fieldId;\n            let cardsToFix = action.cardId ? [action.cardId] : state.cardsAllIds;\n\n            for (const cardId of cardsToFix) {\n                let cardFields = { ...fields[cardId] };\n                if (fieldId in cardFields) {\n                    cardFields[fieldId] = {\n                        ...cardFields[fieldId],\n                        x,\n                        y,\n                    };\n                }\n                fields[cardId] = cardFields;\n            }\n\n            return {\n                ...state,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_FIELD_PAN: {\n            let { cx, cy } = action;\n\n            let fields = { ...state.fields };\n            let fieldId = action.fieldId;\n            let cardsToFix = action.cardId ? [action.cardId] : state.cardsAllIds;\n\n            for (const cardId of cardsToFix) {\n                let cardFields = { ...fields[cardId] };\n                if (fieldId in cardFields) {\n                    let fieldInfo = cardFields[fieldId];\n                    if (fieldInfo.type === 'image') {\n                        let { width, height, zoom, fit, imageWidth, imageHeight } = fieldInfo;\n                        zoom = zoom || 1;\n                        imageHeight = imageHeight || 1;\n                        imageWidth = imageWidth || 1;\n\n                        let fitImageWidth = width;\n                        let fitImageHeight = height;\n                        if (fit === 'width' || fit === undefined) {\n                            fitImageHeight = width * (imageHeight / imageWidth);\n                        } else if (fit === 'height') {\n                            fitImageWidth = height * (imageWidth / imageHeight);\n                        }\n                        cx = Math.min(Math.max(width - zoom * fitImageWidth, cx), 0);\n                        cy = Math.min(Math.max(height - zoom * fitImageHeight, cy), 0);\n\n                        cardFields[fieldId] = {\n                            ...fieldInfo,\n                            cx,\n                            cy,\n                        };\n                    }\n                }\n                fields[cardId] = cardFields;\n            }\n\n            return {\n                ...state,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_FIELD_ZOOM: {\n            let zoom = action.zoom;\n\n            let fields = { ...state.fields };\n            let fieldId = action.fieldId;\n\n            let cardsToFix = action.cardId ? [action.cardId] : state.cardsAllIds;\n\n            for (const cardId of cardsToFix) {\n                let cardFields = { ...fields[cardId] };\n                if (fieldId in cardFields) {\n                    let fieldInfo = cardFields[fieldId];\n                    if (fieldInfo.type === 'image') {\n                        let { fit, width, height, imageWidth, imageHeight } = fieldInfo;\n\n                        imageHeight = imageHeight || 1;\n                        imageWidth = imageWidth || 1;\n\n                        let fitImageWidth = width;\n                        let fitImageHeight = height;\n                        if (fit === 'width' || fit === undefined) {\n                            fitImageHeight = width * (imageHeight / imageWidth);\n                        } else if (fit === 'height') {\n                            fitImageWidth = height * (imageWidth / imageHeight);\n                        }\n\n                        let cx = fieldInfo.cx || 0;\n                        let cy = fieldInfo.cy || 0;\n                        let oldZoom = fieldInfo.zoom || 1;\n                        cx = cx + ((oldZoom - zoom) * fitImageWidth) / 2;\n                        cy = cy + ((oldZoom - zoom) * fitImageHeight) / 2;\n\n                        cx = Math.min(Math.max(width - zoom * fitImageWidth, cx), 0);\n                        cy = Math.min(Math.max(height - zoom * fitImageHeight, cy), 0);\n\n                        cardFields[fieldId] = {\n                            ...fieldInfo,\n                            zoom,\n                            cx,\n                            cy,\n                        };\n                    }\n                }\n                fields[cardId] = cardFields;\n            }\n\n            return {\n                ...state,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_FIELD_SIZE: {\n            let width = action.width;\n            let height = action.height;\n            let snappingDistance = state.snappingDistance;\n\n            if (snappingDistance !== 0) {\n                width = Math.round(width / snappingDistance) * snappingDistance;\n                height = Math.round(height / snappingDistance) * snappingDistance;\n            }\n\n            let fields = { ...state.fields };\n            let fieldId = action.fieldId;\n            let cardsToFix = action.cardId ? [action.cardId] : state.cardsAllIds;\n\n            for (const cardId of cardsToFix) {\n                let cardFields = { ...fields[cardId] };\n                if (fieldId in cardFields) {\n                    let fieldInfo = { ...cardFields[fieldId] };\n\n                    let nx = fieldInfo.x + fieldInfo.width / 2;\n                    let ny = fieldInfo.y + fieldInfo.height / 2;\n                    let { rx, ry } = rotateVec(\n                        (width - fieldInfo.width) / 2,\n                        (height - fieldInfo.height) / 2,\n                        fieldInfo.angle,\n                    );\n\n                    nx = nx + rx - width / 2;\n                    ny = ny + ry - height / 2;\n\n                    if (fieldInfo.type === 'image' && fieldInfo.cx && fieldInfo.cy) {\n                        if (fieldInfo.fit === 'width' || fieldInfo.fit === undefined) {\n                            let ratio = width / fieldInfo.width;\n                            fieldInfo.cx *= ratio;\n                            fieldInfo.cy *= ratio;\n                        } else if (fieldInfo.fit === 'height') {\n                            let ratio = height / fieldInfo.height;\n                            fieldInfo.cx *= ratio;\n                            fieldInfo.cy *= ratio;\n                        } else {\n                            fieldInfo.cx *= width / fieldInfo.width;\n                            fieldInfo.cy *= height / fieldInfo.height;\n                        }\n                    }\n\n                    fieldInfo.x = nx;\n                    fieldInfo.y = ny;\n                    fieldInfo.width = width;\n                    fieldInfo.height = height;\n                    cardFields[fieldId] = fieldInfo;\n                }\n                fields[cardId] = cardFields;\n            }\n\n            return {\n                ...state,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_FIELD_ANGLE: {\n            let angle = action.angle;\n\n            let fields = { ...state.fields };\n            let fieldId = action.fieldId;\n\n            let cardsToFix = action.cardId ? [action.cardId] : state.cardsAllIds;\n\n            for (const cardId of cardsToFix) {\n                let cardFields = { ...fields[cardId] };\n                if (fieldId in cardFields) {\n                    cardFields[fieldId] = {\n                        ...cardFields[fieldId],\n                        angle,\n                    };\n                }\n                fields[cardId] = cardFields;\n            }\n\n            return {\n                ...state,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN: {\n            let textSettings = {\n                ...state.textSettings,\n                align: action.align,\n            };\n\n            if (state.activeFieldId) {\n                let align = action.align;\n\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'text') {\n                            cardFields[fieldId] = {\n                                ...fieldInfo,\n                                align,\n                            };\n                        }\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR: {\n            let textSettings = {\n                ...state.textSettings,\n                color: action.color,\n            };\n\n            if (state.activeFieldId) {\n                let color = action.color;\n\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'text') {\n                            cardFields[fieldId] = {\n                                ...fieldInfo,\n                                color,\n                            };\n                        }\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY: {\n            let textSettings = {\n                ...state.textSettings,\n                color: action.fontFamily,\n            };\n\n            if (state.activeFieldId) {\n                let fontFamily = action.fontFamily;\n\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'text') {\n                            cardFields[fieldId] = {\n                                ...fieldInfo,\n                                fontFamily,\n                            };\n                        }\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT: {\n            let textSettings = {\n                ...state.textSettings,\n                color: action.fontVariant,\n            };\n\n            if (state.activeFieldId) {\n                let fontVariant = action.fontVariant;\n\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'text') {\n                            cardFields[fieldId] = {\n                                ...fieldInfo,\n                                fontVariant,\n                            };\n                        }\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT: {\n            let textSettings = {\n                ...state.textSettings,\n                fontFamily: action.fontFamily,\n                fontVariant: action.fontVariant,\n            };\n\n            if (state.activeFieldId) {\n                let fontFamily = action.fontFamily;\n                let fontVariant = action.fontVariant;\n\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'text') {\n                            cardFields[fieldId] = {\n                                ...fieldInfo,\n                                fontFamily,\n                                fontVariant,\n                            };\n                        }\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE: {\n            let textSettings = {\n                ...state.textSettings,\n                fontSize: action.fontSize,\n            };\n\n            if (state.activeFieldId) {\n                let fontSize = action.fontSize;\n\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'text') {\n                            cardFields[fieldId] = {\n                                ...fieldInfo,\n                                fontSize,\n                            };\n                        }\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT: {\n            let textSettings = {\n                ...state.textSettings,\n                lineHeight: action.lineHeight,\n            };\n\n            if (state.activeFieldId) {\n                let lineHeight = action.lineHeight;\n\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'text') {\n                            cardFields[fieldId] = {\n                                ...fieldInfo,\n                                lineHeight,\n                            };\n                        }\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_TEXT: {\n            let cardFields = { ...state.fields[action.cardId] };\n\n            const fieldInfo = cardFields[action.fieldId];\n            const name = fieldInfo.name || fieldInfo.id;\n\n            for (const fieldId in cardFields) {\n                const testFieldInfo = cardFields[fieldId];\n\n                if ((testFieldInfo.name === name || testFieldInfo.id === name) && testFieldInfo.type === 'text') {\n                    cardFields[fieldId] = {\n                        ...testFieldInfo,\n                        value: action.textInfo.value,\n                    };\n                }\n            }\n\n            return {\n                ...state,\n                fields: {\n                    ...state.fields,\n                    [action.cardId]: cardFields,\n                },\n            };\n        }\n        case CARDSET_CHANGE_IMAGE: {\n            let cardFields = { ...state.fields[action.cardId] };\n\n            const fieldInfo = cardFields[action.fieldId];\n            const name = fieldInfo.name || fieldInfo.id;\n\n            for (const fieldId in cardFields) {\n                const testFieldInfo = cardFields[fieldId];\n\n                if ((testFieldInfo.name === name || testFieldInfo.id === name) && testFieldInfo.type === 'image') {\n                    cardFields[fieldId] = {\n                        ...testFieldInfo,\n                        url: 'url' in action.imageInfo ? action.imageInfo.url : testFieldInfo.url,\n                        base64: 'base64' in action.imageInfo ? action.imageInfo.base64 : testFieldInfo.base64,\n                        color: 'color' in action.imageInfo ? action.imageInfo.color : testFieldInfo.color,\n                        imageWidth: 'width' in action.imageInfo ? action.imageInfo.width : testFieldInfo.imageWidth,\n                        imageHeight: 'height' in action.imageInfo ? action.imageInfo.height : testFieldInfo.imageHeight,\n                        cx: 0,\n                        cy: 0,\n                        zoom: 0,\n                    };\n                }\n            }\n\n            return {\n                ...state,\n                fields: {\n                    ...state.fields,\n                    [action.cardId]: cardFields,\n                },\n            };\n        }\n        case CARDSET_CHANGE_IMAGE_BASE64: {\n            let cardFields = { ...state.fields[action.cardId] };\n\n            const fieldInfo = cardFields[action.fieldId];\n            const name = fieldInfo.name || fieldInfo.id;\n\n            for (const fieldId in cardFields) {\n                const testFieldInfo = cardFields[fieldId];\n\n                if ((testFieldInfo.name === name || testFieldInfo.id === name) && testFieldInfo.type === 'image') {\n                    cardFields[fieldId] = {\n                        ...testFieldInfo,\n                        base64: action.base64,\n                        cx: 0,\n                        cy: 0,\n                        zoom: 0,\n                    };\n                }\n            }\n\n            return {\n                ...state,\n                fields: {\n                    ...state.fields,\n                    [action.cardId]: cardFields,\n                },\n            };\n        }\n        case CARDSET_SET_ACTIVE_CARD_AND_FIELD: {\n            let textSettings = { ...state.textSettings };\n            let activeSidebar = state.activeSidebar;\n\n            if (activeSidebar !== SidebarState.Measurements && action.cardId !== undefined) {\n                activeSidebar = SidebarState.Details;\n            }\n\n            if (action.cardId !== undefined && action.fieldId !== undefined) {\n                const fieldInfo = state.fields[action.cardId][action.fieldId];\n\n                if (fieldInfo.type === 'text') {\n                    textSettings.align = fieldInfo.align;\n                    textSettings.color = fieldInfo.color;\n                    textSettings.fontFamily = fieldInfo.fontFamily;\n                    textSettings.fontVariant = fieldInfo.fontVariant;\n                    textSettings.fontSize = fieldInfo.fontSize;\n                    textSettings.lineHeight = fieldInfo.lineHeight;\n\n                    if (activeSidebar !== SidebarState.Measurements) {\n                        activeSidebar = SidebarState.Text;\n                    }\n                } else {\n                    if (activeSidebar !== SidebarState.Measurements) {\n                        activeSidebar = SidebarState.Image;\n                    }\n                }\n            }\n\n            return {\n                ...state,\n                activeCardId: action.cardId,\n                isBackActive: action.isBackActive,\n                activeFieldId: action.fieldId,\n                textSettings,\n                activeSidebar,\n            };\n        }\n\n        case CARDSET_SET_SIDEBAR_STATE: {\n            return {\n                ...state,\n                activeSidebar: action.sidebarState,\n            };\n        }\n        case CARDSET_SET_ZOOM: {\n            return {\n                ...state,\n                zoom: action.zoom,\n            };\n        }\n        case CARDSET_IMPORT_DATA: {\n            return {\n                ...state,\n                ...action.data,\n            };\n        }\n        default:\n            return state;\n    }\n}\n\nexport function images(state: ImageState = DefaultImageState, action: ImageListAction): ImageState {\n    switch (action.type) {\n        case IMAGE_LIST_REQUEST:\n            return Object.assign({}, state, {\n                filter: action.filter,\n            });\n        case IMAGE_LIST_SUCCESS:\n            return Object.assign({}, state, {\n                images: action.images,\n            });\n        default:\n            return state;\n    }\n}\n\nconst undoableCardset = undoable(cardset, {\n    ignoreInitialState: true,\n    undoType: CARDSET_UNDO,\n    redoType: CARDSET_REDO,\n    groupBy: (action: Action) => {\n        if (\n            action.type === 'CARDSET_CHANGE_FIELD_SIZE' ||\n            action.type === 'CARDSET_CHANGE_FIELD_POSITION' ||\n            action.type === 'CARDSET_CHANGE_FIELD_ANGLE' ||\n            action.type === 'CARDSET_CHANGE_FIELD_ZOOM' ||\n            action.type === 'CARDSET_CHANGE_FIELD_PAN'\n        ) {\n            return action.group;\n        }\n        return null;\n    },\n    filter: (action: Action) => {\n        if (!action.type.startsWith('CARDSET_')) {\n            return false;\n        }\n\n        if (action.type === CARDSET_SELECT_REQUEST || action.type === CARDSET_SET_ACTIVE_CARD_AND_FIELD) {\n            return false;\n        }\n        return true;\n    },\n});\n\nconst reducers = combineReducers({\n    message,\n    auth,\n    signup,\n    games,\n    cardsets,\n    cardset: undoableCardset,\n    images,\n});\n\nexport default reducers;\n","import { Ghost, Browser } from 'react-kawaii';\nimport React, { Component } from 'react';\n\nexport enum Character {\n    Ghost,\n    Browser,\n}\ninterface Props {\n    character: Character;\n    mood?: string;\n}\n\nexport default class KawaiiMessage extends Component<Props> {\n    render() {\n        const { character, mood } = this.props;\n\n        return (\n            <div\n                style={{\n                    marginTop: '1em',\n                    marginBottom: '1em',\n                    padding: '1em',\n                    borderRadius: '1em',\n                    backgroundColor: 'var(--color-2)',\n                    display: 'grid',\n                    grid: 'auto-flow / minmax(120px, auto) 1fr',\n                }}\n            >\n                {character === Character.Ghost && <Ghost size={120} mood={mood || 'blissful'} color=\"#faebef\" />}\n                {character === Character.Browser && <Browser size={120} mood={mood || 'blissful'} color=\"#faebef\" />}\n                <div style={{ marginLeft: '1em' }}>{this.props.children}</div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nexport default class AboutPage extends Component {\n    render() {\n        return (\n            <div>\n                <h2>About</h2>\n                <p>\n                    \"Card-a-mon\" is card game development tool. At the moment it is project of single person (me) with a\n                    vision. My aim is to create affordable and practical tool to develop card games from A (prototyping)\n                    to Z (printing). If you have ideas, suggestions, proposals, comments and etc. then you can contact\n                    me by e-mail <a href=\"mailto:dalius@ffff.lt\">dalius@ffff.lt</a>.\n                </p>\n                <h2>Credits</h2>\n                This project is available because of number amazing open source projects. Some of them:\n                <ul>\n                    <li>\n                        <a href=\"https://reactjs.org/\">React</a> and all the ecosystem around it.\n                    </li>\n                    <li>\n                        <a href=\"https://fonts.google.com/\">Google Fonts</a>\n                    </li>\n                    <li>\n                        <a href=\"https://github.com/game-icons/icons\">Game icons</a>\n                    </li>\n                    <li>\n                        <a href=\"http://pdfkit.org/\">PDFKit</a>\n                    </li>\n                </ul>\n                <p>... and many more.</p>\n            </div>\n        );\n    }\n}\n","import { connect } from 'react-redux';\nimport React from 'react';\nimport shortid from 'shortid';\n\nimport { Dispatch } from '../actions';\nimport { State } from '../reducers';\nimport panIcon from './pan.svg';\nimport zoomIcon from './zoom.svg';\nimport resizeIcon from './resize.svg';\nimport rotateIcon from './rotate.svg';\nimport style from './FieldController.module.css';\nimport { rotateVec } from '../utils';\n\ninterface OwnProps {\n    cardId: string;\n    fieldId: string;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    angle: number;\n    zoom?: number;\n    cx?: number;\n    cy?: number;\n    children: React.ReactNode;\n    onDrag: (x: number, y: number, cardOnly: boolean, group: string) => void;\n    onResize: (width: number, height: number, cardOnly: boolean, group: string) => void;\n    onRotate: (angle: number, cardOnly: boolean, group: string) => void;\n    onZoom?: (zoom: number, cardOnly: boolean, group: string) => void;\n    onPan?: (cx: number, cy: number, cardOnly: boolean, group: string) => void;\n    cardWidth: number;\n    cardHeight: number;\n    ppmm: number;\n}\n\ninterface StateProps {\n    isActive: boolean;\n    isActiveField: boolean;\n    isLocked: boolean;\n    isUnclickable: boolean;\n    snappingDistance: number;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nexport interface LocalState {\n    startX: number;\n    startY: number;\n    originalAngle: number;\n    activatedUsingTouch: boolean;\n    group: string;\n}\n\nclass FieldController extends React.Component<Props, LocalState> {\n    cDiv: React.RefObject<HTMLDivElement>;\n    panDiv: React.RefObject<HTMLImageElement>;\n    zoomDiv: React.RefObject<HTMLImageElement>;\n    resizeDiv: React.RefObject<HTMLImageElement>;\n    rotateDiv: React.RefObject<HTMLImageElement>;\n    originalBodyCursor: string | null;\n\n    constructor(props: Props) {\n        super(props);\n        this.cDiv = React.createRef();\n        this.panDiv = React.createRef();\n        this.zoomDiv = React.createRef();\n        this.resizeDiv = React.createRef();\n        this.rotateDiv = React.createRef();\n        this.originalBodyCursor = null;\n        this.state = {\n            activatedUsingTouch: false,\n            startX: 0,\n            startY: 0,\n            originalAngle: 0,\n            group: '',\n        };\n    }\n\n    componentDidMount() {\n        if (this.cDiv.current === null) return;\n        if (this.panDiv.current === null) return;\n        if (this.zoomDiv.current === null) return;\n        if (this.resizeDiv.current === null) return;\n        if (this.rotateDiv.current === null) return;\n\n        this.originalBodyCursor = document.body.style.cursor;\n\n        this.cDiv.current.addEventListener('mousedown', this.handleMouseDown);\n        this.cDiv.current.addEventListener('touchstart', this.handleTouchStart);\n        this.panDiv.current.addEventListener('mousedown', this.handlePanMouseDown);\n        this.panDiv.current.addEventListener('touchstart', this.handlePanTouchStart);\n        this.zoomDiv.current.addEventListener('mousedown', this.handleZoomMouseDown);\n        this.zoomDiv.current.addEventListener('touchstart', this.handleZoomTouchStart);\n        this.resizeDiv.current.addEventListener('mousedown', this.handleResizeMouseDown);\n        this.resizeDiv.current.addEventListener('touchstart', this.handleResizeTouchStart);\n        this.rotateDiv.current.addEventListener('mousedown', this.handleRotateMouseDown);\n        this.rotateDiv.current.addEventListener('touchstart', this.handleRotateTouchStart);\n    }\n\n    handleBrowserDragStart = (event: React.DragEvent) => {\n        event.stopPropagation();\n        event.preventDefault();\n    };\n\n    // Dragging handling\n\n    handleMouseDown = (event: MouseEvent) => {\n        this.handleDragStart(event);\n\n        document.addEventListener('mousemove', this.handleMouseMove);\n        document.addEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleTouchStart = (event: TouchEvent) => {\n        this.handleDragStart(event.changedTouches[0]);\n\n        document.addEventListener('touchmove', this.handleTouchMove, { passive: false });\n        document.addEventListener('touchend', this.handleTouchEnd, { passive: false });\n        event.preventDefault();\n    };\n\n    handleDragStart = (co: MouseEvent | Touch) => {\n        if (this.cDiv.current === null) return;\n\n        this.cDiv.current.style.cursor = 'grabbing';\n\n        this.setState({ startX: co.clientX, startY: co.clientY, group: shortid.generate() });\n    };\n\n    handleMouseMove = (event: MouseEvent) => {\n        this.handleDragMove(event, event.ctrlKey);\n    };\n\n    handleTouchMove = (event: TouchEvent) => {\n        this.handleDragMove(event.changedTouches[0], event.ctrlKey);\n    };\n\n    handleDragMove = (co: MouseEvent | Touch, disableSnapping: boolean) => {\n        const { isLocked, x, y } = this.props;\n\n        if (isLocked) return;\n\n        const { ppmm, snappingDistance } = this.props;\n\n        let nx = x + co.clientX - this.state.startX;\n        let ny = y + co.clientY - this.state.startY;\n\n        if (!disableSnapping && snappingDistance !== 0) {\n            nx = Math.round(nx / ppmm / snappingDistance) * snappingDistance * ppmm;\n            ny = Math.round(ny / ppmm / snappingDistance) * snappingDistance * ppmm;\n        }\n\n        this.setState({ startX: co.clientX, startY: co.clientY });\n        this.props.onDrag(nx, ny, true, this.state.group);\n    };\n\n    handleMouseUp = (event: MouseEvent) => {\n        this.handleComplete(event, false);\n\n        document.removeEventListener('mousemove', this.handleMouseMove);\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleTouchEnd = (event: TouchEvent) => {\n        this.handleComplete(event, true);\n\n        document.removeEventListener('touchmove', this.handleTouchMove);\n        document.removeEventListener('touchend', this.handleTouchEnd);\n    };\n\n    handleComplete = (event: MouseEvent | TouchEvent, isTouchEvent: boolean) => {\n        const { isLocked, x, y } = this.props;\n\n        if (this.cDiv.current === null) return;\n\n        if (!isLocked) {\n            this.props.onDrag(x, y, false, this.state.group);\n        }\n        this.setState({ activatedUsingTouch: isTouchEvent });\n\n        this.cDiv.current.style.cursor = 'grab';\n\n        event.preventDefault();\n    };\n\n    // Pan handling\n\n    handlePanMouseDown = (event: MouseEvent) => {\n        this.handlePanStart(event);\n\n        document.addEventListener('mousemove', this.handlePanMouseMove);\n        document.addEventListener('mouseup', this.handlePanMouseUp);\n        event.stopPropagation();\n    };\n\n    handlePanTouchStart = (event: TouchEvent) => {\n        this.handlePanStart(event.changedTouches[0]);\n\n        document.addEventListener('touchmove', this.handlePanTouchMove, { passive: false });\n        document.addEventListener('touchend', this.handlePanTouchEnd, { passive: false });\n        event.stopPropagation();\n    };\n\n    handlePanStart = (co: MouseEvent | Touch) => {\n        document.body.style.cursor = `url(${panIcon}), auto`;\n\n        this.setState({ startX: co.clientX, startY: co.clientY, group: shortid.generate() });\n    };\n\n    handlePanMouseMove = (event: MouseEvent) => {\n        this.handlePanMove(event);\n        event.preventDefault();\n    };\n\n    handlePanTouchMove = (event: TouchEvent) => {\n        this.handlePanMove(event.changedTouches[0]);\n        event.preventDefault();\n    };\n\n    handlePanMove = (co: MouseEvent | Touch) => {\n        const { cx, cy, angle, onPan } = this.props;\n        if (!onPan || cx === undefined || cy === undefined) return;\n\n        let dx = co.clientX - this.state.startX;\n        let dy = co.clientY - this.state.startY;\n        const { rx, ry } = rotateVec(dx, dy, -angle);\n\n        const newCx = cx + rx;\n        const newCy = cy + ry;\n\n        this.setState({ startX: co.clientX, startY: co.clientY });\n\n        onPan(newCx, newCy, true, this.state.group);\n    };\n\n    handlePanMouseUp = (event: MouseEvent) => {\n        this.handlePanComplete(event);\n\n        document.removeEventListener('mousemove', this.handlePanMouseMove);\n        document.removeEventListener('mouseup', this.handlePanMouseUp);\n    };\n\n    handlePanTouchEnd = (event: TouchEvent) => {\n        this.handlePanComplete(event);\n\n        document.removeEventListener('touchmove', this.handlePanTouchMove);\n        document.removeEventListener('touchend', this.handlePanTouchEnd);\n    };\n\n    handlePanComplete = (event: MouseEvent | TouchEvent) => {\n        const { cx, cy, onPan } = this.props;\n        if (onPan && cx !== undefined && cy !== undefined) {\n            onPan(cx, cy, true, this.state.group);\n        }\n\n        document.body.style.cursor = this.originalBodyCursor;\n        event.preventDefault();\n    };\n\n    // Zoom handling\n\n    handleZoomMouseDown = (event: MouseEvent) => {\n        this.handleZoomStart(event);\n\n        document.addEventListener('mousemove', this.handleZoomMouseMove);\n        document.addEventListener('mouseup', this.handleZoomMouseUp);\n        event.stopPropagation();\n    };\n\n    handleZoomTouchStart = (event: TouchEvent) => {\n        this.handleZoomStart(event.changedTouches[0]);\n\n        document.addEventListener('touchmove', this.handleZoomTouchMove, { passive: false });\n        document.addEventListener('touchend', this.handleZoomTouchEnd, { passive: false });\n        event.stopPropagation();\n    };\n\n    handleZoomStart = (co: { clientX: number; clientY: number }) => {\n        document.body.style.cursor = `url(${zoomIcon}), auto`;\n\n        this.setState({ startX: co.clientX, startY: co.clientY, group: shortid.generate() });\n    };\n\n    handleZoomMouseMove = (event: MouseEvent) => {\n        this.handleZoomMove(event);\n        event.preventDefault();\n    };\n\n    handleZoomTouchMove = (event: TouchEvent) => {\n        this.handleZoomMove(event.changedTouches[0]);\n        event.preventDefault();\n    };\n\n    handleZoomMove = (co: MouseEvent | Touch) => {\n        const { zoom, onZoom } = this.props;\n        if (!onZoom || zoom === undefined) return;\n\n        const dx = co.clientX - this.state.startX;\n        const dy = co.clientY - this.state.startY;\n\n        let z = Math.abs(dx) > Math.abs(dy) ? dx : dy;\n\n        let newZoom = Math.max(zoom + z / 30, 1);\n        this.setState({ startX: co.clientX, startY: co.clientY });\n\n        onZoom(newZoom, true, this.state.group);\n    };\n\n    handleZoomMouseUp = (event: MouseEvent) => {\n        this.handleZoomComplete(event);\n\n        document.removeEventListener('mousemove', this.handleZoomMouseMove);\n        document.removeEventListener('mouseup', this.handleZoomMouseUp);\n    };\n\n    handleZoomTouchEnd = (event: TouchEvent) => {\n        this.handleZoomComplete(event);\n\n        document.removeEventListener('touchmove', this.handleZoomTouchMove);\n        document.removeEventListener('touchend', this.handleZoomTouchEnd);\n    };\n\n    handleZoomComplete = (event: Event) => {\n        document.body.style.cursor = this.originalBodyCursor;\n        event.preventDefault();\n    };\n\n    // Resize handling\n\n    handleResizeMouseDown = (event: MouseEvent) => {\n        this.handleResizeStart(event);\n\n        document.addEventListener('mousemove', this.handleResizeMouseMove);\n        document.addEventListener('mouseup', this.handleResizeMouseUp);\n        event.stopPropagation();\n    };\n\n    handleResizeTouchStart = (event: TouchEvent) => {\n        this.handleResizeStart(event.changedTouches[0]);\n\n        document.addEventListener('touchmove', this.handleResizeTouchMove, { passive: false });\n        document.addEventListener('touchend', this.handleResizeTouchEnd, { passive: false });\n        event.stopPropagation();\n    };\n\n    handleResizeStart = (co: MouseEvent | Touch) => {\n        const { isLocked } = this.props;\n\n        if (isLocked) return;\n\n        document.body.style.cursor = `url(${resizeIcon}), auto`;\n\n        this.setState({ startX: co.clientX, startY: co.clientY, group: shortid.generate() });\n    };\n\n    handleResizeMouseMove = (event: MouseEvent) => {\n        this.handleResizeMove(event, event.ctrlKey);\n        event.preventDefault();\n    };\n\n    handleResizeTouchMove = (event: TouchEvent) => {\n        this.handleResizeMove(event.changedTouches[0], event.ctrlKey);\n        event.preventDefault();\n    };\n\n    handleResizeMove = (co: { clientX: number; clientY: number }, disableSnapping: boolean) => {\n        const { isLocked, ppmm, width, height, angle, snappingDistance, onResize } = this.props;\n\n        if (isLocked) return;\n\n        const dx = co.clientX - this.state.startX;\n        const dy = co.clientY - this.state.startY;\n\n        const { rx, ry } = rotateVec(dx, dy, -angle);\n\n        let newWidth = width + rx;\n        let newHeight = height + ry;\n\n        if (!disableSnapping && snappingDistance !== 0) {\n            newWidth = Math.round(newWidth / ppmm / snappingDistance) * snappingDistance * ppmm;\n            newHeight = Math.round(newHeight / ppmm / snappingDistance) * snappingDistance * ppmm;\n        }\n\n        this.setState({ startX: co.clientX, startY: co.clientY });\n\n        onResize(newWidth, newHeight, true, this.state.group);\n    };\n\n    handleResizeMouseUp = (event: MouseEvent) => {\n        this.handleResizeComplete(event);\n\n        document.removeEventListener('mousemove', this.handleResizeMouseMove);\n        document.removeEventListener('mouseup', this.handleResizeMouseUp);\n    };\n\n    handleResizeTouchEnd = (event: TouchEvent) => {\n        this.handleResizeComplete(event);\n\n        document.removeEventListener('touchmove', this.handleResizeTouchMove);\n        document.removeEventListener('touchend', this.handleResizeTouchEnd);\n    };\n\n    handleResizeComplete = (event: Event) => {\n        const { isLocked } = this.props;\n\n        if (!isLocked) {\n            const { width, height, onResize } = this.props;\n            onResize(width, height, false, this.state.group);\n        }\n\n        document.body.style.cursor = this.originalBodyCursor;\n\n        event.preventDefault();\n    };\n\n    // Rotation handling\n\n    handleRotateMouseDown = (event: MouseEvent) => {\n        this.handleRotateStart(event);\n\n        document.addEventListener('mousemove', this.handleRotateMouseMove);\n        document.addEventListener('mouseup', this.handleRotateMouseUp);\n        event.stopPropagation();\n    };\n\n    handleRotateTouchStart = (event: TouchEvent) => {\n        this.handleRotateStart(event.changedTouches[0]);\n\n        document.addEventListener('touchmove', this.handleRotateTouchMove, { passive: false });\n        document.addEventListener('touchend', this.handleRotateTouchEnd, { passive: false });\n        event.stopPropagation();\n    };\n\n    handleRotateStart = (co: { clientX: number; clientY: number }) => {\n        const { isLocked, angle } = this.props;\n\n        if (isLocked || this.cDiv.current === null) return;\n\n        document.body.style.cursor = `url(${rotateIcon}), auto`;\n\n        const rect = this.cDiv.current.getBoundingClientRect();\n        let startX = rect.left + this.cDiv.current.clientWidth / 2;\n        let startY = rect.top + this.cDiv.current.clientHeight / 2;\n\n        let originalAngle = angle + Math.atan2(startX - co.clientX, startY - co.clientY);\n\n        this.setState({ startX, startY, originalAngle, group: shortid.generate() });\n    };\n\n    handleRotateMouseMove = (event: MouseEvent) => {\n        this.handleRotateMove(event, event.ctrlKey);\n        event.preventDefault();\n    };\n\n    handleRotateTouchMove = (event: TouchEvent) => {\n        this.handleRotateMove(event.changedTouches[0], event.ctrlKey);\n        event.preventDefault();\n    };\n\n    handleRotateMove = (co: MouseEvent | Touch, disableSnapping: boolean) => {\n        const { isLocked, onRotate } = this.props;\n\n        if (isLocked) return;\n\n        const { originalAngle, startX, startY } = this.state;\n\n        let curAngle = Math.atan2(startX - co.clientX, startY - co.clientY);\n        let newAngle = originalAngle - curAngle;\n\n        if (!disableSnapping) {\n            newAngle = ((Math.round(((newAngle / Math.PI) * 180) / 5) * 5) / 180) * Math.PI;\n        }\n\n        onRotate(newAngle, true, this.state.group);\n    };\n\n    handleRotateMouseUp = (event: MouseEvent) => {\n        this.handleRotateComplete(event);\n\n        document.removeEventListener('mousemove', this.handleRotateMouseMove);\n        document.removeEventListener('mouseup', this.handleRotateMouseUp);\n    };\n\n    handleRotateTouchEnd = (event: TouchEvent) => {\n        this.handleRotateComplete(event);\n\n        document.removeEventListener('touchmove', this.handleRotateTouchMove);\n        document.removeEventListener('touchend', this.handleRotateTouchEnd);\n    };\n\n    handleRotateComplete = (event: Event) => {\n        const { isLocked } = this.props;\n\n        if (!isLocked) {\n            const { angle } = this.props;\n            this.props.onRotate(angle, false, this.state.group);\n        }\n\n        document.body.style.cursor = this.originalBodyCursor;\n\n        event.preventDefault();\n    };\n\n    // Rendering\n\n    render() {\n        const {\n            x,\n            y,\n            width,\n            height,\n            angle,\n            zoom,\n            cx,\n            children,\n            isActive,\n            isActiveField,\n            isLocked,\n            isUnclickable,\n        } = this.props;\n\n        return (\n            <div\n                ref={this.cDiv}\n                onDragStart={this.handleBrowserDragStart}\n                className={`${style.fieldcontroller} ${isActiveField ? style.fieldcontrolleractivefield : ''} ${\n                    isActive ? style.fieldcontrolleractive : ''\n                } ${isActive && this.state.activatedUsingTouch ? style.touchactivated : ''} `}\n                style={{\n                    position: 'absolute',\n                    left: x,\n                    top: y,\n                    width: width,\n                    height: height,\n                    cursor: 'grab',\n                    transform: `rotate(${angle}rad)`,\n                    pointerEvents: isUnclickable ? 'none' : 'initial',\n                }}\n            >\n                {children}\n                <img\n                    src={panIcon}\n                    alt=\"pan\"\n                    ref={this.panDiv}\n                    className={style.controller}\n                    style={{\n                        position: 'absolute',\n                        left: 0,\n                        top: 0,\n                        cursor: `url(${panIcon}), auto`,\n                        display: cx !== undefined && zoom !== undefined ? 'initial' : 'none',\n                    }}\n                />\n\n                <img\n                    src={zoomIcon}\n                    alt=\"zoom\"\n                    ref={this.zoomDiv}\n                    className={style.controller}\n                    style={{\n                        position: 'absolute',\n                        right: 0,\n                        top: 0,\n                        cursor: `url(${zoomIcon}), auto`,\n                        display: zoom !== undefined ? 'initial' : 'none',\n                    }}\n                />\n\n                <img\n                    src={resizeIcon}\n                    alt=\"resize\"\n                    ref={this.resizeDiv}\n                    className={style.controller}\n                    style={{\n                        position: 'absolute',\n                        right: 0,\n                        bottom: 0,\n                        cursor: `url(${resizeIcon}), auto`,\n                        display: isLocked ? 'none' : 'initial',\n                    }}\n                />\n                <img\n                    src={rotateIcon}\n                    alt=\"rotate\"\n                    ref={this.rotateDiv}\n                    className={style.controller}\n                    style={{\n                        position: 'absolute',\n                        left: 0,\n                        bottom: 0,\n                        cursor: `url(${rotateIcon}), auto`,\n                        display: isLocked ? 'none' : 'initial',\n                    }}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    const isActiveField = props.fieldId === state.cardset.present.activeFieldId;\n    const isActive =\n        props.cardId === state.cardset.present.activeCardId && props.fieldId === state.cardset.present.activeFieldId;\n    const fieldInfo = state.cardset.present.fields[props.cardId][props.fieldId];\n    const isLocked = fieldInfo.locked === true;\n    const isUnclickable = fieldInfo.unclickable === true;\n\n    return {\n        isActive,\n        isActiveField,\n        isLocked,\n        isUnclickable,\n        snappingDistance: state.cardset.present.snappingDistance,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(FieldController);\n","import { connect } from 'react-redux';\nimport React, { PureComponent } from 'react';\n\nimport {\n    Dispatch,\n    cardSetActiveCardAndField,\n    cardSetChangeImage,\n    cardSetChangeFieldPosition,\n    cardSetChangeFieldAngle,\n    cardSetChangeFieldPan,\n    cardSetChangeFieldZoom,\n    cardSetChangeFieldSize,\n} from '../actions';\nimport { ImageInfo, ImageFieldInfo } from '../types';\nimport { State } from '../reducers';\nimport FieldController from './FieldController';\nimport emptyImageImage from './image.svg';\nimport style from './ImageField.module.css';\nimport { calculateImageDimensions } from '../utils';\n\ninterface OwnProps {\n    cardId: string;\n    isOnBack: boolean;\n    ppmm: number;\n    imageFieldInfo: ImageFieldInfo;\n    cardWidth: number;\n    cardHeight: number;\n}\n\ninterface StateProps {\n    imageUrl?: string;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\ninterface LocalState {\n    dragIsOver: boolean;\n    wasMoved: boolean;\n}\n\nclass ImageField extends PureComponent<Props, LocalState> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            dragIsOver: false,\n            wasMoved: false,\n        };\n    }\n\n    handleDrag = (x: number, y: number, cardOnly: boolean, group: string) => {\n        const { dispatch, cardId, imageFieldInfo, ppmm } = this.props;\n        dispatch(\n            cardSetChangeFieldPosition(cardOnly ? cardId : undefined, imageFieldInfo.id, x / ppmm, y / ppmm, group),\n        );\n    };\n\n    handlePan = (cx: number, cy: number, cardOnly: boolean, group: string) => {\n        const { dispatch, cardId, imageFieldInfo, ppmm } = this.props;\n        dispatch(cardSetChangeFieldPan(cardOnly ? cardId : undefined, imageFieldInfo.id, cx / ppmm, cy / ppmm, group));\n    };\n\n    handleZoom = (zoom: number, cardOnly: boolean, group: string) => {\n        const { dispatch, cardId, imageFieldInfo } = this.props;\n        dispatch(cardSetChangeFieldZoom(cardOnly ? cardId : undefined, imageFieldInfo.id, zoom, group));\n    };\n\n    handleResize = (width: number, height: number, cardOnly: boolean, group: string) => {\n        const { dispatch, imageFieldInfo, cardId, ppmm } = this.props;\n        dispatch(\n            cardSetChangeFieldSize(\n                cardOnly ? cardId : undefined,\n                imageFieldInfo.id,\n                width / ppmm,\n                height / ppmm,\n                group,\n            ),\n        );\n    };\n\n    handleRotate = (angle: number, cardOnly: boolean, group: string) => {\n        const { dispatch, cardId, imageFieldInfo } = this.props;\n        dispatch(cardSetChangeFieldAngle(cardOnly ? cardId : undefined, imageFieldInfo.id, angle, group));\n    };\n\n    handleMouseDown = (event: React.MouseEvent) => {\n        this.setState({ wasMoved: false });\n        event.preventDefault();\n    };\n\n    handleTouchStart = (event: React.TouchEvent) => {\n        this.setState({ wasMoved: false });\n        event.preventDefault();\n    };\n\n    handleMouseMove = (event: React.MouseEvent) => {\n        this.setState({ wasMoved: true });\n        event.preventDefault();\n    };\n\n    handleTouchMove = (event: React.TouchEvent) => {\n        this.setState({ wasMoved: true });\n        event.preventDefault();\n    };\n\n    handleMouseUp = (event: React.MouseEvent) => {\n        this.handleComplete(event);\n    };\n\n    handleTouchEnd = (event: React.TouchEvent) => {\n        this.handleComplete(event);\n    };\n\n    handleComplete = (event: React.MouseEvent | React.TouchEvent) => {\n        const { dispatch, cardId, isOnBack, imageFieldInfo } = this.props;\n        if (!this.state.wasMoved) {\n            event.preventDefault();\n            dispatch(cardSetActiveCardAndField(cardId, isOnBack, imageFieldInfo.id));\n        }\n    };\n\n    handleDragOver = (event: React.DragEvent<HTMLDivElement>) => {\n        this.setState({ dragIsOver: true });\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDragLeave = (event: React.DragEvent<HTMLDivElement>) => {\n        this.setState({ dragIsOver: false });\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = (event: React.DragEvent<HTMLDivElement>) => {\n        this.setState({ dragIsOver: false });\n        event.preventDefault();\n        event.stopPropagation();\n\n        const url = event.dataTransfer.getData('URL');\n        const imagefilesPos = url.indexOf('/api/imagefiles/');\n\n        if (imagefilesPos !== -1) {\n            const { cardId, imageFieldInfo, dispatch } = this.props;\n            let img = new Image();\n\n            img.addEventListener('load', function() {\n                const ii: ImageInfo = {\n                    url: url.substr(imagefilesPos),\n                    width: this.naturalWidth,\n                    height: this.naturalHeight,\n                };\n                dispatch(cardSetChangeImage(cardId, imageFieldInfo.id, ii));\n            });\n            img.src = url;\n        }\n    };\n\n    render() {\n        const { imageFieldInfo, imageUrl, ppmm, cardWidth, cardHeight } = this.props;\n\n        let dim = calculateImageDimensions(imageFieldInfo);\n        let calculatedImageWidth = dim.width * ppmm;\n        let calculatedImageHeight = dim.height * ppmm;\n\n        return (\n            <FieldController\n                cardId={this.props.cardId}\n                fieldId={imageFieldInfo.id}\n                x={imageFieldInfo.x * ppmm}\n                y={imageFieldInfo.y * ppmm}\n                width={imageFieldInfo.width * ppmm}\n                height={imageFieldInfo.height * ppmm}\n                cx={(imageFieldInfo.cx || 0) * ppmm}\n                cy={(imageFieldInfo.cy || 0) * ppmm}\n                zoom={imageFieldInfo.zoom || 1}\n                angle={imageFieldInfo.angle}\n                onDrag={this.handleDrag}\n                onPan={this.handlePan}\n                onZoom={this.handleZoom}\n                onResize={this.handleResize}\n                onRotate={this.handleRotate}\n                cardWidth={cardWidth}\n                cardHeight={cardHeight}\n                ppmm={ppmm}\n            >\n                <div\n                    style={{\n                        width: '100%',\n                        height: '100%',\n                        position: 'relative',\n                        overflow: imageFieldInfo.crop ? 'hidden' : 'visible',\n                    }}\n                    className={this.state.dragIsOver ? style.over : ''}\n                    onMouseDown={this.handleMouseDown}\n                    onTouchStart={this.handleTouchStart}\n                    onMouseMove={this.handleMouseMove}\n                    onTouchMove={this.handleTouchMove}\n                    onMouseUp={this.handleMouseUp}\n                    onTouchEnd={this.handleTouchEnd}\n                    onDragOver={this.handleDragOver}\n                    onDragLeave={this.handleDragLeave}\n                    onDrop={this.handleDrop}\n                >\n                    <img\n                        style={{\n                            position: 'absolute',\n                            opacity: imageUrl && imageUrl.length > 0 ? 1 : 0.5,\n                            left: (imageFieldInfo.cx || 0) * ppmm,\n                            top: (imageFieldInfo.cy || 0) * ppmm,\n                            width: calculatedImageWidth,\n                            height: calculatedImageHeight,\n                        }}\n                        src={imageUrl || emptyImageImage}\n                        alt=\"\"\n                    />\n                </div>\n            </FieldController>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    let imageUrl: string | undefined = '';\n    if (props.imageFieldInfo && props.imageFieldInfo.type === 'image') {\n        if (props.imageFieldInfo.base64) {\n            imageUrl = 'data:image/svg+xml;base64,' + props.imageFieldInfo.base64;\n        } else {\n            imageUrl = props.imageFieldInfo && props.imageFieldInfo.url;\n        }\n    }\n\n    return {\n        imageUrl,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(ImageField);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DEFAULT_FONT, DEFAULT_FONT_SIZE, DEFAULT_LINE_HEIGHT } from '../constants';\nimport { Dispatch, cardSetActiveCardAndField, cardSetChangeText } from '../actions';\nimport { State } from '../reducers';\nimport { TextInfo } from '../types';\nimport style from './ContentEditable.module.css';\n\ninterface OwnProps {\n    cardId: string;\n    isOnBack: boolean;\n    fieldId: string;\n    align: string;\n    color: string;\n    fontFamily: string;\n    fontVariant: string;\n    fontSize: number;\n    lineHeight: number;\n}\n\ninterface StateProps {\n    isActive: boolean;\n    textValue: string;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass ContentEditable extends Component<Props> {\n    editDiv: React.RefObject<HTMLDivElement>;\n    currentText: string;\n    currentAlign: string;\n    currentColor: string;\n    currentFontFamily: string;\n    currentFontVariant: string;\n    currentFontSize: number;\n    currentLineHeight: number;\n    timeout: NodeJS.Timeout | null;\n    wasMoved: boolean;\n\n    constructor(props: Props) {\n        super(props);\n        this.editDiv = React.createRef();\n        this.currentText = '';\n        this.currentAlign = '';\n        this.currentColor = '';\n        this.currentFontFamily = '';\n        this.currentFontVariant = '';\n        this.currentFontSize = DEFAULT_FONT_SIZE;\n        this.currentLineHeight = DEFAULT_LINE_HEIGHT;\n        this.timeout = null;\n        this.wasMoved = false;\n    }\n\n    componentDidMount() {\n        const { isActive } = this.props;\n\n        if (!this.editDiv.current) return;\n\n        this.editDiv.current.addEventListener('mousedown', this.handleMouseDown);\n        this.editDiv.current.addEventListener('touchstart', this.handleTouchStart);\n        this.editDiv.current.addEventListener('mousemove', this.handleMouseMove);\n        this.editDiv.current.addEventListener('touchmove', this.handleTouchMove, { passive: false });\n        this.editDiv.current.addEventListener('mouseup', this.handleMouseUp);\n        this.editDiv.current.addEventListener('touchend', this.handleTouchEnd, { passive: false });\n\n        if (isActive) {\n            this.editDiv.current.focus();\n        }\n    }\n\n    shouldComponentUpdate(nextProps: Props) {\n        const shouldUpdate =\n            nextProps.textValue !== this.currentText ||\n            nextProps.align !== this.currentAlign ||\n            nextProps.color !== this.currentColor ||\n            nextProps.fontFamily !== this.currentFontFamily ||\n            nextProps.fontVariant !== this.currentFontVariant ||\n            nextProps.fontSize !== this.currentFontSize ||\n            nextProps.lineHeight !== this.currentLineHeight ||\n            this.props.isActive !== nextProps.isActive;\n\n        return shouldUpdate;\n    }\n\n    componentDidUpdate() {\n        const { textValue, align, color, fontFamily, fontVariant, fontSize, lineHeight } = this.props;\n        this.currentText = textValue;\n        this.currentAlign = align;\n        this.currentColor = color;\n        this.currentFontFamily = fontFamily;\n        this.currentFontVariant = fontVariant;\n        this.currentFontSize = fontSize;\n        this.currentLineHeight = lineHeight;\n    }\n\n    handleMouseDown = (event: MouseEvent) => {\n        this.handleStart(event);\n    };\n\n    handleTouchStart = (event: TouchEvent) => {\n        this.handleStart(event);\n    };\n\n    handleStart = (event: Event) => {\n        const { isActive } = this.props;\n        if (isActive) {\n            event.stopPropagation();\n        } else {\n            this.wasMoved = false;\n            event.preventDefault();\n        }\n    };\n\n    handleMouseMove = (event: MouseEvent) => {\n        this.handleMove(event);\n    };\n\n    handleTouchMove = (event: TouchEvent) => {\n        this.handleMove(event);\n    };\n\n    handleMove = (event: Event) => {\n        const { isActive } = this.props;\n        if (isActive) {\n            event.stopPropagation();\n        } else {\n            this.wasMoved = true;\n            event.preventDefault();\n        }\n    };\n\n    handleMouseUp = (event: MouseEvent) => {\n        this.handleComplete(event);\n    };\n\n    handleTouchEnd = (event: TouchEvent) => {\n        this.handleComplete(event);\n    };\n\n    handleComplete = (event: Event) => {\n        const { dispatch, cardId, isOnBack, fieldId, isActive } = this.props;\n        if (isActive) {\n            event.stopPropagation();\n        } else if (!this.wasMoved) {\n            event.preventDefault();\n            dispatch(cardSetActiveCardAndField(cardId, isOnBack, fieldId));\n\n            if (!this.editDiv.current) return;\n            this.editDiv.current.focus();\n        }\n    };\n\n    onFocus = () => {\n        if (!this.editDiv.current) return;\n\n        const { textValue, align, color, fontFamily, fontVariant, fontSize } = this.props;\n        this.currentText = textValue;\n        this.currentAlign = align;\n        this.currentColor = color;\n        this.currentFontFamily = fontFamily;\n        this.currentFontVariant = fontVariant;\n        this.currentFontSize = fontSize;\n\n        const range = document.createRange();\n        range.selectNodeContents(this.editDiv.current);\n        range.collapse(false);\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    };\n\n    updateContent = (timeoutInMiliseconds: number) => {\n        if (!this.editDiv.current) return;\n        let value = this.editDiv.current.innerHTML;\n\n        let imgUrlIdx = -1;\n        while ((imgUrlIdx = value.indexOf('<img src=\"http')) !== -1) {\n            value = value.slice(0, imgUrlIdx + 10) + value.slice(value.indexOf('/', imgUrlIdx + 18));\n        }\n\n        if (value !== this.currentText) {\n            this.currentText = value;\n\n            if (this.timeout) {\n                clearTimeout(this.timeout);\n            }\n\n            this.timeout = setTimeout(() => {\n                const { dispatch, cardId, fieldId } = this.props;\n                const textInfo: TextInfo = { value };\n\n                dispatch(cardSetChangeText(cardId, fieldId, textInfo));\n            }, timeoutInMiliseconds);\n        }\n    };\n\n    handleBlur = () => {\n        this.updateContent(0);\n    };\n\n    handleInput = () => {\n        this.updateContent(500);\n    };\n\n    render() {\n        const { color, align, fontFamily, fontVariant, fontSize, lineHeight } = this.props;\n        const isItalic = fontVariant && fontVariant.indexOf('italic') !== -1;\n        const fontWeight = isItalic\n            ? fontVariant === 'italic'\n                ? 400\n                : parseInt(fontVariant.slice(0, 3))\n            : fontVariant === 'regular'\n            ? 400\n            : parseInt(fontVariant);\n\n        return (\n            <div\n                ref={this.editDiv}\n                className={style.content}\n                contentEditable={true}\n                onFocus={this.onFocus}\n                onBlur={this.handleBlur}\n                onInput={this.handleInput}\n                style={{\n                    width: '100%',\n                    height: '100%',\n                    textAlign: align === 'left' ? 'left' : align === 'right' ? 'right' : 'center',\n                    color: color,\n                    fontFamily: `'${fontFamily}'` || DEFAULT_FONT,\n                    fontStyle: isItalic ? 'italic' : 'normal',\n                    fontWeight,\n                    fontSize: `${fontSize}px`,\n                    outline: 'none',\n                    overflowWrap: 'break-word',\n                    lineHeight,\n                }}\n                dangerouslySetInnerHTML={{ __html: this.props.textValue }}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    let fieldInfo = state.cardset.present.fields[props.cardId][props.fieldId];\n    const textValue = fieldInfo.type === 'text' ? fieldInfo.value : '';\n    return {\n        textValue,\n        isActive:\n            props.cardId === state.cardset.present.activeCardId &&\n            props.fieldId === state.cardset.present.activeFieldId,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(ContentEditable);\n","import { connect } from 'react-redux';\nimport React, { PureComponent } from 'react';\n\nimport { DEFAULT_LINE_HEIGHT } from '../constants';\nimport { Dispatch, cardSetChangeFieldAngle, cardSetChangeFieldPosition, cardSetChangeFieldSize } from '../actions';\nimport { State } from '../reducers';\nimport { TextFieldInfo } from '../types';\nimport ContentEditable from './ContentEditable';\nimport FieldController from './FieldController';\nimport emptyTextImage from './text.svg';\n\ninterface OwnProps {\n    cardId: string;\n    isOnBack: boolean;\n    ppmm: number;\n    textFieldInfo: TextFieldInfo;\n    cardWidth: number;\n    cardHeight: number;\n}\n\ninterface StateProps {\n    text: string;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass TextField extends PureComponent<Props> {\n    handleDrag = (x: number, y: number, cardOnly: boolean, group: string) => {\n        const { dispatch, cardId, textFieldInfo, ppmm } = this.props;\n        dispatch(\n            cardSetChangeFieldPosition(cardOnly ? cardId : undefined, textFieldInfo.id, x / ppmm, y / ppmm, group),\n        );\n    };\n\n    handleResize = (width: number, height: number, cardOnly: boolean, group: string) => {\n        const { dispatch, textFieldInfo, cardId, ppmm } = this.props;\n        dispatch(\n            cardSetChangeFieldSize(cardOnly ? cardId : undefined, textFieldInfo.id, width / ppmm, height / ppmm, group),\n        );\n    };\n\n    handleRotate = (angle: number, cardOnly: boolean, group: string) => {\n        const { dispatch, textFieldInfo, cardId } = this.props;\n        dispatch(cardSetChangeFieldAngle(cardOnly ? cardId : undefined, textFieldInfo.id, angle, group));\n    };\n\n    render() {\n        const { textFieldInfo, text, ppmm, cardWidth, cardHeight } = this.props;\n\n        return (\n            <FieldController\n                cardId={this.props.cardId}\n                fieldId={textFieldInfo.id}\n                x={textFieldInfo.x * ppmm}\n                y={textFieldInfo.y * ppmm}\n                width={textFieldInfo.width * ppmm}\n                height={textFieldInfo.height * ppmm}\n                angle={textFieldInfo.angle}\n                onDrag={this.handleDrag}\n                onResize={this.handleResize}\n                onRotate={this.handleRotate}\n                cardWidth={cardWidth}\n                cardHeight={cardHeight}\n                ppmm={ppmm}\n            >\n                {text === '' && (\n                    <div\n                        style={{\n                            width: '100%',\n                            height: '100%',\n                            position: 'fixed',\n                            left: 0,\n                            top: 0,\n                            zIndex: -1,\n                            textAlign:\n                                textFieldInfo.align === 'left'\n                                    ? 'left'\n                                    : textFieldInfo.align === 'right'\n                                    ? 'right'\n                                    : 'center',\n                        }}\n                    >\n                        <img style={{ opacity: 0.5, width: 'auto', height: '100%' }} src={emptyTextImage} alt=\"\" />\n                    </div>\n                )}\n\n                <ContentEditable\n                    cardId={this.props.cardId}\n                    isOnBack={this.props.isOnBack}\n                    fieldId={textFieldInfo.id}\n                    align={textFieldInfo.align}\n                    color={textFieldInfo.color}\n                    fontFamily={textFieldInfo.fontFamily}\n                    fontVariant={textFieldInfo.fontVariant}\n                    fontSize={textFieldInfo.fontSize * ppmm}\n                    lineHeight={textFieldInfo.lineHeight || DEFAULT_LINE_HEIGHT}\n                />\n            </FieldController>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    let fieldInfo = state.cardset.present.fields[props.cardId][props.textFieldInfo.id];\n    let text = fieldInfo.type === 'text' ? fieldInfo.value : '';\n    return {\n        text,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(TextField);\n","import { connect } from 'react-redux';\nimport Measure from 'react-measure';\nimport React, { Component } from 'react';\n\nimport { BLEED_WIDTH } from '../constants';\nimport { CardType, IdsArray, FieldInfoCollection } from '../types';\nimport { Dispatch, cardSetActiveCardAndField } from '../actions';\nimport { State } from '../reducers';\nimport ImageField from './ImageField';\nimport TextField from './TextField';\nimport style from './Card.module.css';\n\ninterface OwnProps {\n    card: CardType;\n    isBack: boolean;\n}\n\ninterface StateProps {\n    cardFields: FieldInfoCollection;\n    fieldsIds: IdsArray;\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    isActiveCard: boolean;\n    zoom: number;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\ninterface LocalState {\n    dimensions: {\n        width: number;\n        height: number;\n    };\n}\n\nclass Card extends Component<Props, LocalState> {\n    state = {\n        dimensions: {\n            width: -1,\n            height: -1,\n        },\n    };\n\n    handleFieldDeselect = (event: React.MouseEvent | React.TouchEvent) => {\n        const { dispatch, card, isBack } = this.props;\n        const el = event.target as HTMLElement;\n        if (el.getAttribute('id') === `card_${card.id}`) {\n            dispatch(cardSetActiveCardAndField(card.id, isBack, undefined));\n            event.stopPropagation();\n        }\n    };\n\n    render() {\n        const { cardFields, fieldsIds, card, isBack, width, height, isActiveCard, zoom, isTwoSided } = this.props;\n        const widthWithBleeds = width + BLEED_WIDTH * 2;\n        const heightWithBleeds = height + BLEED_WIDTH * 2;\n\n        const ppmm = this.state.dimensions.width / widthWithBleeds;\n\n        return (\n            <div>\n                <Measure\n                    client\n                    onResize={contentRect => {\n                        if (!contentRect.client) {\n                            return;\n                        }\n                        this.setState({ dimensions: contentRect.client });\n                    }}\n                >\n                    {({ measureRef }) => (\n                        <div\n                            className={`${style.card} ${isActiveCard ? style.active : ''}`}\n                            id={`card_${card.id}`}\n                            ref={measureRef}\n                            style={{\n                                width: `${widthWithBleeds * zoom}mm`,\n                                height: `${heightWithBleeds * zoom}mm`,\n                                position: 'relative',\n                                overflow: 'hidden',\n                            }}\n                            onMouseDown={this.handleFieldDeselect}\n                            onTouchStart={this.handleFieldDeselect}\n                        >\n                            {fieldsIds.map(id => {\n                                if (!(id in cardFields)) {\n                                    return null;\n                                }\n                                const p = cardFields[id];\n                                if (p.type === 'image') {\n                                    return (\n                                        <ImageField\n                                            key={p.id}\n                                            cardId={card.id}\n                                            isOnBack={isBack}\n                                            imageFieldInfo={p}\n                                            ppmm={ppmm}\n                                            cardWidth={this.state.dimensions.width}\n                                            cardHeight={this.state.dimensions.height}\n                                        />\n                                    );\n                                } else if (p.type === 'text') {\n                                    return (\n                                        <TextField\n                                            key={p.id}\n                                            cardId={card.id}\n                                            isOnBack={isBack}\n                                            textFieldInfo={p}\n                                            ppmm={ppmm}\n                                            cardWidth={this.state.dimensions.width}\n                                            cardHeight={this.state.dimensions.height}\n                                        />\n                                    );\n                                }\n                                return null;\n                            })}\n\n                            <div\n                                style={{\n                                    position: 'absolute',\n                                    width: `${width * zoom}mm`,\n                                    height: `${height * zoom}mm`,\n                                    left: `${BLEED_WIDTH * zoom}mm`,\n                                    top: `${BLEED_WIDTH * zoom}mm`,\n                                    border: '1px dashed black',\n                                    borderRadius: '5mm',\n                                    pointerEvents: 'none',\n                                }}\n                            />\n\n                            <div\n                                style={{\n                                    position: 'absolute',\n                                    width: `${(width - BLEED_WIDTH * 2) * zoom}mm`,\n                                    height: `${(height - BLEED_WIDTH * 2) * zoom}mm`,\n                                    left: `${BLEED_WIDTH * 2 * zoom}mm`,\n                                    top: `${BLEED_WIDTH * 2 * zoom}mm`,\n                                    border: '1px dashed red',\n                                    borderRadius: '5mm',\n                                    pointerEvents: 'none',\n                                }}\n                            />\n                        </div>\n                    )}\n                </Measure>\n                {isTwoSided && (\n                    <div\n                        className={style.title}\n                        style={{\n                            width: `${widthWithBleeds * zoom}mm`,\n                            position: 'relative',\n                        }}\n                    >\n                        {isBack ? 'Back' : 'Front'}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    let cardFields = state.cardset.present.fields[props.card.id] || {};\n\n    return {\n        cardFields,\n        fieldsIds: state.cardset.present.fieldsAllIds.filter(\n            id => ((id in cardFields && cardFields[id].isOnBack) || false) === props.isBack,\n        ),\n        width: state.cardset.present.width,\n        height: state.cardset.present.height,\n        isTwoSided: state.cardset.present.isTwoSided,\n        isActiveCard:\n            state.cardset.present.activeCardId === props.card.id && state.cardset.present.isBackActive === props.isBack,\n        zoom: state.cardset.present.zoom,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(Card);\n","import React, { Component } from 'react';\nimport style from './EditableTitle.module.css';\n\ninterface Props {\n    title: string;\n    onChange: (newName: string) => void;\n}\n\nexport default class EditableTitle extends Component<Props> {\n    state = {\n        titleIsEdited: false,\n    };\n\n    handleClick = () => {\n        this.setState({ titleIsEdited: true });\n    };\n\n    handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.props.onChange(event.target.value);\n    };\n\n    handleBlur = () => {\n        this.setState({ titleIsEdited: false });\n    };\n\n    render() {\n        const { titleIsEdited } = this.state;\n        const { title } = this.props;\n\n        return (\n            <>\n                {!titleIsEdited && (\n                    <h1 className={style.input} onClick={this.handleClick}>\n                        {title}\n                    </h1>\n                )}\n                {titleIsEdited && (\n                    <input\n                        autoFocus\n                        type=\"text\"\n                        className={style.input}\n                        value={title}\n                        onChange={this.handleChange}\n                        onBlur={this.handleBlur}\n                    />\n                )}\n            </>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nimport style from './Loader.module.css';\n\ninterface Props {\n    fixed?: boolean;\n    small?: boolean;\n}\n\nexport default class Loader extends Component<Props> {\n    render() {\n        const { fixed, small } = this.props;\n\n        return (\n            <div className={`${style.loader} ${fixed ? style.fixed : style.relative} ${small ? style.small : ''}`}>\n                <div />\n                <div />\n            </div>\n        );\n    }\n}\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { CardType, DispatchProps, SidebarOwnProps } from '../types';\nimport { State } from '../reducers';\nimport { cardSetCloneCard, cardSetRemoveCard, cardSetUpdateCardCount } from '../actions';\nimport style from './SidebarDetails.module.css';\n\ninterface StateProps {\n    isAuthenticated: boolean;\n    activeCard: CardType | null;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarDetails extends Component<Props> {\n    handleCloneCardClick = () => {\n        const { activeCard, dispatch } = this.props;\n        if (activeCard !== null) {\n            dispatch(cardSetCloneCard(activeCard));\n        }\n    };\n\n    handleRemoveCardClick = () => {\n        const { activeCard, dispatch } = this.props;\n        if (activeCard !== null) {\n            dispatch(cardSetRemoveCard(activeCard));\n        }\n    };\n\n    handleCountChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeCard, dispatch } = this.props;\n        if (activeCard !== null) {\n            dispatch(cardSetUpdateCardCount(activeCard, parseInt(event.target.value)));\n        }\n    };\n\n    render() {\n        const { activeCard, visible } = this.props;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'initial' : 'none' }}>\n                <button\n                    onClick={this.handleCloneCardClick}\n                    title=\"Clone card\"\n                    className={activeCard === null ? style.disabled : ''}\n                >\n                    <i className=\"material-icons\">file_copy</i>\n                </button>\n\n                <input\n                    type=\"number\"\n                    value={activeCard !== null ? activeCard.count.toString() : 0}\n                    onChange={this.handleCountChange}\n                    title=\"Number of card's copies\"\n                    className={activeCard === null ? style.disabled : ''}\n                />\n                <button\n                    onClick={this.handleRemoveCardClick}\n                    title=\"Remove card\"\n                    className={activeCard === null ? style.disabled : ''}\n                >\n                    <i className=\"material-icons\">delete</i>\n                </button>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        activeCard:\n            state.cardset.present.activeCardId !== undefined\n                ? state.cardset.present.cardsById[state.cardset.present.activeCardId]\n                : null,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarDetails);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { ACTIVITY_CREATING_PNG, State } from '../reducers';\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport { gameCreatePngRequest } from '../actions';\nimport style from './SidebarGeneratePng.module.css';\n\ninterface StateProps {\n    width: number;\n    height: number;\n    isCreatingPng: boolean;\n    activeCardset: string | null;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\ninterface LocalState {\n    dpi: number;\n}\n\nexport class SidebarGeneratePng extends Component<Props, LocalState> {\n    state: LocalState = {\n        dpi: 300,\n    };\n\n    handleDpiChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ dpi: parseInt(event.target.value) });\n    };\n\n    handleGenerate = () => {\n        const { dispatch, activeCardset } = this.props;\n        const { dpi } = this.state;\n\n        if (activeCardset !== null) {\n            dispatch(gameCreatePngRequest(dpi, 'cardsets', activeCardset));\n        }\n    };\n\n    render() {\n        const { visible, width, height, isCreatingPng } = this.props;\n        const { dpi } = this.state;\n\n        const calculatedWidth = Math.round(dpi * (width / 25.4 + 1 / 4));\n        const calculatedHeight = Math.round(dpi * (height / 25.4 + 1 / 4));\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'grid' : 'none' }}>\n                <div>Here you can generate your cards as PNG images.</div>\n                <label htmlFor=\"dpi\">DPI:</label>\n                <input\n                    id=\"dpi\"\n                    type=\"number\"\n                    min=\"1\"\n                    step=\"1\"\n                    onChange={this.handleDpiChange}\n                    className=\"form-control\"\n                    placeholder=\"DPI\"\n                    value={dpi}\n                />\n\n                <div>Width in pixels: {calculatedWidth}</div>\n                <div>Height in pixels: {calculatedHeight}</div>\n\n                <button disabled={isCreatingPng} onClick={this.handleGenerate}>\n                    Generate\n                </button>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        width: state.cardset.present.width,\n        height: state.cardset.present.height,\n        isCreatingPng: (state.games.activity & ACTIVITY_CREATING_PNG) === ACTIVITY_CREATING_PNG,\n        activeCardset: state.cardsets.active,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarGeneratePng);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { ACTIVITY_CREATING_PDF, State } from '../reducers';\nimport { Dispatch, gameCreatePdfRequest } from '../actions';\nimport KawaiiMessage, { Character } from './KawaiiMessage';\n\ninterface OwnProps {\n    type: string;\n    id: string;\n    withHelp?: boolean;\n}\n\ninterface StateProps {\n    isCreatingPdf: boolean;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = StateProps & DispatchProps & OwnProps;\n\ninterface LocalState {\n    pageWidth: number;\n    pageHeight: number;\n    topBottomMargin: number;\n    leftRightMargin: number;\n    verticalSpace: number;\n    horizontalSpace: number;\n    includeBleedingArea: boolean;\n    cutMarksForScissors: boolean;\n    cutMarksForGuillotine: boolean;\n    cutMarksInMarginArea: boolean;\n    cutMarksOnFrontSideOnly: boolean;\n}\n\nexport class PDFGenerator extends Component<Props, LocalState> {\n    state = {\n        pageWidth: 210,\n        pageHeight: 297,\n        topBottomMargin: 15,\n        leftRightMargin: 9,\n        verticalSpace: 0,\n        horizontalSpace: 0,\n        includeBleedingArea: false,\n        cutMarksForScissors: true,\n        cutMarksForGuillotine: false,\n        cutMarksInMarginArea: false,\n        cutMarksOnFrontSideOnly: false,\n    };\n\n    handleGeneratePdfClick = () => {\n        const { dispatch } = this.props;\n        const {\n            pageWidth,\n            pageHeight,\n            topBottomMargin,\n            leftRightMargin,\n            verticalSpace,\n            horizontalSpace,\n            includeBleedingArea,\n            cutMarksForScissors,\n            cutMarksForGuillotine,\n            cutMarksInMarginArea,\n            cutMarksOnFrontSideOnly,\n        } = this.state;\n\n        dispatch(\n            gameCreatePdfRequest(\n                this.props.type,\n                this.props.id,\n                pageWidth,\n                pageHeight,\n                topBottomMargin,\n                leftRightMargin,\n                verticalSpace,\n                horizontalSpace,\n                includeBleedingArea,\n                cutMarksForScissors,\n                cutMarksForGuillotine,\n                cutMarksInMarginArea,\n                cutMarksOnFrontSideOnly,\n            ),\n        );\n    };\n\n    handlePageWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ pageWidth: parseFloat(event.target.value) });\n    };\n\n    handlePageHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ pageHeight: parseFloat(event.target.value) });\n    };\n\n    handleTopBottomMarginChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ topBottomMargin: parseFloat(event.target.value) });\n    };\n\n    handleLeftRightMarginChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ leftRightMargin: parseFloat(event.target.value) });\n    };\n\n    handleVerticalSpaceChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ verticalSpace: parseFloat(event.target.value) });\n    };\n\n    handleHorizontalSpaceChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ horizontalSpace: parseFloat(event.target.value) });\n    };\n\n    handleIncludeBleedingAreaChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ includeBleedingArea: event.target.checked });\n    };\n\n    handleCutMarksForScissors = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ cutMarksForScissors: event.target.checked });\n    };\n\n    handleCutMarksForGuillotine = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ cutMarksForGuillotine: event.target.checked });\n    };\n\n    handleCutMarksInMarginArea = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ cutMarksInMarginArea: event.target.checked });\n    };\n\n    handleCutMarksOnFrontSideOnly = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ cutMarksOnFrontSideOnly: event.target.checked });\n    };\n\n    render() {\n        const { isCreatingPdf, withHelp } = this.props;\n\n        return (\n            <>\n                {withHelp && (\n                    <KawaiiMessage character={Character.Ghost} mood=\"excited\">\n                        <p>Here you can generate PDF.</p>\n                        <p>Hint 1: A4 page size is 210 mm x 297 mm. Letter page size is 215.9 x 279.4 mm.</p>\n                        <p>Hint 2: 1 inch is equal to 25.4 mm.</p>\n                    </KawaiiMessage>\n                )}\n\n                <div className=\"form\">\n                    <label htmlFor=\"page_width\">Page width (mm):</label>\n                    <input\n                        id=\"page_width\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handlePageWidthChange}\n                        placeholder=\"Page width\"\n                        value={this.state.pageWidth}\n                    />\n                    <label htmlFor=\"page_height\">Page height (mm):</label>\n                    <input\n                        id=\"page_height\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handlePageHeightChange}\n                        placeholder=\"Page Height\"\n                        value={this.state.pageHeight}\n                    />\n                    <label htmlFor=\"page_topbottom_margin\">Margin from top/bottom (mm):</label>\n                    <input\n                        id=\"page_topbottom_margin\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handleTopBottomMarginChange}\n                        placeholder=\"Top/Bottom margin\"\n                        value={this.state.topBottomMargin}\n                    />\n                    <label htmlFor=\"page_leftright_margin\">Margin from left/right (mm):</label>\n                    <input\n                        id=\"page_leftright_margin\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handleLeftRightMarginChange}\n                        placeholder=\"Left/Right margin\"\n                        value={this.state.leftRightMargin}\n                    />\n\n                    <label htmlFor=\"card_vertical_space\">Vertical space between cards (mm):</label>\n                    <input\n                        id=\"card_vertical_space\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handleVerticalSpaceChange}\n                        placeholder=\"Vertical space\"\n                        value={this.state.verticalSpace}\n                    />\n\n                    <label htmlFor=\"card_horizontal_space\">Horizontal space between cards (mm):</label>\n                    <input\n                        id=\"card_horizontal_space\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handleHorizontalSpaceChange}\n                        placeholder=\"Horizontal space\"\n                        value={this.state.horizontalSpace}\n                    />\n\n                    <label\n                        title=\"You might need this for Cardmogrifier or professional printing. Do\n                        not check this if all you are interested in is card (area inside black dashed rectangle).\"\n                    >\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.includeBleedingArea}\n                            onChange={this.handleIncludeBleedingAreaChange}\n                        />\n                        Generate with bleeding area.\n                    </label>\n\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.cutMarksForScissors}\n                            onChange={this.handleCutMarksForScissors}\n                        />\n                        Generate with cut marks for paper scissors.\n                    </label>\n\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.cutMarksForGuillotine}\n                            onChange={this.handleCutMarksForGuillotine}\n                        />\n                        Generate with cut marks for paper guillotine.\n                    </label>\n\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.cutMarksInMarginArea}\n                            onChange={this.handleCutMarksInMarginArea}\n                        />\n                        Generate with cut marks for paper guillotine in margin area.\n                    </label>\n\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.cutMarksOnFrontSideOnly}\n                            onChange={this.handleCutMarksOnFrontSideOnly}\n                        />\n                        Generate cut marks on front side only (useful for printing on both sides).\n                    </label>\n\n                    <button disabled={isCreatingPdf} onClick={this.handleGeneratePdfClick}>\n                        Generate PDF\n                    </button>\n                </div>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        isCreatingPdf: (state.games.activity & ACTIVITY_CREATING_PDF) === ACTIVITY_CREATING_PDF,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(PDFGenerator);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport { State } from '../reducers';\nimport PDFGenerator from './PDFGenerator';\nimport style from './SidebarGeneratePdf.module.css';\n\ninterface StateProps {\n    activeCardSetId: string | null;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarGeneratePdf extends Component<Props> {\n    render() {\n        const { activeCardSetId, visible } = this.props;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'grid' : 'none' }}>\n                {activeCardSetId !== null && <PDFGenerator type=\"cardsets\" id={activeCardSetId} />}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        activeCardSetId: state.cardsets.active,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarGeneratePdf);\n","import { ChromePicker, ColorResult } from 'react-color';\nimport React, { Component } from 'react';\n\ninterface Props {\n    onChange: (color: ColorResult) => void;\n    color: string;\n}\n\ninterface State {\n    displayColorPicker: boolean;\n}\n\nexport default class ColorButton extends Component<Props, State> {\n    state = {\n        displayColorPicker: false,\n    };\n\n    handleClick = () => {\n        this.setState({ displayColorPicker: !this.state.displayColorPicker });\n    };\n\n    handleClose = () => {\n        this.setState({ displayColorPicker: false });\n    };\n\n    handleChange = (color: ColorResult) => {\n        this.props.onChange(color);\n    };\n\n    render() {\n        const popover: React.CSSProperties = {\n            position: 'absolute',\n            zIndex: 2,\n        };\n        const cover: React.CSSProperties = {\n            position: 'fixed',\n            top: '0px',\n            right: '0px',\n            bottom: '0px',\n            left: '0px',\n        };\n        return (\n            <>\n                <button onClick={this.handleClick} title=\"Change color\">\n                    <i className=\"material-icons\">color_lens</i>\n                </button>\n                {this.state.displayColorPicker ? (\n                    <div style={popover}>\n                        <div style={cover} onClick={this.handleClose} />\n                        <ChromePicker color={this.props.color} disableAlpha={true} onChange={this.handleChange} />\n                    </div>\n                ) : null}\n            </>\n        );\n    }\n}\n","import { ColorResult } from 'react-color';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, IdsArray, ImageArray, SidebarOwnProps, FieldInfo, ImageInfo } from '../types';\nimport { State } from '../reducers';\nimport {\n    cardSetAddImageField,\n    cardSetChangeActiveFieldName,\n    cardSetChangeFitForActiveField,\n    cardSetChangeCropForActiveField,\n    cardSetChangeImage,\n    cardSetLockActiveField,\n    cardSetLowerActiveFieldToBottom,\n    cardSetRaiseActiveFieldToTop,\n    cardSetRemoveActiveField,\n    cardSetUnlockActiveField,\n    imageListRequest,\n} from '../actions';\nimport ColorButton from './ColorButton';\nimport style from './SidebarImage.module.css';\n\ninterface StateProps {\n    isAuthenticated: boolean;\n    activeFieldInfo?: FieldInfo;\n    crop: boolean;\n    activeCardId?: string;\n    filter: string;\n    images: ImageArray;\n    cardsAllIds: IdsArray;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\ninterface LocalState {\n    location: string;\n    applyToAllCards: boolean;\n}\n\nexport class SidebarImage extends Component<Props, LocalState> {\n    state = {\n        location: 'all',\n        applyToAllCards: false,\n    };\n\n    handleAddImageClick = () => {\n        const { dispatch } = this.props;\n        dispatch(cardSetAddImageField());\n    };\n\n    changeImage = (ii: ImageInfo) => {\n        const { cardsAllIds, activeCardId, activeFieldInfo, dispatch } = this.props;\n        const { applyToAllCards } = this.state;\n\n        if (activeFieldInfo) {\n            if (applyToAllCards) {\n                for (const cardId of cardsAllIds) {\n                    dispatch(cardSetChangeImage(cardId, activeFieldInfo.id, ii));\n                }\n            } else if (activeCardId) {\n                dispatch(cardSetChangeImage(activeCardId, activeFieldInfo.id, ii));\n            }\n        }\n    };\n\n    handleRemoveImageFromFieldClick = () => {\n        const ii: ImageInfo = { url: undefined, base64: undefined };\n        this.changeImage(ii);\n    };\n\n    handleRemoveClick = () => {\n        const { activeFieldInfo, dispatch } = this.props;\n        if (activeFieldInfo !== undefined) {\n            dispatch(cardSetRemoveActiveField());\n        }\n    };\n\n    handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeFieldInfo, dispatch } = this.props;\n        const name = event.target.value.trim();\n        if (activeFieldInfo !== undefined) {\n            dispatch(cardSetChangeActiveFieldName(name));\n        }\n    };\n\n    handleFilterChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        const { location } = this.state;\n        const filter = event.target.value;\n        dispatch(imageListRequest(filter, location));\n    };\n\n    handleImageSelect = (imageName: string) => {\n        const { activeFieldInfo } = this.props;\n\n        if (activeFieldInfo !== undefined) {\n            const color = activeFieldInfo && activeFieldInfo.color;\n\n            const ii: ImageInfo = { url: `/api/imagefiles/${imageName}`, color, base64: undefined };\n            this.changeImage(ii);\n        }\n    };\n\n    handleRaiseToTop = () => {\n        const { activeFieldInfo, dispatch } = this.props;\n        if (activeFieldInfo !== undefined) {\n            dispatch(cardSetRaiseActiveFieldToTop());\n        }\n    };\n\n    handleLowerToBottom = () => {\n        const { activeFieldInfo, dispatch } = this.props;\n        if (activeFieldInfo !== undefined) {\n            dispatch(cardSetLowerActiveFieldToBottom());\n        }\n    };\n\n    handleLockField = () => {\n        const { activeFieldInfo, dispatch } = this.props;\n        if (activeFieldInfo !== undefined) {\n            dispatch(cardSetLockActiveField());\n        }\n    };\n\n    handleUnlockField = () => {\n        const { activeFieldInfo, dispatch } = this.props;\n        if (activeFieldInfo !== undefined) {\n            dispatch(cardSetUnlockActiveField());\n        }\n    };\n\n    handleFitOptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        const fit = event.target.value;\n\n        dispatch(cardSetChangeFitForActiveField(fit));\n    };\n\n    handleOptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { filter, dispatch } = this.props;\n        const location = event.target.value;\n\n        this.setState({ location });\n        dispatch(imageListRequest(filter, location));\n    };\n\n    handleColorChange = (color: ColorResult) => {\n        const ii: ImageInfo = { color: color.hex };\n        this.changeImage(ii);\n    };\n\n    handleRemoveColorClick = () => {\n        const ii: ImageInfo = { color: undefined };\n        this.changeImage(ii);\n    };\n\n    handleApplyToAllCardChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ applyToAllCards: event.target.checked });\n    };\n\n    handleChangeCrop = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeFieldInfo, dispatch } = this.props;\n        if (activeFieldInfo !== undefined) {\n            dispatch(cardSetChangeCropForActiveField(event.target.checked));\n        }\n    };\n\n    render() {\n        const { activeFieldInfo, crop, filter, visible } = this.props;\n        const { location, applyToAllCards } = this.state;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'grid' : 'none' }}>\n                <div>\n                    <button onClick={this.handleAddImageClick} title=\"Add image field\">\n                        <i className=\"material-icons\">add_photo_alternate</i>\n                    </button>\n\n                    {activeFieldInfo !== undefined && (\n                        <>\n                            <button onClick={this.handleRaiseToTop} title=\"Raise image to top\">\n                                <i className=\"material-icons\">arrow_upward</i>\n                            </button>\n                            <button onClick={this.handleLowerToBottom} title=\"Lower image to bottom\">\n                                <i className=\"material-icons\">arrow_downward</i>\n                            </button>\n                        </>\n                    )}\n\n                    {activeFieldInfo &&\n                        activeFieldInfo.type === 'image' &&\n                        (activeFieldInfo.url || activeFieldInfo.base64) && (\n                            <button onClick={this.handleRemoveImageFromFieldClick} title=\"Remove image from field\">\n                                <i className=\"material-icons\">remove_circle_outline</i>\n                            </button>\n                        )}\n\n                    {activeFieldInfo !== undefined && !activeFieldInfo.locked && (\n                        <button\n                            onClick={this.handleLockField}\n                            title=\"Lock image field. Locked field can't be dragged, rotated, resized and removed.\"\n                        >\n                            <i className=\"material-icons\">lock_open</i>\n                        </button>\n                    )}\n\n                    {activeFieldInfo !== undefined && activeFieldInfo.locked && (\n                        <button\n                            onClick={this.handleUnlockField}\n                            title=\"Unlock image field. Unlocked text field can be dragged, rotated, resized and removed.\"\n                        >\n                            <i className=\"material-icons\">lock</i>\n                        </button>\n                    )}\n\n                    <button\n                        className={activeFieldInfo === undefined || activeFieldInfo.locked ? style.disabled : ''}\n                        onClick={this.handleRemoveClick}\n                        title=\"Remove field\"\n                    >\n                        <i className=\"material-icons\">remove</i>\n                    </button>\n\n                    {activeFieldInfo !== undefined && (\n                        <input\n                            type=\"text\"\n                            value={activeFieldInfo.name || ''}\n                            placeholder={activeFieldInfo.id}\n                            onChange={this.handleNameChange}\n                            title=\"Change name of image field.\"\n                        />\n                    )}\n\n                    {activeFieldInfo && activeFieldInfo.type === 'image' && (\n                        <form>\n                            <div>\n                                Fit:\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        value=\"width\"\n                                        checked={!activeFieldInfo.fit || activeFieldInfo.fit === 'width'}\n                                        onChange={this.handleFitOptionChange}\n                                    />\n                                    width\n                                </label>\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        value=\"height\"\n                                        checked={activeFieldInfo.fit === 'height'}\n                                        onChange={this.handleFitOptionChange}\n                                    />\n                                    height\n                                </label>\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        value=\"stretch\"\n                                        checked={activeFieldInfo.fit === 'stretch'}\n                                        onChange={this.handleFitOptionChange}\n                                    />\n                                    stretch\n                                </label>\n                            </div>\n                        </form>\n                    )}\n                </div>\n\n                {activeFieldInfo && activeFieldInfo.type === 'image' && (\n                    <>\n                        <div>\n                            <label>\n                                <input type=\"checkbox\" checked={crop} onChange={this.handleChangeCrop} />\n                                Crop\n                            </label>\n                            <ColorButton\n                                color={(activeFieldInfo && activeFieldInfo.color) || '#FFFFFF'}\n                                onChange={this.handleColorChange}\n                            />\n                            {activeFieldInfo && activeFieldInfo.color && (\n                                <button onClick={this.handleRemoveColorClick} title=\"Remove color\">\n                                    <i className=\"material-icons\">remove_circle</i>\n                                </button>\n                            )}\n                            <label>\n                                <input\n                                    type=\"checkbox\"\n                                    checked={applyToAllCards}\n                                    onChange={this.handleApplyToAllCardChange}\n                                />\n                                Apply to all cards\n                            </label>\n                        </div>\n                    </>\n                )}\n                <div>\n                    <form>\n                        Source:\n                        <label>\n                            <input\n                                type=\"radio\"\n                                value=\"all\"\n                                checked={location === 'all'}\n                                onChange={this.handleOptionChange}\n                            />\n                            All\n                        </label>\n                        <label>\n                            <input\n                                type=\"radio\"\n                                value=\"user\"\n                                checked={location === 'user'}\n                                onChange={this.handleOptionChange}\n                            />\n                            User\n                        </label>\n                        <label>\n                            <input\n                                type=\"radio\"\n                                value=\"game\"\n                                checked={location === 'game'}\n                                onChange={this.handleOptionChange}\n                            />\n                            Game\n                        </label>\n                    </form>\n                </div>\n\n                <div>\n                    <input type=\"text\" placeholder=\"Search...\" value={filter} onChange={this.handleFilterChange} />\n                </div>\n                <div className={style.images}>\n                    {this.props.images.map(im => {\n                        return (\n                            <img\n                                key={im.id}\n                                src={`/api/imagefiles/${im.name}`}\n                                data-width={im.width}\n                                data-height={im.height}\n                                onClick={() => this.handleImageSelect(im.name)}\n                                alt={im.name}\n                            />\n                        );\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    const activeFieldInfo =\n        state.cardset.present.activeCardId !== undefined && state.cardset.present.activeFieldId !== undefined\n            ? state.cardset.present.fields[state.cardset.present.activeCardId][state.cardset.present.activeFieldId]\n            : undefined;\n\n    const activeCardId = state.cardset.present.activeCardId;\n\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        activeFieldInfo,\n        crop: activeFieldInfo && activeFieldInfo.type === 'image' ? activeFieldInfo.crop || false : false,\n        activeCardId,\n        images: state.images.images,\n        filter: state.images.filter,\n        cardsAllIds: state.cardset.present.cardsAllIds,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarImage);\n","import 'filepond/dist/filepond.min.css';\n\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport { connect } from 'react-redux';\nimport FilePondPluginFileValidateType from 'filepond-plugin-file-validate-type';\nimport Papa from 'papaparse';\nimport React, { Component } from 'react';\nimport md5 from 'md5';\nimport shortid from 'shortid';\n\nimport {\n    CardType,\n    CardsCollection,\n    DispatchProps,\n    IdsArray,\n    SidebarOwnProps,\n    FieldInfoByCardCollection,\n    FieldInfoCollection,\n} from '../types';\nimport { FPLoadCallback, FPRevertLoadCallback, cardSetImportData, messageDisplay } from '../actions';\nimport { State } from '../reducers';\nimport { downloadBlob } from '../utils';\nimport style from './SidebarImportExport.module.css';\n\nregisterPlugin(FilePondPluginFileValidateType);\n\ninterface StateProps {\n    activeGame: string | null;\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    cardsAllIds: IdsArray;\n    cardsById: CardsCollection;\n    fieldsAllIds: IdsArray;\n    fields: FieldInfoByCardCollection;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarImportExport extends Component<Props> {\n    prepareImagePaths = (fields: FieldInfoByCardCollection) => {\n        const { activeGame } = this.props;\n        if (activeGame === null) return fields;\n\n        const ending = '_' + md5(activeGame);\n\n        let preparedImages: FieldInfoByCardCollection = {};\n\n        for (const cardId in fields) {\n            let fieldsByCard = { ...fields[cardId] };\n            for (const fieldId in fieldsByCard) {\n                let imageInfo = { ...fieldsByCard[fieldId] };\n                if (imageInfo.type === 'image') {\n                    let url = imageInfo.url || '';\n                    if (url.endsWith(ending)) {\n                        url = url.replace(ending, '');\n                    } else {\n                        imageInfo.global = true;\n                    }\n\n                    imageInfo.url = url.replace('/api/imagefiles/', '');\n                }\n                fieldsByCard[fieldId] = imageInfo;\n            }\n            preparedImages[cardId] = fieldsByCard;\n        }\n\n        return preparedImages;\n    };\n\n    handleExportJson = () => {\n        const { width, height, isTwoSided, cardsAllIds, cardsById, fields, fieldsAllIds } = this.props;\n\n        const preparedFields = this.prepareImagePaths(fields);\n\n        const data = {\n            width,\n            height,\n            isTwoSided,\n            cardsAllIds,\n            cardsById,\n            fields: preparedFields,\n            fieldsAllIds,\n        };\n\n        let json = JSON.stringify(data, null, 4);\n        let blob = new Blob([json], { type: 'octet/stream' });\n        let url = window.URL.createObjectURL(blob);\n        downloadBlob(url, 'cardset.json');\n    };\n\n    handleExportCsv = () => {\n        const { cardsAllIds, cardsById, fields, fieldsAllIds } = this.props;\n\n        const preparedFields = this.prepareImagePaths(fields);\n\n        let csvData: (string | number)[][] = [];\n        let header = ['card_id', 'card_count'];\n        let usedNames: { [key: string]: boolean } = {};\n        for (const plId of fieldsAllIds) {\n            const fieldInfo = fields[cardsAllIds[0]][plId];\n            const name = fieldInfo.name || fieldInfo.id;\n            if (!(name in usedNames)) {\n                header.push(name);\n                if (fieldInfo.type === 'image') {\n                    header.push(`${name}_global`);\n                }\n                usedNames[name] = false;\n            }\n        }\n        csvData.push(header);\n\n        for (const cardId of cardsAllIds) {\n            let card = cardsById[cardId];\n\n            let dataRow: (string | number)[] = [cardId, card.count];\n\n            let written = { ...usedNames };\n            for (const fieldId of fieldsAllIds) {\n                const fieldIndo = fields[cardId][fieldId];\n                const name = fieldIndo.name || fieldIndo.id;\n\n                if (!written[name]) {\n                    let fieldInfo = preparedFields[cardId][fieldId];\n                    if (fieldInfo.type === 'text') {\n                        dataRow.push(fieldInfo.value);\n                    } else if (fieldInfo.type === 'image') {\n                        dataRow.push(fieldInfo.url || '');\n                        dataRow.push(fieldInfo.global ? 'y' : 'n');\n                    }\n                    written[name] = true;\n                }\n            }\n            csvData.push(dataRow);\n        }\n\n        let csv = Papa.unparse(csvData);\n        let blob = new Blob([csv], { type: 'octet/stream' });\n        let url = window.URL.createObjectURL(blob);\n        downloadBlob(url, 'cardset.csv');\n    };\n\n    handleProcess = (fieldName: string, file: File, metadata: { [propName: string]: string }, load: FPLoadCallback) => {\n        const { dispatch, activeGame, fields, fieldsAllIds, cardsById, cardsAllIds } = this.props;\n        if (activeGame === null) return;\n\n        var reader = new FileReader();\n        reader.readAsText(file, 'UTF-8');\n        reader.onload = function(e) {\n            if (e.target === null) return;\n\n            let data = null;\n            const ending = '_' + md5(activeGame);\n\n            if (file.type === 'application/json') {\n                // eslint-disable-next-line\n                data = JSON.parse((e.target as any).result);\n\n                for (const cardId in data.fields) {\n                    const cardFields: FieldInfoCollection = data.fields[cardId];\n                    for (const fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'image') {\n                            let isGlobal = fieldInfo.global || false;\n\n                            fieldInfo.url = `/api/imagefiles/${fieldInfo.url}${isGlobal ? '' : ending}`;\n                            delete fieldInfo.global;\n                        }\n                    }\n                }\n            } else if (file.type === 'text/csv') {\n                // eslint-disable-next-line\n                const csvData = Papa.parse((e.target as any).result, { header: true });\n\n                let newCardsAllIds: IdsArray = [];\n                let newCardsById: CardsCollection = {};\n                let newFields: FieldInfoByCardCollection = {};\n\n                for (const row of csvData.data) {\n                    const card: CardType = {\n                        id: row['card_id'] || shortid.generate(),\n                        count: row['card_count'] || 1,\n                    };\n\n                    newFields[card.id] = {\n                        ...fields[card.id in cardsById ? card.id : cardsAllIds[0]],\n                    };\n\n                    newCardsAllIds.push(card.id);\n                    newCardsById[card.id] = card;\n\n                    for (const fieldId of fieldsAllIds) {\n                        const fieldInfo = newFields[card.id][fieldId];\n                        const name = fieldInfo.name || fieldInfo.id;\n\n                        if (row[name]) {\n                            if (fieldInfo.type === 'image') {\n                                const isGlobal = row[`${name}_global`] === 'y';\n                                const url = row[name];\n\n                                newFields[card.id][fieldId] = {\n                                    ...fieldInfo,\n                                    url: `/api/imagefiles/${url}${isGlobal ? '' : ending}`,\n                                };\n                            } else if (fieldInfo.type === 'text') {\n                                newFields[card.id][fieldId] = {\n                                    ...fieldInfo,\n                                    value: row[name],\n                                };\n                            }\n                        }\n                    }\n                }\n\n                data = {\n                    cardsAllIds: newCardsAllIds,\n                    cardsById: newCardsById,\n                    fields: newFields,\n                };\n            }\n\n            if (data !== null) {\n                dispatch(cardSetImportData(data));\n            }\n        };\n        reader.onerror = function() {\n            dispatch(messageDisplay('error', 'Problem during import.'));\n        };\n\n        load(file.name);\n    };\n\n    handleRevert = (uniqueFileId: string, load: FPRevertLoadCallback) => {\n        load();\n    };\n\n    render() {\n        const { visible } = this.props;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'grid' : 'none' }}>\n                <div>\n                    Here you can export and import your card set data. JSON file contains templates of cards, text and\n                    image data by card, CSV file contains only text and image data by card.\n                </div>\n                <button onClick={this.handleExportJson}>\n                    <i className=\"material-icons\">cloud_download</i> Get JSON\n                </button>\n                <button onClick={this.handleExportCsv}>\n                    <i className=\"material-icons\">cloud_download</i> Get CSV\n                </button>\n\n                <div>Drag & Drop or browser for JSON or CSV file here:</div>\n\n                <FilePond\n                    server={{\n                        process: this.handleProcess,\n                        revert: this.handleRevert,\n                    }}\n                    acceptedFileTypes={['text/csv', 'application/json']}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        activeGame: state.games.active,\n        width: state.cardset.present.width,\n        height: state.cardset.present.height,\n        isTwoSided: state.cardset.present.isTwoSided,\n        cardsAllIds: state.cardset.present.cardsAllIds,\n        cardsById: state.cardset.present.cardsById,\n        fieldsAllIds: state.cardset.present.fieldsAllIds,\n        fields: state.cardset.present.fields,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarImportExport);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, IdsArray, SidebarOwnProps, FieldInfo, FieldInfoByCardCollection } from '../types';\nimport { State } from '../reducers';\nimport {\n    cardSetActiveCardAndField,\n    cardSetChangeActiveFieldName,\n    cardSetChangeFieldAngle,\n    cardSetChangeFieldSize,\n    cardSetLockActiveField,\n    cardSetChangeFieldPosition,\n    cardSetLowerActiveFieldToBottom,\n    cardSetRaiseActiveFieldToTop,\n    cardSetUnlockActiveField,\n    cardSetChangeUnclickableForActiveField,\n} from '../actions';\nimport style from './SidebarMeasurements.module.css';\nimport shortid from 'shortid';\n\ninterface StateProps {\n    activeField?: FieldInfo;\n    activeCardId?: string;\n    fields: FieldInfoByCardCollection;\n    fieldsAllIds: IdsArray;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarMeasurements extends Component<Props> {\n    handlePrevField = () => {\n        const { activeCardId, activeField, fieldsAllIds, dispatch } = this.props;\n        if (fieldsAllIds.length === 0 || activeCardId === null) return;\n\n        let prevField = fieldsAllIds[fieldsAllIds.length - 1];\n        if (activeField !== undefined) {\n            let idx = fieldsAllIds.indexOf(activeField.id);\n            if (idx > 0) prevField = fieldsAllIds[idx - 1];\n        }\n\n        dispatch(cardSetActiveCardAndField(activeCardId, (activeField && activeField.isOnBack) || false, prevField));\n    };\n\n    handleNextField = () => {\n        const { activeCardId, activeField, fieldsAllIds, dispatch } = this.props;\n        if (fieldsAllIds.length === 0 || activeCardId === null) return;\n\n        let nextField = fieldsAllIds[0];\n        if (activeField !== undefined) {\n            let idx = fieldsAllIds.indexOf(activeField.id);\n            if (idx !== -1 && idx !== fieldsAllIds.length - 1) nextField = fieldsAllIds[idx + 1];\n        }\n\n        dispatch(cardSetActiveCardAndField(activeCardId, (activeField && activeField.isOnBack) || false, nextField));\n    };\n\n    handleRaiseToTop = () => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            dispatch(cardSetRaiseActiveFieldToTop());\n        }\n    };\n\n    handleLowerToBottom = () => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            dispatch(cardSetLowerActiveFieldToBottom());\n        }\n    };\n\n    handleLockField = () => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            dispatch(cardSetLockActiveField());\n        }\n    };\n\n    handleUnlockField = () => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            dispatch(cardSetUnlockActiveField());\n        }\n    };\n\n    handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        const name = event.target.value.trim();\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeActiveFieldName(name));\n        }\n    };\n\n    handleWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        const width = parseFloat(event.target.value);\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeFieldSize(undefined, activeField.id, width, activeField.height, shortid.generate()));\n        }\n    };\n\n    handleHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        const height = parseFloat(event.target.value);\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeFieldSize(undefined, activeField.id, activeField.width, height, shortid.generate()));\n        }\n    };\n\n    handleXChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        const x = parseFloat(event.target.value);\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeFieldPosition(undefined, activeField.id, x, activeField.y, shortid.generate()));\n        }\n    };\n\n    handleYChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        const y = parseFloat(event.target.value);\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeFieldPosition(undefined, activeField.id, activeField.x, y, shortid.generate()));\n        }\n    };\n\n    handleAngleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        const angle = (parseFloat(event.target.value) * Math.PI) / 180;\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeFieldAngle(undefined, activeField.id, angle, shortid.generate()));\n        }\n    };\n\n    handleChangeUnclickable = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeUnclickableForActiveField(event.target.checked));\n        }\n    };\n\n    render() {\n        const { activeCardId, activeField, visible } = this.props;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'initial' : 'none' }}>\n                {activeCardId !== undefined && (\n                    <>\n                        <button onClick={this.handlePrevField} title=\"Previous field\">\n                            <i className=\"material-icons\">arrow_back</i>\n                        </button>\n                        <button onClick={this.handleNextField} title=\"Next field\">\n                            <i className=\"material-icons\">arrow_forward</i>\n                        </button>\n                    </>\n                )}\n\n                {activeField !== undefined && (\n                    <>\n                        <button onClick={this.handleRaiseToTop} title=\"Raise to top\">\n                            <i className=\"material-icons\">arrow_upward</i>\n                        </button>\n                        <button onClick={this.handleLowerToBottom} title=\"Lower to bottom\">\n                            <i className=\"material-icons\">arrow_downward</i>\n                        </button>\n                    </>\n                )}\n\n                {activeField !== undefined && !activeField.locked && (\n                    <button\n                        onClick={this.handleLockField}\n                        title=\"Lock field. Locked field can't be dragged, rotated, resized and removed.\"\n                    >\n                        <i className=\"material-icons\">lock_open</i>\n                    </button>\n                )}\n\n                {activeField !== undefined && activeField.locked && (\n                    <button\n                        onClick={this.handleUnlockField}\n                        title=\"Unlock field. Unlocked field can be dragged, rotated, resized and removed.\"\n                    >\n                        <i className=\"material-icons\">lock</i>\n                    </button>\n                )}\n\n                {activeField !== undefined && (\n                    <div>\n                        <label>\n                            Unclickable field:{' '}\n                            <input\n                                type=\"checkbox\"\n                                onChange={this.handleChangeUnclickable}\n                                className=\"form-control\"\n                                checked={activeField.unclickable ? true : false}\n                            />\n                        </label>\n                    </div>\n                )}\n\n                {activeField !== undefined && (\n                    <div>\n                        <label>\n                            Field name:\n                            <input\n                                type=\"text\"\n                                value={activeField.name || ''}\n                                placeholder={activeField.id}\n                                onChange={this.handleNameChange}\n                                title=\"Change name of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            Width:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={activeField.width}\n                                placeholder=\"Width\"\n                                onChange={this.handleWidthChange}\n                                title=\"Change width of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            Height:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={activeField.height}\n                                placeholder=\"Height\"\n                                onChange={this.handleHeightChange}\n                                title=\"Change width of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            X:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={activeField.x}\n                                placeholder=\"Width\"\n                                onChange={this.handleXChange}\n                                title=\"Change x coordinate of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            Y:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={activeField.y}\n                                placeholder=\"Height\"\n                                onChange={this.handleYChange}\n                                title=\"Change y coordinate of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            Angle:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={(activeField.angle * 180) / Math.PI}\n                                placeholder=\"Angle\"\n                                onChange={this.handleAngleChange}\n                                title=\"Change rotation angle of field.\"\n                            />\n                        </label>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    const activeField =\n        state.cardset.present.activeCardId !== undefined && state.cardset.present.activeFieldId !== undefined\n            ? state.cardset.present.fields[state.cardset.present.activeCardId][state.cardset.present.activeFieldId]\n            : undefined;\n\n    return {\n        activeField,\n        activeCardId: state.cardset.present.activeCardId,\n        fields: state.cardset.present.fields,\n        fieldsAllIds: state.cardset.present.fieldsAllIds,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarMeasurements);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport { State } from '../reducers';\nimport {\n    cardSetChangeHeight,\n    cardSetChangeIsTwoSided,\n    cardSetChangeSnappingDistance,\n    cardSetChangeWidth,\n    cardSetSetZoom,\n} from '../actions';\nimport style from './SidebarSettings.module.css';\n\ninterface StateProps {\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    snappingDistance: number;\n    zoom: number;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\ninterface LocalState {\n    maintainAspectRatio: boolean;\n    resizeContent: boolean;\n}\n\nexport class SidebarSettings extends Component<Props, LocalState> {\n    state: LocalState = {\n        maintainAspectRatio: true,\n        resizeContent: false,\n    };\n\n    handleWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        const { maintainAspectRatio, resizeContent } = this.state;\n        dispatch(cardSetChangeWidth(parseFloat(event.target.value), maintainAspectRatio, resizeContent));\n    };\n\n    handleHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        const { maintainAspectRatio, resizeContent } = this.state;\n        dispatch(cardSetChangeHeight(parseFloat(event.target.value), maintainAspectRatio, resizeContent));\n    };\n\n    handleIsTwoSidedChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeIsTwoSided(event.target.checked));\n    };\n\n    handleZoom = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetSetZoom(parseFloat(event.target.value)));\n    };\n\n    handleSnappingDistance = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeSnappingDistance(parseFloat(event.target.value)));\n    };\n\n    render() {\n        const { width, height, isTwoSided, snappingDistance, visible, zoom } = this.props;\n        const { maintainAspectRatio, resizeContent } = this.state;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'initial' : 'none' }}>\n                <label htmlFor=\"card_width\">Card width (mm):</label>\n                <input\n                    id=\"card_width\"\n                    type=\"number\"\n                    min=\"0\"\n                    step=\"0.1\"\n                    onChange={this.handleWidthChange}\n                    className=\"form-control\"\n                    placeholder=\"width\"\n                    value={width}\n                />\n                <label htmlFor=\"card_height\">Card height (mm):</label>\n                <input\n                    id=\"card_height\"\n                    type=\"number\"\n                    min=\"0\"\n                    step=\"0.1\"\n                    onChange={this.handleHeightChange}\n                    className=\"form-control\"\n                    placeholder=\"height\"\n                    value={height}\n                />\n                <div>\n                    <label>\n                        Maintain aspect ratio:{' '}\n                        <input\n                            type=\"checkbox\"\n                            onChange={() => {\n                                this.setState({ maintainAspectRatio: !maintainAspectRatio });\n                            }}\n                            className=\"form-control\"\n                            checked={maintainAspectRatio}\n                        />\n                    </label>\n                </div>\n\n                <div>\n                    <label>\n                        Resize content:{' '}\n                        <input\n                            type=\"checkbox\"\n                            onChange={() => {\n                                this.setState({ resizeContent: !resizeContent });\n                            }}\n                            className=\"form-control\"\n                            checked={resizeContent}\n                        />\n                    </label>\n                </div>\n\n                <label>\n                    Cards have two sides:{' '}\n                    <input\n                        type=\"checkbox\"\n                        onChange={this.handleIsTwoSidedChange}\n                        className=\"form-control\"\n                        checked={isTwoSided}\n                    />\n                </label>\n                <div>\n                    <label htmlFor=\"zoom\">Zoom (if you want to see details or big picture)</label>\n                    <input\n                        id=\"zoom\"\n                        type=\"number\"\n                        min=\"0.1\"\n                        step=\"0.1\"\n                        onChange={this.handleZoom}\n                        className=\"form-control\"\n                        placeholder=\"zoom\"\n                        value={zoom}\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"zoom\">Snapping distance in mm. 0 to disable.</label>\n                    <input\n                        id=\"zoom\"\n                        type=\"number\"\n                        min=\"0\"\n                        step=\"0.1\"\n                        onChange={this.handleSnappingDistance}\n                        className=\"form-control\"\n                        placeholder=\"Snapping distance\"\n                        value={snappingDistance}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        width: state.cardset.present.width,\n        height: state.cardset.present.height,\n        isTwoSided: state.cardset.present.isTwoSided,\n        snappingDistance: state.cardset.present.snappingDistance,\n        zoom: state.cardset.present.zoom,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarSettings);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport WebFont from 'webfontloader';\n\nimport { DEFAULT_LINE_HEIGHT } from '../constants';\nimport {\n    Dispatch,\n    cardSetChangeActiveTextFieldFontFamilyAndVariant,\n    cardSetChangeActiveTextFieldFontSize,\n    cardSetChangeActiveTextFieldFontVariant,\n    cardSetChangeActiveTextFieldLineHeight,\n} from '../actions';\nimport { State } from '../reducers';\nimport style from './FontSelector.module.css';\nimport webfonts from './webfonts.json';\n\ninterface WebFontsInfo {\n    [propName: string]: {\n        [propName: string]: string;\n    };\n}\n\ninterface FontOption {\n    value: string;\n    label: string;\n}\n\nconst options: FontOption[] = Object.keys(webfonts)\n    .sort()\n    .map(fi => ({ value: fi, label: fi }));\n\ninterface StateProps {\n    activeFont: string;\n    activeFontVariant: string;\n    activeFontSize: number;\n    activeLineHeight: number;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = StateProps & DispatchProps;\n\nclass FontSelector extends Component<Props> {\n    getFontStringForLoad = (family: string, variant: string) => {\n        let stringForLoad = family;\n        if (variant !== 'regular') {\n            stringForLoad += ':' + variant;\n        }\n        return stringForLoad;\n    };\n\n    handleChange = (selectedOption?: FontOption | FontOption[] | null) => {\n        if (!selectedOption) return;\n\n        const fontFamily = (selectedOption as FontOption).value;\n\n        let fontVariant = this.props.activeFontVariant;\n        const wf: WebFontsInfo = webfonts;\n        if (!(fontVariant in wf[fontFamily])) {\n            fontVariant = Object.keys(wf[fontFamily]).sort()[0];\n        }\n\n        WebFont.load({\n            google: {\n                families: [this.getFontStringForLoad(fontFamily, fontVariant)],\n            },\n            active: () => {\n                const { dispatch } = this.props;\n                dispatch(cardSetChangeActiveTextFieldFontFamilyAndVariant(fontFamily, fontVariant));\n            },\n        });\n    };\n\n    handleFontVariantChange = (selectedOption?: FontOption | FontOption[] | null) => {\n        if (!selectedOption) return;\n\n        const value = (selectedOption as FontOption).value;\n        WebFont.load({\n            google: {\n                families: [this.getFontStringForLoad(this.props.activeFont, value)],\n            },\n            active: () => {\n                const { dispatch } = this.props;\n                dispatch(cardSetChangeActiveTextFieldFontVariant(value));\n            },\n        });\n    };\n\n    handleFontSizeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeActiveTextFieldFontSize(parseFloat(event.target.value)));\n    };\n\n    handleLineHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeActiveTextFieldLineHeight(parseFloat(event.target.value)));\n    };\n\n    render() {\n        const selectedFontFamily = options.find(f => f.value === this.props.activeFont);\n\n        const fontVariantOptions: FontOption[] = Object.keys((webfonts as WebFontsInfo)[this.props.activeFont])\n            .sort()\n            .map(fv => ({ value: fv, label: fv }));\n\n        const selectedFontVariant = fontVariantOptions.find(f => f.value === this.props.activeFontVariant);\n\n        return (\n            <>\n                <input\n                    type=\"number\"\n                    value={this.props.activeFontSize}\n                    onChange={this.handleFontSizeChange}\n                    title=\"Font size\"\n                />\n                <Select\n                    className={style.fontFamily}\n                    value={selectedFontFamily}\n                    onChange={this.handleChange}\n                    options={options}\n                />\n                <Select\n                    className={style.fontVariant}\n                    value={selectedFontVariant}\n                    onChange={this.handleFontVariantChange}\n                    options={fontVariantOptions}\n                />\n                <input\n                    type=\"number\"\n                    value={this.props.activeLineHeight}\n                    onChange={this.handleLineHeightChange}\n                    title=\"Line height\"\n                    step=\"0.01\"\n                />\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    let activeFont = state.cardset.present.textSettings.fontFamily;\n    let activeFontVariant = state.cardset.present.textSettings.fontVariant;\n    let activeFontSize = state.cardset.present.textSettings.fontSize;\n    let activeLineHeight = state.cardset.present.textSettings.lineHeight || DEFAULT_LINE_HEIGHT;\n\n    return {\n        activeFont,\n        activeFontVariant,\n        activeFontSize,\n        activeLineHeight,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, {}, State>(mapStateToProps)(FontSelector);\n","import { ColorResult } from 'react-color';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, SidebarOwnProps, FieldInfo } from '../types';\nimport { State } from '../reducers';\nimport {\n    cardSetAddTextField,\n    cardSetChangeActiveFieldName,\n    cardSetChangeActiveTextFieldAlign,\n    cardSetLockActiveField,\n    cardSetLowerActiveFieldToBottom,\n    cardSetRaiseActiveFieldToTop,\n    cardSetRemoveActiveField,\n    cardSetUnlockActiveField,\n    cardSetChangeActiveTextFieldColor,\n} from '../actions';\nimport ColorButton from './ColorButton';\nimport FontSelector from './FontSelector';\nimport style from './SidebarText.module.css';\n\ninterface StateProps {\n    isAuthenticated: boolean;\n    activeField?: FieldInfo;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarText extends Component<Props> {\n    handleAddTextClick = () => {\n        const { dispatch } = this.props;\n        dispatch(cardSetAddTextField());\n    };\n\n    handleSetTextAlignLeft = () => {\n        const selection = window.getSelection();\n        const range = selection.getRangeAt(0);\n        if (selection.rangeCount === 1 && range.collapsed) {\n            const { dispatch } = this.props;\n            dispatch(cardSetChangeActiveTextFieldAlign('left'));\n        } else {\n            document.execCommand('justifyleft');\n        }\n    };\n\n    handleSetTextAlignCenter = () => {\n        const selection = window.getSelection();\n        const range = selection.getRangeAt(0);\n        if (selection.rangeCount === 1 && range.collapsed) {\n            const { dispatch } = this.props;\n            dispatch(cardSetChangeActiveTextFieldAlign('center'));\n        } else {\n            document.execCommand('justifycenter');\n        }\n    };\n\n    handleSetTextAlignRight = () => {\n        const selection = window.getSelection();\n        const range = selection.getRangeAt(0);\n        if (selection.rangeCount === 1 && range.collapsed) {\n            const { dispatch } = this.props;\n            dispatch(cardSetChangeActiveTextFieldAlign('right'));\n        } else {\n            document.execCommand('justifyright');\n        }\n    };\n\n    handleSetTextBold = () => {\n        document.execCommand('bold');\n    };\n\n    handleSetTextItalic = () => {\n        document.execCommand('italic');\n    };\n\n    handleRemoveClick = () => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            dispatch(cardSetRemoveActiveField());\n        }\n    };\n\n    handleRaiseToTop = () => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            dispatch(cardSetRaiseActiveFieldToTop());\n        }\n    };\n\n    handleLowerToBottom = () => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            dispatch(cardSetLowerActiveFieldToBottom());\n        }\n    };\n\n    handleLockField = () => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            dispatch(cardSetLockActiveField());\n        }\n    };\n\n    handleUnlockField = () => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            dispatch(cardSetUnlockActiveField());\n        }\n    };\n\n    handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        const name = event.target.value.trim();\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeActiveFieldName(name));\n        }\n    };\n\n    handleColorChange = (color: ColorResult) => {\n        const selection = window.getSelection();\n        const range = selection.getRangeAt(0);\n        if (selection.rangeCount === 1 && range.collapsed) {\n            const { dispatch } = this.props;\n            dispatch(cardSetChangeActiveTextFieldColor(color.hex));\n        } else {\n            document.execCommand('forecolor', false, color.hex);\n        }\n    };\n\n    render() {\n        const { activeField, visible } = this.props;\n\n        let color = '#000000';\n        if (activeField && activeField.type === 'text' && activeField.color) {\n            color = activeField.color;\n        }\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'initial' : 'none' }}>\n                <button onClick={this.handleAddTextClick} title=\"Add text field\">\n                    <i className=\"material-icons\">text_fields</i>\n                </button>\n                {activeField !== undefined && (\n                    <>\n                        <button onClick={this.handleRaiseToTop} title=\"Raise text to top\">\n                            <i className=\"material-icons\">arrow_upward</i>\n                        </button>\n                        <button onClick={this.handleLowerToBottom} title=\"Lower text to bottom\">\n                            <i className=\"material-icons\">arrow_downward</i>\n                        </button>\n                    </>\n                )}\n\n                {activeField !== undefined && !activeField.locked && (\n                    <button\n                        onClick={this.handleLockField}\n                        title=\"Lock text field. Locked field can't be dragged, rotated, resized and removed.\"\n                    >\n                        <i className=\"material-icons\">lock_open</i>\n                    </button>\n                )}\n\n                {activeField !== undefined && activeField.locked && (\n                    <button\n                        onClick={this.handleUnlockField}\n                        title=\"Unlock text field. Unlocked text field can be dragged, rotated, resized and removed.\"\n                    >\n                        <i className=\"material-icons\">lock</i>\n                    </button>\n                )}\n\n                <button\n                    className={activeField === undefined || activeField.locked ? style.disabled : ''}\n                    onClick={this.handleRemoveClick}\n                    title=\"Remove field\"\n                >\n                    <i className=\"material-icons\">remove</i>\n                </button>\n\n                {activeField !== undefined && (\n                    <input\n                        type=\"text\"\n                        value={activeField.name || ''}\n                        placeholder={activeField.id}\n                        onChange={this.handleNameChange}\n                        title=\"Change name of text field.\"\n                    />\n                )}\n\n                <div>\n                    <button onClick={this.handleSetTextAlignLeft} title=\"Align text left\">\n                        <i className=\"material-icons\">format_align_left</i>\n                    </button>\n                    <button onClick={this.handleSetTextAlignCenter} title=\"Align text center\">\n                        <i className=\"material-icons\">format_align_center</i>\n                    </button>\n                    <button onClick={this.handleSetTextAlignRight} title=\"Align text right\">\n                        <i className=\"material-icons\">format_align_right</i>\n                    </button>\n                    <button onClick={this.handleSetTextBold} title=\"Makes selected text bold\">\n                        <i className=\"material-icons\">format_bold</i>\n                    </button>\n                    <button onClick={this.handleSetTextItalic} title=\"Makes selected text italic\">\n                        <i className=\"material-icons\">format_italic</i>\n                    </button>\n                    <ColorButton color={color} onChange={this.handleColorChange} />\n                    <FontSelector />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    const activeField =\n        state.cardset.present.activeCardId !== undefined && state.cardset.present.activeFieldId !== undefined\n            ? state.cardset.present.fields[state.cardset.present.activeCardId][state.cardset.present.activeFieldId]\n            : undefined;\n\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        activeField,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarText);\n","import 'filepond/dist/filepond.min.css';\n\nimport './SidebarUpload.css';\n\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport { connect } from 'react-redux';\nimport FilePondPluginFileValidateSize from 'filepond-plugin-file-validate-size';\nimport FilePondPluginFileValidateType from 'filepond-plugin-file-validate-type';\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport {\n    FPAbortCallback,\n    FPErrorCallback,\n    FPLoadCallback,\n    FPProgressCallback,\n    FPRevertLoadCallback,\n    cardSetDeleteImage,\n    cardSetUploadImage,\n} from '../actions';\nimport { State } from '../reducers';\nimport style from './SidebarUpload.module.css';\n\nregisterPlugin(FilePondPluginFileValidateSize);\nregisterPlugin(FilePondPluginFileValidateType);\n\ninterface StateProps {\n    activeGame: string | null;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarUpload extends Component<Props> {\n    handleProcess = (\n        fieldName: string,\n        file: File,\n        metadata: { [propName: string]: string },\n        load: FPLoadCallback,\n        error: FPErrorCallback,\n        progress: FPProgressCallback,\n        abort: FPAbortCallback,\n    ) => {\n        const { dispatch, activeGame } = this.props;\n\n        if (activeGame === null) {\n            abort();\n            return;\n        }\n\n        let source = axios.CancelToken.source();\n\n        dispatch(cardSetUploadImage(activeGame, file, load, error, progress, abort, source.token));\n\n        return { abort: source.cancel };\n    };\n\n    handleRevert = (uniqueFileId: string, load: FPRevertLoadCallback, error: FPErrorCallback) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetDeleteImage(uniqueFileId, load, error));\n    };\n\n    render() {\n        const { visible } = this.props;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'grid' : 'none' }}>\n                <div>\n                    Uploaded imaged are kept for limited time. If they are deleted then simply re-upload them again.\n                </div>\n                <FilePond\n                    allowMultiple={true}\n                    server={{\n                        process: this.handleProcess,\n                        revert: this.handleRevert,\n                    }}\n                    acceptedFileTypes={['image/png', 'image/jpeg', 'image/svg+xml']}\n                    allowFileSizeValidation={true}\n                    maxFileSize=\"500KB\"\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        activeGame: state.games.active,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarUpload);\n","import { connect, ConnectedComponentClass } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport { SidebarState, cardSetSetSidebarState } from '../actions';\nimport { State } from '../reducers';\nimport SidebarDetails from './SidebarDetails';\nimport SidebarGeneratePng from './SidebarGeneratePng';\nimport SidebarGeneratePdf from './SidebarGeneratePdf';\nimport SidebarImage from './SidebarImage';\nimport SidebarImportExport from './SidebarImportExport';\nimport SidebarMeasurements from './SidebarMeasurements';\nimport SidebarSettings from './SidebarSettings';\nimport SidebarText from './SidebarText';\nimport SidebarUpload from './SidebarUpload';\nimport style from './Sidebar.module.css';\n\ninterface StateProps {\n    isAuthenticated: boolean;\n    activeSidebar: SidebarState | null;\n}\n\ntype Props = StateProps & DispatchProps;\n\ninterface SidebarInfo {\n    state: SidebarState;\n    title: string;\n    icon: string;\n    component: ConnectedComponentClass<typeof Component, SidebarOwnProps>;\n}\n\nconst SIDEBARS: SidebarInfo[] = [\n    {\n        state: SidebarState.Settings,\n        title: 'Settings',\n        icon: 'settings',\n        component: SidebarSettings,\n    },\n    {\n        state: SidebarState.Details,\n        title: 'Details',\n        icon: 'details',\n        component: SidebarDetails,\n    },\n    {\n        state: SidebarState.Measurements,\n        title: 'Measurements',\n        icon: 'format_shapes',\n        component: SidebarMeasurements,\n    },\n    {\n        state: SidebarState.Image,\n        title: 'Images',\n        icon: 'photo',\n        component: SidebarImage,\n    },\n    {\n        state: SidebarState.Text,\n        title: 'Texts',\n        icon: 'text_fields',\n        component: SidebarText,\n    },\n    {\n        state: SidebarState.Upload,\n        title: 'Upload',\n        icon: 'cloud_upload',\n        component: SidebarUpload,\n    },\n    {\n        state: SidebarState.ImportExport,\n        title: 'Import/Export',\n        icon: 'import_export',\n        component: SidebarImportExport,\n    },\n    {\n        state: SidebarState.Png,\n        title: 'Generate as PNG',\n        icon: 'photo_library',\n        component: SidebarGeneratePng,\n    },\n    {\n        state: SidebarState.Pdf,\n        title: 'Generate as PDF',\n        icon: 'picture_as_pdf',\n        component: SidebarGeneratePdf,\n    },\n];\n\nexport class Sidebar extends Component<Props> {\n    handleSidebar = (state: SidebarState) => {\n        const { activeSidebar, dispatch } = this.props;\n        if (activeSidebar === state) {\n            dispatch(cardSetSetSidebarState(null));\n        } else {\n            dispatch(cardSetSetSidebarState(state));\n        }\n    };\n\n    render() {\n        const { activeSidebar } = this.props;\n        return (\n            <div className={style.sidebar}>\n                <div className={style.controls}>\n                    {SIDEBARS.map(sb => (\n                        <i\n                            key={sb.state}\n                            title={sb.title}\n                            className={`material-icons ${activeSidebar === sb.state ? style.active : ''}`}\n                            onClick={() => this.handleSidebar(sb.state)}\n                        >\n                            {sb.icon}\n                        </i>\n                    ))}\n                </div>\n                <div className={`${style.view} ${activeSidebar === null ? style.hidden : ''}`}>\n                    {SIDEBARS.map(sb => (\n                        <sb.component key={sb.state} visible={activeSidebar === sb.state} />\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        activeSidebar: state.cardset.present.activeSidebar,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, {}, State>(mapStateToProps)(Sidebar);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport shortid from 'shortid';\n\nimport { ACTIVITY_SELECTING, State } from '../reducers';\nimport { BLEED_WIDTH } from '../constants';\nimport { CardSetType, CardType, CardsCollection } from '../types';\nimport {\n    Dispatch,\n    cardSetActiveCardAndField,\n    cardSetCreateCard,\n    cardSetRenameRequest,\n    cardSetUndo,\n    cardSetRedo,\n} from '../actions';\nimport Card from './Card';\nimport EditableTitle from './EditableTitle';\nimport KawaiiMessage, { Character } from './KawaiiMessage';\nimport Loader from './Loader';\nimport Sidebar from './Sidebar';\nimport style from './CardSet.module.css';\n\ninterface StateProps {\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    isAuthenticated: boolean;\n    cardsAllIds: string[];\n    cardsById: CardsCollection;\n    activity: number;\n    zoom: number;\n    activeCardSet: CardSetType | null;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = StateProps & DispatchProps;\n\ninterface LocalState {\n    pageWidth: number;\n    pageHeight: number;\n    topBottomMargin: number;\n    leftRightMargin: number;\n}\n\nexport class CardSet extends Component<Props, LocalState> {\n    state = {\n        pageWidth: 210,\n        pageHeight: 297,\n        topBottomMargin: 15,\n        leftRightMargin: 9,\n    };\n\n    componentDidMount() {\n        window.addEventListener('keydown', this.keyDown);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('keydown', this.keyDown);\n    }\n\n    keyDown = (event: KeyboardEvent) => {\n        const { dispatch } = this.props;\n\n        switch (event.key) {\n            case 'z':\n            case 'Z': {\n                if (event.ctrlKey && event.shiftKey) {\n                    dispatch(cardSetRedo());\n                } else if (event.ctrlKey) {\n                    dispatch(cardSetUndo());\n                }\n                break;\n            }\n            case 'y':\n            case 'Y': {\n                if (event.ctrlKey) {\n                    dispatch(cardSetRedo());\n                }\n                break;\n            }\n            // no default\n        }\n    };\n\n    handleCreateCardClick = () => {\n        const { dispatch } = this.props;\n\n        const newCard: CardType = { id: shortid.generate(), count: 1 };\n\n        dispatch(cardSetCreateCard(newCard));\n    };\n\n    handleClickOutsideOfCard = () => {\n        const { dispatch } = this.props;\n        dispatch(cardSetActiveCardAndField(undefined, false, undefined));\n    };\n\n    handleCardSetNameChange = (newName: string) => {\n        const { dispatch, activeCardSet } = this.props;\n        if (activeCardSet !== null) {\n            dispatch(cardSetRenameRequest(activeCardSet.id, newName));\n        }\n    };\n\n    render() {\n        const {\n            isAuthenticated,\n            cardsAllIds,\n            cardsById,\n            width,\n            height,\n            isTwoSided,\n            activity,\n            zoom,\n            activeCardSet,\n        } = this.props;\n\n        const widthWithBleeds = width + BLEED_WIDTH * 2;\n        const heightWithBleeds = height + BLEED_WIDTH * 2;\n\n        return (\n            isAuthenticated && (\n                <div>\n                    <KawaiiMessage character={Character.Ghost}>\n                        <p>Here you can design your cards.</p>\n                    </KawaiiMessage>\n\n                    {activeCardSet !== null && (\n                        <EditableTitle title={activeCardSet.name} onChange={this.handleCardSetNameChange} />\n                    )}\n\n                    <div className={style.cardsetview}>\n                        <div className={style.sidebar}>\n                            <Sidebar />\n                        </div>\n                        <div onMouseDown={this.handleClickOutsideOfCard} onTouchStart={this.handleClickOutsideOfCard}>\n                            {(activity & ACTIVITY_SELECTING) === ACTIVITY_SELECTING && <Loader />}\n                            <div className={style.cardset}>\n                                <ul\n                                    style={{\n                                        gridTemplateColumns: `repeat(auto-fill, minmax(${widthWithBleeds *\n                                            zoom}mm, 1fr))`,\n                                    }}\n                                >\n                                    {cardsAllIds &&\n                                        cardsAllIds.map(cardId => [\n                                            <li key={cardId}>\n                                                <Card card={cardsById[cardId]} isBack={false} />\n                                            </li>,\n                                            isTwoSided && (\n                                                <li key={`${cardId}back`}>\n                                                    <Card card={cardsById[cardId]} isBack={true} />\n                                                </li>\n                                            ),\n                                        ])}\n                                    <li key=\"newCard\">\n                                        <div\n                                            id=\"newCard\"\n                                            className={style.createCard}\n                                            style={{\n                                                width: `${widthWithBleeds * zoom}mm`,\n                                                height: `${heightWithBleeds * zoom}mm`,\n                                                position: 'relative',\n                                                overflow: 'hidden',\n                                            }}\n                                            onClick={this.handleCreateCardClick}\n                                        >\n                                            <div>\n                                                <i className=\"material-icons\">add</i>\n                                                <div>Add Card</div>\n                                            </div>\n                                        </div>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        activity: state.cardset.present.activity,\n        width: state.cardset.present.width,\n        height: state.cardset.present.height,\n        isTwoSided: state.cardset.present.isTwoSided,\n        zoom: state.cardset.present.zoom,\n        isAuthenticated: state.auth.isAuthenticated,\n        cardsAllIds: state.cardset.present.cardsAllIds,\n        cardsById: state.cardset.present.cardsById,\n        activeCardSet:\n            state.cardsets.active && state.cardsets.byId[state.cardsets.active]\n                ? state.cardsets.byId[state.cardsets.active]\n                : null,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, {}, State>(mapStateToProps)(CardSet);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, cardSetSelectRequest } from './actions';\nimport { State } from './reducers';\nimport CardSet from './components/CardSet';\n\ninterface Props {\n    dispatch: Dispatch;\n    match: { params: { id: string } };\n    isAuthenticated: boolean;\n}\n\nexport class CardSetPage extends Component<Props> {\n    componentDidMount() {\n        const { dispatch, match } = this.props;\n        dispatch(cardSetSelectRequest(match.params.id));\n    }\n\n    render() {\n        return <CardSet />;\n    }\n}\n\nconst mapStateToProps = (state: State) => ({ isAuthenticated: state.auth.isAuthenticated });\n\nexport default connect(mapStateToProps)(CardSetPage);\n","import React, { Component } from 'react';\n\nexport default class ChangelogPage extends Component {\n    render() {\n        return (\n            <div>\n                <p>Here you can find list of future plans and what was implemented recently.</p>\n                <h2>Future plans</h2>\n                <ul>\n                    <li>Generating list of author's of icons if attribution is required.</li>\n                    <li>Card templates.</li>\n                    <li>Keyboard shortcuts.</li>\n                    <li>Possibility to order your games for printing from various printing providers.</li>\n                </ul>\n                <h2>2019-06-04</h2>\n                <ul>\n                    <li>Possibility to zoom in and pan imaged added.</li>\n                    <li>Undo/Redo using Ctrl+Z and Ctrl+Y (or Ctrl+Shift+Z).</li>\n                    <li>More small improvements and bug fixes.</li>\n                </ul>\n                <h2>2019-05-26</h2>\n                <ul>\n                    <li>\n                        Text rendering fixes.\n                    </li>\n                    <li>\n                        Card Sets and Games list are sorted alphabetically now.\n                    </li>\n                    <li>\n                        Image handling improvements.\n                    </li>\n                </ul>\n                <h2>2019-05-18</h2>\n                <ul>\n                    <li>\n                        PDF and PNG generation improvements.\n                    </li>\n                </ul>\n                <h2>2019-05-17</h2>\n                <ul>\n                    <li>\n                        PNG generation for card set or the whole game. This will benefit if you want to publish game via{' '}\n                        <a href=\"https://www.thegamecrafter.com/\">The Game Crafter</a>,{' '}\n                        <a href=\"makeplayingcards.com\">Make Playing Cards</a> or any other place.\n                    </li>\n                </ul>\n                <h2>2019-04-13</h2>\n                <ul>\n                    <li>Option to generate cutting marks on front side only.</li>\n                    <li>Guillotine cuttings marks on card edges.</li>\n                    <li>\n                        Field move limitation is removed because if drag field outside of view you can return it using\n                        custom positions and size controls.\n                    </li>\n                    <li>Drag and drop improvement.</li>\n                </ul>\n                <h2>2019-04-07</h2>\n                <ul>\n                    <li>Snapping implemented for move, rotation and resize operations.</li>\n                    <li>Image search changes and improvements.</li>\n                    <li>\n                        Drag&Drop support for images. Images can be dropped to text field as well but it is assumed that\n                        dropped images are square when generating PDF.\n                    </li>\n                    <li>Bold and Italic support in text added.</li>\n                    <li>Other minor fixes.</li>\n                </ul>\n                <h2>2019-03-22</h2>\n                <ul>\n                    <li>Two-sided cards.</li>\n                    <li>PDF generation for all the game.</li>\n                    <li>More PDF generation options added</li>\n                    <li>Change color of images (for SVG images only, e.g. try using with \"forms\" images).</li>\n                    <li>Game rename and delete</li>\n                    <li>Card Set rename and delete</li>\n                    <li>Text: line height support</li>\n                    <li>UI/UX improvements</li>\n                </ul>\n                <h2>2019-03-03</h2>\n                <ul>\n                    <li>Data import/export in JSON and CSV formats.</li>\n                    <li>\n                        Named fields. If multiple fields have the same name then by editing one you change value in all\n                        of them. As well named fields look better in data export/import.\n                    </li>\n                </ul>\n\n                <h2>2019-03-02</h2>\n                <ul>\n                    <li>You can upload your own images now. Images are limited.</li>\n                    <li>\n                        Image order support added. E.g.: now you can upload background image and lower it to the bottom.\n                    </li>\n                    <li>Progress indicators and user messages improvements.</li>\n                </ul>\n\n                <h2>2019-02-24</h2>\n                <ul>\n                    <li>Sidebar created for lighter, cleaner and faster UI.</li>\n                    <li>Zoom added to card set for more flexibility while viewing or editing.</li>\n                </ul>\n                <h2>2019-02-23</h2>\n                <ul>\n                    <li>Text rendering changed and should be working properly now.</li>\n                    <li>Crash with new card set fixed.</li>\n                    <li>Minor UI improvements.</li>\n                </ul>\n                <h2>2019-02-17</h2>\n                <p>Initial public version.</p>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\nimport { reportError } from './utils';\n\nwindow.addEventListener('error', function(evt: ErrorEvent) {\n    if (process.env.NODE_ENV === 'production') {\n        let error = evt.error;\n        reportError(`${error.message} ${error.stack}`);\n    }\n});\n\ninterface Props {\n    children: React.ReactNode;\n}\n\ninterface State {\n    hasError: boolean;\n}\n\nexport default class ErrorBoundary extends Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    componentDidCatch(error: Error | null, info: object) {\n        this.setState({ hasError: true });\n        if (process.env.NODE_ENV === 'production') {\n            if (error !== null) {\n                reportError(`${error.message} ${error.stack}`);\n            } else {\n                reportError(`No error: ${info}`);\n            }\n        }\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return (\n                <KawaiiMessage character={Character.Browser} mood=\"ko\">\n                    Something unexpected has happened. If you want this problem to be fixed write me to{' '}\n                    <a href=\"mailto:dalius@ffff.lt\">dalius@ffff.lt</a>.\n                </KawaiiMessage>\n            );\n        }\n        return this.props.children;\n    }\n}\n","import React, { Component } from 'react';\nimport style from './ConfirmedDelete.module.css';\n\ninterface Props {\n    question: string;\n    onDelete: () => void;\n}\n\nexport default class ConfirmedDelete extends Component<Props> {\n    state = {\n        deleteClicked: false,\n    };\n\n    handleRemove = () => {\n        this.setState({ deleteClicked: !this.state.deleteClicked });\n    };\n\n    handleYes = () => {\n        this.setState({ deleteClicked: false });\n        this.props.onDelete();\n    };\n\n    handleNo = () => {\n        this.setState({ deleteClicked: false });\n    };\n\n    render() {\n        const { deleteClicked } = this.state;\n        const { question } = this.props;\n\n        return (\n            <>\n                <i title=\"Remove\" className={`material-icons ${style.button}`} onClick={this.handleRemove}>\n                    remove_circle_outline\n                </i>{' '}\n                {deleteClicked && (\n                    <>\n                        {question}{' '}\n                        <span className={style.answer} onClick={this.handleYes}>\n                            Yes\n                        </span>{' '}\n                        /{' '}\n                        <span className={style.answer} onClick={this.handleNo}>\n                            No\n                        </span>\n                    </>\n                )}\n            </>\n        );\n    }\n}\n","import { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { CardSetsCollection, GameType, IdsArray } from '../types';\nimport {\n    Dispatch,\n    cardSetCreateRequest,\n    cardSetDeleteRequest,\n    gameRenameRequest,\n    messageDisplay,\n    gameCreatePngRequest,\n} from '../actions';\nimport { State, ACTIVITY_CREATING_PNG } from '../reducers';\nimport ConfirmedDelete from './ConfirmedDelete';\nimport EditableTitle from './EditableTitle';\nimport KawaiiMessage, { Character } from './KawaiiMessage';\nimport PDFGenerator from './PDFGenerator';\nimport style from './CardSets.module.css';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated: boolean;\n    activeGame: GameType | null;\n    allIds: IdsArray;\n    byId: CardSetsCollection;\n    isCreatingPng: boolean;\n}\n\ninterface LocalState {\n    cardSetName: string;\n    width: number;\n    height: number;\n    dpi: number;\n}\n\nexport class CardSets extends Component<Props, LocalState> {\n    state: LocalState = {\n        cardSetName: '',\n        width: 63.5,\n        height: 88.9,\n        dpi: 300,\n    };\n\n    handleGameNameChange = (newName: string) => {\n        const { dispatch, activeGame } = this.props;\n        if (activeGame !== null) {\n            dispatch(gameRenameRequest(activeGame.id, newName));\n        }\n    };\n\n    handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ cardSetName: event.target.value });\n    };\n\n    handleWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ width: parseFloat(event.target.value) });\n    };\n\n    handleHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ height: parseFloat(event.target.value) });\n    };\n\n    handleCreateCardSetClick = () => {\n        const { dispatch, activeGame } = this.props;\n\n        if (activeGame === null) {\n            return;\n        }\n\n        const cardSetName = this.state.cardSetName.trim();\n\n        if (cardSetName) {\n            dispatch(cardSetCreateRequest(cardSetName, this.state.width, this.state.height, activeGame.id));\n        } else {\n            dispatch(messageDisplay('error', 'Card Set name should be non empty.'));\n        }\n    };\n\n    handleCardSetDelete = (cardSetId: string) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetDeleteRequest(cardSetId));\n    };\n\n    handleDpiChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ dpi: parseInt(event.target.value) });\n    };\n\n    handleGenerate = () => {\n        const { dispatch, activeGame } = this.props;\n        const { dpi } = this.state;\n\n        if (activeGame !== null) {\n            dispatch(gameCreatePngRequest(dpi, 'games', activeGame.id));\n        }\n    };\n\n    render() {\n        const { isAuthenticated, activeGame, allIds, byId, isCreatingPng } = this.props;\n        const { dpi } = this.state;\n\n        let cardsets = allIds.map(cardsetId => byId[cardsetId]);\n        cardsets.sort((a, b) => (a.name < b.name ? -1 : 1));\n\n        const cardsetItems = cardsets.map(cardset => (\n            <li key={cardset.id}>\n                <Link to={`/cardset/${cardset.id}`}>{cardset.name}</Link>{' '}\n                <ConfirmedDelete\n                    question=\"Do you really want to delete this card set?\"\n                    onDelete={() => this.handleCardSetDelete(cardset.id)}\n                />\n            </li>\n        ));\n\n        return (\n            isAuthenticated &&\n            activeGame !== null && (\n                <div className={style.cardsets}>\n                    <KawaiiMessage character={Character.Ghost}>\n                        Each game is made from card sets. Card set is collection of cards that share the same properties\n                        but have different text and images.\n                    </KawaiiMessage>\n\n                    <EditableTitle title={activeGame.name} onChange={this.handleGameNameChange} />\n\n                    <ul>{cardsetItems}</ul>\n\n                    <div className=\"form\">\n                        <label htmlFor=\"cardset_name\">Card Set name:</label>\n                        <input\n                            id=\"cardset_name\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            className=\"form-control\"\n                            placeholder=\"Card Set name\"\n                        />\n                        <label htmlFor=\"card_width\">Card width:</label>\n                        <input\n                            id=\"card_width\"\n                            type=\"number\"\n                            min=\"0\"\n                            step=\"0.1\"\n                            onChange={this.handleWidthChange}\n                            className=\"form-control\"\n                            placeholder=\"Card width\"\n                            value={this.state.width}\n                        />\n                        <label htmlFor=\"card_height\">Card height:</label>\n                        <input\n                            id=\"card_height\"\n                            type=\"number\"\n                            min=\"0\"\n                            step=\"0.1\"\n                            onChange={this.handleHeightChange}\n                            className=\"form-control\"\n                            placeholder=\"Card height\"\n                            value={this.state.height}\n                        />\n                        <button onClick={this.handleCreateCardSetClick}>Create Card Set</button>\n                    </div>\n\n                    <KawaiiMessage character={Character.Ghost} mood=\"excited\">\n                        Hint: Poker card size 63.5mm x 88.9mm. Bridge card size 57.15mm x 88.9mm. But you can have cards\n                        of any size.\n                    </KawaiiMessage>\n\n                    <PDFGenerator type=\"games\" id={activeGame.id} withHelp={true} />\n\n                    <div className=\"form\">\n                        Or you can generate PNG files for all the game:\n                        <label htmlFor=\"dpi\">DPI:</label>\n                        <input\n                            id=\"dpi\"\n                            type=\"number\"\n                            min=\"1\"\n                            step=\"1\"\n                            onChange={this.handleDpiChange}\n                            className=\"form-control\"\n                            placeholder=\"DPI\"\n                            value={dpi}\n                        />\n                        <button disabled={isCreatingPng} onClick={this.handleGenerate}>\n                            Generate PNG files\n                        </button>\n                    </div>\n                </div>\n            )\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        activeGame:\n            state.games.active && state.games.byId[state.games.active] ? state.games.byId[state.games.active] : null,\n        allIds: state.cardsets.allIds,\n        byId: state.cardsets.byId,\n        isCreatingPng: (state.games.activity & ACTIVITY_CREATING_PNG) === ACTIVITY_CREATING_PNG,\n    };\n};\n\nexport default connect(mapStateToProps)(CardSets);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, gameSelectRequest } from './actions';\nimport { State } from './reducers';\nimport CardSets from './components/CardSets';\n\ninterface Props {\n    dispatch: Dispatch;\n    match: { params: { id: string } };\n    isAuthenticated: boolean;\n}\n\nexport class GamePage extends Component<Props> {\n    componentDidMount() {\n        const { dispatch, match } = this.props;\n        dispatch(gameSelectRequest(match.params.id, true));\n    }\n\n    render() {\n        return <CardSets />;\n    }\n}\n\nconst mapStateToProps = (state: State) => ({ isAuthenticated: state.auth.isAuthenticated });\n\nexport default connect(mapStateToProps)(GamePage);\n","import React, { Component } from 'react';\n\ninterface Props {\n    onLogin: (creds: { username: string; password: string }) => void;\n    onLoginFailure: (message: string) => void;\n}\n\ninterface LocalState {\n    username: string;\n    password: string;\n}\n\nexport default class Login extends Component<Props, LocalState> {\n    state = {\n        username: '',\n        password: '',\n    };\n\n    handleUsernameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ username: event.target.value });\n    };\n\n    handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ password: event.target.value });\n    };\n\n    handleSubmit = (event: React.FormEvent) => {\n        const username = this.state.username.trim();\n        const password = this.state.password.trim();\n        if (username && password) {\n            const creds = { username, password };\n            this.props.onLogin(creds);\n        } else {\n            this.props.onLoginFailure('Missing username and/or password.');\n        }\n        event.preventDefault();\n    };\n\n    render() {\n        return (\n            <div>\n                <form className=\"form\" onSubmit={this.handleSubmit}>\n                    <input\n                        type=\"text\"\n                        onChange={this.handleUsernameChange}\n                        className=\"form-control\"\n                        placeholder=\"Username\"\n                    />\n                    <input\n                        type=\"password\"\n                        onChange={this.handlePasswordChange}\n                        className=\"form-control\"\n                        placeholder=\"Password\"\n                    />\n                    <input type=\"submit\" value=\"Login\" />\n                </form>\n            </div>\n        );\n    }\n}\n","import { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, loginRequest, messageDisplay } from './actions';\nimport { State } from './reducers';\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\nimport Login from './components/Login';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated: boolean;\n}\n\nexport class LoginPage extends Component<Props> {\n    render() {\n        const { dispatch, isAuthenticated } = this.props;\n\n        return (\n            <div className=\"App\">\n                {!isAuthenticated && (\n                    <>\n                        <KawaiiMessage character={Character.Ghost}>\n                            Please enter your credentials to login. If you don't have account yet then you can create\n                            one here: <a href=\"/signup\">Sign-up</a>.\n                        </KawaiiMessage>\n\n                        <Login\n                            onLogin={creds => dispatch(loginRequest(creds))}\n                            onLoginFailure={msg => dispatch(messageDisplay('error', msg))}\n                        />\n                    </>\n                )}\n                {isAuthenticated && <Redirect to=\"/\" />}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => ({ isAuthenticated: state.auth.isAuthenticated });\n\nexport default connect(mapStateToProps)(LoginPage);\n","import { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, gameCreateRequest, gameDeleteRequest, messageDisplay } from '../actions';\nimport { GamesCollection, IdsArray } from '../types';\nimport { State } from '../reducers';\nimport ConfirmedDelete from './ConfirmedDelete';\nimport KawaiiMessage, { Character } from './KawaiiMessage';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated: boolean;\n    allIds: IdsArray;\n    byId: GamesCollection;\n}\n\ninterface LocalState {\n    gameName: string;\n}\n\nexport class Games extends Component<Props, LocalState> {\n    state: LocalState = {\n        gameName: '',\n    };\n\n    handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ gameName: event.target.value });\n    };\n\n    handleCreateGameClick = () => {\n        const { dispatch } = this.props;\n\n        const gamename = this.state.gameName.trim();\n        if (gamename) {\n            dispatch(gameCreateRequest(gamename));\n        } else {\n            dispatch(messageDisplay('error', 'Game name should be non empty.'));\n        }\n    };\n\n    handleGameDelete = (gameId: string) => {\n        const { dispatch } = this.props;\n        dispatch(gameDeleteRequest(gameId));\n    };\n\n    render() {\n        const { isAuthenticated, allIds, byId } = this.props;\n\n        const games = allIds.map(gameId => byId[gameId]);\n        games.sort((a, b) => (a.name < b.name ? -1 : 1));\n\n        const gameItems = games.map(game => (\n            <li key={game.id}>\n                <Link to={`/game/${game.id}`}>{game.name}</Link>{' '}\n                <ConfirmedDelete\n                    question=\"Do you really want to delete this game?\"\n                    onDelete={() => this.handleGameDelete(game.id)}\n                />\n            </li>\n        ));\n\n        return (\n            isAuthenticated && (\n                <div>\n                    <KawaiiMessage character={Character.Ghost}>\n                        {allIds.length === 0 && (\n                            <>Here you can create your games and see list of your games when you have some.</>\n                        )}\n                        {allIds.length > 0 && (\n                            <>Here you can see a list of your games or you can create even more games.</>\n                        )}\n                    </KawaiiMessage>\n\n                    <ul>{gameItems}</ul>\n                    <div className=\"form\">\n                        <label htmlFor=\"game_name\">Game name:</label>\n                        <input\n                            id=\"game_name\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            className=\"form-control\"\n                            placeholder=\"Game name\"\n                        />\n                        <button onClick={this.handleCreateGameClick}>Create Game</button>\n                    </div>\n                </div>\n            )\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        allIds: state.games.allIds,\n        byId: state.games.byId,\n    };\n};\n\nexport default connect(mapStateToProps)(Games);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { State } from './reducers';\nimport Games from './components/Games';\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\n\ninterface Props {\n    isAuthenticated: boolean;\n}\n\nexport class Main extends Component<Props> {\n    render() {\n        if (this.props.isAuthenticated) {\n            return <Games />;\n        } else {\n            return (\n                <KawaiiMessage character={Character.Ghost}>\n                    Hey! Here you can create your own card game but you need to <a href=\"/login\">Login</a> or{' '}\n                    <a href=\"/signup\">Sign-up</a> first.\n                </KawaiiMessage>\n            );\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n    };\n};\n\nexport default connect(mapStateToProps)(Main);\n","import { State } from './reducers';\n\nexport const getActiveGame = (state: State) => (state.games.active ? state.games.byId[state.games.active] : null);\n\nexport const getActiveCardSet = (state: State) =>\n    state.cardsets.active ? state.cardsets.byId[state.cardsets.active] : null;\n","import React from 'react';\n\ninterface Props {\n    onLogout: () => void;\n}\n\nfunction Logout(props: Props) {\n    return (\n        <button onClick={() => props.onLogout()} className=\"btn btn-primary\">\n            Logout\n        </button>\n    );\n}\n\nexport default Logout;\n","import { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { CardSetType, GameType, MessageType } from '../types';\nimport { Dispatch, logoutRequest } from '../actions';\nimport { State } from '../reducers';\nimport { getActiveCardSet, getActiveGame } from '../selectors';\nimport Loader from './Loader';\nimport Logout from './Logout';\nimport style from './Navbar.module.css';\n\ninterface OwnProps {\n    isAuthenticated: boolean;\n}\n\ninterface StateProps {\n    messages: MessageType[];\n    activeGame: GameType | null;\n    activeCardSet: CardSetType | null;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nexport class Navbar extends Component<Props> {\n    render() {\n        const { dispatch, isAuthenticated, messages, activeGame, activeCardSet } = this.props;\n\n        return (\n            <nav>\n                <div id=\"messages\" className={style.messages}>\n                    <ul>\n                        {messages.map(m => (\n                            <li key={m.id} className={m.type === 'error' ? style.error : style.info}>\n                                {m.type === 'error' && (\n                                    <>\n                                        <i className=\"material-icons\">error</i> {m.text}\n                                    </>\n                                )}\n                                {m.type === 'info' && (\n                                    <>\n                                        <i className=\"material-icons\">info</i> {m.text}\n                                    </>\n                                )}\n                                {m.type === 'progress' && (\n                                    <>\n                                        <Loader small={true} /> {m.text}\n                                    </>\n                                )}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n                <div>\n                    <h1 className={style.header}>\n                        <Link to=\"/\">CARD-A-MON</Link>\n                    </h1>\n                    <div>\n                        <ul className={style.menu}>\n                            {isAuthenticated && (\n                                <>\n                                    <li>\n                                        <Link to=\"/\">Main</Link>\n                                    </li>\n                                    {activeGame && (\n                                        <li>\n                                            <Link to={`/game/${activeGame.id}`}>Game \"{activeGame.name}\"</Link>\n                                        </li>\n                                    )}\n                                    {activeCardSet && (\n                                        <li>\n                                            <Link to={`/cardset/${activeCardSet.id}`}>\n                                                Card Set \"{activeCardSet.name}\"\n                                            </Link>\n                                        </li>\n                                    )}\n                                </>\n                            )}\n                            <li>\n                                <Link to=\"/changelog\">Changelog</Link>\n                            </li>\n                            <li>\n                                <Link to=\"/about\">About</Link>\n                            </li>\n                            {isAuthenticated && (\n                                <li>\n                                    <Logout onLogout={() => dispatch(logoutRequest())} />\n                                </li>\n                            )}\n                            {!isAuthenticated && (\n                                <>\n                                    <li>\n                                        <Link to=\"/login\">Login</Link>\n                                    </li>\n                                    <li>\n                                        <Link to=\"/signup\">Sign-up</Link>\n                                    </li>\n                                </>\n                            )}\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        messages: state.message.messages,\n        activeGame: getActiveGame(state),\n        activeCardSet: getActiveCardSet(state),\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(Navbar);\n","import React, { Component } from 'react';\n\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\n\nexport default class NotFoundPage extends Component {\n    render() {\n        return (\n            <KawaiiMessage character={Character.Browser} mood=\"sad\">\n                There is nothing here.\n            </KawaiiMessage>\n        );\n    }\n}\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Credentials } from '../types';\nimport { Dispatch, messageDisplay } from '../actions';\n\ninterface Props {\n    dispatch: Dispatch;\n    onSignUp: (cred: Credentials) => void;\n}\n\nexport class SignUp extends Component<Props> {\n    state = {\n        username: '',\n        password: '',\n        passwordRepeat: '',\n    };\n\n    handleSubmit(event: React.FormEvent) {\n        const { dispatch, onSignUp } = this.props;\n\n        if (this.state.password !== this.state.passwordRepeat) {\n            dispatch(messageDisplay('error', 'Passwords do not match.'));\n        } else {\n            const creds = {\n                username: this.state.username.trim(),\n                password: this.state.password.trim(),\n            };\n            onSignUp(creds);\n        }\n\n        event.preventDefault();\n    }\n\n    handleUsernameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ username: event.target.value });\n    };\n\n    handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ password: event.target.value });\n    };\n\n    handlePasswordRepeatChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ passwordRepeat: event.target.value });\n    };\n\n    render() {\n        return (\n            <div>\n                <form className=\"form\" onSubmit={event => this.handleSubmit(event)}>\n                    <input\n                        type=\"text\"\n                        onChange={this.handleUsernameChange}\n                        className=\"form-control\"\n                        placeholder=\"Username\"\n                    />\n                    <input\n                        type=\"password\"\n                        onChange={this.handlePasswordChange}\n                        className=\"form-control\"\n                        placeholder=\"Password\"\n                    />\n                    <input\n                        type=\"password\"\n                        onChange={this.handlePasswordRepeatChange}\n                        className=\"form-control\"\n                        placeholder=\"Repeat password here\"\n                    />\n                    <input type=\"submit\" value=\"Sign Up\" />\n                </form>\n            </div>\n        );\n    }\n}\nexport default connect()(SignUp);\n","import { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, signupRequest } from './actions';\nimport { State } from './reducers';\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\nimport SignUp from './components/SignUp';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated: boolean;\n}\n\nexport class SignUpPage extends Component<Props> {\n    render() {\n        const { dispatch, isAuthenticated } = this.props;\n\n        return (\n            <div className=\"App\">\n                {!isAuthenticated && (\n                    <>\n                        <KawaiiMessage character={Character.Ghost}>\n                            Create your user here. Instead of user name you can use your e-mail. If you forget your\n                            password then you can send me e-mail (I will not send you any e-mails without your consent).\n                            If you use regular user name and forget your password then you will not be able to access\n                            your account.\n                        </KawaiiMessage>\n\n                        <SignUp onSignUp={creds => dispatch(signupRequest(creds))} />\n                    </>\n                )}\n                {isAuthenticated && <Redirect to=\"/\" />}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => ({ isAuthenticated: state.auth.isAuthenticated });\n\nexport default connect(mapStateToProps)(SignUpPage);\n","import './App.css';\n\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, initRequest } from './actions';\nimport { State } from './reducers';\nimport AboutPage from './AboutPage';\nimport CardSetPage from './CardSetPage';\nimport ChangelogPage from './ChangelogPage';\nimport ErrorBoundry from './ErrorBoundry';\nimport GamePage from './GamePage';\nimport LoginPage from './LoginPage';\nimport Main from './Main';\nimport Navbar from './components/Navbar';\nimport NotFoundPage from './NotFoundPage';\nimport SignUpPage from './SignUpPage';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated: boolean;\n}\n\nexport class App extends Component<Props> {\n    componentDidMount() {\n        this.props.dispatch(initRequest());\n    }\n\n    render() {\n        const { isAuthenticated } = this.props;\n        return (\n            <Router>\n                <div className=\"App\">\n                    <ErrorBoundry>\n                        <Navbar isAuthenticated={isAuthenticated} />\n                        <Switch>\n                            <Route exact path=\"/\" component={Main} />\n                            <Route exact path=\"/login\" component={LoginPage} />\n                            <Route exact path=\"/signup\" component={SignUpPage} />\n                            <Route exact path=\"/game/:id\" component={GamePage} />\n                            <Route exact path=\"/cardset/:id\" component={CardSetPage} />\n                            <Route exact path=\"/changelog\" component={ChangelogPage} />\n                            <Route exact path=\"/about\" component={AboutPage} />\n                            <Route component={NotFoundPage} />\n                        </Switch>\n                        <div className=\"App-footer\">Dalius Dobravolskas &copy; {new Date().getFullYear()}</div>\n                    </ErrorBoundry>\n                </div>\n            </Router>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    const { auth } = state;\n    const { isAuthenticated } = auth;\n\n    return {\n        isAuthenticated,\n    };\n};\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ninterface Config {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import './index.css';\n\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { createAppStore } from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createAppStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { rootSaga } from './sagas';\nimport reducers from './reducers';\n\nexport function createAppStore() {\n    const sagaMiddleware = createSagaMiddleware();\n    const store = createStore(\n        reducers,\n        // @ts-ignore: __REDUX_DEVTOOLS_EXTENSION__ does not exists on window\n        window.__REDUX_DEVTOOLS_EXTENSION__\n            ? compose(\n                  applyMiddleware(sagaMiddleware),\n                  // @ts-ignore: __REDUX_DEVTOOLS_EXTENSION__ does not exists on window\n                  window.__REDUX_DEVTOOLS_EXTENSION__(),\n              )\n            : applyMiddleware(sagaMiddleware),\n    );\n    sagaMiddleware.run(rootSaga);\n    return store;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__3wMPS\",\"controls\":\"Sidebar_controls__3VVbM\",\"active\":\"Sidebar_active__4ldTH\",\"view\":\"Sidebar_view__-0BeZ\",\"hidden\":\"Sidebar_hidden__3xh5q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Navbar_header__FZp4U\",\"menu\":\"Navbar_menu__1JWvN\",\"messages\":\"Navbar_messages__h_dLG\",\"error\":\"Navbar_error__3urZl\",\"info\":\"Navbar_info__1h4Zc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fixed\":\"Loader_fixed__3q8O9\",\"relative\":\"Loader_relative__1lapZ\",\"loader\":\"Loader_loader__1ZCGC\",\"small\":\"Loader_small__3TZen\",\"loader-small\":\"Loader_loader-small__3PPAu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarDetails_view__29V31\",\"disabled\":\"SidebarDetails_disabled__1htJF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardset\":\"CardSet_cardset__21qjI\",\"cardsetview\":\"CardSet_cardsetview__1rqd1\",\"sidebar\":\"CardSet_sidebar__3y8_T\",\"createCard\":\"CardSet_createCard__2bOiw\"};","module.exports = __webpack_public_path__ + \"static/media/pan.ff303319.svg\";","module.exports = __webpack_public_path__ + \"static/media/zoom.2d0b374b.svg\";","module.exports = __webpack_public_path__ + \"static/media/resize.c1fb8dc3.svg\";","module.exports = __webpack_public_path__ + \"static/media/rotate.4a37bc7b.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1Ltkv\",\"title\":\"Card_title__1KiIj\",\"active\":\"Card_active__XOmoJ\",\"disabled\":\"Card_disabled__2Ob5l\"};"],"sourceRoot":""}