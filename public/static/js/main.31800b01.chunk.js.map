{"version":3,"sources":["components/EditableTitle.module.css","components/FontSelector.module.css","components/SidebarText.module.css","components/image.svg","components/text.svg","components/SidebarMeasurements.module.css","components/SidebarUpload.module.css","actions.ts","constants.ts","requests.ts","utils.ts","workerController.ts","storage.ts","fontLoader.tsx","sagas.ts","reducers.ts","components/KawaiiMessage.tsx","AboutPage.tsx","components/FieldController.tsx","components/ImageField.tsx","components/ContentEditable.tsx","components/TextField.tsx","components/Card.tsx","components/EditableTitle.tsx","components/Loader.tsx","components/PDFGenerator.tsx","components/SidebarDetails.tsx","components/ColorButton.tsx","components/SidebarImage.tsx","components/SidebarImportExport.tsx","components/SidebarMeasurements.tsx","components/FontSelector.tsx","components/SidebarText.tsx","components/SidebarUpload.tsx","components/Sidebar.tsx","components/CardSet.tsx","CardSetPage.tsx","ChangelogPage.tsx","ErrorBoundry.tsx","components/ConfirmedDelete.tsx","components/CardSets.tsx","GamePage.tsx","components/Login.tsx","LoginPage.tsx","components/Games.tsx","Main.tsx","selectors.ts","components/Logout.tsx","components/Navbar.tsx","NotFoundPage.tsx","components/SignUp.tsx","SignUpPage.tsx","App.tsx","serviceWorker.ts","index.tsx","store.ts","components/FieldController.module.css","components/Sidebar.module.css","components/Navbar.module.css","components/Loader.module.css","components/SidebarDetails.module.css","components/SidebarImage.module.css","components/CardSet.module.css","components/resize.svg","components/rotate.svg","components/Card.module.css","components/ConfirmedDelete.module.css"],"names":["module","exports","input","fontFamily","fontVariant","view","disabled","__webpack_require__","p","SidebarState","DEFAULT_FONT_SIZE","DEFAULT_LINE_HEIGHT","BLEED_WIDTH","INIT_REQUEST","MESSAGE_DISPLAY","MESSAGE_HIDE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_REQUEST","LOGOUT_FAILURE","LOGOUT_SUCCESS","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_FAILURE","GAME_CREATE_REQUEST","GAME_CREATE_SUCCESS","GAME_CREATE_FAILURE","GAME_DELETE_REQUEST","GAME_RENAME_REQUEST","GAME_LIST_SUCCESS","GAME_LIST_REQUEST","GAME_LIST_FAILURE","GAME_LIST_RESET","GAME_SELECT_REQUEST","GAME_SELECT_SUCCESS","GAME_SELECT_FAILURE","GAME_CREATE_PDF_REQUEST","GAME_CREATE_PDF_SUCCESS","GAME_CREATE_PDF_FAILURE","CARDSET_CREATE_REQUEST","CARDSET_CREATE_SUCCESS","CARDSET_CREATE_FAILURE","CARDSET_DELETE_REQUEST","CARDSET_RENAME_REQUEST","CARDSET_IMPORT_DATA","CARDSET_LIST_SUCCESS","CARDSET_LIST_REQUEST","CARDSET_LIST_FAILURE","CARDSET_LIST_RESET","CARDSET_SELECT_REQUEST","CARDSET_SELECT_SUCCESS","CARDSET_CREATE_CARD","CARDSET_CLONE_CARD","CARDSET_REMOVE_CARD","CARDSET_UPDATE_CARD_COUNT","CARDSET_ADD_TEXT_PLACEHOLDER","CARDSET_ADD_IMAGE_PLACEHOLDER","CARDSET_CHANGE_ACTIVE_PLACEHOLDER_NAME","CARDSET_REMOVE_ACTIVE_PLACEHOLDER","CARDSET_RAISE_ACTIVE_PLACEHOLDER_TO_TOP","CARDSET_LOWER_ACTIVE_PLACEHOLDER_TO_BOTTOM","CARDSET_LOCK_ACTIVE_PLACEHOLDER","CARDSET_UNLOCK_ACTIVE_PLACEHOLDER","CARDSET_CHANGE_FIT_FOR_ACTIVE_PLACEHOLDER","CARDSET_CHANGE_WIDTH","CARDSET_CHANGE_HEIGHT","CARDSET_CHANGE_IS_TWO_SIDED","CARDSET_CHANGE_PLACEHOLDER_POSITION","CARDSET_CHANGE_PLACEHOLDER_SIZE","CARDSET_CHANGE_PLACEHOLDER_ANGLE","CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_ALIGN","CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_COLOR","CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY","CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_VARIANT","CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY_AND_VARIANT","CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_SIZE","CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_LINE_HEIGHT","CARDSET_CHANGE_TEXT","CARDSET_CHANGE_IMAGE","CARDSET_CHANGE_IMAGE_BASE64","CARDSET_SET_ACTIVE_CARD_AND_PLACEHOLDER","CARDSET_UPDATE_DATA_REQUEST","CARDSET_UPDATE_DATA_SUCCESS","CARDSET_UPDATE_DATA_FAILURE","CARDSET_SELECT_FAILURE","CARDSET_SET_SIDEBAR_STATE","CARDSET_SET_ZOOM","CARDSET_UPLOAD_IMAGE","CARDSET_UPLOAD_IMAGE_SUCCESS","CARDSET_UPLOAD_IMAGE_FAILURE","CARDSET_DELETE_IMAGE","IMAGE_LIST_REQUEST","IMAGE_LIST_SUCCESS","IMAGE_LIST_FAILURE","messageDisplay","type","text","id","message","shortid","generate","gameCreateRequest","gamename","gameDeleteRequest","gameId","gameRenameRequest","newName","gameSelectRequest","updateCardSets","gameCreatePdfRequest","collectionType","collectionId","pageWidth","pageHeight","topBottomMargin","leftRightMargin","verticalSpace","horizontalSpace","includeBleedingArea","cutMarksForScissors","cutMarksForGuillotine","cardSetCreateRequest","cardsetname","width","height","cardSetDeleteRequest","cardSetId","cardSetRenameRequest","cardSetImportData","data","cardSetCreateCard","card","cardSetCloneCard","cardSetRemoveCard","cardSetUpdateCardCount","count","cardSetAddTextPlaceholder","cardSetAddImagePlaceholder","cardSetChangeActivePlaceholderName","name","cardSetRemoveActivePlaceholder","cardSetRaiseActivePlaceholderToTop","cardSetLowerActivePlaceholderToBottom","cardSetLockActivePlaceholder","cardSetUnlockActivePlaceholder","cardSetChangeFitForActivePlaceholder","fit","cardSetChangeWidth","cardSetChangeHeight","cardSetChangeIsTwoSided","isTwoSided","cardSetChangePlaceholderPosition","placeholder","x","y","cardSetChangePlaceholderSize","cardSetChangePlaceholderAngle","angle","cardSetChangeActiveTextPlaceholderAlign","align","cardSetChangeActiveTextPlaceholderColor","color","cardSetChangeActiveTextPlaceholderFontVariant","cardSetChangeActiveTextPlaceholderFontFamilyAndVariant","cardSetChangeActiveTextPlaceholderFontSize","fontSize","cardSetChangeActiveTextPlaceholderLineHeight","lineHeight","cardSetChangeText","cardId","placeholderId","textInfo","cardSetChangeImage","imageInfo","cardSetChangeImageBase64","base64","cardSetActiveCardAndPlaceholder","isBackActive","cardSetSetSidebarState","sidebarState","cardSetSetZoom","zoom","cardSetUploadImage","file","load","error","progress","abort","cancelToken","cardSetDeleteImage","imageId","imageListRequest","filter","location","handleAxiosError","response","Error","request","console","log","getTokens","creds","axios","post","then","resp","catch","refreshToken","refreshTokenValue","config","headers","Authorization","concat","accessToken","deleteAccessToken","token","delete","status","deleteRefreshToken","registerUser","getRequest","url","get","postRequest","postRequestFormDataCancelable","progressCallback","cancelCallback","Content-Type","onUploadProgress","isCancel","putRequest","put","deleteRequest","downloadBlob","blobURL","filename","resolve","tempLink","document","createElement","style","display","href","setAttribute","download","body","appendChild","click","removeChild","setTimeout","window","URL","revokeObjectURL","generatePdfUsingWorker","Worker","Promise","reject","worker","addEventListener","event","postMessage","e","saveTokens","localStorage","setItem","saveAccessToken","cleanTokens","removeItem","getTokenFromStorage","getItem","getRefreshTokenFromStorage","loadFontsUsedInPlaceholders","fontsToLoad","Set","plId","add","placeholders","pl","fontToLoad","WebFont","Object","objectSpread","active","inactive","webFontsLoadPromise","google","families","toConsumableArray","Array","from","putError","putInfo","putProgress","hideProgress","handleMessageDisplay","getToken","handleLoginRequest","handleLoginSuccess","logoutToken","logoutRefreshToken","handleLogoutRequest","handleSignupRequest","handleInitRequest","authorizedGetRequest","authorizedPostRequest","authorizedDeleteRequest","authorizedPostFormDataRequest","authorizedPutRequest","handleGameCreateRequest","handleGameDeleteRequest","handleGameRenameRequest","handleGameListRequest","handleGameSelectRequest","handleGameCreatePdfRequest","handleCardSetCreateRequest","handleCardSetDeleteRequest","handleCardSetRenameRequest","handleCardSetSelectRequest","handleCardSetUploadImage","handleCardSetDeleteImage","handleCardSetFitChange","handleCardSetChangeImage","handleCardSetChange","handleImageListRequest","rootSaga","regenerator_default","a","wrap","_context","prev","next","stop","_marked","_context2","_marked2","_context3","abrupt","_marked3","messageId","_context4","_marked4","action","_context5","call","delay","_marked5","validateToken","jwtDecode","exp","Date","getTime","withErrorIfMissing","getFreshToken","newToken","_args6","arguments","_context6","length","undefined","sent","_marked6","_context7","t0","_marked7","_context8","_marked8","_context9","_marked9","_context10","_marked10","_context11","_marked11","_context12","_marked12","_context13","_marked13","_context14","_marked14","_context15","_marked15","_context16","_marked16","_context17","_marked17","_context18","_marked18","_context19","_marked19","_context20","_marked20","_context21","_marked21","allIds","byId","_context22","games","map","g","reduce","obj","_marked22","_context23","cardsets","_marked23","progressId","_context24","_marked24","_context25","JSON","stringify","_marked25","state","_context26","select","_marked26","_context27","_marked27","parsedData","_context28","parse","placeholdersAllIds","keys","version","_marked28","formData","_context29","FormData","set","append","lengthComputable","loaded","total","toString","_marked29","_context30","_marked30","adjustSvg","preserveAspectRatio","doc","XmlDocument","attr","walkChildren","node","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","children","Symbol","iterator","done","child","value","err","return","btoa","compressed","image","imageResp","svg","_svg","_context31","activePlaceholder","cardsById","t1","images","t2","_marked31","_svg2","_context32","_marked32","closeHandler","preventDefault","returnValue","allowWindowClose","removeEventListener","cardsetId","_context33","cardsAllIds","texts","_marked33","game","_context34","encodeURIComponent","_marked34","_context35","all","takeEvery","takeLatest","_marked35","ACTIVITY_CREATING","ACTIVITY_LISTING","ACTIVITY_SELECTING","ACTIVITY_CREATING_PDF","ACTIVITY_UPDATING","DefaultMessageState","messages","DefaultAuthState","isAuthenticated","user","DefaultSignUpState","signingup","DefaultGameState","activity","DefaultCardSetState","activeCard","textSettings","activeSidebar","DefaultImageState","reducers","combineReducers","find","m","assign","auth","username","signup","defineProperty","cardset","newCard","index","indexOf","slice","textPlaceholder","isOnBack","imagePlaceholder","locked","placeholderIndex","splice","placeholderTexts","placeholderImages","push","unshift","placeholdersByCard","Measurements","Details","Text","Image","Character","AboutPage","react_default","Component","FieldController","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","moving","cDiv","resizeDiv","rotateDiv","relX","relY","startX","startY","originalW","originalH","rotatedPointX","rotatedPointY","centerX","centerY","originalAngle","currentAngle","activatedUsingTouch","originalBodyCursor","rotateVec","sinA","Math","sin","cosA","cos","rx","ry","handleBrowserDragStart","stopPropagation","handleMouseDown","handleDragStart","handleMouseMove","handleMouseUp","handleTouchStart","changedTouches","handleTouchMove","passive","handleTouchEnd","co","current","cursor","clientX","offsetLeft","clientY","offsetTop","handleComplete","isTouchEvent","isLocked","onDrag","handleDragMove","_this$props","cardWidth","cardHeight","_this$rotateVec","dx","abs","dy","dx2","dy2","min","max","left","top","handleResizeMouseDown","handleResizeStart","handleResizeMouseMove","handleResizeMouseUp","handleResizeTouchStart","handleResizeTouchMove","handleResizeTouchEnd","resize","clientWidth","clientHeight","_this$rotateVec2","handleResizeComplete","_this$cDiv$current","onResize","handleResizeMove","vx","vy","_this$rotateVec3","w","h","rotatedV","nx","ny","handleRotateMouseDown","handleRotateStart","handleRotateMouseMove","handleRotateMouseUp","handleRotateTouchStart","handleRotateTouchMove","handleRotateTouchEnd","rotate","rect","getBoundingClientRect","atan2","handleRotateComplete","onRotate","handleRotateMove","transform","React","createRef","_this$props2","isActive","isActivePlaceholder","ref","className","fieldcontroller","fieldcontrolleractiveplaceholder","fieldcontrolleractive","touchactivated","position","src","alt","controller","right","bottom","connect","ImageField","imageDiv","wasMoved","handleDrag","dispatch","ppmm","handleResize","handleRotate","_this$props3","_this$props4","_this$props5","imageUrl","components_FieldController","opacity","emptyImageImage","PureComponent","ContentEditable","editDiv","currentText","currentAlign","currentColor","currentFontFamily","currentFontVariant","currentFontSize","currentLineHeight","timeout","handleStart","handleMove","focus","onFocus","textValue","range","createRange","selectNodeContents","collapse","selection","getSelection","removeAllRanges","addRange","updateContent","timeoutInMiliseconds","innerHTML","replace","clearTimeout","handleBlur","handleInput","nextProps","isItalic","fontWeight","parseInt","contentEditable","onBlur","onInput","textAlign","DEFAULT_FONT","fontStyle","outline","overflowWrap","dangerouslySetInnerHTML","__html","TextField","zIndex","emptyTextImage","components_ContentEditable","Card","dimensions","handleFieldDeselect","isBack","target","getAttribute","_this2","placeholdersIds","isActiveCard","widthWithBleeds","heightWithBleeds","index_esm","client","contentRect","setState","_ref","measureRef","overflow","onMouseDown","onTouchStart","components_ImageField","key","components_TextField","border","borderRadius","pointerEvents","title","EditableTitle","titleIsEdited","handleClick","handleChange","onChange","Fragment","onClick","autoFocus","KawaiiMessage","character","mood","marginTop","marginBottom","padding","backgroundColor","grid","Ghost","size","Browser","marginLeft","Loader","fixed","small","loader","relative","PDFGenerator","_Component","_getPrototypeOf2","_len","args","_key","apply","handleGeneratePdfClick","_this$state","handlePageWidthChange","parseFloat","handlePageHeightChange","handleTopBottomMarginChange","handleLeftRightMarginChange","handleVerticalSpaceChange","handleHorizontalSpaceChange","handleIncludeBleedingAreaChange","checked","handleCutMarksForScissors","handleCutMarksForGuillotine","inherits","createClass","isCreatingPdf","KawaiiMessage_KawaiiMessage","htmlFor","step","SidebarDetails","handleCloneCardClick","handleRemoveCardClick","handleCountChange","visible","ColorButton","displayColorPicker","handleClose","react_color_lib","disableAlpha","SidebarImage","applyToAllCards","handleAddImageClick","changeImage","ii","handleRemoveImageFromFieldClick","handleRemoveClick","handleNameChange","trim","handleFilterChange","handleImageSelect","imageName","handleRaiseToTop","handleLowerToBottom","handleLockField","_this$props6","handleUnlockField","_this$props7","handleFitOptionChange","handleOptionChange","_this$props8","handleColorChange","hex","handleRemoveColorClick","handleApplyToAllCardChange","_this$props9","ColorButton_ColorButton","im","registerPlugin","FilePondPluginFileValidateType","SidebarImportExport","prepareImagePaths","activeGame","ending","md5","preparedImages","imagesByCard","endsWith","global","handleExportJson","json","blob","Blob","createObjectURL","handleExportCsv","csvData","header","usedNames","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","dataRow","written","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","csv","Papa","unparse","handleProcess","fieldName","metadata","reader","FileReader","readAsText","onload","result","loadedPlaceholders","isGlobal","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","row","onerror","handleRevert","uniqueFileId","react_filepond","server","process","revert","acceptedFileTypes","SidebarMeasurements","handlePrevPlaceholder","prevPlaceholder","idx","handleNextPlaceholder","nextPlaceholder","handleWidthChange","handleHeightChange","handleXChange","_this$props10","handleYChange","_this$props11","handleAngleChange","_this$props12","PI","_this$props13","options","webfonts","sort","fi","label","FontSelector","getFontStringForLoad","family","variant","stringForLoad","selectedOption","activeFontVariant","wf","handleFontVariantChange","activeFont","handleFontSizeChange","handleLineHeightChange","selectedFontFamily","f","fontVariantOptions","fv","selectedFontVariant","activeFontSize","react_select_esm","activeLineHeight","SidebarText","handleAddTextClick","handleSetTextAlignLeft","handleSetTextAlignCenter","handleSetTextAlignRight","getRangeAt","rangeCount","collapsed","execCommand","components_FontSelector","FilePondPluginFileValidateSize","SidebarUpload","source","CancelToken","cancel","allowMultiple","allowFileSizeValidation","maxFileSize","SIDEBARS","icon","component","Upload","ImportExport","Sidebar","handleSidebar","sidebar","controls","sb","hidden","CardSet","handleCreateCardClick","handleIsTwoSidedChange","handleZoom","handleClickOutsideOfCard","handleCardSetNameChange","activeCardSet","cardsetview","components_Sidebar","EditableTitle_EditableTitle","Loader_Loader","gridTemplateColumns","components_Card","createCard","components_PDFGenerator","CardSetPage","match","params","components_CardSet","ChangelogPage","ErrorBoundary","hasError","ConfirmedDelete","deleteClicked","handleRemove","handleYes","onDelete","handleNo","question","button","answer","CardSets","cardSetName","handleGameNameChange","handleCreateCardSetClick","handleCardSetDelete","cardsetItems","Link","to","ConfirmedDelete_ConfirmedDelete","GamePage","components_CardSets","Login","password","handleUsernameChange","handlePasswordChange","handleSubmit","onLogin","onLoginFailure","onSubmit","LoginPage","Login_Login","loginRequest","msg","Redirect","Games","gameName","handleCreateGameClick","handleGameDelete","gameItems","Main","components_Games","getActiveGame","getActiveCardSet","Logout","onLogout","Navbar","info","menu","components_Logout","NotFoundPage","SignUp","passwordRepeat","handlePasswordRepeatChange","onSignUp","SignUpPage","components_SignUp","signupRequest","App","BrowserRouter","ErrorBoundry_ErrorBoundary","components_Navbar","Switch","Route","exact","path","getFullYear","Boolean","hostname","store","sagaMiddleware","createSagaMiddleware","createStore","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","run","createAppStore","ReactDOM","render","es","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister","loader-small"],"mappings":"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","file":"static/js/main.31800b01.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"EditableTitle_input__2Y_6m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fontFamily\":\"FontSelector_fontFamily__zlBcJ\",\"fontVariant\":\"FontSelector_fontVariant__2pA4n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarText_view__3s9r0\",\"disabled\":\"SidebarText_disabled__3efIG\"};","module.exports = __webpack_public_path__ + \"static/media/image.60f0926c.svg\";","module.exports = __webpack_public_path__ + \"static/media/text.f7f9443c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarMeasurements_view__3BCmn\",\"disabled\":\"SidebarMeasurements_disabled__2Rrd2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarUpload_view__k69sP\"};","import shortid from 'shortid';\nimport { Dispatch as ReduxDispatch } from 'redux';\nimport { CancelToken } from 'axios';\n\nexport const INIT_REQUEST = 'INIT_REQUEST';\nexport const MESSAGE_DISPLAY = 'MESSAGE_DISPLAY';\nexport const MESSAGE_HIDE = 'MESSAGE_HIDE';\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\nexport const LOGOUT_FAILURE = 'LOGOUT_FAILURE';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const SIGNUP_REQUEST = 'SIGNUP_REQUEST';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAILURE = 'SIGNUP_FAILURE';\nexport const GAME_CREATE_REQUEST = 'GAME_CREATE_REQUEST';\nexport const GAME_CREATE_SUCCESS = 'GAME_CREATE_SUCCESS';\nexport const GAME_CREATE_FAILURE = 'GAME_CREATE_FAILURE';\nexport const GAME_DELETE_REQUEST = 'GAME_DELETE_REQUEST';\nexport const GAME_RENAME_REQUEST = 'GAME_RENAME_REQUEST';\nexport const GAME_LIST_SUCCESS = 'GAME_LIST_SUCCESS';\nexport const GAME_LIST_REQUEST = 'GAME_LIST_REQUEST';\nexport const GAME_LIST_FAILURE = 'GAME_LIST_FAILURE';\nexport const GAME_LIST_RESET = 'GAME_LIST_RESET';\nexport const GAME_SELECT_REQUEST = 'GAME_SELECT_REQUEST';\nexport const GAME_SELECT_SUCCESS = 'GAME_SELECT_SUCCESS';\nexport const GAME_SELECT_FAILURE = 'GAME_SELECT_FAILURE';\nexport const GAME_CREATE_PDF_REQUEST = 'GAME_CREATE_PDF_REQUEST';\nexport const GAME_CREATE_PDF_SUCCESS = 'GAME_CREATE_PDF_SUCCESS';\nexport const GAME_CREATE_PDF_FAILURE = 'GAME_CREATE_PDF_FAILURE';\nexport const CARDSET_CREATE_REQUEST = 'CARDSET_CREATE_REQUEST';\nexport const CARDSET_CREATE_SUCCESS = 'CARDSET_CREATE_SUCCESS';\nexport const CARDSET_CREATE_FAILURE = 'CARDSET_CREATE_FAILURE';\nexport const CARDSET_DELETE_REQUEST = 'CARDSET_DELETE_REQUEST';\nexport const CARDSET_RENAME_REQUEST = 'CARDSET_RENAME_REQUEST';\nexport const CARDSET_IMPORT_DATA = 'CARDSET_IMPORT_DATA';\nexport const CARDSET_LIST_SUCCESS = 'CARDSET_LIST_SUCCESS';\nexport const CARDSET_LIST_REQUEST = 'CARDSET_LIST_REQUEST';\nexport const CARDSET_LIST_FAILURE = 'CARDSET_LIST_FAILURE';\nexport const CARDSET_LIST_RESET = 'CARDSET_LIST_RESET';\nexport const CARDSET_SELECT_REQUEST = 'CARDSET_SELECT_REQUEST';\nexport const CARDSET_SELECT_SUCCESS = 'CARDSET_SELECT_SUCCESS';\nexport const CARDSET_CREATE_CARD = 'CARDSET_CREATE_CARD';\nexport const CARDSET_CLONE_CARD = 'CARDSET_CLONE_CARD';\nexport const CARDSET_REMOVE_CARD = 'CARDSET_REMOVE_CARD';\nexport const CARDSET_UPDATE_CARD_COUNT = 'CARDSET_UPDATE_CARD_COUNT';\nexport const CARDSET_ADD_TEXT_PLACEHOLDER = 'CARDSET_ADD_TEXT_PLACEHOLDER';\nexport const CARDSET_ADD_IMAGE_PLACEHOLDER = 'CARDSET_ADD_IMAGE_PLACEHOLDER';\nexport const CARDSET_CHANGE_ACTIVE_PLACEHOLDER_NAME = 'CARDSET_CHANGE_ACTIVE_PLACEHOLDER_NAME';\nexport const CARDSET_REMOVE_ACTIVE_PLACEHOLDER = 'CARDSET_REMOVE_ACTIVE_PLACEHOLDER';\nexport const CARDSET_RAISE_ACTIVE_PLACEHOLDER_TO_TOP = 'CARDSET_RAISE_ACTIVE_PLACEHOLDER_TO_TOP';\nexport const CARDSET_LOWER_ACTIVE_PLACEHOLDER_TO_BOTTOM = 'CARDSET_LOWER_ACTIVE_PLACEHOLDER_TO_BOTTOM';\nexport const CARDSET_LOCK_ACTIVE_PLACEHOLDER = 'CARDSET_LOCK_ACTIVE_PLACEHOLDER';\nexport const CARDSET_UNLOCK_ACTIVE_PLACEHOLDER = 'CARDSET_UNLOCK_ACTIVE_PLACEHOLDER';\nexport const CARDSET_CHANGE_FIT_FOR_ACTIVE_PLACEHOLDER = 'CARDSET_CHANGE_FIT_FOR_ACTIVE_PLACEHOLDER';\nexport const CARDSET_CHANGE_WIDTH = 'CARDSET_CHANGE_WIDTH';\nexport const CARDSET_CHANGE_HEIGHT = 'CARDSET_CHANGE_HEIGHT';\nexport const CARDSET_CHANGE_IS_TWO_SIDED = 'CARDSET_CHANGE_IS_TWO_SIDED';\nexport const CARDSET_CHANGE_PLACEHOLDER_POSITION = 'CARDSET_CHANGE_PLACEHOLDER_POSITION';\nexport const CARDSET_CHANGE_PLACEHOLDER_SIZE = 'CARDSET_CHANGE_PLACEHOLDER_SIZE';\nexport const CARDSET_CHANGE_PLACEHOLDER_ANGLE = 'CARDSET_CHANGE_PLACEHOLDER_ANGLE';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_ALIGN = 'CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_ALIGN';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_COLOR = 'CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_COLOR';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY = 'CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_VARIANT =\n    'CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_VARIANT';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY_AND_VARIANT =\n    'CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY_AND_VARIANT';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_SIZE = 'CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_SIZE';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_LINE_HEIGHT = 'CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_LINE_HEIGHT';\nexport const CARDSET_CHANGE_TEXT = 'CARDSET_CHANGE_TEXT';\nexport const CARDSET_CHANGE_IMAGE = 'CARDSET_CHANGE_IMAGE';\nexport const CARDSET_CHANGE_IMAGE_BASE64 = 'CARDSET_CHANGE_IMAGE_BASE64';\nexport const CARDSET_SET_ACTIVE_CARD_AND_PLACEHOLDER = 'CARDSET_SET_ACTIVE_CARD_AND_PLACEHOLDER';\nexport const CARDSET_UPDATE_DATA_REQUEST = 'CARDSET_UPDATE_DATA_REQUEST';\nexport const CARDSET_UPDATE_DATA_SUCCESS = 'CARDSET_UPDATE_DATA_SUCCESS';\nexport const CARDSET_UPDATE_DATA_FAILURE = 'CARDSET_UPDATE_DATA_FAILURE';\nexport const CARDSET_SELECT_FAILURE = 'CARDSET_SELECT_FAILURE';\nexport const CARDSET_SET_SIDEBAR_STATE = 'CARDSET_SET_SIDEBAR_STATE';\nexport const CARDSET_SET_ZOOM = 'CARDSET_SET_ZOOM';\nexport const CARDSET_UPLOAD_IMAGE = 'CARDSET_UPLOAD_IMAGE';\nexport const CARDSET_UPLOAD_IMAGE_SUCCESS = 'CARDSET_UPLOAD_IMAGE_SUCCESS';\nexport const CARDSET_UPLOAD_IMAGE_FAILURE = 'CARDSET_UPLOAD_IMAGE_FAILURE';\nexport const CARDSET_DELETE_IMAGE = 'CARDSET_DELETE_IMAGE';\nexport const IMAGE_LIST_REQUEST = 'IMAGE_LIST_REQUEST';\nexport const IMAGE_LIST_SUCCESS = 'IMAGE_LIST_SUCCESS';\nexport const IMAGE_LIST_FAILURE = 'IMAGE_LIST_FAILURE';\n\n// Data types\n\nexport type IdsArray = string[];\n\nexport interface MessageType {\n    id: string;\n    type: string;\n    text: string;\n}\n\nexport interface GameType {\n    id: string;\n    name: string;\n}\n\nexport interface GamesCollection {\n    [propName: string]: GameType;\n}\n\nexport interface PlaceholderBase {\n    id: string;\n    type: string;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    angle: number;\n    locked?: boolean;\n    name?: string;\n    isOnBack?: boolean;\n}\n\nexport interface TextPlaceholderType extends PlaceholderBase {\n    type: 'text';\n    align: string;\n    color: string;\n    fontFamily: string;\n    fontVariant: string;\n    fontSize: number;\n    lineHeight?: number;\n}\n\nexport interface ImagePlaceholderType extends PlaceholderBase {\n    id: string;\n    type: 'image';\n    fit?: string;\n}\n\nexport type PlaceholderType = TextPlaceholderType | ImagePlaceholderType;\n\nexport interface PlaceholdersCollection {\n    [propName: string]: PlaceholderType;\n}\n\nexport interface TextInfo {\n    value: string;\n}\n\nexport interface PlaceholdersTextInfoCollection {\n    [propName: string]: TextInfo;\n}\n\nexport interface PlaceholdersTextInfoByCardCollection {\n    [propName: string]: PlaceholdersTextInfoCollection;\n}\n\nexport interface ImageInfo {\n    url?: string;\n    global?: boolean;\n    base64?: string;\n    color?: string;\n}\n\nexport interface PlaceholdersImageInfoCollection {\n    [propName: string]: ImageInfo;\n}\n\nexport interface PlaceholdersImageInfoByCardCollection {\n    [propName: string]: PlaceholdersImageInfoCollection;\n}\n\nexport interface CardType {\n    id: string;\n    count: number;\n}\n\nexport interface CardsCollection {\n    [propName: string]: CardType;\n}\n\nexport interface CardSetType {\n    id: string;\n    name: string;\n}\n\nexport interface CardSetsCollection {\n    [propName: string]: CardSetType;\n}\n\nexport interface Credentials {\n    username: string;\n    password: string;\n}\n\nexport interface Image {\n    id: number;\n    name: string;\n}\n\nexport type ImageArray = Image[];\n\n// Actions\n\nexport interface InitAction {\n    type: typeof INIT_REQUEST;\n}\n\nexport interface MessageDisplay {\n    type: typeof MESSAGE_DISPLAY;\n    message: MessageType;\n}\nexport type MessageAction = MessageDisplay | { type: typeof MESSAGE_HIDE; messageId: string };\n\nexport interface LoginRequest {\n    type: typeof LOGIN_REQUEST;\n    creds: Credentials;\n}\nexport type LoginAction =\n    | LoginRequest\n    | { type: typeof LOGIN_SUCCESS }\n    | { type: typeof LOGIN_FAILURE; message: string }\n    | { type: typeof LOGOUT_REQUEST }\n    | { type: typeof LOGOUT_FAILURE }\n    | { type: typeof LOGOUT_SUCCESS };\n\nexport interface SignUpRequest {\n    type: typeof SIGNUP_REQUEST;\n    creds: Credentials;\n}\nexport type SignUpAction = SignUpRequest | { type: typeof SIGNUP_SUCCESS } | { type: typeof SIGNUP_FAILURE };\n\nexport interface GameCreateRequest {\n    type: typeof GAME_CREATE_REQUEST;\n    gamename: string;\n}\nexport type GameCreateAction =\n    | GameCreateRequest\n    | { type: typeof GAME_CREATE_SUCCESS }\n    | { type: typeof GAME_CREATE_FAILURE };\n\nexport interface GameDeleteRequest {\n    type: typeof GAME_DELETE_REQUEST;\n    gameId: string;\n}\n\nexport type GameDeleteAction = GameDeleteRequest;\n\nexport interface GameRenameRequest {\n    type: typeof GAME_RENAME_REQUEST;\n    gameId: string;\n    newName: string;\n}\n\nexport type GameRenameAction = GameRenameRequest;\n\nexport interface GameListSuccess {\n    type: typeof GAME_LIST_SUCCESS;\n    byId: GamesCollection;\n    allIds: IdsArray;\n}\nexport type GameListAction =\n    | { type: typeof GAME_LIST_REQUEST }\n    | GameListSuccess\n    | { type: typeof GAME_LIST_FAILURE }\n    | { type: typeof GAME_LIST_RESET };\n\nexport interface GameSelectRequest {\n    type: typeof GAME_SELECT_REQUEST;\n    id: string;\n    updateCardSets: boolean;\n}\nexport type GameSelectAction =\n    | GameSelectRequest\n    | { type: typeof GAME_SELECT_SUCCESS; id: string }\n    | { type: typeof GAME_SELECT_FAILURE };\n\nexport interface GameCreatePdfRequest {\n    type: typeof GAME_CREATE_PDF_REQUEST;\n    collectionType: string;\n    collectionId: string;\n    pageWidth: number;\n    pageHeight: number;\n    topBottomMargin: number;\n    leftRightMargin: number;\n    verticalSpace: number;\n    horizontalSpace: number;\n    includeBleedingArea: boolean;\n    cutMarksForScissors: boolean;\n    cutMarksForGuillotine: boolean;\n}\n\nexport type GameCreatePdfAction =\n    | GameCreatePdfRequest\n    | { type: typeof GAME_CREATE_PDF_SUCCESS }\n    | { type: typeof GAME_CREATE_PDF_FAILURE };\n\nexport type GameAction =\n    | GameCreateAction\n    | GameDeleteAction\n    | GameRenameAction\n    | GameListAction\n    | GameSelectAction\n    | GameCreatePdfAction;\n\nexport interface CardSetCreateRequest {\n    type: typeof CARDSET_CREATE_REQUEST;\n    cardsetname: string;\n    width: number;\n    height: number;\n    gameId: string;\n}\nexport type CardSetCreateAction =\n    | CardSetCreateRequest\n    | { type: typeof CARDSET_CREATE_SUCCESS }\n    | { type: typeof CARDSET_CREATE_FAILURE };\n\nexport interface CardSetDeleteRequest {\n    type: typeof CARDSET_DELETE_REQUEST;\n    cardSetId: string;\n}\n\nexport interface CardSetRenameRequest {\n    type: typeof CARDSET_RENAME_REQUEST;\n    cardSetId: string;\n    newName: string;\n}\n\nexport interface CardSetImportData {\n    type: typeof CARDSET_IMPORT_DATA;\n    data: object;\n}\n\nexport interface CardSetListSuccess {\n    type: typeof CARDSET_LIST_SUCCESS;\n    byId: CardSetsCollection;\n    allIds: IdsArray;\n}\nexport type CardSetListAction =\n    | { type: typeof CARDSET_LIST_REQUEST }\n    | CardSetListSuccess\n    | { type: typeof CARDSET_LIST_FAILURE }\n    | { type: typeof CARDSET_LIST_RESET };\n\nexport interface CardSetSelectRequest {\n    type: typeof CARDSET_SELECT_REQUEST;\n    id: string;\n}\nexport interface CardSetSelectSuccess {\n    type: typeof CARDSET_SELECT_SUCCESS;\n    id: string;\n    name: string;\n    data: {\n        version: number;\n        width: number;\n        height: number;\n        isTwoSided: boolean;\n        cardsAllIds: IdsArray;\n        cardsById: CardsCollection;\n        placeholders: PlaceholdersCollection;\n        placeholdersAllIds: IdsArray;\n        texts: PlaceholdersTextInfoByCardCollection;\n        images: PlaceholdersImageInfoByCardCollection;\n        zoom: number;\n    };\n    gameId: string;\n}\nexport interface CardSetCreateCard {\n    type: typeof CARDSET_CREATE_CARD;\n    card: CardType;\n}\nexport interface CardSetCloneCard {\n    type: typeof CARDSET_CLONE_CARD;\n    card: CardType;\n}\nexport interface CardSetRemoveCard {\n    type: typeof CARDSET_REMOVE_CARD;\n    card: CardType;\n}\nexport interface CardSetUpdateCardCount {\n    type: typeof CARDSET_UPDATE_CARD_COUNT;\n    card: CardType;\n    count: number;\n}\nexport interface CardSetAddTextPlaceholder {\n    type: typeof CARDSET_ADD_TEXT_PLACEHOLDER;\n}\nexport interface CardSetAddImagePlaceholder {\n    type: typeof CARDSET_ADD_IMAGE_PLACEHOLDER;\n}\nexport interface CardSetChangeActivePlaceholderName {\n    type: typeof CARDSET_CHANGE_ACTIVE_PLACEHOLDER_NAME;\n    name: string;\n}\nexport interface CardSetRemoveActivePlaceholder {\n    type: typeof CARDSET_REMOVE_ACTIVE_PLACEHOLDER;\n}\nexport interface CardSetRaiseActivePlaceholderToTop {\n    type: typeof CARDSET_RAISE_ACTIVE_PLACEHOLDER_TO_TOP;\n}\nexport interface CardSetLowerActivePlaceholderToBottom {\n    type: typeof CARDSET_LOWER_ACTIVE_PLACEHOLDER_TO_BOTTOM;\n}\nexport interface CardSetLockActivePlaceholder {\n    type: typeof CARDSET_LOCK_ACTIVE_PLACEHOLDER;\n}\nexport interface CardSetUnlockActivePlaceholder {\n    type: typeof CARDSET_UNLOCK_ACTIVE_PLACEHOLDER;\n}\nexport interface CardSetChangeFitForActivePlaceholder {\n    type: typeof CARDSET_CHANGE_FIT_FOR_ACTIVE_PLACEHOLDER;\n    fit: string;\n}\n\nexport interface CardSetChangeWidth {\n    type: typeof CARDSET_CHANGE_WIDTH;\n    width: number;\n}\n\nexport interface CardSetChangeHeight {\n    type: typeof CARDSET_CHANGE_HEIGHT;\n    height: number;\n}\n\nexport interface CardSetChangeIsTwoSided {\n    type: typeof CARDSET_CHANGE_IS_TWO_SIDED;\n    isTwoSided: boolean;\n}\n\nexport interface CardSetChangePlaceholderPosition {\n    type: typeof CARDSET_CHANGE_PLACEHOLDER_POSITION;\n    placeholder: PlaceholderType;\n    x: number;\n    y: number;\n}\nexport interface CardSetChangePlaceholderSize {\n    type: typeof CARDSET_CHANGE_PLACEHOLDER_SIZE;\n    placeholder: PlaceholderType;\n    width: number;\n    height: number;\n}\nexport interface CardSetChangePlaceholderAngle {\n    type: typeof CARDSET_CHANGE_PLACEHOLDER_ANGLE;\n    placeholder: PlaceholderType;\n    angle: number;\n}\nexport interface CardSetChangeActiveTextPlaceholderAlign {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_ALIGN;\n    align: string;\n}\nexport interface CardSetChangeActiveTextPlaceholderColor {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_COLOR;\n    color: string;\n}\nexport interface CardSetChangeActiveTextPlaceholderFontFamily {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY;\n    fontFamily: string;\n}\nexport interface CardSetChangeActiveTextPlaceholderFontVariant {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_VARIANT;\n    fontVariant: string;\n}\nexport interface CardSetChangeActiveTextPlaceholderFontFamilyAndVariant {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY_AND_VARIANT;\n    fontFamily: string;\n    fontVariant: string;\n}\nexport interface CardSetChangeActiveTextPlaceholderFontSize {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_SIZE;\n    fontSize: number;\n}\nexport interface CardSetChangeActiveTextPlaceholderLineHeight {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_LINE_HEIGHT;\n    lineHeight: number;\n}\nexport interface CardSetChangeText {\n    type: typeof CARDSET_CHANGE_TEXT;\n    cardId: string;\n    placeholderId: string;\n    textInfo: TextInfo;\n}\nexport interface CardSetChangeImage {\n    type: typeof CARDSET_CHANGE_IMAGE;\n    cardId: string;\n    placeholderId: string;\n    imageInfo: ImageInfo;\n}\nexport interface CardSetChangeImageBase64 {\n    type: typeof CARDSET_CHANGE_IMAGE_BASE64;\n    cardId: string;\n    placeholderId: string;\n    base64?: string;\n}\nexport interface CardSetSetActiveCardAndPlaceholder {\n    type: typeof CARDSET_SET_ACTIVE_CARD_AND_PLACEHOLDER;\n    cardId: string | null;\n    isBackActive: boolean;\n    placeholderId: string | null;\n}\n\nexport enum SidebarState {\n    Details,\n    Measurements,\n    Image,\n    Text,\n    Upload,\n    ImportExport,\n}\nexport interface CardSetSetSidebarState {\n    type: typeof CARDSET_SET_SIDEBAR_STATE;\n    sidebarState: SidebarState | null;\n}\nexport interface CardSetSetZoom {\n    type: typeof CARDSET_SET_ZOOM;\n    zoom: number;\n}\n\nexport type FPLoadCallback = (id: string) => void;\nexport type FPErrorCallback = (error: string) => void;\nexport type FPProgressCallback = (computable: boolean, loaded: number, total: number) => void;\nexport type FPAbortCallback = () => void;\nexport type FPRevertLoadCallback = () => void;\n\nexport interface CardSetUploadImage {\n    type: typeof CARDSET_UPLOAD_IMAGE;\n    gameId: string;\n    file: File;\n    load: FPLoadCallback;\n    error: FPErrorCallback;\n    progress: FPProgressCallback;\n    abort: FPAbortCallback;\n    cancelToken: CancelToken;\n}\n\nexport interface CardSetDeleteImage {\n    type: typeof CARDSET_DELETE_IMAGE;\n    imageId: string;\n    load: FPRevertLoadCallback;\n    error: FPErrorCallback;\n}\n\nexport interface CardSetUploadImageSuccess {\n    type: typeof CARDSET_UPLOAD_IMAGE_SUCCESS;\n}\n\nexport interface CardSetUploadImageFailure {\n    type: typeof CARDSET_UPLOAD_IMAGE_FAILURE;\n}\n\nexport type CardSetSelectAction = CardSetSelectRequest | CardSetSelectSuccess | { type: typeof CARDSET_SELECT_FAILURE };\n\nexport interface CardSetUpdateDataRequest {\n    type: typeof CARDSET_UPDATE_DATA_REQUEST;\n}\nexport interface CardSetUpdateDataSuccess {\n    type: typeof CARDSET_UPDATE_DATA_SUCCESS;\n}\nexport interface CardSetUpdateDataFailure {\n    type: typeof CARDSET_UPDATE_DATA_FAILURE;\n}\nexport type CardSetUpdateDataAction = CardSetUpdateDataRequest | CardSetUpdateDataSuccess | CardSetUpdateDataFailure;\n\nexport type CardSetModifyAction =\n    | CardSetCreateCard\n    | CardSetCloneCard\n    | CardSetRemoveCard\n    | CardSetUpdateCardCount\n    | CardSetAddTextPlaceholder\n    | CardSetAddImagePlaceholder\n    | CardSetChangeActivePlaceholderName\n    | CardSetRemoveActivePlaceholder\n    | CardSetRaiseActivePlaceholderToTop\n    | CardSetLowerActivePlaceholderToBottom\n    | CardSetLockActivePlaceholder\n    | CardSetUnlockActivePlaceholder\n    | CardSetChangeFitForActivePlaceholder\n    | CardSetChangeWidth\n    | CardSetChangeHeight\n    | CardSetChangeIsTwoSided\n    | CardSetChangePlaceholderPosition\n    | CardSetChangePlaceholderSize\n    | CardSetChangePlaceholderAngle\n    | CardSetChangeActiveTextPlaceholderAlign\n    | CardSetChangeActiveTextPlaceholderColor\n    | CardSetChangeActiveTextPlaceholderFontFamily\n    | CardSetChangeActiveTextPlaceholderFontVariant\n    | CardSetChangeActiveTextPlaceholderFontFamilyAndVariant\n    | CardSetChangeActiveTextPlaceholderFontSize\n    | CardSetChangeActiveTextPlaceholderLineHeight\n    | CardSetChangeText\n    | CardSetChangeImage\n    | CardSetChangeImageBase64\n    | CardSetSetActiveCardAndPlaceholder\n    | CardSetSetSidebarState\n    | CardSetSetZoom\n    | CardSetUploadImage\n    | CardSetDeleteImage\n    | CardSetUploadImageSuccess\n    | CardSetUploadImageFailure;\n\nexport type CardSetAction =\n    | CardSetCreateAction\n    | CardSetDeleteRequest\n    | CardSetRenameRequest\n    | CardSetImportData\n    | CardSetListAction\n    | CardSetSelectAction\n    | CardSetUpdateDataAction\n    | CardSetModifyAction;\n\nexport interface ImageListRequest {\n    type: typeof IMAGE_LIST_REQUEST;\n    filter: string;\n    location: string;\n}\nexport interface ImageListSuccess {\n    type: typeof IMAGE_LIST_SUCCESS;\n    images: ImageArray;\n}\nexport type ImageListAction = ImageListRequest | ImageListSuccess | { type: typeof IMAGE_LIST_FAILURE };\n\nexport type Action =\n    | InitAction\n    | LoginAction\n    | SignUpAction\n    | GameAction\n    | CardSetAction\n    | ImageListAction\n    | MessageAction;\n\nexport type Dispatch = ReduxDispatch<Action>;\n\nexport const messageDisplay = (type: string, text: string, id?: string): MessageDisplay => {\n    return {\n        type: MESSAGE_DISPLAY,\n        message: {\n            id: id || shortid.generate(),\n            type: type,\n            text: text,\n        },\n    };\n};\n\nexport const initRequest = (): InitAction => {\n    return { type: INIT_REQUEST };\n};\n\nexport const loginRequest = (creds: Credentials): LoginAction => {\n    return {\n        type: LOGIN_REQUEST,\n        creds: creds,\n    };\n};\n\nexport const logoutRequest = (): LoginAction => {\n    return {\n        type: LOGOUT_REQUEST,\n    };\n};\n\nexport const signupRequest = (creds: Credentials): SignUpAction => {\n    return {\n        type: SIGNUP_REQUEST,\n        creds: creds,\n    };\n};\n\nexport const gameCreateRequest = (gamename: string): GameAction => {\n    return {\n        type: GAME_CREATE_REQUEST,\n        gamename: gamename,\n    };\n};\n\nexport const gameDeleteRequest = (gameId: string): GameAction => {\n    return {\n        type: GAME_DELETE_REQUEST,\n        gameId,\n    };\n};\n\nexport const gameRenameRequest = (gameId: string, newName: string): GameAction => {\n    return {\n        type: GAME_RENAME_REQUEST,\n        gameId,\n        newName,\n    };\n};\n\nexport const gameListRequest = (): GameAction => {\n    return {\n        type: GAME_LIST_REQUEST,\n    };\n};\n\nexport const gameSelectRequest = (id: string, updateCardSets: boolean): GameAction => {\n    return {\n        type: GAME_SELECT_REQUEST,\n        id,\n        updateCardSets,\n    };\n};\n\nexport const gameCreatePdfRequest = (\n    collectionType: string,\n    collectionId: string,\n    pageWidth: number,\n    pageHeight: number,\n    topBottomMargin: number,\n    leftRightMargin: number,\n    verticalSpace: number,\n    horizontalSpace: number,\n    includeBleedingArea: boolean,\n    cutMarksForScissors: boolean,\n    cutMarksForGuillotine: boolean,\n): GameCreatePdfRequest => {\n    return {\n        type: GAME_CREATE_PDF_REQUEST,\n        collectionType,\n        collectionId,\n        pageWidth,\n        pageHeight,\n        topBottomMargin,\n        leftRightMargin,\n        verticalSpace,\n        horizontalSpace,\n        includeBleedingArea,\n        cutMarksForScissors,\n        cutMarksForGuillotine,\n    };\n};\n\nexport const cardSetCreateRequest = (\n    cardsetname: string,\n    width: number,\n    height: number,\n    gameId: string,\n): CardSetAction => {\n    return {\n        type: CARDSET_CREATE_REQUEST,\n        cardsetname: cardsetname,\n        width,\n        height,\n        gameId,\n    };\n};\n\nexport const cardSetDeleteRequest = (cardSetId: string): CardSetAction => {\n    return {\n        type: CARDSET_DELETE_REQUEST,\n        cardSetId,\n    };\n};\n\nexport const cardSetRenameRequest = (cardSetId: string, newName: string): CardSetAction => {\n    return {\n        type: CARDSET_RENAME_REQUEST,\n        cardSetId,\n        newName,\n    };\n};\n\nexport const cardSetImportData = (data: object): CardSetImportData => {\n    return {\n        type: CARDSET_IMPORT_DATA,\n        data,\n    };\n};\n\nexport const cardSetSelectRequest = (id: string): CardSetSelectRequest => {\n    return {\n        type: CARDSET_SELECT_REQUEST,\n        id,\n    };\n};\n\nexport const cardSetCreateCard = (card: CardType): CardSetCreateCard => {\n    return {\n        type: CARDSET_CREATE_CARD,\n        card,\n    };\n};\n\nexport const cardSetCloneCard = (card: CardType): CardSetCloneCard => {\n    return {\n        type: CARDSET_CLONE_CARD,\n        card,\n    };\n};\n\nexport const cardSetRemoveCard = (card: CardType): CardSetRemoveCard => {\n    return {\n        type: CARDSET_REMOVE_CARD,\n        card,\n    };\n};\n\nexport const cardSetUpdateCardCount = (card: CardType, count: number): CardSetUpdateCardCount => {\n    return {\n        type: CARDSET_UPDATE_CARD_COUNT,\n        card,\n        count,\n    };\n};\n\nexport const cardSetAddTextPlaceholder = (): CardSetAddTextPlaceholder => {\n    return {\n        type: CARDSET_ADD_TEXT_PLACEHOLDER,\n    };\n};\n\nexport const cardSetAddImagePlaceholder = (): CardSetAddImagePlaceholder => {\n    return {\n        type: CARDSET_ADD_IMAGE_PLACEHOLDER,\n    };\n};\n\nexport const cardSetChangeActivePlaceholderName = (name: string): CardSetChangeActivePlaceholderName => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_PLACEHOLDER_NAME,\n        name,\n    };\n};\n\nexport const cardSetRemoveActivePlaceholder = (): CardSetRemoveActivePlaceholder => {\n    return {\n        type: CARDSET_REMOVE_ACTIVE_PLACEHOLDER,\n    };\n};\n\nexport const cardSetRaiseActivePlaceholderToTop = (): CardSetRaiseActivePlaceholderToTop => {\n    return {\n        type: CARDSET_RAISE_ACTIVE_PLACEHOLDER_TO_TOP,\n    };\n};\n\nexport const cardSetLowerActivePlaceholderToBottom = (): CardSetLowerActivePlaceholderToBottom => {\n    return {\n        type: CARDSET_LOWER_ACTIVE_PLACEHOLDER_TO_BOTTOM,\n    };\n};\n\nexport const cardSetLockActivePlaceholder = (): CardSetLockActivePlaceholder => {\n    return {\n        type: CARDSET_LOCK_ACTIVE_PLACEHOLDER,\n    };\n};\n\nexport const cardSetUnlockActivePlaceholder = (): CardSetUnlockActivePlaceholder => {\n    return {\n        type: CARDSET_UNLOCK_ACTIVE_PLACEHOLDER,\n    };\n};\n\nexport const cardSetChangeFitForActivePlaceholder = (fit: string): CardSetChangeFitForActivePlaceholder => {\n    return {\n        type: CARDSET_CHANGE_FIT_FOR_ACTIVE_PLACEHOLDER,\n        fit,\n    };\n};\n\nexport const cardSetChangeWidth = (width: number): CardSetChangeWidth => {\n    return {\n        type: CARDSET_CHANGE_WIDTH,\n        width,\n    };\n};\n\nexport const cardSetChangeHeight = (height: number): CardSetChangeHeight => {\n    return {\n        type: CARDSET_CHANGE_HEIGHT,\n        height,\n    };\n};\n\nexport const cardSetChangeIsTwoSided = (isTwoSided: boolean): CardSetChangeIsTwoSided => {\n    return {\n        type: CARDSET_CHANGE_IS_TWO_SIDED,\n        isTwoSided,\n    };\n};\n\nexport const cardSetChangePlaceholderPosition = (\n    placeholder: PlaceholderType,\n    x: number,\n    y: number,\n): CardSetChangePlaceholderPosition => {\n    return {\n        type: CARDSET_CHANGE_PLACEHOLDER_POSITION,\n        placeholder,\n        x,\n        y,\n    };\n};\n\nexport const cardSetChangePlaceholderSize = (\n    placeholder: PlaceholderType,\n    width: number,\n    height: number,\n): CardSetChangePlaceholderSize => {\n    return {\n        type: CARDSET_CHANGE_PLACEHOLDER_SIZE,\n        placeholder,\n        width,\n        height,\n    };\n};\n\nexport const cardSetChangePlaceholderAngle = (\n    placeholder: PlaceholderType,\n    angle: number,\n): CardSetChangePlaceholderAngle => {\n    return {\n        type: CARDSET_CHANGE_PLACEHOLDER_ANGLE,\n        placeholder,\n        angle,\n    };\n};\n\nexport const cardSetChangeActiveTextPlaceholderAlign = (align: string): CardSetChangeActiveTextPlaceholderAlign => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_ALIGN,\n        align,\n    };\n};\n\nexport const cardSetChangeActiveTextPlaceholderColor = (color: string): CardSetChangeActiveTextPlaceholderColor => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_COLOR,\n        color,\n    };\n};\n\nexport const cardSetChangeActiveTextPlaceholderFontFamily = (\n    fontFamily: string,\n): CardSetChangeActiveTextPlaceholderFontFamily => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY,\n        fontFamily,\n    };\n};\n\nexport const cardSetChangeActiveTextPlaceholderFontVariant = (\n    fontVariant: string,\n): CardSetChangeActiveTextPlaceholderFontVariant => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_VARIANT,\n        fontVariant,\n    };\n};\n\nexport const cardSetChangeActiveTextPlaceholderFontFamilyAndVariant = (\n    fontFamily: string,\n    fontVariant: string,\n): CardSetChangeActiveTextPlaceholderFontFamilyAndVariant => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY_AND_VARIANT,\n        fontFamily,\n        fontVariant,\n    };\n};\n\nexport const cardSetChangeActiveTextPlaceholderFontSize = (\n    fontSize: number,\n): CardSetChangeActiveTextPlaceholderFontSize => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_SIZE,\n        fontSize,\n    };\n};\n\nexport const cardSetChangeActiveTextPlaceholderLineHeight = (\n    lineHeight: number,\n): CardSetChangeActiveTextPlaceholderLineHeight => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_LINE_HEIGHT,\n        lineHeight,\n    };\n};\n\nexport const cardSetChangeText = (cardId: string, placeholderId: string, textInfo: TextInfo): CardSetChangeText => {\n    return {\n        type: CARDSET_CHANGE_TEXT,\n        cardId,\n        placeholderId,\n        textInfo,\n    };\n};\n\nexport const cardSetChangeImage = (cardId: string, placeholderId: string, imageInfo: ImageInfo): CardSetChangeImage => {\n    return {\n        type: CARDSET_CHANGE_IMAGE,\n        cardId,\n        placeholderId,\n        imageInfo,\n    };\n};\n\nexport const cardSetChangeImageBase64 = (\n    cardId: string,\n    placeholderId: string,\n    base64?: string,\n): CardSetChangeImageBase64 => {\n    return {\n        type: CARDSET_CHANGE_IMAGE_BASE64,\n        cardId,\n        placeholderId,\n        base64,\n    };\n};\n\nexport const cardSetActiveCardAndPlaceholder = (\n    cardId: string | null,\n    isBackActive: boolean,\n    placeholderId: string | null,\n): CardSetSetActiveCardAndPlaceholder => {\n    return {\n        type: CARDSET_SET_ACTIVE_CARD_AND_PLACEHOLDER,\n        cardId,\n        isBackActive,\n        placeholderId,\n    };\n};\n\nexport const cardSetSetSidebarState = (sidebarState: SidebarState | null): CardSetSetSidebarState => {\n    return {\n        type: CARDSET_SET_SIDEBAR_STATE,\n        sidebarState,\n    };\n};\n\nexport const cardSetSetZoom = (zoom: number): CardSetSetZoom => {\n    return {\n        type: CARDSET_SET_ZOOM,\n        zoom,\n    };\n};\n\nexport const cardSetUploadImage = (\n    gameId: string,\n    file: File,\n    load: FPLoadCallback,\n    error: FPErrorCallback,\n    progress: FPProgressCallback,\n    abort: FPAbortCallback,\n    cancelToken: CancelToken,\n): CardSetUploadImage => {\n    return {\n        type: CARDSET_UPLOAD_IMAGE,\n        gameId,\n        file,\n        load,\n        error,\n        progress,\n        abort,\n        cancelToken,\n    };\n};\n\nexport const cardSetDeleteImage = (\n    imageId: string,\n    load: FPRevertLoadCallback,\n    error: FPErrorCallback,\n): CardSetDeleteImage => {\n    return {\n        type: CARDSET_DELETE_IMAGE,\n        imageId,\n        load,\n        error,\n    };\n};\n\nexport const imageListRequest = (filter: string, location: string): ImageListAction => {\n    return {\n        type: IMAGE_LIST_REQUEST,\n        filter,\n        location,\n    };\n};\n","export const CURRENT_CARDSET_VERSION = 2;\nexport const DEFAULT_FONT = 'Roboto';\nexport const DEFAULT_FONT_VARIANT = 'regular';\nexport const DEFAULT_FONT_SIZE = 8;\nexport const DEFAULT_LINE_HEIGHT = 1.27;\n\nexport const BLEED_WIDTH = 25.4 / 8; // 1/8th of inch in mm\n","import axios, { AxiosError, CancelToken } from 'axios';\n\nimport { Credentials } from './actions';\n\nexport function handleAxiosError(error: AxiosError) {\n    if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        // error.response.status);\n        throw new Error(error.response.data.message);\n    } else if (error.request) {\n        console.log(error.request);\n        throw new Error(error.request);\n    } else {\n        throw new Error('Unknown error :(');\n    }\n}\n\nexport function getTokens(creds: Credentials) {\n    return axios\n        .post('/api/tokens', creds)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function refreshToken(refreshTokenValue: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${refreshTokenValue}` },\n    };\n    return axios\n        .post('/api/access_tokens', {}, config)\n        .then(resp => {\n            return resp.data.accessToken;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function deleteAccessToken(token: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .delete('/api/access_tokens', config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            if (error.response.status === 401) return {};\n            handleAxiosError(error);\n        });\n}\n\nexport function deleteRefreshToken(token: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .delete('/api/refresh_tokens', config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            if (error.response.status === 401) return {};\n            handleAxiosError(error);\n        });\n}\n\nexport function registerUser(creds: Credentials) {\n    return axios\n        .post('/api/users', creds)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function getRequest(url: string, token: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .get(url, config)\n        .then(resp => {\n            return resp;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function postRequest(url: string, token: string, data: object) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .post(url, data, config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function postRequestFormDataCancelable(\n    url: string,\n    token: string,\n    data: FormData,\n    progressCallback: (event: ProgressEvent) => void,\n    cancelToken: CancelToken,\n    cancelCallback: () => void,\n) {\n    let config = {\n        headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'multipart/form-data',\n        },\n        cancelToken,\n        onUploadProgress: progressCallback,\n    };\n\n    return axios\n        .post(url, data, config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            if (axios.isCancel(error)) {\n                cancelCallback();\n            } else {\n                handleAxiosError(error);\n            }\n        });\n}\n\nexport function putRequest(url: string, token: string, data: object) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .put(url, data, config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function deleteRequest(url: string, token: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .delete(url, config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n","export function downloadBlob(blobURL: string, filename: string, resolve?: () => void) {\n    const tempLink = document.createElement('a');\n    tempLink.style.display = 'none';\n    tempLink.href = blobURL;\n    tempLink.setAttribute('download', filename);\n    if (typeof tempLink.download === 'undefined') {\n        tempLink.setAttribute('target', '_blank');\n    }\n    document.body.appendChild(tempLink);\n    tempLink.click();\n    document.body.removeChild(tempLink);\n    setTimeout(() => {\n        window.URL.revokeObjectURL(blobURL);\n        if (resolve) resolve();\n    }, 100);\n}\n","import { downloadBlob } from './utils';\n\nexport const generatePdfUsingWorker = (\n    accessToken: string,\n    collectionType: string,\n    collectionId: string,\n    pageWidth: number,\n    pageHeight: number,\n    topBottomMargin: number,\n    leftRightMargin: number,\n    verticalSpace: number,\n    horizontalSpace: number,\n    includeBleedingArea: boolean,\n    cutMarksForScissors: boolean,\n    cutMarksForGuillotine: boolean,\n) => {\n    // @ts-ignore\n    if (!window.Worker) {\n        throw new Error('We can not generate PDF because of browser you use. Try using different browser');\n    }\n\n    return new Promise((resolve, reject) => {\n        try {\n            const worker = new Worker('/js/worker.js');\n            worker.addEventListener('message', event => {\n                const blobURL = event.data;\n                downloadBlob(blobURL, 'card.pdf', resolve);\n            });\n\n            worker.postMessage({\n                accessToken,\n                collectionType,\n                collectionId,\n                pageWidth,\n                pageHeight,\n                topBottomMargin,\n                leftRightMargin,\n                verticalSpace,\n                horizontalSpace,\n                includeBleedingArea,\n                cutMarksForScissors,\n                cutMarksForGuillotine,\n            });\n        } catch (e) {\n            reject(e);\n        }\n    });\n};\n","export function saveTokens(data: { accessToken: string; refreshToken: string }) {\n    localStorage.setItem('accessToken', data.accessToken);\n    localStorage.setItem('refreshToken', data.refreshToken);\n}\n\nexport function saveAccessToken(accessToken: string) {\n    localStorage.setItem('accessToken', accessToken);\n}\n\nexport function cleanTokens() {\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n}\n\nexport function getTokenFromStorage() {\n    let token = localStorage.getItem('accessToken') || null;\n    return token;\n}\n\nexport function getRefreshTokenFromStorage() {\n    let token = localStorage.getItem('refreshToken') || null;\n    return token;\n}\n","import WebFont from 'webfontloader';\n\nimport { DEFAULT_FONT } from './constants';\nimport { PlaceholdersCollection } from './actions';\n\nconst webFontsLoadPromise = (config: WebFont.Config) =>\n    new Promise((resolve, reject) => {\n        WebFont.load({ ...config, active: resolve, inactive: reject });\n    });\n\nexport const loadFontsUsedInPlaceholders = (data: { placeholders: PlaceholdersCollection }) => {\n    let fontsToLoad: Set<string> = new Set();\n    fontsToLoad.add(DEFAULT_FONT);\n    for (const plId in data.placeholders) {\n        const pl = data.placeholders[plId];\n        if (pl.type === 'text' && pl.fontFamily) {\n            let fontToLoad = pl.fontFamily;\n            if (pl.fontVariant && pl.fontVariant !== 'regular') {\n                fontToLoad += ':' + pl.fontVariant;\n            }\n\n            fontsToLoad.add(fontToLoad);\n        }\n    }\n\n    const config: WebFont.Config = {\n        google: {\n            families: [...Array.from(fontsToLoad)],\n        },\n    };\n\n    return webFontsLoadPromise(config);\n};\n","import { CancelToken } from 'axios';\nimport { XmlDocument, XmlNode } from 'xmldoc';\nimport { all, call, put, select, takeEvery, takeLatest } from 'redux-saga/effects';\nimport { delay, SagaIterator } from 'redux-saga';\nimport jwtDecode from 'jwt-decode';\n\nimport { BLEED_WIDTH } from './constants';\nimport {\n    CARDSET_ADD_IMAGE_PLACEHOLDER,\n    CARDSET_ADD_TEXT_PLACEHOLDER,\n    CARDSET_CHANGE_ACTIVE_PLACEHOLDER_NAME,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_ALIGN,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_COLOR,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY_AND_VARIANT,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_SIZE,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_VARIANT,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_LINE_HEIGHT,\n    CARDSET_CHANGE_FIT_FOR_ACTIVE_PLACEHOLDER,\n    CARDSET_CHANGE_HEIGHT,\n    CARDSET_CHANGE_IMAGE,\n    CARDSET_CHANGE_IS_TWO_SIDED,\n    CARDSET_CHANGE_PLACEHOLDER_ANGLE,\n    CARDSET_CHANGE_PLACEHOLDER_POSITION,\n    CARDSET_CHANGE_PLACEHOLDER_SIZE,\n    CARDSET_CHANGE_TEXT,\n    CARDSET_CHANGE_WIDTH,\n    CARDSET_CLONE_CARD,\n    CARDSET_CREATE_CARD,\n    CARDSET_CREATE_FAILURE,\n    CARDSET_CREATE_REQUEST,\n    CARDSET_CREATE_SUCCESS,\n    CARDSET_DELETE_IMAGE,\n    CARDSET_DELETE_REQUEST,\n    CARDSET_IMPORT_DATA,\n    CARDSET_LIST_RESET,\n    CARDSET_LIST_SUCCESS,\n    CARDSET_LOCK_ACTIVE_PLACEHOLDER,\n    CARDSET_LOWER_ACTIVE_PLACEHOLDER_TO_BOTTOM,\n    CARDSET_RAISE_ACTIVE_PLACEHOLDER_TO_TOP,\n    CARDSET_REMOVE_ACTIVE_PLACEHOLDER,\n    CARDSET_REMOVE_CARD,\n    CARDSET_RENAME_REQUEST,\n    CARDSET_SELECT_FAILURE,\n    CARDSET_SELECT_REQUEST,\n    CARDSET_SELECT_SUCCESS,\n    CARDSET_SET_ZOOM,\n    CARDSET_UNLOCK_ACTIVE_PLACEHOLDER,\n    CARDSET_UPDATE_CARD_COUNT,\n    CARDSET_UPDATE_DATA_FAILURE,\n    CARDSET_UPDATE_DATA_REQUEST,\n    CARDSET_UPDATE_DATA_SUCCESS,\n    CARDSET_UPLOAD_IMAGE,\n    CARDSET_UPLOAD_IMAGE_FAILURE,\n    CARDSET_UPLOAD_IMAGE_SUCCESS,\n    CardSetChangeFitForActivePlaceholder,\n    CardSetChangeImage,\n    CardSetCreateRequest,\n    CardSetDeleteImage,\n    CardSetDeleteRequest,\n    CardSetRenameRequest,\n    CardSetSelectRequest,\n    CardSetType,\n    CardSetUploadImage,\n    CardSetsCollection,\n    GAME_CREATE_FAILURE,\n    GAME_CREATE_PDF_FAILURE,\n    GAME_CREATE_PDF_REQUEST,\n    GAME_CREATE_PDF_SUCCESS,\n    GAME_CREATE_REQUEST,\n    GAME_CREATE_SUCCESS,\n    GAME_DELETE_REQUEST,\n    GAME_LIST_FAILURE,\n    GAME_LIST_REQUEST,\n    GAME_LIST_RESET,\n    GAME_LIST_SUCCESS,\n    GAME_RENAME_REQUEST,\n    GAME_SELECT_FAILURE,\n    GAME_SELECT_REQUEST,\n    GAME_SELECT_SUCCESS,\n    GameCreatePdfRequest,\n    GameCreateRequest,\n    GameDeleteRequest,\n    GameRenameRequest,\n    GameSelectRequest,\n    GameType,\n    GamesCollection,\n    IMAGE_LIST_FAILURE,\n    IMAGE_LIST_REQUEST,\n    IMAGE_LIST_SUCCESS,\n    INIT_REQUEST,\n    ImageListRequest,\n    LOGIN_FAILURE,\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGOUT_FAILURE,\n    LOGOUT_REQUEST,\n    LOGOUT_SUCCESS,\n    LoginRequest,\n    MESSAGE_DISPLAY,\n    MESSAGE_HIDE,\n    MessageDisplay,\n    SIGNUP_FAILURE,\n    SIGNUP_REQUEST,\n    SIGNUP_SUCCESS,\n    SignUpRequest,\n    cardSetChangeImageBase64,\n    gameSelectRequest,\n    messageDisplay,\n} from './actions';\nimport { State } from './reducers';\nimport {\n    deleteAccessToken,\n    deleteRefreshToken,\n    deleteRequest,\n    getRequest,\n    getTokens,\n    postRequest,\n    postRequestFormDataCancelable,\n    putRequest,\n    refreshToken,\n    registerUser,\n} from './requests';\nimport { generatePdfUsingWorker } from './workerController';\nimport { getTokenFromStorage, getRefreshTokenFromStorage, saveAccessToken, saveTokens, cleanTokens } from './storage';\nimport { loadFontsUsedInPlaceholders } from './fontLoader';\n\n// Messages\nexport function* putError(message: string): SagaIterator {\n    yield put(messageDisplay('error', message));\n}\n\nexport function* putInfo(message: string): SagaIterator {\n    yield put(messageDisplay('info', message));\n}\n\nexport function* putProgress(text: string): SagaIterator {\n    const message = messageDisplay('progress', text, text);\n    yield put(message);\n    return message.message.id;\n}\n\nexport function* hideProgress(messageId: string): SagaIterator {\n    yield put({ type: MESSAGE_HIDE, messageId });\n}\n\nexport function* handleMessageDisplay(action: MessageDisplay): SagaIterator {\n    if (action.message.type === 'progress') return;\n\n    yield call(delay, 5000);\n    yield put({ type: MESSAGE_HIDE, messageId: action.message.id });\n}\n\n// Login & Signup\n// Token handling\n\nexport function validateToken(token: string): boolean {\n    try {\n        const decoded = jwtDecode<{ exp: number }>(token);\n        const valid = decoded.exp - new Date().getTime() / 1000 > 5;\n        return valid;\n    } catch (e) {\n        return false;\n    }\n}\n\nexport function* getToken(withErrorIfMissing: boolean, getFreshToken = false): SagaIterator {\n    const token = yield call(getTokenFromStorage);\n    if (token && !getFreshToken) {\n        const tokenValid = yield call(validateToken, token);\n        if (tokenValid) return token;\n    }\n\n    const refreshTokenValue = yield call(getRefreshTokenFromStorage);\n    if (!refreshTokenValue) {\n        if (withErrorIfMissing) throw new Error('Token not found.');\n        return null;\n    }\n\n    const refreshTokenValid = yield call(validateToken, refreshTokenValue);\n    if (!refreshTokenValid) {\n        yield put({ type: LOGOUT_REQUEST });\n        if (withErrorIfMissing) throw new Error('Token not found.');\n        return null;\n    }\n\n    const newToken = yield call(refreshToken, refreshTokenValue);\n    yield call(saveAccessToken, newToken);\n    return newToken;\n}\n\n// Login\n\nexport function* handleLoginRequest(action: LoginRequest): SagaIterator {\n    try {\n        const data = yield call(getTokens, action.creds);\n        yield call(saveTokens, data);\n        yield put({ type: LOGIN_SUCCESS });\n    } catch (e) {\n        yield put({ type: LOGIN_FAILURE });\n        yield call(putError, e.message);\n    }\n}\n\nexport function* handleLoginSuccess(): SagaIterator {\n    yield put({ type: GAME_LIST_REQUEST });\n}\n\n// Logout\n\nexport function* logoutToken(): SagaIterator {\n    const token = yield call(getTokenFromStorage);\n    if (token) {\n        const tokenValid = yield call(validateToken, token);\n        if (tokenValid) {\n            yield call(deleteAccessToken, token);\n        }\n    }\n}\n\nexport function* logoutRefreshToken(): SagaIterator {\n    const refreshTokenValue = yield call(getRefreshTokenFromStorage);\n    if (refreshTokenValue) {\n        const refreshTokenValid = yield call(validateToken, refreshTokenValue);\n        if (refreshTokenValid) {\n            yield call(deleteRefreshToken, refreshTokenValue);\n        }\n    }\n}\n\nexport function* handleLogoutRequest(): SagaIterator {\n    try {\n        yield call(logoutToken);\n        yield call(logoutRefreshToken);\n        yield call(cleanTokens);\n\n        yield put({ type: CARDSET_LIST_RESET });\n        yield put({ type: GAME_LIST_RESET });\n        yield put({ type: LOGOUT_SUCCESS });\n    } catch (e) {\n        yield put({ type: LOGOUT_FAILURE });\n        yield call(putError, e.message);\n    }\n}\n\n// Sign-up\n\nexport function* handleSignupRequest(action: SignUpRequest): SagaIterator {\n    try {\n        const data = yield call(registerUser, action.creds);\n        yield call(saveTokens, data);\n        yield put({ type: SIGNUP_SUCCESS });\n        yield put({ type: LOGIN_SUCCESS });\n    } catch (e) {\n        yield put({ type: SIGNUP_FAILURE });\n        yield call(putError, e.message);\n    }\n}\n\n// Init\nexport function* handleInitRequest(): SagaIterator {\n    try {\n        let token = yield call(getToken, false);\n        if (token) {\n            yield put({ type: LOGIN_SUCCESS });\n        }\n    } catch (e) {}\n}\n\n// Authorized Requests\nexport function* authorizedGetRequest(url: string): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(getRequest, url, token);\n}\n\nexport function* authorizedPostRequest(url: string, data: object): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(postRequest, url, token, data);\n}\n\nexport function* authorizedDeleteRequest(url: string): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(deleteRequest, url, token);\n}\n\nexport function* authorizedPostFormDataRequest(\n    url: string,\n    data: FormData,\n    progressCallback: (event: ProgressEvent) => void,\n    cancelToken: CancelToken,\n    cancelCallback: () => void,\n): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(postRequestFormDataCancelable, url, token, data, progressCallback, cancelToken, cancelCallback);\n}\n\nexport function* authorizedPutRequest(url: string, data: object): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(putRequest, url, token, data);\n}\n\n// Game\nexport function* handleGameCreateRequest(action: GameCreateRequest): SagaIterator {\n    try {\n        yield call(authorizedPostRequest, '/api/games', { name: action.gamename });\n        yield put({\n            type: GAME_CREATE_SUCCESS,\n        });\n        yield put({ type: GAME_LIST_REQUEST });\n    } catch (e) {\n        yield put({ type: GAME_CREATE_FAILURE });\n        yield call(putError, e.message);\n    }\n}\n\nexport function* handleGameDeleteRequest(action: GameDeleteRequest): SagaIterator {\n    try {\n        yield call(authorizedDeleteRequest, '/api/games/' + action.gameId);\n        yield put({ type: GAME_LIST_REQUEST });\n    } catch (e) {\n        yield call(putError, e.message);\n    }\n}\n\nexport function* handleGameRenameRequest(action: GameRenameRequest): SagaIterator {\n    try {\n        yield call(delay, 500);\n        yield call(authorizedPutRequest, '/api/games/' + action.gameId, { name: action.newName });\n    } catch (e) {\n        yield call(putError, e.message);\n    }\n}\n\nexport function* handleGameListRequest(): SagaIterator {\n    try {\n        const resp = yield call(authorizedGetRequest, '/api/games');\n        const allIds = resp.data.games.map((g: GameType) => g.id);\n        const byId = resp.data.games.reduce((obj: GamesCollection, g: GameType) => {\n            obj[g.id] = g;\n            return obj;\n        }, {});\n        yield put({\n            type: GAME_LIST_SUCCESS,\n            allIds,\n            byId,\n        });\n    } catch (e) {\n        yield put({ type: GAME_LIST_FAILURE });\n        yield call(putError, e.message);\n    }\n}\n\nexport function* handleGameSelectRequest(action: GameSelectRequest): SagaIterator {\n    try {\n        const resp = yield call(authorizedGetRequest, '/api/games/' + action.id);\n        yield put({\n            type: GAME_SELECT_SUCCESS,\n            id: action.id,\n        });\n\n        if (action.updateCardSets) {\n            const allIds = resp.data.cardsets.map((g: CardSetType) => g.id);\n            const byId = resp.data.cardsets.reduce((obj: CardSetsCollection, g: CardSetType) => {\n                obj[g.id] = g;\n                return obj;\n            }, {});\n            yield put({\n                type: CARDSET_LIST_SUCCESS,\n                allIds,\n                byId,\n            });\n        }\n    } catch (e) {\n        yield put({ type: GAME_SELECT_FAILURE });\n        yield call(putError, e.message);\n    }\n}\n\nexport function* handleGameCreatePdfRequest(action: GameCreatePdfRequest): SagaIterator {\n    let progressId = null;\n    try {\n        progressId = yield call(putProgress, 'Generating PDF');\n\n        const token = yield call(getToken, true, true);\n\n        yield call(\n            generatePdfUsingWorker,\n            token,\n            action.collectionType,\n            action.collectionId,\n            action.pageWidth,\n            action.pageHeight,\n            action.topBottomMargin,\n            action.leftRightMargin,\n            action.verticalSpace,\n            action.horizontalSpace,\n            action.includeBleedingArea,\n            action.cutMarksForScissors,\n            action.cutMarksForGuillotine,\n        );\n        yield call(hideProgress, progressId);\n        yield call(putInfo, 'PDF generated.');\n        yield put({\n            type: GAME_CREATE_PDF_SUCCESS,\n        });\n    } catch (e) {\n        yield put({ type: GAME_CREATE_PDF_FAILURE });\n        if (progressId !== null) yield call(hideProgress, progressId);\n        yield call(putError, e.message);\n    }\n}\n\n// Card Set\n\nexport function* handleCardSetCreateRequest(action: CardSetCreateRequest): SagaIterator {\n    try {\n        yield call(authorizedPostRequest, '/api/cardsets', {\n            name: action.cardsetname,\n            gameId: action.gameId,\n            data: JSON.stringify({ width: action.width, height: action.height }),\n        });\n        yield put({\n            type: CARDSET_CREATE_SUCCESS,\n        });\n        yield put(gameSelectRequest(action.gameId, true));\n    } catch (e) {\n        yield put({ type: CARDSET_CREATE_FAILURE });\n        yield call(putError, e.message);\n    }\n}\n\nexport function* handleCardSetDeleteRequest(action: CardSetDeleteRequest): SagaIterator {\n    try {\n        yield call(authorizedDeleteRequest, '/api/cardsets/' + action.cardSetId);\n        yield put({ type: GAME_LIST_REQUEST });\n\n        const state = yield select();\n        yield put(gameSelectRequest(state.games.active, true));\n    } catch (e) {\n        yield call(putError, e.message);\n    }\n}\n\nexport function* handleCardSetRenameRequest(action: CardSetRenameRequest): SagaIterator {\n    try {\n        yield call(delay, 500);\n        yield call(authorizedPutRequest, '/api/cardsets/' + action.cardSetId, { name: action.newName });\n    } catch (e) {\n        yield call(putError, e.message);\n    }\n}\n\nexport function* handleCardSetSelectRequest(action: CardSetSelectRequest): SagaIterator {\n    try {\n        const resp = yield call(authorizedGetRequest, '/api/cardsets/' + action.id);\n        const parsedData = JSON.parse(resp.data.data);\n        if (!('placeholdersAllIds' in parsedData) && 'placeholders' in parsedData) {\n            parsedData.placeholdersAllIds = Object.keys(parsedData.placeholders);\n        }\n\n        if (!('version' in parsedData)) {\n            parsedData.version = 2;\n            for (const plId in parsedData.placeholders) {\n                const placeholder = parsedData.placeholders[plId];\n                placeholder.x += BLEED_WIDTH;\n                placeholder.y += BLEED_WIDTH;\n            }\n        }\n\n        yield call(loadFontsUsedInPlaceholders, parsedData);\n        yield put({\n            type: CARDSET_SELECT_SUCCESS,\n            id: resp.data.id,\n            name: resp.data.name,\n            data: parsedData,\n        });\n        yield put(gameSelectRequest(resp.data.gameId, false));\n    } catch (e) {\n        yield put({ type: CARDSET_SELECT_FAILURE });\n        yield call(putError, e.message);\n    }\n}\n\nexport function* handleCardSetUploadImage(action: CardSetUploadImage): SagaIterator {\n    let progressId = null;\n    try {\n        progressId = yield call(putProgress, `Uploading ${action.file.name}`);\n        const formData = new FormData();\n        formData.set('gameId', action.gameId);\n        formData.append('image', action.file, action.file.name);\n\n        const data = yield call(\n            authorizedPostFormDataRequest,\n            '/api/images',\n            formData,\n            (event: ProgressEvent) => action.progress(event.lengthComputable, event.loaded, event.total),\n            action.cancelToken,\n            () => {\n                action.abort();\n            },\n        );\n        if (data !== undefined) {\n            // not cancelled\n            action.load(data.imageId.toString());\n            yield put({ type: CARDSET_UPLOAD_IMAGE_SUCCESS });\n            yield call(putInfo, `${action.file.name} uploaded`);\n        }\n        yield call(hideProgress, progressId);\n    } catch (e) {\n        yield put({ type: CARDSET_UPLOAD_IMAGE_FAILURE });\n        if (progressId !== null) yield call(hideProgress, progressId);\n        yield call(putError, e.message);\n        action.error(e.message);\n    }\n}\n\nexport function* handleCardSetDeleteImage(action: CardSetDeleteImage): SagaIterator {\n    try {\n        yield call(authorizedDeleteRequest, '/api/images/' + action.imageId);\n        action.load();\n    } catch (e) {\n        action.error(e.message);\n    }\n}\n\nfunction walkChildren(node: XmlNode, color: string) {\n    if (node.type === 'element') {\n        for (let child of node.children) {\n            if (child.type === 'element')\n                if (child.name === 'path') {\n                    child.attr['fill'] = color;\n                }\n            walkChildren(child, color);\n        }\n    }\n}\n\nfunction adjustSvg(data: string, preserveAspectRatio: boolean, color?: string): string {\n    const doc = new XmlDocument(data);\n    if (!preserveAspectRatio) {\n        doc.attr['preserveAspectRatio'] = 'none';\n    }\n\n    if (color) {\n        walkChildren(doc, color);\n    }\n\n    return btoa(doc.toString({ compressed: true }));\n}\n\nexport function* handleCardSetFitChange(action: CardSetChangeFitForActivePlaceholder): SagaIterator {\n    try {\n        yield call(delay, 100);\n        const state: State = yield select();\n\n        if (state.cardsets.activePlaceholder === null) {\n            return;\n        }\n\n        for (const cardId in state.cardsets.cardsById) {\n            const image = state.cardsets.images[cardId][state.cardsets.activePlaceholder];\n            if (image.url) {\n                const imageResp = yield call(authorizedGetRequest, image.url);\n                if (imageResp.headers['content-type'] === 'image/svg+xml') {\n                    if (action.fit === 'stretch') {\n                        const svg = adjustSvg(imageResp.data, false, image.color);\n                        yield put(cardSetChangeImageBase64(cardId, state.cardsets.activePlaceholder, svg));\n                    } else if (image.color) {\n                        const svg = adjustSvg(imageResp.data, true, image.color);\n                        yield put(cardSetChangeImageBase64(cardId, state.cardsets.activePlaceholder, svg));\n                    } else {\n                        yield put(cardSetChangeImageBase64(cardId, state.cardsets.activePlaceholder, undefined));\n                    }\n                }\n            }\n        }\n    } catch (e) {\n        yield call(putError, e.message);\n    }\n}\n\nexport function* handleCardSetChangeImage(action: CardSetChangeImage): SagaIterator {\n    try {\n        yield call(delay, 100);\n        const state: State = yield select();\n\n        const placeholder = state.cardsets.placeholders[action.placeholderId];\n        const imageInfo = state.cardsets.images[action.cardId][action.placeholderId];\n        if (placeholder.type === 'image' && imageInfo.url) {\n            const imageResp = yield call(authorizedGetRequest, imageInfo.url);\n\n            if (imageResp.headers['content-type'] === 'image/svg+xml') {\n                const name = placeholder.name || placeholder.id;\n\n                for (const plId in state.cardsets.placeholders) {\n                    const pl = state.cardsets.placeholders[plId];\n\n                    if ((pl.name === name || pl.id === name) && pl.type === 'image') {\n                        if (pl.fit === 'stretch') {\n                            const svg = adjustSvg(imageResp.data, false, imageInfo.color);\n                            yield put(cardSetChangeImageBase64(action.cardId, plId, svg));\n                        } else if (imageInfo.color) {\n                            const svg = adjustSvg(imageResp.data, true, imageInfo.color);\n                            yield put(cardSetChangeImageBase64(action.cardId, plId, svg));\n                        } else {\n                            yield put(cardSetChangeImageBase64(action.cardId, plId, undefined));\n                        }\n                    }\n                }\n            }\n        }\n    } catch (e) {\n        yield call(putError, e.message);\n    }\n}\n\nfunction closeHandler(e: Event) {\n    e.preventDefault();\n    e.returnValue = true;\n}\n\nfunction preventWindowClose() {\n    window.addEventListener('beforeunload', closeHandler);\n}\n\nfunction allowWindowClose() {\n    window.removeEventListener('beforeunload', closeHandler);\n}\n\nexport function* handleCardSetChange(): SagaIterator {\n    let progressId = null;\n\n    try {\n        preventWindowClose();\n        progressId = yield call(putProgress, 'Saving Card Set');\n\n        yield call(delay, 1000);\n        const state = yield select();\n\n        yield put({\n            type: CARDSET_UPDATE_DATA_REQUEST,\n        });\n\n        const cardsetId = state.cardsets.active;\n        const data = {\n            width: state.cardsets.width,\n            height: state.cardsets.height,\n            isTwoSided: state.cardsets.isTwoSided,\n            version: state.cardsets.version,\n            cardsAllIds: state.cardsets.cardsAllIds,\n            cardsById: state.cardsets.cardsById,\n            placeholdersAllIds: state.cardsets.placeholdersAllIds,\n            placeholders: state.cardsets.placeholders,\n            texts: state.cardsets.texts,\n            images: state.cardsets.images,\n            zoom: state.cardsets.zoom,\n        };\n\n        yield call(authorizedPutRequest, '/api/cardsets/' + cardsetId, {\n            name: state.cardsets.byId[cardsetId].name,\n            data: JSON.stringify(data),\n        });\n        yield call(hideProgress, progressId);\n        yield call(putInfo, 'Card Set saved');\n        yield put({\n            type: CARDSET_UPDATE_DATA_SUCCESS,\n        });\n        allowWindowClose();\n    } catch (e) {\n        yield put({ type: CARDSET_UPDATE_DATA_FAILURE });\n        if (progressId !== null) yield call(hideProgress, progressId);\n        yield call(putError, e.message);\n        allowWindowClose();\n    }\n}\n\n// Images\nexport function* handleImageListRequest(action: ImageListRequest): SagaIterator {\n    try {\n        yield call(delay, 200);\n        const state = yield select();\n\n        const filter = encodeURIComponent(action.filter);\n        const location = encodeURIComponent(action.location);\n        const game = encodeURIComponent(state.games.active);\n        const resp = yield call(authorizedGetRequest, `/api/images?name=${filter}&location=${location}&game=${game}`);\n        const images = resp.data.images;\n        yield put({\n            type: IMAGE_LIST_SUCCESS,\n            images,\n        });\n    } catch (e) {\n        yield put({ type: IMAGE_LIST_FAILURE });\n        yield call(putError, e.message);\n    }\n}\n\n// All\nexport function* rootSaga(): SagaIterator {\n    yield all([\n        takeEvery(MESSAGE_DISPLAY, handleMessageDisplay),\n        takeLatest(LOGIN_REQUEST, handleLoginRequest),\n        takeLatest(LOGIN_SUCCESS, handleLoginSuccess),\n        takeLatest(LOGOUT_REQUEST, handleLogoutRequest),\n        takeLatest(SIGNUP_REQUEST, handleSignupRequest),\n        takeLatest(GAME_CREATE_REQUEST, handleGameCreateRequest),\n        takeLatest(GAME_DELETE_REQUEST, handleGameDeleteRequest),\n        takeLatest(GAME_RENAME_REQUEST, handleGameRenameRequest),\n        takeLatest(GAME_LIST_REQUEST, handleGameListRequest),\n        takeLatest(GAME_SELECT_REQUEST, handleGameSelectRequest),\n        takeLatest(GAME_CREATE_PDF_REQUEST, handleGameCreatePdfRequest),\n        takeLatest(CARDSET_CREATE_REQUEST, handleCardSetCreateRequest),\n        takeLatest(CARDSET_DELETE_REQUEST, handleCardSetDeleteRequest),\n        takeLatest(CARDSET_RENAME_REQUEST, handleCardSetRenameRequest),\n        takeLatest(CARDSET_SELECT_REQUEST, handleCardSetSelectRequest),\n        takeEvery(CARDSET_UPLOAD_IMAGE, handleCardSetUploadImage),\n        takeEvery(CARDSET_DELETE_IMAGE, handleCardSetDeleteImage),\n        takeEvery(CARDSET_CHANGE_FIT_FOR_ACTIVE_PLACEHOLDER, handleCardSetFitChange),\n        takeEvery(CARDSET_CHANGE_IMAGE, handleCardSetChangeImage),\n\n        takeLatest(CARDSET_CREATE_CARD, handleCardSetChange),\n        takeLatest(CARDSET_CLONE_CARD, handleCardSetChange),\n        takeLatest(CARDSET_REMOVE_CARD, handleCardSetChange),\n        takeLatest(CARDSET_UPDATE_CARD_COUNT, handleCardSetChange),\n        takeLatest(CARDSET_ADD_TEXT_PLACEHOLDER, handleCardSetChange),\n        takeLatest(CARDSET_ADD_IMAGE_PLACEHOLDER, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_PLACEHOLDER_NAME, handleCardSetChange),\n        takeLatest(CARDSET_REMOVE_ACTIVE_PLACEHOLDER, handleCardSetChange),\n        takeLatest(CARDSET_RAISE_ACTIVE_PLACEHOLDER_TO_TOP, handleCardSetChange),\n        takeLatest(CARDSET_LOWER_ACTIVE_PLACEHOLDER_TO_BOTTOM, handleCardSetChange),\n        takeLatest(CARDSET_LOCK_ACTIVE_PLACEHOLDER, handleCardSetChange),\n        takeLatest(CARDSET_UNLOCK_ACTIVE_PLACEHOLDER, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_FIT_FOR_ACTIVE_PLACEHOLDER, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_WIDTH, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_HEIGHT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_IS_TWO_SIDED, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_PLACEHOLDER_POSITION, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_PLACEHOLDER_SIZE, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_PLACEHOLDER_ANGLE, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_ALIGN, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_COLOR, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_VARIANT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY_AND_VARIANT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_SIZE, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_LINE_HEIGHT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_TEXT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_IMAGE, handleCardSetChange),\n        takeLatest(CARDSET_SET_ZOOM, handleCardSetChange),\n        takeLatest(CARDSET_IMPORT_DATA, handleCardSetChange),\n\n        takeLatest(IMAGE_LIST_REQUEST, handleImageListRequest),\n\n        takeLatest(INIT_REQUEST, handleInitRequest),\n    ]);\n}\n","import { combineReducers } from 'redux';\nimport shortid from 'shortid';\n\nimport {\n    CARDSET_ADD_IMAGE_PLACEHOLDER,\n    CARDSET_ADD_TEXT_PLACEHOLDER,\n    CARDSET_CHANGE_ACTIVE_PLACEHOLDER_NAME,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_ALIGN,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_COLOR,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY_AND_VARIANT,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_SIZE,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_VARIANT,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_LINE_HEIGHT,\n    CARDSET_CHANGE_FIT_FOR_ACTIVE_PLACEHOLDER,\n    CARDSET_CHANGE_HEIGHT,\n    CARDSET_CHANGE_IMAGE,\n    CARDSET_CHANGE_IMAGE_BASE64,\n    CARDSET_CHANGE_IS_TWO_SIDED,\n    CARDSET_CHANGE_PLACEHOLDER_ANGLE,\n    CARDSET_CHANGE_PLACEHOLDER_POSITION,\n    CARDSET_CHANGE_PLACEHOLDER_SIZE,\n    CARDSET_CHANGE_TEXT,\n    CARDSET_CHANGE_WIDTH,\n    CARDSET_CLONE_CARD,\n    CARDSET_CREATE_CARD,\n    CARDSET_CREATE_FAILURE,\n    CARDSET_CREATE_REQUEST,\n    CARDSET_CREATE_SUCCESS,\n    CARDSET_IMPORT_DATA,\n    CARDSET_LIST_FAILURE,\n    CARDSET_LIST_REQUEST,\n    CARDSET_LIST_RESET,\n    CARDSET_LIST_SUCCESS,\n    CARDSET_LOCK_ACTIVE_PLACEHOLDER,\n    CARDSET_LOWER_ACTIVE_PLACEHOLDER_TO_BOTTOM,\n    CARDSET_RAISE_ACTIVE_PLACEHOLDER_TO_TOP,\n    CARDSET_REMOVE_ACTIVE_PLACEHOLDER,\n    CARDSET_REMOVE_CARD,\n    CARDSET_RENAME_REQUEST,\n    CARDSET_SELECT_FAILURE,\n    CARDSET_SELECT_REQUEST,\n    CARDSET_SELECT_SUCCESS,\n    CARDSET_SET_ACTIVE_CARD_AND_PLACEHOLDER,\n    CARDSET_SET_SIDEBAR_STATE,\n    CARDSET_SET_ZOOM,\n    CARDSET_UNLOCK_ACTIVE_PLACEHOLDER,\n    CARDSET_UPDATE_CARD_COUNT,\n    CARDSET_UPDATE_DATA_FAILURE,\n    CARDSET_UPDATE_DATA_REQUEST,\n    CARDSET_UPDATE_DATA_SUCCESS,\n    CardSetAction,\n    CardSetsCollection,\n    CardsCollection,\n    GAME_CREATE_FAILURE,\n    GAME_CREATE_PDF_FAILURE,\n    GAME_CREATE_PDF_REQUEST,\n    GAME_CREATE_PDF_SUCCESS,\n    GAME_CREATE_REQUEST,\n    GAME_CREATE_SUCCESS,\n    GAME_LIST_FAILURE,\n    GAME_LIST_REQUEST,\n    GAME_LIST_RESET,\n    GAME_LIST_SUCCESS,\n    GAME_RENAME_REQUEST,\n    GAME_SELECT_FAILURE,\n    GAME_SELECT_REQUEST,\n    GAME_SELECT_SUCCESS,\n    GameAction,\n    GamesCollection,\n    IMAGE_LIST_FAILURE,\n    IMAGE_LIST_REQUEST,\n    IMAGE_LIST_SUCCESS,\n    IdsArray,\n    ImageArray,\n    ImageListAction,\n    ImagePlaceholderType,\n    LOGIN_FAILURE,\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGOUT_SUCCESS,\n    LoginAction,\n    MESSAGE_DISPLAY,\n    MESSAGE_HIDE,\n    MessageAction,\n    MessageType,\n    PlaceholdersCollection,\n    PlaceholdersImageInfoByCardCollection,\n    PlaceholdersImageInfoCollection,\n    PlaceholdersTextInfoByCardCollection,\n    PlaceholdersTextInfoCollection,\n    SIGNUP_FAILURE,\n    SIGNUP_REQUEST,\n    SIGNUP_SUCCESS,\n    SidebarState,\n    SignUpAction,\n    TextPlaceholderType,\n} from './actions';\nimport {\n    CURRENT_CARDSET_VERSION,\n    DEFAULT_FONT,\n    DEFAULT_FONT_SIZE,\n    DEFAULT_FONT_VARIANT,\n    DEFAULT_LINE_HEIGHT,\n} from './constants';\n\nexport const ACTIVITY_CREATING = 0x1;\nexport const ACTIVITY_LISTING = 0x2;\nexport const ACTIVITY_SELECTING = 0x4;\nexport const ACTIVITY_CREATING_PDF = 0x8;\nexport const ACTIVITY_UPDATING = 0x10;\n\nexport interface MessageState {\n    messages: MessageType[];\n}\n\nexport const DefaultMessageState: MessageState = {\n    messages: [],\n};\n\nexport interface AuthState {\n    isAuthenticated: boolean;\n    user: string;\n}\n\nexport const DefaultAuthState: AuthState = {\n    isAuthenticated: false,\n    user: '',\n};\n\nexport interface SignUpState {\n    signingup: boolean;\n}\n\nexport const DefaultSignUpState: SignUpState = {\n    signingup: false,\n};\n\nexport interface GameState {\n    byId: GamesCollection;\n    allIds: IdsArray;\n    activity: number;\n    active: string | null;\n}\n\nexport const DefaultGameState: GameState = {\n    byId: {},\n    allIds: [],\n    activity: 0,\n    active: null,\n};\n\nexport interface TextSettings {\n    align: string;\n    color: string;\n    fontFamily: string;\n    fontVariant: string;\n    fontSize: number;\n    lineHeight?: number;\n}\n\nexport interface CardSetState {\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    version: number;\n    byId: CardSetsCollection;\n    allIds: IdsArray;\n    activity: number;\n    active: string | null;\n    cardsAllIds: IdsArray;\n    cardsById: CardsCollection;\n    activeCard: string | null;\n    isBackActive: boolean;\n    activePlaceholder: string | null;\n    placeholders: PlaceholdersCollection;\n    placeholdersAllIds: IdsArray;\n    texts: PlaceholdersTextInfoByCardCollection;\n    images: PlaceholdersImageInfoByCardCollection;\n    textSettings: TextSettings;\n    activeSidebar: SidebarState | null;\n    zoom: number;\n}\n\nexport const DefaultCardSetState: CardSetState = {\n    width: 63.5,\n    height: 88.9,\n    isTwoSided: false,\n    version: CURRENT_CARDSET_VERSION,\n    byId: {},\n    allIds: [],\n    activity: 0,\n    active: null,\n    placeholders: {},\n    placeholdersAllIds: [],\n    cardsById: {},\n    cardsAllIds: [],\n    activeCard: null,\n    isBackActive: false,\n    activePlaceholder: null,\n    texts: {},\n    images: {},\n    textSettings: {\n        align: 'left',\n        color: '#000000',\n        fontFamily: DEFAULT_FONT,\n        fontVariant: DEFAULT_FONT_VARIANT,\n        fontSize: DEFAULT_FONT_SIZE,\n        lineHeight: DEFAULT_LINE_HEIGHT,\n    },\n    activeSidebar: null,\n    zoom: 1,\n};\n\nexport interface ImageState {\n    activity: number;\n    filter: string;\n    images: ImageArray;\n}\n\nexport const DefaultImageState: ImageState = {\n    activity: 0,\n    filter: '',\n    images: [],\n};\n\nexport interface State {\n    message: MessageState;\n    auth: AuthState;\n    signup: SignUpState;\n    games: GameState;\n    cardsets: CardSetState;\n    images: ImageState;\n}\n\nexport const DefaultState: State = {\n    message: DefaultMessageState,\n    auth: DefaultAuthState,\n    signup: DefaultSignUpState,\n    games: DefaultGameState,\n    cardsets: DefaultCardSetState,\n    images: DefaultImageState,\n};\n\nexport function message(state: MessageState = DefaultMessageState, action: MessageAction): MessageState {\n    switch (action.type) {\n        case MESSAGE_DISPLAY:\n            const found = state.messages.find(m => m.id === action.message.id);\n            if (found) return state;\n\n            return {\n                ...state,\n                messages: state.messages.concat(action.message),\n            };\n        case MESSAGE_HIDE:\n            return Object.assign({}, state, {\n                messages: state.messages.filter(m => m.id !== action.messageId),\n            });\n        default:\n            return state;\n    }\n}\n\nexport function auth(state: AuthState = DefaultAuthState, action: LoginAction): AuthState {\n    switch (action.type) {\n        case LOGIN_REQUEST:\n            return Object.assign({}, state, {\n                isAuthenticated: false,\n                user: action.creds.username,\n            });\n        case LOGIN_SUCCESS:\n            return Object.assign({}, state, {\n                isAuthenticated: true,\n            });\n        case LOGIN_FAILURE:\n            return Object.assign({}, state, {\n                isAuthenticated: false,\n            });\n        case LOGOUT_SUCCESS:\n            return Object.assign({}, state, {\n                isAuthenticated: false,\n            });\n        default:\n            return state;\n    }\n}\n\nexport function signup(state: SignUpState = DefaultSignUpState, action: SignUpAction): SignUpState {\n    switch (action.type) {\n        case SIGNUP_REQUEST:\n            return Object.assign({}, state, {\n                signingup: true,\n            });\n        case SIGNUP_SUCCESS:\n            return Object.assign({}, state, {\n                signingup: false,\n            });\n        case SIGNUP_FAILURE:\n            return Object.assign({}, state, {\n                signingup: false,\n            });\n        default:\n            return state;\n    }\n}\n\nexport function games(state: GameState = DefaultGameState, action: GameAction): GameState {\n    switch (action.type) {\n        case GAME_CREATE_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_CREATING,\n            });\n        case GAME_CREATE_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING,\n            });\n        case GAME_CREATE_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING,\n            });\n        case GAME_RENAME_REQUEST:\n            const game = state.byId[action.gameId];\n\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    [game.id]: {\n                        ...game,\n                        name: action.newName,\n                    },\n                },\n            };\n        case GAME_LIST_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_LISTING,\n            });\n        case GAME_LIST_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_LISTING,\n                byId: action.byId,\n                allIds: action.allIds,\n            });\n        case GAME_LIST_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_LISTING,\n            });\n        case GAME_LIST_RESET:\n            return Object.assign({}, state, {\n                activity: 0,\n                byId: {},\n                allIds: [],\n            });\n        case GAME_SELECT_REQUEST:\n            return Object.assign({}, state, {\n                activity: ACTIVITY_SELECTING,\n            });\n        case GAME_SELECT_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_SELECTING,\n                active: action.id,\n            });\n        case GAME_SELECT_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_SELECTING,\n            });\n        case GAME_CREATE_PDF_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_CREATING_PDF,\n            });\n        case GAME_CREATE_PDF_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING_PDF,\n            });\n        case GAME_CREATE_PDF_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING_PDF,\n            });\n        default:\n            return state;\n    }\n}\n\nexport function cardsets(state: CardSetState = DefaultCardSetState, action: CardSetAction): CardSetState {\n    switch (action.type) {\n        case CARDSET_CREATE_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_CREATING,\n            });\n        case CARDSET_CREATE_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING,\n            });\n        case CARDSET_CREATE_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING,\n            });\n        case CARDSET_RENAME_REQUEST:\n            const cardset = state.byId[action.cardSetId];\n\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    [cardset.id]: {\n                        ...cardset,\n                        name: action.newName,\n                    },\n                },\n            };\n        case CARDSET_UPDATE_DATA_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_UPDATING,\n            });\n        case CARDSET_UPDATE_DATA_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_UPDATING,\n            });\n        case CARDSET_UPDATE_DATA_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_UPDATING,\n            });\n        case CARDSET_LIST_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_LISTING,\n            });\n        case CARDSET_LIST_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_LISTING,\n                byId: action.byId,\n                allIds: action.allIds,\n            });\n        case CARDSET_LIST_RESET:\n            return Object.assign({}, state, {\n                activity: 0,\n                byId: {},\n                allIds: [],\n            });\n        case CARDSET_LIST_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_LISTING,\n            });\n        case CARDSET_SELECT_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_SELECTING,\n            });\n        case CARDSET_SELECT_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_SELECTING,\n                active: action.id,\n                byId: Object.assign({}, state.byId, {\n                    [action.id]: {\n                        id: action.id,\n                        name: action.name,\n                    },\n                }),\n                width: action.data.width || 63.5,\n                height: action.data.height || 88.9,\n                isTwoSided: action.data.isTwoSided || false,\n                version: action.data.version,\n                cardsAllIds: action.data.cardsAllIds || [],\n                cardsById: action.data.cardsById || {},\n                placeholders: action.data.placeholders || {},\n                placeholdersAllIds: action.data.placeholdersAllIds || [],\n                texts: action.data.texts || {},\n                images: action.data.images || {},\n                activeCard: null,\n                activePlaceholder: null,\n                isBackActive: false,\n                zoom: action.data.zoom || 1,\n            });\n        case CARDSET_SELECT_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_SELECTING,\n            });\n        case CARDSET_CREATE_CARD:\n            return {\n                ...state,\n                cardsById: {\n                    ...state.cardsById,\n                    [action.card.id]: action.card,\n                },\n                cardsAllIds: state.cardsAllIds ? state.cardsAllIds.concat(action.card.id) : [action.card.id],\n            };\n        case CARDSET_CLONE_CARD: {\n            let newCard = { ...action.card, id: shortid.generate() };\n\n            const index = state.cardsAllIds.indexOf(action.card.id) + 1;\n            const cardsAllIds = [...state.cardsAllIds.slice(0, index), newCard.id, ...state.cardsAllIds.slice(index)];\n\n            return {\n                ...state,\n                cardsById: {\n                    ...state.cardsById,\n                    [newCard.id]: newCard,\n                },\n                cardsAllIds,\n                texts: {\n                    ...state.texts,\n                    [newCard.id]: {\n                        ...state.texts[action.card.id],\n                    },\n                },\n                images: {\n                    ...state.images,\n                    [newCard.id]: {\n                        ...state.images[action.card.id],\n                    },\n                },\n            };\n        }\n        case CARDSET_REMOVE_CARD: {\n            const cardId = action.card.id;\n            let cardsById = { ...state.cardsById };\n            delete cardsById[cardId];\n\n            let texts = { ...state.texts };\n            if (cardId in texts) {\n                delete texts[cardId];\n            }\n\n            let images = { ...state.images };\n            if (cardId in images) {\n                delete images[cardId];\n            }\n\n            let activeCard = state.activeCard === cardId ? null : state.activeCard;\n\n            const cardsAllIds = state.cardsAllIds.filter(id => id !== cardId);\n\n            let placeholders = state.placeholders;\n            let placeholdersAllIds = state.placeholdersAllIds;\n            if (cardsAllIds.length === 0) {\n                placeholders = {};\n                placeholdersAllIds = [];\n            }\n\n            return {\n                ...state,\n                cardsById,\n                cardsAllIds,\n                placeholders,\n                placeholdersAllIds,\n                texts,\n                images,\n                activeCard,\n            };\n        }\n        case CARDSET_UPDATE_CARD_COUNT: {\n            const cardId = action.card.id;\n            let card = { ...state.cardsById[cardId] };\n            card.count = action.count;\n\n            return {\n                ...state,\n                cardsById: {\n                    ...state.cardsById,\n                    [cardId]: card,\n                },\n            };\n        }\n        case CARDSET_ADD_TEXT_PLACEHOLDER: {\n            let textSettings = { ...state.textSettings };\n            const id = shortid.generate();\n            const textPlaceholder: TextPlaceholderType = {\n                id,\n                type: 'text',\n                x: 5,\n                y: 5,\n                width: 20,\n                height: 10,\n                angle: 0,\n                align: textSettings.align,\n                color: textSettings.color,\n                fontFamily: textSettings.fontFamily,\n                fontVariant: textSettings.fontVariant,\n                fontSize: textSettings.fontSize,\n                lineHeight: textSettings.lineHeight || DEFAULT_LINE_HEIGHT,\n                isOnBack: state.isBackActive,\n            };\n\n            return {\n                ...state,\n                placeholders: {\n                    ...state.placeholders,\n                    [id]: textPlaceholder,\n                },\n                placeholdersAllIds: [...state.placeholdersAllIds, id],\n            };\n        }\n        case CARDSET_ADD_IMAGE_PLACEHOLDER: {\n            const id = shortid.generate();\n            const imagePlaceholder: ImagePlaceholderType = {\n                id,\n                type: 'image',\n                x: 5,\n                y: 5,\n                width: 20,\n                height: 20,\n                angle: 0,\n                isOnBack: state.isBackActive,\n            };\n\n            return {\n                ...state,\n                placeholders: {\n                    ...state.placeholders,\n                    [id]: imagePlaceholder,\n                },\n                placeholdersAllIds: [...state.placeholdersAllIds, id],\n            };\n        }\n        case CARDSET_CHANGE_ACTIVE_PLACEHOLDER_NAME: {\n            if (state.activePlaceholder !== null) {\n                let placeholders = { ...state.placeholders };\n                placeholders[state.activePlaceholder] = {\n                    ...placeholders[state.activePlaceholder],\n                    name: action.name,\n                };\n\n                return {\n                    ...state,\n                    placeholders,\n                };\n            }\n\n            return state;\n        }\n\n        case CARDSET_REMOVE_ACTIVE_PLACEHOLDER: {\n            const placeholderId = state.activePlaceholder;\n            if (placeholderId !== undefined && placeholderId !== null) {\n                const activePlaceholder = state.placeholders[placeholderId];\n                if (activePlaceholder.locked) {\n                    return state;\n                }\n\n                let placeholders = { ...state.placeholders };\n                let placeholdersAllIds = [...state.placeholdersAllIds];\n                if (placeholderId in placeholders) {\n                    delete placeholders[placeholderId];\n                }\n                let placeholderIndex = placeholdersAllIds.indexOf(placeholderId);\n                if (placeholderIndex !== -1) {\n                    placeholdersAllIds.splice(placeholderIndex, 1);\n                }\n\n                let texts = { ...state.texts };\n                for (const cardId in texts) {\n                    if (placeholderId in texts[cardId]) {\n                        let placeholderTexts = { ...texts[cardId] };\n                        delete placeholderTexts[placeholderId];\n                        texts[cardId] = placeholderTexts;\n                    }\n                }\n\n                let images = { ...state.images };\n                for (const cardId in images) {\n                    if (placeholderId in images[cardId]) {\n                        let placeholderImages = { ...images[cardId] };\n                        delete placeholderImages[placeholderId];\n                        images[cardId] = placeholderImages;\n                    }\n                }\n\n                return {\n                    ...state,\n                    placeholders,\n                    placeholdersAllIds,\n                    texts,\n                    images,\n                    activePlaceholder: null,\n                };\n            }\n            return state;\n        }\n        case CARDSET_RAISE_ACTIVE_PLACEHOLDER_TO_TOP: {\n            let placeholdersAllIds = [...state.placeholdersAllIds];\n\n            if (state.activePlaceholder !== null) {\n                let index = placeholdersAllIds.indexOf(state.activePlaceholder);\n                if (index !== -1) {\n                    placeholdersAllIds.push(placeholdersAllIds.splice(index, 1)[0]);\n                }\n            }\n\n            return {\n                ...state,\n                placeholdersAllIds,\n            };\n        }\n        case CARDSET_LOWER_ACTIVE_PLACEHOLDER_TO_BOTTOM: {\n            let placeholdersAllIds = [...state.placeholdersAllIds];\n\n            if (state.activePlaceholder !== null) {\n                let index = placeholdersAllIds.indexOf(state.activePlaceholder);\n                if (index !== -1) {\n                    placeholdersAllIds.unshift(placeholdersAllIds.splice(index, 1)[0]);\n                }\n            }\n\n            return {\n                ...state,\n                placeholdersAllIds,\n            };\n        }\n        case CARDSET_LOCK_ACTIVE_PLACEHOLDER: {\n            if (state.activePlaceholder) {\n                const placeholder = {\n                    ...state.placeholders[state.activePlaceholder],\n                    locked: true,\n                };\n\n                return {\n                    ...state,\n                    placeholders: {\n                        ...state.placeholders,\n                        [state.activePlaceholder]: placeholder,\n                    },\n                };\n            }\n\n            return state;\n        }\n        case CARDSET_UNLOCK_ACTIVE_PLACEHOLDER: {\n            if (state.activePlaceholder) {\n                const placeholder = {\n                    ...state.placeholders[state.activePlaceholder],\n                    locked: false,\n                };\n\n                return {\n                    ...state,\n                    placeholders: {\n                        ...state.placeholders,\n                        [state.activePlaceholder]: placeholder,\n                    },\n                };\n            }\n\n            return state;\n        }\n        case CARDSET_CHANGE_FIT_FOR_ACTIVE_PLACEHOLDER: {\n            if (state.activePlaceholder) {\n                const placeholder = {\n                    ...state.placeholders[state.activePlaceholder],\n                    fit: action.fit,\n                };\n\n                return {\n                    ...state,\n                    placeholders: {\n                        ...state.placeholders,\n                        [state.activePlaceholder]: placeholder,\n                    },\n                };\n            }\n\n            return state;\n        }\n        case CARDSET_CHANGE_WIDTH: {\n            return {\n                ...state,\n                width: action.width,\n            };\n        }\n        case CARDSET_CHANGE_HEIGHT: {\n            return {\n                ...state,\n                height: action.height,\n            };\n        }\n        case CARDSET_CHANGE_IS_TWO_SIDED: {\n            return {\n                ...state,\n                isTwoSided: action.isTwoSided,\n            };\n        }\n        case CARDSET_CHANGE_PLACEHOLDER_POSITION: {\n            const placeholder = {\n                ...state.placeholders[action.placeholder.id],\n                x: action.x,\n                y: action.y,\n            };\n\n            return {\n                ...state,\n                placeholders: {\n                    ...state.placeholders,\n                    [action.placeholder.id]: placeholder,\n                },\n            };\n        }\n        case CARDSET_CHANGE_PLACEHOLDER_SIZE: {\n            const placeholder = {\n                ...state.placeholders[action.placeholder.id],\n                width: action.width,\n                height: action.height,\n            };\n\n            return {\n                ...state,\n                placeholders: {\n                    ...state.placeholders,\n                    [action.placeholder.id]: placeholder,\n                },\n            };\n        }\n        case CARDSET_CHANGE_PLACEHOLDER_ANGLE: {\n            const placeholder = {\n                ...state.placeholders[action.placeholder.id],\n                angle: action.angle,\n            };\n\n            return {\n                ...state,\n                placeholders: {\n                    ...state.placeholders,\n                    [action.placeholder.id]: placeholder,\n                },\n            };\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_ALIGN: {\n            let textSettings = {\n                ...state.textSettings,\n                align: action.align,\n            };\n\n            if (state.activePlaceholder) {\n                const textPlaceholder = {\n                    ...state.placeholders[state.activePlaceholder],\n                    align: action.align,\n                };\n\n                return {\n                    ...state,\n                    placeholders: {\n                        ...state.placeholders,\n                        [state.activePlaceholder]: textPlaceholder,\n                    },\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_COLOR: {\n            let textSettings = {\n                ...state.textSettings,\n                color: action.color,\n            };\n\n            if (state.activePlaceholder) {\n                const textPlaceholder = {\n                    ...state.placeholders[state.activePlaceholder],\n                    color: action.color,\n                };\n\n                return {\n                    ...state,\n                    placeholders: {\n                        ...state.placeholders,\n                        [state.activePlaceholder]: textPlaceholder,\n                    },\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY: {\n            let textSettings = {\n                ...state.textSettings,\n                color: action.fontFamily,\n            };\n\n            if (state.activePlaceholder) {\n                const textPlaceholder = {\n                    ...state.placeholders[state.activePlaceholder],\n                    fontFamily: action.fontFamily,\n                };\n\n                return {\n                    ...state,\n                    placeholders: {\n                        ...state.placeholders,\n                        [state.activePlaceholder]: textPlaceholder,\n                    },\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_VARIANT: {\n            let textSettings = {\n                ...state.textSettings,\n                color: action.fontVariant,\n            };\n\n            if (state.activePlaceholder) {\n                const textPlaceholder = {\n                    ...state.placeholders[state.activePlaceholder],\n                    fontVariant: action.fontVariant,\n                };\n\n                return {\n                    ...state,\n                    placeholders: {\n                        ...state.placeholders,\n                        [state.activePlaceholder]: textPlaceholder,\n                    },\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY_AND_VARIANT: {\n            let textSettings = {\n                ...state.textSettings,\n                fontFamily: action.fontFamily,\n                fontVariant: action.fontVariant,\n            };\n\n            if (state.activePlaceholder) {\n                const textPlaceholder = {\n                    ...state.placeholders[state.activePlaceholder],\n                    fontFamily: action.fontFamily,\n                    fontVariant: action.fontVariant,\n                };\n\n                return {\n                    ...state,\n                    placeholders: {\n                        ...state.placeholders,\n                        [state.activePlaceholder]: textPlaceholder,\n                    },\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_SIZE: {\n            let textSettings = {\n                ...state.textSettings,\n                fontSize: action.fontSize,\n            };\n\n            if (state.activePlaceholder) {\n                const textPlaceholder = {\n                    ...state.placeholders[state.activePlaceholder],\n                    fontSize: action.fontSize,\n                };\n\n                return {\n                    ...state,\n                    placeholders: {\n                        ...state.placeholders,\n                        [state.activePlaceholder]: textPlaceholder,\n                    },\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_LINE_HEIGHT: {\n            let textSettings = {\n                ...state.textSettings,\n                lineHeight: action.lineHeight,\n            };\n\n            if (state.activePlaceholder) {\n                const textPlaceholder = {\n                    ...state.placeholders[state.activePlaceholder],\n                    lineHeight: action.lineHeight,\n                };\n\n                return {\n                    ...state,\n                    placeholders: {\n                        ...state.placeholders,\n                        [state.activePlaceholder]: textPlaceholder,\n                    },\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_TEXT: {\n            let placeholdersByCard: PlaceholdersTextInfoCollection = {};\n            if (state.texts && action.cardId in state.texts) {\n                placeholdersByCard = { ...state.texts[action.cardId] };\n            }\n\n            const placeholder = state.placeholders[action.placeholderId];\n            const name = placeholder.name || placeholder.id;\n\n            for (const plId in state.placeholders) {\n                const pl = state.placeholders[plId];\n\n                if ((pl.name === name || pl.id === name) && pl.type === 'text') {\n                    placeholdersByCard[plId] = action.textInfo;\n                }\n            }\n\n            return {\n                ...state,\n                texts: {\n                    ...state.texts,\n                    [action.cardId]: placeholdersByCard,\n                },\n            };\n        }\n        case CARDSET_CHANGE_IMAGE: {\n            let placeholdersByCard: PlaceholdersImageInfoCollection = {};\n            if (state.images && action.cardId in state.images) {\n                placeholdersByCard = { ...state.images[action.cardId] };\n            }\n\n            const placeholder = state.placeholders[action.placeholderId];\n            const name = placeholder.name || placeholder.id;\n\n            for (const plId in state.placeholders) {\n                const pl = state.placeholders[plId];\n\n                if ((pl.name === name || pl.id === name) && pl.type === 'image') {\n                    placeholdersByCard[plId] = {\n                        ...placeholdersByCard[plId],\n                        ...action.imageInfo,\n                    };\n                }\n            }\n\n            return {\n                ...state,\n                images: {\n                    ...state.images,\n                    [action.cardId]: placeholdersByCard,\n                },\n            };\n        }\n\n        case CARDSET_CHANGE_IMAGE_BASE64: {\n            let placeholdersByCard: PlaceholdersImageInfoCollection = {};\n            if (state.images && action.cardId in state.images) {\n                placeholdersByCard = { ...state.images[action.cardId] };\n            }\n\n            placeholdersByCard[action.placeholderId] = {\n                ...placeholdersByCard[action.placeholderId],\n                base64: action.base64,\n            };\n\n            return {\n                ...state,\n                images: {\n                    ...state.images,\n                    [action.cardId]: placeholdersByCard,\n                },\n            };\n        }\n        case CARDSET_SET_ACTIVE_CARD_AND_PLACEHOLDER: {\n            let textSettings = { ...state.textSettings };\n            let activeSidebar = state.activeSidebar;\n\n            if (activeSidebar !== SidebarState.Measurements && action.cardId !== null) {\n                activeSidebar = SidebarState.Details;\n            }\n\n            if (action.placeholderId !== null) {\n                const placeholder = state.placeholders[action.placeholderId];\n                if (placeholder.type === 'text') {\n                    textSettings.align = placeholder.align;\n                    textSettings.color = placeholder.color;\n                    textSettings.fontFamily = placeholder.fontFamily;\n                    textSettings.fontVariant = placeholder.fontVariant;\n                    textSettings.fontSize = placeholder.fontSize;\n                    textSettings.lineHeight = placeholder.lineHeight;\n\n                    if (activeSidebar !== SidebarState.Measurements) {\n                        activeSidebar = SidebarState.Text;\n                    }\n                } else {\n                    if (activeSidebar !== SidebarState.Measurements) {\n                        activeSidebar = SidebarState.Image;\n                    }\n                }\n            }\n\n            return {\n                ...state,\n                activeCard: action.cardId,\n                isBackActive: action.isBackActive,\n                activePlaceholder: action.placeholderId,\n                textSettings,\n                activeSidebar,\n            };\n        }\n\n        case CARDSET_SET_SIDEBAR_STATE: {\n            return {\n                ...state,\n                activeSidebar: action.sidebarState,\n            };\n        }\n        case CARDSET_SET_ZOOM: {\n            return {\n                ...state,\n                zoom: action.zoom,\n            };\n        }\n        case CARDSET_IMPORT_DATA: {\n            return {\n                ...state,\n                ...action.data,\n            };\n        }\n        default:\n            return state;\n    }\n}\n\nexport function images(state: ImageState = DefaultImageState, action: ImageListAction): ImageState {\n    switch (action.type) {\n        case IMAGE_LIST_REQUEST:\n            return Object.assign({}, state, {\n                filter: action.filter,\n                activity: state.activity | ACTIVITY_LISTING,\n            });\n        case IMAGE_LIST_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_LISTING,\n                images: action.images,\n            });\n        case IMAGE_LIST_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_LISTING,\n            });\n        default:\n            return state;\n    }\n}\n\nconst reducers = combineReducers({\n    message,\n    auth,\n    signup,\n    games,\n    cardsets,\n    images,\n});\n\nexport default reducers;\n","import { Ghost, Browser } from 'react-kawaii';\nimport React, { Component } from 'react';\n\nexport enum Character {\n    Ghost,\n    Browser,\n}\ninterface Props {\n    character: Character;\n    mood?: string;\n}\n\nexport default class KawaiiMessage extends Component<Props> {\n    render() {\n        const { character, mood } = this.props;\n\n        return (\n            <div\n                style={{\n                    marginTop: '1em',\n                    marginBottom: '1em',\n                    padding: '1em',\n                    borderRadius: '1em',\n                    backgroundColor: 'var(--color-2)',\n                    display: 'grid',\n                    grid: 'auto-flow / minmax(120px, auto) 1fr',\n                }}\n            >\n                {character === Character.Ghost && <Ghost size={120} mood={mood || 'blissful'} color=\"#faebef\" />}\n                {character === Character.Browser && <Browser size={120} mood={mood || 'blissful'} color=\"#faebef\" />}\n                <div style={{ marginLeft: '1em' }}>{this.props.children}</div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nexport default class AboutPage extends Component {\n    render() {\n        return (\n            <div>\n                <h2>About</h2>\n                <p>\n                    \"Card-a-mon\" is card game development tool. At the moment it is project of single person (me) with a\n                    vision. My aim is to create affordable and practical tool to develop card games from A (prototyping)\n                    to Z (printing). If you have ideas, suggestions, proposals, comments and etc. then you can contact\n                    me by e-mail <a href=\"mailto:dalius@ffff.lt\">dalius@ffff.lt</a>.\n                </p>\n                <h2>Credits</h2>\n                This project is available because of number amazing open source projects. Some of them:\n                <ul>\n                    <li>\n                        <a href=\"https://reactjs.org/\">React</a> and all the ecosystem around it.\n                    </li>\n                    <li>\n                        <a href=\"https://fonts.google.com/\">Google Fonts</a>\n                    </li>\n                    <li>\n                        <a href=\"https://github.com/game-icons/icons\">Game icons</a>\n                    </li>\n                    <li>\n                        <a href=\"http://pdfkit.org/\">PDFKit</a>\n                    </li>\n                </ul>\n                <p>... and many more.</p>\n            </div>\n        );\n    }\n}\n","import { connect } from 'react-redux';\nimport React from 'react';\n\nimport { Dispatch } from '../actions';\nimport { State } from '../reducers';\nimport resize from './resize.svg';\nimport rotate from './rotate.svg';\nimport style from './FieldController.module.css';\n\ninterface OwnProps {\n    cardId: string;\n    placeholderId: string;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    angle: number;\n    children: React.ReactNode;\n    onDrag: (x: number, y: number) => void;\n    onResize: (width: number, height: number) => void;\n    onRotate: (angle: number) => void;\n    cardWidth: number;\n    cardHeight: number;\n}\n\ninterface StateProps {\n    isActive: boolean;\n    isActivePlaceholder: boolean;\n    isLocked: boolean;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass FieldController extends React.Component<Props> {\n    moving: boolean;\n    cDiv: React.RefObject<HTMLDivElement>;\n    resizeDiv: React.RefObject<HTMLImageElement>;\n    rotateDiv: React.RefObject<HTMLImageElement>;\n    relX: number;\n    relY: number;\n    startX: number;\n    startY: number;\n    originalW: number;\n    originalH: number;\n    rotatedPointX: number;\n    rotatedPointY: number;\n    centerX: number;\n    centerY: number;\n    originalAngle: number;\n    currentAngle: number;\n    activatedUsingTouch: boolean;\n    originalBodyCursor: string | null;\n\n    constructor(props: Props) {\n        super(props);\n        this.cDiv = React.createRef();\n        this.resizeDiv = React.createRef();\n        this.rotateDiv = React.createRef();\n        this.currentAngle = props.angle;\n        this.moving = false;\n        this.relX = 0;\n        this.relY = 0;\n        this.startX = 0;\n        this.startY = 0;\n        this.originalW = 0;\n        this.originalH = 0;\n        this.rotatedPointX = 0;\n        this.rotatedPointY = 0;\n        this.centerX = 0;\n        this.centerY = 0;\n        this.originalAngle = 0;\n        this.activatedUsingTouch = false;\n        this.originalBodyCursor = null;\n    }\n\n    componentDidMount() {\n        if (this.cDiv.current === null) return;\n        if (this.resizeDiv.current === null) return;\n        if (this.rotateDiv.current === null) return;\n\n        this.originalBodyCursor = document.body.style.cursor;\n\n        this.cDiv.current.addEventListener('dragstart', this.handleBrowserDragStart);\n        this.cDiv.current.addEventListener('mousedown', this.handleMouseDown);\n        this.cDiv.current.addEventListener('touchstart', this.handleTouchStart);\n        this.resizeDiv.current.addEventListener('mousedown', this.handleResizeMouseDown);\n        this.resizeDiv.current.addEventListener('touchstart', this.handleResizeTouchStart);\n        this.rotateDiv.current.addEventListener('mousedown', this.handleRotateMouseDown);\n        this.rotateDiv.current.addEventListener('touchstart', this.handleRotateTouchStart);\n    }\n\n    componentDidUpdate() {\n        if (this.cDiv.current === null) return;\n\n        this.currentAngle = this.props.angle;\n    }\n\n    rotateVec = (x: number, y: number, a: number) => {\n        const sinA = Math.sin(a);\n        const cosA = Math.cos(a);\n        const rx = cosA * x - sinA * y;\n        const ry = sinA * x + cosA * y;\n\n        return { rx, ry };\n    };\n\n    handleBrowserDragStart = (event: DragEvent) => {\n        event.stopPropagation();\n        event.preventDefault();\n    };\n\n    // Dragging handling\n\n    handleMouseDown = (event: MouseEvent) => {\n        this.handleDragStart(event);\n\n        document.addEventListener('mousemove', this.handleMouseMove);\n        document.addEventListener('mouseup', this.handleMouseUp);\n        event.stopPropagation();\n    };\n\n    handleTouchStart = (event: TouchEvent) => {\n        this.handleDragStart(event.changedTouches[0]);\n\n        document.addEventListener('touchmove', this.handleTouchMove, { passive: false });\n        document.addEventListener('touchend', this.handleTouchEnd, { passive: false });\n        event.stopPropagation();\n    };\n\n    handleDragStart = (co: { clientX: number; clientY: number }) => {\n        if (this.cDiv.current === null) return;\n\n        this.cDiv.current.style.cursor = 'grabbing';\n\n        this.relX = co.clientX - this.cDiv.current.offsetLeft;\n        this.relY = co.clientY - this.cDiv.current.offsetTop;\n    };\n\n    handleMouseUp = (event: MouseEvent) => {\n        this.handleComplete(event, false);\n\n        document.removeEventListener('mousemove', this.handleMouseMove);\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleTouchEnd = (event: TouchEvent) => {\n        this.handleComplete(event, true);\n\n        document.removeEventListener('touchmove', this.handleTouchMove);\n        document.removeEventListener('touchend', this.handleTouchEnd);\n    };\n\n    handleComplete = (event: Event, isTouchEvent: boolean) => {\n        const { isLocked } = this.props;\n\n        if (this.cDiv.current === null) return;\n        if (this.moving && !isLocked) {\n            this.props.onDrag(this.cDiv.current.offsetLeft, this.cDiv.current.offsetTop);\n            this.moving = false;\n        }\n        this.activatedUsingTouch = isTouchEvent;\n\n        this.cDiv.current.style.cursor = 'grab';\n\n        event.preventDefault();\n    };\n\n    handleMouseMove = (event: MouseEvent) => {\n        this.handleDragMove(event);\n        event.preventDefault();\n    };\n\n    handleTouchMove = (event: TouchEvent) => {\n        this.handleDragMove(event.changedTouches[0]);\n        event.preventDefault();\n    };\n\n    handleDragMove = (co: { clientX: number; clientY: number }) => {\n        const { isLocked } = this.props;\n\n        if (this.cDiv.current === null || isLocked) return;\n        const { width, height, cardWidth, cardHeight } = this.props;\n        this.moving = true;\n\n        const { rx, ry } = this.rotateVec(width / 2, height / 2, this.currentAngle);\n\n        const dx = Math.abs(rx) - width / 2;\n        const dy = Math.abs(ry) - height / 2;\n        const dx2 = Math.abs(rx) + width / 2;\n        const dy2 = Math.abs(ry) + height / 2;\n\n        const x = Math.min(Math.max(co.clientX - this.relX, dx), cardWidth - dx2);\n        const y = Math.min(Math.max(co.clientY - this.relY, dy), cardHeight - dy2);\n        this.cDiv.current.style.left = x + 'px';\n        this.cDiv.current.style.top = y + 'px';\n    };\n\n    // Resize handling\n\n    handleResizeMouseDown = (event: MouseEvent) => {\n        this.handleResizeStart(event);\n\n        document.addEventListener('mousemove', this.handleResizeMouseMove);\n        document.addEventListener('mouseup', this.handleResizeMouseUp);\n        event.stopPropagation();\n        event.preventDefault();\n    };\n\n    handleResizeTouchStart = (event: TouchEvent) => {\n        this.handleResizeStart(event.changedTouches[0]);\n\n        document.addEventListener('touchmove', this.handleResizeTouchMove, { passive: false });\n        document.addEventListener('touchend', this.handleResizeTouchEnd, { passive: false });\n        event.stopPropagation();\n    };\n\n    handleResizeStart = (co: { clientX: number; clientY: number }) => {\n        const { isLocked } = this.props;\n\n        if (this.cDiv.current === null || isLocked) return;\n\n        document.body.style.cursor = `url(${resize}), auto`;\n\n        this.originalW = this.cDiv.current.clientWidth;\n        this.originalH = this.cDiv.current.clientHeight;\n\n        const dx = this.cDiv.current.clientWidth / 2;\n        const dy = this.cDiv.current.clientHeight / 2;\n        const { rx, ry } = this.rotateVec(-dx, -dy, this.currentAngle);\n\n        this.rotatedPointX = this.cDiv.current.offsetLeft + dx + rx;\n        this.rotatedPointY = this.cDiv.current.offsetTop + dy + ry;\n\n        this.startX = co.clientX;\n        this.startY = co.clientY;\n    };\n\n    handleResizeMouseUp = (event: MouseEvent) => {\n        this.handleResizeComplete(event);\n\n        document.removeEventListener('mousemove', this.handleResizeMouseMove);\n        document.removeEventListener('mouseup', this.handleResizeMouseUp);\n    };\n\n    handleResizeTouchEnd = (event: TouchEvent) => {\n        this.handleResizeComplete(event);\n\n        document.removeEventListener('touchmove', this.handleResizeTouchMove);\n        document.removeEventListener('touchend', this.handleResizeTouchEnd);\n    };\n\n    handleResizeComplete = (event: Event) => {\n        const { isLocked } = this.props;\n\n        if (this.cDiv.current === null) return;\n\n        if (this.moving && !isLocked) {\n            const { offsetLeft, offsetTop, clientWidth, clientHeight } = this.cDiv.current;\n            this.props.onDrag(offsetLeft, offsetTop);\n            this.props.onResize(clientWidth, clientHeight);\n            this.moving = false;\n        }\n\n        document.body.style.cursor = this.originalBodyCursor;\n\n        event.preventDefault();\n    };\n\n    handleResizeMouseMove = (event: MouseEvent) => {\n        this.handleResizeMove(event);\n        event.preventDefault();\n    };\n\n    handleResizeTouchMove = (event: TouchEvent) => {\n        this.handleResizeMove(event.changedTouches[0]);\n        event.preventDefault();\n    };\n\n    handleResizeMove = (co: { clientX: number; clientY: number }) => {\n        const { isLocked } = this.props;\n\n        if (this.cDiv.current === null || isLocked) return;\n        this.moving = true;\n\n        const vx = co.clientX - this.startX;\n        const vy = co.clientY - this.startY;\n\n        const { rx, ry } = this.rotateVec(vx, vy, -this.currentAngle);\n\n        const w = this.originalW + rx;\n        const h = this.originalH + ry;\n        this.cDiv.current.style.width = w + 'px';\n        this.cDiv.current.style.height = h + 'px';\n\n        const rotatedV = this.rotateVec(w / 2, h / 2, this.currentAngle);\n        const nx = this.rotatedPointX + rotatedV.rx;\n        const ny = this.rotatedPointY + rotatedV.ry;\n\n        this.cDiv.current.style.left = nx - w / 2 + 'px';\n        this.cDiv.current.style.top = ny - h / 2 + 'px';\n    };\n\n    // Rotation handling\n\n    handleRotateMouseDown = (event: MouseEvent) => {\n        this.handleRotateStart(event);\n\n        document.addEventListener('mousemove', this.handleRotateMouseMove);\n        document.addEventListener('mouseup', this.handleRotateMouseUp);\n        event.stopPropagation();\n        event.preventDefault();\n    };\n\n    handleRotateTouchStart = (event: TouchEvent) => {\n        this.handleRotateStart(event.changedTouches[0]);\n\n        document.addEventListener('touchmove', this.handleRotateTouchMove, { passive: false });\n        document.addEventListener('touchend', this.handleRotateTouchEnd, { passive: false });\n        event.stopPropagation();\n    };\n\n    handleRotateStart = (co: { clientX: number; clientY: number }) => {\n        const { isLocked } = this.props;\n\n        if (this.cDiv.current === null || isLocked) return;\n\n        document.body.style.cursor = `url(${rotate}), auto`;\n\n        const rect = this.cDiv.current.getBoundingClientRect();\n        this.centerX = rect.left + this.cDiv.current.clientWidth / 2;\n        this.centerY = rect.top + this.cDiv.current.clientHeight / 2;\n\n        this.originalAngle = Math.atan2(this.centerX - co.clientX, this.centerY - co.clientY) + this.currentAngle;\n    };\n\n    handleRotateMouseUp = (event: MouseEvent) => {\n        this.handleRotateComplete(event);\n\n        document.removeEventListener('mousemove', this.handleRotateMouseMove);\n        document.removeEventListener('mouseup', this.handleRotateMouseUp);\n    };\n\n    handleRotateTouchEnd = (event: TouchEvent) => {\n        this.handleRotateComplete(event);\n\n        document.removeEventListener('touchmove', this.handleRotateTouchMove);\n        document.removeEventListener('touchend', this.handleRotateTouchEnd);\n    };\n\n    handleRotateComplete = (event: Event) => {\n        const { isLocked } = this.props;\n\n        if (this.moving && !isLocked) {\n            this.props.onRotate(this.currentAngle);\n            this.moving = false;\n        }\n\n        document.body.style.cursor = this.originalBodyCursor;\n\n        event.preventDefault();\n    };\n\n    handleRotateMouseMove = (event: MouseEvent) => {\n        this.handleRotateMove(event);\n        event.preventDefault();\n    };\n\n    handleRotateTouchMove = (event: TouchEvent) => {\n        this.handleRotateMove(event.changedTouches[0]);\n        event.preventDefault();\n    };\n\n    handleRotateMove = (co: { clientX: number; clientY: number }) => {\n        const { isLocked } = this.props;\n\n        if (this.cDiv.current === null || isLocked) return;\n        this.moving = true;\n\n        const angle = Math.atan2(this.centerX - co.clientX, this.centerY - co.clientY);\n        this.currentAngle = this.originalAngle - angle;\n\n        this.cDiv.current.style.transform = `rotate(${this.currentAngle}rad)`;\n    };\n\n    // Rendering\n\n    render() {\n        const { x, y, width, height, angle, children, isActive, isActivePlaceholder, isLocked } = this.props;\n\n        return (\n            <div\n                ref={this.cDiv}\n                className={`${style.fieldcontroller} ${\n                    isActivePlaceholder ? style.fieldcontrolleractiveplaceholder : ''\n                } ${isActive ? style.fieldcontrolleractive : ''} ${\n                    isActive && this.activatedUsingTouch ? style.touchactivated : ''\n                } `}\n                style={{\n                    position: 'absolute',\n                    left: x,\n                    top: y,\n                    width: width,\n                    height: height,\n                    cursor: 'grab',\n                    transform: `rotate(${angle}rad)`,\n                }}\n            >\n                {children}\n                <img\n                    src={resize}\n                    alt=\"resize\"\n                    ref={this.resizeDiv}\n                    className={style.controller}\n                    style={{\n                        position: 'absolute',\n                        right: 0,\n                        bottom: 0,\n                        cursor: `url(${resize}), auto`,\n                        display: isLocked ? 'none' : 'initial',\n                    }}\n                />\n                <img\n                    src={rotate}\n                    alt=\"rotate\"\n                    ref={this.rotateDiv}\n                    className={style.controller}\n                    style={{\n                        position: 'absolute',\n                        left: 0,\n                        bottom: 0,\n                        cursor: `url(${rotate}), auto`,\n                        display: isLocked ? 'none' : 'initial',\n                    }}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    const isActivePlaceholder = props.placeholderId === state.cardsets.activePlaceholder;\n    const isActive =\n        props.cardId === state.cardsets.activeCard && props.placeholderId === state.cardsets.activePlaceholder;\n    const isLocked = state.cardsets.placeholders[props.placeholderId].locked === true;\n\n    return {\n        isActive,\n        isActivePlaceholder,\n        isLocked,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(FieldController);\n","import { connect } from 'react-redux';\nimport React, { PureComponent } from 'react';\n\nimport {\n    Dispatch,\n    ImagePlaceholderType,\n    cardSetActiveCardAndPlaceholder,\n    cardSetChangePlaceholderAngle,\n    cardSetChangePlaceholderPosition,\n    cardSetChangePlaceholderSize,\n} from '../actions';\nimport { State } from '../reducers';\nimport FieldController from './FieldController';\nimport emptyImageImage from './image.svg';\n\ninterface OwnProps {\n    cardId: string;\n    isOnBack: boolean;\n    ppmm: number;\n    imagePlaceholder: ImagePlaceholderType;\n    cardWidth: number;\n    cardHeight: number;\n}\n\ninterface StateProps {\n    imageUrl?: string;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass ImageField extends PureComponent<Props> {\n    imageDiv: React.RefObject<HTMLDivElement>;\n    wasMoved: boolean;\n\n    constructor(props: Props) {\n        super(props);\n        this.imageDiv = React.createRef();\n        this.wasMoved = false;\n    }\n\n    componentDidMount() {\n        if (!this.imageDiv.current) return;\n        this.imageDiv.current.addEventListener('mousedown', this.handleMouseDown);\n        this.imageDiv.current.addEventListener('touchstart', this.handleTouchStart);\n        this.imageDiv.current.addEventListener('mousemove', this.handleMouseMove);\n        this.imageDiv.current.addEventListener('touchmove', this.handleTouchMove, { passive: false });\n        this.imageDiv.current.addEventListener('mouseup', this.handleMouseUp);\n        this.imageDiv.current.addEventListener('touchend', this.handleTouchEnd, { passive: false });\n    }\n\n    handleDrag = (x: number, y: number) => {\n        const { dispatch, imagePlaceholder, ppmm } = this.props;\n        dispatch(cardSetChangePlaceholderPosition(imagePlaceholder, x / ppmm, y / ppmm));\n    };\n\n    handleResize = (width: number, height: number) => {\n        const { dispatch, imagePlaceholder, ppmm } = this.props;\n        dispatch(cardSetChangePlaceholderSize(imagePlaceholder, width / ppmm, height / ppmm));\n    };\n\n    handleRotate = (angle: number) => {\n        const { dispatch, imagePlaceholder } = this.props;\n        dispatch(cardSetChangePlaceholderAngle(imagePlaceholder, angle));\n    };\n\n    handleMouseDown = (event: MouseEvent) => {\n        this.wasMoved = false;\n        event.preventDefault();\n    };\n\n    handleTouchStart = (event: TouchEvent) => {\n        this.wasMoved = false;\n        event.preventDefault();\n    };\n\n    handleMouseMove = (event: MouseEvent) => {\n        this.wasMoved = true;\n        event.preventDefault();\n    };\n\n    handleTouchMove = (event: TouchEvent) => {\n        this.wasMoved = true;\n        event.preventDefault();\n    };\n\n    handleMouseUp = (event: MouseEvent) => {\n        this.handleComplete(event);\n    };\n\n    handleTouchEnd = (event: TouchEvent) => {\n        this.handleComplete(event);\n    };\n\n    handleComplete = (event: Event) => {\n        const { dispatch, cardId, isOnBack, imagePlaceholder } = this.props;\n        if (!this.wasMoved) {\n            event.preventDefault();\n            dispatch(cardSetActiveCardAndPlaceholder(cardId, isOnBack, imagePlaceholder.id));\n        }\n    };\n\n    render() {\n        const { imagePlaceholder, imageUrl, ppmm, cardWidth, cardHeight } = this.props;\n\n        return (\n            <FieldController\n                cardId={this.props.cardId}\n                placeholderId={imagePlaceholder.id}\n                x={imagePlaceholder.x * ppmm}\n                y={imagePlaceholder.y * ppmm}\n                width={imagePlaceholder.width * ppmm}\n                height={imagePlaceholder.height * ppmm}\n                angle={imagePlaceholder.angle}\n                onDrag={this.handleDrag}\n                onResize={this.handleResize}\n                onRotate={this.handleRotate}\n                cardWidth={cardWidth}\n                cardHeight={cardHeight}\n            >\n                <div\n                    ref={this.imageDiv}\n                    style={{\n                        width: '100%',\n                        height: '100%',\n                    }}\n                >\n                    <img\n                        style={{\n                            opacity: imageUrl && imageUrl.length > 0 ? 1 : 0.5,\n                            width: imagePlaceholder.fit === 'height' ? 'auto' : '100%',\n                            height: !imagePlaceholder.fit || imagePlaceholder.fit === 'width' ? 'auto' : '100%',\n                        }}\n                        src={imageUrl || emptyImageImage}\n                        alt=\"\"\n                    />\n                </div>\n            </FieldController>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    const imageInfo =\n        state.cardsets.images &&\n        state.cardsets.images[props.cardId] &&\n        state.cardsets.images[props.cardId][props.imagePlaceholder.id];\n\n    let imageUrl: string | undefined = '';\n    if (imageInfo) {\n        if (imageInfo.base64) {\n            imageUrl = 'data:image/svg+xml;base64,' + imageInfo.base64;\n        } else {\n            imageUrl = imageInfo && imageInfo.url;\n        }\n    }\n\n    return {\n        imageUrl,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(ImageField);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DEFAULT_FONT, DEFAULT_FONT_SIZE, DEFAULT_LINE_HEIGHT } from '../constants';\nimport { Dispatch, TextInfo, cardSetActiveCardAndPlaceholder, cardSetChangeText } from '../actions';\nimport { State } from '../reducers';\n\ninterface OwnProps {\n    cardId: string;\n    isOnBack: boolean;\n    placeholderId: string;\n    align: string;\n    color: string;\n    fontFamily: string;\n    fontVariant: string;\n    fontSize: number;\n    lineHeight: number;\n}\n\ninterface StateProps {\n    isActive: boolean;\n    textValue: string;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass ContentEditable extends Component<Props> {\n    editDiv: React.RefObject<HTMLDivElement>;\n    currentText: string;\n    currentAlign: string;\n    currentColor: string;\n    currentFontFamily: string;\n    currentFontVariant: string;\n    currentFontSize: number;\n    currentLineHeight: number;\n    timeout: NodeJS.Timeout | null;\n    wasMoved: boolean;\n\n    constructor(props: Props) {\n        super(props);\n        this.editDiv = React.createRef();\n        this.currentText = '';\n        this.currentAlign = '';\n        this.currentColor = '';\n        this.currentFontFamily = '';\n        this.currentFontVariant = '';\n        this.currentFontSize = DEFAULT_FONT_SIZE;\n        this.currentLineHeight = DEFAULT_LINE_HEIGHT;\n        this.timeout = null;\n        this.wasMoved = false;\n    }\n\n    componentDidMount() {\n        const { isActive } = this.props;\n\n        if (!this.editDiv.current) return;\n\n        this.editDiv.current.addEventListener('mousedown', this.handleMouseDown);\n        this.editDiv.current.addEventListener('touchstart', this.handleTouchStart);\n        this.editDiv.current.addEventListener('mousemove', this.handleMouseMove);\n        this.editDiv.current.addEventListener('touchmove', this.handleTouchMove, { passive: false });\n        this.editDiv.current.addEventListener('mouseup', this.handleMouseUp);\n        this.editDiv.current.addEventListener('touchend', this.handleTouchEnd, { passive: false });\n\n        if (isActive) {\n            this.editDiv.current.focus();\n        }\n    }\n\n    shouldComponentUpdate(nextProps: Props) {\n        const shouldUpdate =\n            nextProps.textValue !== this.currentText ||\n            nextProps.align !== this.currentAlign ||\n            nextProps.color !== this.currentColor ||\n            nextProps.fontFamily !== this.currentFontFamily ||\n            nextProps.fontVariant !== this.currentFontVariant ||\n            nextProps.fontSize !== this.currentFontSize ||\n            nextProps.lineHeight !== this.currentLineHeight ||\n            this.props.isActive !== nextProps.isActive;\n\n        return shouldUpdate;\n    }\n\n    componentDidUpdate() {\n        const { textValue, align, color, fontFamily, fontVariant, fontSize, lineHeight } = this.props;\n        this.currentText = textValue;\n        this.currentAlign = align;\n        this.currentColor = color;\n        this.currentFontFamily = fontFamily;\n        this.currentFontVariant = fontVariant;\n        this.currentFontSize = fontSize;\n        this.currentLineHeight = lineHeight;\n    }\n\n    handleMouseDown = (event: MouseEvent) => {\n        this.handleStart(event);\n    };\n\n    handleTouchStart = (event: TouchEvent) => {\n        this.handleStart(event);\n    };\n\n    handleStart = (event: Event) => {\n        const { isActive } = this.props;\n        if (isActive) {\n            event.stopPropagation();\n        } else {\n            this.wasMoved = false;\n            event.preventDefault();\n        }\n    };\n\n    handleMouseMove = (event: MouseEvent) => {\n        this.handleMove(event);\n    };\n\n    handleTouchMove = (event: TouchEvent) => {\n        this.handleMove(event);\n    };\n\n    handleMove = (event: Event) => {\n        const { isActive } = this.props;\n        if (isActive) {\n            event.stopPropagation();\n        } else {\n            this.wasMoved = true;\n            event.preventDefault();\n        }\n    };\n\n    handleMouseUp = (event: MouseEvent) => {\n        this.handleComplete(event);\n    };\n\n    handleTouchEnd = (event: TouchEvent) => {\n        this.handleComplete(event);\n    };\n\n    handleComplete = (event: Event) => {\n        const { dispatch, cardId, isOnBack, placeholderId, isActive } = this.props;\n        if (isActive) {\n            event.stopPropagation();\n        } else if (!this.wasMoved) {\n            event.preventDefault();\n            dispatch(cardSetActiveCardAndPlaceholder(cardId, isOnBack, placeholderId));\n\n            if (!this.editDiv.current) return;\n            this.editDiv.current.focus();\n        }\n    };\n\n    onFocus = () => {\n        if (!this.editDiv.current) return;\n\n        const { textValue, align, color, fontFamily, fontVariant, fontSize } = this.props;\n        this.currentText = textValue;\n        this.currentAlign = align;\n        this.currentColor = color;\n        this.currentFontFamily = fontFamily;\n        this.currentFontVariant = fontVariant;\n        this.currentFontSize = fontSize;\n\n        const range = document.createRange();\n        range.selectNodeContents(this.editDiv.current);\n        range.collapse(false);\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    };\n\n    updateContent = (timeoutInMiliseconds: number) => {\n        if (!this.editDiv.current) return;\n        let value = this.editDiv.current.innerHTML;\n        value = value.replace(/<br>/g, '');\n\n        if (value !== this.currentText) {\n            this.currentText = value;\n\n            if (this.timeout) {\n                clearTimeout(this.timeout);\n            }\n\n            this.timeout = setTimeout(() => {\n                const { dispatch, cardId, placeholderId } = this.props;\n                const textInfo: TextInfo = { value };\n\n                dispatch(cardSetChangeText(cardId, placeholderId, textInfo));\n            }, timeoutInMiliseconds);\n        }\n    };\n\n    handleBlur = () => {\n        this.updateContent(0);\n    };\n\n    handleInput = () => {\n        this.updateContent(500);\n    };\n\n    render() {\n        const { color, align, fontFamily, fontVariant, fontSize, lineHeight } = this.props;\n        const isItalic = fontVariant && fontVariant.indexOf('italic') !== -1;\n        const fontWeight = isItalic\n            ? fontVariant === 'italic'\n                ? 400\n                : parseInt(fontVariant.slice(0, 3))\n            : fontVariant === 'regular'\n            ? 400\n            : parseInt(fontVariant);\n\n        return (\n            <div\n                ref={this.editDiv}\n                contentEditable={true}\n                onFocus={this.onFocus}\n                onBlur={this.handleBlur}\n                onInput={this.handleInput}\n                style={{\n                    width: '100%',\n                    height: '100%',\n                    textAlign: align === 'left' ? 'left' : align === 'right' ? 'right' : 'center',\n                    color: color,\n                    fontFamily: `'${fontFamily}'` || DEFAULT_FONT,\n                    fontStyle: isItalic ? 'italic' : 'normal',\n                    fontWeight,\n                    fontSize: `${fontSize}px`,\n                    outline: 'none',\n                    overflowWrap: 'break-word',\n                    lineHeight,\n                }}\n                dangerouslySetInnerHTML={{ __html: this.props.textValue }}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    const textInfo =\n        state.cardsets.texts &&\n        state.cardsets.texts[props.cardId] &&\n        state.cardsets.texts[props.cardId][props.placeholderId]\n            ? state.cardsets.texts[props.cardId][props.placeholderId]\n            : { value: '' };\n    return {\n        textValue: textInfo.value,\n        isActive:\n            props.cardId === state.cardsets.activeCard && props.placeholderId === state.cardsets.activePlaceholder,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(ContentEditable);\n","import { connect } from 'react-redux';\nimport React, { PureComponent } from 'react';\n\nimport { DEFAULT_LINE_HEIGHT } from '../constants';\nimport {\n    Dispatch,\n    TextPlaceholderType,\n    cardSetChangePlaceholderAngle,\n    cardSetChangePlaceholderPosition,\n    cardSetChangePlaceholderSize,\n} from '../actions';\nimport { State } from '../reducers';\nimport ContentEditable from './ContentEditable';\nimport FieldController from './FieldController';\nimport emptyTextImage from './text.svg';\n\ninterface OwnProps {\n    cardId: string;\n    isOnBack: boolean;\n    ppmm: number;\n    textPlaceholder: TextPlaceholderType;\n    cardWidth: number;\n    cardHeight: number;\n}\n\ninterface StateProps {\n    text: string;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass TextField extends PureComponent<Props> {\n    handleDrag = (x: number, y: number) => {\n        const { dispatch, textPlaceholder, ppmm } = this.props;\n        dispatch(cardSetChangePlaceholderPosition(textPlaceholder, x / ppmm, y / ppmm));\n    };\n\n    handleResize = (width: number, height: number) => {\n        const { dispatch, textPlaceholder, ppmm } = this.props;\n        dispatch(cardSetChangePlaceholderSize(textPlaceholder, width / ppmm, height / ppmm));\n    };\n\n    handleRotate = (angle: number) => {\n        const { dispatch, textPlaceholder } = this.props;\n        dispatch(cardSetChangePlaceholderAngle(textPlaceholder, angle));\n    };\n\n    render() {\n        const { textPlaceholder, text, ppmm, cardWidth, cardHeight } = this.props;\n\n        return (\n            <FieldController\n                cardId={this.props.cardId}\n                placeholderId={textPlaceholder.id}\n                x={textPlaceholder.x * ppmm}\n                y={textPlaceholder.y * ppmm}\n                width={textPlaceholder.width * ppmm}\n                height={textPlaceholder.height * ppmm}\n                angle={textPlaceholder.angle}\n                onDrag={this.handleDrag}\n                onResize={this.handleResize}\n                onRotate={this.handleRotate}\n                cardWidth={cardWidth}\n                cardHeight={cardHeight}\n            >\n                {text === '' && (\n                    <div\n                        style={{\n                            width: '100%',\n                            height: '100%',\n                            position: 'fixed',\n                            left: 0,\n                            top: 0,\n                            zIndex: -1,\n                            textAlign:\n                                textPlaceholder.align === 'left'\n                                    ? 'left'\n                                    : textPlaceholder.align === 'right'\n                                    ? 'right'\n                                    : 'center',\n                        }}\n                    >\n                        <img style={{ opacity: 0.5, width: 'auto', height: '100%' }} src={emptyTextImage} alt=\"\" />\n                    </div>\n                )}\n\n                <ContentEditable\n                    cardId={this.props.cardId}\n                    isOnBack={this.props.isOnBack}\n                    placeholderId={textPlaceholder.id}\n                    align={textPlaceholder.align}\n                    color={textPlaceholder.color}\n                    fontFamily={textPlaceholder.fontFamily}\n                    fontVariant={textPlaceholder.fontVariant}\n                    fontSize={textPlaceholder.fontSize * ppmm}\n                    lineHeight={textPlaceholder.lineHeight || DEFAULT_LINE_HEIGHT}\n                />\n            </FieldController>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    let text =\n        state.cardsets.texts &&\n        state.cardsets.texts[props.cardId] &&\n        state.cardsets.texts[props.cardId][props.textPlaceholder.id]\n            ? state.cardsets.texts[props.cardId][props.textPlaceholder.id].value\n            : '';\n    return {\n        text,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(TextField);\n","import { connect } from 'react-redux';\nimport Measure from 'react-measure';\nimport React, { Component } from 'react';\n\nimport { BLEED_WIDTH } from '../constants';\nimport { CardType, Dispatch, PlaceholdersCollection, cardSetActiveCardAndPlaceholder, IdsArray } from '../actions';\nimport { State } from '../reducers';\nimport ImageField from './ImageField';\nimport TextField from './TextField';\nimport style from './Card.module.css';\n\ninterface OwnProps {\n    card: CardType;\n    isBack: boolean;\n}\n\ninterface StateProps {\n    placeholders: PlaceholdersCollection;\n    placeholdersIds: IdsArray;\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    isActiveCard: boolean;\n    zoom: number;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\ninterface LocalState {\n    dimensions: {\n        width: number;\n        height: number;\n    };\n}\n\nclass Card extends Component<Props, LocalState> {\n    state = {\n        dimensions: {\n            width: -1,\n            height: -1,\n        },\n    };\n\n    handleFieldDeselect = (event: React.MouseEvent | React.TouchEvent) => {\n        const { dispatch, card, isBack } = this.props;\n        const el = event.target as HTMLElement;\n        if (el.getAttribute('id') === `card_${card.id}`) {\n            dispatch(cardSetActiveCardAndPlaceholder(card.id, isBack, null));\n            event.stopPropagation();\n        }\n    };\n\n    render() {\n        const {\n            placeholders,\n            placeholdersIds,\n            card,\n            isBack,\n            width,\n            height,\n            isActiveCard,\n            zoom,\n            isTwoSided,\n        } = this.props;\n        const widthWithBleeds = width + BLEED_WIDTH * 2;\n        const heightWithBleeds = height + BLEED_WIDTH * 2;\n\n        const ppmm = this.state.dimensions.width / widthWithBleeds;\n\n        return (\n            <div>\n                <Measure\n                    client\n                    onResize={contentRect => {\n                        if (!contentRect.client) {\n                            return;\n                        }\n                        this.setState({ dimensions: contentRect.client });\n                    }}\n                >\n                    {({ measureRef }) => (\n                        <div\n                            className={`${style.card} ${isActiveCard ? style.active : ''}`}\n                            id={`card_${card.id}`}\n                            ref={measureRef}\n                            style={{\n                                width: `${widthWithBleeds * zoom}mm`,\n                                height: `${heightWithBleeds * zoom}mm`,\n                                position: 'relative',\n                                overflow: 'hidden',\n                            }}\n                            onMouseDown={this.handleFieldDeselect}\n                            onTouchStart={this.handleFieldDeselect}\n                        >\n                            {placeholdersIds.map(id => {\n                                const p = placeholders[id];\n                                if (p.type === 'image') {\n                                    return (\n                                        <ImageField\n                                            key={p.id}\n                                            cardId={card.id}\n                                            isOnBack={isBack}\n                                            imagePlaceholder={p}\n                                            ppmm={ppmm}\n                                            cardWidth={this.state.dimensions.width}\n                                            cardHeight={this.state.dimensions.height}\n                                        />\n                                    );\n                                } else if (p.type === 'text') {\n                                    return (\n                                        <TextField\n                                            key={p.id}\n                                            cardId={card.id}\n                                            isOnBack={isBack}\n                                            textPlaceholder={p}\n                                            ppmm={ppmm}\n                                            cardWidth={this.state.dimensions.width}\n                                            cardHeight={this.state.dimensions.height}\n                                        />\n                                    );\n                                }\n                                return null;\n                            })}\n\n                            <div\n                                style={{\n                                    position: 'absolute',\n                                    width: `${width * zoom}mm`,\n                                    height: `${height * zoom}mm`,\n                                    left: `${BLEED_WIDTH * zoom}mm`,\n                                    top: `${BLEED_WIDTH * zoom}mm`,\n                                    border: '1px dashed black',\n                                    borderRadius: '5mm',\n                                    pointerEvents: 'none',\n                                }}\n                            />\n\n                            <div\n                                style={{\n                                    position: 'absolute',\n                                    width: `${(width - BLEED_WIDTH * 2) * zoom}mm`,\n                                    height: `${(height - BLEED_WIDTH * 2) * zoom}mm`,\n                                    left: `${BLEED_WIDTH * 2 * zoom}mm`,\n                                    top: `${BLEED_WIDTH * 2 * zoom}mm`,\n                                    border: '1px dashed red',\n                                    borderRadius: '5mm',\n                                    pointerEvents: 'none',\n                                }}\n                            />\n                        </div>\n                    )}\n                </Measure>\n                {isTwoSided && (\n                    <div\n                        className={style.title}\n                        style={{\n                            width: `${widthWithBleeds * zoom}mm`,\n                            position: 'relative',\n                        }}\n                    >\n                        {isBack ? 'Back' : 'Front'}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    return {\n        placeholders: state.cardsets.placeholders,\n        placeholdersIds: state.cardsets.placeholdersAllIds.filter(\n            id => (state.cardsets.placeholders[id].isOnBack || false) === props.isBack,\n        ),\n        width: state.cardsets.width,\n        height: state.cardsets.height,\n        isTwoSided: state.cardsets.isTwoSided,\n        isActiveCard: state.cardsets.activeCard === props.card.id && state.cardsets.isBackActive === props.isBack,\n        zoom: state.cardsets.zoom,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(Card);\n","import React, { Component } from 'react';\nimport style from './EditableTitle.module.css';\n\ninterface Props {\n    title: string;\n    onChange: (newName: string) => void;\n}\n\nexport default class EditableTitle extends Component<Props> {\n    state = {\n        titleIsEdited: false,\n    };\n\n    handleClick = () => {\n        this.setState({ titleIsEdited: true });\n    };\n\n    handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.props.onChange(event.target.value);\n    };\n\n    handleBlur = () => {\n        this.setState({ titleIsEdited: false });\n    };\n\n    render() {\n        const { titleIsEdited } = this.state;\n        const { title } = this.props;\n\n        return (\n            <>\n                {!titleIsEdited && (\n                    <h1 className={style.input} onClick={this.handleClick}>\n                        {title}\n                    </h1>\n                )}\n                {titleIsEdited && (\n                    <input\n                        autoFocus\n                        type=\"text\"\n                        className={style.input}\n                        value={title}\n                        onChange={this.handleChange}\n                        onBlur={this.handleBlur}\n                    />\n                )}\n            </>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nimport style from './Loader.module.css';\n\ninterface Props {\n    fixed?: boolean;\n    small?: boolean;\n}\n\nexport default class Loader extends Component<Props> {\n    render() {\n        const { fixed, small } = this.props;\n\n        return (\n            <div className={`${style.loader} ${fixed ? style.fixed : style.relative} ${small ? style.small : ''}`}>\n                <div />\n                <div />\n            </div>\n        );\n    }\n}\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { ACTIVITY_CREATING_PDF, State } from '../reducers';\nimport { Dispatch, gameCreatePdfRequest } from '../actions';\nimport KawaiiMessage, { Character } from './KawaiiMessage';\n\ninterface OwnProps {\n    type: string;\n    id: string;\n}\n\ninterface StateProps {\n    isCreatingPdf: boolean;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = StateProps & DispatchProps & OwnProps;\n\ninterface LocalState {\n    pageWidth: number;\n    pageHeight: number;\n    topBottomMargin: number;\n    leftRightMargin: number;\n    verticalSpace: number;\n    horizontalSpace: number;\n    includeBleedingArea: boolean;\n    cutMarksForScissors: boolean;\n    cutMarksForGuillotine: boolean;\n}\n\nexport class PDFGenerator extends Component<Props, LocalState> {\n    state = {\n        pageWidth: 210,\n        pageHeight: 297,\n        topBottomMargin: 15,\n        leftRightMargin: 9,\n        verticalSpace: 0,\n        horizontalSpace: 0,\n        includeBleedingArea: false,\n        cutMarksForScissors: true,\n        cutMarksForGuillotine: false,\n    };\n\n    handleGeneratePdfClick = () => {\n        const { dispatch } = this.props;\n        const {\n            pageWidth,\n            pageHeight,\n            topBottomMargin,\n            leftRightMargin,\n            verticalSpace,\n            horizontalSpace,\n            includeBleedingArea,\n            cutMarksForScissors,\n            cutMarksForGuillotine,\n        } = this.state;\n\n        dispatch(\n            gameCreatePdfRequest(\n                this.props.type,\n                this.props.id,\n                pageWidth,\n                pageHeight,\n                topBottomMargin,\n                leftRightMargin,\n                verticalSpace,\n                horizontalSpace,\n                includeBleedingArea,\n                cutMarksForScissors,\n                cutMarksForGuillotine,\n            ),\n        );\n    };\n\n    handlePageWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ pageWidth: parseFloat(event.target.value) });\n    };\n\n    handlePageHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ pageHeight: parseFloat(event.target.value) });\n    };\n\n    handleTopBottomMarginChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ topBottomMargin: parseFloat(event.target.value) });\n    };\n\n    handleLeftRightMarginChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ leftRightMargin: parseFloat(event.target.value) });\n    };\n\n    handleVerticalSpaceChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ verticalSpace: parseFloat(event.target.value) });\n    };\n\n    handleHorizontalSpaceChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ horizontalSpace: parseFloat(event.target.value) });\n    };\n\n    handleIncludeBleedingAreaChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ includeBleedingArea: event.target.checked });\n    };\n\n    handleCutMarksForScissors = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ cutMarksForScissors: event.target.checked });\n    };\n\n    handleCutMarksForGuillotine = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ cutMarksForGuillotine: event.target.checked });\n    };\n\n    render() {\n        const { isCreatingPdf } = this.props;\n\n        return (\n            <>\n                <KawaiiMessage character={Character.Ghost} mood=\"excited\">\n                    <p>Here you can generate PDF.</p>\n                    <p>Hint 1: A4 page size is 210 mm x 297 mm. Letter page size is 215.9 x 279.4 mm.</p>\n                    <p>Hint 2: 1 inch is equal to 25.4 mm.</p>\n                </KawaiiMessage>\n\n                <div className=\"form\">\n                    <label htmlFor=\"page_width\">Page width (mm):</label>\n                    <input\n                        id=\"page_width\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handlePageWidthChange}\n                        placeholder=\"Page width\"\n                        value={this.state.pageWidth}\n                    />\n                    <label htmlFor=\"page_height\">Page height (mm):</label>\n                    <input\n                        id=\"page_height\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handlePageHeightChange}\n                        placeholder=\"Page Height\"\n                        value={this.state.pageHeight}\n                    />\n                    <label htmlFor=\"page_topbottom_margin\">Margin from top/bottom (mm):</label>\n                    <input\n                        id=\"page_topbottom_margin\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handleTopBottomMarginChange}\n                        placeholder=\"Top/Bottom margin\"\n                        value={this.state.topBottomMargin}\n                    />\n                    <label htmlFor=\"page_leftright_margin\">Margin from left/right (mm):</label>\n                    <input\n                        id=\"page_leftright_margin\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handleLeftRightMarginChange}\n                        placeholder=\"Left/Right margin\"\n                        value={this.state.leftRightMargin}\n                    />\n\n                    <label htmlFor=\"card_vertical_space\">Vertical space between cards (mm):</label>\n                    <input\n                        id=\"card_vertical_space\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handleVerticalSpaceChange}\n                        placeholder=\"Vertical space\"\n                        value={this.state.verticalSpace}\n                    />\n\n                    <label htmlFor=\"card_horizontal_space\">Horizontal space between cards (mm):</label>\n                    <input\n                        id=\"card_horizontal_space\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handleHorizontalSpaceChange}\n                        placeholder=\"Horizontal space\"\n                        value={this.state.horizontalSpace}\n                    />\n\n                    <label\n                        title=\"You might need this for Cardmogrifier or professional printing. Do\n                        not check this if all you are interested in is card (area inside black dashed rectangle).\"\n                    >\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.includeBleedingArea}\n                            onChange={this.handleIncludeBleedingAreaChange}\n                        />\n                        Generate with bleeding area.\n                    </label>\n\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.cutMarksForScissors}\n                            onChange={this.handleCutMarksForScissors}\n                        />\n                        Generate with cut marks for paper scissors.\n                    </label>\n\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.cutMarksForGuillotine}\n                            onChange={this.handleCutMarksForGuillotine}\n                        />\n                        Generate with cut marks for paper guillotine (in margin area).\n                    </label>\n\n                    <button disabled={isCreatingPdf} onClick={this.handleGeneratePdfClick}>\n                        Generate PDF\n                    </button>\n                </div>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        isCreatingPdf: (state.games.activity & ACTIVITY_CREATING_PDF) === ACTIVITY_CREATING_PDF,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(PDFGenerator);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { CardType, cardSetCloneCard, cardSetRemoveCard, cardSetUpdateCardCount } from '../actions';\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport { State } from '../reducers';\nimport style from './SidebarDetails.module.css';\n\ninterface StateProps {\n    isAuthenticated: boolean;\n    activeCard: CardType | null;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarDetails extends Component<Props> {\n    handleCloneCardClick = () => {\n        const { activeCard, dispatch } = this.props;\n        if (activeCard !== null) {\n            dispatch(cardSetCloneCard(activeCard));\n        }\n    };\n\n    handleRemoveCardClick = () => {\n        const { activeCard, dispatch } = this.props;\n        if (activeCard !== null) {\n            dispatch(cardSetRemoveCard(activeCard));\n        }\n    };\n\n    handleCountChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeCard, dispatch } = this.props;\n        if (activeCard !== null) {\n            dispatch(cardSetUpdateCardCount(activeCard, parseInt(event.target.value)));\n        }\n    };\n\n    render() {\n        const { activeCard, visible } = this.props;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'initial' : 'none' }}>\n                <button\n                    onClick={this.handleCloneCardClick}\n                    title=\"Clone card\"\n                    className={activeCard === null ? style.disabled : ''}\n                >\n                    <i className=\"material-icons\">file_copy</i>\n                </button>\n\n                <input\n                    type=\"number\"\n                    value={activeCard !== null ? activeCard.count.toString() : 0}\n                    onChange={this.handleCountChange}\n                    title=\"Number of card's copies\"\n                    className={activeCard === null ? style.disabled : ''}\n                />\n                <button\n                    onClick={this.handleRemoveCardClick}\n                    title=\"Remove card\"\n                    className={activeCard === null ? style.disabled : ''}\n                >\n                    <i className=\"material-icons\">delete</i>\n                </button>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        activeCard: state.cardsets.activeCard !== null ? state.cardsets.cardsById[state.cardsets.activeCard] : null,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarDetails);\n","import { ChromePicker, ColorResult } from 'react-color';\nimport React, { Component } from 'react';\n\ninterface Props {\n    onChange: (color: ColorResult) => void;\n    color: string;\n}\n\ninterface State {\n    displayColorPicker: boolean;\n}\n\nexport default class ColorButton extends Component<Props, State> {\n    state = {\n        displayColorPicker: false,\n    };\n\n    handleClick = () => {\n        this.setState({ displayColorPicker: !this.state.displayColorPicker });\n    };\n\n    handleClose = () => {\n        this.setState({ displayColorPicker: false });\n    };\n\n    handleChange = (color: ColorResult) => {\n        this.props.onChange(color);\n    };\n\n    render() {\n        const popover: React.CSSProperties = {\n            position: 'absolute',\n            zIndex: 2,\n        };\n        const cover: React.CSSProperties = {\n            position: 'fixed',\n            top: '0px',\n            right: '0px',\n            bottom: '0px',\n            left: '0px',\n        };\n        return (\n            <>\n                <button onClick={this.handleClick} title=\"Change color\">\n                    <i className=\"material-icons\">color_lens</i>\n                </button>\n                {this.state.displayColorPicker ? (\n                    <div style={popover}>\n                        <div style={cover} onClick={this.handleClose} />\n                        <ChromePicker color={this.props.color} disableAlpha={true} onChange={this.handleChange} />\n                    </div>\n                ) : null}\n            </>\n        );\n    }\n}\n","import { ColorResult } from 'react-color';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport {\n    CardType,\n    IdsArray,\n    ImageArray,\n    ImageInfo,\n    PlaceholderType,\n    cardSetAddImagePlaceholder,\n    cardSetChangeActivePlaceholderName,\n    cardSetChangeFitForActivePlaceholder,\n    cardSetChangeImage,\n    cardSetLockActivePlaceholder,\n    cardSetLowerActivePlaceholderToBottom,\n    cardSetRaiseActivePlaceholderToTop,\n    cardSetRemoveActivePlaceholder,\n    cardSetUnlockActivePlaceholder,\n    imageListRequest,\n} from '../actions';\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport { State } from '../reducers';\nimport ColorButton from './ColorButton';\nimport style from './SidebarImage.module.css';\n\ninterface StateProps {\n    isAuthenticated: boolean;\n    activePlaceholder: PlaceholderType | null;\n    imageInfo?: ImageInfo;\n    activeCard: CardType | null;\n    filter: string;\n    images: ImageArray;\n    cardsAllIds: IdsArray;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\ninterface LocalState {\n    location: string;\n    applyToAllCards: boolean;\n}\n\nexport class SidebarImage extends Component<Props, LocalState> {\n    state = {\n        location: 'all',\n        applyToAllCards: false,\n    };\n\n    handleAddImageClick = () => {\n        const { dispatch } = this.props;\n        dispatch(cardSetAddImagePlaceholder());\n    };\n\n    changeImage = (ii: ImageInfo) => {\n        const { cardsAllIds, activeCard, activePlaceholder, dispatch } = this.props;\n        const { applyToAllCards } = this.state;\n\n        if (activePlaceholder) {\n            if (applyToAllCards) {\n                for (const cardId of cardsAllIds) {\n                    dispatch(cardSetChangeImage(cardId, activePlaceholder.id, ii));\n                }\n            } else if (activeCard) {\n                dispatch(cardSetChangeImage(activeCard.id, activePlaceholder.id, ii));\n            }\n        }\n    };\n\n    handleRemoveImageFromFieldClick = () => {\n        const ii: ImageInfo = { url: undefined, base64: undefined };\n        this.changeImage(ii);\n    };\n\n    handleRemoveClick = () => {\n        const { activePlaceholder, dispatch } = this.props;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetRemoveActivePlaceholder());\n        }\n    };\n\n    handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activePlaceholder, dispatch } = this.props;\n        const name = event.target.value.trim();\n        if (activePlaceholder !== null) {\n            dispatch(cardSetChangeActivePlaceholderName(name));\n        }\n    };\n\n    handleFilterChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        const { location } = this.state;\n        const filter = event.target.value;\n        dispatch(imageListRequest(filter, location));\n    };\n\n    handleImageSelect = (imageName: string) => {\n        const { imageInfo } = this.props;\n\n        const color = imageInfo && imageInfo.color;\n\n        const ii: ImageInfo = { url: `/api/imagefiles/${imageName}`, color, base64: undefined };\n        this.changeImage(ii);\n    };\n\n    handleRaiseToTop = () => {\n        const { activePlaceholder, dispatch } = this.props;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetRaiseActivePlaceholderToTop());\n        }\n    };\n\n    handleLowerToBottom = () => {\n        const { activePlaceholder, dispatch } = this.props;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetLowerActivePlaceholderToBottom());\n        }\n    };\n\n    handleLockField = () => {\n        const { activePlaceholder, dispatch } = this.props;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetLockActivePlaceholder());\n        }\n    };\n\n    handleUnlockField = () => {\n        const { activePlaceholder, dispatch } = this.props;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetUnlockActivePlaceholder());\n        }\n    };\n\n    handleFitOptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        const fit = event.target.value;\n\n        dispatch(cardSetChangeFitForActivePlaceholder(fit));\n    };\n\n    handleOptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { filter, dispatch } = this.props;\n        const location = event.target.value;\n\n        this.setState({ location });\n        dispatch(imageListRequest(filter, location));\n    };\n\n    handleColorChange = (color: ColorResult) => {\n        const ii: ImageInfo = { color: color.hex };\n        this.changeImage(ii);\n    };\n\n    handleRemoveColorClick = () => {\n        const ii: ImageInfo = { color: undefined };\n        this.changeImage(ii);\n    };\n\n    handleApplyToAllCardChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ applyToAllCards: event.target.checked });\n    };\n\n    render() {\n        const { activePlaceholder, imageInfo, filter, visible } = this.props;\n        const { location, applyToAllCards } = this.state;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'grid' : 'none' }}>\n                <div>\n                    <button onClick={this.handleAddImageClick} title=\"Add image field\">\n                        <i className=\"material-icons\">add_photo_alternate</i>\n                    </button>\n\n                    <button onClick={this.handleRaiseToTop} title=\"Raise image to top\">\n                        <i className=\"material-icons\">arrow_upward</i>\n                    </button>\n                    <button onClick={this.handleLowerToBottom} title=\"Lower image to bottom\">\n                        <i className=\"material-icons\">arrow_downward</i>\n                    </button>\n\n                    {imageInfo && (\n                        <button onClick={this.handleRemoveImageFromFieldClick} title=\"Remove image from field\">\n                            <i className=\"material-icons\">remove_circle_outline</i>\n                        </button>\n                    )}\n\n                    {activePlaceholder !== null && !activePlaceholder.locked && (\n                        <button\n                            onClick={this.handleLockField}\n                            title=\"Lock image field. Locked field can't be dragged, rotated, resized and removed.\"\n                        >\n                            <i className=\"material-icons\">lock_open</i>\n                        </button>\n                    )}\n\n                    {activePlaceholder !== null && activePlaceholder.locked && (\n                        <button\n                            onClick={this.handleUnlockField}\n                            title=\"Unlock image field. Unlocked text field can be dragged, rotated, resized and removed.\"\n                        >\n                            <i className=\"material-icons\">lock</i>\n                        </button>\n                    )}\n\n                    <button\n                        className={activePlaceholder === null || activePlaceholder.locked ? style.disabled : ''}\n                        onClick={this.handleRemoveClick}\n                        title=\"Remove field\"\n                    >\n                        <i className=\"material-icons\">remove</i>\n                    </button>\n\n                    {activePlaceholder !== null && (\n                        <input\n                            type=\"text\"\n                            value={activePlaceholder.type === 'image' ? activePlaceholder.name || '' : ''}\n                            placeholder={activePlaceholder.id}\n                            onChange={this.handleNameChange}\n                            title=\"Change name of image field.\"\n                        />\n                    )}\n\n                    {activePlaceholder && activePlaceholder.type === 'image' && (\n                        <form>\n                            <div>\n                                Fit:\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        value=\"width\"\n                                        checked={!activePlaceholder.fit || activePlaceholder.fit === 'width'}\n                                        onChange={this.handleFitOptionChange}\n                                    />\n                                    width\n                                </label>\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        value=\"height\"\n                                        checked={activePlaceholder.fit === 'height'}\n                                        onChange={this.handleFitOptionChange}\n                                    />\n                                    height\n                                </label>\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        value=\"stretch\"\n                                        checked={activePlaceholder.fit === 'stretch'}\n                                        onChange={this.handleFitOptionChange}\n                                    />\n                                    stretch\n                                </label>\n                            </div>\n                        </form>\n                    )}\n                </div>\n\n                {activePlaceholder && activePlaceholder.type === 'image' && (\n                    <>\n                        <div className={style.image}>\n                            <img src={imageInfo ? imageInfo.url : ''} alt=\"\" />\n                        </div>\n                        <div>\n                            <ColorButton\n                                color={(imageInfo && imageInfo.color) || '#FFFFFF'}\n                                onChange={this.handleColorChange}\n                            />\n                            {imageInfo && imageInfo.color && (\n                                <button onClick={this.handleRemoveColorClick} title=\"Remove color\">\n                                    <i className=\"material-icons\">remove_circle</i>\n                                </button>\n                            )}\n                            <label>\n                                <input\n                                    type=\"checkbox\"\n                                    checked={applyToAllCards}\n                                    onChange={this.handleApplyToAllCardChange}\n                                />\n                                Apply to all cards\n                            </label>\n                        </div>\n                        <div>\n                            <form>\n                                Source:\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        value=\"all\"\n                                        checked={location === 'all'}\n                                        onChange={this.handleOptionChange}\n                                    />\n                                    All\n                                </label>\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        value=\"user\"\n                                        checked={location === 'user'}\n                                        onChange={this.handleOptionChange}\n                                    />\n                                    User\n                                </label>\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        value=\"game\"\n                                        checked={location === 'game'}\n                                        onChange={this.handleOptionChange}\n                                    />\n                                    Game\n                                </label>\n                            </form>\n                        </div>\n                        <div>\n                            <input\n                                type=\"text\"\n                                placeholder=\"Search...\"\n                                value={filter}\n                                onChange={this.handleFilterChange}\n                            />\n                        </div>\n                        <div className={style.images}>\n                            {this.props.images.map(im => {\n                                return (\n                                    <img\n                                        key={im.id}\n                                        src={`/api/imagefiles/${im.name}`}\n                                        onClick={() => this.handleImageSelect(im.name)}\n                                        alt=\"\"\n                                    />\n                                );\n                            })}\n                        </div>\n                    </>\n                )}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    const activePlaceholder =\n        state.cardsets.activePlaceholder !== null\n            ? state.cardsets.placeholders[state.cardsets.activePlaceholder]\n            : null;\n\n    const activeCard = state.cardsets.activeCard !== null ? state.cardsets.cardsById[state.cardsets.activeCard] : null;\n\n    let imageInfo = undefined;\n\n    if (\n        state.cardsets.images &&\n        activeCard &&\n        state.cardsets.images[activeCard.id] &&\n        activePlaceholder !== null &&\n        activePlaceholder.type === 'image' &&\n        state.cardsets.images[activeCard.id][activePlaceholder.id]\n    ) {\n        imageInfo = state.cardsets.images[activeCard.id][activePlaceholder.id];\n    }\n\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        activePlaceholder,\n        imageInfo,\n        activeCard,\n        images: state.images.images,\n        filter: state.images.filter,\n        cardsAllIds: state.cardsets.cardsAllIds,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarImage);\n","import 'filepond/dist/filepond.min.css';\n\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport { connect } from 'react-redux';\nimport FilePondPluginFileValidateType from 'filepond-plugin-file-validate-type';\nimport Papa from 'papaparse';\nimport React, { Component } from 'react';\nimport md5 from 'md5';\nimport shortid from 'shortid';\n\nimport {\n    CardType,\n    CardsCollection,\n    FPLoadCallback,\n    FPRevertLoadCallback,\n    IdsArray,\n    PlaceholdersCollection,\n    PlaceholdersImageInfoByCardCollection,\n    PlaceholdersTextInfoByCardCollection,\n    cardSetImportData,\n    messageDisplay,\n} from '../actions';\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport { State } from '../reducers';\nimport { downloadBlob } from '../utils';\nimport style from './SidebarImportExport.module.css';\n\nregisterPlugin(FilePondPluginFileValidateType);\n\ninterface StateProps {\n    activeGame: string | null;\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    cardsAllIds: IdsArray;\n    cardsById: CardsCollection;\n    placeholders: PlaceholdersCollection;\n    placeholdersAllIds: IdsArray;\n    texts: PlaceholdersTextInfoByCardCollection;\n    images: PlaceholdersImageInfoByCardCollection;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarImportExport extends Component<Props> {\n    prepareImagePaths = (images: PlaceholdersImageInfoByCardCollection) => {\n        const { activeGame } = this.props;\n        if (activeGame === null) return images;\n\n        const ending = '_' + md5(activeGame);\n\n        let preparedImages: PlaceholdersImageInfoByCardCollection = {};\n\n        for (const cardId in images) {\n            let imagesByCard = { ...images[cardId] };\n            for (const placeholderId in imagesByCard) {\n                let imageInfo = { ...imagesByCard[placeholderId] };\n                let url = imageInfo.url || '';\n                if (url.endsWith(ending)) {\n                    url = url.replace(ending, '');\n                } else {\n                    imageInfo.global = true;\n                }\n\n                imageInfo.url = url.replace('/api/imagefiles/', '');\n\n                imagesByCard[placeholderId] = imageInfo;\n            }\n            preparedImages[cardId] = imagesByCard;\n        }\n\n        return preparedImages;\n    };\n\n    handleExportJson = () => {\n        const { width, height, isTwoSided, cardsAllIds, cardsById, placeholders, placeholdersAllIds, texts, images } = this.props;\n\n        const preparedImages = this.prepareImagePaths(images);\n\n        const data = {\n            width,\n            height,\n            isTwoSided,\n            cardsAllIds,\n            cardsById,\n            placeholders,\n            placeholdersAllIds,\n            texts,\n            images: preparedImages,\n        };\n\n        let json = JSON.stringify(data, null, 4);\n        let blob = new Blob([json], { type: 'octet/stream' });\n        let url = window.URL.createObjectURL(blob);\n        downloadBlob(url, 'cardset.json');\n    };\n\n    handleExportCsv = () => {\n        const { cardsAllIds, cardsById, placeholders, placeholdersAllIds, texts, images } = this.props;\n\n        const preparedImages = this.prepareImagePaths(images);\n\n        let csvData: (string | number)[][] = [];\n        let header = ['card_id', 'card_count'];\n        let usedNames: { [key: string]: boolean } = {};\n        for (const plId of placeholdersAllIds) {\n            const placeholder = placeholders[plId];\n            const name = placeholder.name || placeholder.id;\n            if (!(name in usedNames)) {\n                header.push(name);\n                if (placeholder.type === 'image') {\n                    header.push(`${name}_global`);\n                }\n                usedNames[name] = false;\n            }\n        }\n        csvData.push(header);\n\n        for (const cardId of cardsAllIds) {\n            let card = cardsById[cardId];\n\n            let dataRow: (string | number)[] = [cardId, card.count];\n\n            let written = { ...usedNames };\n            for (const plId of placeholdersAllIds) {\n                const placeholder = placeholders[plId];\n                const name = placeholder.name || placeholder.id;\n\n                if (!written[name]) {\n                    if (placeholder.type === 'text') {\n                        dataRow.push(texts[cardId][plId].value);\n                    } else if (placeholder.type === 'image') {\n                        const image = preparedImages[cardId][plId];\n                        dataRow.push(image.url || '');\n                        dataRow.push(image.global ? 'y' : 'n');\n                    }\n                    written[name] = true;\n                }\n            }\n            csvData.push(dataRow);\n        }\n\n        let csv = Papa.unparse(csvData);\n        let blob = new Blob([csv], { type: 'octet/stream' });\n        let url = window.URL.createObjectURL(blob);\n        downloadBlob(url, 'cardset.csv');\n    };\n\n    handleProcess = (fieldName: string, file: File, metadata: { [propName: string]: string }, load: FPLoadCallback) => {\n        const { dispatch, activeGame, placeholders } = this.props;\n        if (activeGame === null) return;\n\n        var reader = new FileReader();\n        reader.readAsText(file, 'UTF-8');\n        reader.onload = function(e) {\n            if (e.target === null) return;\n\n            let data = null;\n            const ending = '_' + md5(activeGame);\n\n            if (file.type === 'application/json') {\n                // eslint-disable-next-line\n                data = JSON.parse((e.target as any).result);\n\n                for (const cardId in data.images) {\n                    const loadedPlaceholders = data.images[cardId];\n                    for (const placeholderId in loadedPlaceholders) {\n                        let imageInfo = loadedPlaceholders[placeholderId];\n                        let isGlobal = imageInfo.global || false;\n\n                        imageInfo.url = `/api/imagefiles/${imageInfo.url}${isGlobal ? '' : ending}`;\n                        delete imageInfo.global;\n                    }\n                }\n            } else if (file.type === 'text/csv') {\n                // eslint-disable-next-line\n                const csvData = Papa.parse((e.target as any).result, { header: true });\n\n                let cardsAllIds: IdsArray = [];\n                let cardsById: CardsCollection = {};\n                let texts: PlaceholdersTextInfoByCardCollection = {};\n                let images: PlaceholdersImageInfoByCardCollection = {};\n\n                for (const row of csvData.data) {\n                    const card: CardType = {\n                        id: row['card_id'] || shortid.generate(),\n                        count: row['card_count'] || 1,\n                    };\n\n                    cardsAllIds.push(card.id);\n                    cardsById[card.id] = card;\n\n                    for (const plId in placeholders) {\n                        const pl = placeholders[plId];\n                        const name = pl.name || pl.id;\n\n                        if (row[name]) {\n                            if (pl.type === 'image') {\n                                const isGlobal = row[`${name}_global`] === 'y';\n                                const url = row[name];\n\n                                if (!(card.id in images)) {\n                                    images[card.id] = {};\n                                }\n\n                                images[card.id][plId] = {\n                                    url: `/api/imagefiles/${url}${isGlobal ? '' : ending}`,\n                                };\n                            } else if (pl.type === 'text') {\n                                if (!(card.id in texts)) {\n                                    texts[card.id] = {};\n                                }\n                                texts[card.id][plId] = { value: row[name] };\n                            }\n                        }\n                    }\n                }\n\n                data = {\n                    cardsAllIds,\n                    cardsById,\n                    texts,\n                    images,\n                };\n            }\n\n            if (data !== null) {\n                dispatch(cardSetImportData(data));\n            }\n        };\n        reader.onerror = function() {\n            dispatch(messageDisplay('error', 'Problem during import.'));\n        };\n\n        load(file.name);\n    };\n\n    handleRevert = (uniqueFileId: string, load: FPRevertLoadCallback) => {\n        load();\n    };\n\n    render() {\n        const { visible } = this.props;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'grid' : 'none' }}>\n                <div>\n                    Here you can export and import your card set data. JSON file contains templates of cards, text and\n                    image data by card, CSV file contains only text and image data by card.\n                </div>\n                <button onClick={this.handleExportJson}>\n                    <i className=\"material-icons\">cloud_download</i> Get JSON\n                </button>\n                <button onClick={this.handleExportCsv}>\n                    <i className=\"material-icons\">cloud_download</i> Get CSV\n                </button>\n\n                <div>Drag & Drop or browser for JSON or CSV file here:</div>\n\n                <FilePond\n                    server={{\n                        process: this.handleProcess,\n                        revert: this.handleRevert,\n                    }}\n                    acceptedFileTypes={['text/csv', 'application/json']}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        activeGame: state.games.active,\n        width: state.cardsets.width,\n        height: state.cardsets.height,\n        isTwoSided: state.cardsets.isTwoSided,\n        cardsAllIds: state.cardsets.cardsAllIds,\n        cardsById: state.cardsets.cardsById,\n        placeholders: state.cardsets.placeholders,\n        placeholdersAllIds: state.cardsets.placeholdersAllIds,\n        texts: state.cardsets.texts,\n        images: state.cardsets.images,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarImportExport);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport {\n    IdsArray,\n    PlaceholderType,\n    PlaceholdersCollection,\n    cardSetActiveCardAndPlaceholder,\n    cardSetChangeActivePlaceholderName,\n    cardSetChangePlaceholderAngle,\n    cardSetChangePlaceholderPosition,\n    cardSetChangePlaceholderSize,\n    cardSetLockActivePlaceholder,\n    cardSetLowerActivePlaceholderToBottom,\n    cardSetRaiseActivePlaceholderToTop,\n    cardSetUnlockActivePlaceholder,\n} from '../actions';\nimport { State } from '../reducers';\nimport style from './SidebarMeasurements.module.css';\n\ninterface StateProps {\n    activePlaceholder: PlaceholderType | null;\n    activeCard: string | null;\n    placeholders: PlaceholdersCollection;\n    placeholdersAllIds: IdsArray;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarMeasurements extends Component<Props> {\n    handlePrevPlaceholder = () => {\n        const { activeCard, activePlaceholder, placeholders, placeholdersAllIds, dispatch } = this.props;\n        if (placeholdersAllIds.length === 0 || activeCard === null) return;\n\n        let prevPlaceholder = placeholdersAllIds[placeholdersAllIds.length - 1];\n        if (activePlaceholder !== null) {\n            let idx = placeholdersAllIds.indexOf(activePlaceholder.id);\n            if (idx > 0) prevPlaceholder = placeholdersAllIds[idx - 1];\n        }\n\n        dispatch(\n            cardSetActiveCardAndPlaceholder(\n                activeCard,\n                placeholders[prevPlaceholder].isOnBack || false,\n                prevPlaceholder,\n            ),\n        );\n    };\n\n    handleNextPlaceholder = () => {\n        const { activeCard, activePlaceholder, placeholders, placeholdersAllIds, dispatch } = this.props;\n        if (placeholdersAllIds.length === 0 || activeCard === null) return;\n\n        let nextPlaceholder = placeholdersAllIds[0];\n        if (activePlaceholder !== null) {\n            let idx = placeholdersAllIds.indexOf(activePlaceholder.id);\n            if (idx !== -1 && idx !== placeholdersAllIds.length - 1) nextPlaceholder = placeholdersAllIds[idx + 1];\n        }\n\n        dispatch(\n            cardSetActiveCardAndPlaceholder(\n                activeCard,\n                placeholders[nextPlaceholder].isOnBack || false,\n                nextPlaceholder,\n            ),\n        );\n    };\n\n    handleRaiseToTop = () => {\n        const { activePlaceholder, dispatch } = this.props;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetRaiseActivePlaceholderToTop());\n        }\n    };\n\n    handleLowerToBottom = () => {\n        const { activePlaceholder, dispatch } = this.props;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetLowerActivePlaceholderToBottom());\n        }\n    };\n\n    handleLockField = () => {\n        const { activePlaceholder, dispatch } = this.props;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetLockActivePlaceholder());\n        }\n    };\n\n    handleUnlockField = () => {\n        const { activePlaceholder, dispatch } = this.props;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetUnlockActivePlaceholder());\n        }\n    };\n\n    handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activePlaceholder, dispatch } = this.props;\n        const name = event.target.value.trim();\n        if (activePlaceholder !== null) {\n            dispatch(cardSetChangeActivePlaceholderName(name));\n        }\n    };\n\n    handleWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activePlaceholder, dispatch } = this.props;\n        const width = parseFloat(event.target.value);\n        if (activePlaceholder !== null) {\n            dispatch(cardSetChangePlaceholderSize(activePlaceholder, width, activePlaceholder.height));\n        }\n    };\n\n    handleHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activePlaceholder, dispatch } = this.props;\n        const height = parseFloat(event.target.value);\n        if (activePlaceholder !== null) {\n            dispatch(cardSetChangePlaceholderSize(activePlaceholder, activePlaceholder.width, height));\n        }\n    };\n\n    handleXChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activePlaceholder, dispatch } = this.props;\n        const x = parseFloat(event.target.value);\n        if (activePlaceholder !== null) {\n            dispatch(cardSetChangePlaceholderPosition(activePlaceholder, x, activePlaceholder.y));\n        }\n    };\n\n    handleYChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activePlaceholder, dispatch } = this.props;\n        const y = parseFloat(event.target.value);\n        if (activePlaceholder !== null) {\n            dispatch(cardSetChangePlaceholderPosition(activePlaceholder, activePlaceholder.x, y));\n        }\n    };\n\n    handleAngleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activePlaceholder, dispatch } = this.props;\n        const angle = (parseFloat(event.target.value) * Math.PI) / 180;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetChangePlaceholderAngle(activePlaceholder, angle));\n        }\n    };\n\n    render() {\n        const { activePlaceholder, visible } = this.props;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'initial' : 'none' }}>\n                <button onClick={this.handlePrevPlaceholder} title=\"Previous placeholder\">\n                    <i className=\"material-icons\">arrow_back</i>\n                </button>\n                <button onClick={this.handleNextPlaceholder} title=\"Next placeholder\">\n                    <i className=\"material-icons\">arrow_forward</i>\n                </button>\n\n                <button onClick={this.handleRaiseToTop} title=\"Raise to top\">\n                    <i className=\"material-icons\">arrow_upward</i>\n                </button>\n                <button onClick={this.handleLowerToBottom} title=\"Lower to bottom\">\n                    <i className=\"material-icons\">arrow_downward</i>\n                </button>\n\n                {activePlaceholder !== null && !activePlaceholder.locked && (\n                    <button\n                        onClick={this.handleLockField}\n                        title=\"Lock field. Locked field can't be dragged, rotated, resized and removed.\"\n                    >\n                        <i className=\"material-icons\">lock_open</i>\n                    </button>\n                )}\n\n                {activePlaceholder !== null && activePlaceholder.locked && (\n                    <button\n                        onClick={this.handleUnlockField}\n                        title=\"Unlock field. Unlocked field can be dragged, rotated, resized and removed.\"\n                    >\n                        <i className=\"material-icons\">lock</i>\n                    </button>\n                )}\n\n                {activePlaceholder !== null && (\n                    <div>\n                        <label>\n                            Field name:\n                            <input\n                                type=\"text\"\n                                value={activePlaceholder.type === 'text' ? activePlaceholder.name || '' : ''}\n                                placeholder={activePlaceholder.id}\n                                onChange={this.handleNameChange}\n                                title=\"Change name of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            Width:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={activePlaceholder.width}\n                                placeholder=\"Width\"\n                                onChange={this.handleWidthChange}\n                                title=\"Change width of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            Height:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={activePlaceholder.height}\n                                placeholder=\"Height\"\n                                onChange={this.handleHeightChange}\n                                title=\"Change width of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            X:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={activePlaceholder.x}\n                                placeholder=\"Width\"\n                                onChange={this.handleXChange}\n                                title=\"Change x coordinate of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            Y:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={activePlaceholder.y}\n                                placeholder=\"Height\"\n                                onChange={this.handleYChange}\n                                title=\"Change y coordinate of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            Angle:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={(activePlaceholder.angle * 180) / Math.PI}\n                                placeholder=\"Angle\"\n                                onChange={this.handleAngleChange}\n                                title=\"Change rotation angle of field.\"\n                            />\n                        </label>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    const activePlaceholder =\n        state.cardsets.activePlaceholder !== null\n            ? state.cardsets.placeholders[state.cardsets.activePlaceholder]\n            : null;\n\n    return {\n        activePlaceholder,\n        activeCard: state.cardsets.activeCard,\n        placeholders: state.cardsets.placeholders,\n        placeholdersAllIds: state.cardsets.placeholdersAllIds,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarMeasurements);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport WebFont from 'webfontloader';\n\nimport { DEFAULT_LINE_HEIGHT } from '../constants';\nimport {\n    Dispatch,\n    cardSetChangeActiveTextPlaceholderFontFamilyAndVariant,\n    cardSetChangeActiveTextPlaceholderFontSize,\n    cardSetChangeActiveTextPlaceholderFontVariant,\n    cardSetChangeActiveTextPlaceholderLineHeight,\n} from '../actions';\nimport { State } from '../reducers';\nimport style from './FontSelector.module.css';\nimport webfonts from './webfonts.json';\n\ninterface WebFontsInfo {\n    [propName: string]: {\n        [propName: string]: string;\n    };\n}\n\ninterface FontOption {\n    value: string;\n    label: string;\n}\n\nconst options: FontOption[] = Object.keys(webfonts)\n    .sort()\n    .map(fi => ({ value: fi, label: fi }));\n\ninterface StateProps {\n    activeFont: string;\n    activeFontVariant: string;\n    activeFontSize: number;\n    activeLineHeight: number;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = StateProps & DispatchProps;\n\nclass FontSelector extends Component<Props> {\n    getFontStringForLoad = (family: string, variant: string) => {\n        let stringForLoad = family;\n        if (variant !== 'regular') {\n            stringForLoad += ':' + variant;\n        }\n        return stringForLoad;\n    };\n\n    handleChange = (selectedOption?: FontOption | FontOption[] | null) => {\n        if (!selectedOption) return;\n\n        const fontFamily = (selectedOption as FontOption).value;\n\n        let fontVariant = this.props.activeFontVariant;\n        const wf: WebFontsInfo = webfonts;\n        if (!(fontVariant in wf[fontFamily])) {\n            fontVariant = Object.keys(wf[fontFamily]).sort()[0];\n        }\n\n        WebFont.load({\n            google: {\n                families: [this.getFontStringForLoad(fontFamily, fontVariant)],\n            },\n            active: () => {\n                const { dispatch } = this.props;\n                dispatch(cardSetChangeActiveTextPlaceholderFontFamilyAndVariant(fontFamily, fontVariant));\n            },\n        });\n    };\n\n    handleFontVariantChange = (selectedOption?: FontOption | FontOption[] | null) => {\n        if (!selectedOption) return;\n\n        const value = (selectedOption as FontOption).value;\n        WebFont.load({\n            google: {\n                families: [this.getFontStringForLoad(this.props.activeFont, value)],\n            },\n            active: () => {\n                const { dispatch } = this.props;\n                dispatch(cardSetChangeActiveTextPlaceholderFontVariant(value));\n            },\n        });\n    };\n\n    handleFontSizeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeActiveTextPlaceholderFontSize(parseFloat(event.target.value)));\n    };\n\n    handleLineHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeActiveTextPlaceholderLineHeight(parseFloat(event.target.value)));\n    };\n\n    render() {\n        const selectedFontFamily = options.find(f => f.value === this.props.activeFont);\n\n        const fontVariantOptions: FontOption[] = Object.keys((webfonts as WebFontsInfo)[this.props.activeFont])\n            .sort()\n            .map(fv => ({ value: fv, label: fv }));\n\n        const selectedFontVariant = fontVariantOptions.find(f => f.value === this.props.activeFontVariant);\n\n        return (\n            <>\n                <input\n                    type=\"number\"\n                    value={this.props.activeFontSize}\n                    onChange={this.handleFontSizeChange}\n                    title=\"Font size\"\n                />\n                <Select\n                    className={style.fontFamily}\n                    value={selectedFontFamily}\n                    onChange={this.handleChange}\n                    options={options}\n                />\n                <Select\n                    className={style.fontVariant}\n                    value={selectedFontVariant}\n                    onChange={this.handleFontVariantChange}\n                    options={fontVariantOptions}\n                />\n                <input\n                    type=\"number\"\n                    value={this.props.activeLineHeight}\n                    onChange={this.handleLineHeightChange}\n                    title=\"Line height\"\n                    step=\"0.01\"\n                />\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    let activeFont = state.cardsets.textSettings.fontFamily;\n    let activeFontVariant = state.cardsets.textSettings.fontVariant;\n    let activeFontSize = state.cardsets.textSettings.fontSize;\n    let activeLineHeight = state.cardsets.textSettings.lineHeight || DEFAULT_LINE_HEIGHT;\n\n    return {\n        activeFont,\n        activeFontVariant,\n        activeFontSize,\n        activeLineHeight,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, {}, State>(mapStateToProps)(FontSelector);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport {\n    PlaceholderType,\n    cardSetAddTextPlaceholder,\n    cardSetChangeActivePlaceholderName,\n    cardSetChangeActiveTextPlaceholderAlign,\n    cardSetLockActivePlaceholder,\n    cardSetLowerActivePlaceholderToBottom,\n    cardSetRaiseActivePlaceholderToTop,\n    cardSetRemoveActivePlaceholder,\n    cardSetUnlockActivePlaceholder,\n    cardSetChangeActiveTextPlaceholderColor,\n} from '../actions';\nimport { State } from '../reducers';\nimport ColorButton from './ColorButton';\nimport FontSelector from './FontSelector';\nimport style from './SidebarText.module.css';\nimport { ColorResult } from 'react-color';\n\ninterface StateProps {\n    isAuthenticated: boolean;\n    activePlaceholder: PlaceholderType | null;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarText extends Component<Props> {\n    handleAddTextClick = () => {\n        const { dispatch } = this.props;\n        dispatch(cardSetAddTextPlaceholder());\n    };\n\n    handleSetTextAlignLeft = () => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeActiveTextPlaceholderAlign('left'));\n    };\n\n    handleSetTextAlignCenter = () => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeActiveTextPlaceholderAlign('center'));\n    };\n\n    handleSetTextAlignRight = () => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeActiveTextPlaceholderAlign('right'));\n    };\n\n    handleRemoveClick = () => {\n        const { activePlaceholder, dispatch } = this.props;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetRemoveActivePlaceholder());\n        }\n    };\n\n    handleRaiseToTop = () => {\n        const { activePlaceholder, dispatch } = this.props;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetRaiseActivePlaceholderToTop());\n        }\n    };\n\n    handleLowerToBottom = () => {\n        const { activePlaceholder, dispatch } = this.props;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetLowerActivePlaceholderToBottom());\n        }\n    };\n\n    handleLockField = () => {\n        const { activePlaceholder, dispatch } = this.props;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetLockActivePlaceholder());\n        }\n    };\n\n    handleUnlockField = () => {\n        const { activePlaceholder, dispatch } = this.props;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetUnlockActivePlaceholder());\n        }\n    };\n\n    handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activePlaceholder, dispatch } = this.props;\n        const name = event.target.value.trim();\n        if (activePlaceholder !== null) {\n            dispatch(cardSetChangeActivePlaceholderName(name));\n        }\n    };\n\n    handleColorChange = (color: ColorResult) => {\n        const selection = window.getSelection();\n        const range = selection.getRangeAt(0);\n        if (selection.rangeCount === 1 && range.collapsed) {\n            const { dispatch } = this.props;\n            dispatch(cardSetChangeActiveTextPlaceholderColor(color.hex));\n        } else {\n            document.execCommand('forecolor', false, color.hex);\n        }\n    };\n\n    render() {\n        const { activePlaceholder, visible } = this.props;\n\n        let color = '#000000';\n        if (activePlaceholder && activePlaceholder.type === 'text' && activePlaceholder.color) {\n            color = activePlaceholder.color;\n        }\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'initial' : 'none' }}>\n                <button onClick={this.handleAddTextClick} title=\"Add text field\">\n                    <i className=\"material-icons\">text_fields</i>\n                </button>\n                <button onClick={this.handleRaiseToTop} title=\"Raise text to top\">\n                    <i className=\"material-icons\">arrow_upward</i>\n                </button>\n                <button onClick={this.handleLowerToBottom} title=\"Lower text to bottom\">\n                    <i className=\"material-icons\">arrow_downward</i>\n                </button>\n\n                {activePlaceholder !== null && !activePlaceholder.locked && (\n                    <button\n                        onClick={this.handleLockField}\n                        title=\"Lock text field. Locked field can't be dragged, rotated, resized and removed.\"\n                    >\n                        <i className=\"material-icons\">lock_open</i>\n                    </button>\n                )}\n\n                {activePlaceholder !== null && activePlaceholder.locked && (\n                    <button\n                        onClick={this.handleUnlockField}\n                        title=\"Unlock text field. Unlocked text field can be dragged, rotated, resized and removed.\"\n                    >\n                        <i className=\"material-icons\">lock</i>\n                    </button>\n                )}\n\n                <button\n                    className={activePlaceholder === null || activePlaceholder.locked ? style.disabled : ''}\n                    onClick={this.handleRemoveClick}\n                    title=\"Remove field\"\n                >\n                    <i className=\"material-icons\">remove</i>\n                </button>\n\n                {activePlaceholder !== null && (\n                    <input\n                        type=\"text\"\n                        value={activePlaceholder.type === 'text' ? activePlaceholder.name || '' : ''}\n                        placeholder={activePlaceholder.id}\n                        onChange={this.handleNameChange}\n                        title=\"Change name of text field.\"\n                    />\n                )}\n\n                <div>\n                    <button onClick={this.handleSetTextAlignLeft} title=\"Align text left\">\n                        <i className=\"material-icons\">format_align_left</i>\n                    </button>\n                    <button onClick={this.handleSetTextAlignCenter} title=\"Align text center\">\n                        <i className=\"material-icons\">format_align_center</i>\n                    </button>\n                    <button onClick={this.handleSetTextAlignRight} title=\"Align text right\">\n                        <i className=\"material-icons\">format_align_right</i>\n                    </button>\n                    <ColorButton color={color} onChange={this.handleColorChange} />\n                    <FontSelector />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    const activePlaceholder =\n        state.cardsets.activePlaceholder !== null\n            ? state.cardsets.placeholders[state.cardsets.activePlaceholder]\n            : null;\n\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        activePlaceholder,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarText);\n","import 'filepond/dist/filepond.min.css';\n\nimport './SidebarUpload.css';\n\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport { connect } from 'react-redux';\nimport FilePondPluginFileValidateSize from 'filepond-plugin-file-validate-size';\nimport FilePondPluginFileValidateType from 'filepond-plugin-file-validate-type';\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport {\n    FPAbortCallback,\n    FPErrorCallback,\n    FPLoadCallback,\n    FPProgressCallback,\n    FPRevertLoadCallback,\n    cardSetDeleteImage,\n    cardSetUploadImage,\n} from '../actions';\nimport { State } from '../reducers';\nimport style from './SidebarUpload.module.css';\n\nregisterPlugin(FilePondPluginFileValidateSize);\nregisterPlugin(FilePondPluginFileValidateType);\n\ninterface StateProps {\n    activeGame: string | null;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarUpload extends Component<Props> {\n    handleProcess = (\n        fieldName: string,\n        file: File,\n        metadata: { [propName: string]: string },\n        load: FPLoadCallback,\n        error: FPErrorCallback,\n        progress: FPProgressCallback,\n        abort: FPAbortCallback,\n    ) => {\n        const { dispatch, activeGame } = this.props;\n\n        if (activeGame === null) {\n            abort();\n            return;\n        }\n\n        let source = axios.CancelToken.source();\n\n        dispatch(cardSetUploadImage(activeGame, file, load, error, progress, abort, source.token));\n\n        return { abort: source.cancel };\n    };\n\n    handleRevert = (uniqueFileId: string, load: FPRevertLoadCallback, error: FPErrorCallback) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetDeleteImage(uniqueFileId, load, error));\n    };\n\n    render() {\n        const { visible } = this.props;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'grid' : 'none' }}>\n                <div>\n                    Uploaded imaged are kept for limited time. If they are deleted then simply re-upload them again.\n                </div>\n                <FilePond\n                    allowMultiple={true}\n                    server={{\n                        process: this.handleProcess,\n                        revert: this.handleRevert,\n                    }}\n                    acceptedFileTypes={['image/png', 'image/jpeg', 'image/svg+xml']}\n                    allowFileSizeValidation={true}\n                    maxFileSize=\"500KB\"\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        activeGame: state.games.active,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarUpload);\n","import { connect, ConnectedComponentClass } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport { SidebarState, cardSetSetSidebarState } from '../actions';\nimport { State } from '../reducers';\nimport SidebarDetails from './SidebarDetails';\nimport SidebarImage from './SidebarImage';\nimport SidebarImportExport from './SidebarImportExport';\nimport SidebarMeasurements from './SidebarMeasurements';\nimport SidebarText from './SidebarText';\nimport SidebarUpload from './SidebarUpload';\nimport style from './Sidebar.module.css';\n\ninterface StateProps {\n    isAuthenticated: boolean;\n    activeSidebar: SidebarState | null;\n}\n\ntype Props = StateProps & DispatchProps;\n\ninterface SidebarInfo {\n    state: SidebarState;\n    title: string;\n    icon: string;\n    component: ConnectedComponentClass<typeof Component, SidebarOwnProps>;\n}\n\nconst SIDEBARS: SidebarInfo[] = [\n    {\n        state: SidebarState.Details,\n        title: 'Details',\n        icon: 'details',\n        component: SidebarDetails,\n    },\n    {\n        state: SidebarState.Measurements,\n        title: 'Measurements',\n        icon: 'format_shapes',\n        component: SidebarMeasurements,\n    },\n    {\n        state: SidebarState.Image,\n        title: 'Images',\n        icon: 'photo',\n        component: SidebarImage,\n    },\n    {\n        state: SidebarState.Text,\n        title: 'Texts',\n        icon: 'text_fields',\n        component: SidebarText,\n    },\n    {\n        state: SidebarState.Upload,\n        title: 'Upload',\n        icon: 'cloud_upload',\n        component: SidebarUpload,\n    },\n    {\n        state: SidebarState.ImportExport,\n        title: 'Import/Export',\n        icon: 'import_export',\n        component: SidebarImportExport,\n    },\n    // picture_as_pdf\n];\n\nexport class Sidebar extends Component<Props> {\n    handleSidebar = (state: SidebarState) => {\n        const { activeSidebar, dispatch } = this.props;\n        if (activeSidebar === state) {\n            dispatch(cardSetSetSidebarState(null));\n        } else {\n            dispatch(cardSetSetSidebarState(state));\n        }\n    };\n\n    render() {\n        const { activeSidebar } = this.props;\n        return (\n            <div className={style.sidebar}>\n                <div className={style.controls}>\n                    {SIDEBARS.map(sb => (\n                        <i\n                            key={sb.state}\n                            title={sb.title}\n                            className={`material-icons ${activeSidebar === sb.state ? style.active : ''}`}\n                            onClick={() => this.handleSidebar(sb.state)}\n                        >\n                            {sb.icon}\n                        </i>\n                    ))}\n                </div>\n                <div className={`${style.view} ${activeSidebar === null ? style.hidden : ''}`}>\n                    {SIDEBARS.map(sb => (\n                        <sb.component key={sb.state} visible={activeSidebar === sb.state} />\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        activeSidebar: state.cardsets.activeSidebar,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, {}, State>(mapStateToProps)(Sidebar);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport shortid from 'shortid';\n\nimport { ACTIVITY_SELECTING, State } from '../reducers';\nimport { BLEED_WIDTH } from '../constants';\nimport {\n    CardSetType,\n    CardType,\n    CardsCollection,\n    Dispatch,\n    cardSetActiveCardAndPlaceholder,\n    cardSetChangeHeight,\n    cardSetChangeIsTwoSided,\n    cardSetChangeWidth,\n    cardSetCreateCard,\n    cardSetRenameRequest,\n    cardSetSetZoom,\n} from '../actions';\nimport Card from './Card';\nimport EditableTitle from './EditableTitle';\nimport KawaiiMessage, { Character } from './KawaiiMessage';\nimport Loader from './Loader';\nimport PDFGenerator from './PDFGenerator';\nimport Sidebar from './Sidebar';\nimport style from './CardSet.module.css';\n\ninterface StateProps {\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    isAuthenticated: boolean;\n    cardsAllIds: string[];\n    cardsById: CardsCollection;\n    activity: number;\n    zoom: number;\n    activeCardSet: CardSetType | null;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = StateProps & DispatchProps;\n\ninterface LocalState {\n    pageWidth: number;\n    pageHeight: number;\n    topBottomMargin: number;\n    leftRightMargin: number;\n}\n\nexport class CardSet extends Component<Props, LocalState> {\n    state = {\n        pageWidth: 210,\n        pageHeight: 297,\n        topBottomMargin: 15,\n        leftRightMargin: 9,\n    };\n\n    handleCreateCardClick = () => {\n        const { dispatch } = this.props;\n\n        const newCard: CardType = { id: shortid.generate(), count: 1 };\n\n        dispatch(cardSetCreateCard(newCard));\n    };\n\n    handleWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeWidth(parseFloat(event.target.value)));\n    };\n\n    handleHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeHeight(parseFloat(event.target.value)));\n    };\n\n    handleIsTwoSidedChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeIsTwoSided(event.target.checked));\n    };\n\n    handleZoom = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetSetZoom(parseFloat(event.target.value)));\n    };\n\n    handleClickOutsideOfCard = () => {\n        const { dispatch } = this.props;\n        dispatch(cardSetActiveCardAndPlaceholder(null, false, null));\n    };\n\n    handleCardSetNameChange = (newName: string) => {\n        const { dispatch, activeCardSet } = this.props;\n        if (activeCardSet !== null) {\n            dispatch(cardSetRenameRequest(activeCardSet.id, newName));\n        }\n    };\n\n    render() {\n        const {\n            isAuthenticated,\n            cardsAllIds,\n            cardsById,\n            width,\n            height,\n            isTwoSided,\n            activity,\n            zoom,\n            activeCardSet,\n        } = this.props;\n\n        const widthWithBleeds = width + BLEED_WIDTH * 2;\n        const heightWithBleeds = height + BLEED_WIDTH * 2;\n\n        return (\n            isAuthenticated && (\n                <div>\n                    <KawaiiMessage character={Character.Ghost}>\n                        <p>Here you can design your cards.</p>\n                    </KawaiiMessage>\n\n                    <div className={style.cardsetview}>\n                        <div className={style.sidebar}>\n                            <Sidebar />\n                        </div>\n                        <div onMouseDown={this.handleClickOutsideOfCard} onTouchStart={this.handleClickOutsideOfCard}>\n                            {activeCardSet !== null && (\n                                <EditableTitle title={activeCardSet.name} onChange={this.handleCardSetNameChange} />\n                            )}\n\n                            <div className=\"form\">\n                                <label htmlFor=\"card_width\">Card width (mm):</label>\n                                <input\n                                    id=\"card_width\"\n                                    type=\"number\"\n                                    min=\"0\"\n                                    step=\"0.1\"\n                                    onChange={this.handleWidthChange}\n                                    className=\"form-control\"\n                                    placeholder=\"width\"\n                                    value={width}\n                                />\n                                <label htmlFor=\"card_height\">Card height (mm):</label>\n                                <input\n                                    id=\"card_height\"\n                                    type=\"number\"\n                                    min=\"0\"\n                                    step=\"0.1\"\n                                    onChange={this.handleHeightChange}\n                                    className=\"form-control\"\n                                    placeholder=\"height\"\n                                    value={height}\n                                />\n                                <label>\n                                    Cards have two sides:{' '}\n                                    <input\n                                        type=\"checkbox\"\n                                        onChange={this.handleIsTwoSidedChange}\n                                        className=\"form-control\"\n                                        checked={isTwoSided}\n                                    />\n                                </label>\n                            </div>\n                            <div className=\"form\">\n                                <label htmlFor=\"zoom\">Zoom (if you want to see details or big picture)</label>\n                                <input\n                                    id=\"zoom\"\n                                    type=\"number\"\n                                    min=\"0.1\"\n                                    step=\"0.1\"\n                                    onChange={this.handleZoom}\n                                    className=\"form-control\"\n                                    placeholder=\"zoom\"\n                                    value={zoom}\n                                />\n                            </div>\n                            {(activity & ACTIVITY_SELECTING) === ACTIVITY_SELECTING && <Loader />}\n                            <div className={style.cardset}>\n                                <ul\n                                    style={{\n                                        gridTemplateColumns: `repeat(auto-fill, minmax(${widthWithBleeds *\n                                            zoom}mm, 1fr))`,\n                                    }}\n                                >\n                                    {cardsAllIds &&\n                                        cardsAllIds.map(cardId => [\n                                            <li key={cardId}>\n                                                <Card card={cardsById[cardId]} isBack={false} />\n                                            </li>,\n                                            isTwoSided && (\n                                                <li key={`${cardId}back`}>\n                                                    <Card card={cardsById[cardId]} isBack={true} />\n                                                </li>\n                                            ),\n                                        ])}\n                                    <li key=\"newCard\">\n                                        <div\n                                            id=\"newCard\"\n                                            className={style.createCard}\n                                            style={{\n                                                width: `${widthWithBleeds * zoom}mm`,\n                                                height: `${heightWithBleeds * zoom}mm`,\n                                                position: 'relative',\n                                                overflow: 'hidden',\n                                            }}\n                                            onClick={this.handleCreateCardClick}\n                                        >\n                                            <div>\n                                                <i className=\"material-icons\">add</i>\n                                                <div>Add Card</div>\n                                            </div>\n                                        </div>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n\n                    {activeCardSet !== null && <PDFGenerator type=\"cardsets\" id={activeCardSet.id} />}\n                </div>\n            )\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        activity: state.cardsets.activity,\n        width: state.cardsets.width,\n        height: state.cardsets.height,\n        isTwoSided: state.cardsets.isTwoSided,\n        zoom: state.cardsets.zoom,\n        isAuthenticated: state.auth.isAuthenticated,\n        cardsAllIds: state.cardsets.cardsAllIds,\n        cardsById: state.cardsets.cardsById,\n        activeCardSet:\n            state.cardsets.active && state.cardsets.byId[state.cardsets.active]\n                ? state.cardsets.byId[state.cardsets.active]\n                : null,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, {}, State>(mapStateToProps)(CardSet);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, cardSetSelectRequest } from './actions';\nimport { State } from './reducers';\nimport CardSet from './components/CardSet';\n\ninterface Props {\n    dispatch: Dispatch;\n    match: { params: { id: string } };\n    isAuthenticated: boolean;\n}\n\nexport class CardSetPage extends Component<Props> {\n    componentDidMount() {\n        const { dispatch, match } = this.props;\n        dispatch(cardSetSelectRequest(match.params.id));\n    }\n\n    render() {\n        return <CardSet />;\n    }\n}\n\nconst mapStateToProps = (state: State) => ({ isAuthenticated: state.auth.isAuthenticated });\n\nexport default connect(mapStateToProps)(CardSetPage);\n","import React, { Component } from 'react';\n\nexport default class ChangelogPage extends Component {\n    render() {\n        return (\n            <div>\n                <p>Here you can find list of future plans and what was implemented recently.</p>\n                <h2>Future plans</h2>\n                <ul>\n                    <li>\n                        Image improvements:\n                        <ul>\n                            <li>Generating list of author's of icons if attribution is required.</li>\n                            <li>Various ideas for advanced images controls.</li>\n                        </ul>\n                    </li>\n                    <li>Card templates.</li>\n                    <li>UI improvements (snapping, keyboard support and etc.).</li>\n                    <li>Possibility to order your games for printing from various printing providers.</li>\n                </ul>\n                <h2>2019-03-22</h2>\n                <ul>\n                    <li>Two-sided cards.</li>\n                    <li>PDF generation for all the game.</li>\n                    <li>More PDF generation options added</li>\n                    <li>Change color of images (for SVG images only, e.g. try using with \"forms\" images).</li>\n                    <li>Game rename and delete</li>\n                    <li>Card Set rename and delete</li>\n                    <li>Text: line height support</li>\n                    <li>UI/UX improvements</li>\n                </ul>\n                <h2>2019-03-03</h2>\n                <ul>\n                    <li>Data import/export in JSON and CSV formats.</li>\n                    <li>\n                        Named fields. If multiple fields have the same name then by editing one you change value in all\n                        of them. As well named fields look better in data export/import.\n                    </li>\n                </ul>\n\n                <h2>2019-03-02</h2>\n                <ul>\n                    <li>You can upload your own images now. Images are limited.</li>\n                    <li>\n                        Image order support added. E.g.: now you can upload background image and lower it to the bottom.\n                    </li>\n                    <li>Progress indicators and user messages improvements.</li>\n                </ul>\n\n                <h2>2019-02-24</h2>\n                <ul>\n                    <li>Sidebar created for lighter, cleaner and faster UI.</li>\n                    <li>Zoom added to card set for more flexibility while viewing or editing.</li>\n                </ul>\n                <h2>2019-02-23</h2>\n                <ul>\n                    <li>Text rendering changed and should be working properly now.</li>\n                    <li>Crash with new card set fixed.</li>\n                    <li>Minor UI improvements.</li>\n                </ul>\n                <h2>2019-02-17</h2>\n                <p>Initial public version.</p>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\n\ninterface Props {\n    children: React.ReactNode;\n}\n\ninterface State {\n    hasError: boolean;\n}\n\nexport default class ErrorBoundary extends Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    componentDidCatch() {\n        this.setState({ hasError: true });\n        // You can also log the error to an error reporting service\n        // logErrorToMyService(error, info);\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return (\n                <KawaiiMessage character={Character.Browser} mood=\"ko\">\n                    Something unexpected has happened. If you want this problem to be fixed write me to{' '}\n                    <a href=\"mailto:dalius@ffff.lt\">dalius@ffff.lt</a>.\n                </KawaiiMessage>\n            );\n        }\n        return this.props.children;\n    }\n}\n","import React, { Component } from 'react';\nimport style from './ConfirmedDelete.module.css';\n\ninterface Props {\n    question: string;\n    onDelete: () => void;\n}\n\nexport default class ConfirmedDelete extends Component<Props> {\n    state = {\n        deleteClicked: false,\n    };\n\n    handleRemove = () => {\n        this.setState({ deleteClicked: !this.state.deleteClicked });\n    };\n\n    handleYes = () => {\n        this.setState({ deleteClicked: false });\n        this.props.onDelete();\n    };\n\n    handleNo = () => {\n        this.setState({ deleteClicked: false });\n    };\n\n    render() {\n        const { deleteClicked } = this.state;\n        const { question } = this.props;\n\n        return (\n            <>\n                <i title=\"Remove\" className={`material-icons ${style.button}`} onClick={this.handleRemove}>\n                    remove_circle_outline\n                </i>{' '}\n                {deleteClicked && (\n                    <>\n                        {question}{' '}\n                        <span className={style.answer} onClick={this.handleYes}>\n                            Yes\n                        </span>{' '}\n                        /{' '}\n                        <span className={style.answer} onClick={this.handleNo}>\n                            No\n                        </span>\n                    </>\n                )}\n            </>\n        );\n    }\n}\n","import { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport {\n    CardSetsCollection,\n    Dispatch,\n    GameType,\n    IdsArray,\n    cardSetCreateRequest,\n    cardSetDeleteRequest,\n    gameRenameRequest,\n    messageDisplay,\n} from '../actions';\nimport { State } from '../reducers';\nimport ConfirmedDelete from './ConfirmedDelete';\nimport EditableTitle from './EditableTitle';\nimport KawaiiMessage, { Character } from './KawaiiMessage';\nimport PDFGenerator from './PDFGenerator';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated: boolean;\n    activeGame: GameType | null;\n    allIds: IdsArray;\n    byId: CardSetsCollection;\n}\n\ninterface LocalState {\n    cardSetName: string;\n    width: number;\n    height: number;\n}\n\nexport class CardSets extends Component<Props, LocalState> {\n    state: LocalState = {\n        cardSetName: '',\n        width: 63.5,\n        height: 88.9,\n    };\n\n    handleGameNameChange = (newName: string) => {\n        const { dispatch, activeGame } = this.props;\n        if (activeGame !== null) {\n            dispatch(gameRenameRequest(activeGame.id, newName));\n        }\n    };\n\n    handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ cardSetName: event.target.value });\n    };\n\n    handleWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ width: parseFloat(event.target.value) });\n    };\n\n    handleHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ height: parseFloat(event.target.value) });\n    };\n\n    handleCreateCardSetClick = () => {\n        const { dispatch, activeGame } = this.props;\n\n        if (activeGame === null) {\n            return;\n        }\n\n        const cardSetName = this.state.cardSetName.trim();\n\n        if (cardSetName) {\n            dispatch(cardSetCreateRequest(cardSetName, this.state.width, this.state.height, activeGame.id));\n        } else {\n            dispatch(messageDisplay('error', 'Card Set name should be non empty.'));\n        }\n    };\n\n    handleCardSetDelete = (cardSetId: string) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetDeleteRequest(cardSetId));\n    };\n\n    render() {\n        const { isAuthenticated, activeGame, allIds, byId } = this.props;\n\n        const cardsetItems = allIds\n            .map(gameId => byId[gameId])\n            .map(cardset => (\n                <li key={cardset.id}>\n                    <Link to={`/cardset/${cardset.id}`}>{cardset.name}</Link>{' '}\n                    <ConfirmedDelete\n                        question=\"Do you really want to delete this card set?\"\n                        onDelete={() => this.handleCardSetDelete(cardset.id)}\n                    />\n                </li>\n            ));\n\n        return (\n            isAuthenticated &&\n            activeGame !== null && (\n                <div>\n                    <KawaiiMessage character={Character.Ghost}>\n                        Each game is made from card sets. Card set is collection of cards that share the same properties\n                        but have different text and images.\n                    </KawaiiMessage>\n\n                    <EditableTitle title={activeGame.name} onChange={this.handleGameNameChange} />\n\n                    <ul>{cardsetItems}</ul>\n\n                    <div className=\"form\">\n                        <label htmlFor=\"cardset_name\">Card Set name:</label>\n                        <input\n                            id=\"cardset_name\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            className=\"form-control\"\n                            placeholder=\"Card Set name\"\n                        />\n                        <label htmlFor=\"card_width\">Card width:</label>\n                        <input\n                            id=\"card_width\"\n                            type=\"number\"\n                            min=\"0\"\n                            step=\"0.1\"\n                            onChange={this.handleWidthChange}\n                            className=\"form-control\"\n                            placeholder=\"Card width\"\n                            value={this.state.width}\n                        />\n                        <label htmlFor=\"card_height\">Card height:</label>\n                        <input\n                            id=\"card_height\"\n                            type=\"number\"\n                            min=\"0\"\n                            step=\"0.1\"\n                            onChange={this.handleHeightChange}\n                            className=\"form-control\"\n                            placeholder=\"Card height\"\n                            value={this.state.height}\n                        />\n                        <button onClick={this.handleCreateCardSetClick}>Create Card Set</button>\n                    </div>\n\n                    <KawaiiMessage character={Character.Ghost} mood=\"excited\">\n                        Hint: Poker card size 63.5mm x 88.9mm. Bridge card size 56mm x 88.9mm. But you can cards of any\n                        size.\n                    </KawaiiMessage>\n\n                    <PDFGenerator type=\"games\" id={activeGame.id} />\n                </div>\n            )\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        activeGame:\n            state.games.active && state.games.byId[state.games.active] ? state.games.byId[state.games.active] : null,\n        allIds: state.cardsets.allIds,\n        byId: state.cardsets.byId,\n    };\n};\n\nexport default connect(mapStateToProps)(CardSets);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, gameSelectRequest } from './actions';\nimport { State } from './reducers';\nimport CardSets from './components/CardSets';\n\ninterface Props {\n    dispatch: Dispatch;\n    match: { params: { id: string } };\n    isAuthenticated: boolean;\n}\n\nexport class GamePage extends Component<Props> {\n    componentDidMount() {\n        const { dispatch, match } = this.props;\n        dispatch(gameSelectRequest(match.params.id, true));\n    }\n\n    render() {\n        return <CardSets />;\n    }\n}\n\nconst mapStateToProps = (state: State) => ({ isAuthenticated: state.auth.isAuthenticated });\n\nexport default connect(mapStateToProps)(GamePage);\n","import React, { Component } from 'react';\n\ninterface Props {\n    onLogin: (creds: { username: string; password: string }) => void;\n    onLoginFailure: (message: string) => void;\n}\n\ninterface LocalState {\n    username: string;\n    password: string;\n}\n\nexport default class Login extends Component<Props, LocalState> {\n    state = {\n        username: '',\n        password: '',\n    };\n\n    handleUsernameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ username: event.target.value });\n    };\n\n    handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ password: event.target.value });\n    };\n\n    handleSubmit = (event: React.FormEvent) => {\n        const username = this.state.username.trim();\n        const password = this.state.password.trim();\n        if (username && password) {\n            const creds = { username, password };\n            this.props.onLogin(creds);\n        } else {\n            this.props.onLoginFailure('Missing username and/or password.');\n        }\n        event.preventDefault();\n    };\n\n    render() {\n        return (\n            <div>\n                <form className=\"form\" onSubmit={this.handleSubmit}>\n                    <input\n                        type=\"text\"\n                        onChange={this.handleUsernameChange}\n                        className=\"form-control\"\n                        placeholder=\"Username\"\n                    />\n                    <input\n                        type=\"password\"\n                        onChange={this.handlePasswordChange}\n                        className=\"form-control\"\n                        placeholder=\"Password\"\n                    />\n                    <input type=\"submit\" value=\"Login\" />\n                </form>\n            </div>\n        );\n    }\n}\n","import { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, loginRequest, messageDisplay } from './actions';\nimport { State } from './reducers';\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\nimport Login from './components/Login';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated: boolean;\n}\n\nexport class LoginPage extends Component<Props> {\n    render() {\n        const { dispatch, isAuthenticated } = this.props;\n\n        return (\n            <div className=\"App\">\n                {!isAuthenticated && (\n                    <>\n                        <KawaiiMessage character={Character.Ghost}>\n                            Please enter your credentials to login. If you don't have account yet then you can create\n                            one here: <a href=\"/signup\">Sign-up</a>.\n                        </KawaiiMessage>\n\n                        <Login\n                            onLogin={creds => dispatch(loginRequest(creds))}\n                            onLoginFailure={msg => dispatch(messageDisplay('error', msg))}\n                        />\n                    </>\n                )}\n                {isAuthenticated && <Redirect to=\"/\" />}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => ({ isAuthenticated: state.auth.isAuthenticated });\n\nexport default connect(mapStateToProps)(LoginPage);\n","import { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, GamesCollection, IdsArray, gameCreateRequest, gameDeleteRequest, messageDisplay } from '../actions';\nimport { State } from '../reducers';\nimport ConfirmedDelete from './ConfirmedDelete';\nimport KawaiiMessage, { Character } from './KawaiiMessage';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated: boolean;\n    allIds: IdsArray;\n    byId: GamesCollection;\n}\n\ninterface LocalState {\n    gameName: string;\n}\n\nexport class Games extends Component<Props, LocalState> {\n    state: LocalState = {\n        gameName: '',\n    };\n\n    handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ gameName: event.target.value });\n    };\n\n    handleCreateGameClick = () => {\n        const { dispatch } = this.props;\n\n        const gamename = this.state.gameName.trim();\n        if (gamename) {\n            dispatch(gameCreateRequest(gamename));\n        } else {\n            dispatch(messageDisplay('error', 'Game name should be non empty.'));\n        }\n    };\n\n    handleGameDelete = (gameId: string) => {\n        const { dispatch } = this.props;\n        dispatch(gameDeleteRequest(gameId));\n    };\n\n    render() {\n        const { isAuthenticated, allIds, byId } = this.props;\n\n        const gameItems = allIds\n            .map(gameId => byId[gameId])\n            .map(game => (\n                <li key={game.id}>\n                    <Link to={`/game/${game.id}`}>{game.name}</Link>{' '}\n                    <ConfirmedDelete\n                        question=\"Do you really want to delete this game?\"\n                        onDelete={() => this.handleGameDelete(game.id)}\n                    />\n                </li>\n            ));\n\n        return (\n            isAuthenticated && (\n                <div>\n                    <KawaiiMessage character={Character.Ghost}>\n                        {allIds.length === 0 && (\n                            <>Here you can create your games and see list of your games when you have some.</>\n                        )}\n                        {allIds.length > 0 && (\n                            <>Here you can see a list of your games or you can create even more games.</>\n                        )}\n                    </KawaiiMessage>\n\n                    <ul>{gameItems}</ul>\n                    <div className=\"form\">\n                        <label htmlFor=\"game_name\">Game name:</label>\n                        <input\n                            id=\"game_name\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            className=\"form-control\"\n                            placeholder=\"Game name\"\n                        />\n                        <button onClick={this.handleCreateGameClick}>Create Game</button>\n                    </div>\n                </div>\n            )\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        allIds: state.games.allIds,\n        byId: state.games.byId,\n    };\n};\n\nexport default connect(mapStateToProps)(Games);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { State } from './reducers';\nimport Games from './components/Games';\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\n\ninterface Props {\n    isAuthenticated: boolean;\n}\n\nexport class Main extends Component<Props> {\n    render() {\n        if (this.props.isAuthenticated) {\n            return <Games />;\n        } else {\n            return (\n                <KawaiiMessage character={Character.Ghost}>\n                    Hey! Here you can create your own card game but you need to <a href=\"/login\">Login</a> or{' '}\n                    <a href=\"/signup\">Sign-up</a> first.\n                </KawaiiMessage>\n            );\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n    };\n};\n\nexport default connect(mapStateToProps)(Main);\n","import { State } from './reducers';\n\nexport const getActiveGame = (state: State) => (state.games.active ? state.games.byId[state.games.active] : null);\n\nexport const getActiveCardSet = (state: State) =>\n    state.cardsets.active ? state.cardsets.byId[state.cardsets.active] : null;\n","import React from 'react';\n\ninterface Props {\n    onLogout: () => void;\n}\n\nfunction Logout(props: Props) {\n    return (\n        <button onClick={() => props.onLogout()} className=\"btn btn-primary\">\n            Logout\n        </button>\n    );\n}\n\nexport default Logout;\n","import { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { CardSetType, Dispatch, GameType, MessageType, logoutRequest } from '../actions';\nimport { State } from '../reducers';\nimport { getActiveCardSet, getActiveGame } from '../selectors';\nimport Loader from './Loader';\nimport Logout from './Logout';\nimport style from './Navbar.module.css';\n\ninterface OwnProps {\n    isAuthenticated: boolean;\n}\n\ninterface StateProps {\n    messages: MessageType[];\n    activeGame: GameType | null;\n    activeCardSet: CardSetType | null;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nexport class Navbar extends Component<Props> {\n    render() {\n        const { dispatch, isAuthenticated, messages, activeGame, activeCardSet } = this.props;\n\n        return (\n            <nav>\n                <div id=\"messages\" className={style.messages}>\n                    <ul>\n                        {messages.map(m => (\n                            <li key={m.id} className={m.type === 'error' ? style.error : style.info}>\n                                {m.type === 'error' && (\n                                    <>\n                                        <i className=\"material-icons\">error</i> {m.text}\n                                    </>\n                                )}\n                                {m.type === 'info' && (\n                                    <>\n                                        <i className=\"material-icons\">info</i> {m.text}\n                                    </>\n                                )}\n                                {m.type === 'progress' && (\n                                    <>\n                                        <Loader small={true} /> {m.text}\n                                    </>\n                                )}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n                <div>\n                    <h1 className={style.header}>\n                        <Link to=\"/\">CARD-A-MON</Link>\n                    </h1>\n                    <div>\n                        <ul className={style.menu}>\n                            {isAuthenticated && (\n                                <>\n                                    <li>\n                                        <Link to=\"/\">Main</Link>\n                                    </li>\n                                    {activeGame && (\n                                        <li>\n                                            <Link to={`/game/${activeGame.id}`}>Game \"{activeGame.name}\"</Link>\n                                        </li>\n                                    )}\n                                    {activeCardSet && (\n                                        <li>\n                                            <Link to={`/cardset/${activeCardSet.id}`}>\n                                                Card Set \"{activeCardSet.name}\"\n                                            </Link>\n                                        </li>\n                                    )}\n                                </>\n                            )}\n                            <li>\n                                <Link to=\"/changelog\">Changelog</Link>\n                            </li>\n                            <li>\n                                <Link to=\"/about\">About</Link>\n                            </li>\n                            {isAuthenticated && (\n                                <li>\n                                    <Logout onLogout={() => dispatch(logoutRequest())} />\n                                </li>\n                            )}\n                            {!isAuthenticated && (\n                                <>\n                                    <li>\n                                        <Link to=\"/login\">Login</Link>\n                                    </li>\n                                    <li>\n                                        <Link to=\"/signup\">Sign-up</Link>\n                                    </li>\n                                </>\n                            )}\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        messages: state.message.messages,\n        activeGame: getActiveGame(state),\n        activeCardSet: getActiveCardSet(state),\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(Navbar);\n","import React, { Component } from 'react';\n\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\n\nexport default class NotFoundPage extends Component {\n    render() {\n        return (\n            <KawaiiMessage character={Character.Browser} mood=\"sad\">\n                There is nothing here.\n            </KawaiiMessage>\n        );\n    }\n}\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Credentials, Dispatch, messageDisplay } from '../actions';\n\ninterface Props {\n    dispatch: Dispatch;\n    onSignUp: (cred: Credentials) => void;\n}\n\nexport class SignUp extends Component<Props> {\n    state = {\n        username: '',\n        password: '',\n        passwordRepeat: '',\n    };\n\n    handleSubmit(event: React.FormEvent) {\n        const { dispatch, onSignUp } = this.props;\n\n        if (this.state.password !== this.state.passwordRepeat) {\n            dispatch(messageDisplay('error', 'Passwords do not match.'));\n        } else {\n            const creds = {\n                username: this.state.username.trim(),\n                password: this.state.password.trim(),\n            };\n            onSignUp(creds);\n        }\n\n        event.preventDefault();\n    }\n\n    handleUsernameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ username: event.target.value });\n    };\n\n    handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ password: event.target.value });\n    };\n\n    handlePasswordRepeatChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ passwordRepeat: event.target.value });\n    };\n\n    render() {\n        return (\n            <div>\n                <form className=\"form\" onSubmit={event => this.handleSubmit(event)}>\n                    <input\n                        type=\"text\"\n                        onChange={this.handleUsernameChange}\n                        className=\"form-control\"\n                        placeholder=\"Username\"\n                    />\n                    <input\n                        type=\"password\"\n                        onChange={this.handlePasswordChange}\n                        className=\"form-control\"\n                        placeholder=\"Password\"\n                    />\n                    <input\n                        type=\"password\"\n                        onChange={this.handlePasswordRepeatChange}\n                        className=\"form-control\"\n                        placeholder=\"Repeat password here\"\n                    />\n                    <input type=\"submit\" value=\"Sign Up\" />\n                </form>\n            </div>\n        );\n    }\n}\nexport default connect()(SignUp);\n","import { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, signupRequest } from './actions';\nimport { State } from './reducers';\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\nimport SignUp from './components/SignUp';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated: boolean;\n}\n\nexport class SignUpPage extends Component<Props> {\n    render() {\n        const { dispatch, isAuthenticated } = this.props;\n\n        return (\n            <div className=\"App\">\n                {!isAuthenticated && (\n                    <>\n                        <KawaiiMessage character={Character.Ghost}>\n                            Create your user here. Instead of user name you can use your e-mail. If you forget your\n                            password then you can send me e-mail (I will not send you any e-mails without your consent).\n                            If you use regular user name and forget your password then you will not be able to access\n                            your account.\n                        </KawaiiMessage>\n\n                        <SignUp onSignUp={creds => dispatch(signupRequest(creds))} />\n                    </>\n                )}\n                {isAuthenticated && <Redirect to=\"/\" />}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => ({ isAuthenticated: state.auth.isAuthenticated });\n\nexport default connect(mapStateToProps)(SignUpPage);\n","import './App.css';\n\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, initRequest } from './actions';\nimport { State } from './reducers';\nimport AboutPage from './AboutPage';\nimport CardSetPage from './CardSetPage';\nimport ChangelogPage from './ChangelogPage';\nimport ErrorBoundry from './ErrorBoundry';\nimport GamePage from './GamePage';\nimport LoginPage from './LoginPage';\nimport Main from './Main';\nimport Navbar from './components/Navbar';\nimport NotFoundPage from './NotFoundPage';\nimport SignUpPage from './SignUpPage';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated: boolean;\n}\n\nexport class App extends Component<Props> {\n    componentDidMount() {\n        this.props.dispatch(initRequest());\n    }\n\n    render() {\n        const { isAuthenticated } = this.props;\n        return (\n            <Router>\n                <div className=\"App\">\n                    <ErrorBoundry>\n                        <Navbar isAuthenticated={isAuthenticated} />\n                        <Switch>\n                            <Route exact path=\"/\" component={Main} />\n                            <Route exact path=\"/login\" component={LoginPage} />\n                            <Route exact path=\"/signup\" component={SignUpPage} />\n                            <Route exact path=\"/game/:id\" component={GamePage} />\n                            <Route exact path=\"/cardset/:id\" component={CardSetPage} />\n                            <Route exact path=\"/changelog\" component={ChangelogPage} />\n                            <Route exact path=\"/about\" component={AboutPage} />\n                            <Route component={NotFoundPage} />\n                        </Switch>\n                        <div className=\"App-footer\">Dalius Dobravolskas &copy; {new Date().getFullYear()}</div>\n                    </ErrorBoundry>\n                </div>\n            </Router>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    const { auth } = state;\n    const { isAuthenticated } = auth;\n\n    return {\n        isAuthenticated,\n    };\n};\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ninterface Config {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import './index.css';\n\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { createAppStore } from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createAppStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { rootSaga } from './sagas';\nimport reducers from './reducers';\n\nexport function createAppStore() {\n    const sagaMiddleware = createSagaMiddleware();\n    const store = createStore(\n        reducers,\n        // @ts-ignore: __REDUX_DEVTOOLS_EXTENSION__ does not exists on window\n        window.__REDUX_DEVTOOLS_EXTENSION__\n            ? compose(\n                  applyMiddleware(sagaMiddleware),\n                  // @ts-ignore: __REDUX_DEVTOOLS_EXTENSION__ does not exists on window\n                  window.__REDUX_DEVTOOLS_EXTENSION__(),\n              )\n            : applyMiddleware(sagaMiddleware),\n    );\n    sagaMiddleware.run(rootSaga);\n    return store;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldcontroller\":\"FieldController_fieldcontroller__3ifWc\",\"fieldcontrolleractiveplaceholder\":\"FieldController_fieldcontrolleractiveplaceholder__3XZOP\",\"fieldcontrolleractive\":\"FieldController_fieldcontrolleractive__3fSLl\",\"controller\":\"FieldController_controller__VCesw\",\"touchactivated\":\"FieldController_touchactivated__16s2w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__3wMPS\",\"controls\":\"Sidebar_controls__3VVbM\",\"active\":\"Sidebar_active__4ldTH\",\"view\":\"Sidebar_view__-0BeZ\",\"hidden\":\"Sidebar_hidden__3xh5q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Navbar_header__FZp4U\",\"menu\":\"Navbar_menu__1JWvN\",\"messages\":\"Navbar_messages__h_dLG\",\"error\":\"Navbar_error__3urZl\",\"info\":\"Navbar_info__1h4Zc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fixed\":\"Loader_fixed__3q8O9\",\"relative\":\"Loader_relative__1lapZ\",\"loader\":\"Loader_loader__1ZCGC\",\"small\":\"Loader_small__3TZen\",\"loader-small\":\"Loader_loader-small__3PPAu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarDetails_view__29V31\",\"disabled\":\"SidebarDetails_disabled__1htJF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarImage_view__2LKQM\",\"disabled\":\"SidebarImage_disabled__1tNhN\",\"images\":\"SidebarImage_images__3zDK2\",\"image\":\"SidebarImage_image__lREiD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardset\":\"CardSet_cardset__21qjI\",\"cardsetview\":\"CardSet_cardsetview__1rqd1\",\"sidebar\":\"CardSet_sidebar__3y8_T\",\"createCard\":\"CardSet_createCard__2bOiw\"};","module.exports = __webpack_public_path__ + \"static/media/resize.0548e063.svg\";","module.exports = __webpack_public_path__ + \"static/media/rotate.470ffe2e.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1Ltkv\",\"title\":\"Card_title__1KiIj\",\"active\":\"Card_active__XOmoJ\",\"disabled\":\"Card_disabled__2Ob5l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ConfirmedDelete_button__1o8h4\",\"answer\":\"ConfirmedDelete_answer__1OsVc\"};"],"sourceRoot":""}