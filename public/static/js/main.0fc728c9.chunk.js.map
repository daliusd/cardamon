{"version":3,"sources":["components/Card.module.css","components/SidebarImage.module.css","components/ConfirmedDelete.module.css","components/EditableTitle.module.css","components/FontSelector.module.css","components/SidebarText.module.css","components/image.svg","components/ImageField.module.css","components/ContentEditable.module.css","components/text.svg","components/SidebarGeneratePng.module.css","components/SidebarGeneratePdf.module.css","components/SidebarMeasurements.module.css","components/SidebarSettings.module.css","components/SidebarUpload.module.css","components/CardSets.module.css","components/FieldController.module.css","actions.ts","constants.ts","requests.ts","utils.ts","types.ts","workerController.ts","storage.ts","fontLoader.tsx","sagas.ts","reducers.ts","components/KawaiiMessage.tsx","AboutPage.tsx","components/FieldController.tsx","components/ImageField.tsx","components/ContentEditable.tsx","components/TextField.tsx","components/Card.tsx","components/EditableTitle.tsx","components/Loader.tsx","components/SidebarDetails.tsx","components/SidebarGeneratePng.tsx","components/PDFGenerator.tsx","components/SidebarGeneratePdf.tsx","components/ColorButton.tsx","components/SidebarImage.tsx","components/SidebarImportExport.tsx","components/SidebarMeasurements.tsx","components/SidebarSettings.tsx","components/FontSelector.tsx","components/SidebarText.tsx","components/SidebarUpload.tsx","components/Sidebar.tsx","components/CardSet.tsx","CardSetPage.tsx","ChangelogPage.tsx","ErrorBoundry.tsx","components/ConfirmedDelete.tsx","components/CardSets.tsx","GamePage.tsx","components/Login.tsx","LoginPage.tsx","components/Games.tsx","Main.tsx","selectors.ts","components/Logout.tsx","components/Navbar.tsx","NotFoundPage.tsx","components/SignUp.tsx","SignUpPage.tsx","App.tsx","serviceWorker.ts","index.tsx","store.ts","components/Sidebar.module.css","components/Navbar.module.css","components/Loader.module.css","components/SidebarDetails.module.css","components/CardSet.module.css","components/pan.svg","components/zoom.svg","components/resize.svg","components/rotate.svg"],"names":["module","exports","card","title","active","disabled","view","images","button","answer","input","fontFamily","fontVariant","__webpack_require__","p","over","content","cardsets","fieldcontroller","fieldcontrolleractivefield","fieldcontrolleractive","controller","touchactivated","SidebarState","CURRENT_CARDSET_VERSION","DEFAULT_FONT_SIZE","DEFAULT_LINE_HEIGHT","BLEED_WIDTH","INIT_REQUEST","MESSAGE_DISPLAY","MESSAGE_HIDE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_REQUEST","LOGOUT_FAILURE","LOGOUT_SUCCESS","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_FAILURE","GAME_CREATE_REQUEST","GAME_CREATE_SUCCESS","GAME_DELETE_REQUEST","GAME_RENAME_REQUEST","GAME_LIST_SUCCESS","GAME_LIST_REQUEST","GAME_LIST_FAILURE","GAME_LIST_RESET","GAME_SELECT_REQUEST","GAME_SELECT_SUCCESS","GAME_SELECT_FAILURE","GAME_CREATE_PDF_REQUEST","GAME_CREATE_PDF_SUCCESS","GAME_CREATE_PDF_FAILURE","GAME_CREATE_PNG_REQUEST","GAME_CREATE_PNG_SUCCESS","GAME_CREATE_PNG_FAILURE","CARDSETS_SELECT_SUCCESS","CARDSET_CREATE_REQUEST","CARDSET_CREATE_SUCCESS","CARDSET_CREATE_FAILURE","CARDSET_DELETE_REQUEST","CARDSET_RENAME_REQUEST","CARDSET_IMPORT_DATA","CARDSET_LIST_SUCCESS","CARDSET_LIST_RESET","CARDSET_SELECT_REQUEST","CARDSET_SELECT_SUCCESS","CARDSET_CREATE_CARD","CARDSET_CLONE_CARD","CARDSET_REMOVE_CARD","CARDSET_UPDATE_CARD_COUNT","CARDSET_ADD_TEXT_FIELD","CARDSET_ADD_IMAGE_FIELD","CARDSET_CHANGE_ACTIVE_FIELD_NAME","CARDSET_REMOVE_ACTIVE_FIELD","CARDSET_RAISE_ACTIVE_FIELD","CARDSET_RAISE_ACTIVE_FIELD_TO_TOP","CARDSET_LOWER_ACTIVE_FIELD","CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM","CARDSET_LOCK_ACTIVE_FIELD","CARDSET_UNLOCK_ACTIVE_FIELD","CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD","CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD","CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD","CARDSET_CHANGE_WIDTH","CARDSET_CHANGE_HEIGHT","CARDSET_CHANGE_IS_TWO_SIDED","CARDSET_CHANGE_SNAPPING_DISTANCE","CARDSET_CHANGE_FIELD_POSITION","CARDSET_CHANGE_FIELD_PAN","CARDSET_CHANGE_FIELD_ZOOM","CARDSET_CHANGE_FIELD_SIZE","CARDSET_CHANGE_FIELD_ANGLE","CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN","CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR","CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY","CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT","CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT","CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE","CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT","CARDSET_CHANGE_TEXT","CARDSET_CHANGE_IMAGE","CARDSET_CHANGE_IMAGE_BASE64","CARDSET_SET_ACTIVE_CARD_AND_FIELD","CARDSET_CHANGE_APPLY_TO_ALLCARDS","CARDSET_SELECT_FAILURE","CARDSET_SET_SIDEBAR_STATE","CARDSET_SET_ZOOM","CARDSET_UPLOAD_IMAGE","CARDSET_UPLOAD_IMAGE_SUCCESS","CARDSET_UPLOAD_IMAGE_FAILURE","CARDSET_DELETE_IMAGE","CARDSET_UNDO","CARDSET_REDO","IMAGE_LIST_REQUEST","IMAGE_LIST_SUCCESS","IMAGE_LIST_FAILURE","messageDisplay","type","text","id","message","shortid","generate","gameCreateRequest","gamename","gameDeleteRequest","gameId","gameRenameRequest","newName","gameSelectRequest","updateCardSets","gameCreatePdfRequest","collectionType","collectionId","pageWidth","pageHeight","topBottomMargin","leftRightMargin","verticalSpace","horizontalSpace","includeBleedingArea","cutMarksForScissors","cutMarksForGuillotine","cutMarksInMarginArea","cutMarksOnFrontSideOnly","gameCreatePngRequest","dpi","cardSetCreateRequest","cardsetname","width","height","cardSetDeleteRequest","cardSetId","cardSetRenameRequest","cardSetImportData","data","cardSetCreateCard","cardSetCloneCard","cardSetRemoveCard","cardSetUpdateCardCount","count","cardSetAddTextField","cardSetAddImageField","cardSetChangeActiveFieldName","name","cardSetRemoveActiveField","cardSetRaiseActiveField","cardSetRaiseActiveFieldToTop","cardSetLowerActiveField","cardSetLowerActiveFieldToBottom","cardSetLockActiveField","cardSetUnlockActiveField","cardSetChangeFitForActiveField","fit","cardSetChangeCropForActiveField","crop","cardSetChangeUnclickableForActiveField","unclickable","cardSetChangeWidth","maintainAspectRatio","resizeContent","cardSetChangeHeight","cardSetChangeIsTwoSided","isTwoSided","cardSetChangeSnappingDistance","snappingDistance","cardSetChangeFieldPosition","cardId","fieldId","x","y","group","cardSetChangeFieldPan","cx","cy","cardSetChangeFieldZoom","zoom","cardSetChangeFieldSize","cardSetChangeFieldAngle","angle","cardSetChangeActiveTextFieldAlign","align","cardSetChangeActiveTextFieldColor","color","cardSetChangeActiveTextFieldFontVariant","cardSetChangeActiveTextFieldFontFamilyAndVariant","cardSetChangeActiveTextFieldFontSize","fontSize","cardSetChangeActiveTextFieldLineHeight","lineHeight","cardSetChangeText","textInfo","cardSetChangeImage","imageInfo","cardSetChangeImageBase64","base64","cardSetActiveCardAndField","isBackActive","cardSetChangeApplyToAllCards","applyToAllCards","cardSetSetSidebarState","sidebarState","cardSetSetZoom","cardSetUploadImage","file","load","error","progress","abort","cancelToken","cardSetDeleteImage","imageId","cardSetUndo","cardSetRedo","imageListRequest","filter","location","handleAxiosError","response","Error","request","console","log","getTokens","creds","axios","post","then","resp","catch","refreshToken","refreshTokenValue","config","headers","Authorization","concat","accessToken","deleteAccessToken","token","delete","status","deleteRefreshToken","registerUser","getRequest","url","get","postRequest","postRequestFormDataCancelable","progressCallback","cancelCallback","Content-Type","onUploadProgress","isCancel","putRequest","put","deleteRequest","downloadBlob","blobURL","filename","resolve","tempLink","document","createElement","style","display","href","setAttribute","download","body","appendChild","click","removeChild","setTimeout","window","URL","revokeObjectURL","rotateVec","a","sinA","Math","sin","cosA","cos","rx","ry","calculateImageDimensions","imageFieldInfo","calculatedImageWidth","calculatedImageHeight","imageWidth","imageHeight","reportError","StackTrace","fromError","stackframes","stringifiedStack","map","sf","toString","join","stack","ImageType","generatePdfUsingWorker","Worker","Promise","reject","worker","addEventListener","event","postMessage","e","loadImage","img","Image","onload","onerror","src","prepareImageToDrawSpace","context","imageToDraw","ptpmm","save","translate","rotate","ax","ay","rect","clip","fixWidthAndHeightInSvg","doc","XmlDocument","attr","viewBox","split","btoa","compressed","PNGGenerator","_this","this","Object","classCallCheck","tasksQueue","push","cardSetData","cardIdx","isBack","cardsetFolder","offscreenCanvas","calculatedWidth","round","calculatedHeight","getContext","fillStyle","fillRect","stopped","length","task","shift","SVG_PATH","scale","Path2D","fill","restore","IMAGE","SVG","undefined","dim","image","svgData","atob","drawImage","BLOCK_START","BLOCK_END","subType","delay","dataUrl","toDataURL","slice","padStart","zip","cardsetsList","cardsetInfo","generateCardset","cardsetId","JSON","parse","folder","cardsAllIds","entries","generateCard","generatePngUsingWorker","_ref4","asyncToGenerator","regenerator_default","mark","_callee4","pngGenerator","blob","wrap","_context4","prev","next","JSZip","generateGame","generateAsync","sent","createObjectURL","stop","_x15","_x16","_x17","_x18","apply","arguments","saveTokens","localStorage","setItem","saveAccessToken","cleanTokens","removeItem","getTokenFromStorage","getItem","getRefreshTokenFromStorage","loadFontsUsedInPlaceholders","fontsToLoad","Set","add","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","fieldsAllIds","Symbol","iterator","done","value","field","fields","fontToLoad","err","return","WebFont","objectSpread","inactive","webFontsLoadPromise","google","families","toConsumableArray","Array","from","putError","putInfo","putProgress","hideProgress","handleMessageDisplay","getToken","handleLoginRequest","handleLoginSuccess","logoutToken","logoutRefreshToken","handleLogoutRequest","handleSignupRequest","handleInitRequest","authorizedGetRequest","authorizedPostRequest","authorizedDeleteRequest","authorizedPostFormDataRequest","authorizedPutRequest","handleGameCreateRequest","handleGameDeleteRequest","handleGameRenameRequest","handleGameListRequest","handleGameSelectRequest","handleGameCreatePdfRequest","handleGameCreatePngRequest","handleCardSetCreateRequest","handleCardSetDeleteRequest","handleCardSetRenameRequest","handleCardSetSelectRequest","handleCardSetUploadImage","handleCardSetDeleteImage","handleCardSetFitChange","handleCardSetChangeImage","handleCardSetChange","handleImageListRequest","rootSaga","_context","call","_marked","_context2","_marked2","_context3","abrupt","_marked3","messageId","_marked4","action","_context5","_marked5","validateToken","jwtDecode","exp","Date","getTime","withErrorIfMissing","getFreshToken","newToken","_args6","_context6","_marked6","_context7","t0","_marked7","_context8","_marked8","_context9","_marked9","_context10","_marked10","_context11","_marked11","_context12","_marked12","_context13","_marked13","_context14","_marked14","_context15","_marked15","_context16","_marked16","_context17","_marked17","_context18","_marked18","_context19","_marked19","_context20","_marked20","_context21","_marked21","allIds","byId","_context22","games","g","reduce","obj","_marked22","_context23","_marked23","progressId","_context24","_marked24","_context25","_marked25","_context26","stringify","version","_marked26","state","_context27","select","_marked27","_context28","_marked28","loadImageInfo","naturalWidth","naturalHeight","processData","_x","_processData","_callee","processedData","plId","placeholder","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_iterator4","_step4","_placeholder","_cardId","_fieldId","fieldInfo","info","_context37","placeholdersAllIds","keys","placeholders","global","texts","finish","t1","cardsById","t2","t3","t4","t5","parsedData","_context29","ActionCreators","clearHistory","_marked29","formData","_context30","FormData","set","append","lengthComputable","loaded","total","_marked30","_context31","_marked31","adjustSvg","preserveAspectRatio","walkChildren","node","children","child","imageResp","svg","_svg","_context32","cardset","present","activeFieldId","_marked32","cardsToFix","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","cardFields","_svg2","_context33","_marked33","closeHandler","preventDefault","returnValue","allowWindowClose","removeEventListener","_context34","_marked34","game","_context35","encodeURIComponent","_marked35","_context36","all","takeEvery","takeLatest","_marked36","ACTIVITY_SELECTING","ACTIVITY_CREATING_PDF","ACTIVITY_CREATING_PNG","DefaultMessageState","messages","DefaultAuthState","isAuthenticated","user","DefaultSignUpState","signingup","DefaultGameState","activity","DefaultCardSetsState","DefaultCardSetState","activeCardId","textSettings","activeSidebar","DefaultImageState","resizeFields","widthRatio","heightRatio","newFields","undoableCardset","undoable","assign","defineProperty","newCard","index","indexOf","isOnBack","fieldIndex","splice","locked","unshift","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","fitImageWidth","fitImageHeight","min","max","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","oldZoom","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","nx","ny","_rotateVec","ratio","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","testFieldInfo","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","Measurements","Details","Text","ignoreInitialState","undoType","redoType","groupBy","startsWith","reducers","combineReducers","find","m","auth","username","signup","Character","AboutPage","react_default","Component","FieldController","props","possibleConstructorReturn","getPrototypeOf","cDiv","panDiv","zoomDiv","resizeDiv","rotateDiv","originalBodyCursor","handleBrowserDragStart","stopPropagation","handleMouseDown","handleDragStart","handleMouseMove","handleMouseUp","handleTouchStart","touches","changedTouches","handleTouchMove","passive","handleTouchEnd","co","current","cursor","setState","startX","clientX","startY","clientY","handleDragMove","ctrlKey","disableSnapping","_this$props","isLocked","_this$props2","ppmm","onDrag","handleComplete","isTouchEvent","_this$props3","activatedUsingTouch","handlePanMouseDown","handlePanStart","handlePanMouseMove","handlePanMouseUp","handlePanTouchStart","handlePanTouchMove","handlePanTouchEnd","panIcon","handlePanMove","_this$props4","onPan","newCx","newCy","handlePanComplete","_this$props5","handleZoomMouseDown","handleZoomStart","handleZoomMouseMove","handleZoomMouseUp","handleZoomTouchStart","handleZoomTouchMove","handleZoomTouchEnd","zoomIcon","handleZoomMove","_this$props6","onZoom","dx","dy","z","abs","newZoom","handleZoomComplete","handleResizeMouseDown","handleResizeStart","handleResizeMouseMove","handleResizeMouseUp","handleResizeTouchStart","handleResizeTouchMove","handleResizeTouchEnd","resizeIcon","handleResizeMove","_this$props7","onResize","_rotateVec2","newWidth","newHeight","handleResizeComplete","_this$props8","handleRotateMouseDown","handleRotateStart","handleRotateMouseMove","handleRotateMouseUp","handleRotateTouchStart","handleRotateTouchMove","handleRotateTouchEnd","_this$props9","rotateIcon","getBoundingClientRect","left","clientWidth","top","clientHeight","originalAngle","atan2","handleRotateMove","_this$props10","onRotate","_this$state","newAngle","PI","handleRotateComplete","React","createRef","_this$props11","isActive","isActiveField","isUnclickable","ref","onDragStart","className","position","transform","pointerEvents","alt","right","bottom","connect","ImageField","handleDrag","cardOnly","dispatch","handlePan","handleZoom","handleResize","handleRotate","wasMoved","handleDragOver","dragIsOver","handleDragLeave","handleDrop","dataTransfer","getData","imagefilesPos","ii","substr","imageUrl","cardWidth","cardHeight","components_FieldController","overflow","onMouseDown","onTouchStart","onMouseMove","onTouchMove","onMouseUp","onTouchEnd","onDragOver","onDragLeave","onDrop","opacity","emptyImageImage","PureComponent","ContentEditable","editDiv","currentText","currentAlign","currentColor","currentFontFamily","currentFontVariant","currentFontSize","currentLineHeight","timeout","handleStart","handleMove","focus","onFocus","textValue","range","createRange","selectNodeContents","collapse","selection","getSelection","removeAllRanges","addRange","updateContent","timeoutInMiliseconds","innerHTML","imgUrlIdx","clearTimeout","handleBlur","handleInput","handlePaste","clipboardData","s","replace","execCommand","nextProps","isItalic","fontWeight","parseInt","contentEditable","onBlur","onInput","onPaste","textAlign","DEFAULT_FONT","fontStyle","outline","overflowWrap","dangerouslySetInnerHTML","__html","TextField","textFieldInfo","zIndex","emptyTextImage","components_ContentEditable","Card","dimensions","handleFieldDeselect","target","getAttribute","_this2","fieldsIds","isActiveCard","widthWithBleeds","heightWithBleeds","index_esm","client","contentRect","_ref","measureRef","components_ImageField","key","components_TextField","border","borderRadius","EditableTitle","titleIsEdited","handleClick","handleChange","onChange","Fragment","onClick","autoFocus","KawaiiMessage","character","mood","marginTop","marginBottom","padding","backgroundColor","grid","Ghost","size","Browser","marginLeft","Loader","fixed","small","loader","relative","SidebarDetails","_Component","_getPrototypeOf2","_len","args","_key","handleCloneCardClick","activeCard","handleRemoveCardClick","handleCountChange","inherits","createClass","visible","SidebarGeneratePng","handleDpiChange","handleGenerate","activeCardset","isCreatingPng","htmlFor","step","PDFGenerator","handleGeneratePdfClick","handlePageWidthChange","parseFloat","handlePageHeightChange","handleTopBottomMarginChange","handleLeftRightMarginChange","handleVerticalSpaceChange","handleHorizontalSpaceChange","handleIncludeBleedingAreaChange","checked","handleCutMarksForScissors","handleCutMarksForGuillotine","handleCutMarksInMarginArea","handleCutMarksOnFrontSideOnly","isCreatingPdf","withHelp","KawaiiMessage_KawaiiMessage","SidebarGeneratePdf","activeCardSetId","components_PDFGenerator","ColorButton","displayColorPicker","handleClose","react_color_lib","disableAlpha","SidebarImage","handleAddImageClick","changeImage","activeFieldInfo","handleRemoveImageFromFieldClick","handleRemoveClick","handleNameChange","trim","handleFilterChange","handleImageSelect","imageName","handleRaise","handleLower","handleLockField","handleUnlockField","handleFitOptionChange","handleOptionChange","handleColorChange","hex","handleRemoveColorClick","handleApplyToAllCardChange","handleChangeCrop","ColorButton_ColorButton","im","data-width","data-height","registerPlugin","FilePondPluginFileValidateType","SidebarImportExport","prepareImagePaths","activeGame","ending","md5","preparedImages","fieldsByCard","endsWith","handleExportJson","json","Blob","handleExportCsv","preparedFields","csvData","header","usedNames","dataRow","written","fieldIndo","csv","Papa","unparse","handleProcess","fieldName","metadata","reader","FileReader","readAsText","result","isGlobal","newCardsAllIds","newCardsById","row","handleRevert","uniqueFileId","react_filepond","server","process","revert","acceptedFileTypes","SidebarMeasurements","handlePrevField","activeField","prevField","idx","handleNextField","nextField","handleWidthChange","handleHeightChange","handleXChange","handleYChange","handleAngleChange","_this$props12","handleChangeUnclickable","_this$props13","_this$props14","SidebarSettings","_this$state2","handleIsTwoSidedChange","handleSnappingDistance","_this$state3","options","webfonts","sort","fi","label","FontSelector","getFontStringForLoad","family","variant","stringForLoad","selectedOption","activeFontVariant","wf","handleFontVariantChange","activeFont","handleFontSizeChange","handleLineHeightChange","selectedFontFamily","f","fontVariantOptions","fv","selectedFontVariant","activeFontSize","react_select_esm","activeLineHeight","SidebarText","handleAddTextClick","handleSetTextAlignLeft","getRangeAt","rangeCount","collapsed","handleSetTextAlignCenter","handleSetTextAlignRight","handleSetTextBold","handleSetTextItalic","components_FontSelector","FilePondPluginFileValidateSize","SidebarUpload","source","CancelToken","cancel","allowMultiple","allowFileSizeValidation","maxFileSize","SIDEBARS","Settings","icon","component","Upload","ImportExport","Png","Pdf","Sidebar","handleSidebar","sidebar","controls","sb","hidden","CardSet","keyDown","shiftKey","handleCreateCardClick","handleClickOutsideOfCard","handleCardSetNameChange","activeCardSet","EditableTitle_EditableTitle","cardsetview","components_Sidebar","Loader_Loader","gridTemplateColumns","components_Card","createCard","CardSetPage","match","params","components_CardSet","ChangelogPage","evt","ErrorBoundary","hasError","ConfirmedDelete","deleteClicked","handleRemove","handleYes","onDelete","handleNo","question","CardSets","cardSetName","handleGameNameChange","handleCreateCardSetClick","handleCardSetDelete","b","cardsetItems","Link","to","ConfirmedDelete_ConfirmedDelete","GamePage","components_CardSets","Login","password","handleUsernameChange","handlePasswordChange","handleSubmit","onLogin","onLoginFailure","onSubmit","LoginPage","Login_Login","loginRequest","msg","Redirect","Games","gameName","handleCreateGameClick","handleGameDelete","gameItems","Main","components_Games","getActiveGame","getActiveCardSet","Logout","onLogout","Navbar","menu","components_Logout","NotFoundPage","SignUp","passwordRepeat","handlePasswordRepeatChange","onSignUp","SignUpPage","components_SignUp","signupRequest","App","isIE","BrowserRouter","ErrorBoundry_ErrorBoundary","components_Navbar","Switch","Route","exact","path","getFullYear","Boolean","hostname","store","sagaMiddleware","createSagaMiddleware","createStore","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","run","createAppStore","ReactDOM","render","es","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister","loader-small"],"mappings":"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","file":"static/js/main.0fc728c9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__iFlfM\",\"title\":\"Card_title__19Cwl\",\"active\":\"Card_active__10UTn\",\"disabled\":\"Card_disabled__H4Xiv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarImage_view__2fD5o\",\"disabled\":\"SidebarImage_disabled__2wnsI\",\"images\":\"SidebarImage_images__3Ol2c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ConfirmedDelete_button__1BMbI\",\"answer\":\"ConfirmedDelete_answer__5hhwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"EditableTitle_input__1Lmlq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fontFamily\":\"FontSelector_fontFamily__2gTeq\",\"fontVariant\":\"FontSelector_fontVariant__2WE4Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarText_view__SxT2g\",\"disabled\":\"SidebarText_disabled__nRP7i\"};","module.exports = __webpack_public_path__ + \"static/media/image.60f0926c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"over\":\"ImageField_over__3y5FK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ContentEditable_content__2lBBL\"};","module.exports = __webpack_public_path__ + \"static/media/text.f7f9443c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarGeneratePng_view__b2uGa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarGeneratePdf_view__2CUY7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarMeasurements_view__1hi6W\",\"disabled\":\"SidebarMeasurements_disabled__27Jc-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarSettings_view__3C1IL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarUpload_view__3Mtgx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardsets\":\"CardSets_cardsets__1l-1M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldcontroller\":\"FieldController_fieldcontroller__1NU_Q\",\"fieldcontrolleractivefield\":\"FieldController_fieldcontrolleractivefield__WyOSh\",\"fieldcontrolleractive\":\"FieldController_fieldcontrolleractive__1HzwX\",\"controller\":\"FieldController_controller__gKZzB\",\"touchactivated\":\"FieldController_touchactivated__314ug\"};","import { CancelToken } from 'axios';\nimport { Dispatch as ReduxDispatch } from 'redux';\nimport shortid from 'shortid';\n\nimport {\n    CardSetsCollection,\n    CardType,\n    CardsCollection,\n    Credentials,\n    GamesCollection,\n    IdsArray,\n    ImageArray,\n    ImageInfo,\n    MessageType,\n    PlaceholdersCollection,\n    PlaceholdersImageInfoByCardCollection,\n    PlaceholdersTextInfoByCardCollection,\n    TextInfo,\n    FieldInfoByCardCollection,\n} from './types';\n\nexport const INIT_REQUEST = 'INIT_REQUEST';\nexport const MESSAGE_DISPLAY = 'MESSAGE_DISPLAY';\nexport const MESSAGE_HIDE = 'MESSAGE_HIDE';\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\nexport const LOGOUT_FAILURE = 'LOGOUT_FAILURE';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const SIGNUP_REQUEST = 'SIGNUP_REQUEST';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAILURE = 'SIGNUP_FAILURE';\nexport const GAME_CREATE_REQUEST = 'GAME_CREATE_REQUEST';\nexport const GAME_CREATE_SUCCESS = 'GAME_CREATE_SUCCESS';\nexport const GAME_DELETE_REQUEST = 'GAME_DELETE_REQUEST';\nexport const GAME_RENAME_REQUEST = 'GAME_RENAME_REQUEST';\nexport const GAME_LIST_SUCCESS = 'GAME_LIST_SUCCESS';\nexport const GAME_LIST_REQUEST = 'GAME_LIST_REQUEST';\nexport const GAME_LIST_FAILURE = 'GAME_LIST_FAILURE';\nexport const GAME_LIST_RESET = 'GAME_LIST_RESET';\nexport const GAME_SELECT_REQUEST = 'GAME_SELECT_REQUEST';\nexport const GAME_SELECT_SUCCESS = 'GAME_SELECT_SUCCESS';\nexport const GAME_SELECT_FAILURE = 'GAME_SELECT_FAILURE';\nexport const GAME_CREATE_PDF_REQUEST = 'GAME_CREATE_PDF_REQUEST';\nexport const GAME_CREATE_PDF_SUCCESS = 'GAME_CREATE_PDF_SUCCESS';\nexport const GAME_CREATE_PDF_FAILURE = 'GAME_CREATE_PDF_FAILURE';\nexport const GAME_CREATE_PNG_REQUEST = 'GAME_CREATE_PNG_REQUEST';\nexport const GAME_CREATE_PNG_SUCCESS = 'GAME_CREATE_PNG_SUCCESS';\nexport const GAME_CREATE_PNG_FAILURE = 'GAME_CREATE_PNG_FAILURE';\nexport const CARDSETS_SELECT_SUCCESS = 'CARDSETS_SELECT_SUCCESS';\nexport const CARDSET_CREATE_REQUEST = 'CARDSET_CREATE_REQUEST';\nexport const CARDSET_CREATE_SUCCESS = 'CARDSET_CREATE_SUCCESS';\nexport const CARDSET_CREATE_FAILURE = 'CARDSET_CREATE_FAILURE';\nexport const CARDSET_DELETE_REQUEST = 'CARDSET_DELETE_REQUEST';\nexport const CARDSET_RENAME_REQUEST = 'CARDSET_RENAME_REQUEST';\nexport const CARDSET_IMPORT_DATA = 'CARDSET_IMPORT_DATA';\nexport const CARDSET_LIST_SUCCESS = 'CARDSET_LIST_SUCCESS';\nexport const CARDSET_LIST_REQUEST = 'CARDSET_LIST_REQUEST';\nexport const CARDSET_LIST_FAILURE = 'CARDSET_LIST_FAILURE';\nexport const CARDSET_LIST_RESET = 'CARDSET_LIST_RESET';\nexport const CARDSET_SELECT_REQUEST = 'CARDSET_SELECT_REQUEST';\nexport const CARDSET_SELECT_SUCCESS = 'CARDSET_SELECT_SUCCESS';\nexport const CARDSET_CREATE_CARD = 'CARDSET_CREATE_CARD';\nexport const CARDSET_CLONE_CARD = 'CARDSET_CLONE_CARD';\nexport const CARDSET_REMOVE_CARD = 'CARDSET_REMOVE_CARD';\nexport const CARDSET_UPDATE_CARD_COUNT = 'CARDSET_UPDATE_CARD_COUNT';\nexport const CARDSET_ADD_TEXT_FIELD = 'CARDSET_ADD_TEXT_FIELD';\nexport const CARDSET_ADD_IMAGE_FIELD = 'CARDSET_ADD_IMAGE_FIELD';\nexport const CARDSET_CHANGE_ACTIVE_FIELD_NAME = 'CARDSET_CHANGE_ACTIVE_FIELD_NAME';\nexport const CARDSET_REMOVE_ACTIVE_FIELD = 'CARDSET_REMOVE_ACTIVE_FIELD';\nexport const CARDSET_RAISE_ACTIVE_FIELD = 'CARDSET_RAISE_ACTIVE_FIELD';\nexport const CARDSET_RAISE_ACTIVE_FIELD_TO_TOP = 'CARDSET_RAISE_ACTIVE_FIELD_TO_TOP';\nexport const CARDSET_LOWER_ACTIVE_FIELD = 'CARDSET_LOWER_ACTIVE';\nexport const CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM = 'CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM';\nexport const CARDSET_LOCK_ACTIVE_FIELD = 'CARDSET_LOCK_ACTIVE_FIELD';\nexport const CARDSET_UNLOCK_ACTIVE_FIELD = 'CARDSET_UNLOCK_ACTIVE_FIELD';\nexport const CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD = 'CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD';\nexport const CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD = 'CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD';\nexport const CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD = 'CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD';\nexport const CARDSET_CHANGE_WIDTH = 'CARDSET_CHANGE_WIDTH';\nexport const CARDSET_CHANGE_HEIGHT = 'CARDSET_CHANGE_HEIGHT';\nexport const CARDSET_CHANGE_IS_TWO_SIDED = 'CARDSET_CHANGE_IS_TWO_SIDED';\nexport const CARDSET_CHANGE_SNAPPING_DISTANCE = 'CARDSET_CHANGE_SNAPPING_DISTANCE';\nexport const CARDSET_CHANGE_FIELD_POSITION = 'CARDSET_CHANGE_FIELD_POSITION';\nexport const CARDSET_CHANGE_FIELD_PAN = 'CARDSET_CHANGE_FIELD_PAN';\nexport const CARDSET_CHANGE_FIELD_ZOOM = 'CARDSET_CHANGE_FIELD_ZOOM';\nexport const CARDSET_CHANGE_FIELD_SIZE = 'CARDSET_CHANGE_FIELD_SIZE';\nexport const CARDSET_CHANGE_FIELD_ANGLE = 'CARDSET_CHANGE_FIELD_ANGLE';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN = 'CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR = 'CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY = 'CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT = 'CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT =\n    'CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE = 'CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT = 'CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT';\nexport const CARDSET_CHANGE_TEXT = 'CARDSET_CHANGE_TEXT';\nexport const CARDSET_CHANGE_IMAGE = 'CARDSET_CHANGE_IMAGE';\nexport const CARDSET_CHANGE_IMAGE_BASE64 = 'CARDSET_CHANGE_IMAGE_BASE64';\nexport const CARDSET_SET_ACTIVE_CARD_AND_FIELD = 'CARDSET_SET_ACTIVE_CARD_AND_FIELD';\nexport const CARDSET_CHANGE_APPLY_TO_ALLCARDS = 'CARDSET_CHANGE_APPLY_TO_ALLCARDS';\nexport const CARDSET_SELECT_FAILURE = 'CARDSET_SELECT_FAILURE';\nexport const CARDSET_SET_SIDEBAR_STATE = 'CARDSET_SET_SIDEBAR_STATE';\nexport const CARDSET_SET_ZOOM = 'CARDSET_SET_ZOOM';\nexport const CARDSET_UPLOAD_IMAGE = 'CARDSET_UPLOAD_IMAGE';\nexport const CARDSET_UPLOAD_IMAGE_SUCCESS = 'CARDSET_UPLOAD_IMAGE_SUCCESS';\nexport const CARDSET_UPLOAD_IMAGE_FAILURE = 'CARDSET_UPLOAD_IMAGE_FAILURE';\nexport const CARDSET_DELETE_IMAGE = 'CARDSET_DELETE_IMAGE';\nexport const CARDSET_UNDO = 'CARDSET_UNDO';\nexport const CARDSET_REDO = 'CARDSET_REDO';\nexport const IMAGE_LIST_REQUEST = 'IMAGE_LIST_REQUEST';\nexport const IMAGE_LIST_SUCCESS = 'IMAGE_LIST_SUCCESS';\nexport const IMAGE_LIST_FAILURE = 'IMAGE_LIST_FAILURE';\n\n// Actions\n\nexport interface InitAction {\n    type: typeof INIT_REQUEST;\n}\n\nexport interface MessageDisplay {\n    type: typeof MESSAGE_DISPLAY;\n    message: MessageType;\n}\nexport type MessageAction = MessageDisplay | { type: typeof MESSAGE_HIDE; messageId: string };\n\nexport interface LoginRequest {\n    type: typeof LOGIN_REQUEST;\n    creds: Credentials;\n}\nexport type LoginAction =\n    | LoginRequest\n    | { type: typeof LOGIN_SUCCESS }\n    | { type: typeof LOGIN_FAILURE; message: string }\n    | { type: typeof LOGOUT_REQUEST }\n    | { type: typeof LOGOUT_FAILURE }\n    | { type: typeof LOGOUT_SUCCESS };\n\nexport interface SignUpRequest {\n    type: typeof SIGNUP_REQUEST;\n    creds: Credentials;\n}\nexport type SignUpAction = SignUpRequest | { type: typeof SIGNUP_SUCCESS } | { type: typeof SIGNUP_FAILURE };\n\nexport interface GameCreateRequest {\n    type: typeof GAME_CREATE_REQUEST;\n    gamename: string;\n}\nexport type GameCreateAction = GameCreateRequest | { type: typeof GAME_CREATE_SUCCESS };\n\nexport interface GameDeleteRequest {\n    type: typeof GAME_DELETE_REQUEST;\n    gameId: string;\n}\n\nexport type GameDeleteAction = GameDeleteRequest;\n\nexport interface GameRenameRequest {\n    type: typeof GAME_RENAME_REQUEST;\n    gameId: string;\n    newName: string;\n}\n\nexport type GameRenameAction = GameRenameRequest;\n\nexport interface GameListSuccess {\n    type: typeof GAME_LIST_SUCCESS;\n    byId: GamesCollection;\n    allIds: IdsArray;\n}\nexport type GameListAction =\n    | { type: typeof GAME_LIST_REQUEST }\n    | GameListSuccess\n    | { type: typeof GAME_LIST_FAILURE }\n    | { type: typeof GAME_LIST_RESET };\n\nexport interface GameSelectRequest {\n    type: typeof GAME_SELECT_REQUEST;\n    id: string;\n    updateCardSets: boolean;\n}\nexport type GameSelectAction =\n    | GameSelectRequest\n    | { type: typeof GAME_SELECT_SUCCESS; id: string }\n    | { type: typeof GAME_SELECT_FAILURE };\n\nexport interface GameCreatePdfRequest {\n    type: typeof GAME_CREATE_PDF_REQUEST;\n    collectionType: string;\n    collectionId: string;\n    pageWidth: number;\n    pageHeight: number;\n    topBottomMargin: number;\n    leftRightMargin: number;\n    verticalSpace: number;\n    horizontalSpace: number;\n    includeBleedingArea: boolean;\n    cutMarksForScissors: boolean;\n    cutMarksForGuillotine: boolean;\n    cutMarksInMarginArea: boolean;\n    cutMarksOnFrontSideOnly: boolean;\n}\n\nexport type GameCreatePdfAction =\n    | GameCreatePdfRequest\n    | { type: typeof GAME_CREATE_PDF_SUCCESS }\n    | { type: typeof GAME_CREATE_PDF_FAILURE };\n\nexport interface GameCreatePngRequest {\n    type: typeof GAME_CREATE_PNG_REQUEST;\n    dpi: number;\n    collectionType: string;\n    collectionId: string;\n}\n\nexport type GameCreatePngAction =\n    | GameCreatePngRequest\n    | { type: typeof GAME_CREATE_PNG_SUCCESS }\n    | { type: typeof GAME_CREATE_PNG_FAILURE };\n\nexport type GameAction =\n    | GameCreateAction\n    | GameDeleteAction\n    | GameRenameAction\n    | GameListAction\n    | GameSelectAction\n    | GameCreatePdfAction\n    | GameCreatePngAction;\n\nexport interface CardSetCreateRequest {\n    type: typeof CARDSET_CREATE_REQUEST;\n    cardsetname: string;\n    width: number;\n    height: number;\n    gameId: string;\n}\nexport type CardSetCreateAction =\n    | CardSetCreateRequest\n    | { type: typeof CARDSET_CREATE_SUCCESS }\n    | { type: typeof CARDSET_CREATE_FAILURE };\n\nexport interface CardSetDeleteRequest {\n    type: typeof CARDSET_DELETE_REQUEST;\n    cardSetId: string;\n}\n\nexport interface CardSetRenameRequest {\n    type: typeof CARDSET_RENAME_REQUEST;\n    cardSetId: string;\n    newName: string;\n}\n\nexport interface CardSetsSelectSuccess {\n    type: typeof CARDSETS_SELECT_SUCCESS;\n    id: string;\n    name: string;\n}\n\nexport type CardSetsAction =\n    | CardSetsSelectSuccess\n    | CardSetCreateAction\n    | CardSetDeleteRequest\n    | CardSetRenameRequest\n    | CardSetListAction;\n\nexport interface CardSetImportData {\n    type: typeof CARDSET_IMPORT_DATA;\n    data: object;\n}\n\nexport interface CardSetListSuccess {\n    type: typeof CARDSET_LIST_SUCCESS;\n    byId: CardSetsCollection;\n    allIds: IdsArray;\n}\nexport type CardSetListAction =\n    | { type: typeof CARDSET_LIST_REQUEST }\n    | CardSetListSuccess\n    | { type: typeof CARDSET_LIST_FAILURE }\n    | { type: typeof CARDSET_LIST_RESET };\n\nexport interface CardSetSelectRequest {\n    type: typeof CARDSET_SELECT_REQUEST;\n    id: string;\n}\n\nexport interface CardSetSelectSuccessDataBase {\n    version: string;\n}\n\nexport interface CardSetSelectSuccessDataV2 {\n    version: 2;\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    snappingDistance: number;\n    cardsAllIds: IdsArray;\n    cardsById: CardsCollection;\n    placeholders: PlaceholdersCollection;\n    placeholdersAllIds: IdsArray;\n    texts: PlaceholdersTextInfoByCardCollection;\n    images: PlaceholdersImageInfoByCardCollection;\n    zoom: number;\n}\n\nexport interface CardSetSelectSuccessDataV3 {\n    version: 3;\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    snappingDistance: number;\n    cardsAllIds: IdsArray;\n    cardsById: CardsCollection;\n    fields: FieldInfoByCardCollection;\n    fieldsAllIds: IdsArray;\n    zoom: number;\n}\n\nexport type CardSetSelectSuccessData = CardSetSelectSuccessDataV2 | CardSetSelectSuccessDataV3;\n\nexport interface CardSetSelectSuccess {\n    type: typeof CARDSET_SELECT_SUCCESS;\n    id: string;\n    name: string;\n    data: CardSetSelectSuccessDataV3;\n    gameId: string;\n}\nexport interface CardSetCreateCard {\n    type: typeof CARDSET_CREATE_CARD;\n    card: CardType;\n}\nexport interface CardSetCloneCard {\n    type: typeof CARDSET_CLONE_CARD;\n    card: CardType;\n}\nexport interface CardSetRemoveCard {\n    type: typeof CARDSET_REMOVE_CARD;\n    card: CardType;\n}\nexport interface CardSetUpdateCardCount {\n    type: typeof CARDSET_UPDATE_CARD_COUNT;\n    card: CardType;\n    count: number;\n}\nexport interface CardSetAddTextField {\n    type: typeof CARDSET_ADD_TEXT_FIELD;\n}\nexport interface CardSetAddImageField {\n    type: typeof CARDSET_ADD_IMAGE_FIELD;\n}\nexport interface CardSetChangeActiveFieldName {\n    type: typeof CARDSET_CHANGE_ACTIVE_FIELD_NAME;\n    name: string;\n}\nexport interface CardSetRemoveActiveField {\n    type: typeof CARDSET_REMOVE_ACTIVE_FIELD;\n}\nexport interface CardSetRaiseActiveField {\n    type: typeof CARDSET_RAISE_ACTIVE_FIELD;\n}\nexport interface CardSetRaiseActiveFieldToTop {\n    type: typeof CARDSET_RAISE_ACTIVE_FIELD_TO_TOP;\n}\nexport interface CardSetLowerActiveField {\n    type: typeof CARDSET_LOWER_ACTIVE_FIELD;\n}\nexport interface CardSetLowerActiveFieldToBottom {\n    type: typeof CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM;\n}\nexport interface CardSetLockActiveField {\n    type: typeof CARDSET_LOCK_ACTIVE_FIELD;\n}\nexport interface CardSetUnlockActiveField {\n    type: typeof CARDSET_UNLOCK_ACTIVE_FIELD;\n}\nexport interface CardSetChangeFitForActiveField {\n    type: typeof CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD;\n    fit: string;\n}\nexport interface CardSetChangeCropForActiveField {\n    type: typeof CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD;\n    crop: boolean;\n}\n\nexport interface CardSetChangeUnclickableForActiveField {\n    type: typeof CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD;\n    unclickable: boolean;\n}\n\nexport interface CardSetChangeWidth {\n    type: typeof CARDSET_CHANGE_WIDTH;\n    width: number;\n    maintainAspectRatio: boolean;\n    resizeContent: boolean;\n}\n\nexport interface CardSetChangeHeight {\n    type: typeof CARDSET_CHANGE_HEIGHT;\n    height: number;\n    maintainAspectRatio: boolean;\n    resizeContent: boolean;\n}\n\nexport interface CardSetChangeIsTwoSided {\n    type: typeof CARDSET_CHANGE_IS_TWO_SIDED;\n    isTwoSided: boolean;\n}\n\nexport interface CardSetChangeSnappingDistance {\n    type: typeof CARDSET_CHANGE_SNAPPING_DISTANCE;\n    snappingDistance: number;\n}\n\nexport interface CardSetChangeFieldPosition {\n    type: typeof CARDSET_CHANGE_FIELD_POSITION;\n    cardId?: string;\n    fieldId: string;\n    x: number;\n    y: number;\n    group: string;\n}\n\nexport interface CardSetChangeFieldPan {\n    type: typeof CARDSET_CHANGE_FIELD_PAN;\n    cardId?: string;\n    fieldId: string;\n    cx: number;\n    cy: number;\n    group: string;\n}\n\nexport interface CardSetChangeFieldZoom {\n    type: typeof CARDSET_CHANGE_FIELD_ZOOM;\n    cardId?: string;\n    fieldId: string;\n    zoom: number;\n    group: string;\n}\n\nexport interface CardSetChangeFieldSize {\n    type: typeof CARDSET_CHANGE_FIELD_SIZE;\n    cardId?: string;\n    fieldId: string;\n    width: number;\n    height: number;\n    group: string;\n}\nexport interface CardSetChangeFieldAngle {\n    type: typeof CARDSET_CHANGE_FIELD_ANGLE;\n    cardId?: string;\n    fieldId: string;\n    angle: number;\n    group: string;\n}\nexport interface CardSetChangeActiveTextFieldAlign {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN;\n    align: string;\n}\nexport interface CardSetChangeActiveTextFieldColor {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR;\n    color: string;\n}\nexport interface CardSetChangeActiveTextFieldFontFamily {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY;\n    fontFamily: string;\n}\nexport interface CardSetChangeActiveTextFieldFontVariant {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT;\n    fontVariant: string;\n}\nexport interface CardSetChangeActiveTextFieldFontFamilyAndVariant {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT;\n    fontFamily: string;\n    fontVariant: string;\n}\nexport interface CardSetChangeActiveTextFieldFontSize {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE;\n    fontSize: number;\n}\nexport interface CardSetChangeActiveTextFieldLineHeight {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT;\n    lineHeight: number;\n}\nexport interface CardSetChangeText {\n    type: typeof CARDSET_CHANGE_TEXT;\n    cardId: string;\n    fieldId: string;\n    textInfo: TextInfo;\n}\nexport interface CardSetChangeImage {\n    type: typeof CARDSET_CHANGE_IMAGE;\n    cardId: string | undefined;\n    fieldId: string;\n    imageInfo: ImageInfo;\n}\nexport interface CardSetChangeImageBase64 {\n    type: typeof CARDSET_CHANGE_IMAGE_BASE64;\n    cardId: string;\n    fieldId: string;\n    base64?: string;\n}\nexport interface CardSetSetActiveCardAndField {\n    type: typeof CARDSET_SET_ACTIVE_CARD_AND_FIELD;\n    cardId?: string;\n    isBackActive: boolean;\n    fieldId?: string;\n}\nexport interface CardSetChangeApplyToAllCards {\n    type: typeof CARDSET_CHANGE_APPLY_TO_ALLCARDS;\n    applyToAllCards: boolean;\n}\n\nexport enum SidebarState {\n    Settings,\n    Details,\n    Measurements,\n    Image,\n    Text,\n    Upload,\n    ImportExport,\n    Png,\n    Pdf,\n}\nexport interface CardSetSetSidebarState {\n    type: typeof CARDSET_SET_SIDEBAR_STATE;\n    sidebarState: SidebarState | null;\n}\nexport interface CardSetSetZoom {\n    type: typeof CARDSET_SET_ZOOM;\n    zoom: number;\n}\n\nexport type FPLoadCallback = (id: string) => void;\nexport type FPErrorCallback = (error: string) => void;\nexport type FPProgressCallback = (computable: boolean, loaded: number, total: number) => void;\nexport type FPAbortCallback = () => void;\nexport type FPRevertLoadCallback = () => void;\n\nexport interface CardSetUploadImage {\n    type: typeof CARDSET_UPLOAD_IMAGE;\n    gameId: string;\n    file: File;\n    load: FPLoadCallback;\n    error: FPErrorCallback;\n    progress: FPProgressCallback;\n    abort: FPAbortCallback;\n    cancelToken: CancelToken;\n}\n\nexport interface CardSetDeleteImage {\n    type: typeof CARDSET_DELETE_IMAGE;\n    imageId: string;\n    load: FPRevertLoadCallback;\n    error: FPErrorCallback;\n}\n\nexport interface CardSetUndo {\n    type: typeof CARDSET_UNDO;\n}\n\nexport interface CardSetRedo {\n    type: typeof CARDSET_REDO;\n}\n\nexport interface CardSetUploadImageSuccess {\n    type: typeof CARDSET_UPLOAD_IMAGE_SUCCESS;\n}\n\nexport interface CardSetUploadImageFailure {\n    type: typeof CARDSET_UPLOAD_IMAGE_FAILURE;\n}\n\nexport type CardSetSelectAction = CardSetSelectRequest | CardSetSelectSuccess | { type: typeof CARDSET_SELECT_FAILURE };\n\nexport type CardSetModifyAction =\n    | CardSetCreateCard\n    | CardSetCloneCard\n    | CardSetRemoveCard\n    | CardSetUpdateCardCount\n    | CardSetAddTextField\n    | CardSetAddImageField\n    | CardSetChangeActiveFieldName\n    | CardSetRemoveActiveField\n    | CardSetRaiseActiveField\n    | CardSetRaiseActiveFieldToTop\n    | CardSetLowerActiveField\n    | CardSetLowerActiveFieldToBottom\n    | CardSetLockActiveField\n    | CardSetUnlockActiveField\n    | CardSetChangeFitForActiveField\n    | CardSetChangeCropForActiveField\n    | CardSetChangeUnclickableForActiveField\n    | CardSetChangeWidth\n    | CardSetChangeHeight\n    | CardSetChangeIsTwoSided\n    | CardSetChangeSnappingDistance\n    | CardSetChangeFieldPosition\n    | CardSetChangeFieldPan\n    | CardSetChangeFieldZoom\n    | CardSetChangeFieldSize\n    | CardSetChangeFieldAngle\n    | CardSetChangeActiveTextFieldAlign\n    | CardSetChangeActiveTextFieldColor\n    | CardSetChangeActiveTextFieldFontFamily\n    | CardSetChangeActiveTextFieldFontVariant\n    | CardSetChangeActiveTextFieldFontFamilyAndVariant\n    | CardSetChangeActiveTextFieldFontSize\n    | CardSetChangeActiveTextFieldLineHeight\n    | CardSetChangeText\n    | CardSetChangeImage\n    | CardSetChangeImageBase64\n    | CardSetSetActiveCardAndField\n    | CardSetChangeApplyToAllCards\n    | CardSetSetSidebarState\n    | CardSetSetZoom\n    | CardSetUploadImage\n    | CardSetDeleteImage\n    | CardSetUndo\n    | CardSetRedo\n    | CardSetUploadImageSuccess\n    | CardSetUploadImageFailure;\n\nexport type CardSetAction = CardSetImportData | CardSetSelectAction | CardSetModifyAction;\n\nexport interface ImageListRequest {\n    type: typeof IMAGE_LIST_REQUEST;\n    filter: string;\n    location: string;\n}\nexport interface ImageListSuccess {\n    type: typeof IMAGE_LIST_SUCCESS;\n    images: ImageArray;\n}\nexport type ImageListAction = ImageListRequest | ImageListSuccess | { type: typeof IMAGE_LIST_FAILURE };\n\nexport type Action =\n    | InitAction\n    | LoginAction\n    | SignUpAction\n    | GameAction\n    | CardSetsAction\n    | CardSetAction\n    | ImageListAction\n    | MessageAction;\n\nexport type Dispatch = ReduxDispatch<Action>;\n\nexport const messageDisplay = (type: string, text: string, id?: string): MessageDisplay => {\n    return {\n        type: MESSAGE_DISPLAY,\n        message: {\n            id: id || shortid.generate(),\n            type: type,\n            text: text,\n        },\n    };\n};\n\nexport const initRequest = (): InitAction => {\n    return { type: INIT_REQUEST };\n};\n\nexport const loginRequest = (creds: Credentials): LoginAction => {\n    return {\n        type: LOGIN_REQUEST,\n        creds: creds,\n    };\n};\n\nexport const logoutRequest = (): LoginAction => {\n    return {\n        type: LOGOUT_REQUEST,\n    };\n};\n\nexport const signupRequest = (creds: Credentials): SignUpAction => {\n    return {\n        type: SIGNUP_REQUEST,\n        creds: creds,\n    };\n};\n\nexport const gameCreateRequest = (gamename: string): GameAction => {\n    return {\n        type: GAME_CREATE_REQUEST,\n        gamename: gamename,\n    };\n};\n\nexport const gameDeleteRequest = (gameId: string): GameAction => {\n    return {\n        type: GAME_DELETE_REQUEST,\n        gameId,\n    };\n};\n\nexport const gameRenameRequest = (gameId: string, newName: string): GameAction => {\n    return {\n        type: GAME_RENAME_REQUEST,\n        gameId,\n        newName,\n    };\n};\n\nexport const gameListRequest = (): GameAction => {\n    return {\n        type: GAME_LIST_REQUEST,\n    };\n};\n\nexport const gameSelectRequest = (id: string, updateCardSets: boolean): GameAction => {\n    return {\n        type: GAME_SELECT_REQUEST,\n        id,\n        updateCardSets,\n    };\n};\n\nexport const gameCreatePdfRequest = (\n    collectionType: string,\n    collectionId: string,\n    pageWidth: number,\n    pageHeight: number,\n    topBottomMargin: number,\n    leftRightMargin: number,\n    verticalSpace: number,\n    horizontalSpace: number,\n    includeBleedingArea: boolean,\n    cutMarksForScissors: boolean,\n    cutMarksForGuillotine: boolean,\n    cutMarksInMarginArea: boolean,\n    cutMarksOnFrontSideOnly: boolean,\n): GameCreatePdfRequest => {\n    return {\n        type: GAME_CREATE_PDF_REQUEST,\n        collectionType,\n        collectionId,\n        pageWidth,\n        pageHeight,\n        topBottomMargin,\n        leftRightMargin,\n        verticalSpace,\n        horizontalSpace,\n        includeBleedingArea,\n        cutMarksForScissors,\n        cutMarksForGuillotine,\n        cutMarksInMarginArea,\n        cutMarksOnFrontSideOnly,\n    };\n};\n\nexport const gameCreatePngRequest = (\n    dpi: number,\n    collectionType: string,\n    collectionId: string,\n): GameCreatePngRequest => {\n    return {\n        type: GAME_CREATE_PNG_REQUEST,\n        dpi,\n        collectionType,\n        collectionId,\n    };\n};\n\nexport const cardSetCreateRequest = (\n    cardsetname: string,\n    width: number,\n    height: number,\n    gameId: string,\n): CardSetsAction => {\n    return {\n        type: CARDSET_CREATE_REQUEST,\n        cardsetname: cardsetname,\n        width,\n        height,\n        gameId,\n    };\n};\n\nexport const cardSetDeleteRequest = (cardSetId: string): CardSetsAction => {\n    return {\n        type: CARDSET_DELETE_REQUEST,\n        cardSetId,\n    };\n};\n\nexport const cardSetRenameRequest = (cardSetId: string, newName: string): CardSetsAction => {\n    return {\n        type: CARDSET_RENAME_REQUEST,\n        cardSetId,\n        newName,\n    };\n};\n\nexport const cardSetImportData = (data: object): CardSetImportData => {\n    return {\n        type: CARDSET_IMPORT_DATA,\n        data,\n    };\n};\n\nexport const cardSetSelectRequest = (id: string): CardSetSelectRequest => {\n    return {\n        type: CARDSET_SELECT_REQUEST,\n        id,\n    };\n};\n\nexport const cardSetCreateCard = (card: CardType): CardSetCreateCard => {\n    return {\n        type: CARDSET_CREATE_CARD,\n        card,\n    };\n};\n\nexport const cardSetCloneCard = (card: CardType): CardSetCloneCard => {\n    return {\n        type: CARDSET_CLONE_CARD,\n        card,\n    };\n};\n\nexport const cardSetRemoveCard = (card: CardType): CardSetRemoveCard => {\n    return {\n        type: CARDSET_REMOVE_CARD,\n        card,\n    };\n};\n\nexport const cardSetUpdateCardCount = (card: CardType, count: number): CardSetUpdateCardCount => {\n    return {\n        type: CARDSET_UPDATE_CARD_COUNT,\n        card,\n        count,\n    };\n};\n\nexport const cardSetAddTextField = (): CardSetAddTextField => {\n    return {\n        type: CARDSET_ADD_TEXT_FIELD,\n    };\n};\n\nexport const cardSetAddImageField = (): CardSetAddImageField => {\n    return {\n        type: CARDSET_ADD_IMAGE_FIELD,\n    };\n};\n\nexport const cardSetChangeActiveFieldName = (name: string): CardSetChangeActiveFieldName => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_FIELD_NAME,\n        name,\n    };\n};\n\nexport const cardSetRemoveActiveField = (): CardSetRemoveActiveField => {\n    return {\n        type: CARDSET_REMOVE_ACTIVE_FIELD,\n    };\n};\n\nexport const cardSetRaiseActiveField = (): CardSetRaiseActiveField => {\n    return {\n        type: CARDSET_RAISE_ACTIVE_FIELD,\n    };\n};\n\nexport const cardSetRaiseActiveFieldToTop = (): CardSetRaiseActiveFieldToTop => {\n    return {\n        type: CARDSET_RAISE_ACTIVE_FIELD_TO_TOP,\n    };\n};\n\nexport const cardSetLowerActiveField = (): CardSetLowerActiveField => {\n    return {\n        type: CARDSET_LOWER_ACTIVE_FIELD,\n    };\n};\n\nexport const cardSetLowerActiveFieldToBottom = (): CardSetLowerActiveFieldToBottom => {\n    return {\n        type: CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM,\n    };\n};\n\nexport const cardSetLockActiveField = (): CardSetLockActiveField => {\n    return {\n        type: CARDSET_LOCK_ACTIVE_FIELD,\n    };\n};\n\nexport const cardSetUnlockActiveField = (): CardSetUnlockActiveField => {\n    return {\n        type: CARDSET_UNLOCK_ACTIVE_FIELD,\n    };\n};\n\nexport const cardSetChangeFitForActiveField = (fit: string): CardSetChangeFitForActiveField => {\n    return {\n        type: CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD,\n        fit,\n    };\n};\n\nexport const cardSetChangeCropForActiveField = (crop: boolean): CardSetChangeCropForActiveField => {\n    return {\n        type: CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD,\n        crop,\n    };\n};\n\nexport const cardSetChangeUnclickableForActiveField = (\n    unclickable: boolean,\n): CardSetChangeUnclickableForActiveField => {\n    return {\n        type: CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD,\n        unclickable,\n    };\n};\n\nexport const cardSetChangeWidth = (\n    width: number,\n    maintainAspectRatio: boolean,\n    resizeContent: boolean,\n): CardSetChangeWidth => {\n    return {\n        type: CARDSET_CHANGE_WIDTH,\n        width,\n        maintainAspectRatio,\n        resizeContent,\n    };\n};\n\nexport const cardSetChangeHeight = (\n    height: number,\n    maintainAspectRatio: boolean,\n    resizeContent: boolean,\n): CardSetChangeHeight => {\n    return {\n        type: CARDSET_CHANGE_HEIGHT,\n        height,\n        maintainAspectRatio,\n        resizeContent,\n    };\n};\n\nexport const cardSetChangeIsTwoSided = (isTwoSided: boolean): CardSetChangeIsTwoSided => {\n    return {\n        type: CARDSET_CHANGE_IS_TWO_SIDED,\n        isTwoSided,\n    };\n};\n\nexport const cardSetChangeSnappingDistance = (snappingDistance: number): CardSetChangeSnappingDistance => {\n    return {\n        type: CARDSET_CHANGE_SNAPPING_DISTANCE,\n        snappingDistance,\n    };\n};\n\nexport const cardSetChangeFieldPosition = (\n    cardId: string | undefined,\n    fieldId: string,\n    x: number,\n    y: number,\n    group: string,\n): CardSetChangeFieldPosition => {\n    return {\n        type: CARDSET_CHANGE_FIELD_POSITION,\n        cardId,\n        fieldId,\n        x,\n        y,\n        group,\n    };\n};\n\nexport const cardSetChangeFieldPan = (\n    cardId: string | undefined,\n    fieldId: string,\n    cx: number,\n    cy: number,\n    group: string,\n): CardSetChangeFieldPan => {\n    return {\n        type: CARDSET_CHANGE_FIELD_PAN,\n        cardId,\n        fieldId,\n        cx,\n        cy,\n        group,\n    };\n};\n\nexport const cardSetChangeFieldZoom = (\n    cardId: string | undefined,\n    fieldId: string,\n    zoom: number,\n    group: string,\n): CardSetChangeFieldZoom => {\n    return {\n        type: CARDSET_CHANGE_FIELD_ZOOM,\n        cardId,\n        fieldId,\n        zoom,\n        group,\n    };\n};\n\nexport const cardSetChangeFieldSize = (\n    cardId: string | undefined,\n    fieldId: string,\n    width: number,\n    height: number,\n    group: string,\n): CardSetChangeFieldSize => {\n    return {\n        type: CARDSET_CHANGE_FIELD_SIZE,\n        cardId,\n        fieldId,\n        width,\n        height,\n        group,\n    };\n};\n\nexport const cardSetChangeFieldAngle = (\n    cardId: string | undefined,\n    fieldId: string,\n    angle: number,\n    group: string,\n): CardSetChangeFieldAngle => {\n    return {\n        type: CARDSET_CHANGE_FIELD_ANGLE,\n        cardId,\n        fieldId,\n        angle,\n        group,\n    };\n};\n\nexport const cardSetChangeActiveTextFieldAlign = (align: string): CardSetChangeActiveTextFieldAlign => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN,\n        align,\n    };\n};\n\nexport const cardSetChangeActiveTextFieldColor = (color: string): CardSetChangeActiveTextFieldColor => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR,\n        color,\n    };\n};\n\nexport const cardSetChangeActiveTextFieldFontFamily = (fontFamily: string): CardSetChangeActiveTextFieldFontFamily => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY,\n        fontFamily,\n    };\n};\n\nexport const cardSetChangeActiveTextFieldFontVariant = (\n    fontVariant: string,\n): CardSetChangeActiveTextFieldFontVariant => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT,\n        fontVariant,\n    };\n};\n\nexport const cardSetChangeActiveTextFieldFontFamilyAndVariant = (\n    fontFamily: string,\n    fontVariant: string,\n): CardSetChangeActiveTextFieldFontFamilyAndVariant => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT,\n        fontFamily,\n        fontVariant,\n    };\n};\n\nexport const cardSetChangeActiveTextFieldFontSize = (fontSize: number): CardSetChangeActiveTextFieldFontSize => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE,\n        fontSize,\n    };\n};\n\nexport const cardSetChangeActiveTextFieldLineHeight = (lineHeight: number): CardSetChangeActiveTextFieldLineHeight => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT,\n        lineHeight,\n    };\n};\n\nexport const cardSetChangeText = (cardId: string, fieldId: string, textInfo: TextInfo): CardSetChangeText => {\n    return {\n        type: CARDSET_CHANGE_TEXT,\n        cardId,\n        fieldId,\n        textInfo,\n    };\n};\n\nexport const cardSetChangeImage = (\n    cardId: string | undefined,\n    fieldId: string,\n    imageInfo: ImageInfo,\n): CardSetChangeImage => {\n    return {\n        type: CARDSET_CHANGE_IMAGE,\n        cardId,\n        fieldId,\n        imageInfo,\n    };\n};\n\nexport const cardSetChangeImageBase64 = (\n    cardId: string,\n    fieldId: string,\n    base64?: string,\n): CardSetChangeImageBase64 => {\n    return {\n        type: CARDSET_CHANGE_IMAGE_BASE64,\n        cardId,\n        fieldId,\n        base64,\n    };\n};\n\nexport const cardSetActiveCardAndField = (\n    cardId: string | undefined,\n    isBackActive: boolean,\n    fieldId: string | undefined,\n): CardSetSetActiveCardAndField => {\n    return {\n        type: CARDSET_SET_ACTIVE_CARD_AND_FIELD,\n        cardId,\n        isBackActive,\n        fieldId,\n    };\n};\n\nexport const cardSetChangeApplyToAllCards = (applyToAllCards: boolean): CardSetChangeApplyToAllCards => {\n    return {\n        type: CARDSET_CHANGE_APPLY_TO_ALLCARDS,\n        applyToAllCards,\n    };\n};\n\nexport const cardSetSetSidebarState = (sidebarState: SidebarState | null): CardSetSetSidebarState => {\n    return {\n        type: CARDSET_SET_SIDEBAR_STATE,\n        sidebarState,\n    };\n};\n\nexport const cardSetSetZoom = (zoom: number): CardSetSetZoom => {\n    return {\n        type: CARDSET_SET_ZOOM,\n        zoom,\n    };\n};\n\nexport const cardSetUploadImage = (\n    gameId: string,\n    file: File,\n    load: FPLoadCallback,\n    error: FPErrorCallback,\n    progress: FPProgressCallback,\n    abort: FPAbortCallback,\n    cancelToken: CancelToken,\n): CardSetUploadImage => {\n    return {\n        type: CARDSET_UPLOAD_IMAGE,\n        gameId,\n        file,\n        load,\n        error,\n        progress,\n        abort,\n        cancelToken,\n    };\n};\n\nexport const cardSetDeleteImage = (\n    imageId: string,\n    load: FPRevertLoadCallback,\n    error: FPErrorCallback,\n): CardSetDeleteImage => {\n    return {\n        type: CARDSET_DELETE_IMAGE,\n        imageId,\n        load,\n        error,\n    };\n};\n\nexport const cardSetUndo = (): CardSetUndo => {\n    return {\n        type: CARDSET_UNDO,\n    };\n};\n\nexport const cardSetRedo = (): CardSetRedo => {\n    return {\n        type: CARDSET_REDO,\n    };\n};\n\nexport const imageListRequest = (filter: string, location: string): ImageListAction => {\n    return {\n        type: IMAGE_LIST_REQUEST,\n        filter,\n        location,\n    };\n};\n","export const CURRENT_CARDSET_VERSION = 3;\nexport const DEFAULT_FONT = 'Roboto';\nexport const DEFAULT_FONT_VARIANT = 'regular';\nexport const DEFAULT_FONT_SIZE = 8;\nexport const DEFAULT_LINE_HEIGHT = 1.27;\n\nexport const BLEED_WIDTH = 25.4 / 8; // 1/8th of inch in mm\n","import axios, { AxiosError, CancelToken } from 'axios';\n\nimport { Credentials } from './types';\n\nexport function handleAxiosError(error: AxiosError) {\n    if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        // error.response.status);\n        throw new Error(error.response.data.message);\n    } else if (error.request) {\n        console.log(error.request);\n        throw new Error(error.request);\n    } else {\n        throw new Error('Unknown error :(');\n    }\n}\n\nexport function getTokens(creds: Credentials) {\n    return axios\n        .post('/api/tokens', creds)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function refreshToken(refreshTokenValue: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${refreshTokenValue}` },\n    };\n    return axios\n        .post('/api/access_tokens', {}, config)\n        .then(resp => {\n            return resp.data.accessToken;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function deleteAccessToken(token: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .delete('/api/access_tokens', config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            if (error.response.status === 401) return {};\n            handleAxiosError(error);\n        });\n}\n\nexport function deleteRefreshToken(token: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .delete('/api/refresh_tokens', config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            if (error.response.status === 401) return {};\n            handleAxiosError(error);\n        });\n}\n\nexport function registerUser(creds: Credentials) {\n    return axios\n        .post('/api/users', creds)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function getRequest(url: string, token: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .get(url, config)\n        .then(resp => {\n            return resp;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function postRequest(url: string, token: string, data: object) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .post(url, data, config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function postRequestFormDataCancelable(\n    url: string,\n    token: string,\n    data: FormData,\n    progressCallback: (event: ProgressEvent) => void,\n    cancelToken: CancelToken,\n    cancelCallback: () => void,\n) {\n    let config = {\n        headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'multipart/form-data',\n        },\n        cancelToken,\n        onUploadProgress: progressCallback,\n    };\n\n    return axios\n        .post(url, data, config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            if (axios.isCancel(error)) {\n                cancelCallback();\n            } else {\n                handleAxiosError(error);\n            }\n        });\n}\n\nexport function putRequest(url: string, token: string, data: object) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .put(url, data, config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function deleteRequest(url: string, token: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .delete(url, config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n","import axios from 'axios';\nimport { ImageFieldInfo, ImageToDraw } from './types';\nimport StackTrace from 'stacktrace-js';\n\nexport function downloadBlob(blobURL: string, filename: string, resolve?: () => void) {\n    const tempLink = document.createElement('a');\n    tempLink.style.display = 'none';\n    tempLink.href = blobURL;\n    tempLink.setAttribute('download', filename);\n    if (typeof tempLink.download === 'undefined') {\n        tempLink.setAttribute('target', '_blank');\n    }\n    document.body.appendChild(tempLink);\n    tempLink.click();\n    document.body.removeChild(tempLink);\n    setTimeout(() => {\n        window.URL.revokeObjectURL(blobURL);\n        if (resolve) resolve();\n    }, 100);\n}\n\nexport function rotateVec(x: number, y: number, a: number) {\n    const sinA = Math.sin(a);\n    const cosA = Math.cos(a);\n    const rx = cosA * x - sinA * y;\n    const ry = sinA * x + cosA * y;\n\n    return { rx, ry };\n}\n\nexport function calculateImageDimensions(imageFieldInfo: ImageFieldInfo | ImageToDraw) {\n    let calculatedImageWidth, calculatedImageHeight;\n    let imageWidth = imageFieldInfo.imageWidth || 1;\n    let imageHeight = imageFieldInfo.imageHeight || 1;\n\n    if (!imageFieldInfo.fit || imageFieldInfo.fit === 'width') {\n        calculatedImageWidth = imageFieldInfo.width;\n        calculatedImageHeight = (imageFieldInfo.width * imageHeight) / imageWidth;\n    } else if (imageFieldInfo.fit === 'height') {\n        calculatedImageWidth = (imageFieldInfo.height * imageWidth) / imageHeight;\n        calculatedImageHeight = imageFieldInfo.height;\n    } else {\n        // strech\n        calculatedImageWidth = imageFieldInfo.width;\n        calculatedImageHeight = imageFieldInfo.height;\n    }\n\n    calculatedImageWidth *= imageFieldInfo.zoom || 1;\n    calculatedImageHeight *= imageFieldInfo.zoom || 1;\n\n    return { width: calculatedImageWidth, height: calculatedImageHeight };\n}\n\nexport function reportError(error: Error) {\n    StackTrace.fromError(error).then(stackframes => {\n        var stringifiedStack = stackframes\n            .map(function(sf) {\n                return sf.toString();\n            })\n            .join('\\n');\n\n        if (process.env.NODE_ENV === 'production') {\n            axios.post('/api/reports', { message: error.message, stack: stringifiedStack });\n        } else {\n            console.log(stringifiedStack);\n        }\n    });\n}\n","import { Dispatch } from './actions';\n\nexport interface SidebarOwnProps {\n    visible: boolean;\n}\n\nexport interface DispatchProps {\n    dispatch: Dispatch;\n}\n\nexport type IdsArray = string[];\n\nexport interface MessageType {\n    id: string;\n    type: string;\n    text: string;\n}\n\nexport interface GameType {\n    id: string;\n    name: string;\n}\n\nexport interface GamesCollection {\n    [propName: string]: GameType;\n}\n\nexport interface PlaceholderBase {\n    id: string;\n    type: string;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    angle: number;\n    locked?: boolean;\n    name?: string;\n    isOnBack?: boolean;\n}\n\nexport interface TextPlaceholderType extends PlaceholderBase {\n    type: 'text';\n    align: string;\n    color: string;\n    fontFamily: string;\n    fontVariant: string;\n    fontSize: number;\n    lineHeight?: number;\n}\n\nexport interface ImagePlaceholderType extends PlaceholderBase {\n    id: string;\n    type: 'image';\n    fit?: string;\n    zoom?: number;\n    cx?: number;\n    cy?: number;\n    crop?: boolean;\n}\n\nexport type PlaceholderType = TextPlaceholderType | ImagePlaceholderType;\n\nexport interface PlaceholdersCollection {\n    [propName: string]: PlaceholderType;\n}\n\nexport interface TextInfo {\n    value: string;\n}\n\nexport interface PlaceholdersTextInfoCollection {\n    [propName: string]: TextInfo;\n}\n\nexport interface PlaceholdersTextInfoByCardCollection {\n    [propName: string]: PlaceholdersTextInfoCollection;\n}\n\nexport interface ImageInfo {\n    url?: string;\n    global?: boolean;\n    base64?: string;\n    color?: string;\n    width?: number;\n    height?: number;\n}\n\nexport interface PlaceholdersImageInfoCollection {\n    [propName: string]: ImageInfo;\n}\n\nexport interface PlaceholdersImageInfoByCardCollection {\n    [propName: string]: PlaceholdersImageInfoCollection;\n}\n\nexport interface FieldBaseInfo {\n    id: string;\n    type: string;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    angle: number;\n    locked?: boolean;\n    name?: string;\n    isOnBack?: boolean;\n    unclickable?: boolean;\n}\n\nexport interface TextFieldInfo extends FieldBaseInfo {\n    type: 'text';\n    value: string;\n    align: string;\n    color: string;\n    fontFamily: string;\n    fontVariant: string;\n    fontSize: number;\n    lineHeight?: number;\n}\n\nexport interface ImageFieldInfo extends FieldBaseInfo {\n    type: 'image';\n    url?: string;\n    global?: boolean;\n    base64?: string;\n    color?: string;\n    imageWidth?: number;\n    imageHeight?: number;\n    fit?: string;\n    zoom?: number;\n    cx?: number;\n    cy?: number;\n    crop?: boolean;\n}\n\nexport type FieldInfo = TextFieldInfo | ImageFieldInfo;\n\nexport interface FieldInfoCollection {\n    [propName: string]: FieldInfo;\n}\n\nexport interface FieldInfoByCardCollection {\n    [propName: string]: FieldInfoCollection;\n}\n\nexport interface CardType {\n    id: string;\n    count: number;\n}\n\nexport interface CardsCollection {\n    [propName: string]: CardType;\n}\n\nexport interface CardSetType {\n    id: string;\n    name: string;\n}\n\nexport interface CardSetsCollection {\n    [propName: string]: CardSetType;\n}\n\nexport interface Credentials {\n    username: string;\n    password: string;\n}\n\nexport interface Image {\n    id: number;\n    name: string;\n    width: number;\n    height: number;\n}\n\nexport type ImageArray = Image[];\n\nexport interface CardSetData {\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    cardsAllIds: string[];\n    cardsById: CardsCollection;\n    fieldsAllIds: string[];\n    fields: FieldInfoByCardCollection;\n}\n\nexport enum ImageType {\n    SVG,\n    SVG_PATH,\n    IMAGE,\n    BLOCK_START,\n    BLOCK_END,\n}\n\nexport interface ImageToDraw {\n    type: ImageType;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    angle: number;\n    fit?: string;\n    data: string;\n    color?: string;\n    scale?: number;\n    imageWidth?: number;\n    imageHeight?: number;\n    zoom?: number;\n    cx?: number;\n    cy?: number;\n    crop?: boolean;\n}\n","import axios from 'axios';\nimport { downloadBlob, calculateImageDimensions } from './utils';\nimport { delay } from 'redux-saga';\nimport { XmlDocument } from 'xmldoc';\nimport JSZip from 'jszip';\nimport { getRequest } from './requests';\nimport { CardSetData, ImageToDraw, ImageType } from './types';\n\nconst SVG_B64_START = 'data:image/svg+xml;base64,';\n\nexport const generatePdfUsingWorker = (\n    accessToken: string,\n    collectionType: string,\n    collectionId: string,\n    pageWidth: number,\n    pageHeight: number,\n    topBottomMargin: number,\n    leftRightMargin: number,\n    verticalSpace: number,\n    horizontalSpace: number,\n    includeBleedingArea: boolean,\n    cutMarksForScissors: boolean,\n    cutMarksForGuillotine: boolean,\n    cutMarksInMarginArea: boolean,\n    cutMarksOnFrontSideOnly: boolean,\n) => {\n    // @ts-ignore\n    if (!window.Worker) {\n        throw new Error('We can not generate PDF because of browser you use. Try using different browser');\n    }\n\n    return new Promise((resolve, reject) => {\n        try {\n            const worker = new Worker('/js/worker.js');\n            worker.addEventListener('message', event => {\n                if (event.data.type === 'generatePdf') {\n                    const blobURL = event.data.url;\n                    downloadBlob(blobURL, 'card.pdf', resolve);\n                } else if (event.data.type === 'generateError') {\n                    const error = event.data.error;\n                    reject({ message: 'PDF generation failed', stack: error.stack });\n                }\n            });\n\n            worker.postMessage({\n                type: 'generatePdf',\n                accessToken,\n                collectionType,\n                collectionId,\n                pageWidth,\n                pageHeight,\n                topBottomMargin,\n                leftRightMargin,\n                verticalSpace,\n                horizontalSpace,\n                includeBleedingArea,\n                cutMarksForScissors,\n                cutMarksForGuillotine,\n                cutMarksInMarginArea,\n                cutMarksOnFrontSideOnly,\n            });\n        } catch (e) {\n            reject(e);\n        }\n    });\n};\n\nfunction loadImage(url: string): Promise<HTMLImageElement> {\n    return new Promise((resolve, reject) => {\n        const img = new Image();\n        img.onload = () => resolve(img);\n        img.onerror = () => reject();\n\n        img.src = url;\n    });\n}\n\nfunction prepareImageToDrawSpace(context: CanvasRenderingContext2D, imageToDraw: ImageToDraw, ptpmm: number) {\n    context.save();\n    let x = (imageToDraw.x + imageToDraw.width / 2) * ptpmm;\n    let y = (imageToDraw.y + imageToDraw.height / 2) * ptpmm;\n    context.translate(x, y);\n    context.rotate(imageToDraw.angle);\n    let ax = (-imageToDraw.width / 2) * ptpmm;\n    let ay = (-imageToDraw.height / 2) * ptpmm;\n    context.translate(ax, ay);\n    if (imageToDraw.crop) {\n        context.rect(0, 0, imageToDraw.width * ptpmm, imageToDraw.height * ptpmm);\n        context.clip();\n    }\n}\n\nfunction fixWidthAndHeightInSvg(data: string) {\n    const doc = new XmlDocument(data);\n    if (!('width' in doc.attr) || !('height' in doc.attr)) {\n        const viewBox = doc.attr['viewBox'].split(' ');\n        doc.attr['width'] = viewBox[2];\n        doc.attr['height'] = viewBox[3];\n    }\n\n    return btoa(doc.toString({ compressed: true }));\n}\n\nclass PNGGenerator {\n    tasksQueue: {\n        type: string;\n        subType: string;\n        imageToDraw?: ImageToDraw;\n        error?: { message: string; stack: string };\n    }[] = [];\n    worker: Worker;\n\n    constructor() {\n        // @ts-ignore\n        if (!window.Worker) {\n            throw new Error('We can not generate PNG because of browser you use. Try using different browser');\n        }\n\n        this.worker = new Worker('/js/worker.js');\n        this.worker.addEventListener('message', event => {\n            if (event.data.type === 'generateCard' || event.data.type === 'generateError') {\n                this.tasksQueue.push(event.data);\n            }\n        });\n    }\n\n    async generateCard(\n        cardSetData: CardSetData,\n        cardId: string,\n        cardIdx: number,\n        dpi: number,\n        isBack: boolean,\n        cardsetFolder: JSZip,\n    ) {\n        this.worker.postMessage({\n            type: 'generateCard',\n            cardSetData,\n            cardId,\n            isBack,\n        });\n\n        let offscreenCanvas = document.createElement('canvas');\n\n        const calculatedWidth = Math.round(dpi * (cardSetData.width / 25.4 + 1 / 4));\n        const calculatedHeight = Math.round(dpi * (cardSetData.height / 25.4 + 1 / 4));\n\n        offscreenCanvas.width = calculatedWidth;\n        offscreenCanvas.height = calculatedHeight;\n        var context = offscreenCanvas.getContext('2d');\n        if (context === null) {\n            throw new Error('We cannot generate PNG because of unknown reason. Try different browser.');\n        }\n        context.fillStyle = 'white';\n        context.fillRect(0, 0, calculatedWidth, calculatedHeight);\n\n        let stopped = false;\n\n        const ptpmm = dpi / 25.4;\n\n        while (!stopped) {\n            while (this.tasksQueue.length > 0) {\n                let task = this.tasksQueue.shift();\n\n                if (task && task.imageToDraw) {\n                    const imageToDraw = task.imageToDraw;\n\n                    if (imageToDraw.type === ImageType.SVG_PATH) {\n                        prepareImageToDrawSpace(context, imageToDraw, ptpmm);\n                        if (imageToDraw.scale && imageToDraw.color) {\n                            context.fillStyle = imageToDraw.color;\n                            context.scale(imageToDraw.scale * ptpmm, imageToDraw.scale * ptpmm);\n                            var p = new Path2D(imageToDraw.data);\n                            context.fill(p);\n                        }\n                        context.restore();\n                    } else if (imageToDraw.type === ImageType.IMAGE || imageToDraw.type === ImageType.SVG) {\n                        prepareImageToDrawSpace(context, imageToDraw, ptpmm);\n\n                        if (imageToDraw.cx !== undefined && imageToDraw.cy !== undefined) {\n                            context.translate(imageToDraw.cx * ptpmm, imageToDraw.cy * ptpmm);\n                        }\n                        let dim = calculateImageDimensions(imageToDraw);\n\n                        let image;\n                        if (imageToDraw.type === ImageType.SVG) {\n                            let svgData = fixWidthAndHeightInSvg(atob(imageToDraw.data));\n                            image = await loadImage(SVG_B64_START + svgData);\n                        } else {\n                            let resp = await axios.get(imageToDraw.data);\n                            if (resp.headers['content-type'] === 'image/svg+xml') {\n                                let svgData = fixWidthAndHeightInSvg(resp.data);\n                                image = await loadImage(SVG_B64_START + svgData);\n                            } else {\n                                image = await loadImage(imageToDraw.data);\n                            }\n                        }\n\n                        context.drawImage(image, 0, 0, dim.width * ptpmm, dim.height * ptpmm);\n\n                        context.restore();\n                    } else if (imageToDraw.type === ImageType.BLOCK_START) {\n                        prepareImageToDrawSpace(context, imageToDraw, ptpmm);\n                    } else if (imageToDraw.type === ImageType.BLOCK_END) {\n                        context.restore();\n                    }\n                }\n\n                if (task && task.subType === 'stop') {\n                    stopped = true;\n                }\n\n                if (task && task.type === 'generateError' && task.error) {\n                    let error = Error('Failed to generate PNG');\n                    error.stack = task.error.stack;\n                    throw error;\n                }\n            }\n            if (!stopped) {\n                await delay(100);\n            }\n        }\n\n        let dataUrl = offscreenCanvas.toDataURL();\n        dataUrl = dataUrl.slice('data:image/png;base64,'.length);\n        cardsetFolder.file(\n            `${cardIdx.toString().padStart(4, '0')}_${cardId}_${isBack ? 'back' : 'front'}.png`,\n            dataUrl,\n            { base64: true },\n        );\n    }\n\n    async generateGame(accessToken: string, gameId: string, dpi: number, zip: JSZip) {\n        let resp = await getRequest('/api/games/' + gameId, accessToken);\n        if (!resp) return;\n\n        const cardsetsList = resp.data.cardsets;\n        for (const cardsetInfo of cardsetsList) {\n            await this.generateCardset(accessToken, cardsetInfo.id, dpi, zip);\n        }\n    }\n\n    async generateCardset(accessToken: string, cardsetId: string, dpi: number, zip: JSZip) {\n        const resp = await getRequest('/api/cardsets/' + cardsetId, accessToken);\n        if (!resp) return;\n\n        let cardSetData: CardSetData = JSON.parse(resp.data.data);\n\n        let cardsetFolder = zip.folder(resp.data.name);\n\n        for (const [cardIdx, cardId] of cardSetData.cardsAllIds.entries()) {\n            await this.generateCard(cardSetData, cardId, cardIdx, dpi, false, cardsetFolder);\n            if (cardSetData.isTwoSided) {\n                await this.generateCard(cardSetData, cardId, cardIdx, dpi, true, cardsetFolder);\n            }\n        }\n    }\n}\n\nexport const generatePngUsingWorker = async (\n    accessToken: string,\n    collectionType: string,\n    collectionId: string,\n    dpi: number,\n) => {\n    const pngGenerator = new PNGGenerator();\n\n    let zip = new JSZip();\n\n    if (collectionType === 'games') {\n        await pngGenerator.generateGame(accessToken, collectionId, dpi, zip);\n    } else if (collectionType === 'cardsets') {\n        await pngGenerator.generateCardset(accessToken, collectionId, dpi, zip);\n    }\n\n    let blob = await zip.generateAsync({ type: 'blob' });\n    let url = window.URL.createObjectURL(blob);\n    downloadBlob(url, 'cards.zip');\n};\n","export function saveTokens(data: { accessToken: string; refreshToken: string }) {\n    localStorage.setItem('accessToken', data.accessToken);\n    localStorage.setItem('refreshToken', data.refreshToken);\n}\n\nexport function saveAccessToken(accessToken: string) {\n    localStorage.setItem('accessToken', accessToken);\n}\n\nexport function cleanTokens() {\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n}\n\nexport function getTokenFromStorage() {\n    let token = localStorage.getItem('accessToken') || null;\n    return token;\n}\n\nexport function getRefreshTokenFromStorage() {\n    let token = localStorage.getItem('refreshToken') || null;\n    return token;\n}\n","import WebFont from 'webfontloader';\n\nimport { DEFAULT_FONT } from './constants';\nimport { CardSetSelectSuccessDataV3 } from './actions';\n\nconst webFontsLoadPromise = (config: WebFont.Config) =>\n    new Promise((resolve, reject) => {\n        WebFont.load({ ...config, active: resolve, inactive: reject });\n    });\n\nexport const loadFontsUsedInPlaceholders = (data: CardSetSelectSuccessDataV3) => {\n    if (!('fieldsAllIds' in data)) {\n        return;\n    }\n\n    let fontsToLoad: Set<string> = new Set();\n    fontsToLoad.add(DEFAULT_FONT);\n    for (const fieldId of data.fieldsAllIds) {\n        const field = data.fields[data.cardsAllIds[0]][fieldId];\n        if (field && field.type === 'text' && field.fontFamily) {\n            let fontToLoad = field.fontFamily;\n            if (field.fontVariant && field.fontVariant !== 'regular') {\n                fontToLoad += ':' + field.fontVariant;\n            }\n\n            fontsToLoad.add(fontToLoad);\n        }\n    }\n\n    const config: WebFont.Config = {\n        google: {\n            families: [...Array.from(fontsToLoad)],\n        },\n    };\n\n    return webFontsLoadPromise(config);\n};\n","import { CancelToken } from 'axios';\nimport { XmlDocument, XmlNode } from 'xmldoc';\nimport { all, call, put, select, takeEvery, takeLatest } from 'redux-saga/effects';\nimport { delay, SagaIterator } from 'redux-saga';\nimport jwtDecode from 'jwt-decode';\nimport { ActionCreators } from 'redux-undo';\n\nimport { BLEED_WIDTH, CURRENT_CARDSET_VERSION } from './constants';\nimport {\n    CARDSET_ADD_IMAGE_FIELD,\n    CARDSET_ADD_TEXT_FIELD,\n    CARDSET_CHANGE_ACTIVE_FIELD_NAME,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT,\n    CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD,\n    CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD,\n    CARDSET_CHANGE_HEIGHT,\n    CARDSET_CHANGE_IMAGE,\n    CARDSET_CHANGE_IS_TWO_SIDED,\n    CARDSET_CHANGE_FIELD_ANGLE,\n    CARDSET_CHANGE_FIELD_SIZE,\n    CARDSET_CHANGE_SNAPPING_DISTANCE,\n    CARDSET_CHANGE_TEXT,\n    CARDSET_CHANGE_WIDTH,\n    CARDSET_CLONE_CARD,\n    CARDSET_CREATE_CARD,\n    CARDSET_CREATE_FAILURE,\n    CARDSET_CREATE_REQUEST,\n    CARDSET_CREATE_SUCCESS,\n    CARDSET_DELETE_IMAGE,\n    CARDSET_DELETE_REQUEST,\n    CARDSET_IMPORT_DATA,\n    CARDSET_LIST_RESET,\n    CARDSET_LIST_SUCCESS,\n    CARDSET_LOCK_ACTIVE_FIELD,\n    CARDSET_LOWER_ACTIVE_FIELD,\n    CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM,\n    CARDSET_RAISE_ACTIVE_FIELD,\n    CARDSET_RAISE_ACTIVE_FIELD_TO_TOP,\n    CARDSET_REMOVE_ACTIVE_FIELD,\n    CARDSET_REMOVE_CARD,\n    CARDSET_RENAME_REQUEST,\n    CARDSET_SELECT_FAILURE,\n    CARDSET_SELECT_REQUEST,\n    CARDSET_SELECT_SUCCESS,\n    CARDSET_SET_ZOOM,\n    CARDSET_UNLOCK_ACTIVE_FIELD,\n    CARDSET_UPDATE_CARD_COUNT,\n    CARDSET_UPLOAD_IMAGE,\n    CARDSET_UPLOAD_IMAGE_FAILURE,\n    CARDSET_UPLOAD_IMAGE_SUCCESS,\n    CardSetChangeFitForActiveField,\n    CardSetChangeImage,\n    CardSetCreateRequest,\n    CardSetDeleteImage,\n    CardSetDeleteRequest,\n    CardSetRenameRequest,\n    CardSetSelectRequest,\n    CardSetUploadImage,\n    GAME_CREATE_PDF_FAILURE,\n    GAME_CREATE_PDF_REQUEST,\n    GAME_CREATE_PDF_SUCCESS,\n    GAME_CREATE_PNG_FAILURE,\n    GAME_CREATE_PNG_REQUEST,\n    GAME_CREATE_PNG_SUCCESS,\n    GAME_CREATE_REQUEST,\n    GAME_CREATE_SUCCESS,\n    GAME_DELETE_REQUEST,\n    GAME_LIST_FAILURE,\n    GAME_LIST_REQUEST,\n    GAME_LIST_RESET,\n    GAME_LIST_SUCCESS,\n    GAME_RENAME_REQUEST,\n    GAME_SELECT_FAILURE,\n    GAME_SELECT_REQUEST,\n    GAME_SELECT_SUCCESS,\n    GameCreatePdfRequest,\n    GameCreatePngRequest,\n    GameCreateRequest,\n    GameDeleteRequest,\n    GameRenameRequest,\n    GameSelectRequest,\n    IMAGE_LIST_FAILURE,\n    IMAGE_LIST_REQUEST,\n    IMAGE_LIST_SUCCESS,\n    INIT_REQUEST,\n    ImageListRequest,\n    LOGIN_FAILURE,\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGOUT_FAILURE,\n    LOGOUT_REQUEST,\n    LOGOUT_SUCCESS,\n    LoginRequest,\n    MESSAGE_DISPLAY,\n    MESSAGE_HIDE,\n    MessageDisplay,\n    SIGNUP_FAILURE,\n    SIGNUP_REQUEST,\n    SIGNUP_SUCCESS,\n    SignUpRequest,\n    cardSetChangeImageBase64,\n    gameSelectRequest,\n    messageDisplay,\n    CARDSET_CHANGE_FIELD_PAN,\n    CARDSET_CHANGE_FIELD_ZOOM,\n    CARDSETS_SELECT_SUCCESS,\n    CARDSET_CHANGE_FIELD_POSITION,\n    CardSetSelectSuccessData,\n    CardSetSelectSuccessDataV2,\n    CardSetSelectSuccessDataV3,\n    CARDSET_UNDO,\n    CARDSET_REDO,\n    CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD,\n} from './actions';\nimport { CardSetType, CardSetsCollection, GameType, GamesCollection, FieldInfoByCardCollection } from './types';\nimport { State } from './reducers';\nimport {\n    deleteAccessToken,\n    deleteRefreshToken,\n    deleteRequest,\n    getRequest,\n    getTokens,\n    postRequest,\n    postRequestFormDataCancelable,\n    putRequest,\n    refreshToken,\n    registerUser,\n} from './requests';\nimport { generatePdfUsingWorker, generatePngUsingWorker } from './workerController';\nimport { getTokenFromStorage, getRefreshTokenFromStorage, saveAccessToken, saveTokens, cleanTokens } from './storage';\nimport { loadFontsUsedInPlaceholders } from './fontLoader';\nimport { reportError } from './utils';\n\n// Messages\nexport function* putError(e: Error): SagaIterator {\n    yield put(messageDisplay('error', e.message));\n    yield call(reportError, e);\n}\n\nexport function* putInfo(message: string): SagaIterator {\n    yield put(messageDisplay('info', message));\n}\n\nexport function* putProgress(text: string): SagaIterator {\n    const message = messageDisplay('progress', text, text);\n    yield put(message);\n    return message.message.id;\n}\n\nexport function* hideProgress(messageId: string): SagaIterator {\n    yield put({ type: MESSAGE_HIDE, messageId });\n}\n\nexport function* handleMessageDisplay(action: MessageDisplay): SagaIterator {\n    if (action.message.type === 'progress') return;\n\n    yield call(delay, 5000);\n    yield put({ type: MESSAGE_HIDE, messageId: action.message.id });\n}\n\n// Login & Signup\n// Token handling\n\nexport function validateToken(token: string): boolean {\n    try {\n        const decoded = jwtDecode<{ exp: number }>(token);\n        const valid = decoded.exp - new Date().getTime() / 1000 > 5;\n        return valid;\n    } catch (e) {\n        return false;\n    }\n}\n\nexport function* getToken(withErrorIfMissing: boolean, getFreshToken = false): SagaIterator {\n    const token = yield call(getTokenFromStorage);\n    if (token && !getFreshToken) {\n        const tokenValid = yield call(validateToken, token);\n        if (tokenValid) return token;\n    }\n\n    const refreshTokenValue = yield call(getRefreshTokenFromStorage);\n    if (!refreshTokenValue) {\n        if (withErrorIfMissing) throw new Error('Token not found.');\n        return null;\n    }\n\n    const refreshTokenValid = yield call(validateToken, refreshTokenValue);\n    if (!refreshTokenValid) {\n        yield put({ type: LOGOUT_REQUEST });\n        if (withErrorIfMissing) throw new Error('Token not found.');\n        return null;\n    }\n\n    const newToken = yield call(refreshToken, refreshTokenValue);\n    yield call(saveAccessToken, newToken);\n    return newToken;\n}\n\n// Login\n\nexport function* handleLoginRequest(action: LoginRequest): SagaIterator {\n    try {\n        const data = yield call(getTokens, action.creds);\n        yield call(saveTokens, data);\n        yield put({ type: LOGIN_SUCCESS });\n    } catch (e) {\n        yield put({ type: LOGIN_FAILURE });\n        yield call(putError, e);\n    }\n}\n\nexport function* handleLoginSuccess(): SagaIterator {\n    yield put({ type: GAME_LIST_REQUEST });\n}\n\n// Logout\n\nexport function* logoutToken(): SagaIterator {\n    const token = yield call(getTokenFromStorage);\n    if (token) {\n        const tokenValid = yield call(validateToken, token);\n        if (tokenValid) {\n            yield call(deleteAccessToken, token);\n        }\n    }\n}\n\nexport function* logoutRefreshToken(): SagaIterator {\n    const refreshTokenValue = yield call(getRefreshTokenFromStorage);\n    if (refreshTokenValue) {\n        const refreshTokenValid = yield call(validateToken, refreshTokenValue);\n        if (refreshTokenValid) {\n            yield call(deleteRefreshToken, refreshTokenValue);\n        }\n    }\n}\n\nexport function* handleLogoutRequest(): SagaIterator {\n    try {\n        yield call(logoutToken);\n        yield call(logoutRefreshToken);\n        yield call(cleanTokens);\n\n        yield put({ type: CARDSET_LIST_RESET });\n        yield put({ type: GAME_LIST_RESET });\n        yield put({ type: LOGOUT_SUCCESS });\n    } catch (e) {\n        yield put({ type: LOGOUT_FAILURE });\n        yield call(putError, e);\n    }\n}\n\n// Sign-up\n\nexport function* handleSignupRequest(action: SignUpRequest): SagaIterator {\n    try {\n        const data = yield call(registerUser, action.creds);\n        yield call(saveTokens, data);\n        yield put({ type: SIGNUP_SUCCESS });\n        yield put({ type: LOGIN_SUCCESS });\n    } catch (e) {\n        yield put({ type: SIGNUP_FAILURE });\n        yield call(putError, e);\n    }\n}\n\n// Init\nexport function* handleInitRequest(): SagaIterator {\n    try {\n        let token = yield call(getToken, false);\n        if (token) {\n            yield put({ type: LOGIN_SUCCESS });\n        }\n    } catch (e) {}\n}\n\n// Authorized Requests\nexport function* authorizedGetRequest(url: string): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(getRequest, url, token);\n}\n\nexport function* authorizedPostRequest(url: string, data: object): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(postRequest, url, token, data);\n}\n\nexport function* authorizedDeleteRequest(url: string): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(deleteRequest, url, token);\n}\n\nexport function* authorizedPostFormDataRequest(\n    url: string,\n    data: FormData,\n    progressCallback: (event: ProgressEvent) => void,\n    cancelToken: CancelToken,\n    cancelCallback: () => void,\n): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(postRequestFormDataCancelable, url, token, data, progressCallback, cancelToken, cancelCallback);\n}\n\nexport function* authorizedPutRequest(url: string, data: object): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(putRequest, url, token, data);\n}\n\n// Game\nexport function* handleGameCreateRequest(action: GameCreateRequest): SagaIterator {\n    try {\n        yield call(authorizedPostRequest, '/api/games', { name: action.gamename });\n        yield put({\n            type: GAME_CREATE_SUCCESS,\n        });\n        yield put({ type: GAME_LIST_REQUEST });\n    } catch (e) {\n        yield call(putError, e);\n    }\n}\n\nexport function* handleGameDeleteRequest(action: GameDeleteRequest): SagaIterator {\n    try {\n        yield call(authorizedDeleteRequest, '/api/games/' + action.gameId);\n        yield put({ type: GAME_LIST_REQUEST });\n    } catch (e) {\n        yield call(putError, e);\n    }\n}\n\nexport function* handleGameRenameRequest(action: GameRenameRequest): SagaIterator {\n    try {\n        yield call(delay, 500);\n        yield call(authorizedPutRequest, '/api/games/' + action.gameId, { name: action.newName });\n    } catch (e) {\n        yield call(putError, e);\n    }\n}\n\nexport function* handleGameListRequest(): SagaIterator {\n    try {\n        const resp = yield call(authorizedGetRequest, '/api/games');\n        const allIds = resp.data.games.map((g: GameType) => g.id);\n        const byId = resp.data.games.reduce((obj: GamesCollection, g: GameType) => {\n            obj[g.id] = g;\n            return obj;\n        }, {});\n        yield put({\n            type: GAME_LIST_SUCCESS,\n            allIds,\n            byId,\n        });\n    } catch (e) {\n        yield put({ type: GAME_LIST_FAILURE });\n        yield call(putError, e);\n    }\n}\n\nexport function* handleGameSelectRequest(action: GameSelectRequest): SagaIterator {\n    try {\n        const resp = yield call(authorizedGetRequest, '/api/games/' + action.id);\n        yield put({\n            type: GAME_SELECT_SUCCESS,\n            id: action.id,\n        });\n\n        if (action.updateCardSets) {\n            const allIds = resp.data.cardsets.map((g: CardSetType) => g.id);\n            const byId = resp.data.cardsets.reduce((obj: CardSetsCollection, g: CardSetType) => {\n                obj[g.id] = g;\n                return obj;\n            }, {});\n            yield put({\n                type: CARDSET_LIST_SUCCESS,\n                allIds,\n                byId,\n            });\n        }\n    } catch (e) {\n        yield put({ type: GAME_SELECT_FAILURE });\n        yield call(putError, e);\n    }\n}\n\nexport function* handleGameCreatePdfRequest(action: GameCreatePdfRequest): SagaIterator {\n    let progressId = null;\n    try {\n        progressId = yield call(putProgress, 'Generating PDF');\n\n        const token = yield call(getToken, true, true);\n\n        yield call(\n            generatePdfUsingWorker,\n            token,\n            action.collectionType,\n            action.collectionId,\n            action.pageWidth,\n            action.pageHeight,\n            action.topBottomMargin,\n            action.leftRightMargin,\n            action.verticalSpace,\n            action.horizontalSpace,\n            action.includeBleedingArea,\n            action.cutMarksForScissors,\n            action.cutMarksForGuillotine,\n            action.cutMarksInMarginArea,\n            action.cutMarksOnFrontSideOnly,\n        );\n        yield call(hideProgress, progressId);\n        yield call(putInfo, 'PDF generated.');\n        yield put({\n            type: GAME_CREATE_PDF_SUCCESS,\n        });\n    } catch (e) {\n        yield put({ type: GAME_CREATE_PDF_FAILURE });\n        if (progressId !== null) yield call(hideProgress, progressId);\n        yield call(putError, e);\n    }\n}\n\nexport function* handleGameCreatePngRequest(action: GameCreatePngRequest): SagaIterator {\n    let progressId = null;\n    try {\n        progressId = yield call(putProgress, 'Generating PNG');\n\n        const token = yield call(getToken, true, true);\n\n        yield call(generatePngUsingWorker, token, action.collectionType, action.collectionId, action.dpi);\n        yield call(hideProgress, progressId);\n        yield call(putInfo, 'PNG generated.');\n        yield put({\n            type: GAME_CREATE_PNG_SUCCESS,\n        });\n    } catch (e) {\n        yield put({ type: GAME_CREATE_PNG_FAILURE });\n        if (progressId !== null) yield call(hideProgress, progressId);\n        yield call(putError, e);\n    }\n}\n\n// Card Set\n\nexport function* handleCardSetCreateRequest(action: CardSetCreateRequest): SagaIterator {\n    try {\n        yield call(authorizedPostRequest, '/api/cardsets', {\n            name: action.cardsetname,\n            gameId: action.gameId,\n            data: JSON.stringify({ width: action.width, height: action.height, version: CURRENT_CARDSET_VERSION }),\n        });\n        yield put({\n            type: CARDSET_CREATE_SUCCESS,\n        });\n        yield put(gameSelectRequest(action.gameId, true));\n    } catch (e) {\n        yield put({ type: CARDSET_CREATE_FAILURE });\n        yield call(putError, e);\n    }\n}\n\nexport function* handleCardSetDeleteRequest(action: CardSetDeleteRequest): SagaIterator {\n    try {\n        yield call(authorizedDeleteRequest, '/api/cardsets/' + action.cardSetId);\n        yield put({ type: GAME_LIST_REQUEST });\n\n        const state = yield select();\n        yield put(gameSelectRequest(state.games.active, true));\n    } catch (e) {\n        yield call(putError, e);\n    }\n}\n\nexport function* handleCardSetRenameRequest(action: CardSetRenameRequest): SagaIterator {\n    try {\n        yield call(delay, 500);\n        yield call(authorizedPutRequest, '/api/cardsets/' + action.cardSetId, { name: action.newName });\n    } catch (e) {\n        yield call(putError, e);\n    }\n}\n\nfunction loadImageInfo(url: string): Promise<{ width: number; height: number }> {\n    return new Promise((resolve, reject) => {\n        try {\n            let img = new Image();\n\n            img.addEventListener('load', function() {\n                resolve({\n                    width: this.naturalWidth,\n                    height: this.naturalHeight,\n                });\n            });\n            img.src = url;\n        } catch (e) {\n            reject(e);\n        }\n    });\n}\n\nexport async function processData(data: CardSetSelectSuccessData): Promise<CardSetSelectSuccessDataV3> {\n    let processedData = data;\n\n    if (!('version' in processedData)) {\n        if (!('placeholdersAllIds' in processedData) && 'placeholders' in processedData) {\n            (processedData as CardSetSelectSuccessDataV2).placeholdersAllIds = Object.keys(\n                (processedData as CardSetSelectSuccessDataV2).placeholders,\n            );\n        }\n\n        (processedData as CardSetSelectSuccessDataV2).version = 2;\n        for (const plId in (processedData as CardSetSelectSuccessDataV2).placeholders) {\n            const placeholder = (processedData as CardSetSelectSuccessDataV2).placeholders[plId];\n            placeholder.x += BLEED_WIDTH;\n            placeholder.y += BLEED_WIDTH;\n        }\n    }\n\n    if (processedData.version === 2) {\n        let fieldsAllIds = processedData.placeholdersAllIds;\n        let fields: FieldInfoByCardCollection = {};\n\n        for (const cardId of processedData.cardsAllIds) {\n            fields[cardId] = {};\n\n            for (const fieldId of fieldsAllIds) {\n                let placeholder = processedData.placeholders[fieldId];\n                if (placeholder.type === 'image') {\n                    if (cardId in processedData.images && fieldId in processedData.images[cardId]) {\n                        let imageInfo = processedData.images[cardId][fieldId];\n                        fields[cardId][fieldId] = {\n                            type: 'image',\n                            ...placeholder,\n                            url: imageInfo && imageInfo.url,\n                            global: imageInfo && imageInfo.global,\n                            base64: imageInfo && imageInfo.base64,\n                            color: imageInfo && imageInfo.color,\n                            imageWidth: imageInfo && imageInfo.width,\n                            imageHeight: imageInfo && imageInfo.height,\n                        };\n                    } else {\n                        fields[cardId][fieldId] = {\n                            type: 'image',\n                            ...placeholder,\n                        };\n                    }\n                } else if (placeholder.type === 'text') {\n                    if (cardId in processedData.texts && fieldId in processedData.texts[cardId]) {\n                        fields[cardId][fieldId] = {\n                            type: 'text',\n                            ...placeholder,\n                            ...processedData.texts[cardId][fieldId],\n                        };\n                    } else {\n                        fields[cardId][fieldId] = {\n                            type: 'text',\n                            ...placeholder,\n                            value: '',\n                        };\n                    }\n                }\n            }\n        }\n\n        processedData = {\n            version: 3,\n            width: processedData.width,\n            height: processedData.height,\n            isTwoSided: processedData.isTwoSided,\n            snappingDistance: processedData.snappingDistance,\n            cardsAllIds: processedData.cardsAllIds,\n            cardsById: processedData.cardsById,\n            fields,\n            fieldsAllIds,\n            zoom: processedData.zoom,\n        };\n    }\n\n    // We must load image data on each new load because user can upload new images\n    // that have different dimensions.\n    for (const cardId in processedData.fields) {\n        for (const fieldId in processedData.fields[cardId]) {\n            const fieldInfo = processedData.fields[cardId][fieldId];\n            if (fieldInfo.type === 'image' && fieldInfo.url) {\n                let info = await loadImageInfo(fieldInfo.url);\n                if (info.width !== fieldInfo.imageWidth || info.height !== fieldInfo.imageHeight) {\n                    fieldInfo.imageWidth = info.width;\n                    fieldInfo.imageHeight = info.height;\n                    fieldInfo.cx = 0;\n                    fieldInfo.cy = 0;\n                    fieldInfo.zoom = 1;\n                }\n            }\n        }\n    }\n\n    return processedData;\n}\n\nexport function* handleCardSetSelectRequest(action: CardSetSelectRequest): SagaIterator {\n    try {\n        const resp = yield call(authorizedGetRequest, '/api/cardsets/' + action.id);\n        let parsedData = JSON.parse(resp.data.data);\n        let processedData: CardSetSelectSuccessDataV3 = yield call(processData, parsedData);\n\n        yield call(loadFontsUsedInPlaceholders, processedData);\n        yield put({\n            type: CARDSETS_SELECT_SUCCESS,\n            id: resp.data.id,\n            name: resp.data.name,\n        });\n        yield put({\n            type: CARDSET_SELECT_SUCCESS,\n            data: processedData,\n        });\n        yield put(gameSelectRequest(resp.data.gameId, false));\n        yield put(ActionCreators.clearHistory());\n    } catch (e) {\n        yield put({ type: CARDSET_SELECT_FAILURE });\n        yield call(putError, e);\n    }\n}\n\nexport function* handleCardSetUploadImage(action: CardSetUploadImage): SagaIterator {\n    let progressId = null;\n    try {\n        progressId = yield call(putProgress, `Uploading ${action.file.name}`);\n        const formData = new FormData();\n        formData.set('gameId', action.gameId);\n        formData.append('image', action.file, action.file.name);\n\n        const data = yield call(\n            authorizedPostFormDataRequest,\n            '/api/images',\n            formData,\n            (event: ProgressEvent) => action.progress(event.lengthComputable, event.loaded, event.total),\n            action.cancelToken,\n            () => {\n                action.abort();\n            },\n        );\n        if (data !== undefined) {\n            // not cancelled\n            action.load(data.imageId.toString());\n            yield put({ type: CARDSET_UPLOAD_IMAGE_SUCCESS });\n            yield call(putInfo, `${action.file.name} uploaded`);\n        }\n        yield call(hideProgress, progressId);\n    } catch (e) {\n        yield put({ type: CARDSET_UPLOAD_IMAGE_FAILURE });\n        if (progressId !== null) yield call(hideProgress, progressId);\n        yield call(putError, e);\n        action.error(e.message);\n    }\n}\n\nexport function* handleCardSetDeleteImage(action: CardSetDeleteImage): SagaIterator {\n    try {\n        yield call(authorizedDeleteRequest, '/api/images/' + action.imageId);\n        action.load();\n    } catch (e) {\n        action.error(e.message);\n    }\n}\n\nfunction walkChildren(node: XmlNode, color: string) {\n    if (node.type === 'element') {\n        for (let child of node.children) {\n            if (child.type === 'element')\n                if (child.name === 'path') {\n                    child.attr['fill'] = color;\n                }\n            walkChildren(child, color);\n        }\n    }\n}\n\nfunction adjustSvg(data: string, preserveAspectRatio: boolean, color?: string): string {\n    const doc = new XmlDocument(data);\n    if (!preserveAspectRatio) {\n        doc.attr['preserveAspectRatio'] = 'none';\n    }\n\n    if (color) {\n        walkChildren(doc, color);\n    }\n\n    return btoa(doc.toString({ compressed: true }));\n}\n\nexport function* handleCardSetFitChange(action: CardSetChangeFitForActiveField): SagaIterator {\n    try {\n        yield call(delay, 100);\n        const state: State = yield select();\n\n        if (state.cardset.present.activeFieldId === undefined) {\n            return;\n        }\n\n        for (const cardId in state.cardset.present.cardsById) {\n            const fieldInfo = state.cardset.present.fields[cardId][state.cardset.present.activeFieldId];\n            if (fieldInfo.type === 'image' && fieldInfo.url) {\n                const imageResp = yield call(authorizedGetRequest, fieldInfo.url);\n                if (imageResp.headers['content-type'] === 'image/svg+xml') {\n                    if (action.fit === 'stretch') {\n                        const svg = adjustSvg(imageResp.data, false, fieldInfo.color);\n                        yield put(cardSetChangeImageBase64(cardId, state.cardset.present.activeFieldId, svg));\n                    } else if (fieldInfo.color) {\n                        const svg = adjustSvg(imageResp.data, true, fieldInfo.color);\n                        yield put(cardSetChangeImageBase64(cardId, state.cardset.present.activeFieldId, svg));\n                    } else {\n                        yield put(cardSetChangeImageBase64(cardId, state.cardset.present.activeFieldId, undefined));\n                    }\n                }\n            }\n        }\n    } catch (e) {\n        yield call(putError, e);\n    }\n}\n\nexport function* handleCardSetChangeImage(action: CardSetChangeImage): SagaIterator {\n    try {\n        yield call(delay, 100);\n        const state: State = yield select();\n\n        let cardsToFix =\n            state.cardset.present.applyToAllCards || action.cardId === undefined\n                ? state.cardset.present.cardsAllIds\n                : [action.cardId];\n\n        for (const cardId of cardsToFix) {\n            const cardFields = state.cardset.present.fields[cardId];\n            const imageInfo = cardFields[action.fieldId];\n            if (imageInfo.type === 'image' && imageInfo.url) {\n                const imageResp = yield call(authorizedGetRequest, imageInfo.url);\n\n                if (imageResp.headers['content-type'] === 'image/svg+xml') {\n                    const name = imageInfo.name || imageInfo.id;\n\n                    for (const fieldId in cardFields) {\n                        const fieldInfo = cardFields[fieldId];\n\n                        if ((fieldInfo.name === name || fieldInfo.id === name) && fieldInfo.type === 'image') {\n                            if (fieldInfo.fit === 'stretch') {\n                                const svg = adjustSvg(imageResp.data, false, imageInfo.color);\n                                yield put(cardSetChangeImageBase64(cardId, fieldId, svg));\n                            } else if (imageInfo.color) {\n                                const svg = adjustSvg(imageResp.data, true, imageInfo.color);\n                                yield put(cardSetChangeImageBase64(cardId, fieldId, svg));\n                            } else {\n                                yield put(cardSetChangeImageBase64(cardId, fieldId, undefined));\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    } catch (e) {\n        yield call(putError, e);\n    }\n}\n\nfunction closeHandler(e: Event) {\n    e.preventDefault();\n    e.returnValue = true;\n}\n\nfunction preventWindowClose() {\n    window.addEventListener('beforeunload', closeHandler);\n}\n\nfunction allowWindowClose() {\n    window.removeEventListener('beforeunload', closeHandler);\n}\n\nexport function* handleCardSetChange(): SagaIterator {\n    let progressId = null;\n\n    try {\n        preventWindowClose();\n        progressId = yield call(putProgress, 'Saving Card Set');\n\n        yield call(delay, 1000);\n        const state: State = yield select();\n\n        const cardsetId = state.cardsets.active;\n        if (cardsetId === null) throw Error('Save failed.');\n        const data = {\n            width: state.cardset.present.width,\n            height: state.cardset.present.height,\n            isTwoSided: state.cardset.present.isTwoSided,\n            snappingDistance: state.cardset.present.snappingDistance,\n            version: state.cardset.present.version,\n            cardsAllIds: state.cardset.present.cardsAllIds,\n            cardsById: state.cardset.present.cardsById,\n            fieldsAllIds: state.cardset.present.fieldsAllIds,\n            fields: state.cardset.present.fields,\n            zoom: state.cardset.present.zoom,\n        };\n\n        yield call(authorizedPutRequest, '/api/cardsets/' + cardsetId, {\n            name: state.cardsets.byId[cardsetId].name,\n            data: JSON.stringify(data),\n        });\n        yield call(hideProgress, progressId);\n        yield call(putInfo, 'Card Set saved');\n        allowWindowClose();\n    } catch (e) {\n        if (progressId !== null) yield call(hideProgress, progressId);\n        yield call(putError, e);\n        allowWindowClose();\n    }\n}\n\n// Images\nexport function* handleImageListRequest(action: ImageListRequest): SagaIterator {\n    try {\n        yield call(delay, 200);\n        const state = yield select();\n\n        const filter = encodeURIComponent(action.filter);\n        const location = encodeURIComponent(action.location);\n        const game = encodeURIComponent(state.games.active);\n        const resp = yield call(authorizedGetRequest, `/api/images?name=${filter}&location=${location}&game=${game}`);\n        const images = resp.data.images;\n        yield put({\n            type: IMAGE_LIST_SUCCESS,\n            images,\n        });\n    } catch (e) {\n        yield put({ type: IMAGE_LIST_FAILURE });\n        yield call(putError, e);\n    }\n}\n\n// All\nexport function* rootSaga(): SagaIterator {\n    yield all([\n        takeEvery(MESSAGE_DISPLAY, handleMessageDisplay),\n        takeLatest(LOGIN_REQUEST, handleLoginRequest),\n        takeLatest(LOGIN_SUCCESS, handleLoginSuccess),\n        takeLatest(LOGOUT_REQUEST, handleLogoutRequest),\n        takeLatest(SIGNUP_REQUEST, handleSignupRequest),\n        takeLatest(GAME_CREATE_REQUEST, handleGameCreateRequest),\n        takeLatest(GAME_DELETE_REQUEST, handleGameDeleteRequest),\n        takeLatest(GAME_RENAME_REQUEST, handleGameRenameRequest),\n        takeLatest(GAME_LIST_REQUEST, handleGameListRequest),\n        takeLatest(GAME_SELECT_REQUEST, handleGameSelectRequest),\n        takeLatest(GAME_CREATE_PDF_REQUEST, handleGameCreatePdfRequest),\n        takeLatest(GAME_CREATE_PNG_REQUEST, handleGameCreatePngRequest),\n        takeLatest(CARDSET_CREATE_REQUEST, handleCardSetCreateRequest),\n        takeLatest(CARDSET_DELETE_REQUEST, handleCardSetDeleteRequest),\n        takeLatest(CARDSET_RENAME_REQUEST, handleCardSetRenameRequest),\n        takeLatest(CARDSET_SELECT_REQUEST, handleCardSetSelectRequest),\n        takeEvery(CARDSET_UPLOAD_IMAGE, handleCardSetUploadImage),\n        takeEvery(CARDSET_DELETE_IMAGE, handleCardSetDeleteImage),\n        takeEvery(CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD, handleCardSetFitChange),\n        takeEvery(CARDSET_CHANGE_IMAGE, handleCardSetChangeImage),\n\n        takeLatest(CARDSET_CREATE_CARD, handleCardSetChange),\n        takeLatest(CARDSET_CLONE_CARD, handleCardSetChange),\n        takeLatest(CARDSET_REMOVE_CARD, handleCardSetChange),\n        takeLatest(CARDSET_UPDATE_CARD_COUNT, handleCardSetChange),\n        takeLatest(CARDSET_ADD_TEXT_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_ADD_IMAGE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_FIELD_NAME, handleCardSetChange),\n        takeLatest(CARDSET_REMOVE_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_RAISE_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_RAISE_ACTIVE_FIELD_TO_TOP, handleCardSetChange),\n        takeLatest(CARDSET_LOWER_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM, handleCardSetChange),\n        takeLatest(CARDSET_LOCK_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_UNLOCK_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_WIDTH, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_HEIGHT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_IS_TWO_SIDED, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_SNAPPING_DISTANCE, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_FIELD_POSITION, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_FIELD_PAN, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_FIELD_ZOOM, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_FIELD_SIZE, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_FIELD_ANGLE, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_TEXT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_IMAGE, handleCardSetChange),\n        takeLatest(CARDSET_SET_ZOOM, handleCardSetChange),\n        takeLatest(CARDSET_IMPORT_DATA, handleCardSetChange),\n        takeLatest(CARDSET_UNDO, handleCardSetChange),\n        takeLatest(CARDSET_REDO, handleCardSetChange),\n\n        takeLatest(IMAGE_LIST_REQUEST, handleImageListRequest),\n\n        takeLatest(INIT_REQUEST, handleInitRequest),\n    ]);\n}\n","import { combineReducers } from 'redux';\nimport shortid from 'shortid';\nimport undoable from 'redux-undo';\n\nimport {\n    CARDSET_ADD_IMAGE_FIELD,\n    CARDSET_ADD_TEXT_FIELD,\n    CARDSET_CHANGE_ACTIVE_FIELD_NAME,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT,\n    CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT,\n    CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD,\n    CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD,\n    CARDSET_CHANGE_HEIGHT,\n    CARDSET_CHANGE_IMAGE,\n    CARDSET_CHANGE_IMAGE_BASE64,\n    CARDSET_CHANGE_IS_TWO_SIDED,\n    CARDSET_CHANGE_FIELD_ANGLE,\n    CARDSET_CHANGE_FIELD_SIZE,\n    CARDSET_CHANGE_SNAPPING_DISTANCE,\n    CARDSET_CHANGE_TEXT,\n    CARDSET_CHANGE_WIDTH,\n    CARDSET_CLONE_CARD,\n    CARDSET_CREATE_CARD,\n    CARDSET_IMPORT_DATA,\n    CARDSET_LIST_RESET,\n    CARDSET_LIST_SUCCESS,\n    CARDSET_LOCK_ACTIVE_FIELD,\n    CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM,\n    CARDSET_RAISE_ACTIVE_FIELD_TO_TOP,\n    CARDSET_REMOVE_ACTIVE_FIELD,\n    CARDSET_REMOVE_CARD,\n    CARDSET_RENAME_REQUEST,\n    CARDSET_SELECT_FAILURE,\n    CARDSET_SELECT_REQUEST,\n    CARDSET_SELECT_SUCCESS,\n    CARDSET_SET_ACTIVE_CARD_AND_FIELD,\n    CARDSET_SET_SIDEBAR_STATE,\n    CARDSET_SET_ZOOM,\n    CARDSET_UNLOCK_ACTIVE_FIELD,\n    CARDSET_UPDATE_CARD_COUNT,\n    CardSetAction,\n    GAME_CREATE_PDF_FAILURE,\n    GAME_CREATE_PDF_REQUEST,\n    GAME_CREATE_PDF_SUCCESS,\n    GAME_CREATE_PNG_FAILURE,\n    GAME_CREATE_PNG_REQUEST,\n    GAME_CREATE_PNG_SUCCESS,\n    GAME_LIST_RESET,\n    GAME_LIST_SUCCESS,\n    GAME_RENAME_REQUEST,\n    GAME_SELECT_FAILURE,\n    GAME_SELECT_REQUEST,\n    GAME_SELECT_SUCCESS,\n    GameAction,\n    IMAGE_LIST_REQUEST,\n    IMAGE_LIST_SUCCESS,\n    ImageListAction,\n    LOGIN_FAILURE,\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGOUT_SUCCESS,\n    LoginAction,\n    MESSAGE_DISPLAY,\n    MESSAGE_HIDE,\n    MessageAction,\n    SIGNUP_FAILURE,\n    SIGNUP_REQUEST,\n    SIGNUP_SUCCESS,\n    SidebarState,\n    SignUpAction,\n    CARDSET_CHANGE_FIELD_ZOOM,\n    CARDSET_CHANGE_FIELD_PAN,\n    CardSetsAction,\n    CARDSETS_SELECT_SUCCESS,\n    CARDSET_CHANGE_FIELD_POSITION,\n    CARDSET_UNDO,\n    CARDSET_REDO,\n    Action,\n    CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD,\n    CARDSET_CHANGE_APPLY_TO_ALLCARDS,\n    CARDSET_RAISE_ACTIVE_FIELD,\n    CARDSET_LOWER_ACTIVE_FIELD,\n} from './actions';\nimport {\n    CURRENT_CARDSET_VERSION,\n    DEFAULT_FONT,\n    DEFAULT_FONT_SIZE,\n    DEFAULT_FONT_VARIANT,\n    DEFAULT_LINE_HEIGHT,\n    BLEED_WIDTH,\n} from './constants';\nimport {\n    CardSetsCollection,\n    CardsCollection,\n    GamesCollection,\n    IdsArray,\n    ImageArray,\n    MessageType,\n    FieldInfoByCardCollection,\n    FieldInfoCollection,\n} from './types';\nimport { rotateVec } from './utils';\n\nexport const ACTIVITY_SELECTING = 0x1;\nexport const ACTIVITY_CREATING_PDF = 0x2;\nexport const ACTIVITY_CREATING_PNG = 0x4;\n\nexport interface MessageState {\n    messages: MessageType[];\n}\n\nexport const DefaultMessageState: MessageState = {\n    messages: [],\n};\n\nexport interface AuthState {\n    isAuthenticated: boolean;\n    user: string;\n}\n\nexport const DefaultAuthState: AuthState = {\n    isAuthenticated: false,\n    user: '',\n};\n\nexport interface SignUpState {\n    signingup: boolean;\n}\n\nexport const DefaultSignUpState: SignUpState = {\n    signingup: false,\n};\n\nexport interface GameState {\n    byId: GamesCollection;\n    allIds: IdsArray;\n    activity: number;\n    active: string | null;\n}\n\nexport const DefaultGameState: GameState = {\n    byId: {},\n    allIds: [],\n    activity: 0,\n    active: null,\n};\n\nexport interface TextSettings {\n    align: string;\n    color: string;\n    fontFamily: string;\n    fontVariant: string;\n    fontSize: number;\n    lineHeight?: number;\n}\n\nexport interface CardSetsState {\n    byId: CardSetsCollection;\n    allIds: IdsArray;\n    active: string | null;\n}\n\nexport const DefaultCardSetsState: CardSetsState = {\n    byId: {},\n    allIds: [],\n    active: null,\n};\n\nexport interface CardSetState {\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    snappingDistance: number;\n    version: number;\n    activity: number;\n    cardsAllIds: IdsArray;\n    cardsById: CardsCollection;\n    activeCardId?: string;\n    isBackActive: boolean;\n    activeFieldId?: string;\n    fieldsAllIds: IdsArray;\n    fields: FieldInfoByCardCollection;\n    textSettings: TextSettings;\n    activeSidebar: SidebarState | null;\n    zoom: number;\n    applyToAllCards: boolean;\n}\n\nexport const DefaultCardSetState: CardSetState = {\n    width: 63.5,\n    height: 88.9,\n    isTwoSided: false,\n    snappingDistance: 1,\n    version: CURRENT_CARDSET_VERSION,\n    activity: 0,\n    cardsById: {},\n    cardsAllIds: [],\n    activeCardId: undefined,\n    isBackActive: false,\n    activeFieldId: undefined,\n    fieldsAllIds: [],\n    fields: {},\n    textSettings: {\n        align: 'left',\n        color: '#000000',\n        fontFamily: DEFAULT_FONT,\n        fontVariant: DEFAULT_FONT_VARIANT,\n        fontSize: DEFAULT_FONT_SIZE,\n        lineHeight: DEFAULT_LINE_HEIGHT,\n    },\n    activeSidebar: null,\n    zoom: 1,\n    applyToAllCards: false,\n};\n\nexport interface ImageState {\n    activity: number;\n    filter: string;\n    images: ImageArray;\n}\n\nexport const DefaultImageState: ImageState = {\n    activity: 0,\n    filter: '',\n    images: [],\n};\n\nexport interface State {\n    message: MessageState;\n    auth: AuthState;\n    signup: SignUpState;\n    games: GameState;\n    cardsets: CardSetsState;\n    cardset: {\n        present: CardSetState;\n    };\n    images: ImageState;\n}\n\nexport const DefaultState: State = {\n    message: DefaultMessageState,\n    auth: DefaultAuthState,\n    signup: DefaultSignUpState,\n    games: DefaultGameState,\n    cardsets: DefaultCardSetsState,\n    cardset: {\n        present: DefaultCardSetState,\n    },\n    images: DefaultImageState,\n};\n\nexport function message(state: MessageState = DefaultMessageState, action: MessageAction): MessageState {\n    switch (action.type) {\n        case MESSAGE_DISPLAY:\n            const found = state.messages.find(m => m.id === action.message.id);\n            if (found) return state;\n\n            return {\n                ...state,\n                messages: state.messages.concat(action.message),\n            };\n        case MESSAGE_HIDE:\n            return Object.assign({}, state, {\n                messages: state.messages.filter(m => m.id !== action.messageId),\n            });\n        default:\n            return state;\n    }\n}\n\nexport function auth(state: AuthState = DefaultAuthState, action: LoginAction): AuthState {\n    switch (action.type) {\n        case LOGIN_REQUEST:\n            return Object.assign({}, state, {\n                isAuthenticated: false,\n                user: action.creds.username,\n            });\n        case LOGIN_SUCCESS:\n            return Object.assign({}, state, {\n                isAuthenticated: true,\n            });\n        case LOGIN_FAILURE:\n            return Object.assign({}, state, {\n                isAuthenticated: false,\n            });\n        case LOGOUT_SUCCESS:\n            return Object.assign({}, state, {\n                isAuthenticated: false,\n            });\n        default:\n            return state;\n    }\n}\n\nexport function signup(state: SignUpState = DefaultSignUpState, action: SignUpAction): SignUpState {\n    switch (action.type) {\n        case SIGNUP_REQUEST:\n            return Object.assign({}, state, {\n                signingup: true,\n            });\n        case SIGNUP_SUCCESS:\n            return Object.assign({}, state, {\n                signingup: false,\n            });\n        case SIGNUP_FAILURE:\n            return Object.assign({}, state, {\n                signingup: false,\n            });\n        default:\n            return state;\n    }\n}\n\nexport function games(state: GameState = DefaultGameState, action: GameAction): GameState {\n    switch (action.type) {\n        case GAME_RENAME_REQUEST:\n            const game = state.byId[action.gameId];\n\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    [game.id]: {\n                        ...game,\n                        name: action.newName,\n                    },\n                },\n            };\n        case GAME_LIST_SUCCESS:\n            return Object.assign({}, state, {\n                byId: action.byId,\n                allIds: action.allIds,\n            });\n        case GAME_LIST_RESET:\n            return Object.assign({}, state, {\n                activity: 0,\n                byId: {},\n                allIds: [],\n            });\n        case GAME_SELECT_REQUEST:\n            return Object.assign({}, state, {\n                activity: ACTIVITY_SELECTING,\n            });\n        case GAME_SELECT_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_SELECTING,\n                active: action.id,\n            });\n        case GAME_SELECT_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_SELECTING,\n            });\n        case GAME_CREATE_PDF_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_CREATING_PDF,\n            });\n        case GAME_CREATE_PDF_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING_PDF,\n            });\n        case GAME_CREATE_PDF_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING_PDF,\n            });\n        case GAME_CREATE_PNG_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_CREATING_PNG,\n            });\n        case GAME_CREATE_PNG_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING_PNG,\n            });\n        case GAME_CREATE_PNG_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING_PNG,\n            });\n        default:\n            return state;\n    }\n}\n\nexport function cardsets(state: CardSetsState = DefaultCardSetsState, action: CardSetsAction): CardSetsState {\n    switch (action.type) {\n        case CARDSETS_SELECT_SUCCESS:\n            return {\n                ...state,\n                active: action.id,\n                byId: Object.assign({}, state.byId, {\n                    [action.id]: {\n                        id: action.id,\n                        name: action.name,\n                    },\n                }),\n            };\n        case CARDSET_RENAME_REQUEST:\n            const cardset = state.byId[action.cardSetId];\n\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    [cardset.id]: {\n                        ...cardset,\n                        name: action.newName,\n                    },\n                },\n            };\n        case CARDSET_LIST_SUCCESS:\n            return Object.assign({}, state, {\n                byId: action.byId,\n                allIds: action.allIds,\n            });\n        case CARDSET_LIST_RESET:\n            return Object.assign({}, state, {\n                byId: {},\n                allIds: [],\n            });\n        default:\n            return state;\n    }\n}\n\nfunction resizeFields(fields: FieldInfoByCardCollection, widthRatio: number, heightRatio: number) {\n    let newFields = { ...fields };\n    for (const cardId in newFields) {\n        let cardFields = { ...fields[cardId] };\n        for (const fieldId in cardFields) {\n            let fieldInfo = { ...cardFields[fieldId] };\n            fieldInfo.x = (fieldInfo.x - BLEED_WIDTH) * widthRatio + BLEED_WIDTH;\n            fieldInfo.y = (fieldInfo.y - BLEED_WIDTH) * heightRatio + BLEED_WIDTH;\n            fieldInfo.width *= widthRatio;\n            fieldInfo.height *= heightRatio;\n            if (fieldInfo.type === 'image') {\n                if (fieldInfo.cx) {\n                    fieldInfo.cx *= widthRatio;\n                }\n                if (fieldInfo.cy) {\n                    fieldInfo.cy *= heightRatio;\n                }\n            } else if (fieldInfo.type === 'text') {\n                fieldInfo.fontSize *= heightRatio;\n            }\n            cardFields[fieldId] = fieldInfo;\n        }\n        newFields[cardId] = cardFields;\n    }\n    return newFields;\n}\n\nexport function cardset(state: CardSetState = DefaultCardSetState, action: CardSetAction): CardSetState {\n    switch (action.type) {\n        case CARDSET_SELECT_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_SELECTING,\n            });\n        case CARDSET_SELECT_SUCCESS: {\n            return {\n                ...state,\n                activity: state.activity & ~ACTIVITY_SELECTING,\n                width: action.data.width || 63.5,\n                height: action.data.height || 88.9,\n                isTwoSided: action.data.isTwoSided || false,\n                snappingDistance: action.data.snappingDistance || 1,\n                version: action.data.version,\n                cardsAllIds: action.data.cardsAllIds || [],\n                cardsById: action.data.cardsById || {},\n                fields: action.data.fields || {},\n                fieldsAllIds: action.data.fieldsAllIds || [],\n                activeCardId: undefined,\n                activeFieldId: undefined,\n                isBackActive: false,\n                zoom: action.data.zoom || 1,\n            };\n        }\n        case CARDSET_SELECT_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_SELECTING,\n            });\n        case CARDSET_CREATE_CARD: {\n            let cardFields: FieldInfoCollection = {};\n            if (state.cardsAllIds.length > 0) {\n                cardFields = {\n                    ...state.fields[state.cardsAllIds[0]],\n                };\n\n                for (const fieldId of state.fieldsAllIds) {\n                    let fieldInfo = { ...cardFields[fieldId] };\n                    if (fieldInfo.type === 'text') {\n                        fieldInfo.value = '';\n                    } else if (fieldInfo.type === 'image') {\n                        delete fieldInfo.url;\n                        delete fieldInfo.base64;\n                    }\n                    cardFields[fieldId] = fieldInfo;\n                }\n            }\n            return {\n                ...state,\n                cardsById: {\n                    ...state.cardsById,\n                    [action.card.id]: action.card,\n                },\n                cardsAllIds: state.cardsAllIds ? state.cardsAllIds.concat(action.card.id) : [action.card.id],\n                fields: {\n                    ...state.fields,\n                    [action.card.id]: cardFields,\n                },\n            };\n        }\n        case CARDSET_CLONE_CARD: {\n            let newCard = { ...action.card, id: shortid.generate() };\n\n            const index = state.cardsAllIds.indexOf(action.card.id) + 1;\n            const cardsAllIds = [...state.cardsAllIds.slice(0, index), newCard.id, ...state.cardsAllIds.slice(index)];\n\n            return {\n                ...state,\n                cardsById: {\n                    ...state.cardsById,\n                    [newCard.id]: newCard,\n                },\n                cardsAllIds,\n                fields: {\n                    ...state.fields,\n                    [newCard.id]: {\n                        ...state.fields[action.card.id],\n                    },\n                },\n            };\n        }\n        case CARDSET_REMOVE_CARD: {\n            const cardId = action.card.id;\n            let cardsById = { ...state.cardsById };\n            delete cardsById[cardId];\n\n            let fields = { ...state.fields };\n            if (cardId in fields) {\n                delete fields[cardId];\n            }\n\n            let activeCardId = state.activeCardId === cardId ? undefined : state.activeCardId;\n\n            const cardsAllIds = state.cardsAllIds.filter(id => id !== cardId);\n\n            let fieldsAllIds = state.fieldsAllIds;\n            if (cardsAllIds.length === 0) {\n                fieldsAllIds = [];\n            }\n\n            return {\n                ...state,\n                cardsById,\n                cardsAllIds,\n                fieldsAllIds,\n                fields,\n                activeCardId,\n            };\n        }\n        case CARDSET_UPDATE_CARD_COUNT: {\n            const cardId = action.card.id;\n            let card = { ...state.cardsById[cardId] };\n            card.count = action.count;\n\n            return {\n                ...state,\n                cardsById: {\n                    ...state.cardsById,\n                    [cardId]: card,\n                },\n            };\n        }\n        case CARDSET_ADD_TEXT_FIELD: {\n            let textSettings = { ...state.textSettings };\n            const id = shortid.generate();\n            let fields: FieldInfoByCardCollection = {};\n            for (const cardId of state.cardsAllIds) {\n                fields[cardId] = {\n                    ...state.fields[cardId],\n                    [id]: {\n                        type: 'text',\n                        id,\n                        x: 5,\n                        y: 5,\n                        width: 20,\n                        height: 10,\n                        angle: 0,\n                        isOnBack: state.isBackActive,\n                        value: '',\n                        align: textSettings.align,\n                        color: textSettings.color,\n                        fontFamily: textSettings.fontFamily,\n                        fontVariant: textSettings.fontVariant,\n                        fontSize: textSettings.fontSize,\n                        lineHeight: textSettings.lineHeight || DEFAULT_LINE_HEIGHT,\n                    },\n                };\n            }\n\n            return {\n                ...state,\n                fieldsAllIds: [...state.fieldsAllIds, id],\n                fields,\n            };\n        }\n        case CARDSET_ADD_IMAGE_FIELD: {\n            const id = shortid.generate();\n            let fields: FieldInfoByCardCollection = {};\n            for (const cardId of state.cardsAllIds) {\n                fields[cardId] = {\n                    ...state.fields[cardId],\n                    [id]: {\n                        type: 'image',\n                        id,\n                        x: 5,\n                        y: 5,\n                        width: 20,\n                        height: 20,\n                        angle: 0,\n                        isOnBack: state.isBackActive,\n                        crop: true,\n                    },\n                };\n            }\n\n            return {\n                ...state,\n                fieldsAllIds: [...state.fieldsAllIds, id],\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_ACTIVE_FIELD_NAME: {\n            if (state.activeFieldId !== undefined) {\n                let fields: FieldInfoByCardCollection = {};\n                let id = state.activeFieldId;\n\n                for (const cardId of state.cardsAllIds) {\n                    fields[cardId] = {\n                        ...state.fields[cardId],\n                        [id]: {\n                            ...state.fields[cardId][id],\n                            name: action.name,\n                        },\n                    };\n                }\n\n                return {\n                    ...state,\n                    fields,\n                };\n            }\n\n            return state;\n        }\n\n        case CARDSET_REMOVE_ACTIVE_FIELD: {\n            const fieldId = state.activeFieldId;\n            if (fieldId !== undefined) {\n                let fieldsAllIds = [...state.fieldsAllIds];\n                let fieldIndex = fieldsAllIds.indexOf(fieldId);\n                if (fieldIndex !== -1) {\n                    fieldsAllIds.splice(fieldIndex, 1);\n                }\n\n                let fields = { ...state.fields };\n                for (const cardId in fields) {\n                    if (fieldId in fields[cardId] && !fields[cardId][fieldId].locked) {\n                        let cardFields = { ...fields[cardId] };\n                        delete cardFields[fieldId];\n                        fields[cardId] = cardFields;\n                    }\n                }\n\n                return {\n                    ...state,\n                    fieldsAllIds,\n                    fields,\n                    activeFieldId: undefined,\n                };\n            }\n            return state;\n        }\n        case CARDSET_RAISE_ACTIVE_FIELD: {\n            let fieldsAllIds = [...state.fieldsAllIds];\n\n            if (state.activeFieldId !== undefined) {\n                let index = fieldsAllIds.indexOf(state.activeFieldId);\n                if (index !== -1 && index < fieldsAllIds.length - 1) {\n                    fieldsAllIds.splice(index + 1, 0, fieldsAllIds.splice(index, 1)[0]);\n                }\n            }\n\n            return {\n                ...state,\n                fieldsAllIds,\n            };\n        }\n        case CARDSET_RAISE_ACTIVE_FIELD_TO_TOP: {\n            let fieldsAllIds = [...state.fieldsAllIds];\n\n            if (state.activeFieldId !== undefined) {\n                let index = fieldsAllIds.indexOf(state.activeFieldId);\n                if (index !== -1) {\n                    fieldsAllIds.push(fieldsAllIds.splice(index, 1)[0]);\n                }\n            }\n\n            return {\n                ...state,\n                fieldsAllIds,\n            };\n        }\n        case CARDSET_LOWER_ACTIVE_FIELD: {\n            let fieldsAllIds = [...state.fieldsAllIds];\n\n            if (state.activeFieldId !== undefined) {\n                let index = fieldsAllIds.indexOf(state.activeFieldId);\n                if (index > 0) {\n                    fieldsAllIds.splice(index - 1, 0, fieldsAllIds.splice(index, 1)[0]);\n                }\n            }\n\n            return {\n                ...state,\n                fieldsAllIds,\n            };\n        }\n        case CARDSET_LOWER_ACTIVE_FIELD_TO_BOTTOM: {\n            let fieldsAllIds = [...state.fieldsAllIds];\n\n            if (state.activeFieldId !== undefined) {\n                let index = fieldsAllIds.indexOf(state.activeFieldId);\n                if (index !== -1) {\n                    fieldsAllIds.unshift(fieldsAllIds.splice(index, 1)[0]);\n                }\n            }\n\n            return {\n                ...state,\n                fieldsAllIds,\n            };\n        }\n        case CARDSET_LOCK_ACTIVE_FIELD: {\n            if (state.activeFieldId) {\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        cardFields[fieldId] = {\n                            ...cardFields[fieldId],\n                            locked: true,\n                        };\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                };\n            }\n\n            return state;\n        }\n        case CARDSET_UNLOCK_ACTIVE_FIELD: {\n            if (state.activeFieldId) {\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        cardFields[fieldId] = {\n                            ...cardFields[fieldId],\n                            locked: false,\n                        };\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                };\n            }\n\n            return state;\n        }\n        case CARDSET_CHANGE_FIT_FOR_ACTIVE_FIELD: {\n            if (state.activeFieldId) {\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = { ...cardFields[fieldId] };\n                        if (fieldInfo.type === 'image') {\n                            fieldInfo.fit = action.fit;\n                        }\n                        cardFields[fieldId] = fieldInfo;\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                };\n            }\n\n            return state;\n        }\n        case CARDSET_CHANGE_CROP_FOR_ACTIVE_FIELD: {\n            if (state.activeFieldId) {\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = { ...cardFields[fieldId] };\n                        if (fieldInfo.type === 'image') {\n                            fieldInfo.crop = action.crop;\n                        }\n                        cardFields[fieldId] = fieldInfo;\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                };\n            }\n\n            return state;\n        }\n        case CARDSET_CHANGE_UNCLICKABLE_FOR_ACTIVE_FIELD: {\n            if (state.activeFieldId) {\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = { ...cardFields[fieldId] };\n                        fieldInfo.unclickable = action.unclickable;\n                        cardFields[fieldId] = fieldInfo;\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                };\n            }\n\n            return state;\n        }\n        case CARDSET_CHANGE_WIDTH: {\n            if (!action.width || action.width <= 0) {\n                return state;\n            }\n\n            let height = state.height;\n            if (action.maintainAspectRatio) {\n                height = action.width * (state.height / state.width);\n            }\n\n            let fields = state.fields;\n            if (action.resizeContent) {\n                fields = resizeFields(fields, action.width / state.width, height / state.height);\n            }\n\n            return {\n                ...state,\n                width: action.width,\n                height,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_HEIGHT: {\n            if (!action.height || action.height <= 0) {\n                return state;\n            }\n\n            let width = state.width;\n            if (action.maintainAspectRatio) {\n                width = action.height * (state.width / state.height);\n            }\n\n            let fields = state.fields;\n            if (action.resizeContent) {\n                fields = resizeFields(fields, width / state.width, action.height / state.height);\n            }\n\n            return {\n                ...state,\n                height: action.height,\n                width,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_IS_TWO_SIDED: {\n            return {\n                ...state,\n                isTwoSided: action.isTwoSided,\n            };\n        }\n        case CARDSET_CHANGE_SNAPPING_DISTANCE: {\n            return {\n                ...state,\n                snappingDistance: action.snappingDistance,\n            };\n        }\n        case CARDSET_CHANGE_FIELD_POSITION: {\n            let x = action.x;\n            let y = action.y;\n            let snappingDistance = state.snappingDistance;\n\n            if (snappingDistance !== 0) {\n                x = Math.round(x / snappingDistance) * snappingDistance;\n                y = Math.round(y / snappingDistance) * snappingDistance;\n            }\n\n            let fields = { ...state.fields };\n            let fieldId = action.fieldId;\n            let cardsToFix = action.cardId ? [action.cardId] : state.cardsAllIds;\n\n            for (const cardId of cardsToFix) {\n                let cardFields = { ...fields[cardId] };\n                if (fieldId in cardFields) {\n                    cardFields[fieldId] = {\n                        ...cardFields[fieldId],\n                        x,\n                        y,\n                    };\n                }\n                fields[cardId] = cardFields;\n            }\n\n            return {\n                ...state,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_FIELD_PAN: {\n            let { cx, cy } = action;\n\n            let fields = { ...state.fields };\n            let fieldId = action.fieldId;\n            let cardsToFix = state.applyToAllCards || action.cardId === undefined ? state.cardsAllIds : [action.cardId];\n\n            for (const cardId of cardsToFix) {\n                let cardFields = { ...fields[cardId] };\n                if (fieldId in cardFields) {\n                    let fieldInfo = cardFields[fieldId];\n                    if (fieldInfo.type === 'image') {\n                        let { width, height, zoom, fit, imageWidth, imageHeight } = fieldInfo;\n                        zoom = zoom || 1;\n                        imageHeight = imageHeight || 1;\n                        imageWidth = imageWidth || 1;\n\n                        let fitImageWidth = width;\n                        let fitImageHeight = height;\n                        if (fit === 'width' || fit === undefined) {\n                            fitImageHeight = width * (imageHeight / imageWidth);\n                        } else if (fit === 'height') {\n                            fitImageWidth = height * (imageWidth / imageHeight);\n                        }\n                        cx = Math.min(Math.max(width - zoom * fitImageWidth, cx), 0);\n                        cy = Math.min(Math.max(height - zoom * fitImageHeight, cy), 0);\n\n                        cardFields[fieldId] = {\n                            ...fieldInfo,\n                            cx,\n                            cy,\n                        };\n                    }\n                }\n                fields[cardId] = cardFields;\n            }\n\n            return {\n                ...state,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_FIELD_ZOOM: {\n            let zoom = action.zoom;\n\n            let fields = { ...state.fields };\n            let fieldId = action.fieldId;\n\n            let cardsToFix = state.applyToAllCards || action.cardId === undefined ? state.cardsAllIds : [action.cardId];\n\n            for (const cardId of cardsToFix) {\n                let cardFields = { ...fields[cardId] };\n                if (fieldId in cardFields) {\n                    let fieldInfo = cardFields[fieldId];\n                    if (fieldInfo.type === 'image') {\n                        let { fit, width, height, imageWidth, imageHeight } = fieldInfo;\n\n                        imageHeight = imageHeight || 1;\n                        imageWidth = imageWidth || 1;\n\n                        let fitImageWidth = width;\n                        let fitImageHeight = height;\n                        if (fit === 'width' || fit === undefined) {\n                            fitImageHeight = width * (imageHeight / imageWidth);\n                        } else if (fit === 'height') {\n                            fitImageWidth = height * (imageWidth / imageHeight);\n                        }\n\n                        let cx = fieldInfo.cx || 0;\n                        let cy = fieldInfo.cy || 0;\n                        let oldZoom = fieldInfo.zoom || 1;\n                        cx = cx + ((oldZoom - zoom) * fitImageWidth) / 2;\n                        cy = cy + ((oldZoom - zoom) * fitImageHeight) / 2;\n\n                        cx = Math.min(Math.max(width - zoom * fitImageWidth, cx), 0);\n                        cy = Math.min(Math.max(height - zoom * fitImageHeight, cy), 0);\n\n                        cardFields[fieldId] = {\n                            ...fieldInfo,\n                            zoom,\n                            cx,\n                            cy,\n                        };\n                    }\n                }\n                fields[cardId] = cardFields;\n            }\n\n            return {\n                ...state,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_FIELD_SIZE: {\n            let width = action.width;\n            let height = action.height;\n            let snappingDistance = state.snappingDistance;\n\n            if (snappingDistance !== 0) {\n                width = Math.round(width / snappingDistance) * snappingDistance;\n                height = Math.round(height / snappingDistance) * snappingDistance;\n            }\n\n            let fields = { ...state.fields };\n            let fieldId = action.fieldId;\n            let cardsToFix = action.cardId ? [action.cardId] : state.cardsAllIds;\n\n            for (const cardId of cardsToFix) {\n                let cardFields = { ...fields[cardId] };\n                if (fieldId in cardFields) {\n                    let fieldInfo = { ...cardFields[fieldId] };\n\n                    let nx = fieldInfo.x + fieldInfo.width / 2;\n                    let ny = fieldInfo.y + fieldInfo.height / 2;\n                    let { rx, ry } = rotateVec(\n                        (width - fieldInfo.width) / 2,\n                        (height - fieldInfo.height) / 2,\n                        fieldInfo.angle,\n                    );\n\n                    nx = nx + rx - width / 2;\n                    ny = ny + ry - height / 2;\n\n                    if (fieldInfo.type === 'image' && fieldInfo.cx && fieldInfo.cy) {\n                        if (fieldInfo.fit === 'width' || fieldInfo.fit === undefined) {\n                            let ratio = width / fieldInfo.width;\n                            fieldInfo.cx *= ratio;\n                            fieldInfo.cy *= ratio;\n                        } else if (fieldInfo.fit === 'height') {\n                            let ratio = height / fieldInfo.height;\n                            fieldInfo.cx *= ratio;\n                            fieldInfo.cy *= ratio;\n                        } else {\n                            fieldInfo.cx *= width / fieldInfo.width;\n                            fieldInfo.cy *= height / fieldInfo.height;\n                        }\n                    }\n\n                    fieldInfo.x = nx;\n                    fieldInfo.y = ny;\n                    fieldInfo.width = width;\n                    fieldInfo.height = height;\n                    cardFields[fieldId] = fieldInfo;\n                }\n                fields[cardId] = cardFields;\n            }\n\n            return {\n                ...state,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_FIELD_ANGLE: {\n            let angle = action.angle;\n\n            let fields = { ...state.fields };\n            let fieldId = action.fieldId;\n\n            let cardsToFix = action.cardId ? [action.cardId] : state.cardsAllIds;\n\n            for (const cardId of cardsToFix) {\n                let cardFields = { ...fields[cardId] };\n                if (fieldId in cardFields) {\n                    cardFields[fieldId] = {\n                        ...cardFields[fieldId],\n                        angle,\n                    };\n                }\n                fields[cardId] = cardFields;\n            }\n\n            return {\n                ...state,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_FIELD_ALIGN: {\n            let textSettings = {\n                ...state.textSettings,\n                align: action.align,\n            };\n\n            if (state.activeFieldId) {\n                let align = action.align;\n\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'text') {\n                            cardFields[fieldId] = {\n                                ...fieldInfo,\n                                align,\n                            };\n                        }\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_FIELD_COLOR: {\n            let textSettings = {\n                ...state.textSettings,\n                color: action.color,\n            };\n\n            if (state.activeFieldId) {\n                let color = action.color;\n\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'text') {\n                            cardFields[fieldId] = {\n                                ...fieldInfo,\n                                color,\n                            };\n                        }\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY: {\n            let textSettings = {\n                ...state.textSettings,\n                color: action.fontFamily,\n            };\n\n            if (state.activeFieldId) {\n                let fontFamily = action.fontFamily;\n\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'text') {\n                            cardFields[fieldId] = {\n                                ...fieldInfo,\n                                fontFamily,\n                            };\n                        }\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_VARIANT: {\n            let textSettings = {\n                ...state.textSettings,\n                color: action.fontVariant,\n            };\n\n            if (state.activeFieldId) {\n                let fontVariant = action.fontVariant;\n\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'text') {\n                            cardFields[fieldId] = {\n                                ...fieldInfo,\n                                fontVariant,\n                            };\n                        }\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_FAMILY_AND_VARIANT: {\n            let textSettings = {\n                ...state.textSettings,\n                fontFamily: action.fontFamily,\n                fontVariant: action.fontVariant,\n            };\n\n            if (state.activeFieldId) {\n                let fontFamily = action.fontFamily;\n                let fontVariant = action.fontVariant;\n\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'text') {\n                            cardFields[fieldId] = {\n                                ...fieldInfo,\n                                fontFamily,\n                                fontVariant,\n                            };\n                        }\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_FIELD_FONT_SIZE: {\n            let textSettings = {\n                ...state.textSettings,\n                fontSize: action.fontSize,\n            };\n\n            if (state.activeFieldId) {\n                let fontSize = action.fontSize;\n\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'text') {\n                            cardFields[fieldId] = {\n                                ...fieldInfo,\n                                fontSize,\n                            };\n                        }\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_FIELD_LINE_HEIGHT: {\n            let textSettings = {\n                ...state.textSettings,\n                lineHeight: action.lineHeight,\n            };\n\n            if (state.activeFieldId) {\n                let lineHeight = action.lineHeight;\n\n                let fields = { ...state.fields };\n                let fieldId = state.activeFieldId;\n                for (const cardId in fields) {\n                    let cardFields = { ...fields[cardId] };\n                    if (fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'text') {\n                            cardFields[fieldId] = {\n                                ...fieldInfo,\n                                lineHeight,\n                            };\n                        }\n                    }\n                    fields[cardId] = cardFields;\n                }\n\n                return {\n                    ...state,\n                    fields,\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_TEXT: {\n            let cardFields = { ...state.fields[action.cardId] };\n\n            const fieldInfo = cardFields[action.fieldId];\n            const name = fieldInfo.name || fieldInfo.id;\n\n            for (const fieldId in cardFields) {\n                const testFieldInfo = cardFields[fieldId];\n\n                if ((testFieldInfo.name === name || testFieldInfo.id === name) && testFieldInfo.type === 'text') {\n                    cardFields[fieldId] = {\n                        ...testFieldInfo,\n                        value: action.textInfo.value,\n                    };\n                }\n            }\n\n            return {\n                ...state,\n                fields: {\n                    ...state.fields,\n                    [action.cardId]: cardFields,\n                },\n            };\n        }\n        case CARDSET_CHANGE_IMAGE: {\n            let cardsToFix = state.applyToAllCards || action.cardId === undefined ? state.cardsAllIds : [action.cardId];\n\n            let fields = { ...state.fields };\n\n            for (const cardId of cardsToFix) {\n                let cardFields = { ...state.fields[cardId] };\n\n                const fieldInfo = cardFields[action.fieldId];\n                const name = fieldInfo.name || fieldInfo.id;\n\n                for (const fieldId in cardFields) {\n                    const testFieldInfo = cardFields[fieldId];\n\n                    if ((testFieldInfo.name === name || testFieldInfo.id === name) && testFieldInfo.type === 'image') {\n                        cardFields[fieldId] = {\n                            ...testFieldInfo,\n                            url: 'url' in action.imageInfo ? action.imageInfo.url : testFieldInfo.url,\n                            base64: 'base64' in action.imageInfo ? action.imageInfo.base64 : testFieldInfo.base64,\n                            color: 'color' in action.imageInfo ? action.imageInfo.color : testFieldInfo.color,\n                            imageWidth: 'width' in action.imageInfo ? action.imageInfo.width : testFieldInfo.imageWidth,\n                            imageHeight:\n                                'height' in action.imageInfo ? action.imageInfo.height : testFieldInfo.imageHeight,\n                            cx: 0,\n                            cy: 0,\n                            zoom: 0,\n                        };\n                    }\n                }\n\n                fields[cardId] = cardFields;\n            }\n\n            return {\n                ...state,\n                fields,\n            };\n        }\n        case CARDSET_CHANGE_IMAGE_BASE64: {\n            let cardFields = { ...state.fields[action.cardId] };\n\n            const fieldInfo = cardFields[action.fieldId];\n            const name = fieldInfo.name || fieldInfo.id;\n\n            for (const fieldId in cardFields) {\n                const testFieldInfo = cardFields[fieldId];\n\n                if ((testFieldInfo.name === name || testFieldInfo.id === name) && testFieldInfo.type === 'image') {\n                    cardFields[fieldId] = {\n                        ...testFieldInfo,\n                        base64: action.base64,\n                        cx: 0,\n                        cy: 0,\n                        zoom: 0,\n                    };\n                }\n            }\n\n            return {\n                ...state,\n                fields: {\n                    ...state.fields,\n                    [action.cardId]: cardFields,\n                },\n            };\n        }\n        case CARDSET_SET_ACTIVE_CARD_AND_FIELD: {\n            let textSettings = { ...state.textSettings };\n            let activeSidebar = state.activeSidebar;\n\n            if (activeSidebar !== SidebarState.Measurements && action.cardId !== undefined) {\n                activeSidebar = SidebarState.Details;\n            }\n\n            if (action.cardId !== undefined && action.fieldId !== undefined) {\n                const fieldInfo = state.fields[action.cardId][action.fieldId];\n\n                if (fieldInfo.type === 'text') {\n                    textSettings.align = fieldInfo.align;\n                    textSettings.color = fieldInfo.color;\n                    textSettings.fontFamily = fieldInfo.fontFamily;\n                    textSettings.fontVariant = fieldInfo.fontVariant;\n                    textSettings.fontSize = fieldInfo.fontSize;\n                    textSettings.lineHeight = fieldInfo.lineHeight;\n\n                    if (activeSidebar !== SidebarState.Measurements) {\n                        activeSidebar = SidebarState.Text;\n                    }\n                } else {\n                    if (activeSidebar !== SidebarState.Measurements) {\n                        activeSidebar = SidebarState.Image;\n                    }\n                }\n            }\n\n            return {\n                ...state,\n                activeCardId: action.cardId,\n                isBackActive: action.isBackActive,\n                activeFieldId: action.fieldId,\n                textSettings,\n                activeSidebar,\n            };\n        }\n\n        case CARDSET_CHANGE_APPLY_TO_ALLCARDS: {\n            return {\n                ...state,\n                applyToAllCards: action.applyToAllCards,\n            };\n        }\n\n        case CARDSET_SET_SIDEBAR_STATE: {\n            return {\n                ...state,\n                activeSidebar: action.sidebarState,\n            };\n        }\n        case CARDSET_SET_ZOOM: {\n            return {\n                ...state,\n                zoom: action.zoom,\n            };\n        }\n        case CARDSET_IMPORT_DATA: {\n            return {\n                ...state,\n                ...action.data,\n            };\n        }\n        default:\n            return state;\n    }\n}\n\nexport function images(state: ImageState = DefaultImageState, action: ImageListAction): ImageState {\n    switch (action.type) {\n        case IMAGE_LIST_REQUEST:\n            return Object.assign({}, state, {\n                filter: action.filter,\n            });\n        case IMAGE_LIST_SUCCESS:\n            return Object.assign({}, state, {\n                images: action.images,\n            });\n        default:\n            return state;\n    }\n}\n\nconst undoableCardset = undoable(cardset, {\n    ignoreInitialState: true,\n    undoType: CARDSET_UNDO,\n    redoType: CARDSET_REDO,\n    groupBy: (action: Action) => {\n        if (\n            action.type === 'CARDSET_CHANGE_FIELD_SIZE' ||\n            action.type === 'CARDSET_CHANGE_FIELD_POSITION' ||\n            action.type === 'CARDSET_CHANGE_FIELD_ANGLE' ||\n            action.type === 'CARDSET_CHANGE_FIELD_ZOOM' ||\n            action.type === 'CARDSET_CHANGE_FIELD_PAN'\n        ) {\n            return action.group;\n        }\n        return null;\n    },\n    filter: (action: Action) => {\n        if (!action.type.startsWith('CARDSET_')) {\n            return false;\n        }\n\n        if (action.type === CARDSET_SELECT_REQUEST || action.type === CARDSET_SET_ACTIVE_CARD_AND_FIELD) {\n            return false;\n        }\n        return true;\n    },\n});\n\nconst reducers = combineReducers({\n    message,\n    auth,\n    signup,\n    games,\n    cardsets,\n    cardset: undoableCardset,\n    images,\n});\n\nexport default reducers;\n","import { Ghost, Browser } from 'react-kawaii';\nimport React, { Component } from 'react';\n\nexport enum Character {\n    Ghost,\n    Browser,\n}\ninterface Props {\n    character: Character;\n    mood?: string;\n}\n\nexport default class KawaiiMessage extends Component<Props> {\n    render() {\n        const { character, mood } = this.props;\n\n        return (\n            <div\n                style={{\n                    marginTop: '1em',\n                    marginBottom: '1em',\n                    padding: '1em',\n                    borderRadius: '1em',\n                    backgroundColor: 'var(--color-2)',\n                    display: 'grid',\n                    grid: 'auto-flow / minmax(120px, auto) 1fr',\n                }}\n            >\n                {character === Character.Ghost && <Ghost size={120} mood={mood || 'blissful'} color=\"#faebef\" />}\n                {character === Character.Browser && <Browser size={120} mood={mood || 'blissful'} color=\"#faebef\" />}\n                <div style={{ marginLeft: '1em' }}>{this.props.children}</div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nexport default class AboutPage extends Component {\n    render() {\n        return (\n            <div>\n                <h2>About</h2>\n                <p>\n                    \"Card-a-mon\" is card game development tool. At the moment it is project of single person (me) with a\n                    vision. My aim is to create affordable and practical tool to develop card games from A (prototyping)\n                    to Z (printing). If you have ideas, suggestions, proposals, comments and etc. then you can contact\n                    me by e-mail <a href=\"mailto:dalius@ffff.lt\">dalius@ffff.lt</a>.\n                </p>\n                <h2>Credits</h2>\n                This project is available because of number amazing open source projects. Some of them:\n                <ul>\n                    <li>\n                        <a href=\"https://reactjs.org/\">React</a> and all the ecosystem around it.\n                    </li>\n                    <li>\n                        <a href=\"https://fonts.google.com/\">Google Fonts</a>\n                    </li>\n                    <li>\n                        <a href=\"https://github.com/game-icons/icons\">Game icons</a>\n                    </li>\n                    <li>\n                        <a href=\"http://pdfkit.org/\">PDFKit</a>\n                    </li>\n                </ul>\n                <p>... and many more.</p>\n            </div>\n        );\n    }\n}\n","import { connect } from 'react-redux';\nimport React from 'react';\nimport shortid from 'shortid';\n\nimport { Dispatch } from '../actions';\nimport { State } from '../reducers';\nimport panIcon from './pan.svg';\nimport zoomIcon from './zoom.svg';\nimport resizeIcon from './resize.svg';\nimport rotateIcon from './rotate.svg';\nimport style from './FieldController.module.css';\nimport { rotateVec } from '../utils';\n\ninterface OwnProps {\n    cardId: string;\n    fieldId: string;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    angle: number;\n    zoom?: number;\n    cx?: number;\n    cy?: number;\n    children: React.ReactNode;\n    onDrag: (x: number, y: number, cardOnly: boolean, group: string) => void;\n    onResize: (width: number, height: number, cardOnly: boolean, group: string) => void;\n    onRotate: (angle: number, cardOnly: boolean, group: string) => void;\n    onZoom?: (zoom: number, cardOnly: boolean, group: string) => void;\n    onPan?: (cx: number, cy: number, cardOnly: boolean, group: string) => void;\n    cardWidth: number;\n    cardHeight: number;\n    ppmm: number;\n}\n\ninterface StateProps {\n    isActive: boolean;\n    isActiveField: boolean;\n    isLocked: boolean;\n    isUnclickable: boolean;\n    snappingDistance: number;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nexport interface LocalState {\n    startX: number;\n    startY: number;\n    originalAngle: number;\n    activatedUsingTouch: boolean;\n    group: string;\n}\n\nclass FieldController extends React.Component<Props, LocalState> {\n    cDiv: React.RefObject<HTMLDivElement>;\n    panDiv: React.RefObject<HTMLImageElement>;\n    zoomDiv: React.RefObject<HTMLImageElement>;\n    resizeDiv: React.RefObject<HTMLImageElement>;\n    rotateDiv: React.RefObject<HTMLImageElement>;\n    originalBodyCursor: string | null;\n\n    constructor(props: Props) {\n        super(props);\n        this.cDiv = React.createRef();\n        this.panDiv = React.createRef();\n        this.zoomDiv = React.createRef();\n        this.resizeDiv = React.createRef();\n        this.rotateDiv = React.createRef();\n        this.originalBodyCursor = null;\n        this.state = {\n            activatedUsingTouch: false,\n            startX: 0,\n            startY: 0,\n            originalAngle: 0,\n            group: '',\n        };\n    }\n\n    componentDidMount() {\n        if (this.cDiv.current === null) return;\n        if (this.panDiv.current === null) return;\n        if (this.zoomDiv.current === null) return;\n        if (this.resizeDiv.current === null) return;\n        if (this.rotateDiv.current === null) return;\n\n        this.originalBodyCursor = document.body.style.cursor;\n\n        this.cDiv.current.addEventListener('mousedown', this.handleMouseDown);\n        this.cDiv.current.addEventListener('touchstart', this.handleTouchStart);\n        this.panDiv.current.addEventListener('mousedown', this.handlePanMouseDown);\n        this.panDiv.current.addEventListener('touchstart', this.handlePanTouchStart);\n        this.zoomDiv.current.addEventListener('mousedown', this.handleZoomMouseDown);\n        this.zoomDiv.current.addEventListener('touchstart', this.handleZoomTouchStart);\n        this.resizeDiv.current.addEventListener('mousedown', this.handleResizeMouseDown);\n        this.resizeDiv.current.addEventListener('touchstart', this.handleResizeTouchStart);\n        this.rotateDiv.current.addEventListener('mousedown', this.handleRotateMouseDown);\n        this.rotateDiv.current.addEventListener('touchstart', this.handleRotateTouchStart);\n    }\n\n    handleBrowserDragStart = (event: React.DragEvent) => {\n        event.stopPropagation();\n        event.preventDefault();\n    };\n\n    // Dragging handling\n\n    handleMouseDown = (event: MouseEvent) => {\n        this.handleDragStart(event);\n\n        document.addEventListener('mousemove', this.handleMouseMove);\n        document.addEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleTouchStart = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleDragStart(event.changedTouches[0]);\n\n        document.addEventListener('touchmove', this.handleTouchMove, { passive: false });\n        document.addEventListener('touchend', this.handleTouchEnd, { passive: false });\n    };\n\n    handleDragStart = (co: MouseEvent | Touch) => {\n        if (this.cDiv.current === null) return;\n\n        this.cDiv.current.style.cursor = 'grabbing';\n\n        this.setState({ startX: co.clientX, startY: co.clientY, group: shortid.generate() });\n    };\n\n    handleMouseMove = (event: MouseEvent) => {\n        this.handleDragMove(event, event.ctrlKey);\n    };\n\n    handleTouchMove = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        event.preventDefault();\n        this.handleDragMove(event.changedTouches[0], event.ctrlKey);\n    };\n\n    handleDragMove = (co: MouseEvent | Touch, disableSnapping: boolean) => {\n        const { isLocked, x, y } = this.props;\n\n        if (isLocked) return;\n\n        const { ppmm, snappingDistance } = this.props;\n\n        let nx = x + co.clientX - this.state.startX;\n        let ny = y + co.clientY - this.state.startY;\n\n        if (!disableSnapping && snappingDistance !== 0) {\n            nx = Math.round(nx / ppmm / snappingDistance) * snappingDistance * ppmm;\n            ny = Math.round(ny / ppmm / snappingDistance) * snappingDistance * ppmm;\n        }\n\n        this.setState({ startX: co.clientX, startY: co.clientY });\n        this.props.onDrag(nx, ny, true, this.state.group);\n    };\n\n    handleMouseUp = (event: MouseEvent) => {\n        this.handleComplete(event, false);\n\n        document.removeEventListener('mousemove', this.handleMouseMove);\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleTouchEnd = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleComplete(event, true);\n\n        document.removeEventListener('touchmove', this.handleTouchMove);\n        document.removeEventListener('touchend', this.handleTouchEnd);\n    };\n\n    handleComplete = (event: MouseEvent | TouchEvent, isTouchEvent: boolean) => {\n        const { isLocked, x, y } = this.props;\n\n        if (this.cDiv.current === null) return;\n\n        if (!isLocked) {\n            this.props.onDrag(x, y, false, this.state.group);\n        }\n        this.setState({ activatedUsingTouch: isTouchEvent });\n\n        this.cDiv.current.style.cursor = 'grab';\n    };\n\n    // Pan handling\n\n    handlePanMouseDown = (event: MouseEvent) => {\n        this.handlePanStart(event);\n\n        document.addEventListener('mousemove', this.handlePanMouseMove);\n        document.addEventListener('mouseup', this.handlePanMouseUp);\n        event.stopPropagation();\n    };\n\n    handlePanTouchStart = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handlePanStart(event.changedTouches[0]);\n\n        document.addEventListener('touchmove', this.handlePanTouchMove, { passive: false });\n        document.addEventListener('touchend', this.handlePanTouchEnd, { passive: false });\n        event.stopPropagation();\n        event.preventDefault();\n    };\n\n    handlePanStart = (co: MouseEvent | Touch) => {\n        document.body.style.cursor = `url(${panIcon}), auto`;\n\n        this.setState({ startX: co.clientX, startY: co.clientY, group: shortid.generate() });\n    };\n\n    handlePanMouseMove = (event: MouseEvent) => {\n        this.handlePanMove(event);\n        event.preventDefault();\n    };\n\n    handlePanTouchMove = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handlePanMove(event.changedTouches[0]);\n        event.preventDefault();\n    };\n\n    handlePanMove = (co: MouseEvent | Touch) => {\n        const { cx, cy, angle, onPan } = this.props;\n        if (!onPan || cx === undefined || cy === undefined) return;\n\n        let dx = co.clientX - this.state.startX;\n        let dy = co.clientY - this.state.startY;\n        const { rx, ry } = rotateVec(dx, dy, -angle);\n\n        const newCx = cx + rx;\n        const newCy = cy + ry;\n\n        this.setState({ startX: co.clientX, startY: co.clientY });\n\n        onPan(newCx, newCy, true, this.state.group);\n    };\n\n    handlePanMouseUp = (event: MouseEvent) => {\n        this.handlePanComplete(event);\n\n        document.removeEventListener('mousemove', this.handlePanMouseMove);\n        document.removeEventListener('mouseup', this.handlePanMouseUp);\n    };\n\n    handlePanTouchEnd = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handlePanComplete(event);\n\n        document.removeEventListener('touchmove', this.handlePanTouchMove);\n        document.removeEventListener('touchend', this.handlePanTouchEnd);\n    };\n\n    handlePanComplete = (event: MouseEvent | TouchEvent) => {\n        const { cx, cy, onPan } = this.props;\n        if (onPan && cx !== undefined && cy !== undefined) {\n            onPan(cx, cy, true, this.state.group);\n        }\n\n        document.body.style.cursor = this.originalBodyCursor;\n        event.preventDefault();\n    };\n\n    // Zoom handling\n\n    handleZoomMouseDown = (event: MouseEvent) => {\n        this.handleZoomStart(event);\n\n        document.addEventListener('mousemove', this.handleZoomMouseMove);\n        document.addEventListener('mouseup', this.handleZoomMouseUp);\n        event.stopPropagation();\n    };\n\n    handleZoomTouchStart = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleZoomStart(event.changedTouches[0]);\n\n        document.addEventListener('touchmove', this.handleZoomTouchMove, { passive: false });\n        document.addEventListener('touchend', this.handleZoomTouchEnd, { passive: false });\n        event.stopPropagation();\n        event.preventDefault();\n    };\n\n    handleZoomStart = (co: { clientX: number; clientY: number }) => {\n        document.body.style.cursor = `url(${zoomIcon}), auto`;\n\n        this.setState({ startX: co.clientX, startY: co.clientY, group: shortid.generate() });\n    };\n\n    handleZoomMouseMove = (event: MouseEvent) => {\n        this.handleZoomMove(event);\n        event.preventDefault();\n    };\n\n    handleZoomTouchMove = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleZoomMove(event.changedTouches[0]);\n        event.preventDefault();\n    };\n\n    handleZoomMove = (co: MouseEvent | Touch) => {\n        const { zoom, onZoom } = this.props;\n        if (!onZoom || zoom === undefined) return;\n\n        const dx = co.clientX - this.state.startX;\n        const dy = co.clientY - this.state.startY;\n\n        let z = Math.abs(dx) > Math.abs(dy) ? dx : dy;\n\n        let newZoom = Math.max(zoom + z / 30, 1);\n        this.setState({ startX: co.clientX, startY: co.clientY });\n\n        onZoom(newZoom, true, this.state.group);\n    };\n\n    handleZoomMouseUp = (event: MouseEvent) => {\n        this.handleZoomComplete(event);\n\n        document.removeEventListener('mousemove', this.handleZoomMouseMove);\n        document.removeEventListener('mouseup', this.handleZoomMouseUp);\n    };\n\n    handleZoomTouchEnd = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleZoomComplete(event);\n\n        document.removeEventListener('touchmove', this.handleZoomTouchMove);\n        document.removeEventListener('touchend', this.handleZoomTouchEnd);\n    };\n\n    handleZoomComplete = (event: Event) => {\n        document.body.style.cursor = this.originalBodyCursor;\n        event.preventDefault();\n    };\n\n    // Resize handling\n\n    handleResizeMouseDown = (event: MouseEvent) => {\n        this.handleResizeStart(event);\n\n        document.addEventListener('mousemove', this.handleResizeMouseMove);\n        document.addEventListener('mouseup', this.handleResizeMouseUp);\n        event.stopPropagation();\n    };\n\n    handleResizeTouchStart = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleResizeStart(event.changedTouches[0]);\n\n        document.addEventListener('touchmove', this.handleResizeTouchMove, { passive: false });\n        document.addEventListener('touchend', this.handleResizeTouchEnd, { passive: false });\n        event.stopPropagation();\n        event.preventDefault();\n    };\n\n    handleResizeStart = (co: MouseEvent | Touch) => {\n        const { isLocked } = this.props;\n\n        if (isLocked) return;\n\n        document.body.style.cursor = `url(${resizeIcon}), auto`;\n\n        this.setState({ startX: co.clientX, startY: co.clientY, group: shortid.generate() });\n    };\n\n    handleResizeMouseMove = (event: MouseEvent) => {\n        this.handleResizeMove(event, event.ctrlKey);\n        event.preventDefault();\n    };\n\n    handleResizeTouchMove = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleResizeMove(event.changedTouches[0], event.ctrlKey);\n        event.preventDefault();\n    };\n\n    handleResizeMove = (co: { clientX: number; clientY: number }, disableSnapping: boolean) => {\n        const { isLocked, ppmm, width, height, angle, snappingDistance, onResize } = this.props;\n\n        if (isLocked) return;\n\n        const dx = co.clientX - this.state.startX;\n        const dy = co.clientY - this.state.startY;\n\n        const { rx, ry } = rotateVec(dx, dy, -angle);\n\n        let newWidth = width + rx;\n        let newHeight = height + ry;\n\n        if (!disableSnapping && snappingDistance !== 0) {\n            newWidth = Math.round(newWidth / ppmm / snappingDistance) * snappingDistance * ppmm;\n            newHeight = Math.round(newHeight / ppmm / snappingDistance) * snappingDistance * ppmm;\n        }\n\n        this.setState({ startX: co.clientX, startY: co.clientY });\n\n        onResize(newWidth, newHeight, true, this.state.group);\n    };\n\n    handleResizeMouseUp = (event: MouseEvent) => {\n        this.handleResizeComplete(event);\n\n        document.removeEventListener('mousemove', this.handleResizeMouseMove);\n        document.removeEventListener('mouseup', this.handleResizeMouseUp);\n    };\n\n    handleResizeTouchEnd = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleResizeComplete(event);\n\n        document.removeEventListener('touchmove', this.handleResizeTouchMove);\n        document.removeEventListener('touchend', this.handleResizeTouchEnd);\n    };\n\n    handleResizeComplete = (event: Event) => {\n        const { isLocked } = this.props;\n\n        if (!isLocked) {\n            const { width, height, onResize } = this.props;\n            onResize(width, height, false, this.state.group);\n        }\n\n        document.body.style.cursor = this.originalBodyCursor;\n\n        event.preventDefault();\n    };\n\n    // Rotation handling\n\n    handleRotateMouseDown = (event: MouseEvent) => {\n        this.handleRotateStart(event);\n\n        document.addEventListener('mousemove', this.handleRotateMouseMove);\n        document.addEventListener('mouseup', this.handleRotateMouseUp);\n        event.stopPropagation();\n    };\n\n    handleRotateTouchStart = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleRotateStart(event.changedTouches[0]);\n\n        document.addEventListener('touchmove', this.handleRotateTouchMove, { passive: false });\n        document.addEventListener('touchend', this.handleRotateTouchEnd, { passive: false });\n        event.stopPropagation();\n        event.preventDefault();\n    };\n\n    handleRotateStart = (co: { clientX: number; clientY: number }) => {\n        const { isLocked, angle } = this.props;\n\n        if (isLocked || this.cDiv.current === null) return;\n\n        document.body.style.cursor = `url(${rotateIcon}), auto`;\n\n        const rect = this.cDiv.current.getBoundingClientRect();\n        let startX = rect.left + this.cDiv.current.clientWidth / 2;\n        let startY = rect.top + this.cDiv.current.clientHeight / 2;\n\n        let originalAngle = angle + Math.atan2(startX - co.clientX, startY - co.clientY);\n\n        this.setState({ startX, startY, originalAngle, group: shortid.generate() });\n    };\n\n    handleRotateMouseMove = (event: MouseEvent) => {\n        this.handleRotateMove(event, event.ctrlKey);\n        event.preventDefault();\n    };\n\n    handleRotateTouchMove = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleRotateMove(event.changedTouches[0], event.ctrlKey);\n        event.preventDefault();\n    };\n\n    handleRotateMove = (co: MouseEvent | Touch, disableSnapping: boolean) => {\n        const { isLocked, onRotate } = this.props;\n\n        if (isLocked) return;\n\n        const { originalAngle, startX, startY } = this.state;\n\n        let curAngle = Math.atan2(startX - co.clientX, startY - co.clientY);\n        let newAngle = originalAngle - curAngle;\n\n        if (!disableSnapping) {\n            newAngle = ((Math.round(((newAngle / Math.PI) * 180) / 5) * 5) / 180) * Math.PI;\n        }\n\n        onRotate(newAngle, true, this.state.group);\n    };\n\n    handleRotateMouseUp = (event: MouseEvent) => {\n        this.handleRotateComplete(event);\n\n        document.removeEventListener('mousemove', this.handleRotateMouseMove);\n        document.removeEventListener('mouseup', this.handleRotateMouseUp);\n    };\n\n    handleRotateTouchEnd = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleRotateComplete(event);\n\n        document.removeEventListener('touchmove', this.handleRotateTouchMove);\n        document.removeEventListener('touchend', this.handleRotateTouchEnd);\n    };\n\n    handleRotateComplete = (event: Event) => {\n        const { isLocked } = this.props;\n\n        if (!isLocked) {\n            const { angle } = this.props;\n            this.props.onRotate(angle, false, this.state.group);\n        }\n\n        document.body.style.cursor = this.originalBodyCursor;\n\n        event.preventDefault();\n    };\n\n    // Rendering\n\n    render() {\n        const {\n            x,\n            y,\n            width,\n            height,\n            angle,\n            zoom,\n            cx,\n            children,\n            isActive,\n            isActiveField,\n            isLocked,\n            isUnclickable,\n        } = this.props;\n\n        return (\n            <div\n                ref={this.cDiv}\n                onDragStart={this.handleBrowserDragStart}\n                className={`${style.fieldcontroller} ${isActiveField ? style.fieldcontrolleractivefield : ''} ${\n                    isActive ? style.fieldcontrolleractive : ''\n                } ${isActive && this.state.activatedUsingTouch ? style.touchactivated : ''} `}\n                style={{\n                    position: 'absolute',\n                    left: x,\n                    top: y,\n                    width: width,\n                    height: height,\n                    cursor: 'grab',\n                    transform: `rotate(${angle}rad)`,\n                    pointerEvents: isUnclickable ? 'none' : 'initial',\n                }}\n            >\n                {children}\n                <img\n                    src={panIcon}\n                    alt=\"pan\"\n                    ref={this.panDiv}\n                    className={style.controller}\n                    style={{\n                        position: 'absolute',\n                        left: 0,\n                        top: 0,\n                        cursor: `url(${panIcon}), auto`,\n                        display: cx !== undefined && zoom !== undefined ? 'initial' : 'none',\n                    }}\n                />\n\n                <img\n                    src={zoomIcon}\n                    alt=\"zoom\"\n                    ref={this.zoomDiv}\n                    className={style.controller}\n                    style={{\n                        position: 'absolute',\n                        right: 0,\n                        top: 0,\n                        cursor: `url(${zoomIcon}), auto`,\n                        display: zoom !== undefined ? 'initial' : 'none',\n                    }}\n                />\n\n                <img\n                    src={resizeIcon}\n                    alt=\"resize\"\n                    ref={this.resizeDiv}\n                    className={style.controller}\n                    style={{\n                        position: 'absolute',\n                        right: 0,\n                        bottom: 0,\n                        cursor: `url(${resizeIcon}), auto`,\n                        display: isLocked ? 'none' : 'initial',\n                    }}\n                />\n                <img\n                    src={rotateIcon}\n                    alt=\"rotate\"\n                    ref={this.rotateDiv}\n                    className={style.controller}\n                    style={{\n                        position: 'absolute',\n                        left: 0,\n                        bottom: 0,\n                        cursor: `url(${rotateIcon}), auto`,\n                        display: isLocked ? 'none' : 'initial',\n                    }}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    const isActiveField = props.fieldId === state.cardset.present.activeFieldId;\n    const isActive =\n        props.cardId === state.cardset.present.activeCardId && props.fieldId === state.cardset.present.activeFieldId;\n    const fieldInfo = state.cardset.present.fields[props.cardId][props.fieldId];\n    const isLocked = fieldInfo.locked === true;\n    const isUnclickable = fieldInfo.unclickable === true;\n\n    return {\n        isActive,\n        isActiveField,\n        isLocked,\n        isUnclickable,\n        snappingDistance: state.cardset.present.snappingDistance,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(FieldController);\n","import { connect } from 'react-redux';\nimport React, { PureComponent } from 'react';\n\nimport {\n    Dispatch,\n    cardSetActiveCardAndField,\n    cardSetChangeImage,\n    cardSetChangeFieldPosition,\n    cardSetChangeFieldAngle,\n    cardSetChangeFieldPan,\n    cardSetChangeFieldZoom,\n    cardSetChangeFieldSize,\n} from '../actions';\nimport { ImageInfo, ImageFieldInfo } from '../types';\nimport { State } from '../reducers';\nimport FieldController from './FieldController';\nimport emptyImageImage from './image.svg';\nimport style from './ImageField.module.css';\nimport { calculateImageDimensions } from '../utils';\n\ninterface OwnProps {\n    cardId: string;\n    isOnBack: boolean;\n    ppmm: number;\n    imageFieldInfo: ImageFieldInfo;\n    cardWidth: number;\n    cardHeight: number;\n}\n\ninterface StateProps {\n    imageUrl?: string;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\ninterface LocalState {\n    dragIsOver: boolean;\n    wasMoved: boolean;\n    x: number;\n    y: number;\n}\n\nclass ImageField extends PureComponent<Props, LocalState> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            dragIsOver: false,\n            wasMoved: false,\n            x: 0,\n            y: 0,\n        };\n    }\n\n    handleDrag = (x: number, y: number, cardOnly: boolean, group: string) => {\n        const { dispatch, cardId, imageFieldInfo, ppmm } = this.props;\n        dispatch(\n            cardSetChangeFieldPosition(cardOnly ? cardId : undefined, imageFieldInfo.id, x / ppmm, y / ppmm, group),\n        );\n    };\n\n    handlePan = (cx: number, cy: number, cardOnly: boolean, group: string) => {\n        const { dispatch, cardId, imageFieldInfo, ppmm } = this.props;\n        dispatch(cardSetChangeFieldPan(cardOnly ? cardId : undefined, imageFieldInfo.id, cx / ppmm, cy / ppmm, group));\n    };\n\n    handleZoom = (zoom: number, cardOnly: boolean, group: string) => {\n        const { dispatch, cardId, imageFieldInfo } = this.props;\n        dispatch(cardSetChangeFieldZoom(cardOnly ? cardId : undefined, imageFieldInfo.id, zoom, group));\n    };\n\n    handleResize = (width: number, height: number, cardOnly: boolean, group: string) => {\n        const { dispatch, imageFieldInfo, cardId, ppmm } = this.props;\n        dispatch(\n            cardSetChangeFieldSize(\n                cardOnly ? cardId : undefined,\n                imageFieldInfo.id,\n                width / ppmm,\n                height / ppmm,\n                group,\n            ),\n        );\n    };\n\n    handleRotate = (angle: number, cardOnly: boolean, group: string) => {\n        const { dispatch, cardId, imageFieldInfo } = this.props;\n        dispatch(cardSetChangeFieldAngle(cardOnly ? cardId : undefined, imageFieldInfo.id, angle, group));\n    };\n\n    handleMouseDown = () => {\n        this.setState({ wasMoved: false });\n    };\n\n    handleTouchStart = (event: React.TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.setState({ wasMoved: false, x: event.changedTouches[0].clientX, y: event.changedTouches[0].clientY });\n    };\n\n    handleMouseMove = () => {\n        this.setState({ wasMoved: true });\n    };\n\n    handleTouchMove = (event: React.TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        const { x, y } = this.state;\n        if (Math.abs(event.changedTouches[0].clientX - x) > 3 || Math.abs(event.changedTouches[0].clientY - y) > 3) {\n            this.setState({ wasMoved: true });\n        }\n    };\n\n    handleMouseUp = () => {\n        this.handleComplete();\n    };\n\n    handleTouchEnd = (event: React.TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleComplete();\n    };\n\n    handleComplete = () => {\n        const { dispatch, cardId, isOnBack, imageFieldInfo } = this.props;\n        if (!this.state.wasMoved) {\n            dispatch(cardSetActiveCardAndField(cardId, isOnBack, imageFieldInfo.id));\n        }\n    };\n\n    handleDragOver = (event: React.DragEvent<HTMLDivElement>) => {\n        this.setState({ dragIsOver: true });\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDragLeave = (event: React.DragEvent<HTMLDivElement>) => {\n        this.setState({ dragIsOver: false });\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = (event: React.DragEvent<HTMLDivElement>) => {\n        this.setState({ dragIsOver: false });\n        event.preventDefault();\n        event.stopPropagation();\n\n        const url = event.dataTransfer.getData('URL');\n        const imagefilesPos = url.indexOf('/api/imagefiles/');\n\n        if (imagefilesPos !== -1) {\n            const { cardId, imageFieldInfo, dispatch } = this.props;\n            let img = new Image();\n\n            img.addEventListener('load', function() {\n                const ii: ImageInfo = {\n                    url: url.substr(imagefilesPos),\n                    width: this.naturalWidth,\n                    height: this.naturalHeight,\n                };\n                dispatch(cardSetChangeImage(cardId, imageFieldInfo.id, ii));\n            });\n            img.src = url;\n        }\n    };\n\n    render() {\n        const { imageFieldInfo, imageUrl, ppmm, cardWidth, cardHeight } = this.props;\n\n        let dim = calculateImageDimensions(imageFieldInfo);\n        let calculatedImageWidth = dim.width * ppmm;\n        let calculatedImageHeight = dim.height * ppmm;\n\n        return (\n            <FieldController\n                cardId={this.props.cardId}\n                fieldId={imageFieldInfo.id}\n                x={imageFieldInfo.x * ppmm}\n                y={imageFieldInfo.y * ppmm}\n                width={imageFieldInfo.width * ppmm}\n                height={imageFieldInfo.height * ppmm}\n                cx={(imageFieldInfo.cx || 0) * ppmm}\n                cy={(imageFieldInfo.cy || 0) * ppmm}\n                zoom={imageFieldInfo.zoom || 1}\n                angle={imageFieldInfo.angle}\n                onDrag={this.handleDrag}\n                onPan={this.handlePan}\n                onZoom={this.handleZoom}\n                onResize={this.handleResize}\n                onRotate={this.handleRotate}\n                cardWidth={cardWidth}\n                cardHeight={cardHeight}\n                ppmm={ppmm}\n            >\n                <div\n                    style={{\n                        width: '100%',\n                        height: '100%',\n                        position: 'relative',\n                        overflow: imageFieldInfo.crop ? 'hidden' : 'visible',\n                    }}\n                    className={this.state.dragIsOver ? style.over : ''}\n                    onMouseDown={this.handleMouseDown}\n                    onTouchStart={this.handleTouchStart}\n                    onMouseMove={this.handleMouseMove}\n                    onTouchMove={this.handleTouchMove}\n                    onMouseUp={this.handleMouseUp}\n                    onTouchEnd={this.handleTouchEnd}\n                    onDragOver={this.handleDragOver}\n                    onDragLeave={this.handleDragLeave}\n                    onDrop={this.handleDrop}\n                >\n                    <img\n                        style={{\n                            position: 'absolute',\n                            opacity: imageUrl && imageUrl.length > 0 ? 1 : 0.5,\n                            left: (imageFieldInfo.cx || 0) * ppmm,\n                            top: (imageFieldInfo.cy || 0) * ppmm,\n                            width: calculatedImageWidth,\n                            height: calculatedImageHeight,\n                        }}\n                        src={imageUrl || emptyImageImage}\n                        alt=\"\"\n                    />\n                </div>\n            </FieldController>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    let imageUrl: string | undefined = '';\n    if (props.imageFieldInfo && props.imageFieldInfo.type === 'image') {\n        if (props.imageFieldInfo.base64) {\n            imageUrl = 'data:image/svg+xml;base64,' + props.imageFieldInfo.base64;\n        } else {\n            imageUrl = props.imageFieldInfo && props.imageFieldInfo.url;\n        }\n    }\n\n    return {\n        imageUrl,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(ImageField);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DEFAULT_FONT, DEFAULT_FONT_SIZE, DEFAULT_LINE_HEIGHT } from '../constants';\nimport { Dispatch, cardSetActiveCardAndField, cardSetChangeText } from '../actions';\nimport { State } from '../reducers';\nimport { TextInfo } from '../types';\nimport style from './ContentEditable.module.css';\n\ninterface OwnProps {\n    cardId: string;\n    isOnBack: boolean;\n    fieldId: string;\n    align: string;\n    color: string;\n    fontFamily: string;\n    fontVariant: string;\n    fontSize: number;\n    lineHeight: number;\n}\n\ninterface StateProps {\n    isActive: boolean;\n    textValue: string;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass ContentEditable extends Component<Props> {\n    editDiv: React.RefObject<HTMLDivElement>;\n    currentText: string;\n    currentAlign: string;\n    currentColor: string;\n    currentFontFamily: string;\n    currentFontVariant: string;\n    currentFontSize: number;\n    currentLineHeight: number;\n    timeout: NodeJS.Timeout | null;\n    wasMoved: boolean;\n    x: number;\n    y: number;\n\n    constructor(props: Props) {\n        super(props);\n        this.editDiv = React.createRef();\n        this.currentText = '';\n        this.currentAlign = '';\n        this.currentColor = '';\n        this.currentFontFamily = '';\n        this.currentFontVariant = '';\n        this.currentFontSize = DEFAULT_FONT_SIZE;\n        this.currentLineHeight = DEFAULT_LINE_HEIGHT;\n        this.timeout = null;\n        this.wasMoved = false;\n        this.x = 0;\n        this.y = 0;\n    }\n\n    componentDidMount() {\n        const { isActive } = this.props;\n\n        if (!this.editDiv.current) return;\n\n        this.editDiv.current.addEventListener('mousedown', this.handleMouseDown);\n        this.editDiv.current.addEventListener('touchstart', this.handleTouchStart);\n        this.editDiv.current.addEventListener('mousemove', this.handleMouseMove);\n        this.editDiv.current.addEventListener('touchmove', this.handleTouchMove, { passive: false });\n        this.editDiv.current.addEventListener('mouseup', this.handleMouseUp);\n        this.editDiv.current.addEventListener('touchend', this.handleTouchEnd, { passive: false });\n\n        if (isActive) {\n            this.editDiv.current.focus();\n        }\n    }\n\n    shouldComponentUpdate(nextProps: Props) {\n        const shouldUpdate =\n            nextProps.textValue !== this.currentText ||\n            nextProps.align !== this.currentAlign ||\n            nextProps.color !== this.currentColor ||\n            nextProps.fontFamily !== this.currentFontFamily ||\n            nextProps.fontVariant !== this.currentFontVariant ||\n            nextProps.fontSize !== this.currentFontSize ||\n            nextProps.lineHeight !== this.currentLineHeight ||\n            this.props.isActive !== nextProps.isActive;\n\n        return shouldUpdate;\n    }\n\n    componentDidUpdate() {\n        const { textValue, align, color, fontFamily, fontVariant, fontSize, lineHeight } = this.props;\n        this.currentText = textValue;\n        this.currentAlign = align;\n        this.currentColor = color;\n        this.currentFontFamily = fontFamily;\n        this.currentFontVariant = fontVariant;\n        this.currentFontSize = fontSize;\n        this.currentLineHeight = lineHeight;\n    }\n\n    handleMouseDown = (event: MouseEvent) => {\n        this.handleStart(event);\n    };\n\n    handleTouchStart = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.x = event.changedTouches[0].clientX;\n        this.y = event.changedTouches[0].clientY;\n        this.handleStart(event);\n    };\n\n    handleStart = (event: Event) => {\n        const { isActive } = this.props;\n        if (isActive) {\n            event.stopPropagation();\n        } else {\n            this.wasMoved = false;\n            event.preventDefault();\n        }\n    };\n\n    handleMouseMove = (event: MouseEvent) => {\n        this.handleMove(event);\n    };\n\n    handleTouchMove = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        if (\n            Math.abs(event.changedTouches[0].clientX - this.x) > 3 ||\n            Math.abs(event.changedTouches[0].clientY - this.y) > 3\n        ) {\n            this.handleMove(event);\n        }\n    };\n\n    handleMove = (event: Event) => {\n        const { isActive } = this.props;\n        if (isActive) {\n            event.stopPropagation();\n        } else {\n            this.wasMoved = true;\n            event.preventDefault();\n        }\n    };\n\n    handleMouseUp = (event: MouseEvent) => {\n        this.handleComplete(event);\n    };\n\n    handleTouchEnd = (event: TouchEvent) => {\n        if (event.touches.length > 1) {\n            return; // Let's ignore zooms\n        }\n\n        this.handleComplete(event);\n    };\n\n    handleComplete = (event: Event) => {\n        const { dispatch, cardId, isOnBack, fieldId, isActive } = this.props;\n        if (isActive) {\n            event.stopPropagation();\n        } else if (!this.wasMoved) {\n            event.preventDefault();\n            dispatch(cardSetActiveCardAndField(cardId, isOnBack, fieldId));\n\n            if (!this.editDiv.current) return;\n            this.editDiv.current.focus();\n        }\n    };\n\n    onFocus = () => {\n        if (!this.editDiv.current) return;\n\n        const { textValue, align, color, fontFamily, fontVariant, fontSize } = this.props;\n        this.currentText = textValue;\n        this.currentAlign = align;\n        this.currentColor = color;\n        this.currentFontFamily = fontFamily;\n        this.currentFontVariant = fontVariant;\n        this.currentFontSize = fontSize;\n\n        const range = document.createRange();\n        range.selectNodeContents(this.editDiv.current);\n        range.collapse(false);\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    };\n\n    updateContent = (timeoutInMiliseconds: number) => {\n        if (!this.editDiv.current) return;\n        let value = this.editDiv.current.innerHTML;\n\n        let imgUrlIdx = -1;\n        while ((imgUrlIdx = value.indexOf('<img src=\"http')) !== -1) {\n            value = value.slice(0, imgUrlIdx + 10) + value.slice(value.indexOf('/', imgUrlIdx + 18));\n        }\n\n        if (value !== this.currentText) {\n            this.currentText = value;\n\n            if (this.timeout) {\n                clearTimeout(this.timeout);\n            }\n\n            this.timeout = setTimeout(() => {\n                const { dispatch, cardId, fieldId } = this.props;\n                const textInfo: TextInfo = { value };\n\n                dispatch(cardSetChangeText(cardId, fieldId, textInfo));\n            }, timeoutInMiliseconds);\n        }\n    };\n\n    handleBlur = () => {\n        this.updateContent(0);\n    };\n\n    handleInput = () => {\n        this.updateContent(500);\n    };\n\n    handlePaste = (event: React.ClipboardEvent) => {\n        function escapeHtml(unsafe: string) {\n            return unsafe\n                .replace(/&/g, '&amp;')\n                .replace(/</g, '&lt;')\n                .replace(/>/g, '&gt;')\n                .replace(/\"/g, '&quot;')\n                .replace(/'/g, '&#039;');\n        }\n\n        event.preventDefault();\n\n        let text = '';\n        text = event.clipboardData.getData('text/plain');\n\n        text = text\n            .split('\\n')\n            .map((s: string) => `<div>${escapeHtml(s)}</div>`)\n            .join('');\n        document.execCommand('insertHTML', false, text);\n    };\n\n    render() {\n        const { color, align, fontFamily, fontVariant, fontSize, lineHeight } = this.props;\n        const isItalic = fontVariant && fontVariant.indexOf('italic') !== -1;\n        const fontWeight = isItalic\n            ? fontVariant === 'italic'\n                ? 400\n                : parseInt(fontVariant.slice(0, 3))\n            : fontVariant === 'regular'\n            ? 400\n            : parseInt(fontVariant);\n\n        return (\n            <div\n                ref={this.editDiv}\n                className={style.content}\n                contentEditable={true}\n                onFocus={this.onFocus}\n                onBlur={this.handleBlur}\n                onInput={this.handleInput}\n                onPaste={this.handlePaste}\n                style={{\n                    width: '100%',\n                    height: '100%',\n                    textAlign: align === 'left' ? 'left' : align === 'right' ? 'right' : 'center',\n                    color: color,\n                    fontFamily: `'${fontFamily}'` || DEFAULT_FONT,\n                    fontStyle: isItalic ? 'italic' : 'normal',\n                    fontWeight,\n                    fontSize: `${fontSize}px`,\n                    outline: 'none',\n                    overflowWrap: 'break-word',\n                    lineHeight,\n                }}\n                dangerouslySetInnerHTML={{ __html: this.props.textValue }}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    let fieldInfo = state.cardset.present.fields[props.cardId][props.fieldId];\n    const textValue = fieldInfo.type === 'text' ? fieldInfo.value : '';\n    return {\n        textValue,\n        isActive:\n            props.cardId === state.cardset.present.activeCardId &&\n            props.fieldId === state.cardset.present.activeFieldId,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(ContentEditable);\n","import { connect } from 'react-redux';\nimport React, { PureComponent } from 'react';\n\nimport { DEFAULT_LINE_HEIGHT } from '../constants';\nimport { Dispatch, cardSetChangeFieldAngle, cardSetChangeFieldPosition, cardSetChangeFieldSize } from '../actions';\nimport { State } from '../reducers';\nimport { TextFieldInfo } from '../types';\nimport ContentEditable from './ContentEditable';\nimport FieldController from './FieldController';\nimport emptyTextImage from './text.svg';\n\ninterface OwnProps {\n    cardId: string;\n    isOnBack: boolean;\n    ppmm: number;\n    textFieldInfo: TextFieldInfo;\n    cardWidth: number;\n    cardHeight: number;\n}\n\ninterface StateProps {\n    text: string;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass TextField extends PureComponent<Props> {\n    handleDrag = (x: number, y: number, cardOnly: boolean, group: string) => {\n        const { dispatch, cardId, textFieldInfo, ppmm } = this.props;\n        dispatch(\n            cardSetChangeFieldPosition(cardOnly ? cardId : undefined, textFieldInfo.id, x / ppmm, y / ppmm, group),\n        );\n    };\n\n    handleResize = (width: number, height: number, cardOnly: boolean, group: string) => {\n        const { dispatch, textFieldInfo, cardId, ppmm } = this.props;\n        dispatch(\n            cardSetChangeFieldSize(cardOnly ? cardId : undefined, textFieldInfo.id, width / ppmm, height / ppmm, group),\n        );\n    };\n\n    handleRotate = (angle: number, cardOnly: boolean, group: string) => {\n        const { dispatch, textFieldInfo, cardId } = this.props;\n        dispatch(cardSetChangeFieldAngle(cardOnly ? cardId : undefined, textFieldInfo.id, angle, group));\n    };\n\n    render() {\n        const { textFieldInfo, text, ppmm, cardWidth, cardHeight } = this.props;\n\n        return (\n            <FieldController\n                cardId={this.props.cardId}\n                fieldId={textFieldInfo.id}\n                x={textFieldInfo.x * ppmm}\n                y={textFieldInfo.y * ppmm}\n                width={textFieldInfo.width * ppmm}\n                height={textFieldInfo.height * ppmm}\n                angle={textFieldInfo.angle}\n                onDrag={this.handleDrag}\n                onResize={this.handleResize}\n                onRotate={this.handleRotate}\n                cardWidth={cardWidth}\n                cardHeight={cardHeight}\n                ppmm={ppmm}\n            >\n                {text === '' && (\n                    <div\n                        style={{\n                            width: '100%',\n                            height: '100%',\n                            position: 'fixed',\n                            left: 0,\n                            top: 0,\n                            zIndex: -1,\n                            textAlign:\n                                textFieldInfo.align === 'left'\n                                    ? 'left'\n                                    : textFieldInfo.align === 'right'\n                                    ? 'right'\n                                    : 'center',\n                        }}\n                    >\n                        <img style={{ opacity: 0.5, width: 'auto', height: '100%' }} src={emptyTextImage} alt=\"\" />\n                    </div>\n                )}\n\n                <ContentEditable\n                    cardId={this.props.cardId}\n                    isOnBack={this.props.isOnBack}\n                    fieldId={textFieldInfo.id}\n                    align={textFieldInfo.align}\n                    color={textFieldInfo.color}\n                    fontFamily={textFieldInfo.fontFamily}\n                    fontVariant={textFieldInfo.fontVariant}\n                    fontSize={textFieldInfo.fontSize * ppmm}\n                    lineHeight={textFieldInfo.lineHeight || DEFAULT_LINE_HEIGHT}\n                />\n            </FieldController>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    let fieldInfo = state.cardset.present.fields[props.cardId][props.textFieldInfo.id];\n    let text = fieldInfo.type === 'text' ? fieldInfo.value : '';\n    return {\n        text,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(TextField);\n","import { connect } from 'react-redux';\nimport Measure from 'react-measure';\nimport React, { Component } from 'react';\n\nimport { BLEED_WIDTH } from '../constants';\nimport { CardType, IdsArray, FieldInfoCollection } from '../types';\nimport { Dispatch, cardSetActiveCardAndField } from '../actions';\nimport { State } from '../reducers';\nimport ImageField from './ImageField';\nimport TextField from './TextField';\nimport style from './Card.module.css';\n\ninterface OwnProps {\n    card: CardType;\n    isBack: boolean;\n}\n\ninterface StateProps {\n    cardFields: FieldInfoCollection;\n    fieldsIds: IdsArray;\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    isActiveCard: boolean;\n    zoom: number;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\ninterface LocalState {\n    dimensions: {\n        width: number;\n        height: number;\n    };\n}\n\nclass Card extends Component<Props, LocalState> {\n    state = {\n        dimensions: {\n            width: -1,\n            height: -1,\n        },\n    };\n\n    handleFieldDeselect = (event: React.MouseEvent | React.TouchEvent) => {\n        const { dispatch, card, isBack } = this.props;\n        const el = event.target as HTMLElement;\n        if (el.getAttribute('id') === `card_${card.id}`) {\n            dispatch(cardSetActiveCardAndField(card.id, isBack, undefined));\n            event.stopPropagation();\n        }\n    };\n\n    render() {\n        const { cardFields, fieldsIds, card, isBack, width, height, isActiveCard, zoom, isTwoSided } = this.props;\n        const widthWithBleeds = width + BLEED_WIDTH * 2;\n        const heightWithBleeds = height + BLEED_WIDTH * 2;\n\n        const ppmm = this.state.dimensions.width / widthWithBleeds;\n\n        return (\n            <div>\n                <Measure\n                    client\n                    onResize={contentRect => {\n                        if (!contentRect.client) {\n                            return;\n                        }\n                        this.setState({ dimensions: contentRect.client });\n                    }}\n                >\n                    {({ measureRef }) => (\n                        <div\n                            className={`${style.card} ${isActiveCard ? style.active : ''}`}\n                            id={`card_${card.id}`}\n                            ref={measureRef}\n                            style={{\n                                width: `${widthWithBleeds * zoom}mm`,\n                                height: `${heightWithBleeds * zoom}mm`,\n                                position: 'relative',\n                                overflow: 'hidden',\n                            }}\n                            onMouseDown={this.handleFieldDeselect}\n                            onTouchStart={this.handleFieldDeselect}\n                        >\n                            {fieldsIds.map(id => {\n                                if (!(id in cardFields)) {\n                                    return null;\n                                }\n                                const p = cardFields[id];\n                                if (p.type === 'image') {\n                                    return (\n                                        <ImageField\n                                            key={p.id}\n                                            cardId={card.id}\n                                            isOnBack={isBack}\n                                            imageFieldInfo={p}\n                                            ppmm={ppmm}\n                                            cardWidth={this.state.dimensions.width}\n                                            cardHeight={this.state.dimensions.height}\n                                        />\n                                    );\n                                } else if (p.type === 'text') {\n                                    return (\n                                        <TextField\n                                            key={p.id}\n                                            cardId={card.id}\n                                            isOnBack={isBack}\n                                            textFieldInfo={p}\n                                            ppmm={ppmm}\n                                            cardWidth={this.state.dimensions.width}\n                                            cardHeight={this.state.dimensions.height}\n                                        />\n                                    );\n                                }\n                                return null;\n                            })}\n\n                            <div\n                                style={{\n                                    position: 'absolute',\n                                    width: `${width * zoom}mm`,\n                                    height: `${height * zoom}mm`,\n                                    left: `${BLEED_WIDTH * zoom}mm`,\n                                    top: `${BLEED_WIDTH * zoom}mm`,\n                                    border: '1px dashed black',\n                                    borderRadius: '5mm',\n                                    pointerEvents: 'none',\n                                }}\n                            />\n\n                            <div\n                                style={{\n                                    position: 'absolute',\n                                    width: `${(width - BLEED_WIDTH * 2) * zoom}mm`,\n                                    height: `${(height - BLEED_WIDTH * 2) * zoom}mm`,\n                                    left: `${BLEED_WIDTH * 2 * zoom}mm`,\n                                    top: `${BLEED_WIDTH * 2 * zoom}mm`,\n                                    border: '1px dashed red',\n                                    borderRadius: '5mm',\n                                    pointerEvents: 'none',\n                                }}\n                            />\n                        </div>\n                    )}\n                </Measure>\n                {isTwoSided && (\n                    <div\n                        className={style.title}\n                        style={{\n                            width: `${widthWithBleeds * zoom}mm`,\n                            position: 'relative',\n                        }}\n                    >\n                        {isBack ? 'Back' : 'Front'}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    let cardFields = state.cardset.present.fields[props.card.id] || {};\n\n    return {\n        cardFields,\n        fieldsIds: state.cardset.present.fieldsAllIds.filter(\n            id => ((id in cardFields && cardFields[id].isOnBack) || false) === props.isBack,\n        ),\n        width: state.cardset.present.width,\n        height: state.cardset.present.height,\n        isTwoSided: state.cardset.present.isTwoSided,\n        isActiveCard:\n            state.cardset.present.activeCardId === props.card.id && state.cardset.present.isBackActive === props.isBack,\n        zoom: state.cardset.present.zoom,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(Card);\n","import React, { Component } from 'react';\nimport style from './EditableTitle.module.css';\n\ninterface Props {\n    title: string;\n    onChange: (newName: string) => void;\n}\n\nexport default class EditableTitle extends Component<Props> {\n    state = {\n        titleIsEdited: false,\n    };\n\n    handleClick = () => {\n        this.setState({ titleIsEdited: true });\n    };\n\n    handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.props.onChange(event.target.value);\n    };\n\n    handleBlur = () => {\n        this.setState({ titleIsEdited: false });\n    };\n\n    render() {\n        const { titleIsEdited } = this.state;\n        const { title } = this.props;\n\n        return (\n            <>\n                {!titleIsEdited && (\n                    <h1 className={style.input} onClick={this.handleClick}>\n                        {title}\n                    </h1>\n                )}\n                {titleIsEdited && (\n                    <input\n                        autoFocus\n                        type=\"text\"\n                        className={style.input}\n                        value={title}\n                        onChange={this.handleChange}\n                        onBlur={this.handleBlur}\n                    />\n                )}\n            </>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nimport style from './Loader.module.css';\n\ninterface Props {\n    fixed?: boolean;\n    small?: boolean;\n}\n\nexport default class Loader extends Component<Props> {\n    render() {\n        const { fixed, small } = this.props;\n\n        return (\n            <div className={`${style.loader} ${fixed ? style.fixed : style.relative} ${small ? style.small : ''}`}>\n                <div />\n                <div />\n            </div>\n        );\n    }\n}\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { CardType, DispatchProps, SidebarOwnProps } from '../types';\nimport { State } from '../reducers';\nimport { cardSetCloneCard, cardSetRemoveCard, cardSetUpdateCardCount } from '../actions';\nimport style from './SidebarDetails.module.css';\n\ninterface StateProps {\n    isAuthenticated: boolean;\n    activeCard: CardType | null;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarDetails extends Component<Props> {\n    handleCloneCardClick = () => {\n        const { activeCard, dispatch } = this.props;\n        if (activeCard !== null) {\n            dispatch(cardSetCloneCard(activeCard));\n        }\n    };\n\n    handleRemoveCardClick = () => {\n        const { activeCard, dispatch } = this.props;\n        if (activeCard !== null) {\n            dispatch(cardSetRemoveCard(activeCard));\n        }\n    };\n\n    handleCountChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeCard, dispatch } = this.props;\n        if (activeCard !== null) {\n            dispatch(cardSetUpdateCardCount(activeCard, parseInt(event.target.value)));\n        }\n    };\n\n    render() {\n        const { activeCard, visible } = this.props;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'initial' : 'none' }}>\n                <button\n                    onClick={this.handleCloneCardClick}\n                    title=\"Clone card\"\n                    className={activeCard === null ? style.disabled : ''}\n                >\n                    <i className=\"material-icons\">file_copy</i>\n                </button>\n\n                <input\n                    type=\"number\"\n                    value={activeCard !== null ? activeCard.count.toString() : 0}\n                    onChange={this.handleCountChange}\n                    title=\"Number of card's copies\"\n                    className={activeCard === null ? style.disabled : ''}\n                />\n                <button\n                    onClick={this.handleRemoveCardClick}\n                    title=\"Remove card\"\n                    className={activeCard === null ? style.disabled : ''}\n                >\n                    <i className=\"material-icons\">delete</i>\n                </button>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        activeCard:\n            state.cardset.present.activeCardId !== undefined\n                ? state.cardset.present.cardsById[state.cardset.present.activeCardId]\n                : null,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarDetails);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { ACTIVITY_CREATING_PNG, State } from '../reducers';\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport { gameCreatePngRequest } from '../actions';\nimport style from './SidebarGeneratePng.module.css';\n\ninterface StateProps {\n    width: number;\n    height: number;\n    isCreatingPng: boolean;\n    activeCardset: string | null;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\ninterface LocalState {\n    dpi: number;\n}\n\nexport class SidebarGeneratePng extends Component<Props, LocalState> {\n    state: LocalState = {\n        dpi: 300,\n    };\n\n    handleDpiChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ dpi: parseInt(event.target.value) });\n    };\n\n    handleGenerate = () => {\n        const { dispatch, activeCardset } = this.props;\n        const { dpi } = this.state;\n\n        if (activeCardset !== null) {\n            dispatch(gameCreatePngRequest(dpi, 'cardsets', activeCardset));\n        }\n    };\n\n    render() {\n        const { visible, width, height, isCreatingPng } = this.props;\n        const { dpi } = this.state;\n\n        const calculatedWidth = Math.round(dpi * (width / 25.4 + 1 / 4));\n        const calculatedHeight = Math.round(dpi * (height / 25.4 + 1 / 4));\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'grid' : 'none' }}>\n                <div>Here you can generate your cards as PNG images.</div>\n                <label htmlFor=\"dpi\">DPI:</label>\n                <input\n                    id=\"dpi\"\n                    type=\"number\"\n                    min=\"1\"\n                    step=\"1\"\n                    onChange={this.handleDpiChange}\n                    className=\"form-control\"\n                    placeholder=\"DPI\"\n                    value={dpi}\n                />\n\n                <div>Width in pixels: {calculatedWidth}</div>\n                <div>Height in pixels: {calculatedHeight}</div>\n\n                <button disabled={isCreatingPng} onClick={this.handleGenerate}>\n                    Generate\n                </button>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        width: state.cardset.present.width,\n        height: state.cardset.present.height,\n        isCreatingPng: (state.games.activity & ACTIVITY_CREATING_PNG) === ACTIVITY_CREATING_PNG,\n        activeCardset: state.cardsets.active,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarGeneratePng);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { ACTIVITY_CREATING_PDF, State } from '../reducers';\nimport { Dispatch, gameCreatePdfRequest } from '../actions';\nimport KawaiiMessage, { Character } from './KawaiiMessage';\n\ninterface OwnProps {\n    type: string;\n    id: string;\n    withHelp?: boolean;\n}\n\ninterface StateProps {\n    isCreatingPdf: boolean;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = StateProps & DispatchProps & OwnProps;\n\ninterface LocalState {\n    pageWidth: number;\n    pageHeight: number;\n    topBottomMargin: number;\n    leftRightMargin: number;\n    verticalSpace: number;\n    horizontalSpace: number;\n    includeBleedingArea: boolean;\n    cutMarksForScissors: boolean;\n    cutMarksForGuillotine: boolean;\n    cutMarksInMarginArea: boolean;\n    cutMarksOnFrontSideOnly: boolean;\n}\n\nexport class PDFGenerator extends Component<Props, LocalState> {\n    state = {\n        pageWidth: 210,\n        pageHeight: 297,\n        topBottomMargin: 15,\n        leftRightMargin: 9,\n        verticalSpace: 0,\n        horizontalSpace: 0,\n        includeBleedingArea: false,\n        cutMarksForScissors: true,\n        cutMarksForGuillotine: false,\n        cutMarksInMarginArea: false,\n        cutMarksOnFrontSideOnly: false,\n    };\n\n    handleGeneratePdfClick = () => {\n        const { dispatch } = this.props;\n        const {\n            pageWidth,\n            pageHeight,\n            topBottomMargin,\n            leftRightMargin,\n            verticalSpace,\n            horizontalSpace,\n            includeBleedingArea,\n            cutMarksForScissors,\n            cutMarksForGuillotine,\n            cutMarksInMarginArea,\n            cutMarksOnFrontSideOnly,\n        } = this.state;\n\n        dispatch(\n            gameCreatePdfRequest(\n                this.props.type,\n                this.props.id,\n                pageWidth,\n                pageHeight,\n                topBottomMargin,\n                leftRightMargin,\n                verticalSpace,\n                horizontalSpace,\n                includeBleedingArea,\n                cutMarksForScissors,\n                cutMarksForGuillotine,\n                cutMarksInMarginArea,\n                cutMarksOnFrontSideOnly,\n            ),\n        );\n    };\n\n    handlePageWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ pageWidth: parseFloat(event.target.value) });\n    };\n\n    handlePageHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ pageHeight: parseFloat(event.target.value) });\n    };\n\n    handleTopBottomMarginChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ topBottomMargin: parseFloat(event.target.value) });\n    };\n\n    handleLeftRightMarginChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ leftRightMargin: parseFloat(event.target.value) });\n    };\n\n    handleVerticalSpaceChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ verticalSpace: parseFloat(event.target.value) });\n    };\n\n    handleHorizontalSpaceChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ horizontalSpace: parseFloat(event.target.value) });\n    };\n\n    handleIncludeBleedingAreaChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ includeBleedingArea: event.target.checked });\n    };\n\n    handleCutMarksForScissors = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ cutMarksForScissors: event.target.checked });\n    };\n\n    handleCutMarksForGuillotine = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ cutMarksForGuillotine: event.target.checked });\n    };\n\n    handleCutMarksInMarginArea = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ cutMarksInMarginArea: event.target.checked });\n    };\n\n    handleCutMarksOnFrontSideOnly = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ cutMarksOnFrontSideOnly: event.target.checked });\n    };\n\n    render() {\n        const { isCreatingPdf, withHelp } = this.props;\n\n        return (\n            <>\n                {withHelp && (\n                    <KawaiiMessage character={Character.Ghost} mood=\"excited\">\n                        <p>Here you can generate PDF.</p>\n                        <p>Hint 1: A4 page size is 210 mm x 297 mm. Letter page size is 215.9 x 279.4 mm.</p>\n                        <p>Hint 2: 1 inch is equal to 25.4 mm.</p>\n                    </KawaiiMessage>\n                )}\n\n                <div className=\"form\">\n                    <label htmlFor=\"page_width\">Page width (mm):</label>\n                    <input\n                        id=\"page_width\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handlePageWidthChange}\n                        placeholder=\"Page width\"\n                        value={this.state.pageWidth}\n                    />\n                    <label htmlFor=\"page_height\">Page height (mm):</label>\n                    <input\n                        id=\"page_height\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handlePageHeightChange}\n                        placeholder=\"Page Height\"\n                        value={this.state.pageHeight}\n                    />\n                    <label htmlFor=\"page_topbottom_margin\">Margin from top/bottom (mm):</label>\n                    <input\n                        id=\"page_topbottom_margin\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handleTopBottomMarginChange}\n                        placeholder=\"Top/Bottom margin\"\n                        value={this.state.topBottomMargin}\n                    />\n                    <label htmlFor=\"page_leftright_margin\">Margin from left/right (mm):</label>\n                    <input\n                        id=\"page_leftright_margin\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handleLeftRightMarginChange}\n                        placeholder=\"Left/Right margin\"\n                        value={this.state.leftRightMargin}\n                    />\n\n                    <label htmlFor=\"card_vertical_space\">Vertical space between cards (mm):</label>\n                    <input\n                        id=\"card_vertical_space\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handleVerticalSpaceChange}\n                        placeholder=\"Vertical space\"\n                        value={this.state.verticalSpace}\n                    />\n\n                    <label htmlFor=\"card_horizontal_space\">Horizontal space between cards (mm):</label>\n                    <input\n                        id=\"card_horizontal_space\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handleHorizontalSpaceChange}\n                        placeholder=\"Horizontal space\"\n                        value={this.state.horizontalSpace}\n                    />\n\n                    <label\n                        title=\"You might need this for Cardmogrifier or professional printing. Do\n                        not check this if all you are interested in is card (area inside black dashed rectangle).\"\n                    >\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.includeBleedingArea}\n                            onChange={this.handleIncludeBleedingAreaChange}\n                        />\n                        Generate with bleeding area.\n                    </label>\n\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.cutMarksForScissors}\n                            onChange={this.handleCutMarksForScissors}\n                        />\n                        Generate with cut marks for paper scissors.\n                    </label>\n\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.cutMarksForGuillotine}\n                            onChange={this.handleCutMarksForGuillotine}\n                        />\n                        Generate with cut marks for paper guillotine.\n                    </label>\n\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.cutMarksInMarginArea}\n                            onChange={this.handleCutMarksInMarginArea}\n                        />\n                        Generate with cut marks for paper guillotine in margin area.\n                    </label>\n\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.cutMarksOnFrontSideOnly}\n                            onChange={this.handleCutMarksOnFrontSideOnly}\n                        />\n                        Generate cut marks on front side only (useful for printing on both sides).\n                    </label>\n\n                    <button disabled={isCreatingPdf} onClick={this.handleGeneratePdfClick}>\n                        Generate PDF\n                    </button>\n                </div>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        isCreatingPdf: (state.games.activity & ACTIVITY_CREATING_PDF) === ACTIVITY_CREATING_PDF,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(PDFGenerator);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport { State } from '../reducers';\nimport PDFGenerator from './PDFGenerator';\nimport style from './SidebarGeneratePdf.module.css';\n\ninterface StateProps {\n    activeCardSetId: string | null;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarGeneratePdf extends Component<Props> {\n    render() {\n        const { activeCardSetId, visible } = this.props;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'grid' : 'none' }}>\n                {activeCardSetId !== null && <PDFGenerator type=\"cardsets\" id={activeCardSetId} />}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        activeCardSetId: state.cardsets.active,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarGeneratePdf);\n","import { ChromePicker, ColorResult } from 'react-color';\nimport React, { Component } from 'react';\n\ninterface Props {\n    onChange: (color: ColorResult) => void;\n    color: string;\n}\n\ninterface State {\n    displayColorPicker: boolean;\n}\n\nexport default class ColorButton extends Component<Props, State> {\n    state = {\n        displayColorPicker: false,\n    };\n\n    handleClick = () => {\n        this.setState({ displayColorPicker: !this.state.displayColorPicker });\n    };\n\n    handleClose = () => {\n        this.setState({ displayColorPicker: false });\n    };\n\n    handleChange = (color: ColorResult) => {\n        this.props.onChange(color);\n    };\n\n    render() {\n        const popover: React.CSSProperties = {\n            position: 'absolute',\n            zIndex: 2,\n        };\n        const cover: React.CSSProperties = {\n            position: 'fixed',\n            top: '0px',\n            right: '0px',\n            bottom: '0px',\n            left: '0px',\n        };\n        return (\n            <>\n                <button onClick={this.handleClick} title=\"Change color\">\n                    <i className=\"material-icons\">color_lens</i>\n                </button>\n                {this.state.displayColorPicker ? (\n                    <div style={popover}>\n                        <div style={cover} onClick={this.handleClose} />\n                        <ChromePicker color={this.props.color} disableAlpha={true} onChange={this.handleChange} />\n                    </div>\n                ) : null}\n            </>\n        );\n    }\n}\n","import { ColorResult } from 'react-color';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, IdsArray, ImageArray, SidebarOwnProps, FieldInfo, ImageInfo } from '../types';\nimport { State } from '../reducers';\nimport {\n    cardSetAddImageField,\n    cardSetChangeActiveFieldName,\n    cardSetChangeFitForActiveField,\n    cardSetChangeCropForActiveField,\n    cardSetChangeImage,\n    cardSetLockActiveField,\n    cardSetLowerActiveFieldToBottom,\n    cardSetRaiseActiveFieldToTop,\n    cardSetRemoveActiveField,\n    cardSetUnlockActiveField,\n    imageListRequest,\n    cardSetChangeApplyToAllCards,\n    cardSetRaiseActiveField,\n    cardSetLowerActiveField,\n} from '../actions';\nimport ColorButton from './ColorButton';\nimport style from './SidebarImage.module.css';\n\ninterface StateProps {\n    isAuthenticated: boolean;\n    activeFieldInfo?: FieldInfo;\n    crop: boolean;\n    activeCardId?: string;\n    filter: string;\n    images: ImageArray;\n    cardsAllIds: IdsArray;\n    applyToAllCards: boolean;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\ninterface LocalState {\n    location: string;\n}\n\nexport class SidebarImage extends Component<Props, LocalState> {\n    state = {\n        location: 'all',\n    };\n\n    handleAddImageClick = () => {\n        const { dispatch } = this.props;\n        dispatch(cardSetAddImageField());\n    };\n\n    changeImage = (ii: ImageInfo) => {\n        const { activeCardId, activeFieldInfo, dispatch } = this.props;\n\n        if (activeFieldInfo) {\n            dispatch(cardSetChangeImage(activeCardId ? activeCardId : undefined, activeFieldInfo.id, ii));\n        }\n    };\n\n    handleRemoveImageFromFieldClick = () => {\n        const ii: ImageInfo = { url: undefined, base64: undefined };\n        this.changeImage(ii);\n    };\n\n    handleRemoveClick = () => {\n        const { activeFieldInfo, dispatch } = this.props;\n        if (activeFieldInfo !== undefined) {\n            dispatch(cardSetRemoveActiveField());\n        }\n    };\n\n    handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeFieldInfo, dispatch } = this.props;\n        const name = event.target.value.trim();\n        if (activeFieldInfo !== undefined) {\n            dispatch(cardSetChangeActiveFieldName(name));\n        }\n    };\n\n    handleFilterChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        const { location } = this.state;\n        const filter = event.target.value;\n        dispatch(imageListRequest(filter, location));\n    };\n\n    handleImageSelect = (imageName: string, width: number, height: number) => {\n        const { activeFieldInfo } = this.props;\n\n        if (activeFieldInfo !== undefined) {\n            const color = activeFieldInfo && activeFieldInfo.color;\n\n            const ii: ImageInfo = { url: `/api/imagefiles/${imageName}`, color, width, height, base64: undefined };\n            this.changeImage(ii);\n        }\n    };\n\n    handleRaise = (event: React.MouseEvent) => {\n        const { activeFieldInfo, dispatch } = this.props;\n        if (activeFieldInfo !== undefined) {\n            if (event.ctrlKey) {\n                dispatch(cardSetRaiseActiveFieldToTop());\n            } else {\n                dispatch(cardSetRaiseActiveField());\n            }\n        }\n    };\n\n    handleLower = (event: React.MouseEvent) => {\n        const { activeFieldInfo, dispatch } = this.props;\n        if (activeFieldInfo !== undefined) {\n            if (event.ctrlKey) {\n                dispatch(cardSetLowerActiveFieldToBottom());\n            } else {\n                dispatch(cardSetLowerActiveField());\n            }\n        }\n    };\n\n    handleLockField = () => {\n        const { activeFieldInfo, dispatch } = this.props;\n        if (activeFieldInfo !== undefined) {\n            dispatch(cardSetLockActiveField());\n        }\n    };\n\n    handleUnlockField = () => {\n        const { activeFieldInfo, dispatch } = this.props;\n        if (activeFieldInfo !== undefined) {\n            dispatch(cardSetUnlockActiveField());\n        }\n    };\n\n    handleFitOptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        const fit = event.target.value;\n\n        dispatch(cardSetChangeFitForActiveField(fit));\n    };\n\n    handleOptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { filter, dispatch } = this.props;\n        const location = event.target.value;\n\n        this.setState({ location });\n        dispatch(imageListRequest(filter, location));\n    };\n\n    handleColorChange = (color: ColorResult) => {\n        const ii: ImageInfo = { color: color.hex };\n        this.changeImage(ii);\n    };\n\n    handleRemoveColorClick = () => {\n        const ii: ImageInfo = { color: undefined };\n        this.changeImage(ii);\n    };\n\n    handleApplyToAllCardChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeApplyToAllCards(event.target.checked));\n    };\n\n    handleChangeCrop = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeFieldInfo, dispatch } = this.props;\n        if (activeFieldInfo !== undefined) {\n            dispatch(cardSetChangeCropForActiveField(event.target.checked));\n        }\n    };\n\n    render() {\n        const { activeFieldInfo, crop, filter, visible, applyToAllCards } = this.props;\n        const { location } = this.state;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'grid' : 'none' }}>\n                <div>\n                    <button onClick={this.handleAddImageClick} title=\"Add image field\">\n                        <i className=\"material-icons\">add_photo_alternate</i>\n                    </button>\n\n                    {activeFieldInfo !== undefined && (\n                        <>\n                            <button onClick={this.handleRaise} title=\"Raise image (with Ctrl - raise to top)\">\n                                <i className=\"material-icons\">arrow_upward</i>\n                            </button>\n                            <button onClick={this.handleLower} title=\"Lower image (with Ctrl - lower to bottom)\">\n                                <i className=\"material-icons\">arrow_downward</i>\n                            </button>\n                        </>\n                    )}\n\n                    {activeFieldInfo &&\n                        activeFieldInfo.type === 'image' &&\n                        (activeFieldInfo.url || activeFieldInfo.base64) && (\n                            <button onClick={this.handleRemoveImageFromFieldClick} title=\"Remove image from field\">\n                                <i className=\"material-icons\">remove_circle_outline</i>\n                            </button>\n                        )}\n\n                    {activeFieldInfo !== undefined && !activeFieldInfo.locked && (\n                        <button\n                            onClick={this.handleLockField}\n                            title=\"Lock image field. Locked field can't be dragged, rotated, resized and removed.\"\n                        >\n                            <i className=\"material-icons\">lock_open</i>\n                        </button>\n                    )}\n\n                    {activeFieldInfo !== undefined && activeFieldInfo.locked && (\n                        <button\n                            onClick={this.handleUnlockField}\n                            title=\"Unlock image field. Unlocked text field can be dragged, rotated, resized and removed.\"\n                        >\n                            <i className=\"material-icons\">lock</i>\n                        </button>\n                    )}\n\n                    <button\n                        className={activeFieldInfo === undefined || activeFieldInfo.locked ? style.disabled : ''}\n                        onClick={this.handleRemoveClick}\n                        title=\"Remove field\"\n                    >\n                        <i className=\"material-icons\">remove</i>\n                    </button>\n\n                    {activeFieldInfo !== undefined && (\n                        <input\n                            type=\"text\"\n                            value={activeFieldInfo.name || ''}\n                            placeholder={activeFieldInfo.id}\n                            onChange={this.handleNameChange}\n                            title=\"Change name of image field.\"\n                        />\n                    )}\n\n                    {activeFieldInfo && activeFieldInfo.type === 'image' && (\n                        <form>\n                            <div>\n                                Fit:\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        value=\"width\"\n                                        checked={!activeFieldInfo.fit || activeFieldInfo.fit === 'width'}\n                                        onChange={this.handleFitOptionChange}\n                                    />\n                                    width\n                                </label>\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        value=\"height\"\n                                        checked={activeFieldInfo.fit === 'height'}\n                                        onChange={this.handleFitOptionChange}\n                                    />\n                                    height\n                                </label>\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        value=\"stretch\"\n                                        checked={activeFieldInfo.fit === 'stretch'}\n                                        onChange={this.handleFitOptionChange}\n                                    />\n                                    stretch\n                                </label>\n                            </div>\n                        </form>\n                    )}\n                </div>\n\n                {activeFieldInfo && activeFieldInfo.type === 'image' && (\n                    <>\n                        <div>\n                            <label>\n                                <input type=\"checkbox\" checked={crop} onChange={this.handleChangeCrop} />\n                                Crop\n                            </label>\n                            <ColorButton\n                                color={(activeFieldInfo && activeFieldInfo.color) || '#FFFFFF'}\n                                onChange={this.handleColorChange}\n                            />\n                            {activeFieldInfo && activeFieldInfo.color && (\n                                <button onClick={this.handleRemoveColorClick} title=\"Remove color\">\n                                    <i className=\"material-icons\">remove_circle</i>\n                                </button>\n                            )}\n                            <label>\n                                <input\n                                    type=\"checkbox\"\n                                    checked={applyToAllCards}\n                                    onChange={this.handleApplyToAllCardChange}\n                                />\n                                Apply to all cards\n                            </label>\n                        </div>\n                    </>\n                )}\n                <div>\n                    <form>\n                        Source:\n                        <label>\n                            <input\n                                type=\"radio\"\n                                value=\"all\"\n                                checked={location === 'all'}\n                                onChange={this.handleOptionChange}\n                            />\n                            All\n                        </label>\n                        <label>\n                            <input\n                                type=\"radio\"\n                                value=\"user\"\n                                checked={location === 'user'}\n                                onChange={this.handleOptionChange}\n                            />\n                            User\n                        </label>\n                        <label>\n                            <input\n                                type=\"radio\"\n                                value=\"game\"\n                                checked={location === 'game'}\n                                onChange={this.handleOptionChange}\n                            />\n                            Game\n                        </label>\n                    </form>\n                </div>\n\n                <div>\n                    <input type=\"text\" placeholder=\"Search...\" value={filter} onChange={this.handleFilterChange} />\n                </div>\n                <div className={style.images}>\n                    {this.props.images.map(im => {\n                        return (\n                            <img\n                                key={im.id}\n                                src={`/api/imagefiles/${im.name}`}\n                                data-width={im.width}\n                                data-height={im.height}\n                                onClick={() => this.handleImageSelect(im.name, im.width, im.height)}\n                                alt={im.name}\n                            />\n                        );\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    const activeFieldInfo =\n        state.cardset.present.activeCardId !== undefined && state.cardset.present.activeFieldId !== undefined\n            ? state.cardset.present.fields[state.cardset.present.activeCardId][state.cardset.present.activeFieldId]\n            : undefined;\n\n    const activeCardId = state.cardset.present.activeCardId;\n\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        activeFieldInfo,\n        crop: activeFieldInfo && activeFieldInfo.type === 'image' ? activeFieldInfo.crop || false : false,\n        activeCardId,\n        images: state.images.images,\n        filter: state.images.filter,\n        cardsAllIds: state.cardset.present.cardsAllIds,\n        applyToAllCards: state.cardset.present.applyToAllCards,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarImage);\n","import 'filepond/dist/filepond.min.css';\n\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport { connect } from 'react-redux';\nimport FilePondPluginFileValidateType from 'filepond-plugin-file-validate-type';\nimport Papa from 'papaparse';\nimport React, { Component } from 'react';\nimport md5 from 'md5';\nimport shortid from 'shortid';\n\nimport {\n    CardType,\n    CardsCollection,\n    DispatchProps,\n    IdsArray,\n    SidebarOwnProps,\n    FieldInfoByCardCollection,\n    FieldInfoCollection,\n} from '../types';\nimport { FPLoadCallback, FPRevertLoadCallback, cardSetImportData, messageDisplay } from '../actions';\nimport { State } from '../reducers';\nimport { downloadBlob } from '../utils';\nimport style from './SidebarImportExport.module.css';\n\nregisterPlugin(FilePondPluginFileValidateType);\n\ninterface StateProps {\n    activeGame: string | null;\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    cardsAllIds: IdsArray;\n    cardsById: CardsCollection;\n    fieldsAllIds: IdsArray;\n    fields: FieldInfoByCardCollection;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarImportExport extends Component<Props> {\n    prepareImagePaths = (fields: FieldInfoByCardCollection) => {\n        const { activeGame } = this.props;\n        if (activeGame === null) return fields;\n\n        const ending = '_' + md5(activeGame);\n\n        let preparedImages: FieldInfoByCardCollection = {};\n\n        for (const cardId in fields) {\n            let fieldsByCard = { ...fields[cardId] };\n            for (const fieldId in fieldsByCard) {\n                let imageInfo = { ...fieldsByCard[fieldId] };\n                if (imageInfo.type === 'image') {\n                    let url = imageInfo.url || '';\n                    if (url.endsWith(ending)) {\n                        url = url.replace(ending, '');\n                    } else {\n                        imageInfo.global = true;\n                    }\n\n                    imageInfo.url = url.replace('/api/imagefiles/', '');\n                }\n                fieldsByCard[fieldId] = imageInfo;\n            }\n            preparedImages[cardId] = fieldsByCard;\n        }\n\n        return preparedImages;\n    };\n\n    handleExportJson = () => {\n        const { width, height, isTwoSided, cardsAllIds, cardsById, fields, fieldsAllIds } = this.props;\n\n        const preparedFields = this.prepareImagePaths(fields);\n\n        const data = {\n            width,\n            height,\n            isTwoSided,\n            cardsAllIds,\n            cardsById,\n            fields: preparedFields,\n            fieldsAllIds,\n        };\n\n        let json = JSON.stringify(data, null, 4);\n        let blob = new Blob([json], { type: 'octet/stream' });\n        let url = window.URL.createObjectURL(blob);\n        downloadBlob(url, 'cardset.json');\n    };\n\n    handleExportCsv = () => {\n        const { cardsAllIds, cardsById, fields, fieldsAllIds } = this.props;\n\n        const preparedFields = this.prepareImagePaths(fields);\n\n        let csvData: (string | number)[][] = [];\n        let header = ['card_id', 'card_count'];\n        let usedNames: { [key: string]: boolean } = {};\n        for (const plId of fieldsAllIds) {\n            const fieldInfo = fields[cardsAllIds[0]][plId];\n            const name = fieldInfo.name || fieldInfo.id;\n            if (!(name in usedNames)) {\n                header.push(name);\n                if (fieldInfo.type === 'image') {\n                    header.push(`${name}_global`);\n                }\n                usedNames[name] = false;\n            }\n        }\n        csvData.push(header);\n\n        for (const cardId of cardsAllIds) {\n            let card = cardsById[cardId];\n\n            let dataRow: (string | number)[] = [cardId, card.count];\n\n            let written = { ...usedNames };\n            for (const fieldId of fieldsAllIds) {\n                const fieldIndo = fields[cardId][fieldId];\n                const name = fieldIndo.name || fieldIndo.id;\n\n                if (!written[name]) {\n                    let fieldInfo = preparedFields[cardId][fieldId];\n                    if (fieldInfo.type === 'text') {\n                        dataRow.push(fieldInfo.value);\n                    } else if (fieldInfo.type === 'image') {\n                        dataRow.push(fieldInfo.url || '');\n                        dataRow.push(fieldInfo.global ? 'y' : 'n');\n                    }\n                    written[name] = true;\n                }\n            }\n            csvData.push(dataRow);\n        }\n\n        let csv = Papa.unparse(csvData);\n        let blob = new Blob([csv], { type: 'octet/stream' });\n        let url = window.URL.createObjectURL(blob);\n        downloadBlob(url, 'cardset.csv');\n    };\n\n    handleProcess = (fieldName: string, file: File, metadata: { [propName: string]: string }, load: FPLoadCallback) => {\n        const { dispatch, activeGame, fields, fieldsAllIds, cardsById, cardsAllIds } = this.props;\n        if (activeGame === null) return;\n\n        var reader = new FileReader();\n        reader.readAsText(file, 'UTF-8');\n        reader.onload = function(e) {\n            if (e.target === null) return;\n\n            let data = null;\n            const ending = '_' + md5(activeGame);\n\n            if (file.type === 'application/json') {\n                // eslint-disable-next-line\n                data = JSON.parse((e.target as any).result);\n\n                for (const cardId in data.fields) {\n                    const cardFields: FieldInfoCollection = data.fields[cardId];\n                    for (const fieldId in cardFields) {\n                        let fieldInfo = cardFields[fieldId];\n                        if (fieldInfo.type === 'image') {\n                            let isGlobal = fieldInfo.global || false;\n\n                            fieldInfo.url = `/api/imagefiles/${fieldInfo.url}${isGlobal ? '' : ending}`;\n                            delete fieldInfo.global;\n                        }\n                    }\n                }\n            } else if (file.type === 'text/csv') {\n                // eslint-disable-next-line\n                const csvData = Papa.parse((e.target as any).result, { header: true });\n\n                let newCardsAllIds: IdsArray = [];\n                let newCardsById: CardsCollection = {};\n                let newFields: FieldInfoByCardCollection = {};\n\n                for (const row of csvData.data) {\n                    const card: CardType = {\n                        id: row['card_id'] || shortid.generate(),\n                        count: row['card_count'] || 1,\n                    };\n\n                    newFields[card.id] = {\n                        ...fields[card.id in cardsById ? card.id : cardsAllIds[0]],\n                    };\n\n                    newCardsAllIds.push(card.id);\n                    newCardsById[card.id] = card;\n\n                    for (const fieldId of fieldsAllIds) {\n                        const fieldInfo = newFields[card.id][fieldId];\n                        const name = fieldInfo.name || fieldInfo.id;\n\n                        if (row[name]) {\n                            if (fieldInfo.type === 'image') {\n                                const isGlobal = row[`${name}_global`] === 'y';\n                                const url = row[name];\n\n                                newFields[card.id][fieldId] = {\n                                    ...fieldInfo,\n                                    url: `/api/imagefiles/${url}${isGlobal ? '' : ending}`,\n                                };\n                            } else if (fieldInfo.type === 'text') {\n                                newFields[card.id][fieldId] = {\n                                    ...fieldInfo,\n                                    value: row[name],\n                                };\n                            }\n                        }\n                    }\n                }\n\n                data = {\n                    cardsAllIds: newCardsAllIds,\n                    cardsById: newCardsById,\n                    fields: newFields,\n                };\n            }\n\n            if (data !== null) {\n                dispatch(cardSetImportData(data));\n            }\n        };\n        reader.onerror = function() {\n            dispatch(messageDisplay('error', 'Problem during import.'));\n        };\n\n        load(file.name);\n    };\n\n    handleRevert = (uniqueFileId: string, load: FPRevertLoadCallback) => {\n        load();\n    };\n\n    render() {\n        const { visible } = this.props;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'grid' : 'none' }}>\n                <div>\n                    Here you can export and import your card set data. JSON file contains templates of cards, text and\n                    image data by card, CSV file contains only text and image data by card.\n                </div>\n                <button onClick={this.handleExportJson}>\n                    <i className=\"material-icons\">cloud_download</i> Get JSON\n                </button>\n                <button onClick={this.handleExportCsv}>\n                    <i className=\"material-icons\">cloud_download</i> Get CSV\n                </button>\n\n                <div>Drag & Drop or browser for JSON or CSV file here:</div>\n\n                <FilePond\n                    server={{\n                        process: this.handleProcess,\n                        revert: this.handleRevert,\n                    }}\n                    acceptedFileTypes={['text/csv', 'application/json']}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        activeGame: state.games.active,\n        width: state.cardset.present.width,\n        height: state.cardset.present.height,\n        isTwoSided: state.cardset.present.isTwoSided,\n        cardsAllIds: state.cardset.present.cardsAllIds,\n        cardsById: state.cardset.present.cardsById,\n        fieldsAllIds: state.cardset.present.fieldsAllIds,\n        fields: state.cardset.present.fields,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarImportExport);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, IdsArray, SidebarOwnProps, FieldInfo, FieldInfoByCardCollection } from '../types';\nimport { State } from '../reducers';\nimport {\n    cardSetActiveCardAndField,\n    cardSetChangeActiveFieldName,\n    cardSetChangeFieldAngle,\n    cardSetChangeFieldSize,\n    cardSetLockActiveField,\n    cardSetChangeFieldPosition,\n    cardSetLowerActiveField,\n    cardSetLowerActiveFieldToBottom,\n    cardSetRaiseActiveField,\n    cardSetRaiseActiveFieldToTop,\n    cardSetUnlockActiveField,\n    cardSetChangeUnclickableForActiveField,\n} from '../actions';\nimport style from './SidebarMeasurements.module.css';\nimport shortid from 'shortid';\n\ninterface StateProps {\n    activeField?: FieldInfo;\n    activeCardId?: string;\n    fields: FieldInfoByCardCollection;\n    fieldsAllIds: IdsArray;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarMeasurements extends Component<Props> {\n    handlePrevField = () => {\n        const { activeCardId, activeField, fieldsAllIds, dispatch } = this.props;\n        if (fieldsAllIds.length === 0 || activeCardId === null) return;\n\n        let prevField = fieldsAllIds[fieldsAllIds.length - 1];\n        if (activeField !== undefined) {\n            let idx = fieldsAllIds.indexOf(activeField.id);\n            if (idx > 0) prevField = fieldsAllIds[idx - 1];\n        }\n\n        dispatch(cardSetActiveCardAndField(activeCardId, (activeField && activeField.isOnBack) || false, prevField));\n    };\n\n    handleNextField = () => {\n        const { activeCardId, activeField, fieldsAllIds, dispatch } = this.props;\n        if (fieldsAllIds.length === 0 || activeCardId === null) return;\n\n        let nextField = fieldsAllIds[0];\n        if (activeField !== undefined) {\n            let idx = fieldsAllIds.indexOf(activeField.id);\n            if (idx !== -1 && idx !== fieldsAllIds.length - 1) nextField = fieldsAllIds[idx + 1];\n        }\n\n        dispatch(cardSetActiveCardAndField(activeCardId, (activeField && activeField.isOnBack) || false, nextField));\n    };\n\n    handleRaise = (event: React.MouseEvent) => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            if (event.ctrlKey) {\n                dispatch(cardSetRaiseActiveFieldToTop());\n            } else {\n                dispatch(cardSetRaiseActiveField());\n            }\n        }\n    };\n\n    handleLower = (event: React.MouseEvent) => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            if (event.ctrlKey) {\n                dispatch(cardSetLowerActiveFieldToBottom());\n            } else {\n                dispatch(cardSetLowerActiveField());\n            }\n        }\n    };\n\n    handleLockField = () => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            dispatch(cardSetLockActiveField());\n        }\n    };\n\n    handleUnlockField = () => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            dispatch(cardSetUnlockActiveField());\n        }\n    };\n\n    handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        const name = event.target.value.trim();\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeActiveFieldName(name));\n        }\n    };\n\n    handleWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        const width = parseFloat(event.target.value);\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeFieldSize(undefined, activeField.id, width, activeField.height, shortid.generate()));\n        }\n    };\n\n    handleHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        const height = parseFloat(event.target.value);\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeFieldSize(undefined, activeField.id, activeField.width, height, shortid.generate()));\n        }\n    };\n\n    handleXChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        const x = parseFloat(event.target.value);\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeFieldPosition(undefined, activeField.id, x, activeField.y, shortid.generate()));\n        }\n    };\n\n    handleYChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        const y = parseFloat(event.target.value);\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeFieldPosition(undefined, activeField.id, activeField.x, y, shortid.generate()));\n        }\n    };\n\n    handleAngleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        const angle = (parseFloat(event.target.value) * Math.PI) / 180;\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeFieldAngle(undefined, activeField.id, angle, shortid.generate()));\n        }\n    };\n\n    handleChangeUnclickable = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeUnclickableForActiveField(event.target.checked));\n        }\n    };\n\n    render() {\n        const { activeCardId, activeField, visible } = this.props;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'initial' : 'none' }}>\n                {activeCardId !== undefined && (\n                    <>\n                        <button onClick={this.handlePrevField} title=\"Previous field\">\n                            <i className=\"material-icons\">arrow_back</i>\n                        </button>\n                        <button onClick={this.handleNextField} title=\"Next field\">\n                            <i className=\"material-icons\">arrow_forward</i>\n                        </button>\n                    </>\n                )}\n\n                {activeField !== undefined && (\n                    <>\n                        <button onClick={this.handleRaise} title=\"Raise text (with Ctrl - raise to top)\">\n                            <i className=\"material-icons\">arrow_upward</i>\n                        </button>\n                        <button onClick={this.handleLower} title=\"Lower text (with Ctrl - lower to bottom)\">\n                            <i className=\"material-icons\">arrow_downward</i>\n                        </button>\n                    </>\n                )}\n\n                {activeField !== undefined && !activeField.locked && (\n                    <button\n                        onClick={this.handleLockField}\n                        title=\"Lock field. Locked field can't be dragged, rotated, resized and removed.\"\n                    >\n                        <i className=\"material-icons\">lock_open</i>\n                    </button>\n                )}\n\n                {activeField !== undefined && activeField.locked && (\n                    <button\n                        onClick={this.handleUnlockField}\n                        title=\"Unlock field. Unlocked field can be dragged, rotated, resized and removed.\"\n                    >\n                        <i className=\"material-icons\">lock</i>\n                    </button>\n                )}\n\n                {activeField !== undefined && (\n                    <div>\n                        <label>\n                            Unclickable field:{' '}\n                            <input\n                                type=\"checkbox\"\n                                onChange={this.handleChangeUnclickable}\n                                className=\"form-control\"\n                                checked={activeField.unclickable ? true : false}\n                            />\n                        </label>\n                    </div>\n                )}\n\n                {activeField !== undefined && (\n                    <div>\n                        <label>\n                            Field name:\n                            <input\n                                type=\"text\"\n                                value={activeField.name || ''}\n                                placeholder={activeField.id}\n                                onChange={this.handleNameChange}\n                                title=\"Change name of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            Width:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={activeField.width}\n                                placeholder=\"Width\"\n                                onChange={this.handleWidthChange}\n                                title=\"Change width of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            Height:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={activeField.height}\n                                placeholder=\"Height\"\n                                onChange={this.handleHeightChange}\n                                title=\"Change width of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            X:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={activeField.x}\n                                placeholder=\"Width\"\n                                onChange={this.handleXChange}\n                                title=\"Change x coordinate of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            Y:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={activeField.y}\n                                placeholder=\"Height\"\n                                onChange={this.handleYChange}\n                                title=\"Change y coordinate of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            Angle:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={(activeField.angle * 180) / Math.PI}\n                                placeholder=\"Angle\"\n                                onChange={this.handleAngleChange}\n                                title=\"Change rotation angle of field.\"\n                            />\n                        </label>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    const activeField =\n        state.cardset.present.activeCardId !== undefined && state.cardset.present.activeFieldId !== undefined\n            ? state.cardset.present.fields[state.cardset.present.activeCardId][state.cardset.present.activeFieldId]\n            : undefined;\n\n    return {\n        activeField,\n        activeCardId: state.cardset.present.activeCardId,\n        fields: state.cardset.present.fields,\n        fieldsAllIds: state.cardset.present.fieldsAllIds,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarMeasurements);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport { State } from '../reducers';\nimport {\n    cardSetChangeHeight,\n    cardSetChangeIsTwoSided,\n    cardSetChangeSnappingDistance,\n    cardSetChangeWidth,\n    cardSetSetZoom,\n} from '../actions';\nimport style from './SidebarSettings.module.css';\n\ninterface StateProps {\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    snappingDistance: number;\n    zoom: number;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\ninterface LocalState {\n    maintainAspectRatio: boolean;\n    resizeContent: boolean;\n}\n\nexport class SidebarSettings extends Component<Props, LocalState> {\n    state: LocalState = {\n        maintainAspectRatio: true,\n        resizeContent: false,\n    };\n\n    handleWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        const { maintainAspectRatio, resizeContent } = this.state;\n        dispatch(cardSetChangeWidth(parseFloat(event.target.value), maintainAspectRatio, resizeContent));\n    };\n\n    handleHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        const { maintainAspectRatio, resizeContent } = this.state;\n        dispatch(cardSetChangeHeight(parseFloat(event.target.value), maintainAspectRatio, resizeContent));\n    };\n\n    handleIsTwoSidedChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeIsTwoSided(event.target.checked));\n    };\n\n    handleZoom = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetSetZoom(parseFloat(event.target.value)));\n    };\n\n    handleSnappingDistance = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeSnappingDistance(parseFloat(event.target.value)));\n    };\n\n    render() {\n        const { width, height, isTwoSided, snappingDistance, visible, zoom } = this.props;\n        const { maintainAspectRatio, resizeContent } = this.state;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'initial' : 'none' }}>\n                <label htmlFor=\"card_width\">Card width (mm):</label>\n                <input\n                    id=\"card_width\"\n                    type=\"number\"\n                    min=\"0\"\n                    step=\"0.1\"\n                    onChange={this.handleWidthChange}\n                    className=\"form-control\"\n                    placeholder=\"width\"\n                    value={width}\n                />\n                <label htmlFor=\"card_height\">Card height (mm):</label>\n                <input\n                    id=\"card_height\"\n                    type=\"number\"\n                    min=\"0\"\n                    step=\"0.1\"\n                    onChange={this.handleHeightChange}\n                    className=\"form-control\"\n                    placeholder=\"height\"\n                    value={height}\n                />\n                <div>\n                    <label>\n                        Maintain aspect ratio:{' '}\n                        <input\n                            type=\"checkbox\"\n                            onChange={() => {\n                                this.setState({ maintainAspectRatio: !maintainAspectRatio });\n                            }}\n                            className=\"form-control\"\n                            checked={maintainAspectRatio}\n                        />\n                    </label>\n                </div>\n\n                <div>\n                    <label>\n                        Resize content:{' '}\n                        <input\n                            type=\"checkbox\"\n                            onChange={() => {\n                                this.setState({ resizeContent: !resizeContent });\n                            }}\n                            className=\"form-control\"\n                            checked={resizeContent}\n                        />\n                    </label>\n                </div>\n\n                <label>\n                    Cards have two sides:{' '}\n                    <input\n                        type=\"checkbox\"\n                        onChange={this.handleIsTwoSidedChange}\n                        className=\"form-control\"\n                        checked={isTwoSided}\n                    />\n                </label>\n                <div>\n                    <label htmlFor=\"zoom\">Zoom (if you want to see details or big picture)</label>\n                    <input\n                        id=\"zoom\"\n                        type=\"number\"\n                        min=\"0.1\"\n                        step=\"0.1\"\n                        onChange={this.handleZoom}\n                        className=\"form-control\"\n                        placeholder=\"zoom\"\n                        value={zoom}\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"zoom\">Snapping distance in mm. 0 to disable.</label>\n                    <input\n                        id=\"zoom\"\n                        type=\"number\"\n                        min=\"0\"\n                        step=\"0.1\"\n                        onChange={this.handleSnappingDistance}\n                        className=\"form-control\"\n                        placeholder=\"Snapping distance\"\n                        value={snappingDistance}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        width: state.cardset.present.width,\n        height: state.cardset.present.height,\n        isTwoSided: state.cardset.present.isTwoSided,\n        snappingDistance: state.cardset.present.snappingDistance,\n        zoom: state.cardset.present.zoom,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarSettings);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport WebFont from 'webfontloader';\n\nimport { DEFAULT_LINE_HEIGHT } from '../constants';\nimport {\n    Dispatch,\n    cardSetChangeActiveTextFieldFontFamilyAndVariant,\n    cardSetChangeActiveTextFieldFontSize,\n    cardSetChangeActiveTextFieldFontVariant,\n    cardSetChangeActiveTextFieldLineHeight,\n} from '../actions';\nimport { State } from '../reducers';\nimport style from './FontSelector.module.css';\nimport webfonts from './webfonts.json';\n\ninterface WebFontsInfo {\n    [propName: string]: {\n        [propName: string]: string;\n    };\n}\n\ninterface FontOption {\n    value: string;\n    label: string;\n}\n\nconst options: FontOption[] = Object.keys(webfonts)\n    .sort()\n    .map(fi => ({ value: fi, label: fi }));\n\ninterface StateProps {\n    activeFont: string;\n    activeFontVariant: string;\n    activeFontSize: number;\n    activeLineHeight: number;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = StateProps & DispatchProps;\n\nclass FontSelector extends Component<Props> {\n    getFontStringForLoad = (family: string, variant: string) => {\n        let stringForLoad = family;\n        if (variant !== 'regular') {\n            stringForLoad += ':' + variant;\n        }\n        return stringForLoad;\n    };\n\n    handleChange = (selectedOption?: FontOption | FontOption[] | null) => {\n        if (!selectedOption) return;\n\n        const fontFamily = (selectedOption as FontOption).value;\n\n        let fontVariant = this.props.activeFontVariant;\n        const wf: WebFontsInfo = webfonts;\n        if (!(fontVariant in wf[fontFamily])) {\n            fontVariant = Object.keys(wf[fontFamily]).sort()[0];\n        }\n\n        WebFont.load({\n            google: {\n                families: [this.getFontStringForLoad(fontFamily, fontVariant)],\n            },\n            active: () => {\n                const { dispatch } = this.props;\n                dispatch(cardSetChangeActiveTextFieldFontFamilyAndVariant(fontFamily, fontVariant));\n            },\n        });\n    };\n\n    handleFontVariantChange = (selectedOption?: FontOption | FontOption[] | null) => {\n        if (!selectedOption) return;\n\n        const value = (selectedOption as FontOption).value;\n        WebFont.load({\n            google: {\n                families: [this.getFontStringForLoad(this.props.activeFont, value)],\n            },\n            active: () => {\n                const { dispatch } = this.props;\n                dispatch(cardSetChangeActiveTextFieldFontVariant(value));\n            },\n        });\n    };\n\n    handleFontSizeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeActiveTextFieldFontSize(parseFloat(event.target.value)));\n    };\n\n    handleLineHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeActiveTextFieldLineHeight(parseFloat(event.target.value)));\n    };\n\n    render() {\n        const selectedFontFamily = options.find(f => f.value === this.props.activeFont);\n\n        const fontVariantOptions: FontOption[] = Object.keys((webfonts as WebFontsInfo)[this.props.activeFont])\n            .sort()\n            .map(fv => ({ value: fv, label: fv }));\n\n        const selectedFontVariant = fontVariantOptions.find(f => f.value === this.props.activeFontVariant);\n\n        return (\n            <>\n                <input\n                    type=\"number\"\n                    value={this.props.activeFontSize}\n                    onChange={this.handleFontSizeChange}\n                    title=\"Font size\"\n                />\n                <Select\n                    className={style.fontFamily}\n                    value={selectedFontFamily}\n                    onChange={this.handleChange}\n                    options={options}\n                />\n                <Select\n                    className={style.fontVariant}\n                    value={selectedFontVariant}\n                    onChange={this.handleFontVariantChange}\n                    options={fontVariantOptions}\n                />\n                <input\n                    type=\"number\"\n                    value={this.props.activeLineHeight}\n                    onChange={this.handleLineHeightChange}\n                    title=\"Line height\"\n                    step=\"0.01\"\n                />\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    let activeFont = state.cardset.present.textSettings.fontFamily;\n    let activeFontVariant = state.cardset.present.textSettings.fontVariant;\n    let activeFontSize = state.cardset.present.textSettings.fontSize;\n    let activeLineHeight = state.cardset.present.textSettings.lineHeight || DEFAULT_LINE_HEIGHT;\n\n    return {\n        activeFont,\n        activeFontVariant,\n        activeFontSize,\n        activeLineHeight,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, {}, State>(mapStateToProps)(FontSelector);\n","import { ColorResult } from 'react-color';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, SidebarOwnProps, FieldInfo } from '../types';\nimport { State } from '../reducers';\nimport {\n    cardSetAddTextField,\n    cardSetChangeActiveFieldName,\n    cardSetChangeActiveTextFieldAlign,\n    cardSetLockActiveField,\n    cardSetLowerActiveFieldToBottom,\n    cardSetRaiseActiveFieldToTop,\n    cardSetRemoveActiveField,\n    cardSetUnlockActiveField,\n    cardSetChangeActiveTextFieldColor,\n    cardSetRaiseActiveField,\n    cardSetLowerActiveField,\n} from '../actions';\nimport ColorButton from './ColorButton';\nimport FontSelector from './FontSelector';\nimport style from './SidebarText.module.css';\n\ninterface StateProps {\n    isAuthenticated: boolean;\n    activeField?: FieldInfo;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarText extends Component<Props> {\n    handleAddTextClick = () => {\n        const { dispatch } = this.props;\n        dispatch(cardSetAddTextField());\n    };\n\n    handleSetTextAlignLeft = () => {\n        const selection = window.getSelection();\n        const range = selection.getRangeAt(0);\n        if (selection.rangeCount === 1 && range.collapsed) {\n            const { dispatch } = this.props;\n            dispatch(cardSetChangeActiveTextFieldAlign('left'));\n        } else {\n            document.execCommand('justifyleft');\n        }\n    };\n\n    handleSetTextAlignCenter = () => {\n        const selection = window.getSelection();\n        const range = selection.getRangeAt(0);\n        if (selection.rangeCount === 1 && range.collapsed) {\n            const { dispatch } = this.props;\n            dispatch(cardSetChangeActiveTextFieldAlign('center'));\n        } else {\n            document.execCommand('justifycenter');\n        }\n    };\n\n    handleSetTextAlignRight = () => {\n        const selection = window.getSelection();\n        const range = selection.getRangeAt(0);\n        if (selection.rangeCount === 1 && range.collapsed) {\n            const { dispatch } = this.props;\n            dispatch(cardSetChangeActiveTextFieldAlign('right'));\n        } else {\n            document.execCommand('justifyright');\n        }\n    };\n\n    handleSetTextBold = () => {\n        document.execCommand('bold');\n    };\n\n    handleSetTextItalic = () => {\n        document.execCommand('italic');\n    };\n\n    handleRemoveClick = () => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            dispatch(cardSetRemoveActiveField());\n        }\n    };\n\n    handleRaise = (event: React.MouseEvent) => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            if (event.ctrlKey) {\n                dispatch(cardSetRaiseActiveFieldToTop());\n            } else {\n                dispatch(cardSetRaiseActiveField());\n            }\n        }\n    };\n\n    handleLower = (event: React.MouseEvent) => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            if (event.ctrlKey) {\n                dispatch(cardSetLowerActiveFieldToBottom());\n            } else {\n                dispatch(cardSetLowerActiveField());\n            }\n        }\n    };\n\n    handleLockField = () => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            dispatch(cardSetLockActiveField());\n        }\n    };\n\n    handleUnlockField = () => {\n        const { activeField, dispatch } = this.props;\n        if (activeField !== undefined) {\n            dispatch(cardSetUnlockActiveField());\n        }\n    };\n\n    handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeField, dispatch } = this.props;\n        const name = event.target.value.trim();\n        if (activeField !== undefined) {\n            dispatch(cardSetChangeActiveFieldName(name));\n        }\n    };\n\n    handleColorChange = (color: ColorResult) => {\n        const selection = window.getSelection();\n        const range = selection.getRangeAt(0);\n        if (selection.rangeCount === 1 && range.collapsed) {\n            const { dispatch } = this.props;\n            dispatch(cardSetChangeActiveTextFieldColor(color.hex));\n        } else {\n            document.execCommand('forecolor', false, color.hex);\n        }\n    };\n\n    render() {\n        const { activeField, visible } = this.props;\n\n        let color = '#000000';\n        if (activeField && activeField.type === 'text' && activeField.color) {\n            color = activeField.color;\n        }\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'initial' : 'none' }}>\n                <button onClick={this.handleAddTextClick} title=\"Add text field\">\n                    <i className=\"material-icons\">text_fields</i>\n                </button>\n                {activeField !== undefined && (\n                    <>\n                        <button onClick={this.handleRaise} title=\"Raise text (with Ctrl - raise to top)\">\n                            <i className=\"material-icons\">arrow_upward</i>\n                        </button>\n                        <button onClick={this.handleLower} title=\"Lower text (with Ctrl - lower to bottom)\">\n                            <i className=\"material-icons\">arrow_downward</i>\n                        </button>\n                    </>\n                )}\n\n                {activeField !== undefined && !activeField.locked && (\n                    <button\n                        onClick={this.handleLockField}\n                        title=\"Lock text field. Locked field can't be dragged, rotated, resized and removed.\"\n                    >\n                        <i className=\"material-icons\">lock_open</i>\n                    </button>\n                )}\n\n                {activeField !== undefined && activeField.locked && (\n                    <button\n                        onClick={this.handleUnlockField}\n                        title=\"Unlock text field. Unlocked text field can be dragged, rotated, resized and removed.\"\n                    >\n                        <i className=\"material-icons\">lock</i>\n                    </button>\n                )}\n\n                <button\n                    className={activeField === undefined || activeField.locked ? style.disabled : ''}\n                    onClick={this.handleRemoveClick}\n                    title=\"Remove field\"\n                >\n                    <i className=\"material-icons\">remove</i>\n                </button>\n\n                {activeField !== undefined && (\n                    <input\n                        type=\"text\"\n                        value={activeField.name || ''}\n                        placeholder={activeField.id}\n                        onChange={this.handleNameChange}\n                        title=\"Change name of text field.\"\n                    />\n                )}\n\n                <div>\n                    <button onClick={this.handleSetTextAlignLeft} title=\"Align text left\">\n                        <i className=\"material-icons\">format_align_left</i>\n                    </button>\n                    <button onClick={this.handleSetTextAlignCenter} title=\"Align text center\">\n                        <i className=\"material-icons\">format_align_center</i>\n                    </button>\n                    <button onClick={this.handleSetTextAlignRight} title=\"Align text right\">\n                        <i className=\"material-icons\">format_align_right</i>\n                    </button>\n                    <button onClick={this.handleSetTextBold} title=\"Makes selected text bold\">\n                        <i className=\"material-icons\">format_bold</i>\n                    </button>\n                    <button onClick={this.handleSetTextItalic} title=\"Makes selected text italic\">\n                        <i className=\"material-icons\">format_italic</i>\n                    </button>\n                    <ColorButton color={color} onChange={this.handleColorChange} />\n                    <FontSelector />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    const activeField =\n        state.cardset.present.activeCardId !== undefined && state.cardset.present.activeFieldId !== undefined\n            ? state.cardset.present.fields[state.cardset.present.activeCardId][state.cardset.present.activeFieldId]\n            : undefined;\n\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        activeField,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarText);\n","import 'filepond/dist/filepond.min.css';\n\nimport './SidebarUpload.css';\n\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport { connect } from 'react-redux';\nimport FilePondPluginFileValidateSize from 'filepond-plugin-file-validate-size';\nimport FilePondPluginFileValidateType from 'filepond-plugin-file-validate-type';\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport {\n    FPAbortCallback,\n    FPErrorCallback,\n    FPLoadCallback,\n    FPProgressCallback,\n    FPRevertLoadCallback,\n    cardSetDeleteImage,\n    cardSetUploadImage,\n} from '../actions';\nimport { State } from '../reducers';\nimport style from './SidebarUpload.module.css';\n\nregisterPlugin(FilePondPluginFileValidateSize);\nregisterPlugin(FilePondPluginFileValidateType);\n\ninterface StateProps {\n    activeGame: string | null;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarUpload extends Component<Props> {\n    handleProcess = (\n        fieldName: string,\n        file: File,\n        metadata: { [propName: string]: string },\n        load: FPLoadCallback,\n        error: FPErrorCallback,\n        progress: FPProgressCallback,\n        abort: FPAbortCallback,\n    ) => {\n        const { dispatch, activeGame } = this.props;\n\n        if (activeGame === null) {\n            abort();\n            return;\n        }\n\n        let source = axios.CancelToken.source();\n\n        dispatch(cardSetUploadImage(activeGame, file, load, error, progress, abort, source.token));\n\n        return { abort: source.cancel };\n    };\n\n    handleRevert = (uniqueFileId: string, load: FPRevertLoadCallback, error: FPErrorCallback) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetDeleteImage(uniqueFileId, load, error));\n    };\n\n    render() {\n        const { visible } = this.props;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'grid' : 'none' }}>\n                <div>\n                    Uploaded imaged are kept for limited time. If they are deleted then simply re-upload them again.\n                </div>\n                <FilePond\n                    allowMultiple={true}\n                    server={{\n                        process: this.handleProcess,\n                        revert: this.handleRevert,\n                    }}\n                    acceptedFileTypes={['image/png', 'image/jpeg', 'image/svg+xml']}\n                    allowFileSizeValidation={true}\n                    maxFileSize=\"500KB\"\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        activeGame: state.games.active,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarUpload);\n","import { connect, ConnectedComponentClass } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport { SidebarState, cardSetSetSidebarState } from '../actions';\nimport { State } from '../reducers';\nimport SidebarDetails from './SidebarDetails';\nimport SidebarGeneratePng from './SidebarGeneratePng';\nimport SidebarGeneratePdf from './SidebarGeneratePdf';\nimport SidebarImage from './SidebarImage';\nimport SidebarImportExport from './SidebarImportExport';\nimport SidebarMeasurements from './SidebarMeasurements';\nimport SidebarSettings from './SidebarSettings';\nimport SidebarText from './SidebarText';\nimport SidebarUpload from './SidebarUpload';\nimport style from './Sidebar.module.css';\n\ninterface StateProps {\n    isAuthenticated: boolean;\n    activeSidebar: SidebarState | null;\n}\n\ntype Props = StateProps & DispatchProps;\n\ninterface SidebarInfo {\n    state: SidebarState;\n    title: string;\n    icon: string;\n    component: ConnectedComponentClass<typeof Component, SidebarOwnProps>;\n}\n\nconst SIDEBARS: SidebarInfo[] = [\n    {\n        state: SidebarState.Settings,\n        title: 'Settings',\n        icon: 'settings',\n        component: SidebarSettings,\n    },\n    {\n        state: SidebarState.Details,\n        title: 'Details',\n        icon: 'details',\n        component: SidebarDetails,\n    },\n    {\n        state: SidebarState.Measurements,\n        title: 'Measurements',\n        icon: 'format_shapes',\n        component: SidebarMeasurements,\n    },\n    {\n        state: SidebarState.Image,\n        title: 'Images',\n        icon: 'photo',\n        component: SidebarImage,\n    },\n    {\n        state: SidebarState.Text,\n        title: 'Texts',\n        icon: 'text_fields',\n        component: SidebarText,\n    },\n    {\n        state: SidebarState.Upload,\n        title: 'Upload',\n        icon: 'cloud_upload',\n        component: SidebarUpload,\n    },\n    {\n        state: SidebarState.ImportExport,\n        title: 'Import/Export',\n        icon: 'import_export',\n        component: SidebarImportExport,\n    },\n    {\n        state: SidebarState.Png,\n        title: 'Generate as PNG',\n        icon: 'photo_library',\n        component: SidebarGeneratePng,\n    },\n    {\n        state: SidebarState.Pdf,\n        title: 'Generate as PDF',\n        icon: 'picture_as_pdf',\n        component: SidebarGeneratePdf,\n    },\n];\n\nexport class Sidebar extends Component<Props> {\n    handleSidebar = (state: SidebarState) => {\n        const { activeSidebar, dispatch } = this.props;\n        if (activeSidebar === state) {\n            dispatch(cardSetSetSidebarState(null));\n        } else {\n            dispatch(cardSetSetSidebarState(state));\n        }\n    };\n\n    render() {\n        const { activeSidebar } = this.props;\n        return (\n            <div className={style.sidebar}>\n                <div className={style.controls}>\n                    {SIDEBARS.map(sb => (\n                        <i\n                            key={sb.state}\n                            title={sb.title}\n                            className={`material-icons ${activeSidebar === sb.state ? style.active : ''}`}\n                            onClick={() => this.handleSidebar(sb.state)}\n                        >\n                            {sb.icon}\n                        </i>\n                    ))}\n                </div>\n                <div className={`${style.view} ${activeSidebar === null ? style.hidden : ''}`}>\n                    {SIDEBARS.map(sb => (\n                        <sb.component key={sb.state} visible={activeSidebar === sb.state} />\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        activeSidebar: state.cardset.present.activeSidebar,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, {}, State>(mapStateToProps)(Sidebar);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport shortid from 'shortid';\n\nimport { ACTIVITY_SELECTING, State } from '../reducers';\nimport { BLEED_WIDTH } from '../constants';\nimport { CardSetType, CardType, CardsCollection } from '../types';\nimport {\n    Dispatch,\n    cardSetActiveCardAndField,\n    cardSetCreateCard,\n    cardSetRenameRequest,\n    cardSetUndo,\n    cardSetRedo,\n} from '../actions';\nimport Card from './Card';\nimport EditableTitle from './EditableTitle';\nimport KawaiiMessage, { Character } from './KawaiiMessage';\nimport Loader from './Loader';\nimport Sidebar from './Sidebar';\nimport style from './CardSet.module.css';\n\ninterface StateProps {\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    isAuthenticated: boolean;\n    cardsAllIds: string[];\n    cardsById: CardsCollection;\n    activity: number;\n    zoom: number;\n    activeCardSet: CardSetType | null;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = StateProps & DispatchProps;\n\ninterface LocalState {\n    pageWidth: number;\n    pageHeight: number;\n    topBottomMargin: number;\n    leftRightMargin: number;\n}\n\nexport class CardSet extends Component<Props, LocalState> {\n    state = {\n        pageWidth: 210,\n        pageHeight: 297,\n        topBottomMargin: 15,\n        leftRightMargin: 9,\n    };\n\n    componentDidMount() {\n        window.addEventListener('keydown', this.keyDown);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('keydown', this.keyDown);\n    }\n\n    keyDown = (event: KeyboardEvent) => {\n        const { dispatch } = this.props;\n\n        switch (event.key) {\n            case 'z':\n            case 'Z': {\n                if (event.ctrlKey && event.shiftKey) {\n                    dispatch(cardSetRedo());\n                } else if (event.ctrlKey) {\n                    dispatch(cardSetUndo());\n                }\n                break;\n            }\n            case 'y':\n            case 'Y': {\n                if (event.ctrlKey) {\n                    dispatch(cardSetRedo());\n                }\n                break;\n            }\n            // no default\n        }\n    };\n\n    handleCreateCardClick = () => {\n        const { dispatch } = this.props;\n\n        const newCard: CardType = { id: shortid.generate(), count: 1 };\n\n        dispatch(cardSetCreateCard(newCard));\n    };\n\n    handleClickOutsideOfCard = () => {\n        const { dispatch } = this.props;\n        dispatch(cardSetActiveCardAndField(undefined, false, undefined));\n    };\n\n    handleCardSetNameChange = (newName: string) => {\n        const { dispatch, activeCardSet } = this.props;\n        if (activeCardSet !== null) {\n            dispatch(cardSetRenameRequest(activeCardSet.id, newName));\n        }\n    };\n\n    render() {\n        const {\n            isAuthenticated,\n            cardsAllIds,\n            cardsById,\n            width,\n            height,\n            isTwoSided,\n            activity,\n            zoom,\n            activeCardSet,\n        } = this.props;\n\n        const widthWithBleeds = width + BLEED_WIDTH * 2;\n        const heightWithBleeds = height + BLEED_WIDTH * 2;\n\n        return (\n            isAuthenticated && (\n                <div>\n                    <KawaiiMessage character={Character.Ghost}>\n                        <p>Here you can design your cards.</p>\n                    </KawaiiMessage>\n\n                    {activeCardSet !== null && (\n                        <EditableTitle title={activeCardSet.name} onChange={this.handleCardSetNameChange} />\n                    )}\n\n                    <div className={style.cardsetview}>\n                        <div className={style.sidebar}>\n                            <Sidebar />\n                        </div>\n                        <div onMouseDown={this.handleClickOutsideOfCard} onTouchStart={this.handleClickOutsideOfCard}>\n                            {(activity & ACTIVITY_SELECTING) === ACTIVITY_SELECTING && <Loader />}\n                            <div className={style.cardset}>\n                                <ul\n                                    style={{\n                                        gridTemplateColumns: `repeat(auto-fill, minmax(${widthWithBleeds *\n                                            zoom}mm, 1fr))`,\n                                    }}\n                                >\n                                    {cardsAllIds &&\n                                        cardsAllIds.map(cardId => [\n                                            <li key={cardId}>\n                                                <Card card={cardsById[cardId]} isBack={false} />\n                                            </li>,\n                                            isTwoSided && (\n                                                <li key={`${cardId}back`}>\n                                                    <Card card={cardsById[cardId]} isBack={true} />\n                                                </li>\n                                            ),\n                                        ])}\n                                    <li key=\"newCard\">\n                                        <div\n                                            id=\"newCard\"\n                                            className={style.createCard}\n                                            style={{\n                                                width: `${widthWithBleeds * zoom}mm`,\n                                                height: `${heightWithBleeds * zoom}mm`,\n                                                position: 'relative',\n                                                overflow: 'hidden',\n                                            }}\n                                            onClick={this.handleCreateCardClick}\n                                        >\n                                            <div>\n                                                <i className=\"material-icons\">add</i>\n                                                <div>Add Card</div>\n                                            </div>\n                                        </div>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        activity: state.cardset.present.activity,\n        width: state.cardset.present.width,\n        height: state.cardset.present.height,\n        isTwoSided: state.cardset.present.isTwoSided,\n        zoom: state.cardset.present.zoom,\n        isAuthenticated: state.auth.isAuthenticated,\n        cardsAllIds: state.cardset.present.cardsAllIds,\n        cardsById: state.cardset.present.cardsById,\n        activeCardSet:\n            state.cardsets.active && state.cardsets.byId[state.cardsets.active]\n                ? state.cardsets.byId[state.cardsets.active]\n                : null,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, {}, State>(mapStateToProps)(CardSet);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, cardSetSelectRequest } from './actions';\nimport { State } from './reducers';\nimport CardSet from './components/CardSet';\n\ninterface Props {\n    dispatch: Dispatch;\n    match: { params: { id: string } };\n    isAuthenticated: boolean;\n}\n\nexport class CardSetPage extends Component<Props> {\n    componentDidMount() {\n        const { dispatch, match } = this.props;\n        dispatch(cardSetSelectRequest(match.params.id));\n    }\n\n    render() {\n        return <CardSet />;\n    }\n}\n\nconst mapStateToProps = (state: State) => ({ isAuthenticated: state.auth.isAuthenticated });\n\nexport default connect(mapStateToProps)(CardSetPage);\n","import React, { Component } from 'react';\n\nexport default class ChangelogPage extends Component {\n    render() {\n        return (\n            <div>\n                <p>Here you can find list of future plans and what was implemented recently.</p>\n                <h2>Future plans</h2>\n                <ul>\n                    <li>Generating list of author's of icons if attribution is required.</li>\n                    <li>Card templates.</li>\n                    <li>Keyboard shortcuts.</li>\n                    <li>Possibility to order your games for printing from various printing providers.</li>\n                </ul>\n                <h2>2019-06-08</h2>\n                <ul>\n                    <li>\"Apply to all cards\" work on pan and zoom as well.</li>\n                    <li>UX on mobile devices (e.g. phones) improved.</li>\n                    <li>Other minor fixes.</li>\n                </ul>\n                <h2>2019-06-04</h2>\n                <ul>\n                    <li>Possibility to zoom in and pan imaged added.</li>\n                    <li>Undo/Redo using Ctrl+Z and Ctrl+Y (or Ctrl+Shift+Z).</li>\n                    <li>More small improvements and bug fixes.</li>\n                </ul>\n                <h2>2019-05-26</h2>\n                <ul>\n                    <li>\n                        Text rendering fixes.\n                    </li>\n                    <li>\n                        Card Sets and Games list are sorted alphabetically now.\n                    </li>\n                    <li>\n                        Image handling improvements.\n                    </li>\n                </ul>\n                <h2>2019-05-18</h2>\n                <ul>\n                    <li>\n                        PDF and PNG generation improvements.\n                    </li>\n                </ul>\n                <h2>2019-05-17</h2>\n                <ul>\n                    <li>\n                        PNG generation for card set or the whole game. This will benefit if you want to publish game via{' '}\n                        <a href=\"https://www.thegamecrafter.com/\">The Game Crafter</a>,{' '}\n                        <a href=\"makeplayingcards.com\">Make Playing Cards</a> or any other place.\n                    </li>\n                </ul>\n                <h2>2019-04-13</h2>\n                <ul>\n                    <li>Option to generate cutting marks on front side only.</li>\n                    <li>Guillotine cuttings marks on card edges.</li>\n                    <li>\n                        Field move limitation is removed because if drag field outside of view you can return it using\n                        custom positions and size controls.\n                    </li>\n                    <li>Drag and drop improvement.</li>\n                </ul>\n                <h2>2019-04-07</h2>\n                <ul>\n                    <li>Snapping implemented for move, rotation and resize operations.</li>\n                    <li>Image search changes and improvements.</li>\n                    <li>\n                        Drag&Drop support for images. Images can be dropped to text field as well but it is assumed that\n                        dropped images are square when generating PDF.\n                    </li>\n                    <li>Bold and Italic support in text added.</li>\n                    <li>Other minor fixes.</li>\n                </ul>\n                <h2>2019-03-22</h2>\n                <ul>\n                    <li>Two-sided cards.</li>\n                    <li>PDF generation for all the game.</li>\n                    <li>More PDF generation options added</li>\n                    <li>Change color of images (for SVG images only, e.g. try using with \"forms\" images).</li>\n                    <li>Game rename and delete</li>\n                    <li>Card Set rename and delete</li>\n                    <li>Text: line height support</li>\n                    <li>UI/UX improvements</li>\n                </ul>\n                <h2>2019-03-03</h2>\n                <ul>\n                    <li>Data import/export in JSON and CSV formats.</li>\n                    <li>\n                        Named fields. If multiple fields have the same name then by editing one you change value in all\n                        of them. As well named fields look better in data export/import.\n                    </li>\n                </ul>\n\n                <h2>2019-03-02</h2>\n                <ul>\n                    <li>You can upload your own images now. Images are limited.</li>\n                    <li>\n                        Image order support added. E.g.: now you can upload background image and lower it to the bottom.\n                    </li>\n                    <li>Progress indicators and user messages improvements.</li>\n                </ul>\n\n                <h2>2019-02-24</h2>\n                <ul>\n                    <li>Sidebar created for lighter, cleaner and faster UI.</li>\n                    <li>Zoom added to card set for more flexibility while viewing or editing.</li>\n                </ul>\n                <h2>2019-02-23</h2>\n                <ul>\n                    <li>Text rendering changed and should be working properly now.</li>\n                    <li>Crash with new card set fixed.</li>\n                    <li>Minor UI improvements.</li>\n                </ul>\n                <h2>2019-02-17</h2>\n                <p>Initial public version.</p>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\nimport { reportError } from './utils';\n\nwindow.addEventListener('error', function(evt: ErrorEvent) {\n    let error = evt.error;\n    reportError(error);\n});\n\ninterface Props {\n    children: React.ReactNode;\n}\n\ninterface State {\n    hasError: boolean;\n}\n\nexport default class ErrorBoundary extends Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    componentDidCatch(error: Error | null) {\n        this.setState({ hasError: true });\n        if (error !== null) {\n            reportError(error);\n        }\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return (\n                <KawaiiMessage character={Character.Browser} mood=\"ko\">\n                    Something unexpected has happened. If you want this problem to be fixed write me to{' '}\n                    <a href=\"mailto:dalius@ffff.lt\">dalius@ffff.lt</a>.\n                </KawaiiMessage>\n            );\n        }\n        return this.props.children;\n    }\n}\n","import React, { Component } from 'react';\nimport style from './ConfirmedDelete.module.css';\n\ninterface Props {\n    question: string;\n    onDelete: () => void;\n}\n\nexport default class ConfirmedDelete extends Component<Props> {\n    state = {\n        deleteClicked: false,\n    };\n\n    handleRemove = () => {\n        this.setState({ deleteClicked: !this.state.deleteClicked });\n    };\n\n    handleYes = () => {\n        this.setState({ deleteClicked: false });\n        this.props.onDelete();\n    };\n\n    handleNo = () => {\n        this.setState({ deleteClicked: false });\n    };\n\n    render() {\n        const { deleteClicked } = this.state;\n        const { question } = this.props;\n\n        return (\n            <>\n                <i title=\"Remove\" className={`material-icons ${style.button}`} onClick={this.handleRemove}>\n                    remove_circle_outline\n                </i>{' '}\n                {deleteClicked && (\n                    <>\n                        {question}{' '}\n                        <span className={style.answer} onClick={this.handleYes}>\n                            Yes\n                        </span>{' '}\n                        /{' '}\n                        <span className={style.answer} onClick={this.handleNo}>\n                            No\n                        </span>\n                    </>\n                )}\n            </>\n        );\n    }\n}\n","import { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { CardSetsCollection, GameType, IdsArray } from '../types';\nimport {\n    Dispatch,\n    cardSetCreateRequest,\n    cardSetDeleteRequest,\n    gameRenameRequest,\n    messageDisplay,\n    gameCreatePngRequest,\n} from '../actions';\nimport { State, ACTIVITY_CREATING_PNG } from '../reducers';\nimport ConfirmedDelete from './ConfirmedDelete';\nimport EditableTitle from './EditableTitle';\nimport KawaiiMessage, { Character } from './KawaiiMessage';\nimport PDFGenerator from './PDFGenerator';\nimport style from './CardSets.module.css';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated: boolean;\n    activeGame: GameType | null;\n    allIds: IdsArray;\n    byId: CardSetsCollection;\n    isCreatingPng: boolean;\n}\n\ninterface LocalState {\n    cardSetName: string;\n    width: number;\n    height: number;\n    dpi: number;\n}\n\nexport class CardSets extends Component<Props, LocalState> {\n    state: LocalState = {\n        cardSetName: '',\n        width: 63.5,\n        height: 88.9,\n        dpi: 300,\n    };\n\n    handleGameNameChange = (newName: string) => {\n        const { dispatch, activeGame } = this.props;\n        if (activeGame !== null) {\n            dispatch(gameRenameRequest(activeGame.id, newName));\n        }\n    };\n\n    handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ cardSetName: event.target.value });\n    };\n\n    handleWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ width: parseFloat(event.target.value) });\n    };\n\n    handleHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ height: parseFloat(event.target.value) });\n    };\n\n    handleCreateCardSetClick = () => {\n        const { dispatch, activeGame } = this.props;\n\n        if (activeGame === null) {\n            return;\n        }\n\n        const cardSetName = this.state.cardSetName.trim();\n\n        if (cardSetName) {\n            dispatch(cardSetCreateRequest(cardSetName, this.state.width, this.state.height, activeGame.id));\n        } else {\n            dispatch(messageDisplay('error', 'Card Set name should be non empty.'));\n        }\n    };\n\n    handleCardSetDelete = (cardSetId: string) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetDeleteRequest(cardSetId));\n    };\n\n    handleDpiChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ dpi: parseInt(event.target.value) });\n    };\n\n    handleGenerate = () => {\n        const { dispatch, activeGame } = this.props;\n        const { dpi } = this.state;\n\n        if (activeGame !== null) {\n            dispatch(gameCreatePngRequest(dpi, 'games', activeGame.id));\n        }\n    };\n\n    render() {\n        const { isAuthenticated, activeGame, allIds, byId, isCreatingPng } = this.props;\n        const { dpi } = this.state;\n\n        let cardsets = allIds.map(cardsetId => byId[cardsetId]);\n        cardsets.sort((a, b) => (a.name < b.name ? -1 : 1));\n\n        const cardsetItems = cardsets.map(cardset => (\n            <li key={cardset.id}>\n                <Link to={`/cardset/${cardset.id}`}>{cardset.name}</Link>{' '}\n                <ConfirmedDelete\n                    question=\"Do you really want to delete this card set?\"\n                    onDelete={() => this.handleCardSetDelete(cardset.id)}\n                />\n            </li>\n        ));\n\n        return (\n            isAuthenticated &&\n            activeGame !== null && (\n                <div className={style.cardsets}>\n                    <KawaiiMessage character={Character.Ghost}>\n                        Each game is made from card sets. Card set is collection of cards that share the same properties\n                        but have different text and images.\n                    </KawaiiMessage>\n\n                    <EditableTitle title={activeGame.name} onChange={this.handleGameNameChange} />\n\n                    <ul>{cardsetItems}</ul>\n\n                    <div className=\"form\">\n                        <label htmlFor=\"cardset_name\">Card Set name:</label>\n                        <input\n                            id=\"cardset_name\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            className=\"form-control\"\n                            placeholder=\"Card Set name\"\n                        />\n                        <label htmlFor=\"card_width\">Card width:</label>\n                        <input\n                            id=\"card_width\"\n                            type=\"number\"\n                            min=\"0\"\n                            step=\"0.1\"\n                            onChange={this.handleWidthChange}\n                            className=\"form-control\"\n                            placeholder=\"Card width\"\n                            value={this.state.width}\n                        />\n                        <label htmlFor=\"card_height\">Card height:</label>\n                        <input\n                            id=\"card_height\"\n                            type=\"number\"\n                            min=\"0\"\n                            step=\"0.1\"\n                            onChange={this.handleHeightChange}\n                            className=\"form-control\"\n                            placeholder=\"Card height\"\n                            value={this.state.height}\n                        />\n                        <button onClick={this.handleCreateCardSetClick}>Create Card Set</button>\n                    </div>\n\n                    <KawaiiMessage character={Character.Ghost} mood=\"excited\">\n                        Hint: Poker card size 63.5mm x 88.9mm. Bridge card size 57.15mm x 88.9mm. But you can have cards\n                        of any size.\n                    </KawaiiMessage>\n\n                    <PDFGenerator type=\"games\" id={activeGame.id} withHelp={true} />\n\n                    <div className=\"form\">\n                        Or you can generate PNG files for all the game:\n                        <label htmlFor=\"dpi\">DPI:</label>\n                        <input\n                            id=\"dpi\"\n                            type=\"number\"\n                            min=\"1\"\n                            step=\"1\"\n                            onChange={this.handleDpiChange}\n                            className=\"form-control\"\n                            placeholder=\"DPI\"\n                            value={dpi}\n                        />\n                        <button disabled={isCreatingPng} onClick={this.handleGenerate}>\n                            Generate PNG files\n                        </button>\n                    </div>\n                </div>\n            )\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        activeGame:\n            state.games.active && state.games.byId[state.games.active] ? state.games.byId[state.games.active] : null,\n        allIds: state.cardsets.allIds,\n        byId: state.cardsets.byId,\n        isCreatingPng: (state.games.activity & ACTIVITY_CREATING_PNG) === ACTIVITY_CREATING_PNG,\n    };\n};\n\nexport default connect(mapStateToProps)(CardSets);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, gameSelectRequest } from './actions';\nimport { State } from './reducers';\nimport CardSets from './components/CardSets';\n\ninterface Props {\n    dispatch: Dispatch;\n    match: { params: { id: string } };\n    isAuthenticated: boolean;\n}\n\nexport class GamePage extends Component<Props> {\n    componentDidMount() {\n        const { dispatch, match } = this.props;\n        dispatch(gameSelectRequest(match.params.id, true));\n    }\n\n    render() {\n        return <CardSets />;\n    }\n}\n\nconst mapStateToProps = (state: State) => ({ isAuthenticated: state.auth.isAuthenticated });\n\nexport default connect(mapStateToProps)(GamePage);\n","import React, { Component } from 'react';\n\ninterface Props {\n    onLogin: (creds: { username: string; password: string }) => void;\n    onLoginFailure: (message: string) => void;\n}\n\ninterface LocalState {\n    username: string;\n    password: string;\n}\n\nexport default class Login extends Component<Props, LocalState> {\n    state = {\n        username: '',\n        password: '',\n    };\n\n    handleUsernameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ username: event.target.value });\n    };\n\n    handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ password: event.target.value });\n    };\n\n    handleSubmit = (event: React.FormEvent) => {\n        const username = this.state.username.trim();\n        const password = this.state.password.trim();\n        if (username && password) {\n            const creds = { username, password };\n            this.props.onLogin(creds);\n        } else {\n            this.props.onLoginFailure('Missing username and/or password.');\n        }\n        event.preventDefault();\n    };\n\n    render() {\n        return (\n            <div>\n                <form className=\"form\" onSubmit={this.handleSubmit}>\n                    <input\n                        type=\"text\"\n                        onChange={this.handleUsernameChange}\n                        className=\"form-control\"\n                        placeholder=\"Username\"\n                    />\n                    <input\n                        type=\"password\"\n                        onChange={this.handlePasswordChange}\n                        className=\"form-control\"\n                        placeholder=\"Password\"\n                    />\n                    <input type=\"submit\" value=\"Login\" />\n                </form>\n            </div>\n        );\n    }\n}\n","import { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, loginRequest, messageDisplay } from './actions';\nimport { State } from './reducers';\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\nimport Login from './components/Login';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated: boolean;\n}\n\nexport class LoginPage extends Component<Props> {\n    render() {\n        const { dispatch, isAuthenticated } = this.props;\n\n        return (\n            <div className=\"App\">\n                {!isAuthenticated && (\n                    <>\n                        <KawaiiMessage character={Character.Ghost}>\n                            Please enter your credentials to login. If you don't have account yet then you can create\n                            one here: <a href=\"/signup\">Sign-up</a>.\n                        </KawaiiMessage>\n\n                        <Login\n                            onLogin={creds => dispatch(loginRequest(creds))}\n                            onLoginFailure={msg => dispatch(messageDisplay('error', msg))}\n                        />\n                    </>\n                )}\n                {isAuthenticated && <Redirect to=\"/\" />}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => ({ isAuthenticated: state.auth.isAuthenticated });\n\nexport default connect(mapStateToProps)(LoginPage);\n","import { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, gameCreateRequest, gameDeleteRequest, messageDisplay } from '../actions';\nimport { GamesCollection, IdsArray } from '../types';\nimport { State } from '../reducers';\nimport ConfirmedDelete from './ConfirmedDelete';\nimport KawaiiMessage, { Character } from './KawaiiMessage';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated: boolean;\n    allIds: IdsArray;\n    byId: GamesCollection;\n}\n\ninterface LocalState {\n    gameName: string;\n}\n\nexport class Games extends Component<Props, LocalState> {\n    state: LocalState = {\n        gameName: '',\n    };\n\n    handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ gameName: event.target.value });\n    };\n\n    handleCreateGameClick = () => {\n        const { dispatch } = this.props;\n\n        const gamename = this.state.gameName.trim();\n        if (gamename) {\n            dispatch(gameCreateRequest(gamename));\n        } else {\n            dispatch(messageDisplay('error', 'Game name should be non empty.'));\n        }\n    };\n\n    handleGameDelete = (gameId: string) => {\n        const { dispatch } = this.props;\n        dispatch(gameDeleteRequest(gameId));\n    };\n\n    render() {\n        const { isAuthenticated, allIds, byId } = this.props;\n\n        const games = allIds.map(gameId => byId[gameId]);\n        games.sort((a, b) => (a.name < b.name ? -1 : 1));\n\n        const gameItems = games.map(game => (\n            <li key={game.id}>\n                <Link to={`/game/${game.id}`}>{game.name}</Link>{' '}\n                <ConfirmedDelete\n                    question=\"Do you really want to delete this game?\"\n                    onDelete={() => this.handleGameDelete(game.id)}\n                />\n            </li>\n        ));\n\n        return (\n            isAuthenticated && (\n                <div>\n                    <KawaiiMessage character={Character.Ghost}>\n                        {allIds.length === 0 && (\n                            <>Here you can create your games and see list of your games when you have some.</>\n                        )}\n                        {allIds.length > 0 && (\n                            <>Here you can see a list of your games or you can create even more games.</>\n                        )}\n                    </KawaiiMessage>\n\n                    <ul>{gameItems}</ul>\n                    <div className=\"form\">\n                        <label htmlFor=\"game_name\">Game name:</label>\n                        <input\n                            id=\"game_name\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            className=\"form-control\"\n                            placeholder=\"Game name\"\n                        />\n                        <button onClick={this.handleCreateGameClick}>Create Game</button>\n                    </div>\n                </div>\n            )\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        allIds: state.games.allIds,\n        byId: state.games.byId,\n    };\n};\n\nexport default connect(mapStateToProps)(Games);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { State } from './reducers';\nimport Games from './components/Games';\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\n\ninterface Props {\n    isAuthenticated: boolean;\n}\n\nexport class Main extends Component<Props> {\n    render() {\n        if (this.props.isAuthenticated) {\n            return <Games />;\n        } else {\n            return (\n                <KawaiiMessage character={Character.Ghost}>\n                    Hey! Here you can create your own card game but you need to <a href=\"/login\">Login</a> or{' '}\n                    <a href=\"/signup\">Sign-up</a> first.\n                </KawaiiMessage>\n            );\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n    };\n};\n\nexport default connect(mapStateToProps)(Main);\n","import { State } from './reducers';\n\nexport const getActiveGame = (state: State) => (state.games.active ? state.games.byId[state.games.active] : null);\n\nexport const getActiveCardSet = (state: State) =>\n    state.cardsets.active ? state.cardsets.byId[state.cardsets.active] : null;\n","import React from 'react';\n\ninterface Props {\n    onLogout: () => void;\n}\n\nfunction Logout(props: Props) {\n    return (\n        <button onClick={() => props.onLogout()} className=\"btn btn-primary\">\n            Logout\n        </button>\n    );\n}\n\nexport default Logout;\n","import { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { CardSetType, GameType, MessageType } from '../types';\nimport { Dispatch, logoutRequest } from '../actions';\nimport { State } from '../reducers';\nimport { getActiveCardSet, getActiveGame } from '../selectors';\nimport Loader from './Loader';\nimport Logout from './Logout';\nimport style from './Navbar.module.css';\n\ninterface OwnProps {\n    isAuthenticated: boolean;\n}\n\ninterface StateProps {\n    messages: MessageType[];\n    activeGame: GameType | null;\n    activeCardSet: CardSetType | null;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nexport class Navbar extends Component<Props> {\n    render() {\n        const { dispatch, isAuthenticated, messages, activeGame, activeCardSet } = this.props;\n\n        return (\n            <nav>\n                <div id=\"messages\" className={style.messages}>\n                    <ul>\n                        {messages.map(m => (\n                            <li key={m.id} className={m.type === 'error' ? style.error : style.info}>\n                                {m.type === 'error' && (\n                                    <>\n                                        <i className=\"material-icons\">error</i> {m.text}\n                                    </>\n                                )}\n                                {m.type === 'info' && (\n                                    <>\n                                        <i className=\"material-icons\">info</i> {m.text}\n                                    </>\n                                )}\n                                {m.type === 'progress' && (\n                                    <>\n                                        <Loader small={true} /> {m.text}\n                                    </>\n                                )}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n                <div>\n                    <h1 className={style.header}>\n                        <Link to=\"/\">CARD-A-MON</Link>\n                    </h1>\n                    <div>\n                        <ul className={style.menu}>\n                            {isAuthenticated && (\n                                <>\n                                    <li>\n                                        <Link to=\"/\">Main</Link>\n                                    </li>\n                                    {activeGame && (\n                                        <li>\n                                            <Link to={`/game/${activeGame.id}`}>Game \"{activeGame.name}\"</Link>\n                                        </li>\n                                    )}\n                                    {activeCardSet && (\n                                        <li>\n                                            <Link to={`/cardset/${activeCardSet.id}`}>\n                                                Card Set \"{activeCardSet.name}\"\n                                            </Link>\n                                        </li>\n                                    )}\n                                </>\n                            )}\n                            <li>\n                                <Link to=\"/changelog\">Changelog</Link>\n                            </li>\n                            <li>\n                                <Link to=\"/about\">About</Link>\n                            </li>\n                            {isAuthenticated && (\n                                <li>\n                                    <Logout onLogout={() => dispatch(logoutRequest())} />\n                                </li>\n                            )}\n                            {!isAuthenticated && (\n                                <>\n                                    <li>\n                                        <Link to=\"/login\">Login</Link>\n                                    </li>\n                                    <li>\n                                        <Link to=\"/signup\">Sign-up</Link>\n                                    </li>\n                                </>\n                            )}\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        messages: state.message.messages,\n        activeGame: getActiveGame(state),\n        activeCardSet: getActiveCardSet(state),\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(Navbar);\n","import React, { Component } from 'react';\n\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\n\nexport default class NotFoundPage extends Component {\n    render() {\n        return (\n            <KawaiiMessage character={Character.Browser} mood=\"sad\">\n                There is nothing here.\n            </KawaiiMessage>\n        );\n    }\n}\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Credentials } from '../types';\nimport { Dispatch, messageDisplay } from '../actions';\n\ninterface Props {\n    dispatch: Dispatch;\n    onSignUp: (cred: Credentials) => void;\n}\n\nexport class SignUp extends Component<Props> {\n    state = {\n        username: '',\n        password: '',\n        passwordRepeat: '',\n    };\n\n    handleSubmit(event: React.FormEvent) {\n        const { dispatch, onSignUp } = this.props;\n\n        if (this.state.password !== this.state.passwordRepeat) {\n            dispatch(messageDisplay('error', 'Passwords do not match.'));\n        } else {\n            const creds = {\n                username: this.state.username.trim(),\n                password: this.state.password.trim(),\n            };\n            onSignUp(creds);\n        }\n\n        event.preventDefault();\n    }\n\n    handleUsernameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ username: event.target.value });\n    };\n\n    handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ password: event.target.value });\n    };\n\n    handlePasswordRepeatChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ passwordRepeat: event.target.value });\n    };\n\n    render() {\n        return (\n            <div>\n                <form className=\"form\" onSubmit={event => this.handleSubmit(event)}>\n                    <input\n                        type=\"text\"\n                        onChange={this.handleUsernameChange}\n                        className=\"form-control\"\n                        placeholder=\"Username\"\n                    />\n                    <input\n                        type=\"password\"\n                        onChange={this.handlePasswordChange}\n                        className=\"form-control\"\n                        placeholder=\"Password\"\n                    />\n                    <input\n                        type=\"password\"\n                        onChange={this.handlePasswordRepeatChange}\n                        className=\"form-control\"\n                        placeholder=\"Repeat password here\"\n                    />\n                    <input type=\"submit\" value=\"Sign Up\" />\n                </form>\n            </div>\n        );\n    }\n}\nexport default connect()(SignUp);\n","import { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, signupRequest } from './actions';\nimport { State } from './reducers';\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\nimport SignUp from './components/SignUp';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated: boolean;\n}\n\nexport class SignUpPage extends Component<Props> {\n    render() {\n        const { dispatch, isAuthenticated } = this.props;\n\n        return (\n            <div className=\"App\">\n                {!isAuthenticated && (\n                    <>\n                        <KawaiiMessage character={Character.Ghost}>\n                            Create your user here. Instead of user name you can use your e-mail. If you forget your\n                            password then you can send me e-mail (I will not send you any e-mails without your consent).\n                            If you use regular user name and forget your password then you will not be able to access\n                            your account.\n                        </KawaiiMessage>\n\n                        <SignUp onSignUp={creds => dispatch(signupRequest(creds))} />\n                    </>\n                )}\n                {isAuthenticated && <Redirect to=\"/\" />}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => ({ isAuthenticated: state.auth.isAuthenticated });\n\nexport default connect(mapStateToProps)(SignUpPage);\n","import './App.css';\n\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport { isIE } from 'react-device-detect';\n\nimport { Dispatch, initRequest } from './actions';\nimport { State } from './reducers';\nimport AboutPage from './AboutPage';\nimport CardSetPage from './CardSetPage';\nimport ChangelogPage from './ChangelogPage';\nimport ErrorBoundry from './ErrorBoundry';\nimport GamePage from './GamePage';\nimport LoginPage from './LoginPage';\nimport Main from './Main';\nimport Navbar from './components/Navbar';\nimport NotFoundPage from './NotFoundPage';\nimport SignUpPage from './SignUpPage';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated: boolean;\n}\n\nexport class App extends Component<Props> {\n    componentDidMount() {\n        this.props.dispatch(initRequest());\n    }\n\n    render() {\n        if (isIE) return <div> IE is not supported. Download Chrome/Opera/Firefox </div>;\n        const { isAuthenticated } = this.props;\n        return (\n            <Router>\n                <div className=\"App\">\n                    <ErrorBoundry>\n                        <Navbar isAuthenticated={isAuthenticated} />\n                        <Switch>\n                            <Route exact path=\"/\" component={Main} />\n                            <Route exact path=\"/login\" component={LoginPage} />\n                            <Route exact path=\"/signup\" component={SignUpPage} />\n                            <Route exact path=\"/game/:id\" component={GamePage} />\n                            <Route exact path=\"/cardset/:id\" component={CardSetPage} />\n                            <Route exact path=\"/changelog\" component={ChangelogPage} />\n                            <Route exact path=\"/about\" component={AboutPage} />\n                            <Route component={NotFoundPage} />\n                        </Switch>\n                        <div className=\"App-footer\">Dalius Dobravolskas &copy; {new Date().getFullYear()}</div>\n                    </ErrorBoundry>\n                </div>\n            </Router>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    const { auth } = state;\n    const { isAuthenticated } = auth;\n\n    return {\n        isAuthenticated,\n    };\n};\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ninterface Config {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import './index.css';\n\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { createAppStore } from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createAppStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { rootSaga } from './sagas';\nimport reducers from './reducers';\n\nexport function createAppStore() {\n    const sagaMiddleware = createSagaMiddleware();\n    const store = createStore(\n        reducers,\n        // @ts-ignore: __REDUX_DEVTOOLS_EXTENSION__ does not exists on window\n        window.__REDUX_DEVTOOLS_EXTENSION__\n            ? compose(\n                  applyMiddleware(sagaMiddleware),\n                  // @ts-ignore: __REDUX_DEVTOOLS_EXTENSION__ does not exists on window\n                  window.__REDUX_DEVTOOLS_EXTENSION__(),\n              )\n            : applyMiddleware(sagaMiddleware),\n    );\n    sagaMiddleware.run(rootSaga);\n    return store;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__3_Dnv\",\"controls\":\"Sidebar_controls__3l8zj\",\"active\":\"Sidebar_active__NJglu\",\"view\":\"Sidebar_view__1vJBF\",\"hidden\":\"Sidebar_hidden__2SYOP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Navbar_header__2vmU8\",\"menu\":\"Navbar_menu__1kq5m\",\"messages\":\"Navbar_messages__1Jgez\",\"error\":\"Navbar_error__2SOKH\",\"info\":\"Navbar_info__h509L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fixed\":\"Loader_fixed__n07V6\",\"relative\":\"Loader_relative__IYoPK\",\"loader\":\"Loader_loader__v9ad5\",\"small\":\"Loader_small__29QEB\",\"loader-small\":\"Loader_loader-small__28X7J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarDetails_view__3zZ-d\",\"disabled\":\"SidebarDetails_disabled__1bMLW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardset\":\"CardSet_cardset__3ERPi\",\"cardsetview\":\"CardSet_cardsetview__2iXXK\",\"sidebar\":\"CardSet_sidebar__10qQG\",\"createCard\":\"CardSet_createCard__2aDvt\"};","module.exports = __webpack_public_path__ + \"static/media/pan.ff303319.svg\";","module.exports = __webpack_public_path__ + \"static/media/zoom.2d0b374b.svg\";","module.exports = __webpack_public_path__ + \"static/media/resize.c1fb8dc3.svg\";","module.exports = __webpack_public_path__ + \"static/media/rotate.4a37bc7b.svg\";"],"sourceRoot":""}