{"version":3,"sources":["components/ConfirmedDelete.module.css","components/EditableTitle.module.css","components/FontSelector.module.css","components/SidebarText.module.css","components/image.svg","components/ContentEditable.module.css","components/text.svg","components/SidebarGeneratePng.module.css","components/SidebarGeneratePdf.module.css","components/SidebarMeasurements.module.css","components/SidebarSettings.module.css","components/SidebarUpload.module.css","components/CardSets.module.css","actions.ts","constants.ts","requests.ts","utils.ts","workerController.ts","storage.ts","fontLoader.tsx","sagas.ts","reducers.ts","components/KawaiiMessage.tsx","AboutPage.tsx","components/FieldController.tsx","components/ImageField.tsx","components/ContentEditable.tsx","components/TextField.tsx","components/Card.tsx","components/EditableTitle.tsx","components/Loader.tsx","components/SidebarDetails.tsx","components/SidebarGeneratePng.tsx","components/PDFGenerator.tsx","components/SidebarGeneratePdf.tsx","components/ColorButton.tsx","components/SidebarImage.tsx","components/SidebarImportExport.tsx","components/SidebarMeasurements.tsx","components/SidebarSettings.tsx","components/FontSelector.tsx","components/SidebarText.tsx","components/SidebarUpload.tsx","components/Sidebar.tsx","components/CardSet.tsx","CardSetPage.tsx","ChangelogPage.tsx","ErrorBoundry.tsx","components/ConfirmedDelete.tsx","components/CardSets.tsx","GamePage.tsx","components/Login.tsx","LoginPage.tsx","components/Games.tsx","Main.tsx","selectors.ts","components/Logout.tsx","components/Navbar.tsx","NotFoundPage.tsx","components/SignUp.tsx","SignUpPage.tsx","App.tsx","serviceWorker.ts","index.tsx","store.ts","components/FieldController.module.css","components/Sidebar.module.css","components/Navbar.module.css","components/Loader.module.css","components/SidebarDetails.module.css","components/CardSet.module.css","components/resize.svg","components/rotate.svg","components/ImageField.module.css","components/Card.module.css","components/SidebarImage.module.css"],"names":["module","exports","button","answer","input","fontFamily","fontVariant","view","disabled","__webpack_require__","p","content","cardsets","SidebarState","DEFAULT_FONT_SIZE","DEFAULT_LINE_HEIGHT","BLEED_WIDTH","INIT_REQUEST","MESSAGE_DISPLAY","MESSAGE_HIDE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_REQUEST","LOGOUT_FAILURE","LOGOUT_SUCCESS","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_FAILURE","GAME_CREATE_REQUEST","GAME_CREATE_SUCCESS","GAME_CREATE_FAILURE","GAME_DELETE_REQUEST","GAME_RENAME_REQUEST","GAME_LIST_SUCCESS","GAME_LIST_REQUEST","GAME_LIST_FAILURE","GAME_LIST_RESET","GAME_SELECT_REQUEST","GAME_SELECT_SUCCESS","GAME_SELECT_FAILURE","GAME_CREATE_PDF_REQUEST","GAME_CREATE_PDF_SUCCESS","GAME_CREATE_PDF_FAILURE","GAME_CREATE_PNG_REQUEST","GAME_CREATE_PNG_SUCCESS","GAME_CREATE_PNG_FAILURE","CARDSET_CREATE_REQUEST","CARDSET_CREATE_SUCCESS","CARDSET_CREATE_FAILURE","CARDSET_DELETE_REQUEST","CARDSET_RENAME_REQUEST","CARDSET_IMPORT_DATA","CARDSET_LIST_SUCCESS","CARDSET_LIST_REQUEST","CARDSET_LIST_FAILURE","CARDSET_LIST_RESET","CARDSET_SELECT_REQUEST","CARDSET_SELECT_SUCCESS","CARDSET_CREATE_CARD","CARDSET_CLONE_CARD","CARDSET_REMOVE_CARD","CARDSET_UPDATE_CARD_COUNT","CARDSET_ADD_TEXT_PLACEHOLDER","CARDSET_ADD_IMAGE_PLACEHOLDER","CARDSET_CHANGE_ACTIVE_PLACEHOLDER_NAME","CARDSET_REMOVE_ACTIVE_PLACEHOLDER","CARDSET_RAISE_ACTIVE_PLACEHOLDER_TO_TOP","CARDSET_LOWER_ACTIVE_PLACEHOLDER_TO_BOTTOM","CARDSET_LOCK_ACTIVE_PLACEHOLDER","CARDSET_UNLOCK_ACTIVE_PLACEHOLDER","CARDSET_CHANGE_FIT_FOR_ACTIVE_PLACEHOLDER","CARDSET_CHANGE_WIDTH","CARDSET_CHANGE_HEIGHT","CARDSET_CHANGE_IS_TWO_SIDED","CARDSET_CHANGE_SNAPPING_DISTANCE","CARDSET_CHANGE_PLACEHOLDER_POSITION","CARDSET_CHANGE_PLACEHOLDER_SIZE","CARDSET_CHANGE_PLACEHOLDER_ANGLE","CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_ALIGN","CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_COLOR","CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY","CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_VARIANT","CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY_AND_VARIANT","CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_SIZE","CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_LINE_HEIGHT","CARDSET_CHANGE_TEXT","CARDSET_CHANGE_IMAGE","CARDSET_CHANGE_IMAGE_BASE64","CARDSET_SET_ACTIVE_CARD_AND_PLACEHOLDER","CARDSET_UPDATE_DATA_REQUEST","CARDSET_UPDATE_DATA_SUCCESS","CARDSET_UPDATE_DATA_FAILURE","CARDSET_SELECT_FAILURE","CARDSET_SET_SIDEBAR_STATE","CARDSET_SET_ZOOM","CARDSET_UPLOAD_IMAGE","CARDSET_UPLOAD_IMAGE_SUCCESS","CARDSET_UPLOAD_IMAGE_FAILURE","CARDSET_DELETE_IMAGE","IMAGE_LIST_REQUEST","IMAGE_LIST_SUCCESS","IMAGE_LIST_FAILURE","messageDisplay","type","text","id","message","shortid","generate","gameCreateRequest","gamename","gameDeleteRequest","gameId","gameRenameRequest","newName","gameSelectRequest","updateCardSets","gameCreatePdfRequest","collectionType","collectionId","pageWidth","pageHeight","topBottomMargin","leftRightMargin","verticalSpace","horizontalSpace","includeBleedingArea","cutMarksForScissors","cutMarksForGuillotine","cutMarksInMarginArea","cutMarksOnFrontSideOnly","gameCreatePngRequest","dpi","cardSetCreateRequest","cardsetname","width","height","cardSetDeleteRequest","cardSetId","cardSetRenameRequest","cardSetImportData","data","cardSetCreateCard","card","cardSetCloneCard","cardSetRemoveCard","cardSetUpdateCardCount","count","cardSetAddTextPlaceholder","cardSetAddImagePlaceholder","cardSetChangeActivePlaceholderName","name","cardSetRemoveActivePlaceholder","cardSetRaiseActivePlaceholderToTop","cardSetLowerActivePlaceholderToBottom","cardSetLockActivePlaceholder","cardSetUnlockActivePlaceholder","cardSetChangeFitForActivePlaceholder","fit","cardSetChangeWidth","cardSetChangeHeight","cardSetChangeIsTwoSided","isTwoSided","cardSetChangeSnappingDistance","snappingDistance","cardSetChangePlaceholderPosition","placeholder","x","y","cardSetChangePlaceholderSize","cardSetChangePlaceholderAngle","angle","cardSetChangeActiveTextPlaceholderAlign","align","cardSetChangeActiveTextPlaceholderColor","color","cardSetChangeActiveTextPlaceholderFontVariant","cardSetChangeActiveTextPlaceholderFontFamilyAndVariant","cardSetChangeActiveTextPlaceholderFontSize","fontSize","cardSetChangeActiveTextPlaceholderLineHeight","lineHeight","cardSetChangeText","cardId","placeholderId","textInfo","cardSetChangeImage","imageInfo","cardSetChangeImageBase64","base64","cardSetActiveCardAndPlaceholder","isBackActive","cardSetSetSidebarState","sidebarState","cardSetSetZoom","zoom","cardSetUploadImage","file","load","error","progress","abort","cancelToken","cardSetDeleteImage","imageId","imageListRequest","filter","location","handleAxiosError","response","Error","request","console","log","getTokens","creds","axios","post","then","resp","catch","refreshToken","refreshTokenValue","config","headers","Authorization","concat","accessToken","deleteAccessToken","token","delete","status","deleteRefreshToken","registerUser","getRequest","url","get","postRequest","postRequestFormDataCancelable","progressCallback","cancelCallback","Content-Type","onUploadProgress","isCancel","putRequest","put","deleteRequest","downloadBlob","blobURL","filename","resolve","tempLink","document","createElement","style","display","href","setAttribute","download","body","appendChild","click","removeChild","setTimeout","window","URL","revokeObjectURL","ImageType","generatePdfUsingWorker","Worker","Promise","reject","worker","addEventListener","event","postMessage","e","loadImage","img","Image","onload","onerror","src","prepareImageToDrawSpace","context","imageToDraw","ptpmm","save","translate","rotate","ax","ay","fixWidthAndHeightInSvg","doc","XmlDocument","attr","viewBox","split","btoa","toString","compressed","PNGGenerator","_this","this","Object","classCallCheck","tasksQueue","push","cardSetData","cardIdx","isBack","cardsetFolder","offscreenCanvas","calculatedWidth","Math","round","calculatedHeight","getContext","fillStyle","fillRect","stopped","length","task","shift","SVG_PATH","scale","Path2D","fill","restore","IMAGE","SVG","image","svgData","atob","scaledWidth","scaledHeight","drawImage","BLOCK_START","BLOCK_END","subType","delay","dataUrl","toDataURL","slice","padStart","zip","cardsetsList","cardsetInfo","generateCardset","cardsetId","JSON","parse","folder","cardsAllIds","entries","generateCard","generatePngUsingWorker","_ref4","asyncToGenerator","regenerator_default","a","mark","_callee4","pngGenerator","blob","wrap","_context4","prev","next","JSZip","generateGame","generateAsync","sent","createObjectURL","stop","_x15","_x16","_x17","_x18","apply","arguments","saveTokens","localStorage","setItem","saveAccessToken","cleanTokens","removeItem","getTokenFromStorage","getItem","getRefreshTokenFromStorage","loadFontsUsedInPlaceholders","fontsToLoad","Set","plId","add","placeholders","pl","fontToLoad","WebFont","objectSpread","active","inactive","webFontsLoadPromise","google","families","toConsumableArray","Array","from","putError","putInfo","putProgress","hideProgress","handleMessageDisplay","getToken","handleLoginRequest","handleLoginSuccess","logoutToken","logoutRefreshToken","handleLogoutRequest","handleSignupRequest","handleInitRequest","authorizedGetRequest","authorizedPostRequest","authorizedDeleteRequest","authorizedPostFormDataRequest","authorizedPutRequest","handleGameCreateRequest","handleGameDeleteRequest","handleGameRenameRequest","handleGameListRequest","handleGameSelectRequest","handleGameCreatePdfRequest","handleGameCreatePngRequest","handleCardSetCreateRequest","handleCardSetDeleteRequest","handleCardSetRenameRequest","handleCardSetSelectRequest","handleCardSetUploadImage","handleCardSetDeleteImage","handleCardSetFitChange","handleCardSetChangeImage","handleCardSetChange","handleImageListRequest","rootSaga","_context","_marked","_context2","_marked2","_context3","abrupt","_marked3","messageId","_marked4","action","_context5","call","_marked5","validateToken","jwtDecode","exp","Date","getTime","withErrorIfMissing","getFreshToken","newToken","_args6","_context6","undefined","_marked6","_context7","t0","_marked7","_context8","_marked8","_context9","_marked9","_context10","_marked10","_context11","_marked11","_context12","_marked12","_context13","_marked13","_context14","_marked14","_context15","_marked15","_context16","_marked16","_context17","_marked17","_context18","_marked18","_context19","_marked19","_context20","_marked20","_context21","_marked21","allIds","byId","_context22","games","map","g","reduce","obj","_marked22","_context23","_marked23","progressId","_context24","_marked24","_context25","_marked25","_context26","stringify","_marked26","state","_context27","select","_marked27","_context28","_marked28","parsedData","_context29","placeholdersAllIds","keys","version","_marked29","formData","_context30","FormData","set","append","lengthComputable","loaded","total","_marked30","_context31","_marked31","adjustSvg","preserveAspectRatio","walkChildren","node","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","children","Symbol","iterator","done","child","value","err","return","imageResp","svg","_svg","_context32","activePlaceholder","cardsById","t1","images","t2","_marked32","_svg2","_context33","_marked33","closeHandler","preventDefault","returnValue","allowWindowClose","removeEventListener","_context34","texts","_marked34","game","_context35","encodeURIComponent","_marked35","_context36","all","takeEvery","takeLatest","_marked36","ACTIVITY_CREATING","ACTIVITY_LISTING","ACTIVITY_SELECTING","ACTIVITY_CREATING_PDF","ACTIVITY_UPDATING","ACTIVITY_CREATING_PNG","DefaultMessageState","messages","DefaultAuthState","isAuthenticated","user","DefaultSignUpState","signingup","DefaultGameState","activity","DefaultCardSetState","activeCard","textSettings","activeSidebar","DefaultImageState","reducers","combineReducers","find","m","assign","auth","username","signup","defineProperty","cardset","newCard","index","indexOf","textPlaceholder","isOnBack","imagePlaceholder","locked","placeholderIndex","splice","placeholderTexts","placeholderImages","unshift","placeholdersByCard","Measurements","Details","Text","Character","AboutPage","react_default","Component","FieldController","props","possibleConstructorReturn","getPrototypeOf","moving","cDiv","resizeDiv","rotateDiv","relX","relY","startX","startY","originalW","originalH","rotatedPointX","rotatedPointY","centerX","centerY","originalAngle","currentAngle","activatedUsingTouch","originalBodyCursor","rotateVec","sinA","sin","cosA","cos","rx","ry","handleBrowserDragStart","stopPropagation","handleMouseDown","handleDragStart","handleMouseMove","handleMouseUp","handleTouchStart","changedTouches","handleTouchMove","passive","handleTouchEnd","co","current","cursor","clientX","offsetLeft","clientY","offsetTop","handleComplete","isTouchEvent","isLocked","onDrag","handleDragMove","ctrlKey","disableSnapping","_this$props","ppmm","left","top","handleResizeMouseDown","handleResizeStart","handleResizeMouseMove","handleResizeMouseUp","handleResizeTouchStart","handleResizeTouchMove","handleResizeTouchEnd","resize","clientWidth","clientHeight","dx","dy","_this$rotateVec","handleResizeComplete","_this$cDiv$current","onResize","handleResizeMove","_this$props2","vx","vy","_this$rotateVec2","w","h","rotatedV","nx","ny","handleRotateMouseDown","handleRotateStart","handleRotateMouseMove","handleRotateMouseUp","handleRotateTouchStart","handleRotateTouchMove","handleRotateTouchEnd","rect","getBoundingClientRect","atan2","handleRotateComplete","onRotate","handleRotateMove","PI","transform","React","createRef","_this$props3","isActive","isActivePlaceholder","ref","className","fieldcontroller","fieldcontrolleractiveplaceholder","fieldcontrolleractive","touchactivated","position","alt","controller","right","bottom","connect","ImageField","imageDiv","wasMoved","handleDrag","dispatch","handleResize","handleRotate","_this$props4","handleDragOver","classList","over","handleDragLeave","remove","handleDrop","dataTransfer","getData","imagefilesPos","_this$props5","ii","substr","_this$props6","imageUrl","cardWidth","cardHeight","components_FieldController","onDragOver","onDragLeave","onDrop","opacity","emptyImageImage","PureComponent","ContentEditable","editDiv","currentText","currentAlign","currentColor","currentFontFamily","currentFontVariant","currentFontSize","currentLineHeight","timeout","handleStart","handleMove","focus","onFocus","textValue","range","createRange","selectNodeContents","collapse","selection","getSelection","removeAllRanges","addRange","updateContent","timeoutInMiliseconds","innerHTML","imgUrlIdx","clearTimeout","handleBlur","handleInput","nextProps","isItalic","fontWeight","parseInt","contentEditable","onBlur","onInput","textAlign","DEFAULT_FONT","fontStyle","outline","overflowWrap","dangerouslySetInnerHTML","__html","TextField","zIndex","emptyTextImage","components_ContentEditable","Card","dimensions","handleFieldDeselect","target","getAttribute","_this2","placeholdersIds","isActiveCard","widthWithBleeds","heightWithBleeds","index_esm","client","contentRect","setState","_ref","measureRef","overflow","onMouseDown","onTouchStart","components_ImageField","key","components_TextField","border","borderRadius","pointerEvents","title","EditableTitle","titleIsEdited","handleClick","handleChange","onChange","Fragment","onClick","autoFocus","KawaiiMessage","character","mood","marginTop","marginBottom","padding","backgroundColor","grid","Ghost","size","Browser","marginLeft","Loader","fixed","small","loader","relative","SidebarDetails","_Component","_getPrototypeOf2","_len","args","_key","handleCloneCardClick","handleRemoveCardClick","handleCountChange","inherits","createClass","visible","SidebarGeneratePng","handleDpiChange","handleGenerate","activeCardset","isCreatingPng","htmlFor","min","step","PDFGenerator","handleGeneratePdfClick","_this$state","handlePageWidthChange","parseFloat","handlePageHeightChange","handleTopBottomMarginChange","handleLeftRightMarginChange","handleVerticalSpaceChange","handleHorizontalSpaceChange","handleIncludeBleedingAreaChange","checked","handleCutMarksForScissors","handleCutMarksForGuillotine","handleCutMarksInMarginArea","handleCutMarksOnFrontSideOnly","isCreatingPdf","withHelp","KawaiiMessage_KawaiiMessage","SidebarGeneratePdf","activeCardSetId","components_PDFGenerator","ColorButton","displayColorPicker","handleClose","react_color_lib","disableAlpha","SidebarImage","applyToAllCards","handleAddImageClick","changeImage","handleRemoveImageFromFieldClick","handleRemoveClick","handleNameChange","trim","handleFilterChange","handleImageSelect","imageName","handleRaiseToTop","handleLowerToBottom","handleLockField","_this$props7","handleUnlockField","_this$props8","handleFitOptionChange","handleOptionChange","_this$props9","handleColorChange","hex","handleRemoveColorClick","handleApplyToAllCardChange","_this$props10","ColorButton_ColorButton","im","data-width","data-height","registerPlugin","FilePondPluginFileValidateType","SidebarImportExport","prepareImagePaths","activeGame","ending","md5","preparedImages","imagesByCard","endsWith","replace","global","handleExportJson","json","Blob","handleExportCsv","csvData","header","usedNames","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","dataRow","written","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","csv","Papa","unparse","handleProcess","fieldName","metadata","reader","FileReader","readAsText","result","loadedPlaceholders","isGlobal","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","row","handleRevert","uniqueFileId","react_filepond","server","process","revert","acceptedFileTypes","SidebarMeasurements","handlePrevPlaceholder","prevPlaceholder","idx","handleNextPlaceholder","nextPlaceholder","handleWidthChange","handleHeightChange","handleXChange","handleYChange","_this$props11","handleAngleChange","_this$props12","_this$props13","handleIsTwoSidedChange","handleZoom","handleSnappingDistance","options","webfonts","sort","fi","label","FontSelector","getFontStringForLoad","family","variant","stringForLoad","selectedOption","activeFontVariant","wf","handleFontVariantChange","activeFont","handleFontSizeChange","handleLineHeightChange","selectedFontFamily","f","fontVariantOptions","fv","selectedFontVariant","activeFontSize","react_select_esm","activeLineHeight","SidebarText","handleAddTextClick","handleSetTextAlignLeft","getRangeAt","rangeCount","collapsed","execCommand","handleSetTextAlignCenter","handleSetTextAlignRight","handleSetTextBold","handleSetTextItalic","components_FontSelector","FilePondPluginFileValidateSize","SidebarUpload","source","CancelToken","cancel","allowMultiple","allowFileSizeValidation","maxFileSize","SIDEBARS","Settings","icon","component","SidebarSettings","Upload","ImportExport","Png","Pdf","Sidebar","handleSidebar","sidebar","controls","sb","hidden","CardSet","handleCreateCardClick","handleClickOutsideOfCard","handleCardSetNameChange","activeCardSet","EditableTitle_EditableTitle","cardsetview","components_Sidebar","Loader_Loader","gridTemplateColumns","components_Card","createCard","CardSetPage","match","params","components_CardSet","ChangelogPage","ErrorBoundary","hasError","ConfirmedDelete","deleteClicked","handleRemove","handleYes","onDelete","handleNo","question","CardSets","cardSetName","handleGameNameChange","handleCreateCardSetClick","handleCardSetDelete","b","cardsetItems","Link","to","ConfirmedDelete_ConfirmedDelete","GamePage","components_CardSets","Login","password","handleUsernameChange","handlePasswordChange","handleSubmit","onLogin","onLoginFailure","onSubmit","LoginPage","Login_Login","loginRequest","msg","Redirect","Games","gameName","handleCreateGameClick","handleGameDelete","gameItems","Main","components_Games","getActiveGame","getActiveCardSet","Logout","onLogout","Navbar","info","menu","components_Logout","NotFoundPage","SignUp","passwordRepeat","handlePasswordRepeatChange","onSignUp","SignUpPage","components_SignUp","signupRequest","App","BrowserRouter","ErrorBoundry_ErrorBoundary","components_Navbar","Switch","Route","exact","path","getFullYear","Boolean","hostname","store","sagaMiddleware","createSagaMiddleware","createStore","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","run","createAppStore","ReactDOM","render","es","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister","loader-small"],"mappings":"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","file":"static/js/main.1e1d7c04.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ConfirmedDelete_button__1o8h4\",\"answer\":\"ConfirmedDelete_answer__1OsVc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"EditableTitle_input__2Y_6m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fontFamily\":\"FontSelector_fontFamily__zlBcJ\",\"fontVariant\":\"FontSelector_fontVariant__2pA4n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarText_view__3s9r0\",\"disabled\":\"SidebarText_disabled__3efIG\"};","module.exports = __webpack_public_path__ + \"static/media/image.60f0926c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ContentEditable_content__1p7up\"};","module.exports = __webpack_public_path__ + \"static/media/text.f7f9443c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarGeneratePng_view__1_3fy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarGeneratePdf_view__10OR4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarMeasurements_view__3BCmn\",\"disabled\":\"SidebarMeasurements_disabled__2Rrd2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarSettings_view__DwnQN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarUpload_view__k69sP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardsets\":\"CardSets_cardsets__mQSav\"};","import { CancelToken } from 'axios';\nimport { Dispatch as ReduxDispatch } from 'redux';\nimport shortid from 'shortid';\n\nimport {\n    CardSetsCollection,\n    CardType,\n    CardsCollection,\n    Credentials,\n    GamesCollection,\n    IdsArray,\n    ImageArray,\n    ImageInfo,\n    MessageType,\n    PlaceholderType,\n    PlaceholdersCollection,\n    PlaceholdersImageInfoByCardCollection,\n    PlaceholdersTextInfoByCardCollection,\n    TextInfo,\n} from './types';\n\nexport const INIT_REQUEST = 'INIT_REQUEST';\nexport const MESSAGE_DISPLAY = 'MESSAGE_DISPLAY';\nexport const MESSAGE_HIDE = 'MESSAGE_HIDE';\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\nexport const LOGOUT_FAILURE = 'LOGOUT_FAILURE';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const SIGNUP_REQUEST = 'SIGNUP_REQUEST';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAILURE = 'SIGNUP_FAILURE';\nexport const GAME_CREATE_REQUEST = 'GAME_CREATE_REQUEST';\nexport const GAME_CREATE_SUCCESS = 'GAME_CREATE_SUCCESS';\nexport const GAME_CREATE_FAILURE = 'GAME_CREATE_FAILURE';\nexport const GAME_DELETE_REQUEST = 'GAME_DELETE_REQUEST';\nexport const GAME_RENAME_REQUEST = 'GAME_RENAME_REQUEST';\nexport const GAME_LIST_SUCCESS = 'GAME_LIST_SUCCESS';\nexport const GAME_LIST_REQUEST = 'GAME_LIST_REQUEST';\nexport const GAME_LIST_FAILURE = 'GAME_LIST_FAILURE';\nexport const GAME_LIST_RESET = 'GAME_LIST_RESET';\nexport const GAME_SELECT_REQUEST = 'GAME_SELECT_REQUEST';\nexport const GAME_SELECT_SUCCESS = 'GAME_SELECT_SUCCESS';\nexport const GAME_SELECT_FAILURE = 'GAME_SELECT_FAILURE';\nexport const GAME_CREATE_PDF_REQUEST = 'GAME_CREATE_PDF_REQUEST';\nexport const GAME_CREATE_PDF_SUCCESS = 'GAME_CREATE_PDF_SUCCESS';\nexport const GAME_CREATE_PDF_FAILURE = 'GAME_CREATE_PDF_FAILURE';\nexport const GAME_CREATE_PNG_REQUEST = 'GAME_CREATE_PNG_REQUEST';\nexport const GAME_CREATE_PNG_SUCCESS = 'GAME_CREATE_PNG_SUCCESS';\nexport const GAME_CREATE_PNG_FAILURE = 'GAME_CREATE_PNG_FAILURE';\nexport const CARDSET_CREATE_REQUEST = 'CARDSET_CREATE_REQUEST';\nexport const CARDSET_CREATE_SUCCESS = 'CARDSET_CREATE_SUCCESS';\nexport const CARDSET_CREATE_FAILURE = 'CARDSET_CREATE_FAILURE';\nexport const CARDSET_DELETE_REQUEST = 'CARDSET_DELETE_REQUEST';\nexport const CARDSET_RENAME_REQUEST = 'CARDSET_RENAME_REQUEST';\nexport const CARDSET_IMPORT_DATA = 'CARDSET_IMPORT_DATA';\nexport const CARDSET_LIST_SUCCESS = 'CARDSET_LIST_SUCCESS';\nexport const CARDSET_LIST_REQUEST = 'CARDSET_LIST_REQUEST';\nexport const CARDSET_LIST_FAILURE = 'CARDSET_LIST_FAILURE';\nexport const CARDSET_LIST_RESET = 'CARDSET_LIST_RESET';\nexport const CARDSET_SELECT_REQUEST = 'CARDSET_SELECT_REQUEST';\nexport const CARDSET_SELECT_SUCCESS = 'CARDSET_SELECT_SUCCESS';\nexport const CARDSET_CREATE_CARD = 'CARDSET_CREATE_CARD';\nexport const CARDSET_CLONE_CARD = 'CARDSET_CLONE_CARD';\nexport const CARDSET_REMOVE_CARD = 'CARDSET_REMOVE_CARD';\nexport const CARDSET_UPDATE_CARD_COUNT = 'CARDSET_UPDATE_CARD_COUNT';\nexport const CARDSET_ADD_TEXT_PLACEHOLDER = 'CARDSET_ADD_TEXT_PLACEHOLDER';\nexport const CARDSET_ADD_IMAGE_PLACEHOLDER = 'CARDSET_ADD_IMAGE_PLACEHOLDER';\nexport const CARDSET_CHANGE_ACTIVE_PLACEHOLDER_NAME = 'CARDSET_CHANGE_ACTIVE_PLACEHOLDER_NAME';\nexport const CARDSET_REMOVE_ACTIVE_PLACEHOLDER = 'CARDSET_REMOVE_ACTIVE_PLACEHOLDER';\nexport const CARDSET_RAISE_ACTIVE_PLACEHOLDER_TO_TOP = 'CARDSET_RAISE_ACTIVE_PLACEHOLDER_TO_TOP';\nexport const CARDSET_LOWER_ACTIVE_PLACEHOLDER_TO_BOTTOM = 'CARDSET_LOWER_ACTIVE_PLACEHOLDER_TO_BOTTOM';\nexport const CARDSET_LOCK_ACTIVE_PLACEHOLDER = 'CARDSET_LOCK_ACTIVE_PLACEHOLDER';\nexport const CARDSET_UNLOCK_ACTIVE_PLACEHOLDER = 'CARDSET_UNLOCK_ACTIVE_PLACEHOLDER';\nexport const CARDSET_CHANGE_FIT_FOR_ACTIVE_PLACEHOLDER = 'CARDSET_CHANGE_FIT_FOR_ACTIVE_PLACEHOLDER';\nexport const CARDSET_CHANGE_WIDTH = 'CARDSET_CHANGE_WIDTH';\nexport const CARDSET_CHANGE_HEIGHT = 'CARDSET_CHANGE_HEIGHT';\nexport const CARDSET_CHANGE_IS_TWO_SIDED = 'CARDSET_CHANGE_IS_TWO_SIDED';\nexport const CARDSET_CHANGE_SNAPPING_DISTANCE = 'CARDSET_CHANGE_SNAPPING_DISTANCE';\nexport const CARDSET_CHANGE_PLACEHOLDER_POSITION = 'CARDSET_CHANGE_PLACEHOLDER_POSITION';\nexport const CARDSET_CHANGE_PLACEHOLDER_SIZE = 'CARDSET_CHANGE_PLACEHOLDER_SIZE';\nexport const CARDSET_CHANGE_PLACEHOLDER_ANGLE = 'CARDSET_CHANGE_PLACEHOLDER_ANGLE';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_ALIGN = 'CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_ALIGN';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_COLOR = 'CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_COLOR';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY = 'CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_VARIANT =\n    'CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_VARIANT';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY_AND_VARIANT =\n    'CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY_AND_VARIANT';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_SIZE = 'CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_SIZE';\nexport const CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_LINE_HEIGHT = 'CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_LINE_HEIGHT';\nexport const CARDSET_CHANGE_TEXT = 'CARDSET_CHANGE_TEXT';\nexport const CARDSET_CHANGE_IMAGE = 'CARDSET_CHANGE_IMAGE';\nexport const CARDSET_CHANGE_IMAGE_BASE64 = 'CARDSET_CHANGE_IMAGE_BASE64';\nexport const CARDSET_SET_ACTIVE_CARD_AND_PLACEHOLDER = 'CARDSET_SET_ACTIVE_CARD_AND_PLACEHOLDER';\nexport const CARDSET_UPDATE_DATA_REQUEST = 'CARDSET_UPDATE_DATA_REQUEST';\nexport const CARDSET_UPDATE_DATA_SUCCESS = 'CARDSET_UPDATE_DATA_SUCCESS';\nexport const CARDSET_UPDATE_DATA_FAILURE = 'CARDSET_UPDATE_DATA_FAILURE';\nexport const CARDSET_SELECT_FAILURE = 'CARDSET_SELECT_FAILURE';\nexport const CARDSET_SET_SIDEBAR_STATE = 'CARDSET_SET_SIDEBAR_STATE';\nexport const CARDSET_SET_ZOOM = 'CARDSET_SET_ZOOM';\nexport const CARDSET_UPLOAD_IMAGE = 'CARDSET_UPLOAD_IMAGE';\nexport const CARDSET_UPLOAD_IMAGE_SUCCESS = 'CARDSET_UPLOAD_IMAGE_SUCCESS';\nexport const CARDSET_UPLOAD_IMAGE_FAILURE = 'CARDSET_UPLOAD_IMAGE_FAILURE';\nexport const CARDSET_DELETE_IMAGE = 'CARDSET_DELETE_IMAGE';\nexport const IMAGE_LIST_REQUEST = 'IMAGE_LIST_REQUEST';\nexport const IMAGE_LIST_SUCCESS = 'IMAGE_LIST_SUCCESS';\nexport const IMAGE_LIST_FAILURE = 'IMAGE_LIST_FAILURE';\n\n// Actions\n\nexport interface InitAction {\n    type: typeof INIT_REQUEST;\n}\n\nexport interface MessageDisplay {\n    type: typeof MESSAGE_DISPLAY;\n    message: MessageType;\n}\nexport type MessageAction = MessageDisplay | { type: typeof MESSAGE_HIDE; messageId: string };\n\nexport interface LoginRequest {\n    type: typeof LOGIN_REQUEST;\n    creds: Credentials;\n}\nexport type LoginAction =\n    | LoginRequest\n    | { type: typeof LOGIN_SUCCESS }\n    | { type: typeof LOGIN_FAILURE; message: string }\n    | { type: typeof LOGOUT_REQUEST }\n    | { type: typeof LOGOUT_FAILURE }\n    | { type: typeof LOGOUT_SUCCESS };\n\nexport interface SignUpRequest {\n    type: typeof SIGNUP_REQUEST;\n    creds: Credentials;\n}\nexport type SignUpAction = SignUpRequest | { type: typeof SIGNUP_SUCCESS } | { type: typeof SIGNUP_FAILURE };\n\nexport interface GameCreateRequest {\n    type: typeof GAME_CREATE_REQUEST;\n    gamename: string;\n}\nexport type GameCreateAction =\n    | GameCreateRequest\n    | { type: typeof GAME_CREATE_SUCCESS }\n    | { type: typeof GAME_CREATE_FAILURE };\n\nexport interface GameDeleteRequest {\n    type: typeof GAME_DELETE_REQUEST;\n    gameId: string;\n}\n\nexport type GameDeleteAction = GameDeleteRequest;\n\nexport interface GameRenameRequest {\n    type: typeof GAME_RENAME_REQUEST;\n    gameId: string;\n    newName: string;\n}\n\nexport type GameRenameAction = GameRenameRequest;\n\nexport interface GameListSuccess {\n    type: typeof GAME_LIST_SUCCESS;\n    byId: GamesCollection;\n    allIds: IdsArray;\n}\nexport type GameListAction =\n    | { type: typeof GAME_LIST_REQUEST }\n    | GameListSuccess\n    | { type: typeof GAME_LIST_FAILURE }\n    | { type: typeof GAME_LIST_RESET };\n\nexport interface GameSelectRequest {\n    type: typeof GAME_SELECT_REQUEST;\n    id: string;\n    updateCardSets: boolean;\n}\nexport type GameSelectAction =\n    | GameSelectRequest\n    | { type: typeof GAME_SELECT_SUCCESS; id: string }\n    | { type: typeof GAME_SELECT_FAILURE };\n\nexport interface GameCreatePdfRequest {\n    type: typeof GAME_CREATE_PDF_REQUEST;\n    collectionType: string;\n    collectionId: string;\n    pageWidth: number;\n    pageHeight: number;\n    topBottomMargin: number;\n    leftRightMargin: number;\n    verticalSpace: number;\n    horizontalSpace: number;\n    includeBleedingArea: boolean;\n    cutMarksForScissors: boolean;\n    cutMarksForGuillotine: boolean;\n    cutMarksInMarginArea: boolean;\n    cutMarksOnFrontSideOnly: boolean;\n}\n\nexport type GameCreatePdfAction =\n    | GameCreatePdfRequest\n    | { type: typeof GAME_CREATE_PDF_SUCCESS }\n    | { type: typeof GAME_CREATE_PDF_FAILURE };\n\nexport interface GameCreatePngRequest {\n    type: typeof GAME_CREATE_PNG_REQUEST;\n    dpi: number;\n    collectionType: string;\n    collectionId: string;\n}\n\nexport type GameCreatePngAction =\n    | GameCreatePngRequest\n    | { type: typeof GAME_CREATE_PNG_SUCCESS }\n    | { type: typeof GAME_CREATE_PNG_FAILURE };\n\nexport type GameAction =\n    | GameCreateAction\n    | GameDeleteAction\n    | GameRenameAction\n    | GameListAction\n    | GameSelectAction\n    | GameCreatePdfAction\n    | GameCreatePngAction;\n\nexport interface CardSetCreateRequest {\n    type: typeof CARDSET_CREATE_REQUEST;\n    cardsetname: string;\n    width: number;\n    height: number;\n    gameId: string;\n}\nexport type CardSetCreateAction =\n    | CardSetCreateRequest\n    | { type: typeof CARDSET_CREATE_SUCCESS }\n    | { type: typeof CARDSET_CREATE_FAILURE };\n\nexport interface CardSetDeleteRequest {\n    type: typeof CARDSET_DELETE_REQUEST;\n    cardSetId: string;\n}\n\nexport interface CardSetRenameRequest {\n    type: typeof CARDSET_RENAME_REQUEST;\n    cardSetId: string;\n    newName: string;\n}\n\nexport interface CardSetImportData {\n    type: typeof CARDSET_IMPORT_DATA;\n    data: object;\n}\n\nexport interface CardSetListSuccess {\n    type: typeof CARDSET_LIST_SUCCESS;\n    byId: CardSetsCollection;\n    allIds: IdsArray;\n}\nexport type CardSetListAction =\n    | { type: typeof CARDSET_LIST_REQUEST }\n    | CardSetListSuccess\n    | { type: typeof CARDSET_LIST_FAILURE }\n    | { type: typeof CARDSET_LIST_RESET };\n\nexport interface CardSetSelectRequest {\n    type: typeof CARDSET_SELECT_REQUEST;\n    id: string;\n}\nexport interface CardSetSelectSuccess {\n    type: typeof CARDSET_SELECT_SUCCESS;\n    id: string;\n    name: string;\n    data: {\n        version: number;\n        width: number;\n        height: number;\n        isTwoSided: boolean;\n        snappingDistance: number;\n        cardsAllIds: IdsArray;\n        cardsById: CardsCollection;\n        placeholders: PlaceholdersCollection;\n        placeholdersAllIds: IdsArray;\n        texts: PlaceholdersTextInfoByCardCollection;\n        images: PlaceholdersImageInfoByCardCollection;\n        zoom: number;\n    };\n    gameId: string;\n}\nexport interface CardSetCreateCard {\n    type: typeof CARDSET_CREATE_CARD;\n    card: CardType;\n}\nexport interface CardSetCloneCard {\n    type: typeof CARDSET_CLONE_CARD;\n    card: CardType;\n}\nexport interface CardSetRemoveCard {\n    type: typeof CARDSET_REMOVE_CARD;\n    card: CardType;\n}\nexport interface CardSetUpdateCardCount {\n    type: typeof CARDSET_UPDATE_CARD_COUNT;\n    card: CardType;\n    count: number;\n}\nexport interface CardSetAddTextPlaceholder {\n    type: typeof CARDSET_ADD_TEXT_PLACEHOLDER;\n}\nexport interface CardSetAddImagePlaceholder {\n    type: typeof CARDSET_ADD_IMAGE_PLACEHOLDER;\n}\nexport interface CardSetChangeActivePlaceholderName {\n    type: typeof CARDSET_CHANGE_ACTIVE_PLACEHOLDER_NAME;\n    name: string;\n}\nexport interface CardSetRemoveActivePlaceholder {\n    type: typeof CARDSET_REMOVE_ACTIVE_PLACEHOLDER;\n}\nexport interface CardSetRaiseActivePlaceholderToTop {\n    type: typeof CARDSET_RAISE_ACTIVE_PLACEHOLDER_TO_TOP;\n}\nexport interface CardSetLowerActivePlaceholderToBottom {\n    type: typeof CARDSET_LOWER_ACTIVE_PLACEHOLDER_TO_BOTTOM;\n}\nexport interface CardSetLockActivePlaceholder {\n    type: typeof CARDSET_LOCK_ACTIVE_PLACEHOLDER;\n}\nexport interface CardSetUnlockActivePlaceholder {\n    type: typeof CARDSET_UNLOCK_ACTIVE_PLACEHOLDER;\n}\nexport interface CardSetChangeFitForActivePlaceholder {\n    type: typeof CARDSET_CHANGE_FIT_FOR_ACTIVE_PLACEHOLDER;\n    fit: string;\n}\n\nexport interface CardSetChangeWidth {\n    type: typeof CARDSET_CHANGE_WIDTH;\n    width: number;\n}\n\nexport interface CardSetChangeHeight {\n    type: typeof CARDSET_CHANGE_HEIGHT;\n    height: number;\n}\n\nexport interface CardSetChangeIsTwoSided {\n    type: typeof CARDSET_CHANGE_IS_TWO_SIDED;\n    isTwoSided: boolean;\n}\n\nexport interface CardSetChangeSnappingDistance {\n    type: typeof CARDSET_CHANGE_SNAPPING_DISTANCE;\n    snappingDistance: number;\n}\n\nexport interface CardSetChangePlaceholderPosition {\n    type: typeof CARDSET_CHANGE_PLACEHOLDER_POSITION;\n    placeholder: PlaceholderType;\n    x: number;\n    y: number;\n}\nexport interface CardSetChangePlaceholderSize {\n    type: typeof CARDSET_CHANGE_PLACEHOLDER_SIZE;\n    placeholder: PlaceholderType;\n    width: number;\n    height: number;\n}\nexport interface CardSetChangePlaceholderAngle {\n    type: typeof CARDSET_CHANGE_PLACEHOLDER_ANGLE;\n    placeholder: PlaceholderType;\n    angle: number;\n}\nexport interface CardSetChangeActiveTextPlaceholderAlign {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_ALIGN;\n    align: string;\n}\nexport interface CardSetChangeActiveTextPlaceholderColor {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_COLOR;\n    color: string;\n}\nexport interface CardSetChangeActiveTextPlaceholderFontFamily {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY;\n    fontFamily: string;\n}\nexport interface CardSetChangeActiveTextPlaceholderFontVariant {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_VARIANT;\n    fontVariant: string;\n}\nexport interface CardSetChangeActiveTextPlaceholderFontFamilyAndVariant {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY_AND_VARIANT;\n    fontFamily: string;\n    fontVariant: string;\n}\nexport interface CardSetChangeActiveTextPlaceholderFontSize {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_SIZE;\n    fontSize: number;\n}\nexport interface CardSetChangeActiveTextPlaceholderLineHeight {\n    type: typeof CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_LINE_HEIGHT;\n    lineHeight: number;\n}\nexport interface CardSetChangeText {\n    type: typeof CARDSET_CHANGE_TEXT;\n    cardId: string;\n    placeholderId: string;\n    textInfo: TextInfo;\n}\nexport interface CardSetChangeImage {\n    type: typeof CARDSET_CHANGE_IMAGE;\n    cardId: string;\n    placeholderId: string;\n    imageInfo: ImageInfo;\n}\nexport interface CardSetChangeImageBase64 {\n    type: typeof CARDSET_CHANGE_IMAGE_BASE64;\n    cardId: string;\n    placeholderId: string;\n    base64?: string;\n}\nexport interface CardSetSetActiveCardAndPlaceholder {\n    type: typeof CARDSET_SET_ACTIVE_CARD_AND_PLACEHOLDER;\n    cardId: string | null;\n    isBackActive: boolean;\n    placeholderId: string | null;\n}\n\nexport enum SidebarState {\n    Settings,\n    Details,\n    Measurements,\n    Image,\n    Text,\n    Upload,\n    ImportExport,\n    Png,\n    Pdf,\n}\nexport interface CardSetSetSidebarState {\n    type: typeof CARDSET_SET_SIDEBAR_STATE;\n    sidebarState: SidebarState | null;\n}\nexport interface CardSetSetZoom {\n    type: typeof CARDSET_SET_ZOOM;\n    zoom: number;\n}\n\nexport type FPLoadCallback = (id: string) => void;\nexport type FPErrorCallback = (error: string) => void;\nexport type FPProgressCallback = (computable: boolean, loaded: number, total: number) => void;\nexport type FPAbortCallback = () => void;\nexport type FPRevertLoadCallback = () => void;\n\nexport interface CardSetUploadImage {\n    type: typeof CARDSET_UPLOAD_IMAGE;\n    gameId: string;\n    file: File;\n    load: FPLoadCallback;\n    error: FPErrorCallback;\n    progress: FPProgressCallback;\n    abort: FPAbortCallback;\n    cancelToken: CancelToken;\n}\n\nexport interface CardSetDeleteImage {\n    type: typeof CARDSET_DELETE_IMAGE;\n    imageId: string;\n    load: FPRevertLoadCallback;\n    error: FPErrorCallback;\n}\n\nexport interface CardSetUploadImageSuccess {\n    type: typeof CARDSET_UPLOAD_IMAGE_SUCCESS;\n}\n\nexport interface CardSetUploadImageFailure {\n    type: typeof CARDSET_UPLOAD_IMAGE_FAILURE;\n}\n\nexport type CardSetSelectAction = CardSetSelectRequest | CardSetSelectSuccess | { type: typeof CARDSET_SELECT_FAILURE };\n\nexport interface CardSetUpdateDataRequest {\n    type: typeof CARDSET_UPDATE_DATA_REQUEST;\n}\nexport interface CardSetUpdateDataSuccess {\n    type: typeof CARDSET_UPDATE_DATA_SUCCESS;\n}\nexport interface CardSetUpdateDataFailure {\n    type: typeof CARDSET_UPDATE_DATA_FAILURE;\n}\nexport type CardSetUpdateDataAction = CardSetUpdateDataRequest | CardSetUpdateDataSuccess | CardSetUpdateDataFailure;\n\nexport type CardSetModifyAction =\n    | CardSetCreateCard\n    | CardSetCloneCard\n    | CardSetRemoveCard\n    | CardSetUpdateCardCount\n    | CardSetAddTextPlaceholder\n    | CardSetAddImagePlaceholder\n    | CardSetChangeActivePlaceholderName\n    | CardSetRemoveActivePlaceholder\n    | CardSetRaiseActivePlaceholderToTop\n    | CardSetLowerActivePlaceholderToBottom\n    | CardSetLockActivePlaceholder\n    | CardSetUnlockActivePlaceholder\n    | CardSetChangeFitForActivePlaceholder\n    | CardSetChangeWidth\n    | CardSetChangeHeight\n    | CardSetChangeIsTwoSided\n    | CardSetChangeSnappingDistance\n    | CardSetChangePlaceholderPosition\n    | CardSetChangePlaceholderSize\n    | CardSetChangePlaceholderAngle\n    | CardSetChangeActiveTextPlaceholderAlign\n    | CardSetChangeActiveTextPlaceholderColor\n    | CardSetChangeActiveTextPlaceholderFontFamily\n    | CardSetChangeActiveTextPlaceholderFontVariant\n    | CardSetChangeActiveTextPlaceholderFontFamilyAndVariant\n    | CardSetChangeActiveTextPlaceholderFontSize\n    | CardSetChangeActiveTextPlaceholderLineHeight\n    | CardSetChangeText\n    | CardSetChangeImage\n    | CardSetChangeImageBase64\n    | CardSetSetActiveCardAndPlaceholder\n    | CardSetSetSidebarState\n    | CardSetSetZoom\n    | CardSetUploadImage\n    | CardSetDeleteImage\n    | CardSetUploadImageSuccess\n    | CardSetUploadImageFailure;\n\nexport type CardSetAction =\n    | CardSetCreateAction\n    | CardSetDeleteRequest\n    | CardSetRenameRequest\n    | CardSetImportData\n    | CardSetListAction\n    | CardSetSelectAction\n    | CardSetUpdateDataAction\n    | CardSetModifyAction;\n\nexport interface ImageListRequest {\n    type: typeof IMAGE_LIST_REQUEST;\n    filter: string;\n    location: string;\n}\nexport interface ImageListSuccess {\n    type: typeof IMAGE_LIST_SUCCESS;\n    images: ImageArray;\n}\nexport type ImageListAction = ImageListRequest | ImageListSuccess | { type: typeof IMAGE_LIST_FAILURE };\n\nexport type Action =\n    | InitAction\n    | LoginAction\n    | SignUpAction\n    | GameAction\n    | CardSetAction\n    | ImageListAction\n    | MessageAction;\n\nexport type Dispatch = ReduxDispatch<Action>;\n\nexport const messageDisplay = (type: string, text: string, id?: string): MessageDisplay => {\n    return {\n        type: MESSAGE_DISPLAY,\n        message: {\n            id: id || shortid.generate(),\n            type: type,\n            text: text,\n        },\n    };\n};\n\nexport const initRequest = (): InitAction => {\n    return { type: INIT_REQUEST };\n};\n\nexport const loginRequest = (creds: Credentials): LoginAction => {\n    return {\n        type: LOGIN_REQUEST,\n        creds: creds,\n    };\n};\n\nexport const logoutRequest = (): LoginAction => {\n    return {\n        type: LOGOUT_REQUEST,\n    };\n};\n\nexport const signupRequest = (creds: Credentials): SignUpAction => {\n    return {\n        type: SIGNUP_REQUEST,\n        creds: creds,\n    };\n};\n\nexport const gameCreateRequest = (gamename: string): GameAction => {\n    return {\n        type: GAME_CREATE_REQUEST,\n        gamename: gamename,\n    };\n};\n\nexport const gameDeleteRequest = (gameId: string): GameAction => {\n    return {\n        type: GAME_DELETE_REQUEST,\n        gameId,\n    };\n};\n\nexport const gameRenameRequest = (gameId: string, newName: string): GameAction => {\n    return {\n        type: GAME_RENAME_REQUEST,\n        gameId,\n        newName,\n    };\n};\n\nexport const gameListRequest = (): GameAction => {\n    return {\n        type: GAME_LIST_REQUEST,\n    };\n};\n\nexport const gameSelectRequest = (id: string, updateCardSets: boolean): GameAction => {\n    return {\n        type: GAME_SELECT_REQUEST,\n        id,\n        updateCardSets,\n    };\n};\n\nexport const gameCreatePdfRequest = (\n    collectionType: string,\n    collectionId: string,\n    pageWidth: number,\n    pageHeight: number,\n    topBottomMargin: number,\n    leftRightMargin: number,\n    verticalSpace: number,\n    horizontalSpace: number,\n    includeBleedingArea: boolean,\n    cutMarksForScissors: boolean,\n    cutMarksForGuillotine: boolean,\n    cutMarksInMarginArea: boolean,\n    cutMarksOnFrontSideOnly: boolean,\n): GameCreatePdfRequest => {\n    return {\n        type: GAME_CREATE_PDF_REQUEST,\n        collectionType,\n        collectionId,\n        pageWidth,\n        pageHeight,\n        topBottomMargin,\n        leftRightMargin,\n        verticalSpace,\n        horizontalSpace,\n        includeBleedingArea,\n        cutMarksForScissors,\n        cutMarksForGuillotine,\n        cutMarksInMarginArea,\n        cutMarksOnFrontSideOnly,\n    };\n};\n\nexport const gameCreatePngRequest = (\n    dpi: number,\n    collectionType: string,\n    collectionId: string,\n): GameCreatePngRequest => {\n    return {\n        type: GAME_CREATE_PNG_REQUEST,\n        dpi,\n        collectionType,\n        collectionId,\n    };\n};\n\nexport const cardSetCreateRequest = (\n    cardsetname: string,\n    width: number,\n    height: number,\n    gameId: string,\n): CardSetAction => {\n    return {\n        type: CARDSET_CREATE_REQUEST,\n        cardsetname: cardsetname,\n        width,\n        height,\n        gameId,\n    };\n};\n\nexport const cardSetDeleteRequest = (cardSetId: string): CardSetAction => {\n    return {\n        type: CARDSET_DELETE_REQUEST,\n        cardSetId,\n    };\n};\n\nexport const cardSetRenameRequest = (cardSetId: string, newName: string): CardSetAction => {\n    return {\n        type: CARDSET_RENAME_REQUEST,\n        cardSetId,\n        newName,\n    };\n};\n\nexport const cardSetImportData = (data: object): CardSetImportData => {\n    return {\n        type: CARDSET_IMPORT_DATA,\n        data,\n    };\n};\n\nexport const cardSetSelectRequest = (id: string): CardSetSelectRequest => {\n    return {\n        type: CARDSET_SELECT_REQUEST,\n        id,\n    };\n};\n\nexport const cardSetCreateCard = (card: CardType): CardSetCreateCard => {\n    return {\n        type: CARDSET_CREATE_CARD,\n        card,\n    };\n};\n\nexport const cardSetCloneCard = (card: CardType): CardSetCloneCard => {\n    return {\n        type: CARDSET_CLONE_CARD,\n        card,\n    };\n};\n\nexport const cardSetRemoveCard = (card: CardType): CardSetRemoveCard => {\n    return {\n        type: CARDSET_REMOVE_CARD,\n        card,\n    };\n};\n\nexport const cardSetUpdateCardCount = (card: CardType, count: number): CardSetUpdateCardCount => {\n    return {\n        type: CARDSET_UPDATE_CARD_COUNT,\n        card,\n        count,\n    };\n};\n\nexport const cardSetAddTextPlaceholder = (): CardSetAddTextPlaceholder => {\n    return {\n        type: CARDSET_ADD_TEXT_PLACEHOLDER,\n    };\n};\n\nexport const cardSetAddImagePlaceholder = (): CardSetAddImagePlaceholder => {\n    return {\n        type: CARDSET_ADD_IMAGE_PLACEHOLDER,\n    };\n};\n\nexport const cardSetChangeActivePlaceholderName = (name: string): CardSetChangeActivePlaceholderName => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_PLACEHOLDER_NAME,\n        name,\n    };\n};\n\nexport const cardSetRemoveActivePlaceholder = (): CardSetRemoveActivePlaceholder => {\n    return {\n        type: CARDSET_REMOVE_ACTIVE_PLACEHOLDER,\n    };\n};\n\nexport const cardSetRaiseActivePlaceholderToTop = (): CardSetRaiseActivePlaceholderToTop => {\n    return {\n        type: CARDSET_RAISE_ACTIVE_PLACEHOLDER_TO_TOP,\n    };\n};\n\nexport const cardSetLowerActivePlaceholderToBottom = (): CardSetLowerActivePlaceholderToBottom => {\n    return {\n        type: CARDSET_LOWER_ACTIVE_PLACEHOLDER_TO_BOTTOM,\n    };\n};\n\nexport const cardSetLockActivePlaceholder = (): CardSetLockActivePlaceholder => {\n    return {\n        type: CARDSET_LOCK_ACTIVE_PLACEHOLDER,\n    };\n};\n\nexport const cardSetUnlockActivePlaceholder = (): CardSetUnlockActivePlaceholder => {\n    return {\n        type: CARDSET_UNLOCK_ACTIVE_PLACEHOLDER,\n    };\n};\n\nexport const cardSetChangeFitForActivePlaceholder = (fit: string): CardSetChangeFitForActivePlaceholder => {\n    return {\n        type: CARDSET_CHANGE_FIT_FOR_ACTIVE_PLACEHOLDER,\n        fit,\n    };\n};\n\nexport const cardSetChangeWidth = (width: number): CardSetChangeWidth => {\n    return {\n        type: CARDSET_CHANGE_WIDTH,\n        width,\n    };\n};\n\nexport const cardSetChangeHeight = (height: number): CardSetChangeHeight => {\n    return {\n        type: CARDSET_CHANGE_HEIGHT,\n        height,\n    };\n};\n\nexport const cardSetChangeIsTwoSided = (isTwoSided: boolean): CardSetChangeIsTwoSided => {\n    return {\n        type: CARDSET_CHANGE_IS_TWO_SIDED,\n        isTwoSided,\n    };\n};\n\nexport const cardSetChangeSnappingDistance = (snappingDistance: number): CardSetChangeSnappingDistance => {\n    return {\n        type: CARDSET_CHANGE_SNAPPING_DISTANCE,\n        snappingDistance,\n    };\n};\n\nexport const cardSetChangePlaceholderPosition = (\n    placeholder: PlaceholderType,\n    x: number,\n    y: number,\n): CardSetChangePlaceholderPosition => {\n    return {\n        type: CARDSET_CHANGE_PLACEHOLDER_POSITION,\n        placeholder,\n        x,\n        y,\n    };\n};\n\nexport const cardSetChangePlaceholderSize = (\n    placeholder: PlaceholderType,\n    width: number,\n    height: number,\n): CardSetChangePlaceholderSize => {\n    return {\n        type: CARDSET_CHANGE_PLACEHOLDER_SIZE,\n        placeholder,\n        width,\n        height,\n    };\n};\n\nexport const cardSetChangePlaceholderAngle = (\n    placeholder: PlaceholderType,\n    angle: number,\n): CardSetChangePlaceholderAngle => {\n    return {\n        type: CARDSET_CHANGE_PLACEHOLDER_ANGLE,\n        placeholder,\n        angle,\n    };\n};\n\nexport const cardSetChangeActiveTextPlaceholderAlign = (align: string): CardSetChangeActiveTextPlaceholderAlign => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_ALIGN,\n        align,\n    };\n};\n\nexport const cardSetChangeActiveTextPlaceholderColor = (color: string): CardSetChangeActiveTextPlaceholderColor => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_COLOR,\n        color,\n    };\n};\n\nexport const cardSetChangeActiveTextPlaceholderFontFamily = (\n    fontFamily: string,\n): CardSetChangeActiveTextPlaceholderFontFamily => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY,\n        fontFamily,\n    };\n};\n\nexport const cardSetChangeActiveTextPlaceholderFontVariant = (\n    fontVariant: string,\n): CardSetChangeActiveTextPlaceholderFontVariant => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_VARIANT,\n        fontVariant,\n    };\n};\n\nexport const cardSetChangeActiveTextPlaceholderFontFamilyAndVariant = (\n    fontFamily: string,\n    fontVariant: string,\n): CardSetChangeActiveTextPlaceholderFontFamilyAndVariant => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY_AND_VARIANT,\n        fontFamily,\n        fontVariant,\n    };\n};\n\nexport const cardSetChangeActiveTextPlaceholderFontSize = (\n    fontSize: number,\n): CardSetChangeActiveTextPlaceholderFontSize => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_SIZE,\n        fontSize,\n    };\n};\n\nexport const cardSetChangeActiveTextPlaceholderLineHeight = (\n    lineHeight: number,\n): CardSetChangeActiveTextPlaceholderLineHeight => {\n    return {\n        type: CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_LINE_HEIGHT,\n        lineHeight,\n    };\n};\n\nexport const cardSetChangeText = (cardId: string, placeholderId: string, textInfo: TextInfo): CardSetChangeText => {\n    return {\n        type: CARDSET_CHANGE_TEXT,\n        cardId,\n        placeholderId,\n        textInfo,\n    };\n};\n\nexport const cardSetChangeImage = (cardId: string, placeholderId: string, imageInfo: ImageInfo): CardSetChangeImage => {\n    return {\n        type: CARDSET_CHANGE_IMAGE,\n        cardId,\n        placeholderId,\n        imageInfo,\n    };\n};\n\nexport const cardSetChangeImageBase64 = (\n    cardId: string,\n    placeholderId: string,\n    base64?: string,\n): CardSetChangeImageBase64 => {\n    return {\n        type: CARDSET_CHANGE_IMAGE_BASE64,\n        cardId,\n        placeholderId,\n        base64,\n    };\n};\n\nexport const cardSetActiveCardAndPlaceholder = (\n    cardId: string | null,\n    isBackActive: boolean,\n    placeholderId: string | null,\n): CardSetSetActiveCardAndPlaceholder => {\n    return {\n        type: CARDSET_SET_ACTIVE_CARD_AND_PLACEHOLDER,\n        cardId,\n        isBackActive,\n        placeholderId,\n    };\n};\n\nexport const cardSetSetSidebarState = (sidebarState: SidebarState | null): CardSetSetSidebarState => {\n    return {\n        type: CARDSET_SET_SIDEBAR_STATE,\n        sidebarState,\n    };\n};\n\nexport const cardSetSetZoom = (zoom: number): CardSetSetZoom => {\n    return {\n        type: CARDSET_SET_ZOOM,\n        zoom,\n    };\n};\n\nexport const cardSetUploadImage = (\n    gameId: string,\n    file: File,\n    load: FPLoadCallback,\n    error: FPErrorCallback,\n    progress: FPProgressCallback,\n    abort: FPAbortCallback,\n    cancelToken: CancelToken,\n): CardSetUploadImage => {\n    return {\n        type: CARDSET_UPLOAD_IMAGE,\n        gameId,\n        file,\n        load,\n        error,\n        progress,\n        abort,\n        cancelToken,\n    };\n};\n\nexport const cardSetDeleteImage = (\n    imageId: string,\n    load: FPRevertLoadCallback,\n    error: FPErrorCallback,\n): CardSetDeleteImage => {\n    return {\n        type: CARDSET_DELETE_IMAGE,\n        imageId,\n        load,\n        error,\n    };\n};\n\nexport const imageListRequest = (filter: string, location: string): ImageListAction => {\n    return {\n        type: IMAGE_LIST_REQUEST,\n        filter,\n        location,\n    };\n};\n","export const CURRENT_CARDSET_VERSION = 2;\nexport const DEFAULT_FONT = 'Roboto';\nexport const DEFAULT_FONT_VARIANT = 'regular';\nexport const DEFAULT_FONT_SIZE = 8;\nexport const DEFAULT_LINE_HEIGHT = 1.27;\n\nexport const BLEED_WIDTH = 25.4 / 8; // 1/8th of inch in mm\n","import axios, { AxiosError, CancelToken } from 'axios';\n\nimport { Credentials } from './types';\n\nexport function handleAxiosError(error: AxiosError) {\n    if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        // error.response.status);\n        throw new Error(error.response.data.message);\n    } else if (error.request) {\n        console.log(error.request);\n        throw new Error(error.request);\n    } else {\n        throw new Error('Unknown error :(');\n    }\n}\n\nexport function getTokens(creds: Credentials) {\n    return axios\n        .post('/api/tokens', creds)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function refreshToken(refreshTokenValue: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${refreshTokenValue}` },\n    };\n    return axios\n        .post('/api/access_tokens', {}, config)\n        .then(resp => {\n            return resp.data.accessToken;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function deleteAccessToken(token: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .delete('/api/access_tokens', config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            if (error.response.status === 401) return {};\n            handleAxiosError(error);\n        });\n}\n\nexport function deleteRefreshToken(token: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .delete('/api/refresh_tokens', config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            if (error.response.status === 401) return {};\n            handleAxiosError(error);\n        });\n}\n\nexport function registerUser(creds: Credentials) {\n    return axios\n        .post('/api/users', creds)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function getRequest(url: string, token: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .get(url, config)\n        .then(resp => {\n            return resp;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function postRequest(url: string, token: string, data: object) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .post(url, data, config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function postRequestFormDataCancelable(\n    url: string,\n    token: string,\n    data: FormData,\n    progressCallback: (event: ProgressEvent) => void,\n    cancelToken: CancelToken,\n    cancelCallback: () => void,\n) {\n    let config = {\n        headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'multipart/form-data',\n        },\n        cancelToken,\n        onUploadProgress: progressCallback,\n    };\n\n    return axios\n        .post(url, data, config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            if (axios.isCancel(error)) {\n                cancelCallback();\n            } else {\n                handleAxiosError(error);\n            }\n        });\n}\n\nexport function putRequest(url: string, token: string, data: object) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .put(url, data, config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n\nexport function deleteRequest(url: string, token: string) {\n    let config = {\n        headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios\n        .delete(url, config)\n        .then(resp => {\n            return resp.data;\n        })\n        .catch(error => {\n            handleAxiosError(error);\n        });\n}\n","export function downloadBlob(blobURL: string, filename: string, resolve?: () => void) {\n    const tempLink = document.createElement('a');\n    tempLink.style.display = 'none';\n    tempLink.href = blobURL;\n    tempLink.setAttribute('download', filename);\n    if (typeof tempLink.download === 'undefined') {\n        tempLink.setAttribute('target', '_blank');\n    }\n    document.body.appendChild(tempLink);\n    tempLink.click();\n    document.body.removeChild(tempLink);\n    setTimeout(() => {\n        window.URL.revokeObjectURL(blobURL);\n        if (resolve) resolve();\n    }, 100);\n}\n","import axios from 'axios';\nimport { downloadBlob } from './utils';\nimport { delay } from 'redux-saga';\nimport { XmlDocument } from 'xmldoc';\nimport JSZip from 'jszip';\nimport { getRequest } from './requests';\nimport { CardSetData } from './types';\n\nconst SVG_B64_START = 'data:image/svg+xml;base64,';\n\nenum ImageType {\n    SVG,\n    SVG_PATH,\n    IMAGE,\n    BLOCK_START,\n    BLOCK_END,\n}\n\ninterface ImageToDraw {\n    type: ImageType;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    angle: number;\n    fit?: string;\n    data: string;\n    color?: string;\n    scale?: number;\n}\n\nexport const generatePdfUsingWorker = (\n    accessToken: string,\n    collectionType: string,\n    collectionId: string,\n    pageWidth: number,\n    pageHeight: number,\n    topBottomMargin: number,\n    leftRightMargin: number,\n    verticalSpace: number,\n    horizontalSpace: number,\n    includeBleedingArea: boolean,\n    cutMarksForScissors: boolean,\n    cutMarksForGuillotine: boolean,\n    cutMarksInMarginArea: boolean,\n    cutMarksOnFrontSideOnly: boolean,\n) => {\n    // @ts-ignore\n    if (!window.Worker) {\n        throw new Error('We can not generate PDF because of browser you use. Try using different browser');\n    }\n\n    return new Promise((resolve, reject) => {\n        try {\n            const worker = new Worker('/js/worker.js');\n            worker.addEventListener('message', event => {\n                if (event.data.type === 'generatePdf') {\n                    const blobURL = event.data.url;\n                    downloadBlob(blobURL, 'card.pdf', resolve);\n                }\n            });\n\n            worker.postMessage({\n                type: 'generatePdf',\n                accessToken,\n                collectionType,\n                collectionId,\n                pageWidth,\n                pageHeight,\n                topBottomMargin,\n                leftRightMargin,\n                verticalSpace,\n                horizontalSpace,\n                includeBleedingArea,\n                cutMarksForScissors,\n                cutMarksForGuillotine,\n                cutMarksInMarginArea,\n                cutMarksOnFrontSideOnly,\n            });\n        } catch (e) {\n            reject(e);\n        }\n    });\n};\n\nfunction loadImage(url: string): Promise<HTMLImageElement> {\n    return new Promise((resolve, reject) => {\n        const img = new Image();\n        img.onload = () => resolve(img);\n        img.onerror = () => reject();\n\n        img.src = url;\n    });\n}\n\nfunction prepareImageToDrawSpace(context: CanvasRenderingContext2D, imageToDraw: ImageToDraw, ptpmm: number) {\n    context.save();\n    let x = (imageToDraw.x + imageToDraw.width / 2) * ptpmm;\n    let y = (imageToDraw.y + imageToDraw.height / 2) * ptpmm;\n    context.translate(x, y);\n    context.rotate(imageToDraw.angle);\n    let ax = (-imageToDraw.width / 2) * ptpmm;\n    let ay = (-imageToDraw.height / 2) * ptpmm;\n    context.translate(ax, ay);\n}\n\nfunction fixWidthAndHeightInSvg(data: string) {\n    const doc = new XmlDocument(data);\n    if (!('width' in doc.attr) || !('height' in doc.attr)) {\n        const viewBox = doc.attr['viewBox'].split(' ');\n        doc.attr['width'] = viewBox[2];\n        doc.attr['height'] = viewBox[3];\n    }\n\n    return btoa(doc.toString({ compressed: true }));\n}\n\nclass PNGGenerator {\n    tasksQueue: { type: string; subType: string; imageToDraw?: ImageToDraw }[] = [];\n    worker: Worker;\n\n    constructor() {\n        // @ts-ignore\n        if (!window.Worker) {\n            throw new Error('We can not generate PNG because of browser you use. Try using different browser');\n        }\n\n        this.worker = new Worker('/js/worker.js');\n        this.worker.addEventListener('message', event => {\n            if (event.data.type === 'generateCard') {\n                this.tasksQueue.push(event.data);\n            }\n        });\n    }\n\n    async generateCard(\n        cardSetData: CardSetData,\n        cardId: string,\n        cardIdx: number,\n        dpi: number,\n        isBack: boolean,\n        cardsetFolder: JSZip,\n    ) {\n        this.worker.postMessage({\n            type: 'generateCard',\n            cardSetData,\n            cardId,\n            isBack,\n        });\n\n        let offscreenCanvas = document.createElement('canvas');\n\n        const calculatedWidth = Math.round(dpi * (cardSetData.width / 25.4 + 1 / 4));\n        const calculatedHeight = Math.round(dpi * (cardSetData.height / 25.4 + 1 / 4));\n\n        offscreenCanvas.width = calculatedWidth;\n        offscreenCanvas.height = calculatedHeight;\n        var context = offscreenCanvas.getContext('2d');\n        if (context === null) {\n            throw new Error('We cannot generate PNG because of unknown reason. Try different browser.');\n        }\n        context.fillStyle = 'white';\n        context.fillRect(0, 0, calculatedWidth, calculatedHeight);\n\n        let stopped = false;\n\n        const ptpmm = dpi / 25.4;\n\n        while (!stopped) {\n            while (this.tasksQueue.length > 0) {\n                let task = this.tasksQueue.shift();\n\n                if (task && task.imageToDraw) {\n                    const imageToDraw = task.imageToDraw;\n\n                    if (imageToDraw.type === ImageType.SVG_PATH) {\n                        prepareImageToDrawSpace(context, imageToDraw, ptpmm);\n                        if (imageToDraw.scale && imageToDraw.color) {\n                            context.fillStyle = imageToDraw.color;\n                            context.scale(imageToDraw.scale * ptpmm, imageToDraw.scale * ptpmm);\n                            var p = new Path2D(imageToDraw.data);\n                            context.fill(p);\n                        }\n                        context.restore();\n                    } else if (imageToDraw.type === ImageType.IMAGE || imageToDraw.type === ImageType.SVG) {\n                        prepareImageToDrawSpace(context, imageToDraw, ptpmm);\n\n                        let image;\n                        if (imageToDraw.type === ImageType.SVG) {\n                            let svgData = fixWidthAndHeightInSvg(atob(imageToDraw.data));\n                            image = await loadImage(SVG_B64_START + svgData);\n                        } else {\n                            let resp = await axios.get(imageToDraw.data);\n                            if (resp.headers['content-type'] === 'image/svg+xml') {\n                                let svgData = fixWidthAndHeightInSvg(resp.data);\n                                image = await loadImage(SVG_B64_START + svgData);\n                            } else {\n                                image = await loadImage(imageToDraw.data);\n                            }\n                        }\n\n                        let scaledWidth = imageToDraw.width * ptpmm;\n                        let scaledHeight = imageToDraw.height * ptpmm;\n\n                        if (!imageToDraw.fit || imageToDraw.fit === 'width') {\n                            scaledHeight = image.height * (scaledWidth / image.width);\n                        } else if (imageToDraw.fit === 'height') {\n                            scaledWidth = image.width * (scaledHeight / image.height);\n                        }\n\n                        context.drawImage(image, 0, 0, scaledWidth, scaledHeight);\n\n                        context.restore();\n                    } else if (imageToDraw.type === ImageType.BLOCK_START) {\n                        prepareImageToDrawSpace(context, imageToDraw, ptpmm);\n                    } else if (imageToDraw.type === ImageType.BLOCK_END) {\n                        context.restore();\n                    }\n                }\n\n                if (task && task.subType === 'stop') {\n                    stopped = true;\n                }\n            }\n            if (!stopped) {\n                await delay(100);\n            }\n        }\n\n        let dataUrl = offscreenCanvas.toDataURL();\n        dataUrl = dataUrl.slice('data:image/png;base64,'.length);\n        cardsetFolder.file(\n            `${cardIdx.toString().padStart(4, '0')}_${cardId}_${isBack ? 'back' : 'front'}.png`,\n            dataUrl,\n            { base64: true },\n        );\n    }\n\n    async generateGame(accessToken: string, gameId: string, dpi: number, zip: JSZip) {\n        let resp = await getRequest('/api/games/' + gameId, accessToken);\n        if (!resp) return;\n\n        const cardsetsList = resp.data.cardsets;\n        for (const cardsetInfo of cardsetsList) {\n            await this.generateCardset(accessToken, cardsetInfo.id, dpi, zip);\n        }\n    }\n\n    async generateCardset(accessToken: string, cardsetId: string, dpi: number, zip: JSZip) {\n        const resp = await getRequest('/api/cardsets/' + cardsetId, accessToken);\n        if (!resp) return;\n\n        let cardSetData: CardSetData = JSON.parse(resp.data.data);\n\n        let cardsetFolder = zip.folder(resp.data.name);\n\n        for (const [cardIdx, cardId] of cardSetData.cardsAllIds.entries()) {\n            await this.generateCard(cardSetData, cardId, cardIdx, dpi, false, cardsetFolder);\n            if (cardSetData.isTwoSided) {\n                await this.generateCard(cardSetData, cardId, cardIdx, dpi, true, cardsetFolder);\n            }\n        }\n    }\n}\n\nexport const generatePngUsingWorker = async (\n    accessToken: string,\n    collectionType: string,\n    collectionId: string,\n    dpi: number,\n) => {\n    const pngGenerator = new PNGGenerator();\n\n    let zip = new JSZip();\n\n    if (collectionType === 'games') {\n        await pngGenerator.generateGame(accessToken, collectionId, dpi, zip);\n    } else if (collectionType === 'cardsets') {\n        await pngGenerator.generateCardset(accessToken, collectionId, dpi, zip);\n    }\n\n    let blob = await zip.generateAsync({ type: 'blob' });\n    let url = window.URL.createObjectURL(blob);\n    downloadBlob(url, 'cards.zip');\n};\n","export function saveTokens(data: { accessToken: string; refreshToken: string }) {\n    localStorage.setItem('accessToken', data.accessToken);\n    localStorage.setItem('refreshToken', data.refreshToken);\n}\n\nexport function saveAccessToken(accessToken: string) {\n    localStorage.setItem('accessToken', accessToken);\n}\n\nexport function cleanTokens() {\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n}\n\nexport function getTokenFromStorage() {\n    let token = localStorage.getItem('accessToken') || null;\n    return token;\n}\n\nexport function getRefreshTokenFromStorage() {\n    let token = localStorage.getItem('refreshToken') || null;\n    return token;\n}\n","import WebFont from 'webfontloader';\n\nimport { DEFAULT_FONT } from './constants';\nimport { PlaceholdersCollection } from './types';\n\nconst webFontsLoadPromise = (config: WebFont.Config) =>\n    new Promise((resolve, reject) => {\n        WebFont.load({ ...config, active: resolve, inactive: reject });\n    });\n\nexport const loadFontsUsedInPlaceholders = (data: { placeholders: PlaceholdersCollection }) => {\n    let fontsToLoad: Set<string> = new Set();\n    fontsToLoad.add(DEFAULT_FONT);\n    for (const plId in data.placeholders) {\n        const pl = data.placeholders[plId];\n        if (pl.type === 'text' && pl.fontFamily) {\n            let fontToLoad = pl.fontFamily;\n            if (pl.fontVariant && pl.fontVariant !== 'regular') {\n                fontToLoad += ':' + pl.fontVariant;\n            }\n\n            fontsToLoad.add(fontToLoad);\n        }\n    }\n\n    const config: WebFont.Config = {\n        google: {\n            families: [...Array.from(fontsToLoad)],\n        },\n    };\n\n    return webFontsLoadPromise(config);\n};\n","import { CancelToken } from 'axios';\nimport { XmlDocument, XmlNode } from 'xmldoc';\nimport { all, call, put, select, takeEvery, takeLatest } from 'redux-saga/effects';\nimport { delay, SagaIterator } from 'redux-saga';\nimport jwtDecode from 'jwt-decode';\n\nimport { BLEED_WIDTH } from './constants';\nimport {\n    CARDSET_ADD_IMAGE_PLACEHOLDER,\n    CARDSET_ADD_TEXT_PLACEHOLDER,\n    CARDSET_CHANGE_ACTIVE_PLACEHOLDER_NAME,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_ALIGN,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_COLOR,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY_AND_VARIANT,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_SIZE,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_VARIANT,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_LINE_HEIGHT,\n    CARDSET_CHANGE_FIT_FOR_ACTIVE_PLACEHOLDER,\n    CARDSET_CHANGE_HEIGHT,\n    CARDSET_CHANGE_IMAGE,\n    CARDSET_CHANGE_IS_TWO_SIDED,\n    CARDSET_CHANGE_PLACEHOLDER_ANGLE,\n    CARDSET_CHANGE_PLACEHOLDER_POSITION,\n    CARDSET_CHANGE_PLACEHOLDER_SIZE,\n    CARDSET_CHANGE_SNAPPING_DISTANCE,\n    CARDSET_CHANGE_TEXT,\n    CARDSET_CHANGE_WIDTH,\n    CARDSET_CLONE_CARD,\n    CARDSET_CREATE_CARD,\n    CARDSET_CREATE_FAILURE,\n    CARDSET_CREATE_REQUEST,\n    CARDSET_CREATE_SUCCESS,\n    CARDSET_DELETE_IMAGE,\n    CARDSET_DELETE_REQUEST,\n    CARDSET_IMPORT_DATA,\n    CARDSET_LIST_RESET,\n    CARDSET_LIST_SUCCESS,\n    CARDSET_LOCK_ACTIVE_PLACEHOLDER,\n    CARDSET_LOWER_ACTIVE_PLACEHOLDER_TO_BOTTOM,\n    CARDSET_RAISE_ACTIVE_PLACEHOLDER_TO_TOP,\n    CARDSET_REMOVE_ACTIVE_PLACEHOLDER,\n    CARDSET_REMOVE_CARD,\n    CARDSET_RENAME_REQUEST,\n    CARDSET_SELECT_FAILURE,\n    CARDSET_SELECT_REQUEST,\n    CARDSET_SELECT_SUCCESS,\n    CARDSET_SET_ZOOM,\n    CARDSET_UNLOCK_ACTIVE_PLACEHOLDER,\n    CARDSET_UPDATE_CARD_COUNT,\n    CARDSET_UPDATE_DATA_FAILURE,\n    CARDSET_UPDATE_DATA_REQUEST,\n    CARDSET_UPDATE_DATA_SUCCESS,\n    CARDSET_UPLOAD_IMAGE,\n    CARDSET_UPLOAD_IMAGE_FAILURE,\n    CARDSET_UPLOAD_IMAGE_SUCCESS,\n    CardSetChangeFitForActivePlaceholder,\n    CardSetChangeImage,\n    CardSetCreateRequest,\n    CardSetDeleteImage,\n    CardSetDeleteRequest,\n    CardSetRenameRequest,\n    CardSetSelectRequest,\n    CardSetUploadImage,\n    GAME_CREATE_FAILURE,\n    GAME_CREATE_PDF_FAILURE,\n    GAME_CREATE_PDF_REQUEST,\n    GAME_CREATE_PDF_SUCCESS,\n    GAME_CREATE_PNG_FAILURE,\n    GAME_CREATE_PNG_REQUEST,\n    GAME_CREATE_PNG_SUCCESS,\n    GAME_CREATE_REQUEST,\n    GAME_CREATE_SUCCESS,\n    GAME_DELETE_REQUEST,\n    GAME_LIST_FAILURE,\n    GAME_LIST_REQUEST,\n    GAME_LIST_RESET,\n    GAME_LIST_SUCCESS,\n    GAME_RENAME_REQUEST,\n    GAME_SELECT_FAILURE,\n    GAME_SELECT_REQUEST,\n    GAME_SELECT_SUCCESS,\n    GameCreatePdfRequest,\n    GameCreatePngRequest,\n    GameCreateRequest,\n    GameDeleteRequest,\n    GameRenameRequest,\n    GameSelectRequest,\n    IMAGE_LIST_FAILURE,\n    IMAGE_LIST_REQUEST,\n    IMAGE_LIST_SUCCESS,\n    INIT_REQUEST,\n    ImageListRequest,\n    LOGIN_FAILURE,\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGOUT_FAILURE,\n    LOGOUT_REQUEST,\n    LOGOUT_SUCCESS,\n    LoginRequest,\n    MESSAGE_DISPLAY,\n    MESSAGE_HIDE,\n    MessageDisplay,\n    SIGNUP_FAILURE,\n    SIGNUP_REQUEST,\n    SIGNUP_SUCCESS,\n    SignUpRequest,\n    cardSetChangeImageBase64,\n    gameSelectRequest,\n    messageDisplay,\n} from './actions';\nimport { CardSetType, CardSetsCollection, GameType, GamesCollection } from './types';\nimport { State } from './reducers';\nimport {\n    deleteAccessToken,\n    deleteRefreshToken,\n    deleteRequest,\n    getRequest,\n    getTokens,\n    postRequest,\n    postRequestFormDataCancelable,\n    putRequest,\n    refreshToken,\n    registerUser,\n} from './requests';\nimport { generatePdfUsingWorker, generatePngUsingWorker } from './workerController';\nimport { getTokenFromStorage, getRefreshTokenFromStorage, saveAccessToken, saveTokens, cleanTokens } from './storage';\nimport { loadFontsUsedInPlaceholders } from './fontLoader';\n\n// Messages\nexport function* putError(message: string): SagaIterator {\n    yield put(messageDisplay('error', message));\n}\n\nexport function* putInfo(message: string): SagaIterator {\n    yield put(messageDisplay('info', message));\n}\n\nexport function* putProgress(text: string): SagaIterator {\n    const message = messageDisplay('progress', text, text);\n    yield put(message);\n    return message.message.id;\n}\n\nexport function* hideProgress(messageId: string): SagaIterator {\n    yield put({ type: MESSAGE_HIDE, messageId });\n}\n\nexport function* handleMessageDisplay(action: MessageDisplay): SagaIterator {\n    if (action.message.type === 'progress') return;\n\n    yield call(delay, 5000);\n    yield put({ type: MESSAGE_HIDE, messageId: action.message.id });\n}\n\n// Login & Signup\n// Token handling\n\nexport function validateToken(token: string): boolean {\n    try {\n        const decoded = jwtDecode<{ exp: number }>(token);\n        const valid = decoded.exp - new Date().getTime() / 1000 > 5;\n        return valid;\n    } catch (e) {\n        return false;\n    }\n}\n\nexport function* getToken(withErrorIfMissing: boolean, getFreshToken = false): SagaIterator {\n    const token = yield call(getTokenFromStorage);\n    if (token && !getFreshToken) {\n        const tokenValid = yield call(validateToken, token);\n        if (tokenValid) return token;\n    }\n\n    const refreshTokenValue = yield call(getRefreshTokenFromStorage);\n    if (!refreshTokenValue) {\n        if (withErrorIfMissing) throw new Error('Token not found.');\n        return null;\n    }\n\n    const refreshTokenValid = yield call(validateToken, refreshTokenValue);\n    if (!refreshTokenValid) {\n        yield put({ type: LOGOUT_REQUEST });\n        if (withErrorIfMissing) throw new Error('Token not found.');\n        return null;\n    }\n\n    const newToken = yield call(refreshToken, refreshTokenValue);\n    yield call(saveAccessToken, newToken);\n    return newToken;\n}\n\n// Login\n\nexport function* handleLoginRequest(action: LoginRequest): SagaIterator {\n    try {\n        const data = yield call(getTokens, action.creds);\n        yield call(saveTokens, data);\n        yield put({ type: LOGIN_SUCCESS });\n    } catch (e) {\n        yield put({ type: LOGIN_FAILURE });\n        yield call(putError, e.message);\n    }\n}\n\nexport function* handleLoginSuccess(): SagaIterator {\n    yield put({ type: GAME_LIST_REQUEST });\n}\n\n// Logout\n\nexport function* logoutToken(): SagaIterator {\n    const token = yield call(getTokenFromStorage);\n    if (token) {\n        const tokenValid = yield call(validateToken, token);\n        if (tokenValid) {\n            yield call(deleteAccessToken, token);\n        }\n    }\n}\n\nexport function* logoutRefreshToken(): SagaIterator {\n    const refreshTokenValue = yield call(getRefreshTokenFromStorage);\n    if (refreshTokenValue) {\n        const refreshTokenValid = yield call(validateToken, refreshTokenValue);\n        if (refreshTokenValid) {\n            yield call(deleteRefreshToken, refreshTokenValue);\n        }\n    }\n}\n\nexport function* handleLogoutRequest(): SagaIterator {\n    try {\n        yield call(logoutToken);\n        yield call(logoutRefreshToken);\n        yield call(cleanTokens);\n\n        yield put({ type: CARDSET_LIST_RESET });\n        yield put({ type: GAME_LIST_RESET });\n        yield put({ type: LOGOUT_SUCCESS });\n    } catch (e) {\n        yield put({ type: LOGOUT_FAILURE });\n        yield call(putError, e.message);\n    }\n}\n\n// Sign-up\n\nexport function* handleSignupRequest(action: SignUpRequest): SagaIterator {\n    try {\n        const data = yield call(registerUser, action.creds);\n        yield call(saveTokens, data);\n        yield put({ type: SIGNUP_SUCCESS });\n        yield put({ type: LOGIN_SUCCESS });\n    } catch (e) {\n        yield put({ type: SIGNUP_FAILURE });\n        yield call(putError, e.message);\n    }\n}\n\n// Init\nexport function* handleInitRequest(): SagaIterator {\n    try {\n        let token = yield call(getToken, false);\n        if (token) {\n            yield put({ type: LOGIN_SUCCESS });\n        }\n    } catch (e) {}\n}\n\n// Authorized Requests\nexport function* authorizedGetRequest(url: string): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(getRequest, url, token);\n}\n\nexport function* authorizedPostRequest(url: string, data: object): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(postRequest, url, token, data);\n}\n\nexport function* authorizedDeleteRequest(url: string): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(deleteRequest, url, token);\n}\n\nexport function* authorizedPostFormDataRequest(\n    url: string,\n    data: FormData,\n    progressCallback: (event: ProgressEvent) => void,\n    cancelToken: CancelToken,\n    cancelCallback: () => void,\n): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(postRequestFormDataCancelable, url, token, data, progressCallback, cancelToken, cancelCallback);\n}\n\nexport function* authorizedPutRequest(url: string, data: object): SagaIterator {\n    const token = yield call(getToken, true);\n    return yield call(putRequest, url, token, data);\n}\n\n// Game\nexport function* handleGameCreateRequest(action: GameCreateRequest): SagaIterator {\n    try {\n        yield call(authorizedPostRequest, '/api/games', { name: action.gamename });\n        yield put({\n            type: GAME_CREATE_SUCCESS,\n        });\n        yield put({ type: GAME_LIST_REQUEST });\n    } catch (e) {\n        yield put({ type: GAME_CREATE_FAILURE });\n        yield call(putError, e.message);\n    }\n}\n\nexport function* handleGameDeleteRequest(action: GameDeleteRequest): SagaIterator {\n    try {\n        yield call(authorizedDeleteRequest, '/api/games/' + action.gameId);\n        yield put({ type: GAME_LIST_REQUEST });\n    } catch (e) {\n        yield call(putError, e.message);\n    }\n}\n\nexport function* handleGameRenameRequest(action: GameRenameRequest): SagaIterator {\n    try {\n        yield call(delay, 500);\n        yield call(authorizedPutRequest, '/api/games/' + action.gameId, { name: action.newName });\n    } catch (e) {\n        yield call(putError, e.message);\n    }\n}\n\nexport function* handleGameListRequest(): SagaIterator {\n    try {\n        const resp = yield call(authorizedGetRequest, '/api/games');\n        const allIds = resp.data.games.map((g: GameType) => g.id);\n        const byId = resp.data.games.reduce((obj: GamesCollection, g: GameType) => {\n            obj[g.id] = g;\n            return obj;\n        }, {});\n        yield put({\n            type: GAME_LIST_SUCCESS,\n            allIds,\n            byId,\n        });\n    } catch (e) {\n        yield put({ type: GAME_LIST_FAILURE });\n        yield call(putError, e.message);\n    }\n}\n\nexport function* handleGameSelectRequest(action: GameSelectRequest): SagaIterator {\n    try {\n        const resp = yield call(authorizedGetRequest, '/api/games/' + action.id);\n        yield put({\n            type: GAME_SELECT_SUCCESS,\n            id: action.id,\n        });\n\n        if (action.updateCardSets) {\n            const allIds = resp.data.cardsets.map((g: CardSetType) => g.id);\n            const byId = resp.data.cardsets.reduce((obj: CardSetsCollection, g: CardSetType) => {\n                obj[g.id] = g;\n                return obj;\n            }, {});\n            yield put({\n                type: CARDSET_LIST_SUCCESS,\n                allIds,\n                byId,\n            });\n        }\n    } catch (e) {\n        yield put({ type: GAME_SELECT_FAILURE });\n        yield call(putError, e.message);\n    }\n}\n\nexport function* handleGameCreatePdfRequest(action: GameCreatePdfRequest): SagaIterator {\n    let progressId = null;\n    try {\n        progressId = yield call(putProgress, 'Generating PDF');\n\n        const token = yield call(getToken, true, true);\n\n        yield call(\n            generatePdfUsingWorker,\n            token,\n            action.collectionType,\n            action.collectionId,\n            action.pageWidth,\n            action.pageHeight,\n            action.topBottomMargin,\n            action.leftRightMargin,\n            action.verticalSpace,\n            action.horizontalSpace,\n            action.includeBleedingArea,\n            action.cutMarksForScissors,\n            action.cutMarksForGuillotine,\n            action.cutMarksInMarginArea,\n            action.cutMarksOnFrontSideOnly,\n        );\n        yield call(hideProgress, progressId);\n        yield call(putInfo, 'PDF generated.');\n        yield put({\n            type: GAME_CREATE_PDF_SUCCESS,\n        });\n    } catch (e) {\n        yield put({ type: GAME_CREATE_PDF_FAILURE });\n        if (progressId !== null) yield call(hideProgress, progressId);\n        yield call(putError, e.message);\n    }\n}\n\nexport function* handleGameCreatePngRequest(action: GameCreatePngRequest): SagaIterator {\n    let progressId = null;\n    try {\n        progressId = yield call(putProgress, 'Generating PNG');\n\n        const token = yield call(getToken, true, true);\n\n        yield call(generatePngUsingWorker, token, action.collectionType, action.collectionId, action.dpi);\n        yield call(hideProgress, progressId);\n        yield call(putInfo, 'PNG generated.');\n        yield put({\n            type: GAME_CREATE_PNG_SUCCESS,\n        });\n    } catch (e) {\n        yield put({ type: GAME_CREATE_PNG_FAILURE });\n        if (progressId !== null) yield call(hideProgress, progressId);\n        yield call(putError, e.message);\n    }\n}\n\n// Card Set\n\nexport function* handleCardSetCreateRequest(action: CardSetCreateRequest): SagaIterator {\n    try {\n        yield call(authorizedPostRequest, '/api/cardsets', {\n            name: action.cardsetname,\n            gameId: action.gameId,\n            data: JSON.stringify({ width: action.width, height: action.height }),\n        });\n        yield put({\n            type: CARDSET_CREATE_SUCCESS,\n        });\n        yield put(gameSelectRequest(action.gameId, true));\n    } catch (e) {\n        yield put({ type: CARDSET_CREATE_FAILURE });\n        yield call(putError, e.message);\n    }\n}\n\nexport function* handleCardSetDeleteRequest(action: CardSetDeleteRequest): SagaIterator {\n    try {\n        yield call(authorizedDeleteRequest, '/api/cardsets/' + action.cardSetId);\n        yield put({ type: GAME_LIST_REQUEST });\n\n        const state = yield select();\n        yield put(gameSelectRequest(state.games.active, true));\n    } catch (e) {\n        yield call(putError, e.message);\n    }\n}\n\nexport function* handleCardSetRenameRequest(action: CardSetRenameRequest): SagaIterator {\n    try {\n        yield call(delay, 500);\n        yield call(authorizedPutRequest, '/api/cardsets/' + action.cardSetId, { name: action.newName });\n    } catch (e) {\n        yield call(putError, e.message);\n    }\n}\n\nexport function* handleCardSetSelectRequest(action: CardSetSelectRequest): SagaIterator {\n    try {\n        const resp = yield call(authorizedGetRequest, '/api/cardsets/' + action.id);\n        const parsedData = JSON.parse(resp.data.data);\n        if (!('placeholdersAllIds' in parsedData) && 'placeholders' in parsedData) {\n            parsedData.placeholdersAllIds = Object.keys(parsedData.placeholders);\n        }\n\n        if (!('version' in parsedData)) {\n            parsedData.version = 2;\n            for (const plId in parsedData.placeholders) {\n                const placeholder = parsedData.placeholders[plId];\n                placeholder.x += BLEED_WIDTH;\n                placeholder.y += BLEED_WIDTH;\n            }\n        }\n\n        yield call(loadFontsUsedInPlaceholders, parsedData);\n        yield put({\n            type: CARDSET_SELECT_SUCCESS,\n            id: resp.data.id,\n            name: resp.data.name,\n            data: parsedData,\n        });\n        yield put(gameSelectRequest(resp.data.gameId, false));\n    } catch (e) {\n        yield put({ type: CARDSET_SELECT_FAILURE });\n        yield call(putError, e.message);\n    }\n}\n\nexport function* handleCardSetUploadImage(action: CardSetUploadImage): SagaIterator {\n    let progressId = null;\n    try {\n        progressId = yield call(putProgress, `Uploading ${action.file.name}`);\n        const formData = new FormData();\n        formData.set('gameId', action.gameId);\n        formData.append('image', action.file, action.file.name);\n\n        const data = yield call(\n            authorizedPostFormDataRequest,\n            '/api/images',\n            formData,\n            (event: ProgressEvent) => action.progress(event.lengthComputable, event.loaded, event.total),\n            action.cancelToken,\n            () => {\n                action.abort();\n            },\n        );\n        if (data !== undefined) {\n            // not cancelled\n            action.load(data.imageId.toString());\n            yield put({ type: CARDSET_UPLOAD_IMAGE_SUCCESS });\n            yield call(putInfo, `${action.file.name} uploaded`);\n        }\n        yield call(hideProgress, progressId);\n    } catch (e) {\n        yield put({ type: CARDSET_UPLOAD_IMAGE_FAILURE });\n        if (progressId !== null) yield call(hideProgress, progressId);\n        yield call(putError, e.message);\n        action.error(e.message);\n    }\n}\n\nexport function* handleCardSetDeleteImage(action: CardSetDeleteImage): SagaIterator {\n    try {\n        yield call(authorizedDeleteRequest, '/api/images/' + action.imageId);\n        action.load();\n    } catch (e) {\n        action.error(e.message);\n    }\n}\n\nfunction walkChildren(node: XmlNode, color: string) {\n    if (node.type === 'element') {\n        for (let child of node.children) {\n            if (child.type === 'element')\n                if (child.name === 'path') {\n                    child.attr['fill'] = color;\n                }\n            walkChildren(child, color);\n        }\n    }\n}\n\nfunction adjustSvg(data: string, preserveAspectRatio: boolean, color?: string): string {\n    const doc = new XmlDocument(data);\n    if (!preserveAspectRatio) {\n        doc.attr['preserveAspectRatio'] = 'none';\n    }\n\n    if (color) {\n        walkChildren(doc, color);\n    }\n\n    return btoa(doc.toString({ compressed: true }));\n}\n\nexport function* handleCardSetFitChange(action: CardSetChangeFitForActivePlaceholder): SagaIterator {\n    try {\n        yield call(delay, 100);\n        const state: State = yield select();\n\n        if (state.cardsets.activePlaceholder === null) {\n            return;\n        }\n\n        for (const cardId in state.cardsets.cardsById) {\n            const image = state.cardsets.images[cardId][state.cardsets.activePlaceholder];\n            if (image.url) {\n                const imageResp = yield call(authorizedGetRequest, image.url);\n                if (imageResp.headers['content-type'] === 'image/svg+xml') {\n                    if (action.fit === 'stretch') {\n                        const svg = adjustSvg(imageResp.data, false, image.color);\n                        yield put(cardSetChangeImageBase64(cardId, state.cardsets.activePlaceholder, svg));\n                    } else if (image.color) {\n                        const svg = adjustSvg(imageResp.data, true, image.color);\n                        yield put(cardSetChangeImageBase64(cardId, state.cardsets.activePlaceholder, svg));\n                    } else {\n                        yield put(cardSetChangeImageBase64(cardId, state.cardsets.activePlaceholder, undefined));\n                    }\n                }\n            }\n        }\n    } catch (e) {\n        yield call(putError, e.message);\n    }\n}\n\nexport function* handleCardSetChangeImage(action: CardSetChangeImage): SagaIterator {\n    try {\n        yield call(delay, 100);\n        const state: State = yield select();\n\n        const placeholder = state.cardsets.placeholders[action.placeholderId];\n        const imageInfo = state.cardsets.images[action.cardId][action.placeholderId];\n        if (placeholder.type === 'image' && imageInfo.url) {\n            const imageResp = yield call(authorizedGetRequest, imageInfo.url);\n\n            if (imageResp.headers['content-type'] === 'image/svg+xml') {\n                const name = placeholder.name || placeholder.id;\n\n                for (const plId in state.cardsets.placeholders) {\n                    const pl = state.cardsets.placeholders[plId];\n\n                    if ((pl.name === name || pl.id === name) && pl.type === 'image') {\n                        if (pl.fit === 'stretch') {\n                            const svg = adjustSvg(imageResp.data, false, imageInfo.color);\n                            yield put(cardSetChangeImageBase64(action.cardId, plId, svg));\n                        } else if (imageInfo.color) {\n                            const svg = adjustSvg(imageResp.data, true, imageInfo.color);\n                            yield put(cardSetChangeImageBase64(action.cardId, plId, svg));\n                        } else {\n                            yield put(cardSetChangeImageBase64(action.cardId, plId, undefined));\n                        }\n                    }\n                }\n            }\n        }\n    } catch (e) {\n        yield call(putError, e.message);\n    }\n}\n\nfunction closeHandler(e: Event) {\n    e.preventDefault();\n    e.returnValue = true;\n}\n\nfunction preventWindowClose() {\n    window.addEventListener('beforeunload', closeHandler);\n}\n\nfunction allowWindowClose() {\n    window.removeEventListener('beforeunload', closeHandler);\n}\n\nexport function* handleCardSetChange(): SagaIterator {\n    let progressId = null;\n\n    try {\n        preventWindowClose();\n        progressId = yield call(putProgress, 'Saving Card Set');\n\n        yield call(delay, 1000);\n        const state = yield select();\n\n        yield put({\n            type: CARDSET_UPDATE_DATA_REQUEST,\n        });\n\n        const cardsetId = state.cardsets.active;\n        const data = {\n            width: state.cardsets.width,\n            height: state.cardsets.height,\n            isTwoSided: state.cardsets.isTwoSided,\n            snappingDistance: state.cardsets.snappingDistance,\n            version: state.cardsets.version,\n            cardsAllIds: state.cardsets.cardsAllIds,\n            cardsById: state.cardsets.cardsById,\n            placeholdersAllIds: state.cardsets.placeholdersAllIds,\n            placeholders: state.cardsets.placeholders,\n            texts: state.cardsets.texts,\n            images: state.cardsets.images,\n            zoom: state.cardsets.zoom,\n        };\n\n        yield call(authorizedPutRequest, '/api/cardsets/' + cardsetId, {\n            name: state.cardsets.byId[cardsetId].name,\n            data: JSON.stringify(data),\n        });\n        yield call(hideProgress, progressId);\n        yield call(putInfo, 'Card Set saved');\n        yield put({\n            type: CARDSET_UPDATE_DATA_SUCCESS,\n        });\n        allowWindowClose();\n    } catch (e) {\n        yield put({ type: CARDSET_UPDATE_DATA_FAILURE });\n        if (progressId !== null) yield call(hideProgress, progressId);\n        yield call(putError, e.message);\n        allowWindowClose();\n    }\n}\n\n// Images\nexport function* handleImageListRequest(action: ImageListRequest): SagaIterator {\n    try {\n        yield call(delay, 200);\n        const state = yield select();\n\n        const filter = encodeURIComponent(action.filter);\n        const location = encodeURIComponent(action.location);\n        const game = encodeURIComponent(state.games.active);\n        const resp = yield call(authorizedGetRequest, `/api/images?name=${filter}&location=${location}&game=${game}`);\n        const images = resp.data.images;\n        yield put({\n            type: IMAGE_LIST_SUCCESS,\n            images,\n        });\n    } catch (e) {\n        yield put({ type: IMAGE_LIST_FAILURE });\n        yield call(putError, e.message);\n    }\n}\n\n// All\nexport function* rootSaga(): SagaIterator {\n    yield all([\n        takeEvery(MESSAGE_DISPLAY, handleMessageDisplay),\n        takeLatest(LOGIN_REQUEST, handleLoginRequest),\n        takeLatest(LOGIN_SUCCESS, handleLoginSuccess),\n        takeLatest(LOGOUT_REQUEST, handleLogoutRequest),\n        takeLatest(SIGNUP_REQUEST, handleSignupRequest),\n        takeLatest(GAME_CREATE_REQUEST, handleGameCreateRequest),\n        takeLatest(GAME_DELETE_REQUEST, handleGameDeleteRequest),\n        takeLatest(GAME_RENAME_REQUEST, handleGameRenameRequest),\n        takeLatest(GAME_LIST_REQUEST, handleGameListRequest),\n        takeLatest(GAME_SELECT_REQUEST, handleGameSelectRequest),\n        takeLatest(GAME_CREATE_PDF_REQUEST, handleGameCreatePdfRequest),\n        takeLatest(GAME_CREATE_PNG_REQUEST, handleGameCreatePngRequest),\n        takeLatest(CARDSET_CREATE_REQUEST, handleCardSetCreateRequest),\n        takeLatest(CARDSET_DELETE_REQUEST, handleCardSetDeleteRequest),\n        takeLatest(CARDSET_RENAME_REQUEST, handleCardSetRenameRequest),\n        takeLatest(CARDSET_SELECT_REQUEST, handleCardSetSelectRequest),\n        takeEvery(CARDSET_UPLOAD_IMAGE, handleCardSetUploadImage),\n        takeEvery(CARDSET_DELETE_IMAGE, handleCardSetDeleteImage),\n        takeEvery(CARDSET_CHANGE_FIT_FOR_ACTIVE_PLACEHOLDER, handleCardSetFitChange),\n        takeEvery(CARDSET_CHANGE_IMAGE, handleCardSetChangeImage),\n\n        takeLatest(CARDSET_CREATE_CARD, handleCardSetChange),\n        takeLatest(CARDSET_CLONE_CARD, handleCardSetChange),\n        takeLatest(CARDSET_REMOVE_CARD, handleCardSetChange),\n        takeLatest(CARDSET_UPDATE_CARD_COUNT, handleCardSetChange),\n        takeLatest(CARDSET_ADD_TEXT_PLACEHOLDER, handleCardSetChange),\n        takeLatest(CARDSET_ADD_IMAGE_PLACEHOLDER, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_PLACEHOLDER_NAME, handleCardSetChange),\n        takeLatest(CARDSET_REMOVE_ACTIVE_PLACEHOLDER, handleCardSetChange),\n        takeLatest(CARDSET_RAISE_ACTIVE_PLACEHOLDER_TO_TOP, handleCardSetChange),\n        takeLatest(CARDSET_LOWER_ACTIVE_PLACEHOLDER_TO_BOTTOM, handleCardSetChange),\n        takeLatest(CARDSET_LOCK_ACTIVE_PLACEHOLDER, handleCardSetChange),\n        takeLatest(CARDSET_UNLOCK_ACTIVE_PLACEHOLDER, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_FIT_FOR_ACTIVE_PLACEHOLDER, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_WIDTH, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_HEIGHT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_IS_TWO_SIDED, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_SNAPPING_DISTANCE, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_PLACEHOLDER_POSITION, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_PLACEHOLDER_SIZE, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_PLACEHOLDER_ANGLE, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_ALIGN, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_COLOR, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_VARIANT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY_AND_VARIANT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_SIZE, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_LINE_HEIGHT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_TEXT, handleCardSetChange),\n        takeLatest(CARDSET_CHANGE_IMAGE, handleCardSetChange),\n        takeLatest(CARDSET_SET_ZOOM, handleCardSetChange),\n        takeLatest(CARDSET_IMPORT_DATA, handleCardSetChange),\n\n        takeLatest(IMAGE_LIST_REQUEST, handleImageListRequest),\n\n        takeLatest(INIT_REQUEST, handleInitRequest),\n    ]);\n}\n","import { combineReducers } from 'redux';\nimport shortid from 'shortid';\n\nimport {\n    CARDSET_ADD_IMAGE_PLACEHOLDER,\n    CARDSET_ADD_TEXT_PLACEHOLDER,\n    CARDSET_CHANGE_ACTIVE_PLACEHOLDER_NAME,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_ALIGN,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_COLOR,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY_AND_VARIANT,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_SIZE,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_VARIANT,\n    CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_LINE_HEIGHT,\n    CARDSET_CHANGE_FIT_FOR_ACTIVE_PLACEHOLDER,\n    CARDSET_CHANGE_HEIGHT,\n    CARDSET_CHANGE_IMAGE,\n    CARDSET_CHANGE_IMAGE_BASE64,\n    CARDSET_CHANGE_IS_TWO_SIDED,\n    CARDSET_CHANGE_PLACEHOLDER_ANGLE,\n    CARDSET_CHANGE_PLACEHOLDER_POSITION,\n    CARDSET_CHANGE_PLACEHOLDER_SIZE,\n    CARDSET_CHANGE_SNAPPING_DISTANCE,\n    CARDSET_CHANGE_TEXT,\n    CARDSET_CHANGE_WIDTH,\n    CARDSET_CLONE_CARD,\n    CARDSET_CREATE_CARD,\n    CARDSET_CREATE_FAILURE,\n    CARDSET_CREATE_REQUEST,\n    CARDSET_CREATE_SUCCESS,\n    CARDSET_IMPORT_DATA,\n    CARDSET_LIST_FAILURE,\n    CARDSET_LIST_REQUEST,\n    CARDSET_LIST_RESET,\n    CARDSET_LIST_SUCCESS,\n    CARDSET_LOCK_ACTIVE_PLACEHOLDER,\n    CARDSET_LOWER_ACTIVE_PLACEHOLDER_TO_BOTTOM,\n    CARDSET_RAISE_ACTIVE_PLACEHOLDER_TO_TOP,\n    CARDSET_REMOVE_ACTIVE_PLACEHOLDER,\n    CARDSET_REMOVE_CARD,\n    CARDSET_RENAME_REQUEST,\n    CARDSET_SELECT_FAILURE,\n    CARDSET_SELECT_REQUEST,\n    CARDSET_SELECT_SUCCESS,\n    CARDSET_SET_ACTIVE_CARD_AND_PLACEHOLDER,\n    CARDSET_SET_SIDEBAR_STATE,\n    CARDSET_SET_ZOOM,\n    CARDSET_UNLOCK_ACTIVE_PLACEHOLDER,\n    CARDSET_UPDATE_CARD_COUNT,\n    CARDSET_UPDATE_DATA_FAILURE,\n    CARDSET_UPDATE_DATA_REQUEST,\n    CARDSET_UPDATE_DATA_SUCCESS,\n    CardSetAction,\n    GAME_CREATE_FAILURE,\n    GAME_CREATE_PDF_FAILURE,\n    GAME_CREATE_PDF_REQUEST,\n    GAME_CREATE_PDF_SUCCESS,\n    GAME_CREATE_PNG_FAILURE,\n    GAME_CREATE_PNG_REQUEST,\n    GAME_CREATE_PNG_SUCCESS,\n    GAME_CREATE_REQUEST,\n    GAME_CREATE_SUCCESS,\n    GAME_LIST_FAILURE,\n    GAME_LIST_REQUEST,\n    GAME_LIST_RESET,\n    GAME_LIST_SUCCESS,\n    GAME_RENAME_REQUEST,\n    GAME_SELECT_FAILURE,\n    GAME_SELECT_REQUEST,\n    GAME_SELECT_SUCCESS,\n    GameAction,\n    IMAGE_LIST_FAILURE,\n    IMAGE_LIST_REQUEST,\n    IMAGE_LIST_SUCCESS,\n    ImageListAction,\n    LOGIN_FAILURE,\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGOUT_SUCCESS,\n    LoginAction,\n    MESSAGE_DISPLAY,\n    MESSAGE_HIDE,\n    MessageAction,\n    SIGNUP_FAILURE,\n    SIGNUP_REQUEST,\n    SIGNUP_SUCCESS,\n    SidebarState,\n    SignUpAction,\n} from './actions';\nimport {\n    CURRENT_CARDSET_VERSION,\n    DEFAULT_FONT,\n    DEFAULT_FONT_SIZE,\n    DEFAULT_FONT_VARIANT,\n    DEFAULT_LINE_HEIGHT,\n} from './constants';\nimport {\n    CardSetsCollection,\n    CardsCollection,\n    GamesCollection,\n    IdsArray,\n    ImageArray,\n    ImagePlaceholderType,\n    MessageType,\n    PlaceholdersCollection,\n    PlaceholdersImageInfoByCardCollection,\n    PlaceholdersImageInfoCollection,\n    PlaceholdersTextInfoByCardCollection,\n    PlaceholdersTextInfoCollection,\n    TextPlaceholderType,\n} from './types';\n\nexport const ACTIVITY_CREATING = 0x1;\nexport const ACTIVITY_LISTING = 0x2;\nexport const ACTIVITY_SELECTING = 0x4;\nexport const ACTIVITY_CREATING_PDF = 0x8;\nexport const ACTIVITY_UPDATING = 0x10;\nexport const ACTIVITY_CREATING_PNG = 0x20;\n\nexport interface MessageState {\n    messages: MessageType[];\n}\n\nexport const DefaultMessageState: MessageState = {\n    messages: [],\n};\n\nexport interface AuthState {\n    isAuthenticated: boolean;\n    user: string;\n}\n\nexport const DefaultAuthState: AuthState = {\n    isAuthenticated: false,\n    user: '',\n};\n\nexport interface SignUpState {\n    signingup: boolean;\n}\n\nexport const DefaultSignUpState: SignUpState = {\n    signingup: false,\n};\n\nexport interface GameState {\n    byId: GamesCollection;\n    allIds: IdsArray;\n    activity: number;\n    active: string | null;\n}\n\nexport const DefaultGameState: GameState = {\n    byId: {},\n    allIds: [],\n    activity: 0,\n    active: null,\n};\n\nexport interface TextSettings {\n    align: string;\n    color: string;\n    fontFamily: string;\n    fontVariant: string;\n    fontSize: number;\n    lineHeight?: number;\n}\n\nexport interface CardSetState {\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    snappingDistance: number;\n    version: number;\n    byId: CardSetsCollection;\n    allIds: IdsArray;\n    activity: number;\n    active: string | null;\n    cardsAllIds: IdsArray;\n    cardsById: CardsCollection;\n    activeCard: string | null;\n    isBackActive: boolean;\n    activePlaceholder: string | null;\n    placeholders: PlaceholdersCollection;\n    placeholdersAllIds: IdsArray;\n    texts: PlaceholdersTextInfoByCardCollection;\n    images: PlaceholdersImageInfoByCardCollection;\n    textSettings: TextSettings;\n    activeSidebar: SidebarState | null;\n    zoom: number;\n}\n\nexport const DefaultCardSetState: CardSetState = {\n    width: 63.5,\n    height: 88.9,\n    isTwoSided: false,\n    snappingDistance: 1,\n    version: CURRENT_CARDSET_VERSION,\n    byId: {},\n    allIds: [],\n    activity: 0,\n    active: null,\n    placeholders: {},\n    placeholdersAllIds: [],\n    cardsById: {},\n    cardsAllIds: [],\n    activeCard: null,\n    isBackActive: false,\n    activePlaceholder: null,\n    texts: {},\n    images: {},\n    textSettings: {\n        align: 'left',\n        color: '#000000',\n        fontFamily: DEFAULT_FONT,\n        fontVariant: DEFAULT_FONT_VARIANT,\n        fontSize: DEFAULT_FONT_SIZE,\n        lineHeight: DEFAULT_LINE_HEIGHT,\n    },\n    activeSidebar: null,\n    zoom: 1,\n};\n\nexport interface ImageState {\n    activity: number;\n    filter: string;\n    images: ImageArray;\n}\n\nexport const DefaultImageState: ImageState = {\n    activity: 0,\n    filter: '',\n    images: [],\n};\n\nexport interface State {\n    message: MessageState;\n    auth: AuthState;\n    signup: SignUpState;\n    games: GameState;\n    cardsets: CardSetState;\n    images: ImageState;\n}\n\nexport const DefaultState: State = {\n    message: DefaultMessageState,\n    auth: DefaultAuthState,\n    signup: DefaultSignUpState,\n    games: DefaultGameState,\n    cardsets: DefaultCardSetState,\n    images: DefaultImageState,\n};\n\nexport function message(state: MessageState = DefaultMessageState, action: MessageAction): MessageState {\n    switch (action.type) {\n        case MESSAGE_DISPLAY:\n            const found = state.messages.find(m => m.id === action.message.id);\n            if (found) return state;\n\n            return {\n                ...state,\n                messages: state.messages.concat(action.message),\n            };\n        case MESSAGE_HIDE:\n            return Object.assign({}, state, {\n                messages: state.messages.filter(m => m.id !== action.messageId),\n            });\n        default:\n            return state;\n    }\n}\n\nexport function auth(state: AuthState = DefaultAuthState, action: LoginAction): AuthState {\n    switch (action.type) {\n        case LOGIN_REQUEST:\n            return Object.assign({}, state, {\n                isAuthenticated: false,\n                user: action.creds.username,\n            });\n        case LOGIN_SUCCESS:\n            return Object.assign({}, state, {\n                isAuthenticated: true,\n            });\n        case LOGIN_FAILURE:\n            return Object.assign({}, state, {\n                isAuthenticated: false,\n            });\n        case LOGOUT_SUCCESS:\n            return Object.assign({}, state, {\n                isAuthenticated: false,\n            });\n        default:\n            return state;\n    }\n}\n\nexport function signup(state: SignUpState = DefaultSignUpState, action: SignUpAction): SignUpState {\n    switch (action.type) {\n        case SIGNUP_REQUEST:\n            return Object.assign({}, state, {\n                signingup: true,\n            });\n        case SIGNUP_SUCCESS:\n            return Object.assign({}, state, {\n                signingup: false,\n            });\n        case SIGNUP_FAILURE:\n            return Object.assign({}, state, {\n                signingup: false,\n            });\n        default:\n            return state;\n    }\n}\n\nexport function games(state: GameState = DefaultGameState, action: GameAction): GameState {\n    switch (action.type) {\n        case GAME_CREATE_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_CREATING,\n            });\n        case GAME_CREATE_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING,\n            });\n        case GAME_CREATE_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING,\n            });\n        case GAME_RENAME_REQUEST:\n            const game = state.byId[action.gameId];\n\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    [game.id]: {\n                        ...game,\n                        name: action.newName,\n                    },\n                },\n            };\n        case GAME_LIST_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_LISTING,\n            });\n        case GAME_LIST_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_LISTING,\n                byId: action.byId,\n                allIds: action.allIds,\n            });\n        case GAME_LIST_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_LISTING,\n            });\n        case GAME_LIST_RESET:\n            return Object.assign({}, state, {\n                activity: 0,\n                byId: {},\n                allIds: [],\n            });\n        case GAME_SELECT_REQUEST:\n            return Object.assign({}, state, {\n                activity: ACTIVITY_SELECTING,\n            });\n        case GAME_SELECT_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_SELECTING,\n                active: action.id,\n            });\n        case GAME_SELECT_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_SELECTING,\n            });\n        case GAME_CREATE_PDF_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_CREATING_PDF,\n            });\n        case GAME_CREATE_PDF_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING_PDF,\n            });\n        case GAME_CREATE_PDF_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING_PDF,\n            });\n        case GAME_CREATE_PNG_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_CREATING_PNG,\n            });\n        case GAME_CREATE_PNG_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING_PNG,\n            });\n        case GAME_CREATE_PNG_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING_PNG,\n            });\n        default:\n            return state;\n    }\n}\n\nexport function cardsets(state: CardSetState = DefaultCardSetState, action: CardSetAction): CardSetState {\n    switch (action.type) {\n        case CARDSET_CREATE_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_CREATING,\n            });\n        case CARDSET_CREATE_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING,\n            });\n        case CARDSET_CREATE_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_CREATING,\n            });\n        case CARDSET_RENAME_REQUEST:\n            const cardset = state.byId[action.cardSetId];\n\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    [cardset.id]: {\n                        ...cardset,\n                        name: action.newName,\n                    },\n                },\n            };\n        case CARDSET_UPDATE_DATA_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_UPDATING,\n            });\n        case CARDSET_UPDATE_DATA_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_UPDATING,\n            });\n        case CARDSET_UPDATE_DATA_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_UPDATING,\n            });\n        case CARDSET_LIST_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_LISTING,\n            });\n        case CARDSET_LIST_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_LISTING,\n                byId: action.byId,\n                allIds: action.allIds,\n            });\n        case CARDSET_LIST_RESET:\n            return Object.assign({}, state, {\n                activity: 0,\n                byId: {},\n                allIds: [],\n            });\n        case CARDSET_LIST_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_LISTING,\n            });\n        case CARDSET_SELECT_REQUEST:\n            return Object.assign({}, state, {\n                activity: state.activity | ACTIVITY_SELECTING,\n            });\n        case CARDSET_SELECT_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_SELECTING,\n                active: action.id,\n                byId: Object.assign({}, state.byId, {\n                    [action.id]: {\n                        id: action.id,\n                        name: action.name,\n                    },\n                }),\n                width: action.data.width || 63.5,\n                height: action.data.height || 88.9,\n                isTwoSided: action.data.isTwoSided || false,\n                snappingDistance: action.data.snappingDistance || 1,\n                version: action.data.version,\n                cardsAllIds: action.data.cardsAllIds || [],\n                cardsById: action.data.cardsById || {},\n                placeholders: action.data.placeholders || {},\n                placeholdersAllIds: action.data.placeholdersAllIds || [],\n                texts: action.data.texts || {},\n                images: action.data.images || {},\n                activeCard: null,\n                activePlaceholder: null,\n                isBackActive: false,\n                zoom: action.data.zoom || 1,\n            });\n        case CARDSET_SELECT_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_SELECTING,\n            });\n        case CARDSET_CREATE_CARD:\n            return {\n                ...state,\n                cardsById: {\n                    ...state.cardsById,\n                    [action.card.id]: action.card,\n                },\n                cardsAllIds: state.cardsAllIds ? state.cardsAllIds.concat(action.card.id) : [action.card.id],\n            };\n        case CARDSET_CLONE_CARD: {\n            let newCard = { ...action.card, id: shortid.generate() };\n\n            const index = state.cardsAllIds.indexOf(action.card.id) + 1;\n            const cardsAllIds = [...state.cardsAllIds.slice(0, index), newCard.id, ...state.cardsAllIds.slice(index)];\n\n            return {\n                ...state,\n                cardsById: {\n                    ...state.cardsById,\n                    [newCard.id]: newCard,\n                },\n                cardsAllIds,\n                texts: {\n                    ...state.texts,\n                    [newCard.id]: {\n                        ...state.texts[action.card.id],\n                    },\n                },\n                images: {\n                    ...state.images,\n                    [newCard.id]: {\n                        ...state.images[action.card.id],\n                    },\n                },\n            };\n        }\n        case CARDSET_REMOVE_CARD: {\n            const cardId = action.card.id;\n            let cardsById = { ...state.cardsById };\n            delete cardsById[cardId];\n\n            let texts = { ...state.texts };\n            if (cardId in texts) {\n                delete texts[cardId];\n            }\n\n            let images = { ...state.images };\n            if (cardId in images) {\n                delete images[cardId];\n            }\n\n            let activeCard = state.activeCard === cardId ? null : state.activeCard;\n\n            const cardsAllIds = state.cardsAllIds.filter(id => id !== cardId);\n\n            let placeholders = state.placeholders;\n            let placeholdersAllIds = state.placeholdersAllIds;\n            if (cardsAllIds.length === 0) {\n                placeholders = {};\n                placeholdersAllIds = [];\n            }\n\n            return {\n                ...state,\n                cardsById,\n                cardsAllIds,\n                placeholders,\n                placeholdersAllIds,\n                texts,\n                images,\n                activeCard,\n            };\n        }\n        case CARDSET_UPDATE_CARD_COUNT: {\n            const cardId = action.card.id;\n            let card = { ...state.cardsById[cardId] };\n            card.count = action.count;\n\n            return {\n                ...state,\n                cardsById: {\n                    ...state.cardsById,\n                    [cardId]: card,\n                },\n            };\n        }\n        case CARDSET_ADD_TEXT_PLACEHOLDER: {\n            let textSettings = { ...state.textSettings };\n            const id = shortid.generate();\n            const textPlaceholder: TextPlaceholderType = {\n                id,\n                type: 'text',\n                x: 5,\n                y: 5,\n                width: 20,\n                height: 10,\n                angle: 0,\n                align: textSettings.align,\n                color: textSettings.color,\n                fontFamily: textSettings.fontFamily,\n                fontVariant: textSettings.fontVariant,\n                fontSize: textSettings.fontSize,\n                lineHeight: textSettings.lineHeight || DEFAULT_LINE_HEIGHT,\n                isOnBack: state.isBackActive,\n            };\n\n            return {\n                ...state,\n                placeholders: {\n                    ...state.placeholders,\n                    [id]: textPlaceholder,\n                },\n                placeholdersAllIds: [...state.placeholdersAllIds, id],\n            };\n        }\n        case CARDSET_ADD_IMAGE_PLACEHOLDER: {\n            const id = shortid.generate();\n            const imagePlaceholder: ImagePlaceholderType = {\n                id,\n                type: 'image',\n                x: 5,\n                y: 5,\n                width: 20,\n                height: 20,\n                angle: 0,\n                isOnBack: state.isBackActive,\n            };\n\n            return {\n                ...state,\n                placeholders: {\n                    ...state.placeholders,\n                    [id]: imagePlaceholder,\n                },\n                placeholdersAllIds: [...state.placeholdersAllIds, id],\n            };\n        }\n        case CARDSET_CHANGE_ACTIVE_PLACEHOLDER_NAME: {\n            if (state.activePlaceholder !== null) {\n                let placeholders = { ...state.placeholders };\n                placeholders[state.activePlaceholder] = {\n                    ...placeholders[state.activePlaceholder],\n                    name: action.name,\n                };\n\n                return {\n                    ...state,\n                    placeholders,\n                };\n            }\n\n            return state;\n        }\n\n        case CARDSET_REMOVE_ACTIVE_PLACEHOLDER: {\n            const placeholderId = state.activePlaceholder;\n            if (placeholderId !== undefined && placeholderId !== null) {\n                const activePlaceholder = state.placeholders[placeholderId];\n                if (activePlaceholder.locked) {\n                    return state;\n                }\n\n                let placeholders = { ...state.placeholders };\n                let placeholdersAllIds = [...state.placeholdersAllIds];\n                if (placeholderId in placeholders) {\n                    delete placeholders[placeholderId];\n                }\n                let placeholderIndex = placeholdersAllIds.indexOf(placeholderId);\n                if (placeholderIndex !== -1) {\n                    placeholdersAllIds.splice(placeholderIndex, 1);\n                }\n\n                let texts = { ...state.texts };\n                for (const cardId in texts) {\n                    if (placeholderId in texts[cardId]) {\n                        let placeholderTexts = { ...texts[cardId] };\n                        delete placeholderTexts[placeholderId];\n                        texts[cardId] = placeholderTexts;\n                    }\n                }\n\n                let images = { ...state.images };\n                for (const cardId in images) {\n                    if (placeholderId in images[cardId]) {\n                        let placeholderImages = { ...images[cardId] };\n                        delete placeholderImages[placeholderId];\n                        images[cardId] = placeholderImages;\n                    }\n                }\n\n                return {\n                    ...state,\n                    placeholders,\n                    placeholdersAllIds,\n                    texts,\n                    images,\n                    activePlaceholder: null,\n                };\n            }\n            return state;\n        }\n        case CARDSET_RAISE_ACTIVE_PLACEHOLDER_TO_TOP: {\n            let placeholdersAllIds = [...state.placeholdersAllIds];\n\n            if (state.activePlaceholder !== null) {\n                let index = placeholdersAllIds.indexOf(state.activePlaceholder);\n                if (index !== -1) {\n                    placeholdersAllIds.push(placeholdersAllIds.splice(index, 1)[0]);\n                }\n            }\n\n            return {\n                ...state,\n                placeholdersAllIds,\n            };\n        }\n        case CARDSET_LOWER_ACTIVE_PLACEHOLDER_TO_BOTTOM: {\n            let placeholdersAllIds = [...state.placeholdersAllIds];\n\n            if (state.activePlaceholder !== null) {\n                let index = placeholdersAllIds.indexOf(state.activePlaceholder);\n                if (index !== -1) {\n                    placeholdersAllIds.unshift(placeholdersAllIds.splice(index, 1)[0]);\n                }\n            }\n\n            return {\n                ...state,\n                placeholdersAllIds,\n            };\n        }\n        case CARDSET_LOCK_ACTIVE_PLACEHOLDER: {\n            if (state.activePlaceholder) {\n                const placeholder = {\n                    ...state.placeholders[state.activePlaceholder],\n                    locked: true,\n                };\n\n                return {\n                    ...state,\n                    placeholders: {\n                        ...state.placeholders,\n                        [state.activePlaceholder]: placeholder,\n                    },\n                };\n            }\n\n            return state;\n        }\n        case CARDSET_UNLOCK_ACTIVE_PLACEHOLDER: {\n            if (state.activePlaceholder) {\n                const placeholder = {\n                    ...state.placeholders[state.activePlaceholder],\n                    locked: false,\n                };\n\n                return {\n                    ...state,\n                    placeholders: {\n                        ...state.placeholders,\n                        [state.activePlaceholder]: placeholder,\n                    },\n                };\n            }\n\n            return state;\n        }\n        case CARDSET_CHANGE_FIT_FOR_ACTIVE_PLACEHOLDER: {\n            if (state.activePlaceholder) {\n                const placeholder = {\n                    ...state.placeholders[state.activePlaceholder],\n                    fit: action.fit,\n                };\n\n                return {\n                    ...state,\n                    placeholders: {\n                        ...state.placeholders,\n                        [state.activePlaceholder]: placeholder,\n                    },\n                };\n            }\n\n            return state;\n        }\n        case CARDSET_CHANGE_WIDTH: {\n            return {\n                ...state,\n                width: action.width,\n            };\n        }\n        case CARDSET_CHANGE_HEIGHT: {\n            return {\n                ...state,\n                height: action.height,\n            };\n        }\n        case CARDSET_CHANGE_IS_TWO_SIDED: {\n            return {\n                ...state,\n                isTwoSided: action.isTwoSided,\n            };\n        }\n        case CARDSET_CHANGE_SNAPPING_DISTANCE: {\n            return {\n                ...state,\n                snappingDistance: action.snappingDistance,\n            };\n        }\n        case CARDSET_CHANGE_PLACEHOLDER_POSITION: {\n            let x = action.x;\n            let y = action.y;\n            let snappingDistance = state.snappingDistance;\n\n            if (snappingDistance !== 0) {\n                x = Math.round(x / snappingDistance) * snappingDistance;\n                y = Math.round(y / snappingDistance) * snappingDistance;\n            }\n\n            const placeholder = {\n                ...state.placeholders[action.placeholder.id],\n                x,\n                y,\n            };\n\n            return {\n                ...state,\n                placeholders: {\n                    ...state.placeholders,\n                    [action.placeholder.id]: placeholder,\n                },\n            };\n        }\n        case CARDSET_CHANGE_PLACEHOLDER_SIZE: {\n            let width = action.width;\n            let height = action.height;\n            let snappingDistance = state.snappingDistance;\n\n            if (snappingDistance !== 0) {\n                width = Math.round(width / snappingDistance) * snappingDistance;\n                height = Math.round(height / snappingDistance) * snappingDistance;\n            }\n\n            const placeholder = {\n                ...state.placeholders[action.placeholder.id],\n                width,\n                height,\n            };\n\n            return {\n                ...state,\n                placeholders: {\n                    ...state.placeholders,\n                    [action.placeholder.id]: placeholder,\n                },\n            };\n        }\n        case CARDSET_CHANGE_PLACEHOLDER_ANGLE: {\n            const placeholder = {\n                ...state.placeholders[action.placeholder.id],\n                angle: action.angle,\n            };\n\n            return {\n                ...state,\n                placeholders: {\n                    ...state.placeholders,\n                    [action.placeholder.id]: placeholder,\n                },\n            };\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_ALIGN: {\n            let textSettings = {\n                ...state.textSettings,\n                align: action.align,\n            };\n\n            if (state.activePlaceholder) {\n                const textPlaceholder = {\n                    ...state.placeholders[state.activePlaceholder],\n                    align: action.align,\n                };\n\n                return {\n                    ...state,\n                    placeholders: {\n                        ...state.placeholders,\n                        [state.activePlaceholder]: textPlaceholder,\n                    },\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_COLOR: {\n            let textSettings = {\n                ...state.textSettings,\n                color: action.color,\n            };\n\n            if (state.activePlaceholder) {\n                const textPlaceholder = {\n                    ...state.placeholders[state.activePlaceholder],\n                    color: action.color,\n                };\n\n                return {\n                    ...state,\n                    placeholders: {\n                        ...state.placeholders,\n                        [state.activePlaceholder]: textPlaceholder,\n                    },\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY: {\n            let textSettings = {\n                ...state.textSettings,\n                color: action.fontFamily,\n            };\n\n            if (state.activePlaceholder) {\n                const textPlaceholder = {\n                    ...state.placeholders[state.activePlaceholder],\n                    fontFamily: action.fontFamily,\n                };\n\n                return {\n                    ...state,\n                    placeholders: {\n                        ...state.placeholders,\n                        [state.activePlaceholder]: textPlaceholder,\n                    },\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_VARIANT: {\n            let textSettings = {\n                ...state.textSettings,\n                color: action.fontVariant,\n            };\n\n            if (state.activePlaceholder) {\n                const textPlaceholder = {\n                    ...state.placeholders[state.activePlaceholder],\n                    fontVariant: action.fontVariant,\n                };\n\n                return {\n                    ...state,\n                    placeholders: {\n                        ...state.placeholders,\n                        [state.activePlaceholder]: textPlaceholder,\n                    },\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_FAMILY_AND_VARIANT: {\n            let textSettings = {\n                ...state.textSettings,\n                fontFamily: action.fontFamily,\n                fontVariant: action.fontVariant,\n            };\n\n            if (state.activePlaceholder) {\n                const textPlaceholder = {\n                    ...state.placeholders[state.activePlaceholder],\n                    fontFamily: action.fontFamily,\n                    fontVariant: action.fontVariant,\n                };\n\n                return {\n                    ...state,\n                    placeholders: {\n                        ...state.placeholders,\n                        [state.activePlaceholder]: textPlaceholder,\n                    },\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_FONT_SIZE: {\n            let textSettings = {\n                ...state.textSettings,\n                fontSize: action.fontSize,\n            };\n\n            if (state.activePlaceholder) {\n                const textPlaceholder = {\n                    ...state.placeholders[state.activePlaceholder],\n                    fontSize: action.fontSize,\n                };\n\n                return {\n                    ...state,\n                    placeholders: {\n                        ...state.placeholders,\n                        [state.activePlaceholder]: textPlaceholder,\n                    },\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_ACTIVE_TEXT_PLACEHOLDER_LINE_HEIGHT: {\n            let textSettings = {\n                ...state.textSettings,\n                lineHeight: action.lineHeight,\n            };\n\n            if (state.activePlaceholder) {\n                const textPlaceholder = {\n                    ...state.placeholders[state.activePlaceholder],\n                    lineHeight: action.lineHeight,\n                };\n\n                return {\n                    ...state,\n                    placeholders: {\n                        ...state.placeholders,\n                        [state.activePlaceholder]: textPlaceholder,\n                    },\n                    textSettings,\n                };\n            } else {\n                return {\n                    ...state,\n                    textSettings,\n                };\n            }\n        }\n        case CARDSET_CHANGE_TEXT: {\n            let placeholdersByCard: PlaceholdersTextInfoCollection = {};\n            if (state.texts && action.cardId in state.texts) {\n                placeholdersByCard = { ...state.texts[action.cardId] };\n            }\n\n            const placeholder = state.placeholders[action.placeholderId];\n            const name = placeholder.name || placeholder.id;\n\n            for (const plId in state.placeholders) {\n                const pl = state.placeholders[plId];\n\n                if ((pl.name === name || pl.id === name) && pl.type === 'text') {\n                    placeholdersByCard[plId] = action.textInfo;\n                }\n            }\n\n            return {\n                ...state,\n                texts: {\n                    ...state.texts,\n                    [action.cardId]: placeholdersByCard,\n                },\n            };\n        }\n        case CARDSET_CHANGE_IMAGE: {\n            let placeholdersByCard: PlaceholdersImageInfoCollection = {};\n            if (state.images && action.cardId in state.images) {\n                placeholdersByCard = { ...state.images[action.cardId] };\n            }\n\n            const placeholder = state.placeholders[action.placeholderId];\n            const name = placeholder.name || placeholder.id;\n\n            for (const plId in state.placeholders) {\n                const pl = state.placeholders[plId];\n\n                if ((pl.name === name || pl.id === name) && pl.type === 'image') {\n                    placeholdersByCard[plId] = {\n                        ...placeholdersByCard[plId],\n                        ...action.imageInfo,\n                    };\n                }\n            }\n\n            return {\n                ...state,\n                images: {\n                    ...state.images,\n                    [action.cardId]: placeholdersByCard,\n                },\n            };\n        }\n\n        case CARDSET_CHANGE_IMAGE_BASE64: {\n            let placeholdersByCard: PlaceholdersImageInfoCollection = {};\n            if (state.images && action.cardId in state.images) {\n                placeholdersByCard = { ...state.images[action.cardId] };\n            }\n\n            placeholdersByCard[action.placeholderId] = {\n                ...placeholdersByCard[action.placeholderId],\n                base64: action.base64,\n            };\n\n            return {\n                ...state,\n                images: {\n                    ...state.images,\n                    [action.cardId]: placeholdersByCard,\n                },\n            };\n        }\n        case CARDSET_SET_ACTIVE_CARD_AND_PLACEHOLDER: {\n            let textSettings = { ...state.textSettings };\n            let activeSidebar = state.activeSidebar;\n\n            if (activeSidebar !== SidebarState.Measurements && action.cardId !== null) {\n                activeSidebar = SidebarState.Details;\n            }\n\n            if (action.placeholderId !== null) {\n                const placeholder = state.placeholders[action.placeholderId];\n                if (placeholder.type === 'text') {\n                    textSettings.align = placeholder.align;\n                    textSettings.color = placeholder.color;\n                    textSettings.fontFamily = placeholder.fontFamily;\n                    textSettings.fontVariant = placeholder.fontVariant;\n                    textSettings.fontSize = placeholder.fontSize;\n                    textSettings.lineHeight = placeholder.lineHeight;\n\n                    if (activeSidebar !== SidebarState.Measurements) {\n                        activeSidebar = SidebarState.Text;\n                    }\n                } else {\n                    if (activeSidebar !== SidebarState.Measurements) {\n                        activeSidebar = SidebarState.Image;\n                    }\n                }\n            }\n\n            return {\n                ...state,\n                activeCard: action.cardId,\n                isBackActive: action.isBackActive,\n                activePlaceholder: action.placeholderId,\n                textSettings,\n                activeSidebar,\n            };\n        }\n\n        case CARDSET_SET_SIDEBAR_STATE: {\n            return {\n                ...state,\n                activeSidebar: action.sidebarState,\n            };\n        }\n        case CARDSET_SET_ZOOM: {\n            return {\n                ...state,\n                zoom: action.zoom,\n            };\n        }\n        case CARDSET_IMPORT_DATA: {\n            return {\n                ...state,\n                ...action.data,\n            };\n        }\n        default:\n            return state;\n    }\n}\n\nexport function images(state: ImageState = DefaultImageState, action: ImageListAction): ImageState {\n    switch (action.type) {\n        case IMAGE_LIST_REQUEST:\n            return Object.assign({}, state, {\n                filter: action.filter,\n                activity: state.activity | ACTIVITY_LISTING,\n            });\n        case IMAGE_LIST_SUCCESS:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_LISTING,\n                images: action.images,\n            });\n        case IMAGE_LIST_FAILURE:\n            return Object.assign({}, state, {\n                activity: state.activity & ~ACTIVITY_LISTING,\n            });\n        default:\n            return state;\n    }\n}\n\nconst reducers = combineReducers({\n    message,\n    auth,\n    signup,\n    games,\n    cardsets,\n    images,\n});\n\nexport default reducers;\n","import { Ghost, Browser } from 'react-kawaii';\nimport React, { Component } from 'react';\n\nexport enum Character {\n    Ghost,\n    Browser,\n}\ninterface Props {\n    character: Character;\n    mood?: string;\n}\n\nexport default class KawaiiMessage extends Component<Props> {\n    render() {\n        const { character, mood } = this.props;\n\n        return (\n            <div\n                style={{\n                    marginTop: '1em',\n                    marginBottom: '1em',\n                    padding: '1em',\n                    borderRadius: '1em',\n                    backgroundColor: 'var(--color-2)',\n                    display: 'grid',\n                    grid: 'auto-flow / minmax(120px, auto) 1fr',\n                }}\n            >\n                {character === Character.Ghost && <Ghost size={120} mood={mood || 'blissful'} color=\"#faebef\" />}\n                {character === Character.Browser && <Browser size={120} mood={mood || 'blissful'} color=\"#faebef\" />}\n                <div style={{ marginLeft: '1em' }}>{this.props.children}</div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nexport default class AboutPage extends Component {\n    render() {\n        return (\n            <div>\n                <h2>About</h2>\n                <p>\n                    \"Card-a-mon\" is card game development tool. At the moment it is project of single person (me) with a\n                    vision. My aim is to create affordable and practical tool to develop card games from A (prototyping)\n                    to Z (printing). If you have ideas, suggestions, proposals, comments and etc. then you can contact\n                    me by e-mail <a href=\"mailto:dalius@ffff.lt\">dalius@ffff.lt</a>.\n                </p>\n                <h2>Credits</h2>\n                This project is available because of number amazing open source projects. Some of them:\n                <ul>\n                    <li>\n                        <a href=\"https://reactjs.org/\">React</a> and all the ecosystem around it.\n                    </li>\n                    <li>\n                        <a href=\"https://fonts.google.com/\">Google Fonts</a>\n                    </li>\n                    <li>\n                        <a href=\"https://github.com/game-icons/icons\">Game icons</a>\n                    </li>\n                    <li>\n                        <a href=\"http://pdfkit.org/\">PDFKit</a>\n                    </li>\n                </ul>\n                <p>... and many more.</p>\n            </div>\n        );\n    }\n}\n","import { connect } from 'react-redux';\nimport React from 'react';\n\nimport { Dispatch } from '../actions';\nimport { State } from '../reducers';\nimport resize from './resize.svg';\nimport rotate from './rotate.svg';\nimport style from './FieldController.module.css';\n\ninterface OwnProps {\n    cardId: string;\n    placeholderId: string;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    angle: number;\n    children: React.ReactNode;\n    onDrag: (x: number, y: number) => void;\n    onResize: (width: number, height: number) => void;\n    onRotate: (angle: number) => void;\n    cardWidth: number;\n    cardHeight: number;\n    ppmm: number;\n}\n\ninterface StateProps {\n    isActive: boolean;\n    isActivePlaceholder: boolean;\n    isLocked: boolean;\n    snappingDistance: number;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass FieldController extends React.Component<Props> {\n    moving: boolean;\n    cDiv: React.RefObject<HTMLDivElement>;\n    resizeDiv: React.RefObject<HTMLImageElement>;\n    rotateDiv: React.RefObject<HTMLImageElement>;\n    relX: number;\n    relY: number;\n    startX: number;\n    startY: number;\n    originalW: number;\n    originalH: number;\n    rotatedPointX: number;\n    rotatedPointY: number;\n    centerX: number;\n    centerY: number;\n    originalAngle: number;\n    currentAngle: number;\n    activatedUsingTouch: boolean;\n    originalBodyCursor: string | null;\n\n    constructor(props: Props) {\n        super(props);\n        this.cDiv = React.createRef();\n        this.resizeDiv = React.createRef();\n        this.rotateDiv = React.createRef();\n        this.currentAngle = props.angle;\n        this.moving = false;\n        this.relX = 0;\n        this.relY = 0;\n        this.startX = 0;\n        this.startY = 0;\n        this.originalW = 0;\n        this.originalH = 0;\n        this.rotatedPointX = 0;\n        this.rotatedPointY = 0;\n        this.centerX = 0;\n        this.centerY = 0;\n        this.originalAngle = 0;\n        this.activatedUsingTouch = false;\n        this.originalBodyCursor = null;\n    }\n\n    componentDidMount() {\n        if (this.cDiv.current === null) return;\n        if (this.resizeDiv.current === null) return;\n        if (this.rotateDiv.current === null) return;\n\n        this.originalBodyCursor = document.body.style.cursor;\n\n        this.cDiv.current.addEventListener('dragstart', this.handleBrowserDragStart);\n        this.cDiv.current.addEventListener('mousedown', this.handleMouseDown);\n        this.cDiv.current.addEventListener('touchstart', this.handleTouchStart);\n        this.resizeDiv.current.addEventListener('mousedown', this.handleResizeMouseDown);\n        this.resizeDiv.current.addEventListener('touchstart', this.handleResizeTouchStart);\n        this.rotateDiv.current.addEventListener('mousedown', this.handleRotateMouseDown);\n        this.rotateDiv.current.addEventListener('touchstart', this.handleRotateTouchStart);\n    }\n\n    componentDidUpdate() {\n        if (this.cDiv.current === null) return;\n\n        this.currentAngle = this.props.angle;\n    }\n\n    rotateVec = (x: number, y: number, a: number) => {\n        const sinA = Math.sin(a);\n        const cosA = Math.cos(a);\n        const rx = cosA * x - sinA * y;\n        const ry = sinA * x + cosA * y;\n\n        return { rx, ry };\n    };\n\n    handleBrowserDragStart = (event: DragEvent) => {\n        event.stopPropagation();\n        event.preventDefault();\n    };\n\n    // Dragging handling\n\n    handleMouseDown = (event: MouseEvent) => {\n        this.handleDragStart(event);\n\n        document.addEventListener('mousemove', this.handleMouseMove);\n        document.addEventListener('mouseup', this.handleMouseUp);\n        event.stopPropagation();\n    };\n\n    handleTouchStart = (event: TouchEvent) => {\n        this.handleDragStart(event.changedTouches[0]);\n\n        document.addEventListener('touchmove', this.handleTouchMove, { passive: false });\n        document.addEventListener('touchend', this.handleTouchEnd, { passive: false });\n        event.stopPropagation();\n    };\n\n    handleDragStart = (co: { clientX: number; clientY: number }) => {\n        if (this.cDiv.current === null) return;\n\n        this.cDiv.current.style.cursor = 'grabbing';\n\n        this.relX = co.clientX - this.cDiv.current.offsetLeft;\n        this.relY = co.clientY - this.cDiv.current.offsetTop;\n    };\n\n    handleMouseUp = (event: MouseEvent) => {\n        this.handleComplete(event, false);\n\n        document.removeEventListener('mousemove', this.handleMouseMove);\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleTouchEnd = (event: TouchEvent) => {\n        this.handleComplete(event, true);\n\n        document.removeEventListener('touchmove', this.handleTouchMove);\n        document.removeEventListener('touchend', this.handleTouchEnd);\n    };\n\n    handleComplete = (event: Event, isTouchEvent: boolean) => {\n        const { isLocked } = this.props;\n\n        if (this.cDiv.current === null) return;\n        if (this.moving && !isLocked) {\n            this.props.onDrag(this.cDiv.current.offsetLeft, this.cDiv.current.offsetTop);\n            this.moving = false;\n        }\n        this.activatedUsingTouch = isTouchEvent;\n\n        this.cDiv.current.style.cursor = 'grab';\n\n        event.preventDefault();\n    };\n\n    handleMouseMove = (event: MouseEvent) => {\n        this.handleDragMove(event, event.ctrlKey);\n        event.preventDefault();\n    };\n\n    handleTouchMove = (event: TouchEvent) => {\n        this.handleDragMove(event.changedTouches[0], event.ctrlKey);\n        event.preventDefault();\n    };\n\n    handleDragMove = (co: { clientX: number; clientY: number }, disableSnapping: boolean) => {\n        const { isLocked } = this.props;\n\n        if (this.cDiv.current === null || isLocked) return;\n        const { ppmm, snappingDistance } = this.props;\n        this.moving = true;\n\n        let x = co.clientX - this.relX;\n        let y = co.clientY - this.relY;\n\n        if (!disableSnapping && snappingDistance !== 0) {\n            x = Math.round(x / ppmm / snappingDistance) * snappingDistance * ppmm;\n            y = Math.round(y / ppmm / snappingDistance) * snappingDistance * ppmm;\n        }\n\n        this.cDiv.current.style.left = x + 'px';\n        this.cDiv.current.style.top = y + 'px';\n    };\n\n    // Resize handling\n\n    handleResizeMouseDown = (event: MouseEvent) => {\n        this.handleResizeStart(event);\n\n        document.addEventListener('mousemove', this.handleResizeMouseMove);\n        document.addEventListener('mouseup', this.handleResizeMouseUp);\n        event.stopPropagation();\n        event.preventDefault();\n    };\n\n    handleResizeTouchStart = (event: TouchEvent) => {\n        this.handleResizeStart(event.changedTouches[0]);\n\n        document.addEventListener('touchmove', this.handleResizeTouchMove, { passive: false });\n        document.addEventListener('touchend', this.handleResizeTouchEnd, { passive: false });\n        event.stopPropagation();\n    };\n\n    handleResizeStart = (co: { clientX: number; clientY: number }) => {\n        const { isLocked } = this.props;\n\n        if (this.cDiv.current === null || isLocked) return;\n\n        document.body.style.cursor = `url(${resize}), auto`;\n\n        this.originalW = this.cDiv.current.clientWidth;\n        this.originalH = this.cDiv.current.clientHeight;\n\n        const dx = this.cDiv.current.clientWidth / 2;\n        const dy = this.cDiv.current.clientHeight / 2;\n        const { rx, ry } = this.rotateVec(-dx, -dy, this.currentAngle);\n\n        this.rotatedPointX = this.cDiv.current.offsetLeft + dx + rx;\n        this.rotatedPointY = this.cDiv.current.offsetTop + dy + ry;\n\n        this.startX = co.clientX;\n        this.startY = co.clientY;\n    };\n\n    handleResizeMouseUp = (event: MouseEvent) => {\n        this.handleResizeComplete(event);\n\n        document.removeEventListener('mousemove', this.handleResizeMouseMove);\n        document.removeEventListener('mouseup', this.handleResizeMouseUp);\n    };\n\n    handleResizeTouchEnd = (event: TouchEvent) => {\n        this.handleResizeComplete(event);\n\n        document.removeEventListener('touchmove', this.handleResizeTouchMove);\n        document.removeEventListener('touchend', this.handleResizeTouchEnd);\n    };\n\n    handleResizeComplete = (event: Event) => {\n        const { isLocked } = this.props;\n\n        if (this.cDiv.current === null) return;\n\n        if (this.moving && !isLocked) {\n            const { offsetLeft, offsetTop, clientWidth, clientHeight } = this.cDiv.current;\n            this.props.onDrag(offsetLeft, offsetTop);\n            this.props.onResize(clientWidth, clientHeight);\n            this.moving = false;\n        }\n\n        document.body.style.cursor = this.originalBodyCursor;\n\n        event.preventDefault();\n    };\n\n    handleResizeMouseMove = (event: MouseEvent) => {\n        this.handleResizeMove(event, event.ctrlKey);\n        event.preventDefault();\n    };\n\n    handleResizeTouchMove = (event: TouchEvent) => {\n        this.handleResizeMove(event.changedTouches[0], event.ctrlKey);\n        event.preventDefault();\n    };\n\n    handleResizeMove = (co: { clientX: number; clientY: number }, disableSnapping: boolean) => {\n        const { isLocked, ppmm, snappingDistance } = this.props;\n\n        if (this.cDiv.current === null || isLocked) return;\n        this.moving = true;\n\n        const vx = co.clientX - this.startX;\n        const vy = co.clientY - this.startY;\n\n        const { rx, ry } = this.rotateVec(vx, vy, -this.currentAngle);\n\n        let w = this.originalW + rx;\n        let h = this.originalH + ry;\n\n        if (!disableSnapping && snappingDistance !== 0) {\n            w = Math.round(w / ppmm / snappingDistance) * snappingDistance * ppmm;\n            h = Math.round(h / ppmm / snappingDistance) * snappingDistance * ppmm;\n        }\n\n        this.cDiv.current.style.width = w + 'px';\n        this.cDiv.current.style.height = h + 'px';\n\n        const rotatedV = this.rotateVec(w / 2, h / 2, this.currentAngle);\n        const nx = this.rotatedPointX + rotatedV.rx;\n        const ny = this.rotatedPointY + rotatedV.ry;\n\n        this.cDiv.current.style.left = nx - w / 2 + 'px';\n        this.cDiv.current.style.top = ny - h / 2 + 'px';\n    };\n\n    // Rotation handling\n\n    handleRotateMouseDown = (event: MouseEvent) => {\n        this.handleRotateStart(event);\n\n        document.addEventListener('mousemove', this.handleRotateMouseMove);\n        document.addEventListener('mouseup', this.handleRotateMouseUp);\n        event.stopPropagation();\n        event.preventDefault();\n    };\n\n    handleRotateTouchStart = (event: TouchEvent) => {\n        this.handleRotateStart(event.changedTouches[0]);\n\n        document.addEventListener('touchmove', this.handleRotateTouchMove, { passive: false });\n        document.addEventListener('touchend', this.handleRotateTouchEnd, { passive: false });\n        event.stopPropagation();\n    };\n\n    handleRotateStart = (co: { clientX: number; clientY: number }) => {\n        const { isLocked } = this.props;\n\n        if (this.cDiv.current === null || isLocked) return;\n\n        document.body.style.cursor = `url(${rotate}), auto`;\n\n        const rect = this.cDiv.current.getBoundingClientRect();\n        this.centerX = rect.left + this.cDiv.current.clientWidth / 2;\n        this.centerY = rect.top + this.cDiv.current.clientHeight / 2;\n\n        this.originalAngle = Math.atan2(this.centerX - co.clientX, this.centerY - co.clientY) + this.currentAngle;\n    };\n\n    handleRotateMouseUp = (event: MouseEvent) => {\n        this.handleRotateComplete(event);\n\n        document.removeEventListener('mousemove', this.handleRotateMouseMove);\n        document.removeEventListener('mouseup', this.handleRotateMouseUp);\n    };\n\n    handleRotateTouchEnd = (event: TouchEvent) => {\n        this.handleRotateComplete(event);\n\n        document.removeEventListener('touchmove', this.handleRotateTouchMove);\n        document.removeEventListener('touchend', this.handleRotateTouchEnd);\n    };\n\n    handleRotateComplete = (event: Event) => {\n        const { isLocked } = this.props;\n\n        if (this.moving && !isLocked) {\n            this.props.onRotate(this.currentAngle);\n            this.moving = false;\n        }\n\n        document.body.style.cursor = this.originalBodyCursor;\n\n        event.preventDefault();\n    };\n\n    handleRotateMouseMove = (event: MouseEvent) => {\n        this.handleRotateMove(event, event.ctrlKey);\n        event.preventDefault();\n    };\n\n    handleRotateTouchMove = (event: TouchEvent) => {\n        this.handleRotateMove(event.changedTouches[0], event.ctrlKey);\n        event.preventDefault();\n    };\n\n    handleRotateMove = (co: { clientX: number; clientY: number }, disableSnapping: boolean) => {\n        const { isLocked } = this.props;\n\n        if (this.cDiv.current === null || isLocked) return;\n        this.moving = true;\n\n        let angle = Math.atan2(this.centerX - co.clientX, this.centerY - co.clientY);\n\n        angle = this.originalAngle - angle;\n        if (!disableSnapping) {\n            angle = ((Math.round(((angle / Math.PI) * 180) / 5) * 5) / 180) * Math.PI;\n        }\n\n        this.currentAngle = angle;\n\n        this.cDiv.current.style.transform = `rotate(${this.currentAngle}rad)`;\n    };\n\n    // Rendering\n\n    render() {\n        const { x, y, width, height, angle, children, isActive, isActivePlaceholder, isLocked } = this.props;\n\n        return (\n            <div\n                ref={this.cDiv}\n                className={`${style.fieldcontroller} ${\n                    isActivePlaceholder ? style.fieldcontrolleractiveplaceholder : ''\n                } ${isActive ? style.fieldcontrolleractive : ''} ${\n                    isActive && this.activatedUsingTouch ? style.touchactivated : ''\n                } `}\n                style={{\n                    position: 'absolute',\n                    left: x,\n                    top: y,\n                    width: width,\n                    height: height,\n                    cursor: 'grab',\n                    transform: `rotate(${angle}rad)`,\n                }}\n            >\n                {children}\n                <img\n                    src={resize}\n                    alt=\"resize\"\n                    ref={this.resizeDiv}\n                    className={style.controller}\n                    style={{\n                        position: 'absolute',\n                        right: 0,\n                        bottom: 0,\n                        cursor: `url(${resize}), auto`,\n                        display: isLocked ? 'none' : 'initial',\n                    }}\n                />\n                <img\n                    src={rotate}\n                    alt=\"rotate\"\n                    ref={this.rotateDiv}\n                    className={style.controller}\n                    style={{\n                        position: 'absolute',\n                        left: 0,\n                        bottom: 0,\n                        cursor: `url(${rotate}), auto`,\n                        display: isLocked ? 'none' : 'initial',\n                    }}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    const isActivePlaceholder = props.placeholderId === state.cardsets.activePlaceholder;\n    const isActive =\n        props.cardId === state.cardsets.activeCard && props.placeholderId === state.cardsets.activePlaceholder;\n    const isLocked = state.cardsets.placeholders[props.placeholderId].locked === true;\n\n    return {\n        isActive,\n        isActivePlaceholder,\n        isLocked,\n        snappingDistance: state.cardsets.snappingDistance,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(FieldController);\n","import { connect } from 'react-redux';\nimport React, { PureComponent } from 'react';\n\nimport {\n    Dispatch,\n    cardSetActiveCardAndPlaceholder,\n    cardSetChangeImage,\n    cardSetChangePlaceholderAngle,\n    cardSetChangePlaceholderPosition,\n    cardSetChangePlaceholderSize,\n} from '../actions';\nimport { ImageInfo, ImagePlaceholderType } from '../types';\nimport { State } from '../reducers';\nimport FieldController from './FieldController';\nimport emptyImageImage from './image.svg';\nimport style from './ImageField.module.css';\n\ninterface OwnProps {\n    cardId: string;\n    isOnBack: boolean;\n    ppmm: number;\n    imagePlaceholder: ImagePlaceholderType;\n    cardWidth: number;\n    cardHeight: number;\n}\n\ninterface StateProps {\n    imageUrl?: string;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass ImageField extends PureComponent<Props> {\n    imageDiv: React.RefObject<HTMLDivElement>;\n    wasMoved: boolean;\n\n    constructor(props: Props) {\n        super(props);\n        this.imageDiv = React.createRef();\n        this.wasMoved = false;\n    }\n\n    componentDidMount() {\n        if (!this.imageDiv.current) return;\n        this.imageDiv.current.addEventListener('mousedown', this.handleMouseDown);\n        this.imageDiv.current.addEventListener('touchstart', this.handleTouchStart);\n        this.imageDiv.current.addEventListener('mousemove', this.handleMouseMove);\n        this.imageDiv.current.addEventListener('touchmove', this.handleTouchMove, { passive: false });\n        this.imageDiv.current.addEventListener('mouseup', this.handleMouseUp);\n        this.imageDiv.current.addEventListener('touchend', this.handleTouchEnd, { passive: false });\n    }\n\n    handleDrag = (x: number, y: number) => {\n        const { dispatch, imagePlaceholder, ppmm } = this.props;\n        dispatch(cardSetChangePlaceholderPosition(imagePlaceholder, x / ppmm, y / ppmm));\n    };\n\n    handleResize = (width: number, height: number) => {\n        const { dispatch, imagePlaceholder, ppmm } = this.props;\n        dispatch(cardSetChangePlaceholderSize(imagePlaceholder, width / ppmm, height / ppmm));\n    };\n\n    handleRotate = (angle: number) => {\n        const { dispatch, imagePlaceholder } = this.props;\n        dispatch(cardSetChangePlaceholderAngle(imagePlaceholder, angle));\n    };\n\n    handleMouseDown = (event: MouseEvent) => {\n        this.wasMoved = false;\n        event.preventDefault();\n    };\n\n    handleTouchStart = (event: TouchEvent) => {\n        this.wasMoved = false;\n        event.preventDefault();\n    };\n\n    handleMouseMove = (event: MouseEvent) => {\n        this.wasMoved = true;\n        event.preventDefault();\n    };\n\n    handleTouchMove = (event: TouchEvent) => {\n        this.wasMoved = true;\n        event.preventDefault();\n    };\n\n    handleMouseUp = (event: MouseEvent) => {\n        this.handleComplete(event);\n    };\n\n    handleTouchEnd = (event: TouchEvent) => {\n        this.handleComplete(event);\n    };\n\n    handleComplete = (event: Event) => {\n        const { dispatch, cardId, isOnBack, imagePlaceholder } = this.props;\n        if (!this.wasMoved) {\n            event.preventDefault();\n            dispatch(cardSetActiveCardAndPlaceholder(cardId, isOnBack, imagePlaceholder.id));\n        }\n    };\n\n    handleDragOver = (event: React.DragEvent<HTMLDivElement>) => {\n        if (this.imageDiv.current !== null) {\n            this.imageDiv.current.classList.add(style.over);\n        }\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDragLeave = (event: React.DragEvent<HTMLDivElement>) => {\n        if (this.imageDiv.current !== null) {\n            this.imageDiv.current.classList.remove(style.over);\n        }\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = (event: React.DragEvent<HTMLDivElement>) => {\n        if (this.imageDiv.current !== null) {\n            this.imageDiv.current.classList.remove(style.over);\n        }\n        event.preventDefault();\n        event.stopPropagation();\n\n        const url = event.dataTransfer.getData('URL');\n        const imagefilesPos = url.indexOf('/api/imagefiles/');\n\n        if (imagefilesPos !== -1) {\n            const { cardId, imagePlaceholder, dispatch } = this.props;\n\n            const ii: ImageInfo = { url: url.substr(imagefilesPos) };\n            dispatch(cardSetChangeImage(cardId, imagePlaceholder.id, ii));\n        }\n    };\n\n    render() {\n        const { imagePlaceholder, imageUrl, ppmm, cardWidth, cardHeight } = this.props;\n\n        return (\n            <FieldController\n                cardId={this.props.cardId}\n                placeholderId={imagePlaceholder.id}\n                x={imagePlaceholder.x * ppmm}\n                y={imagePlaceholder.y * ppmm}\n                width={imagePlaceholder.width * ppmm}\n                height={imagePlaceholder.height * ppmm}\n                angle={imagePlaceholder.angle}\n                onDrag={this.handleDrag}\n                onResize={this.handleResize}\n                onRotate={this.handleRotate}\n                cardWidth={cardWidth}\n                cardHeight={cardHeight}\n                ppmm={ppmm}\n            >\n                <div\n                    ref={this.imageDiv}\n                    style={{\n                        width: '100%',\n                        height: '100%',\n                    }}\n                    onDragOver={this.handleDragOver}\n                    onDragLeave={this.handleDragLeave}\n                    onDrop={this.handleDrop}\n                >\n                    <img\n                        style={{\n                            opacity: imageUrl && imageUrl.length > 0 ? 1 : 0.5,\n                            width: imagePlaceholder.fit === 'height' ? 'auto' : '100%',\n                            height: !imagePlaceholder.fit || imagePlaceholder.fit === 'width' ? 'auto' : '100%',\n                        }}\n                        src={imageUrl || emptyImageImage}\n                        alt=\"\"\n                    />\n                </div>\n            </FieldController>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    const imageInfo =\n        state.cardsets.images &&\n        state.cardsets.images[props.cardId] &&\n        state.cardsets.images[props.cardId][props.imagePlaceholder.id];\n\n    let imageUrl: string | undefined = '';\n    if (imageInfo) {\n        if (imageInfo.base64) {\n            imageUrl = 'data:image/svg+xml;base64,' + imageInfo.base64;\n        } else {\n            imageUrl = imageInfo && imageInfo.url;\n        }\n    }\n\n    return {\n        imageUrl,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(ImageField);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DEFAULT_FONT, DEFAULT_FONT_SIZE, DEFAULT_LINE_HEIGHT } from '../constants';\nimport { Dispatch, cardSetActiveCardAndPlaceholder, cardSetChangeText } from '../actions';\nimport { State } from '../reducers';\nimport { TextInfo } from '../types';\nimport style from './ContentEditable.module.css';\n\ninterface OwnProps {\n    cardId: string;\n    isOnBack: boolean;\n    placeholderId: string;\n    align: string;\n    color: string;\n    fontFamily: string;\n    fontVariant: string;\n    fontSize: number;\n    lineHeight: number;\n}\n\ninterface StateProps {\n    isActive: boolean;\n    textValue: string;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass ContentEditable extends Component<Props> {\n    editDiv: React.RefObject<HTMLDivElement>;\n    currentText: string;\n    currentAlign: string;\n    currentColor: string;\n    currentFontFamily: string;\n    currentFontVariant: string;\n    currentFontSize: number;\n    currentLineHeight: number;\n    timeout: NodeJS.Timeout | null;\n    wasMoved: boolean;\n\n    constructor(props: Props) {\n        super(props);\n        this.editDiv = React.createRef();\n        this.currentText = '';\n        this.currentAlign = '';\n        this.currentColor = '';\n        this.currentFontFamily = '';\n        this.currentFontVariant = '';\n        this.currentFontSize = DEFAULT_FONT_SIZE;\n        this.currentLineHeight = DEFAULT_LINE_HEIGHT;\n        this.timeout = null;\n        this.wasMoved = false;\n    }\n\n    componentDidMount() {\n        const { isActive } = this.props;\n\n        if (!this.editDiv.current) return;\n\n        this.editDiv.current.addEventListener('mousedown', this.handleMouseDown);\n        this.editDiv.current.addEventListener('touchstart', this.handleTouchStart);\n        this.editDiv.current.addEventListener('mousemove', this.handleMouseMove);\n        this.editDiv.current.addEventListener('touchmove', this.handleTouchMove, { passive: false });\n        this.editDiv.current.addEventListener('mouseup', this.handleMouseUp);\n        this.editDiv.current.addEventListener('touchend', this.handleTouchEnd, { passive: false });\n\n        if (isActive) {\n            this.editDiv.current.focus();\n        }\n    }\n\n    shouldComponentUpdate(nextProps: Props) {\n        const shouldUpdate =\n            nextProps.textValue !== this.currentText ||\n            nextProps.align !== this.currentAlign ||\n            nextProps.color !== this.currentColor ||\n            nextProps.fontFamily !== this.currentFontFamily ||\n            nextProps.fontVariant !== this.currentFontVariant ||\n            nextProps.fontSize !== this.currentFontSize ||\n            nextProps.lineHeight !== this.currentLineHeight ||\n            this.props.isActive !== nextProps.isActive;\n\n        return shouldUpdate;\n    }\n\n    componentDidUpdate() {\n        const { textValue, align, color, fontFamily, fontVariant, fontSize, lineHeight } = this.props;\n        this.currentText = textValue;\n        this.currentAlign = align;\n        this.currentColor = color;\n        this.currentFontFamily = fontFamily;\n        this.currentFontVariant = fontVariant;\n        this.currentFontSize = fontSize;\n        this.currentLineHeight = lineHeight;\n    }\n\n    handleMouseDown = (event: MouseEvent) => {\n        this.handleStart(event);\n    };\n\n    handleTouchStart = (event: TouchEvent) => {\n        this.handleStart(event);\n    };\n\n    handleStart = (event: Event) => {\n        const { isActive } = this.props;\n        if (isActive) {\n            event.stopPropagation();\n        } else {\n            this.wasMoved = false;\n            event.preventDefault();\n        }\n    };\n\n    handleMouseMove = (event: MouseEvent) => {\n        this.handleMove(event);\n    };\n\n    handleTouchMove = (event: TouchEvent) => {\n        this.handleMove(event);\n    };\n\n    handleMove = (event: Event) => {\n        const { isActive } = this.props;\n        if (isActive) {\n            event.stopPropagation();\n        } else {\n            this.wasMoved = true;\n            event.preventDefault();\n        }\n    };\n\n    handleMouseUp = (event: MouseEvent) => {\n        this.handleComplete(event);\n    };\n\n    handleTouchEnd = (event: TouchEvent) => {\n        this.handleComplete(event);\n    };\n\n    handleComplete = (event: Event) => {\n        const { dispatch, cardId, isOnBack, placeholderId, isActive } = this.props;\n        if (isActive) {\n            event.stopPropagation();\n        } else if (!this.wasMoved) {\n            event.preventDefault();\n            dispatch(cardSetActiveCardAndPlaceholder(cardId, isOnBack, placeholderId));\n\n            if (!this.editDiv.current) return;\n            this.editDiv.current.focus();\n        }\n    };\n\n    onFocus = () => {\n        if (!this.editDiv.current) return;\n\n        const { textValue, align, color, fontFamily, fontVariant, fontSize } = this.props;\n        this.currentText = textValue;\n        this.currentAlign = align;\n        this.currentColor = color;\n        this.currentFontFamily = fontFamily;\n        this.currentFontVariant = fontVariant;\n        this.currentFontSize = fontSize;\n\n        const range = document.createRange();\n        range.selectNodeContents(this.editDiv.current);\n        range.collapse(false);\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    };\n\n    updateContent = (timeoutInMiliseconds: number) => {\n        if (!this.editDiv.current) return;\n        let value = this.editDiv.current.innerHTML;\n\n        let imgUrlIdx = -1;\n        while ((imgUrlIdx = value.indexOf('<img src=\"http')) !== -1) {\n            value = value.slice(0, imgUrlIdx + 10) + value.slice(value.indexOf('/', imgUrlIdx + 18));\n        }\n\n        if (value !== this.currentText) {\n            this.currentText = value;\n\n            if (this.timeout) {\n                clearTimeout(this.timeout);\n            }\n\n            this.timeout = setTimeout(() => {\n                const { dispatch, cardId, placeholderId } = this.props;\n                const textInfo: TextInfo = { value };\n\n                dispatch(cardSetChangeText(cardId, placeholderId, textInfo));\n            }, timeoutInMiliseconds);\n        }\n    };\n\n    handleBlur = () => {\n        this.updateContent(0);\n    };\n\n    handleInput = () => {\n        this.updateContent(500);\n    };\n\n    render() {\n        const { color, align, fontFamily, fontVariant, fontSize, lineHeight } = this.props;\n        const isItalic = fontVariant && fontVariant.indexOf('italic') !== -1;\n        const fontWeight = isItalic\n            ? fontVariant === 'italic'\n                ? 400\n                : parseInt(fontVariant.slice(0, 3))\n            : fontVariant === 'regular'\n            ? 400\n            : parseInt(fontVariant);\n\n        return (\n            <div\n                ref={this.editDiv}\n                className={style.content}\n                contentEditable={true}\n                onFocus={this.onFocus}\n                onBlur={this.handleBlur}\n                onInput={this.handleInput}\n                style={{\n                    width: '100%',\n                    height: '100%',\n                    textAlign: align === 'left' ? 'left' : align === 'right' ? 'right' : 'center',\n                    color: color,\n                    fontFamily: `'${fontFamily}'` || DEFAULT_FONT,\n                    fontStyle: isItalic ? 'italic' : 'normal',\n                    fontWeight,\n                    fontSize: `${fontSize}px`,\n                    outline: 'none',\n                    overflowWrap: 'break-word',\n                    lineHeight,\n                }}\n                dangerouslySetInnerHTML={{ __html: this.props.textValue }}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    const textInfo =\n        state.cardsets.texts &&\n        state.cardsets.texts[props.cardId] &&\n        state.cardsets.texts[props.cardId][props.placeholderId]\n            ? state.cardsets.texts[props.cardId][props.placeholderId]\n            : { value: '' };\n    return {\n        textValue: textInfo.value,\n        isActive:\n            props.cardId === state.cardsets.activeCard && props.placeholderId === state.cardsets.activePlaceholder,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(ContentEditable);\n","import { connect } from 'react-redux';\nimport React, { PureComponent } from 'react';\n\nimport { DEFAULT_LINE_HEIGHT } from '../constants';\nimport {\n    Dispatch,\n    cardSetChangePlaceholderAngle,\n    cardSetChangePlaceholderPosition,\n    cardSetChangePlaceholderSize,\n} from '../actions';\nimport { State } from '../reducers';\nimport { TextPlaceholderType } from '../types';\nimport ContentEditable from './ContentEditable';\nimport FieldController from './FieldController';\nimport emptyTextImage from './text.svg';\n\ninterface OwnProps {\n    cardId: string;\n    isOnBack: boolean;\n    ppmm: number;\n    textPlaceholder: TextPlaceholderType;\n    cardWidth: number;\n    cardHeight: number;\n}\n\ninterface StateProps {\n    text: string;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass TextField extends PureComponent<Props> {\n    handleDrag = (x: number, y: number) => {\n        const { dispatch, textPlaceholder, ppmm } = this.props;\n        dispatch(cardSetChangePlaceholderPosition(textPlaceholder, x / ppmm, y / ppmm));\n    };\n\n    handleResize = (width: number, height: number) => {\n        const { dispatch, textPlaceholder, ppmm } = this.props;\n        dispatch(cardSetChangePlaceholderSize(textPlaceholder, width / ppmm, height / ppmm));\n    };\n\n    handleRotate = (angle: number) => {\n        const { dispatch, textPlaceholder } = this.props;\n        dispatch(cardSetChangePlaceholderAngle(textPlaceholder, angle));\n    };\n\n    render() {\n        const { textPlaceholder, text, ppmm, cardWidth, cardHeight } = this.props;\n\n        return (\n            <FieldController\n                cardId={this.props.cardId}\n                placeholderId={textPlaceholder.id}\n                x={textPlaceholder.x * ppmm}\n                y={textPlaceholder.y * ppmm}\n                width={textPlaceholder.width * ppmm}\n                height={textPlaceholder.height * ppmm}\n                angle={textPlaceholder.angle}\n                onDrag={this.handleDrag}\n                onResize={this.handleResize}\n                onRotate={this.handleRotate}\n                cardWidth={cardWidth}\n                cardHeight={cardHeight}\n                ppmm={ppmm}\n            >\n                {text === '' && (\n                    <div\n                        style={{\n                            width: '100%',\n                            height: '100%',\n                            position: 'fixed',\n                            left: 0,\n                            top: 0,\n                            zIndex: -1,\n                            textAlign:\n                                textPlaceholder.align === 'left'\n                                    ? 'left'\n                                    : textPlaceholder.align === 'right'\n                                    ? 'right'\n                                    : 'center',\n                        }}\n                    >\n                        <img style={{ opacity: 0.5, width: 'auto', height: '100%' }} src={emptyTextImage} alt=\"\" />\n                    </div>\n                )}\n\n                <ContentEditable\n                    cardId={this.props.cardId}\n                    isOnBack={this.props.isOnBack}\n                    placeholderId={textPlaceholder.id}\n                    align={textPlaceholder.align}\n                    color={textPlaceholder.color}\n                    fontFamily={textPlaceholder.fontFamily}\n                    fontVariant={textPlaceholder.fontVariant}\n                    fontSize={textPlaceholder.fontSize * ppmm}\n                    lineHeight={textPlaceholder.lineHeight || DEFAULT_LINE_HEIGHT}\n                />\n            </FieldController>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    let text =\n        state.cardsets.texts &&\n        state.cardsets.texts[props.cardId] &&\n        state.cardsets.texts[props.cardId][props.textPlaceholder.id]\n            ? state.cardsets.texts[props.cardId][props.textPlaceholder.id].value\n            : '';\n    return {\n        text,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(TextField);\n","import { connect } from 'react-redux';\nimport Measure from 'react-measure';\nimport React, { Component } from 'react';\n\nimport { BLEED_WIDTH } from '../constants';\nimport { CardType, IdsArray, PlaceholdersCollection } from '../types';\nimport { Dispatch, cardSetActiveCardAndPlaceholder } from '../actions';\nimport { State } from '../reducers';\nimport ImageField from './ImageField';\nimport TextField from './TextField';\nimport style from './Card.module.css';\n\ninterface OwnProps {\n    card: CardType;\n    isBack: boolean;\n}\n\ninterface StateProps {\n    placeholders: PlaceholdersCollection;\n    placeholdersIds: IdsArray;\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    isActiveCard: boolean;\n    zoom: number;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\ninterface LocalState {\n    dimensions: {\n        width: number;\n        height: number;\n    };\n}\n\nclass Card extends Component<Props, LocalState> {\n    state = {\n        dimensions: {\n            width: -1,\n            height: -1,\n        },\n    };\n\n    handleFieldDeselect = (event: React.MouseEvent | React.TouchEvent) => {\n        const { dispatch, card, isBack } = this.props;\n        const el = event.target as HTMLElement;\n        if (el.getAttribute('id') === `card_${card.id}`) {\n            dispatch(cardSetActiveCardAndPlaceholder(card.id, isBack, null));\n            event.stopPropagation();\n        }\n    };\n\n    render() {\n        const {\n            placeholders,\n            placeholdersIds,\n            card,\n            isBack,\n            width,\n            height,\n            isActiveCard,\n            zoom,\n            isTwoSided,\n        } = this.props;\n        const widthWithBleeds = width + BLEED_WIDTH * 2;\n        const heightWithBleeds = height + BLEED_WIDTH * 2;\n\n        const ppmm = this.state.dimensions.width / widthWithBleeds;\n\n        return (\n            <div>\n                <Measure\n                    client\n                    onResize={contentRect => {\n                        if (!contentRect.client) {\n                            return;\n                        }\n                        this.setState({ dimensions: contentRect.client });\n                    }}\n                >\n                    {({ measureRef }) => (\n                        <div\n                            className={`${style.card} ${isActiveCard ? style.active : ''}`}\n                            id={`card_${card.id}`}\n                            ref={measureRef}\n                            style={{\n                                width: `${widthWithBleeds * zoom}mm`,\n                                height: `${heightWithBleeds * zoom}mm`,\n                                position: 'relative',\n                                overflow: 'hidden',\n                            }}\n                            onMouseDown={this.handleFieldDeselect}\n                            onTouchStart={this.handleFieldDeselect}\n                        >\n                            {placeholdersIds.map(id => {\n                                const p = placeholders[id];\n                                if (p.type === 'image') {\n                                    return (\n                                        <ImageField\n                                            key={p.id}\n                                            cardId={card.id}\n                                            isOnBack={isBack}\n                                            imagePlaceholder={p}\n                                            ppmm={ppmm}\n                                            cardWidth={this.state.dimensions.width}\n                                            cardHeight={this.state.dimensions.height}\n                                        />\n                                    );\n                                } else if (p.type === 'text') {\n                                    return (\n                                        <TextField\n                                            key={p.id}\n                                            cardId={card.id}\n                                            isOnBack={isBack}\n                                            textPlaceholder={p}\n                                            ppmm={ppmm}\n                                            cardWidth={this.state.dimensions.width}\n                                            cardHeight={this.state.dimensions.height}\n                                        />\n                                    );\n                                }\n                                return null;\n                            })}\n\n                            <div\n                                style={{\n                                    position: 'absolute',\n                                    width: `${width * zoom}mm`,\n                                    height: `${height * zoom}mm`,\n                                    left: `${BLEED_WIDTH * zoom}mm`,\n                                    top: `${BLEED_WIDTH * zoom}mm`,\n                                    border: '1px dashed black',\n                                    borderRadius: '5mm',\n                                    pointerEvents: 'none',\n                                }}\n                            />\n\n                            <div\n                                style={{\n                                    position: 'absolute',\n                                    width: `${(width - BLEED_WIDTH * 2) * zoom}mm`,\n                                    height: `${(height - BLEED_WIDTH * 2) * zoom}mm`,\n                                    left: `${BLEED_WIDTH * 2 * zoom}mm`,\n                                    top: `${BLEED_WIDTH * 2 * zoom}mm`,\n                                    border: '1px dashed red',\n                                    borderRadius: '5mm',\n                                    pointerEvents: 'none',\n                                }}\n                            />\n                        </div>\n                    )}\n                </Measure>\n                {isTwoSided && (\n                    <div\n                        className={style.title}\n                        style={{\n                            width: `${widthWithBleeds * zoom}mm`,\n                            position: 'relative',\n                        }}\n                    >\n                        {isBack ? 'Back' : 'Front'}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State, props: OwnProps): StateProps => {\n    return {\n        placeholders: state.cardsets.placeholders,\n        placeholdersIds: state.cardsets.placeholdersAllIds.filter(\n            id => (state.cardsets.placeholders[id].isOnBack || false) === props.isBack,\n        ),\n        width: state.cardsets.width,\n        height: state.cardsets.height,\n        isTwoSided: state.cardsets.isTwoSided,\n        isActiveCard: state.cardsets.activeCard === props.card.id && state.cardsets.isBackActive === props.isBack,\n        zoom: state.cardsets.zoom,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(Card);\n","import React, { Component } from 'react';\nimport style from './EditableTitle.module.css';\n\ninterface Props {\n    title: string;\n    onChange: (newName: string) => void;\n}\n\nexport default class EditableTitle extends Component<Props> {\n    state = {\n        titleIsEdited: false,\n    };\n\n    handleClick = () => {\n        this.setState({ titleIsEdited: true });\n    };\n\n    handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.props.onChange(event.target.value);\n    };\n\n    handleBlur = () => {\n        this.setState({ titleIsEdited: false });\n    };\n\n    render() {\n        const { titleIsEdited } = this.state;\n        const { title } = this.props;\n\n        return (\n            <>\n                {!titleIsEdited && (\n                    <h1 className={style.input} onClick={this.handleClick}>\n                        {title}\n                    </h1>\n                )}\n                {titleIsEdited && (\n                    <input\n                        autoFocus\n                        type=\"text\"\n                        className={style.input}\n                        value={title}\n                        onChange={this.handleChange}\n                        onBlur={this.handleBlur}\n                    />\n                )}\n            </>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nimport style from './Loader.module.css';\n\ninterface Props {\n    fixed?: boolean;\n    small?: boolean;\n}\n\nexport default class Loader extends Component<Props> {\n    render() {\n        const { fixed, small } = this.props;\n\n        return (\n            <div className={`${style.loader} ${fixed ? style.fixed : style.relative} ${small ? style.small : ''}`}>\n                <div />\n                <div />\n            </div>\n        );\n    }\n}\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { CardType, DispatchProps, SidebarOwnProps } from '../types';\nimport { State } from '../reducers';\nimport { cardSetCloneCard, cardSetRemoveCard, cardSetUpdateCardCount } from '../actions';\nimport style from './SidebarDetails.module.css';\n\ninterface StateProps {\n    isAuthenticated: boolean;\n    activeCard: CardType | null;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarDetails extends Component<Props> {\n    handleCloneCardClick = () => {\n        const { activeCard, dispatch } = this.props;\n        if (activeCard !== null) {\n            dispatch(cardSetCloneCard(activeCard));\n        }\n    };\n\n    handleRemoveCardClick = () => {\n        const { activeCard, dispatch } = this.props;\n        if (activeCard !== null) {\n            dispatch(cardSetRemoveCard(activeCard));\n        }\n    };\n\n    handleCountChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activeCard, dispatch } = this.props;\n        if (activeCard !== null) {\n            dispatch(cardSetUpdateCardCount(activeCard, parseInt(event.target.value)));\n        }\n    };\n\n    render() {\n        const { activeCard, visible } = this.props;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'initial' : 'none' }}>\n                <button\n                    onClick={this.handleCloneCardClick}\n                    title=\"Clone card\"\n                    className={activeCard === null ? style.disabled : ''}\n                >\n                    <i className=\"material-icons\">file_copy</i>\n                </button>\n\n                <input\n                    type=\"number\"\n                    value={activeCard !== null ? activeCard.count.toString() : 0}\n                    onChange={this.handleCountChange}\n                    title=\"Number of card's copies\"\n                    className={activeCard === null ? style.disabled : ''}\n                />\n                <button\n                    onClick={this.handleRemoveCardClick}\n                    title=\"Remove card\"\n                    className={activeCard === null ? style.disabled : ''}\n                >\n                    <i className=\"material-icons\">delete</i>\n                </button>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        activeCard: state.cardsets.activeCard !== null ? state.cardsets.cardsById[state.cardsets.activeCard] : null,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarDetails);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { ACTIVITY_CREATING_PNG, State } from '../reducers';\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport { gameCreatePngRequest } from '../actions';\nimport style from './SidebarGeneratePng.module.css';\n\ninterface StateProps {\n    width: number;\n    height: number;\n    isCreatingPng: boolean;\n    activeCardset: string | null;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\ninterface LocalState {\n    dpi: number;\n}\n\nexport class SidebarGeneratePng extends Component<Props, LocalState> {\n    state: LocalState = {\n        dpi: 300,\n    };\n\n    handleDpiChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ dpi: parseInt(event.target.value) });\n    };\n\n    handleGenerate = () => {\n        const { dispatch, activeCardset } = this.props;\n        const { dpi } = this.state;\n\n        if (activeCardset !== null) {\n            dispatch(gameCreatePngRequest(dpi, 'cardsets', activeCardset));\n        }\n    };\n\n    render() {\n        const { visible, width, height, isCreatingPng } = this.props;\n        const { dpi } = this.state;\n\n        const calculatedWidth = Math.round(dpi * (width / 25.4 + 1 / 4));\n        const calculatedHeight = Math.round(dpi * (height / 25.4 + 1 / 4));\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'grid' : 'none' }}>\n                <div>Here you can generate your cards as PNG images.</div>\n                <label htmlFor=\"dpi\">DPI:</label>\n                <input\n                    id=\"dpi\"\n                    type=\"number\"\n                    min=\"1\"\n                    step=\"1\"\n                    onChange={this.handleDpiChange}\n                    className=\"form-control\"\n                    placeholder=\"DPI\"\n                    value={dpi}\n                />\n\n                <div>Width in pixels: {calculatedWidth}</div>\n                <div>Height in pixels: {calculatedHeight}</div>\n\n                <button disabled={isCreatingPng} onClick={this.handleGenerate}>\n                    Generate\n                </button>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        width: state.cardsets.width,\n        height: state.cardsets.height,\n        isCreatingPng: (state.games.activity & ACTIVITY_CREATING_PNG) === ACTIVITY_CREATING_PNG,\n        activeCardset: state.cardsets.active,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarGeneratePng);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { ACTIVITY_CREATING_PDF, State } from '../reducers';\nimport { Dispatch, gameCreatePdfRequest } from '../actions';\nimport KawaiiMessage, { Character } from './KawaiiMessage';\n\ninterface OwnProps {\n    type: string;\n    id: string;\n    withHelp?: boolean;\n}\n\ninterface StateProps {\n    isCreatingPdf: boolean;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = StateProps & DispatchProps & OwnProps;\n\ninterface LocalState {\n    pageWidth: number;\n    pageHeight: number;\n    topBottomMargin: number;\n    leftRightMargin: number;\n    verticalSpace: number;\n    horizontalSpace: number;\n    includeBleedingArea: boolean;\n    cutMarksForScissors: boolean;\n    cutMarksForGuillotine: boolean;\n    cutMarksInMarginArea: boolean;\n    cutMarksOnFrontSideOnly: boolean;\n}\n\nexport class PDFGenerator extends Component<Props, LocalState> {\n    state = {\n        pageWidth: 210,\n        pageHeight: 297,\n        topBottomMargin: 15,\n        leftRightMargin: 9,\n        verticalSpace: 0,\n        horizontalSpace: 0,\n        includeBleedingArea: false,\n        cutMarksForScissors: true,\n        cutMarksForGuillotine: false,\n        cutMarksInMarginArea: false,\n        cutMarksOnFrontSideOnly: false,\n    };\n\n    handleGeneratePdfClick = () => {\n        const { dispatch } = this.props;\n        const {\n            pageWidth,\n            pageHeight,\n            topBottomMargin,\n            leftRightMargin,\n            verticalSpace,\n            horizontalSpace,\n            includeBleedingArea,\n            cutMarksForScissors,\n            cutMarksForGuillotine,\n            cutMarksInMarginArea,\n            cutMarksOnFrontSideOnly,\n        } = this.state;\n\n        dispatch(\n            gameCreatePdfRequest(\n                this.props.type,\n                this.props.id,\n                pageWidth,\n                pageHeight,\n                topBottomMargin,\n                leftRightMargin,\n                verticalSpace,\n                horizontalSpace,\n                includeBleedingArea,\n                cutMarksForScissors,\n                cutMarksForGuillotine,\n                cutMarksInMarginArea,\n                cutMarksOnFrontSideOnly,\n            ),\n        );\n    };\n\n    handlePageWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ pageWidth: parseFloat(event.target.value) });\n    };\n\n    handlePageHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ pageHeight: parseFloat(event.target.value) });\n    };\n\n    handleTopBottomMarginChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ topBottomMargin: parseFloat(event.target.value) });\n    };\n\n    handleLeftRightMarginChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ leftRightMargin: parseFloat(event.target.value) });\n    };\n\n    handleVerticalSpaceChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ verticalSpace: parseFloat(event.target.value) });\n    };\n\n    handleHorizontalSpaceChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ horizontalSpace: parseFloat(event.target.value) });\n    };\n\n    handleIncludeBleedingAreaChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ includeBleedingArea: event.target.checked });\n    };\n\n    handleCutMarksForScissors = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ cutMarksForScissors: event.target.checked });\n    };\n\n    handleCutMarksForGuillotine = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ cutMarksForGuillotine: event.target.checked });\n    };\n\n    handleCutMarksInMarginArea = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ cutMarksInMarginArea: event.target.checked });\n    };\n\n    handleCutMarksOnFrontSideOnly = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ cutMarksOnFrontSideOnly: event.target.checked });\n    };\n\n    render() {\n        const { isCreatingPdf, withHelp } = this.props;\n\n        return (\n            <>\n                {withHelp && (\n                    <KawaiiMessage character={Character.Ghost} mood=\"excited\">\n                        <p>Here you can generate PDF.</p>\n                        <p>Hint 1: A4 page size is 210 mm x 297 mm. Letter page size is 215.9 x 279.4 mm.</p>\n                        <p>Hint 2: 1 inch is equal to 25.4 mm.</p>\n                    </KawaiiMessage>\n                )}\n\n                <div className=\"form\">\n                    <label htmlFor=\"page_width\">Page width (mm):</label>\n                    <input\n                        id=\"page_width\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handlePageWidthChange}\n                        placeholder=\"Page width\"\n                        value={this.state.pageWidth}\n                    />\n                    <label htmlFor=\"page_height\">Page height (mm):</label>\n                    <input\n                        id=\"page_height\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handlePageHeightChange}\n                        placeholder=\"Page Height\"\n                        value={this.state.pageHeight}\n                    />\n                    <label htmlFor=\"page_topbottom_margin\">Margin from top/bottom (mm):</label>\n                    <input\n                        id=\"page_topbottom_margin\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handleTopBottomMarginChange}\n                        placeholder=\"Top/Bottom margin\"\n                        value={this.state.topBottomMargin}\n                    />\n                    <label htmlFor=\"page_leftright_margin\">Margin from left/right (mm):</label>\n                    <input\n                        id=\"page_leftright_margin\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handleLeftRightMarginChange}\n                        placeholder=\"Left/Right margin\"\n                        value={this.state.leftRightMargin}\n                    />\n\n                    <label htmlFor=\"card_vertical_space\">Vertical space between cards (mm):</label>\n                    <input\n                        id=\"card_vertical_space\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handleVerticalSpaceChange}\n                        placeholder=\"Vertical space\"\n                        value={this.state.verticalSpace}\n                    />\n\n                    <label htmlFor=\"card_horizontal_space\">Horizontal space between cards (mm):</label>\n                    <input\n                        id=\"card_horizontal_space\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        onChange={this.handleHorizontalSpaceChange}\n                        placeholder=\"Horizontal space\"\n                        value={this.state.horizontalSpace}\n                    />\n\n                    <label\n                        title=\"You might need this for Cardmogrifier or professional printing. Do\n                        not check this if all you are interested in is card (area inside black dashed rectangle).\"\n                    >\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.includeBleedingArea}\n                            onChange={this.handleIncludeBleedingAreaChange}\n                        />\n                        Generate with bleeding area.\n                    </label>\n\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.cutMarksForScissors}\n                            onChange={this.handleCutMarksForScissors}\n                        />\n                        Generate with cut marks for paper scissors.\n                    </label>\n\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.cutMarksForGuillotine}\n                            onChange={this.handleCutMarksForGuillotine}\n                        />\n                        Generate with cut marks for paper guillotine.\n                    </label>\n\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.cutMarksInMarginArea}\n                            onChange={this.handleCutMarksInMarginArea}\n                        />\n                        Generate with cut marks for paper guillotine in margin area.\n                    </label>\n\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.cutMarksOnFrontSideOnly}\n                            onChange={this.handleCutMarksOnFrontSideOnly}\n                        />\n                        Generate cut marks on front side only (useful for printing on both sides).\n                    </label>\n\n                    <button disabled={isCreatingPdf} onClick={this.handleGeneratePdfClick}>\n                        Generate PDF\n                    </button>\n                </div>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        isCreatingPdf: (state.games.activity & ACTIVITY_CREATING_PDF) === ACTIVITY_CREATING_PDF,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(PDFGenerator);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport { State } from '../reducers';\nimport PDFGenerator from './PDFGenerator';\nimport style from './SidebarGeneratePdf.module.css';\n\ninterface StateProps {\n    activeCardSetId: string | null;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarGeneratePdf extends Component<Props> {\n    render() {\n        const { activeCardSetId, visible } = this.props;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'grid' : 'none' }}>\n                {activeCardSetId !== null && <PDFGenerator type=\"cardsets\" id={activeCardSetId} />}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        activeCardSetId: state.cardsets.active,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarGeneratePdf);\n","import { ChromePicker, ColorResult } from 'react-color';\nimport React, { Component } from 'react';\n\ninterface Props {\n    onChange: (color: ColorResult) => void;\n    color: string;\n}\n\ninterface State {\n    displayColorPicker: boolean;\n}\n\nexport default class ColorButton extends Component<Props, State> {\n    state = {\n        displayColorPicker: false,\n    };\n\n    handleClick = () => {\n        this.setState({ displayColorPicker: !this.state.displayColorPicker });\n    };\n\n    handleClose = () => {\n        this.setState({ displayColorPicker: false });\n    };\n\n    handleChange = (color: ColorResult) => {\n        this.props.onChange(color);\n    };\n\n    render() {\n        const popover: React.CSSProperties = {\n            position: 'absolute',\n            zIndex: 2,\n        };\n        const cover: React.CSSProperties = {\n            position: 'fixed',\n            top: '0px',\n            right: '0px',\n            bottom: '0px',\n            left: '0px',\n        };\n        return (\n            <>\n                <button onClick={this.handleClick} title=\"Change color\">\n                    <i className=\"material-icons\">color_lens</i>\n                </button>\n                {this.state.displayColorPicker ? (\n                    <div style={popover}>\n                        <div style={cover} onClick={this.handleClose} />\n                        <ChromePicker color={this.props.color} disableAlpha={true} onChange={this.handleChange} />\n                    </div>\n                ) : null}\n            </>\n        );\n    }\n}\n","import { ColorResult } from 'react-color';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { CardType, DispatchProps, IdsArray, ImageArray, ImageInfo, PlaceholderType, SidebarOwnProps } from '../types';\nimport { State } from '../reducers';\nimport {\n    cardSetAddImagePlaceholder,\n    cardSetChangeActivePlaceholderName,\n    cardSetChangeFitForActivePlaceholder,\n    cardSetChangeImage,\n    cardSetLockActivePlaceholder,\n    cardSetLowerActivePlaceholderToBottom,\n    cardSetRaiseActivePlaceholderToTop,\n    cardSetRemoveActivePlaceholder,\n    cardSetUnlockActivePlaceholder,\n    imageListRequest,\n} from '../actions';\nimport ColorButton from './ColorButton';\nimport style from './SidebarImage.module.css';\n\ninterface StateProps {\n    isAuthenticated: boolean;\n    activePlaceholder: PlaceholderType | null;\n    imageInfo?: ImageInfo;\n    activeCard: CardType | null;\n    filter: string;\n    images: ImageArray;\n    cardsAllIds: IdsArray;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\ninterface LocalState {\n    location: string;\n    applyToAllCards: boolean;\n}\n\nexport class SidebarImage extends Component<Props, LocalState> {\n    state = {\n        location: 'all',\n        applyToAllCards: false,\n    };\n\n    handleAddImageClick = () => {\n        const { dispatch } = this.props;\n        dispatch(cardSetAddImagePlaceholder());\n    };\n\n    changeImage = (ii: ImageInfo) => {\n        const { cardsAllIds, activeCard, activePlaceholder, dispatch } = this.props;\n        const { applyToAllCards } = this.state;\n\n        if (activePlaceholder) {\n            if (applyToAllCards) {\n                for (const cardId of cardsAllIds) {\n                    dispatch(cardSetChangeImage(cardId, activePlaceholder.id, ii));\n                }\n            } else if (activeCard) {\n                dispatch(cardSetChangeImage(activeCard.id, activePlaceholder.id, ii));\n            }\n        }\n    };\n\n    handleRemoveImageFromFieldClick = () => {\n        const ii: ImageInfo = { url: undefined, base64: undefined };\n        this.changeImage(ii);\n    };\n\n    handleRemoveClick = () => {\n        const { activePlaceholder, dispatch } = this.props;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetRemoveActivePlaceholder());\n        }\n    };\n\n    handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activePlaceholder, dispatch } = this.props;\n        const name = event.target.value.trim();\n        if (activePlaceholder !== null) {\n            dispatch(cardSetChangeActivePlaceholderName(name));\n        }\n    };\n\n    handleFilterChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        const { location } = this.state;\n        const filter = event.target.value;\n        dispatch(imageListRequest(filter, location));\n    };\n\n    handleImageSelect = (imageName: string) => {\n        const { imageInfo, activePlaceholder } = this.props;\n\n        if (activePlaceholder !== null) {\n            const color = imageInfo && imageInfo.color;\n\n            const ii: ImageInfo = { url: `/api/imagefiles/${imageName}`, color, base64: undefined };\n            this.changeImage(ii);\n        }\n    };\n\n    handleRaiseToTop = () => {\n        const { activePlaceholder, dispatch } = this.props;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetRaiseActivePlaceholderToTop());\n        }\n    };\n\n    handleLowerToBottom = () => {\n        const { activePlaceholder, dispatch } = this.props;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetLowerActivePlaceholderToBottom());\n        }\n    };\n\n    handleLockField = () => {\n        const { activePlaceholder, dispatch } = this.props;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetLockActivePlaceholder());\n        }\n    };\n\n    handleUnlockField = () => {\n        const { activePlaceholder, dispatch } = this.props;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetUnlockActivePlaceholder());\n        }\n    };\n\n    handleFitOptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        const fit = event.target.value;\n\n        dispatch(cardSetChangeFitForActivePlaceholder(fit));\n    };\n\n    handleOptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { filter, dispatch } = this.props;\n        const location = event.target.value;\n\n        this.setState({ location });\n        dispatch(imageListRequest(filter, location));\n    };\n\n    handleColorChange = (color: ColorResult) => {\n        const ii: ImageInfo = { color: color.hex };\n        this.changeImage(ii);\n    };\n\n    handleRemoveColorClick = () => {\n        const ii: ImageInfo = { color: undefined };\n        this.changeImage(ii);\n    };\n\n    handleApplyToAllCardChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ applyToAllCards: event.target.checked });\n    };\n\n    render() {\n        const { activePlaceholder, imageInfo, filter, visible } = this.props;\n        const { location, applyToAllCards } = this.state;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'grid' : 'none' }}>\n                <div>\n                    <button onClick={this.handleAddImageClick} title=\"Add image field\">\n                        <i className=\"material-icons\">add_photo_alternate</i>\n                    </button>\n\n                    {activePlaceholder !== null && (\n                        <>\n                            <button onClick={this.handleRaiseToTop} title=\"Raise image to top\">\n                                <i className=\"material-icons\">arrow_upward</i>\n                            </button>\n                            <button onClick={this.handleLowerToBottom} title=\"Lower image to bottom\">\n                                <i className=\"material-icons\">arrow_downward</i>\n                            </button>\n                        </>\n                    )}\n\n                    {imageInfo && (\n                        <button onClick={this.handleRemoveImageFromFieldClick} title=\"Remove image from field\">\n                            <i className=\"material-icons\">remove_circle_outline</i>\n                        </button>\n                    )}\n\n                    {activePlaceholder !== null && !activePlaceholder.locked && (\n                        <button\n                            onClick={this.handleLockField}\n                            title=\"Lock image field. Locked field can't be dragged, rotated, resized and removed.\"\n                        >\n                            <i className=\"material-icons\">lock_open</i>\n                        </button>\n                    )}\n\n                    {activePlaceholder !== null && activePlaceholder.locked && (\n                        <button\n                            onClick={this.handleUnlockField}\n                            title=\"Unlock image field. Unlocked text field can be dragged, rotated, resized and removed.\"\n                        >\n                            <i className=\"material-icons\">lock</i>\n                        </button>\n                    )}\n\n                    <button\n                        className={activePlaceholder === null || activePlaceholder.locked ? style.disabled : ''}\n                        onClick={this.handleRemoveClick}\n                        title=\"Remove field\"\n                    >\n                        <i className=\"material-icons\">remove</i>\n                    </button>\n\n                    {activePlaceholder !== null && (\n                        <input\n                            type=\"text\"\n                            value={activePlaceholder.name || ''}\n                            placeholder={activePlaceholder.id}\n                            onChange={this.handleNameChange}\n                            title=\"Change name of image field.\"\n                        />\n                    )}\n\n                    {activePlaceholder && activePlaceholder.type === 'image' && (\n                        <form>\n                            <div>\n                                Fit:\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        value=\"width\"\n                                        checked={!activePlaceholder.fit || activePlaceholder.fit === 'width'}\n                                        onChange={this.handleFitOptionChange}\n                                    />\n                                    width\n                                </label>\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        value=\"height\"\n                                        checked={activePlaceholder.fit === 'height'}\n                                        onChange={this.handleFitOptionChange}\n                                    />\n                                    height\n                                </label>\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        value=\"stretch\"\n                                        checked={activePlaceholder.fit === 'stretch'}\n                                        onChange={this.handleFitOptionChange}\n                                    />\n                                    stretch\n                                </label>\n                            </div>\n                        </form>\n                    )}\n                </div>\n\n                {activePlaceholder && activePlaceholder.type === 'image' && (\n                    <>\n                        <div>\n                            <ColorButton\n                                color={(imageInfo && imageInfo.color) || '#FFFFFF'}\n                                onChange={this.handleColorChange}\n                            />\n                            {imageInfo && imageInfo.color && (\n                                <button onClick={this.handleRemoveColorClick} title=\"Remove color\">\n                                    <i className=\"material-icons\">remove_circle</i>\n                                </button>\n                            )}\n                            <label>\n                                <input\n                                    type=\"checkbox\"\n                                    checked={applyToAllCards}\n                                    onChange={this.handleApplyToAllCardChange}\n                                />\n                                Apply to all cards\n                            </label>\n                        </div>\n                    </>\n                )}\n                <div>\n                    <form>\n                        Source:\n                        <label>\n                            <input\n                                type=\"radio\"\n                                value=\"all\"\n                                checked={location === 'all'}\n                                onChange={this.handleOptionChange}\n                            />\n                            All\n                        </label>\n                        <label>\n                            <input\n                                type=\"radio\"\n                                value=\"user\"\n                                checked={location === 'user'}\n                                onChange={this.handleOptionChange}\n                            />\n                            User\n                        </label>\n                        <label>\n                            <input\n                                type=\"radio\"\n                                value=\"game\"\n                                checked={location === 'game'}\n                                onChange={this.handleOptionChange}\n                            />\n                            Game\n                        </label>\n                    </form>\n                </div>\n\n                <div>\n                    <input type=\"text\" placeholder=\"Search...\" value={filter} onChange={this.handleFilterChange} />\n                </div>\n                <div className={style.images}>\n                    {this.props.images.map(im => {\n                        return (\n                            <img\n                                key={im.id}\n                                src={`/api/imagefiles/${im.name}`}\n                                data-width={im.width}\n                                data-height={im.height}\n                                onClick={() => this.handleImageSelect(im.name)}\n                                alt={im.name}\n                            />\n                        );\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    const activePlaceholder =\n        state.cardsets.activePlaceholder !== null\n            ? state.cardsets.placeholders[state.cardsets.activePlaceholder]\n            : null;\n\n    const activeCard = state.cardsets.activeCard !== null ? state.cardsets.cardsById[state.cardsets.activeCard] : null;\n\n    let imageInfo = undefined;\n\n    if (\n        state.cardsets.images &&\n        activeCard &&\n        state.cardsets.images[activeCard.id] &&\n        activePlaceholder !== null &&\n        activePlaceholder.type === 'image' &&\n        state.cardsets.images[activeCard.id][activePlaceholder.id]\n    ) {\n        imageInfo = state.cardsets.images[activeCard.id][activePlaceholder.id];\n    }\n\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        activePlaceholder,\n        imageInfo,\n        activeCard,\n        images: state.images.images,\n        filter: state.images.filter,\n        cardsAllIds: state.cardsets.cardsAllIds,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarImage);\n","import 'filepond/dist/filepond.min.css';\n\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport { connect } from 'react-redux';\nimport FilePondPluginFileValidateType from 'filepond-plugin-file-validate-type';\nimport Papa from 'papaparse';\nimport React, { Component } from 'react';\nimport md5 from 'md5';\nimport shortid from 'shortid';\n\nimport {\n    CardType,\n    CardsCollection,\n    DispatchProps,\n    IdsArray,\n    PlaceholdersCollection,\n    PlaceholdersImageInfoByCardCollection,\n    PlaceholdersTextInfoByCardCollection,\n    SidebarOwnProps,\n} from '../types';\nimport { FPLoadCallback, FPRevertLoadCallback, cardSetImportData, messageDisplay } from '../actions';\nimport { State } from '../reducers';\nimport { downloadBlob } from '../utils';\nimport style from './SidebarImportExport.module.css';\n\nregisterPlugin(FilePondPluginFileValidateType);\n\ninterface StateProps {\n    activeGame: string | null;\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    cardsAllIds: IdsArray;\n    cardsById: CardsCollection;\n    placeholders: PlaceholdersCollection;\n    placeholdersAllIds: IdsArray;\n    texts: PlaceholdersTextInfoByCardCollection;\n    images: PlaceholdersImageInfoByCardCollection;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarImportExport extends Component<Props> {\n    prepareImagePaths = (images: PlaceholdersImageInfoByCardCollection) => {\n        const { activeGame } = this.props;\n        if (activeGame === null) return images;\n\n        const ending = '_' + md5(activeGame);\n\n        let preparedImages: PlaceholdersImageInfoByCardCollection = {};\n\n        for (const cardId in images) {\n            let imagesByCard = { ...images[cardId] };\n            for (const placeholderId in imagesByCard) {\n                let imageInfo = { ...imagesByCard[placeholderId] };\n                let url = imageInfo.url || '';\n                if (url.endsWith(ending)) {\n                    url = url.replace(ending, '');\n                } else {\n                    imageInfo.global = true;\n                }\n\n                imageInfo.url = url.replace('/api/imagefiles/', '');\n\n                imagesByCard[placeholderId] = imageInfo;\n            }\n            preparedImages[cardId] = imagesByCard;\n        }\n\n        return preparedImages;\n    };\n\n    handleExportJson = () => {\n        const {\n            width,\n            height,\n            isTwoSided,\n            cardsAllIds,\n            cardsById,\n            placeholders,\n            placeholdersAllIds,\n            texts,\n            images,\n        } = this.props;\n\n        const preparedImages = this.prepareImagePaths(images);\n\n        const data = {\n            width,\n            height,\n            isTwoSided,\n            cardsAllIds,\n            cardsById,\n            placeholders,\n            placeholdersAllIds,\n            texts,\n            images: preparedImages,\n        };\n\n        let json = JSON.stringify(data, null, 4);\n        let blob = new Blob([json], { type: 'octet/stream' });\n        let url = window.URL.createObjectURL(blob);\n        downloadBlob(url, 'cardset.json');\n    };\n\n    handleExportCsv = () => {\n        const { cardsAllIds, cardsById, placeholders, placeholdersAllIds, texts, images } = this.props;\n\n        const preparedImages = this.prepareImagePaths(images);\n\n        let csvData: (string | number)[][] = [];\n        let header = ['card_id', 'card_count'];\n        let usedNames: { [key: string]: boolean } = {};\n        for (const plId of placeholdersAllIds) {\n            const placeholder = placeholders[plId];\n            const name = placeholder.name || placeholder.id;\n            if (!(name in usedNames)) {\n                header.push(name);\n                if (placeholder.type === 'image') {\n                    header.push(`${name}_global`);\n                }\n                usedNames[name] = false;\n            }\n        }\n        csvData.push(header);\n\n        for (const cardId of cardsAllIds) {\n            let card = cardsById[cardId];\n\n            let dataRow: (string | number)[] = [cardId, card.count];\n\n            let written = { ...usedNames };\n            for (const plId of placeholdersAllIds) {\n                const placeholder = placeholders[plId];\n                const name = placeholder.name || placeholder.id;\n\n                if (!written[name]) {\n                    if (placeholder.type === 'text') {\n                        dataRow.push(texts[cardId][plId].value);\n                    } else if (placeholder.type === 'image') {\n                        const image = preparedImages[cardId][plId];\n                        dataRow.push(image.url || '');\n                        dataRow.push(image.global ? 'y' : 'n');\n                    }\n                    written[name] = true;\n                }\n            }\n            csvData.push(dataRow);\n        }\n\n        let csv = Papa.unparse(csvData);\n        let blob = new Blob([csv], { type: 'octet/stream' });\n        let url = window.URL.createObjectURL(blob);\n        downloadBlob(url, 'cardset.csv');\n    };\n\n    handleProcess = (fieldName: string, file: File, metadata: { [propName: string]: string }, load: FPLoadCallback) => {\n        const { dispatch, activeGame, placeholders } = this.props;\n        if (activeGame === null) return;\n\n        var reader = new FileReader();\n        reader.readAsText(file, 'UTF-8');\n        reader.onload = function(e) {\n            if (e.target === null) return;\n\n            let data = null;\n            const ending = '_' + md5(activeGame);\n\n            if (file.type === 'application/json') {\n                // eslint-disable-next-line\n                data = JSON.parse((e.target as any).result);\n\n                for (const cardId in data.images) {\n                    const loadedPlaceholders = data.images[cardId];\n                    for (const placeholderId in loadedPlaceholders) {\n                        let imageInfo = loadedPlaceholders[placeholderId];\n                        let isGlobal = imageInfo.global || false;\n\n                        imageInfo.url = `/api/imagefiles/${imageInfo.url}${isGlobal ? '' : ending}`;\n                        delete imageInfo.global;\n                    }\n                }\n            } else if (file.type === 'text/csv') {\n                // eslint-disable-next-line\n                const csvData = Papa.parse((e.target as any).result, { header: true });\n\n                let cardsAllIds: IdsArray = [];\n                let cardsById: CardsCollection = {};\n                let texts: PlaceholdersTextInfoByCardCollection = {};\n                let images: PlaceholdersImageInfoByCardCollection = {};\n\n                for (const row of csvData.data) {\n                    const card: CardType = {\n                        id: row['card_id'] || shortid.generate(),\n                        count: row['card_count'] || 1,\n                    };\n\n                    cardsAllIds.push(card.id);\n                    cardsById[card.id] = card;\n\n                    for (const plId in placeholders) {\n                        const pl = placeholders[plId];\n                        const name = pl.name || pl.id;\n\n                        if (row[name]) {\n                            if (pl.type === 'image') {\n                                const isGlobal = row[`${name}_global`] === 'y';\n                                const url = row[name];\n\n                                if (!(card.id in images)) {\n                                    images[card.id] = {};\n                                }\n\n                                images[card.id][plId] = {\n                                    url: `/api/imagefiles/${url}${isGlobal ? '' : ending}`,\n                                };\n                            } else if (pl.type === 'text') {\n                                if (!(card.id in texts)) {\n                                    texts[card.id] = {};\n                                }\n                                texts[card.id][plId] = { value: row[name] };\n                            }\n                        }\n                    }\n                }\n\n                data = {\n                    cardsAllIds,\n                    cardsById,\n                    texts,\n                    images,\n                };\n            }\n\n            if (data !== null) {\n                dispatch(cardSetImportData(data));\n            }\n        };\n        reader.onerror = function() {\n            dispatch(messageDisplay('error', 'Problem during import.'));\n        };\n\n        load(file.name);\n    };\n\n    handleRevert = (uniqueFileId: string, load: FPRevertLoadCallback) => {\n        load();\n    };\n\n    render() {\n        const { visible } = this.props;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'grid' : 'none' }}>\n                <div>\n                    Here you can export and import your card set data. JSON file contains templates of cards, text and\n                    image data by card, CSV file contains only text and image data by card.\n                </div>\n                <button onClick={this.handleExportJson}>\n                    <i className=\"material-icons\">cloud_download</i> Get JSON\n                </button>\n                <button onClick={this.handleExportCsv}>\n                    <i className=\"material-icons\">cloud_download</i> Get CSV\n                </button>\n\n                <div>Drag & Drop or browser for JSON or CSV file here:</div>\n\n                <FilePond\n                    server={{\n                        process: this.handleProcess,\n                        revert: this.handleRevert,\n                    }}\n                    acceptedFileTypes={['text/csv', 'application/json']}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        activeGame: state.games.active,\n        width: state.cardsets.width,\n        height: state.cardsets.height,\n        isTwoSided: state.cardsets.isTwoSided,\n        cardsAllIds: state.cardsets.cardsAllIds,\n        cardsById: state.cardsets.cardsById,\n        placeholders: state.cardsets.placeholders,\n        placeholdersAllIds: state.cardsets.placeholdersAllIds,\n        texts: state.cardsets.texts,\n        images: state.cardsets.images,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarImportExport);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, IdsArray, PlaceholderType, PlaceholdersCollection, SidebarOwnProps } from '../types';\nimport { State } from '../reducers';\nimport {\n    cardSetActiveCardAndPlaceholder,\n    cardSetChangeActivePlaceholderName,\n    cardSetChangePlaceholderAngle,\n    cardSetChangePlaceholderPosition,\n    cardSetChangePlaceholderSize,\n    cardSetLockActivePlaceholder,\n    cardSetLowerActivePlaceholderToBottom,\n    cardSetRaiseActivePlaceholderToTop,\n    cardSetUnlockActivePlaceholder,\n} from '../actions';\nimport style from './SidebarMeasurements.module.css';\n\ninterface StateProps {\n    activePlaceholder: PlaceholderType | null;\n    activeCard: string | null;\n    placeholders: PlaceholdersCollection;\n    placeholdersAllIds: IdsArray;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarMeasurements extends Component<Props> {\n    handlePrevPlaceholder = () => {\n        const { activeCard, activePlaceholder, placeholders, placeholdersAllIds, dispatch } = this.props;\n        if (placeholdersAllIds.length === 0 || activeCard === null) return;\n\n        let prevPlaceholder = placeholdersAllIds[placeholdersAllIds.length - 1];\n        if (activePlaceholder !== null) {\n            let idx = placeholdersAllIds.indexOf(activePlaceholder.id);\n            if (idx > 0) prevPlaceholder = placeholdersAllIds[idx - 1];\n        }\n\n        dispatch(\n            cardSetActiveCardAndPlaceholder(\n                activeCard,\n                placeholders[prevPlaceholder].isOnBack || false,\n                prevPlaceholder,\n            ),\n        );\n    };\n\n    handleNextPlaceholder = () => {\n        const { activeCard, activePlaceholder, placeholders, placeholdersAllIds, dispatch } = this.props;\n        if (placeholdersAllIds.length === 0 || activeCard === null) return;\n\n        let nextPlaceholder = placeholdersAllIds[0];\n        if (activePlaceholder !== null) {\n            let idx = placeholdersAllIds.indexOf(activePlaceholder.id);\n            if (idx !== -1 && idx !== placeholdersAllIds.length - 1) nextPlaceholder = placeholdersAllIds[idx + 1];\n        }\n\n        dispatch(\n            cardSetActiveCardAndPlaceholder(\n                activeCard,\n                placeholders[nextPlaceholder].isOnBack || false,\n                nextPlaceholder,\n            ),\n        );\n    };\n\n    handleRaiseToTop = () => {\n        const { activePlaceholder, dispatch } = this.props;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetRaiseActivePlaceholderToTop());\n        }\n    };\n\n    handleLowerToBottom = () => {\n        const { activePlaceholder, dispatch } = this.props;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetLowerActivePlaceholderToBottom());\n        }\n    };\n\n    handleLockField = () => {\n        const { activePlaceholder, dispatch } = this.props;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetLockActivePlaceholder());\n        }\n    };\n\n    handleUnlockField = () => {\n        const { activePlaceholder, dispatch } = this.props;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetUnlockActivePlaceholder());\n        }\n    };\n\n    handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activePlaceholder, dispatch } = this.props;\n        const name = event.target.value.trim();\n        if (activePlaceholder !== null) {\n            dispatch(cardSetChangeActivePlaceholderName(name));\n        }\n    };\n\n    handleWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activePlaceholder, dispatch } = this.props;\n        const width = parseFloat(event.target.value);\n        if (activePlaceholder !== null) {\n            dispatch(cardSetChangePlaceholderSize(activePlaceholder, width, activePlaceholder.height));\n        }\n    };\n\n    handleHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activePlaceholder, dispatch } = this.props;\n        const height = parseFloat(event.target.value);\n        if (activePlaceholder !== null) {\n            dispatch(cardSetChangePlaceholderSize(activePlaceholder, activePlaceholder.width, height));\n        }\n    };\n\n    handleXChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activePlaceholder, dispatch } = this.props;\n        const x = parseFloat(event.target.value);\n        if (activePlaceholder !== null) {\n            dispatch(cardSetChangePlaceholderPosition(activePlaceholder, x, activePlaceholder.y));\n        }\n    };\n\n    handleYChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activePlaceholder, dispatch } = this.props;\n        const y = parseFloat(event.target.value);\n        if (activePlaceholder !== null) {\n            dispatch(cardSetChangePlaceholderPosition(activePlaceholder, activePlaceholder.x, y));\n        }\n    };\n\n    handleAngleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activePlaceholder, dispatch } = this.props;\n        const angle = (parseFloat(event.target.value) * Math.PI) / 180;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetChangePlaceholderAngle(activePlaceholder, angle));\n        }\n    };\n\n    render() {\n        const { activeCard, activePlaceholder, visible } = this.props;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'initial' : 'none' }}>\n                {activeCard !== null && (\n                    <>\n                        <button onClick={this.handlePrevPlaceholder} title=\"Previous placeholder\">\n                            <i className=\"material-icons\">arrow_back</i>\n                        </button>\n                        <button onClick={this.handleNextPlaceholder} title=\"Next placeholder\">\n                            <i className=\"material-icons\">arrow_forward</i>\n                        </button>\n                    </>\n                )}\n\n                {activePlaceholder !== null && (\n                    <>\n                        <button onClick={this.handleRaiseToTop} title=\"Raise to top\">\n                            <i className=\"material-icons\">arrow_upward</i>\n                        </button>\n                        <button onClick={this.handleLowerToBottom} title=\"Lower to bottom\">\n                            <i className=\"material-icons\">arrow_downward</i>\n                        </button>\n                    </>\n                )}\n\n                {activePlaceholder !== null && !activePlaceholder.locked && (\n                    <button\n                        onClick={this.handleLockField}\n                        title=\"Lock field. Locked field can't be dragged, rotated, resized and removed.\"\n                    >\n                        <i className=\"material-icons\">lock_open</i>\n                    </button>\n                )}\n\n                {activePlaceholder !== null && activePlaceholder.locked && (\n                    <button\n                        onClick={this.handleUnlockField}\n                        title=\"Unlock field. Unlocked field can be dragged, rotated, resized and removed.\"\n                    >\n                        <i className=\"material-icons\">lock</i>\n                    </button>\n                )}\n\n                {activePlaceholder !== null && (\n                    <div>\n                        <label>\n                            Field name:\n                            <input\n                                type=\"text\"\n                                value={activePlaceholder.name || ''}\n                                placeholder={activePlaceholder.id}\n                                onChange={this.handleNameChange}\n                                title=\"Change name of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            Width:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={activePlaceholder.width}\n                                placeholder=\"Width\"\n                                onChange={this.handleWidthChange}\n                                title=\"Change width of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            Height:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={activePlaceholder.height}\n                                placeholder=\"Height\"\n                                onChange={this.handleHeightChange}\n                                title=\"Change width of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            X:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={activePlaceholder.x}\n                                placeholder=\"Width\"\n                                onChange={this.handleXChange}\n                                title=\"Change x coordinate of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            Y:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={activePlaceholder.y}\n                                placeholder=\"Height\"\n                                onChange={this.handleYChange}\n                                title=\"Change y coordinate of field.\"\n                            />\n                        </label>\n\n                        <label>\n                            Angle:\n                            <input\n                                type=\"number\"\n                                step=\"any\"\n                                value={(activePlaceholder.angle * 180) / Math.PI}\n                                placeholder=\"Angle\"\n                                onChange={this.handleAngleChange}\n                                title=\"Change rotation angle of field.\"\n                            />\n                        </label>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    const activePlaceholder =\n        state.cardsets.activePlaceholder !== null\n            ? state.cardsets.placeholders[state.cardsets.activePlaceholder]\n            : null;\n\n    return {\n        activePlaceholder,\n        activeCard: state.cardsets.activeCard,\n        placeholders: state.cardsets.placeholders,\n        placeholdersAllIds: state.cardsets.placeholdersAllIds,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarMeasurements);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport { State } from '../reducers';\nimport {\n    cardSetChangeHeight,\n    cardSetChangeIsTwoSided,\n    cardSetChangeSnappingDistance,\n    cardSetChangeWidth,\n    cardSetSetZoom,\n} from '../actions';\nimport style from './SidebarSettings.module.css';\n\ninterface StateProps {\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    snappingDistance: number;\n    zoom: number;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarDetails extends Component<Props> {\n    handleWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeWidth(parseFloat(event.target.value)));\n    };\n\n    handleHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeHeight(parseFloat(event.target.value)));\n    };\n\n    handleIsTwoSidedChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeIsTwoSided(event.target.checked));\n    };\n\n    handleZoom = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetSetZoom(parseFloat(event.target.value)));\n    };\n\n    handleSnappingDistance = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeSnappingDistance(parseFloat(event.target.value)));\n    };\n\n    render() {\n        const { width, height, isTwoSided, snappingDistance, visible, zoom } = this.props;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'initial' : 'none' }}>\n                <label htmlFor=\"card_width\">Card width (mm):</label>\n                <input\n                    id=\"card_width\"\n                    type=\"number\"\n                    min=\"0\"\n                    step=\"0.1\"\n                    onChange={this.handleWidthChange}\n                    className=\"form-control\"\n                    placeholder=\"width\"\n                    value={width}\n                />\n                <label htmlFor=\"card_height\">Card height (mm):</label>\n                <input\n                    id=\"card_height\"\n                    type=\"number\"\n                    min=\"0\"\n                    step=\"0.1\"\n                    onChange={this.handleHeightChange}\n                    className=\"form-control\"\n                    placeholder=\"height\"\n                    value={height}\n                />\n                <label>\n                    Cards have two sides:{' '}\n                    <input\n                        type=\"checkbox\"\n                        onChange={this.handleIsTwoSidedChange}\n                        className=\"form-control\"\n                        checked={isTwoSided}\n                    />\n                </label>\n                <div>\n                    <label htmlFor=\"zoom\">Zoom (if you want to see details or big picture)</label>\n                    <input\n                        id=\"zoom\"\n                        type=\"number\"\n                        min=\"0.1\"\n                        step=\"0.1\"\n                        onChange={this.handleZoom}\n                        className=\"form-control\"\n                        placeholder=\"zoom\"\n                        value={zoom}\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"zoom\">Snapping distance in mm. 0 to disable.</label>\n                    <input\n                        id=\"zoom\"\n                        type=\"number\"\n                        min=\"0\"\n                        step=\"0.1\"\n                        onChange={this.handleSnappingDistance}\n                        className=\"form-control\"\n                        placeholder=\"Snapping distance\"\n                        value={snappingDistance}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        width: state.cardsets.width,\n        height: state.cardsets.height,\n        isTwoSided: state.cardsets.isTwoSided,\n        snappingDistance: state.cardsets.snappingDistance,\n        zoom: state.cardsets.zoom,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarDetails);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport WebFont from 'webfontloader';\n\nimport { DEFAULT_LINE_HEIGHT } from '../constants';\nimport {\n    Dispatch,\n    cardSetChangeActiveTextPlaceholderFontFamilyAndVariant,\n    cardSetChangeActiveTextPlaceholderFontSize,\n    cardSetChangeActiveTextPlaceholderFontVariant,\n    cardSetChangeActiveTextPlaceholderLineHeight,\n} from '../actions';\nimport { State } from '../reducers';\nimport style from './FontSelector.module.css';\nimport webfonts from './webfonts.json';\n\ninterface WebFontsInfo {\n    [propName: string]: {\n        [propName: string]: string;\n    };\n}\n\ninterface FontOption {\n    value: string;\n    label: string;\n}\n\nconst options: FontOption[] = Object.keys(webfonts)\n    .sort()\n    .map(fi => ({ value: fi, label: fi }));\n\ninterface StateProps {\n    activeFont: string;\n    activeFontVariant: string;\n    activeFontSize: number;\n    activeLineHeight: number;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = StateProps & DispatchProps;\n\nclass FontSelector extends Component<Props> {\n    getFontStringForLoad = (family: string, variant: string) => {\n        let stringForLoad = family;\n        if (variant !== 'regular') {\n            stringForLoad += ':' + variant;\n        }\n        return stringForLoad;\n    };\n\n    handleChange = (selectedOption?: FontOption | FontOption[] | null) => {\n        if (!selectedOption) return;\n\n        const fontFamily = (selectedOption as FontOption).value;\n\n        let fontVariant = this.props.activeFontVariant;\n        const wf: WebFontsInfo = webfonts;\n        if (!(fontVariant in wf[fontFamily])) {\n            fontVariant = Object.keys(wf[fontFamily]).sort()[0];\n        }\n\n        WebFont.load({\n            google: {\n                families: [this.getFontStringForLoad(fontFamily, fontVariant)],\n            },\n            active: () => {\n                const { dispatch } = this.props;\n                dispatch(cardSetChangeActiveTextPlaceholderFontFamilyAndVariant(fontFamily, fontVariant));\n            },\n        });\n    };\n\n    handleFontVariantChange = (selectedOption?: FontOption | FontOption[] | null) => {\n        if (!selectedOption) return;\n\n        const value = (selectedOption as FontOption).value;\n        WebFont.load({\n            google: {\n                families: [this.getFontStringForLoad(this.props.activeFont, value)],\n            },\n            active: () => {\n                const { dispatch } = this.props;\n                dispatch(cardSetChangeActiveTextPlaceholderFontVariant(value));\n            },\n        });\n    };\n\n    handleFontSizeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeActiveTextPlaceholderFontSize(parseFloat(event.target.value)));\n    };\n\n    handleLineHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetChangeActiveTextPlaceholderLineHeight(parseFloat(event.target.value)));\n    };\n\n    render() {\n        const selectedFontFamily = options.find(f => f.value === this.props.activeFont);\n\n        const fontVariantOptions: FontOption[] = Object.keys((webfonts as WebFontsInfo)[this.props.activeFont])\n            .sort()\n            .map(fv => ({ value: fv, label: fv }));\n\n        const selectedFontVariant = fontVariantOptions.find(f => f.value === this.props.activeFontVariant);\n\n        return (\n            <>\n                <input\n                    type=\"number\"\n                    value={this.props.activeFontSize}\n                    onChange={this.handleFontSizeChange}\n                    title=\"Font size\"\n                />\n                <Select\n                    className={style.fontFamily}\n                    value={selectedFontFamily}\n                    onChange={this.handleChange}\n                    options={options}\n                />\n                <Select\n                    className={style.fontVariant}\n                    value={selectedFontVariant}\n                    onChange={this.handleFontVariantChange}\n                    options={fontVariantOptions}\n                />\n                <input\n                    type=\"number\"\n                    value={this.props.activeLineHeight}\n                    onChange={this.handleLineHeightChange}\n                    title=\"Line height\"\n                    step=\"0.01\"\n                />\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    let activeFont = state.cardsets.textSettings.fontFamily;\n    let activeFontVariant = state.cardsets.textSettings.fontVariant;\n    let activeFontSize = state.cardsets.textSettings.fontSize;\n    let activeLineHeight = state.cardsets.textSettings.lineHeight || DEFAULT_LINE_HEIGHT;\n\n    return {\n        activeFont,\n        activeFontVariant,\n        activeFontSize,\n        activeLineHeight,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, {}, State>(mapStateToProps)(FontSelector);\n","import { ColorResult } from 'react-color';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, PlaceholderType, SidebarOwnProps } from '../types';\nimport { State } from '../reducers';\nimport {\n    cardSetAddTextPlaceholder,\n    cardSetChangeActivePlaceholderName,\n    cardSetChangeActiveTextPlaceholderAlign,\n    cardSetLockActivePlaceholder,\n    cardSetLowerActivePlaceholderToBottom,\n    cardSetRaiseActivePlaceholderToTop,\n    cardSetRemoveActivePlaceholder,\n    cardSetUnlockActivePlaceholder,\n    cardSetChangeActiveTextPlaceholderColor,\n} from '../actions';\nimport ColorButton from './ColorButton';\nimport FontSelector from './FontSelector';\nimport style from './SidebarText.module.css';\n\ninterface StateProps {\n    isAuthenticated: boolean;\n    activePlaceholder: PlaceholderType | null;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarText extends Component<Props> {\n    handleAddTextClick = () => {\n        const { dispatch } = this.props;\n        dispatch(cardSetAddTextPlaceholder());\n    };\n\n    handleSetTextAlignLeft = () => {\n        const selection = window.getSelection();\n        const range = selection.getRangeAt(0);\n        if (selection.rangeCount === 1 && range.collapsed) {\n            const { dispatch } = this.props;\n            dispatch(cardSetChangeActiveTextPlaceholderAlign('left'));\n        } else {\n            document.execCommand('justifyleft');\n        }\n    };\n\n    handleSetTextAlignCenter = () => {\n        const selection = window.getSelection();\n        const range = selection.getRangeAt(0);\n        if (selection.rangeCount === 1 && range.collapsed) {\n            const { dispatch } = this.props;\n            dispatch(cardSetChangeActiveTextPlaceholderAlign('center'));\n        } else {\n            document.execCommand('justifycenter');\n        }\n    };\n\n    handleSetTextAlignRight = () => {\n        const selection = window.getSelection();\n        const range = selection.getRangeAt(0);\n        if (selection.rangeCount === 1 && range.collapsed) {\n            const { dispatch } = this.props;\n            dispatch(cardSetChangeActiveTextPlaceholderAlign('right'));\n        } else {\n            document.execCommand('justifyright');\n        }\n    };\n\n    handleSetTextBold = () => {\n        document.execCommand('bold');\n    };\n\n    handleSetTextItalic = () => {\n        document.execCommand('italic');\n    };\n\n    handleRemoveClick = () => {\n        const { activePlaceholder, dispatch } = this.props;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetRemoveActivePlaceholder());\n        }\n    };\n\n    handleRaiseToTop = () => {\n        const { activePlaceholder, dispatch } = this.props;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetRaiseActivePlaceholderToTop());\n        }\n    };\n\n    handleLowerToBottom = () => {\n        const { activePlaceholder, dispatch } = this.props;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetLowerActivePlaceholderToBottom());\n        }\n    };\n\n    handleLockField = () => {\n        const { activePlaceholder, dispatch } = this.props;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetLockActivePlaceholder());\n        }\n    };\n\n    handleUnlockField = () => {\n        const { activePlaceholder, dispatch } = this.props;\n        if (activePlaceholder !== null) {\n            dispatch(cardSetUnlockActivePlaceholder());\n        }\n    };\n\n    handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { activePlaceholder, dispatch } = this.props;\n        const name = event.target.value.trim();\n        if (activePlaceholder !== null) {\n            dispatch(cardSetChangeActivePlaceholderName(name));\n        }\n    };\n\n    handleColorChange = (color: ColorResult) => {\n        const selection = window.getSelection();\n        const range = selection.getRangeAt(0);\n        if (selection.rangeCount === 1 && range.collapsed) {\n            const { dispatch } = this.props;\n            dispatch(cardSetChangeActiveTextPlaceholderColor(color.hex));\n        } else {\n            document.execCommand('forecolor', false, color.hex);\n        }\n    };\n\n    render() {\n        const { activePlaceholder, visible } = this.props;\n\n        let color = '#000000';\n        if (activePlaceholder && activePlaceholder.type === 'text' && activePlaceholder.color) {\n            color = activePlaceholder.color;\n        }\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'initial' : 'none' }}>\n                <button onClick={this.handleAddTextClick} title=\"Add text field\">\n                    <i className=\"material-icons\">text_fields</i>\n                </button>\n                {activePlaceholder !== null && (\n                    <>\n                        <button onClick={this.handleRaiseToTop} title=\"Raise text to top\">\n                            <i className=\"material-icons\">arrow_upward</i>\n                        </button>\n                        <button onClick={this.handleLowerToBottom} title=\"Lower text to bottom\">\n                            <i className=\"material-icons\">arrow_downward</i>\n                        </button>\n                    </>\n                )}\n\n                {activePlaceholder !== null && !activePlaceholder.locked && (\n                    <button\n                        onClick={this.handleLockField}\n                        title=\"Lock text field. Locked field can't be dragged, rotated, resized and removed.\"\n                    >\n                        <i className=\"material-icons\">lock_open</i>\n                    </button>\n                )}\n\n                {activePlaceholder !== null && activePlaceholder.locked && (\n                    <button\n                        onClick={this.handleUnlockField}\n                        title=\"Unlock text field. Unlocked text field can be dragged, rotated, resized and removed.\"\n                    >\n                        <i className=\"material-icons\">lock</i>\n                    </button>\n                )}\n\n                <button\n                    className={activePlaceholder === null || activePlaceholder.locked ? style.disabled : ''}\n                    onClick={this.handleRemoveClick}\n                    title=\"Remove field\"\n                >\n                    <i className=\"material-icons\">remove</i>\n                </button>\n\n                {activePlaceholder !== null && (\n                    <input\n                        type=\"text\"\n                        value={activePlaceholder.name || ''}\n                        placeholder={activePlaceholder.id}\n                        onChange={this.handleNameChange}\n                        title=\"Change name of text field.\"\n                    />\n                )}\n\n                <div>\n                    <button onClick={this.handleSetTextAlignLeft} title=\"Align text left\">\n                        <i className=\"material-icons\">format_align_left</i>\n                    </button>\n                    <button onClick={this.handleSetTextAlignCenter} title=\"Align text center\">\n                        <i className=\"material-icons\">format_align_center</i>\n                    </button>\n                    <button onClick={this.handleSetTextAlignRight} title=\"Align text right\">\n                        <i className=\"material-icons\">format_align_right</i>\n                    </button>\n                    <button onClick={this.handleSetTextBold} title=\"Makes selected text bold\">\n                        <i className=\"material-icons\">format_bold</i>\n                    </button>\n                    <button onClick={this.handleSetTextItalic} title=\"Makes selected text italic\">\n                        <i className=\"material-icons\">format_italic</i>\n                    </button>\n                    <ColorButton color={color} onChange={this.handleColorChange} />\n                    <FontSelector />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    const activePlaceholder =\n        state.cardsets.activePlaceholder !== null\n            ? state.cardsets.placeholders[state.cardsets.activePlaceholder]\n            : null;\n\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        activePlaceholder,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarText);\n","import 'filepond/dist/filepond.min.css';\n\nimport './SidebarUpload.css';\n\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport { connect } from 'react-redux';\nimport FilePondPluginFileValidateSize from 'filepond-plugin-file-validate-size';\nimport FilePondPluginFileValidateType from 'filepond-plugin-file-validate-type';\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport {\n    FPAbortCallback,\n    FPErrorCallback,\n    FPLoadCallback,\n    FPProgressCallback,\n    FPRevertLoadCallback,\n    cardSetDeleteImage,\n    cardSetUploadImage,\n} from '../actions';\nimport { State } from '../reducers';\nimport style from './SidebarUpload.module.css';\n\nregisterPlugin(FilePondPluginFileValidateSize);\nregisterPlugin(FilePondPluginFileValidateType);\n\ninterface StateProps {\n    activeGame: string | null;\n}\n\ntype Props = StateProps & DispatchProps & SidebarOwnProps;\n\nexport class SidebarUpload extends Component<Props> {\n    handleProcess = (\n        fieldName: string,\n        file: File,\n        metadata: { [propName: string]: string },\n        load: FPLoadCallback,\n        error: FPErrorCallback,\n        progress: FPProgressCallback,\n        abort: FPAbortCallback,\n    ) => {\n        const { dispatch, activeGame } = this.props;\n\n        if (activeGame === null) {\n            abort();\n            return;\n        }\n\n        let source = axios.CancelToken.source();\n\n        dispatch(cardSetUploadImage(activeGame, file, load, error, progress, abort, source.token));\n\n        return { abort: source.cancel };\n    };\n\n    handleRevert = (uniqueFileId: string, load: FPRevertLoadCallback, error: FPErrorCallback) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetDeleteImage(uniqueFileId, load, error));\n    };\n\n    render() {\n        const { visible } = this.props;\n\n        return (\n            <div className={style.view} style={{ display: visible ? 'grid' : 'none' }}>\n                <div>\n                    Uploaded imaged are kept for limited time. If they are deleted then simply re-upload them again.\n                </div>\n                <FilePond\n                    allowMultiple={true}\n                    server={{\n                        process: this.handleProcess,\n                        revert: this.handleRevert,\n                    }}\n                    acceptedFileTypes={['image/png', 'image/jpeg', 'image/svg+xml']}\n                    allowFileSizeValidation={true}\n                    maxFileSize=\"500KB\"\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        activeGame: state.games.active,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, SidebarOwnProps, State>(mapStateToProps)(SidebarUpload);\n","import { connect, ConnectedComponentClass } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { DispatchProps, SidebarOwnProps } from '../types';\nimport { SidebarState, cardSetSetSidebarState } from '../actions';\nimport { State } from '../reducers';\nimport SidebarDetails from './SidebarDetails';\nimport SidebarGeneratePng from './SidebarGeneratePng';\nimport SidebarGeneratePdf from './SidebarGeneratePdf';\nimport SidebarImage from './SidebarImage';\nimport SidebarImportExport from './SidebarImportExport';\nimport SidebarMeasurements from './SidebarMeasurements';\nimport SidebarSettings from './SidebarSettings';\nimport SidebarText from './SidebarText';\nimport SidebarUpload from './SidebarUpload';\nimport style from './Sidebar.module.css';\n\ninterface StateProps {\n    isAuthenticated: boolean;\n    activeSidebar: SidebarState | null;\n}\n\ntype Props = StateProps & DispatchProps;\n\ninterface SidebarInfo {\n    state: SidebarState;\n    title: string;\n    icon: string;\n    component: ConnectedComponentClass<typeof Component, SidebarOwnProps>;\n}\n\nconst SIDEBARS: SidebarInfo[] = [\n    {\n        state: SidebarState.Settings,\n        title: 'Settings',\n        icon: 'settings',\n        component: SidebarSettings,\n    },\n    {\n        state: SidebarState.Details,\n        title: 'Details',\n        icon: 'details',\n        component: SidebarDetails,\n    },\n    {\n        state: SidebarState.Measurements,\n        title: 'Measurements',\n        icon: 'format_shapes',\n        component: SidebarMeasurements,\n    },\n    {\n        state: SidebarState.Image,\n        title: 'Images',\n        icon: 'photo',\n        component: SidebarImage,\n    },\n    {\n        state: SidebarState.Text,\n        title: 'Texts',\n        icon: 'text_fields',\n        component: SidebarText,\n    },\n    {\n        state: SidebarState.Upload,\n        title: 'Upload',\n        icon: 'cloud_upload',\n        component: SidebarUpload,\n    },\n    {\n        state: SidebarState.ImportExport,\n        title: 'Import/Export',\n        icon: 'import_export',\n        component: SidebarImportExport,\n    },\n    {\n        state: SidebarState.Png,\n        title: 'Generate as PNG',\n        icon: 'photo_library',\n        component: SidebarGeneratePng,\n    },\n    {\n        state: SidebarState.Pdf,\n        title: 'Generate as PDF',\n        icon: 'picture_as_pdf',\n        component: SidebarGeneratePdf,\n    },\n];\n\nexport class Sidebar extends Component<Props> {\n    handleSidebar = (state: SidebarState) => {\n        const { activeSidebar, dispatch } = this.props;\n        if (activeSidebar === state) {\n            dispatch(cardSetSetSidebarState(null));\n        } else {\n            dispatch(cardSetSetSidebarState(state));\n        }\n    };\n\n    render() {\n        const { activeSidebar } = this.props;\n        return (\n            <div className={style.sidebar}>\n                <div className={style.controls}>\n                    {SIDEBARS.map(sb => (\n                        <i\n                            key={sb.state}\n                            title={sb.title}\n                            className={`material-icons ${activeSidebar === sb.state ? style.active : ''}`}\n                            onClick={() => this.handleSidebar(sb.state)}\n                        >\n                            {sb.icon}\n                        </i>\n                    ))}\n                </div>\n                <div className={`${style.view} ${activeSidebar === null ? style.hidden : ''}`}>\n                    {SIDEBARS.map(sb => (\n                        <sb.component key={sb.state} visible={activeSidebar === sb.state} />\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        activeSidebar: state.cardsets.activeSidebar,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, {}, State>(mapStateToProps)(Sidebar);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport shortid from 'shortid';\n\nimport { ACTIVITY_SELECTING, State } from '../reducers';\nimport { BLEED_WIDTH } from '../constants';\nimport { CardSetType, CardType, CardsCollection } from '../types';\nimport { Dispatch, cardSetActiveCardAndPlaceholder, cardSetCreateCard, cardSetRenameRequest } from '../actions';\nimport Card from './Card';\nimport EditableTitle from './EditableTitle';\nimport KawaiiMessage, { Character } from './KawaiiMessage';\nimport Loader from './Loader';\nimport Sidebar from './Sidebar';\nimport style from './CardSet.module.css';\n\ninterface StateProps {\n    width: number;\n    height: number;\n    isTwoSided: boolean;\n    isAuthenticated: boolean;\n    cardsAllIds: string[];\n    cardsById: CardsCollection;\n    activity: number;\n    zoom: number;\n    activeCardSet: CardSetType | null;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = StateProps & DispatchProps;\n\ninterface LocalState {\n    pageWidth: number;\n    pageHeight: number;\n    topBottomMargin: number;\n    leftRightMargin: number;\n}\n\nexport class CardSet extends Component<Props, LocalState> {\n    state = {\n        pageWidth: 210,\n        pageHeight: 297,\n        topBottomMargin: 15,\n        leftRightMargin: 9,\n    };\n\n    handleCreateCardClick = () => {\n        const { dispatch } = this.props;\n\n        const newCard: CardType = { id: shortid.generate(), count: 1 };\n\n        dispatch(cardSetCreateCard(newCard));\n    };\n\n    handleClickOutsideOfCard = () => {\n        const { dispatch } = this.props;\n        dispatch(cardSetActiveCardAndPlaceholder(null, false, null));\n    };\n\n    handleCardSetNameChange = (newName: string) => {\n        const { dispatch, activeCardSet } = this.props;\n        if (activeCardSet !== null) {\n            dispatch(cardSetRenameRequest(activeCardSet.id, newName));\n        }\n    };\n\n    render() {\n        const {\n            isAuthenticated,\n            cardsAllIds,\n            cardsById,\n            width,\n            height,\n            isTwoSided,\n            activity,\n            zoom,\n            activeCardSet,\n        } = this.props;\n\n        const widthWithBleeds = width + BLEED_WIDTH * 2;\n        const heightWithBleeds = height + BLEED_WIDTH * 2;\n\n        return (\n            isAuthenticated && (\n                <div>\n                    <KawaiiMessage character={Character.Ghost}>\n                        <p>Here you can design your cards.</p>\n                    </KawaiiMessage>\n\n                    {activeCardSet !== null && (\n                        <EditableTitle title={activeCardSet.name} onChange={this.handleCardSetNameChange} />\n                    )}\n\n                    <div className={style.cardsetview}>\n                        <div className={style.sidebar}>\n                            <Sidebar />\n                        </div>\n                        <div onMouseDown={this.handleClickOutsideOfCard} onTouchStart={this.handleClickOutsideOfCard}>\n                            {(activity & ACTIVITY_SELECTING) === ACTIVITY_SELECTING && <Loader />}\n                            <div className={style.cardset}>\n                                <ul\n                                    style={{\n                                        gridTemplateColumns: `repeat(auto-fill, minmax(${widthWithBleeds *\n                                            zoom}mm, 1fr))`,\n                                    }}\n                                >\n                                    {cardsAllIds &&\n                                        cardsAllIds.map(cardId => [\n                                            <li key={cardId}>\n                                                <Card card={cardsById[cardId]} isBack={false} />\n                                            </li>,\n                                            isTwoSided && (\n                                                <li key={`${cardId}back`}>\n                                                    <Card card={cardsById[cardId]} isBack={true} />\n                                                </li>\n                                            ),\n                                        ])}\n                                    <li key=\"newCard\">\n                                        <div\n                                            id=\"newCard\"\n                                            className={style.createCard}\n                                            style={{\n                                                width: `${widthWithBleeds * zoom}mm`,\n                                                height: `${heightWithBleeds * zoom}mm`,\n                                                position: 'relative',\n                                                overflow: 'hidden',\n                                            }}\n                                            onClick={this.handleCreateCardClick}\n                                        >\n                                            <div>\n                                                <i className=\"material-icons\">add</i>\n                                                <div>Add Card</div>\n                                            </div>\n                                        </div>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        );\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n    return {\n        activity: state.cardsets.activity,\n        width: state.cardsets.width,\n        height: state.cardsets.height,\n        isTwoSided: state.cardsets.isTwoSided,\n        zoom: state.cardsets.zoom,\n        isAuthenticated: state.auth.isAuthenticated,\n        cardsAllIds: state.cardsets.cardsAllIds,\n        cardsById: state.cardsets.cardsById,\n        activeCardSet:\n            state.cardsets.active && state.cardsets.byId[state.cardsets.active]\n                ? state.cardsets.byId[state.cardsets.active]\n                : null,\n    };\n};\n\nexport default connect<StateProps, DispatchProps, {}, State>(mapStateToProps)(CardSet);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, cardSetSelectRequest } from './actions';\nimport { State } from './reducers';\nimport CardSet from './components/CardSet';\n\ninterface Props {\n    dispatch: Dispatch;\n    match: { params: { id: string } };\n    isAuthenticated: boolean;\n}\n\nexport class CardSetPage extends Component<Props> {\n    componentDidMount() {\n        const { dispatch, match } = this.props;\n        dispatch(cardSetSelectRequest(match.params.id));\n    }\n\n    render() {\n        return <CardSet />;\n    }\n}\n\nconst mapStateToProps = (state: State) => ({ isAuthenticated: state.auth.isAuthenticated });\n\nexport default connect(mapStateToProps)(CardSetPage);\n","import React, { Component } from 'react';\n\nexport default class ChangelogPage extends Component {\n    render() {\n        return (\n            <div>\n                <p>Here you can find list of future plans and what was implemented recently.</p>\n                <h2>Future plans</h2>\n                <ul>\n                    <li>\n                        Image improvements:\n                        <ul>\n                            <li>Generating list of author's of icons if attribution is required.</li>\n                            <li>Various ideas for advanced images controls.</li>\n                        </ul>\n                    </li>\n                    <li>Card templates.</li>\n                    <li>UI improvements (keyboard support and etc.).</li>\n                    <li>Possibility to order your games for printing from various printing providers.</li>\n                </ul>\n                <h2>2019-05-26</h2>\n                <ul>\n                    <li>\n                        Text rendering fixes.\n                    </li>\n                    <li>\n                        Card Sets and Games list are sorted alphabetically now.\n                    </li>\n                    <li>\n                        Image handling improvements.\n                    </li>\n                </ul>\n                <h2>2019-05-18</h2>\n                <ul>\n                    <li>\n                        PDF and PNG generation improvements.\n                    </li>\n                </ul>\n                <h2>2019-05-17</h2>\n                <ul>\n                    <li>\n                        PNG generation for card set or the whole game. This will benefit if you want to publish game via{' '}\n                        <a href=\"https://www.thegamecrafter.com/\">The Game Crafter</a>,{' '}\n                        <a href=\"makeplayingcards.com\">Make Playing Cards</a> or any other place.\n                    </li>\n                </ul>\n                <h2>2019-04-13</h2>\n                <ul>\n                    <li>Option to generate cutting marks on front side only.</li>\n                    <li>Guillotine cuttings marks on card edges.</li>\n                    <li>\n                        Field move limitation is removed because if drag field outside of view you can return it using\n                        custom positions and size controls.\n                    </li>\n                    <li>Drag and drop improvement.</li>\n                </ul>\n                <h2>2019-04-07</h2>\n                <ul>\n                    <li>Snapping implemented for move, rotation and resize operations.</li>\n                    <li>Image search changes and improvements.</li>\n                    <li>\n                        Drag&Drop support for images. Images can be dropped to text field as well but it is assumed that\n                        dropped images are square when generating PDF.\n                    </li>\n                    <li>Bold and Italic support in text added.</li>\n                    <li>Other minor fixes.</li>\n                </ul>\n                <h2>2019-03-22</h2>\n                <ul>\n                    <li>Two-sided cards.</li>\n                    <li>PDF generation for all the game.</li>\n                    <li>More PDF generation options added</li>\n                    <li>Change color of images (for SVG images only, e.g. try using with \"forms\" images).</li>\n                    <li>Game rename and delete</li>\n                    <li>Card Set rename and delete</li>\n                    <li>Text: line height support</li>\n                    <li>UI/UX improvements</li>\n                </ul>\n                <h2>2019-03-03</h2>\n                <ul>\n                    <li>Data import/export in JSON and CSV formats.</li>\n                    <li>\n                        Named fields. If multiple fields have the same name then by editing one you change value in all\n                        of them. As well named fields look better in data export/import.\n                    </li>\n                </ul>\n\n                <h2>2019-03-02</h2>\n                <ul>\n                    <li>You can upload your own images now. Images are limited.</li>\n                    <li>\n                        Image order support added. E.g.: now you can upload background image and lower it to the bottom.\n                    </li>\n                    <li>Progress indicators and user messages improvements.</li>\n                </ul>\n\n                <h2>2019-02-24</h2>\n                <ul>\n                    <li>Sidebar created for lighter, cleaner and faster UI.</li>\n                    <li>Zoom added to card set for more flexibility while viewing or editing.</li>\n                </ul>\n                <h2>2019-02-23</h2>\n                <ul>\n                    <li>Text rendering changed and should be working properly now.</li>\n                    <li>Crash with new card set fixed.</li>\n                    <li>Minor UI improvements.</li>\n                </ul>\n                <h2>2019-02-17</h2>\n                <p>Initial public version.</p>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\n\ninterface Props {\n    children: React.ReactNode;\n}\n\ninterface State {\n    hasError: boolean;\n}\n\nexport default class ErrorBoundary extends Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    componentDidCatch() {\n        this.setState({ hasError: true });\n        // You can also log the error to an error reporting service\n        // logErrorToMyService(error, info);\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return (\n                <KawaiiMessage character={Character.Browser} mood=\"ko\">\n                    Something unexpected has happened. If you want this problem to be fixed write me to{' '}\n                    <a href=\"mailto:dalius@ffff.lt\">dalius@ffff.lt</a>.\n                </KawaiiMessage>\n            );\n        }\n        return this.props.children;\n    }\n}\n","import React, { Component } from 'react';\nimport style from './ConfirmedDelete.module.css';\n\ninterface Props {\n    question: string;\n    onDelete: () => void;\n}\n\nexport default class ConfirmedDelete extends Component<Props> {\n    state = {\n        deleteClicked: false,\n    };\n\n    handleRemove = () => {\n        this.setState({ deleteClicked: !this.state.deleteClicked });\n    };\n\n    handleYes = () => {\n        this.setState({ deleteClicked: false });\n        this.props.onDelete();\n    };\n\n    handleNo = () => {\n        this.setState({ deleteClicked: false });\n    };\n\n    render() {\n        const { deleteClicked } = this.state;\n        const { question } = this.props;\n\n        return (\n            <>\n                <i title=\"Remove\" className={`material-icons ${style.button}`} onClick={this.handleRemove}>\n                    remove_circle_outline\n                </i>{' '}\n                {deleteClicked && (\n                    <>\n                        {question}{' '}\n                        <span className={style.answer} onClick={this.handleYes}>\n                            Yes\n                        </span>{' '}\n                        /{' '}\n                        <span className={style.answer} onClick={this.handleNo}>\n                            No\n                        </span>\n                    </>\n                )}\n            </>\n        );\n    }\n}\n","import { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { CardSetsCollection, GameType, IdsArray } from '../types';\nimport {\n    Dispatch,\n    cardSetCreateRequest,\n    cardSetDeleteRequest,\n    gameRenameRequest,\n    messageDisplay,\n    gameCreatePngRequest,\n} from '../actions';\nimport { State, ACTIVITY_CREATING_PNG } from '../reducers';\nimport ConfirmedDelete from './ConfirmedDelete';\nimport EditableTitle from './EditableTitle';\nimport KawaiiMessage, { Character } from './KawaiiMessage';\nimport PDFGenerator from './PDFGenerator';\nimport style from './CardSets.module.css';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated: boolean;\n    activeGame: GameType | null;\n    allIds: IdsArray;\n    byId: CardSetsCollection;\n    isCreatingPng: boolean;\n}\n\ninterface LocalState {\n    cardSetName: string;\n    width: number;\n    height: number;\n    dpi: number;\n}\n\nexport class CardSets extends Component<Props, LocalState> {\n    state: LocalState = {\n        cardSetName: '',\n        width: 63.5,\n        height: 88.9,\n        dpi: 300,\n    };\n\n    handleGameNameChange = (newName: string) => {\n        const { dispatch, activeGame } = this.props;\n        if (activeGame !== null) {\n            dispatch(gameRenameRequest(activeGame.id, newName));\n        }\n    };\n\n    handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ cardSetName: event.target.value });\n    };\n\n    handleWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ width: parseFloat(event.target.value) });\n    };\n\n    handleHeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ height: parseFloat(event.target.value) });\n    };\n\n    handleCreateCardSetClick = () => {\n        const { dispatch, activeGame } = this.props;\n\n        if (activeGame === null) {\n            return;\n        }\n\n        const cardSetName = this.state.cardSetName.trim();\n\n        if (cardSetName) {\n            dispatch(cardSetCreateRequest(cardSetName, this.state.width, this.state.height, activeGame.id));\n        } else {\n            dispatch(messageDisplay('error', 'Card Set name should be non empty.'));\n        }\n    };\n\n    handleCardSetDelete = (cardSetId: string) => {\n        const { dispatch } = this.props;\n        dispatch(cardSetDeleteRequest(cardSetId));\n    };\n\n    handleDpiChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ dpi: parseInt(event.target.value) });\n    };\n\n    handleGenerate = () => {\n        const { dispatch, activeGame } = this.props;\n        const { dpi } = this.state;\n\n        if (activeGame !== null) {\n            dispatch(gameCreatePngRequest(dpi, 'games', activeGame.id));\n        }\n    };\n\n    render() {\n        const { isAuthenticated, activeGame, allIds, byId, isCreatingPng } = this.props;\n        const { dpi } = this.state;\n\n        let cardsets = allIds.map(cardsetId => byId[cardsetId]);\n        cardsets.sort((a, b) => (a.name < b.name ? -1 : 1));\n\n        const cardsetItems = cardsets.map(cardset => (\n            <li key={cardset.id}>\n                <Link to={`/cardset/${cardset.id}`}>{cardset.name}</Link>{' '}\n                <ConfirmedDelete\n                    question=\"Do you really want to delete this card set?\"\n                    onDelete={() => this.handleCardSetDelete(cardset.id)}\n                />\n            </li>\n        ));\n\n        return (\n            isAuthenticated &&\n            activeGame !== null && (\n                <div className={style.cardsets}>\n                    <KawaiiMessage character={Character.Ghost}>\n                        Each game is made from card sets. Card set is collection of cards that share the same properties\n                        but have different text and images.\n                    </KawaiiMessage>\n\n                    <EditableTitle title={activeGame.name} onChange={this.handleGameNameChange} />\n\n                    <ul>{cardsetItems}</ul>\n\n                    <div className=\"form\">\n                        <label htmlFor=\"cardset_name\">Card Set name:</label>\n                        <input\n                            id=\"cardset_name\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            className=\"form-control\"\n                            placeholder=\"Card Set name\"\n                        />\n                        <label htmlFor=\"card_width\">Card width:</label>\n                        <input\n                            id=\"card_width\"\n                            type=\"number\"\n                            min=\"0\"\n                            step=\"0.1\"\n                            onChange={this.handleWidthChange}\n                            className=\"form-control\"\n                            placeholder=\"Card width\"\n                            value={this.state.width}\n                        />\n                        <label htmlFor=\"card_height\">Card height:</label>\n                        <input\n                            id=\"card_height\"\n                            type=\"number\"\n                            min=\"0\"\n                            step=\"0.1\"\n                            onChange={this.handleHeightChange}\n                            className=\"form-control\"\n                            placeholder=\"Card height\"\n                            value={this.state.height}\n                        />\n                        <button onClick={this.handleCreateCardSetClick}>Create Card Set</button>\n                    </div>\n\n                    <KawaiiMessage character={Character.Ghost} mood=\"excited\">\n                        Hint: Poker card size 63.5mm x 88.9mm. Bridge card size 57.15mm x 88.9mm. But you can have cards\n                        of any size.\n                    </KawaiiMessage>\n\n                    <PDFGenerator type=\"games\" id={activeGame.id} withHelp={true} />\n\n                    <div className=\"form\">\n                        Or you can generate PNG files for all the game:\n                        <label htmlFor=\"dpi\">DPI:</label>\n                        <input\n                            id=\"dpi\"\n                            type=\"number\"\n                            min=\"1\"\n                            step=\"1\"\n                            onChange={this.handleDpiChange}\n                            className=\"form-control\"\n                            placeholder=\"DPI\"\n                            value={dpi}\n                        />\n                        <button disabled={isCreatingPng} onClick={this.handleGenerate}>\n                            Generate PNG files\n                        </button>\n                    </div>\n                </div>\n            )\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        activeGame:\n            state.games.active && state.games.byId[state.games.active] ? state.games.byId[state.games.active] : null,\n        allIds: state.cardsets.allIds,\n        byId: state.cardsets.byId,\n        isCreatingPng: (state.games.activity & ACTIVITY_CREATING_PNG) === ACTIVITY_CREATING_PNG,\n    };\n};\n\nexport default connect(mapStateToProps)(CardSets);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, gameSelectRequest } from './actions';\nimport { State } from './reducers';\nimport CardSets from './components/CardSets';\n\ninterface Props {\n    dispatch: Dispatch;\n    match: { params: { id: string } };\n    isAuthenticated: boolean;\n}\n\nexport class GamePage extends Component<Props> {\n    componentDidMount() {\n        const { dispatch, match } = this.props;\n        dispatch(gameSelectRequest(match.params.id, true));\n    }\n\n    render() {\n        return <CardSets />;\n    }\n}\n\nconst mapStateToProps = (state: State) => ({ isAuthenticated: state.auth.isAuthenticated });\n\nexport default connect(mapStateToProps)(GamePage);\n","import React, { Component } from 'react';\n\ninterface Props {\n    onLogin: (creds: { username: string; password: string }) => void;\n    onLoginFailure: (message: string) => void;\n}\n\ninterface LocalState {\n    username: string;\n    password: string;\n}\n\nexport default class Login extends Component<Props, LocalState> {\n    state = {\n        username: '',\n        password: '',\n    };\n\n    handleUsernameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ username: event.target.value });\n    };\n\n    handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ password: event.target.value });\n    };\n\n    handleSubmit = (event: React.FormEvent) => {\n        const username = this.state.username.trim();\n        const password = this.state.password.trim();\n        if (username && password) {\n            const creds = { username, password };\n            this.props.onLogin(creds);\n        } else {\n            this.props.onLoginFailure('Missing username and/or password.');\n        }\n        event.preventDefault();\n    };\n\n    render() {\n        return (\n            <div>\n                <form className=\"form\" onSubmit={this.handleSubmit}>\n                    <input\n                        type=\"text\"\n                        onChange={this.handleUsernameChange}\n                        className=\"form-control\"\n                        placeholder=\"Username\"\n                    />\n                    <input\n                        type=\"password\"\n                        onChange={this.handlePasswordChange}\n                        className=\"form-control\"\n                        placeholder=\"Password\"\n                    />\n                    <input type=\"submit\" value=\"Login\" />\n                </form>\n            </div>\n        );\n    }\n}\n","import { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, loginRequest, messageDisplay } from './actions';\nimport { State } from './reducers';\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\nimport Login from './components/Login';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated: boolean;\n}\n\nexport class LoginPage extends Component<Props> {\n    render() {\n        const { dispatch, isAuthenticated } = this.props;\n\n        return (\n            <div className=\"App\">\n                {!isAuthenticated && (\n                    <>\n                        <KawaiiMessage character={Character.Ghost}>\n                            Please enter your credentials to login. If you don't have account yet then you can create\n                            one here: <a href=\"/signup\">Sign-up</a>.\n                        </KawaiiMessage>\n\n                        <Login\n                            onLogin={creds => dispatch(loginRequest(creds))}\n                            onLoginFailure={msg => dispatch(messageDisplay('error', msg))}\n                        />\n                    </>\n                )}\n                {isAuthenticated && <Redirect to=\"/\" />}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => ({ isAuthenticated: state.auth.isAuthenticated });\n\nexport default connect(mapStateToProps)(LoginPage);\n","import { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, gameCreateRequest, gameDeleteRequest, messageDisplay } from '../actions';\nimport { GamesCollection, IdsArray } from '../types';\nimport { State } from '../reducers';\nimport ConfirmedDelete from './ConfirmedDelete';\nimport KawaiiMessage, { Character } from './KawaiiMessage';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated: boolean;\n    allIds: IdsArray;\n    byId: GamesCollection;\n}\n\ninterface LocalState {\n    gameName: string;\n}\n\nexport class Games extends Component<Props, LocalState> {\n    state: LocalState = {\n        gameName: '',\n    };\n\n    handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ gameName: event.target.value });\n    };\n\n    handleCreateGameClick = () => {\n        const { dispatch } = this.props;\n\n        const gamename = this.state.gameName.trim();\n        if (gamename) {\n            dispatch(gameCreateRequest(gamename));\n        } else {\n            dispatch(messageDisplay('error', 'Game name should be non empty.'));\n        }\n    };\n\n    handleGameDelete = (gameId: string) => {\n        const { dispatch } = this.props;\n        dispatch(gameDeleteRequest(gameId));\n    };\n\n    render() {\n        const { isAuthenticated, allIds, byId } = this.props;\n\n        const games = allIds.map(gameId => byId[gameId]);\n        games.sort((a, b) => (a.name < b.name ? -1 : 1));\n\n        const gameItems = games.map(game => (\n            <li key={game.id}>\n                <Link to={`/game/${game.id}`}>{game.name}</Link>{' '}\n                <ConfirmedDelete\n                    question=\"Do you really want to delete this game?\"\n                    onDelete={() => this.handleGameDelete(game.id)}\n                />\n            </li>\n        ));\n\n        return (\n            isAuthenticated && (\n                <div>\n                    <KawaiiMessage character={Character.Ghost}>\n                        {allIds.length === 0 && (\n                            <>Here you can create your games and see list of your games when you have some.</>\n                        )}\n                        {allIds.length > 0 && (\n                            <>Here you can see a list of your games or you can create even more games.</>\n                        )}\n                    </KawaiiMessage>\n\n                    <ul>{gameItems}</ul>\n                    <div className=\"form\">\n                        <label htmlFor=\"game_name\">Game name:</label>\n                        <input\n                            id=\"game_name\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            className=\"form-control\"\n                            placeholder=\"Game name\"\n                        />\n                        <button onClick={this.handleCreateGameClick}>Create Game</button>\n                    </div>\n                </div>\n            )\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        allIds: state.games.allIds,\n        byId: state.games.byId,\n    };\n};\n\nexport default connect(mapStateToProps)(Games);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { State } from './reducers';\nimport Games from './components/Games';\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\n\ninterface Props {\n    isAuthenticated: boolean;\n}\n\nexport class Main extends Component<Props> {\n    render() {\n        if (this.props.isAuthenticated) {\n            return <Games />;\n        } else {\n            return (\n                <KawaiiMessage character={Character.Ghost}>\n                    Hey! Here you can create your own card game but you need to <a href=\"/login\">Login</a> or{' '}\n                    <a href=\"/signup\">Sign-up</a> first.\n                </KawaiiMessage>\n            );\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n    };\n};\n\nexport default connect(mapStateToProps)(Main);\n","import { State } from './reducers';\n\nexport const getActiveGame = (state: State) => (state.games.active ? state.games.byId[state.games.active] : null);\n\nexport const getActiveCardSet = (state: State) =>\n    state.cardsets.active ? state.cardsets.byId[state.cardsets.active] : null;\n","import React from 'react';\n\ninterface Props {\n    onLogout: () => void;\n}\n\nfunction Logout(props: Props) {\n    return (\n        <button onClick={() => props.onLogout()} className=\"btn btn-primary\">\n            Logout\n        </button>\n    );\n}\n\nexport default Logout;\n","import { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { CardSetType, GameType, MessageType } from '../types';\nimport { Dispatch, logoutRequest } from '../actions';\nimport { State } from '../reducers';\nimport { getActiveCardSet, getActiveGame } from '../selectors';\nimport Loader from './Loader';\nimport Logout from './Logout';\nimport style from './Navbar.module.css';\n\ninterface OwnProps {\n    isAuthenticated: boolean;\n}\n\ninterface StateProps {\n    messages: MessageType[];\n    activeGame: GameType | null;\n    activeCardSet: CardSetType | null;\n}\n\ninterface DispatchProps {\n    dispatch: Dispatch;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nexport class Navbar extends Component<Props> {\n    render() {\n        const { dispatch, isAuthenticated, messages, activeGame, activeCardSet } = this.props;\n\n        return (\n            <nav>\n                <div id=\"messages\" className={style.messages}>\n                    <ul>\n                        {messages.map(m => (\n                            <li key={m.id} className={m.type === 'error' ? style.error : style.info}>\n                                {m.type === 'error' && (\n                                    <>\n                                        <i className=\"material-icons\">error</i> {m.text}\n                                    </>\n                                )}\n                                {m.type === 'info' && (\n                                    <>\n                                        <i className=\"material-icons\">info</i> {m.text}\n                                    </>\n                                )}\n                                {m.type === 'progress' && (\n                                    <>\n                                        <Loader small={true} /> {m.text}\n                                    </>\n                                )}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n                <div>\n                    <h1 className={style.header}>\n                        <Link to=\"/\">CARD-A-MON</Link>\n                    </h1>\n                    <div>\n                        <ul className={style.menu}>\n                            {isAuthenticated && (\n                                <>\n                                    <li>\n                                        <Link to=\"/\">Main</Link>\n                                    </li>\n                                    {activeGame && (\n                                        <li>\n                                            <Link to={`/game/${activeGame.id}`}>Game \"{activeGame.name}\"</Link>\n                                        </li>\n                                    )}\n                                    {activeCardSet && (\n                                        <li>\n                                            <Link to={`/cardset/${activeCardSet.id}`}>\n                                                Card Set \"{activeCardSet.name}\"\n                                            </Link>\n                                        </li>\n                                    )}\n                                </>\n                            )}\n                            <li>\n                                <Link to=\"/changelog\">Changelog</Link>\n                            </li>\n                            <li>\n                                <Link to=\"/about\">About</Link>\n                            </li>\n                            {isAuthenticated && (\n                                <li>\n                                    <Logout onLogout={() => dispatch(logoutRequest())} />\n                                </li>\n                            )}\n                            {!isAuthenticated && (\n                                <>\n                                    <li>\n                                        <Link to=\"/login\">Login</Link>\n                                    </li>\n                                    <li>\n                                        <Link to=\"/signup\">Sign-up</Link>\n                                    </li>\n                                </>\n                            )}\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        messages: state.message.messages,\n        activeGame: getActiveGame(state),\n        activeCardSet: getActiveCardSet(state),\n    };\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, State>(mapStateToProps)(Navbar);\n","import React, { Component } from 'react';\n\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\n\nexport default class NotFoundPage extends Component {\n    render() {\n        return (\n            <KawaiiMessage character={Character.Browser} mood=\"sad\">\n                There is nothing here.\n            </KawaiiMessage>\n        );\n    }\n}\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Credentials } from '../types';\nimport { Dispatch, messageDisplay } from '../actions';\n\ninterface Props {\n    dispatch: Dispatch;\n    onSignUp: (cred: Credentials) => void;\n}\n\nexport class SignUp extends Component<Props> {\n    state = {\n        username: '',\n        password: '',\n        passwordRepeat: '',\n    };\n\n    handleSubmit(event: React.FormEvent) {\n        const { dispatch, onSignUp } = this.props;\n\n        if (this.state.password !== this.state.passwordRepeat) {\n            dispatch(messageDisplay('error', 'Passwords do not match.'));\n        } else {\n            const creds = {\n                username: this.state.username.trim(),\n                password: this.state.password.trim(),\n            };\n            onSignUp(creds);\n        }\n\n        event.preventDefault();\n    }\n\n    handleUsernameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ username: event.target.value });\n    };\n\n    handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ password: event.target.value });\n    };\n\n    handlePasswordRepeatChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ passwordRepeat: event.target.value });\n    };\n\n    render() {\n        return (\n            <div>\n                <form className=\"form\" onSubmit={event => this.handleSubmit(event)}>\n                    <input\n                        type=\"text\"\n                        onChange={this.handleUsernameChange}\n                        className=\"form-control\"\n                        placeholder=\"Username\"\n                    />\n                    <input\n                        type=\"password\"\n                        onChange={this.handlePasswordChange}\n                        className=\"form-control\"\n                        placeholder=\"Password\"\n                    />\n                    <input\n                        type=\"password\"\n                        onChange={this.handlePasswordRepeatChange}\n                        className=\"form-control\"\n                        placeholder=\"Repeat password here\"\n                    />\n                    <input type=\"submit\" value=\"Sign Up\" />\n                </form>\n            </div>\n        );\n    }\n}\nexport default connect()(SignUp);\n","import { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, signupRequest } from './actions';\nimport { State } from './reducers';\nimport KawaiiMessage, { Character } from './components/KawaiiMessage';\nimport SignUp from './components/SignUp';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated: boolean;\n}\n\nexport class SignUpPage extends Component<Props> {\n    render() {\n        const { dispatch, isAuthenticated } = this.props;\n\n        return (\n            <div className=\"App\">\n                {!isAuthenticated && (\n                    <>\n                        <KawaiiMessage character={Character.Ghost}>\n                            Create your user here. Instead of user name you can use your e-mail. If you forget your\n                            password then you can send me e-mail (I will not send you any e-mails without your consent).\n                            If you use regular user name and forget your password then you will not be able to access\n                            your account.\n                        </KawaiiMessage>\n\n                        <SignUp onSignUp={creds => dispatch(signupRequest(creds))} />\n                    </>\n                )}\n                {isAuthenticated && <Redirect to=\"/\" />}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => ({ isAuthenticated: state.auth.isAuthenticated });\n\nexport default connect(mapStateToProps)(SignUpPage);\n","import './App.css';\n\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport { Dispatch, initRequest } from './actions';\nimport { State } from './reducers';\nimport AboutPage from './AboutPage';\nimport CardSetPage from './CardSetPage';\nimport ChangelogPage from './ChangelogPage';\nimport ErrorBoundry from './ErrorBoundry';\nimport GamePage from './GamePage';\nimport LoginPage from './LoginPage';\nimport Main from './Main';\nimport Navbar from './components/Navbar';\nimport NotFoundPage from './NotFoundPage';\nimport SignUpPage from './SignUpPage';\n\ninterface Props {\n    dispatch: Dispatch;\n    isAuthenticated: boolean;\n}\n\nexport class App extends Component<Props> {\n    componentDidMount() {\n        this.props.dispatch(initRequest());\n    }\n\n    render() {\n        const { isAuthenticated } = this.props;\n        return (\n            <Router>\n                <div className=\"App\">\n                    <ErrorBoundry>\n                        <Navbar isAuthenticated={isAuthenticated} />\n                        <Switch>\n                            <Route exact path=\"/\" component={Main} />\n                            <Route exact path=\"/login\" component={LoginPage} />\n                            <Route exact path=\"/signup\" component={SignUpPage} />\n                            <Route exact path=\"/game/:id\" component={GamePage} />\n                            <Route exact path=\"/cardset/:id\" component={CardSetPage} />\n                            <Route exact path=\"/changelog\" component={ChangelogPage} />\n                            <Route exact path=\"/about\" component={AboutPage} />\n                            <Route component={NotFoundPage} />\n                        </Switch>\n                        <div className=\"App-footer\">Dalius Dobravolskas &copy; {new Date().getFullYear()}</div>\n                    </ErrorBoundry>\n                </div>\n            </Router>\n        );\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    const { auth } = state;\n    const { isAuthenticated } = auth;\n\n    return {\n        isAuthenticated,\n    };\n};\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ninterface Config {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import './index.css';\n\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { createAppStore } from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createAppStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { rootSaga } from './sagas';\nimport reducers from './reducers';\n\nexport function createAppStore() {\n    const sagaMiddleware = createSagaMiddleware();\n    const store = createStore(\n        reducers,\n        // @ts-ignore: __REDUX_DEVTOOLS_EXTENSION__ does not exists on window\n        window.__REDUX_DEVTOOLS_EXTENSION__\n            ? compose(\n                  applyMiddleware(sagaMiddleware),\n                  // @ts-ignore: __REDUX_DEVTOOLS_EXTENSION__ does not exists on window\n                  window.__REDUX_DEVTOOLS_EXTENSION__(),\n              )\n            : applyMiddleware(sagaMiddleware),\n    );\n    sagaMiddleware.run(rootSaga);\n    return store;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldcontroller\":\"FieldController_fieldcontroller__3ifWc\",\"fieldcontrolleractiveplaceholder\":\"FieldController_fieldcontrolleractiveplaceholder__3XZOP\",\"fieldcontrolleractive\":\"FieldController_fieldcontrolleractive__3fSLl\",\"controller\":\"FieldController_controller__VCesw\",\"touchactivated\":\"FieldController_touchactivated__16s2w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__3wMPS\",\"controls\":\"Sidebar_controls__3VVbM\",\"active\":\"Sidebar_active__4ldTH\",\"view\":\"Sidebar_view__-0BeZ\",\"hidden\":\"Sidebar_hidden__3xh5q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Navbar_header__FZp4U\",\"menu\":\"Navbar_menu__1JWvN\",\"messages\":\"Navbar_messages__h_dLG\",\"error\":\"Navbar_error__3urZl\",\"info\":\"Navbar_info__1h4Zc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fixed\":\"Loader_fixed__3q8O9\",\"relative\":\"Loader_relative__1lapZ\",\"loader\":\"Loader_loader__1ZCGC\",\"small\":\"Loader_small__3TZen\",\"loader-small\":\"Loader_loader-small__3PPAu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarDetails_view__29V31\",\"disabled\":\"SidebarDetails_disabled__1htJF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardset\":\"CardSet_cardset__21qjI\",\"cardsetview\":\"CardSet_cardsetview__1rqd1\",\"sidebar\":\"CardSet_sidebar__3y8_T\",\"createCard\":\"CardSet_createCard__2bOiw\"};","module.exports = __webpack_public_path__ + \"static/media/resize.0548e063.svg\";","module.exports = __webpack_public_path__ + \"static/media/rotate.470ffe2e.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"over\":\"ImageField_over__3Q9AT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1Ltkv\",\"title\":\"Card_title__1KiIj\",\"active\":\"Card_active__XOmoJ\",\"disabled\":\"Card_disabled__2Ob5l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"SidebarImage_view__2LKQM\",\"disabled\":\"SidebarImage_disabled__1tNhN\",\"images\":\"SidebarImage_images__3zDK2\"};"],"sourceRoot":""}